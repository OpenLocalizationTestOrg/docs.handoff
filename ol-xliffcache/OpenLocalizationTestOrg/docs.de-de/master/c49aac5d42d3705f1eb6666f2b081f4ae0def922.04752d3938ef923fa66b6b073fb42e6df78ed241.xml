{"content":"---\ntitle: \"Usage of Serialization Binder | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: ab46c087-200c-45bf-9c95-5a6cda6e8b98\ncaps.latest.revision: 5\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Usage of Serialization Binder\nThis sample shows how to use the <xref:System.Runtime.Serialization.SerializationBinder> to change the version of a generic type when it is serialized.  \n  \n## Demonstrates  \n <xref:System.Runtime.Serialization.SerializationBinder>, <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>  \n  \n## Discussion  \n This sample shows how two entities that are targeting different versions of the [!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)] can communicate using the binary formatter and the serialization binder.  \n  \n The development of this sample has been done using .NET Remoting. The sample consists of a server targeting [!INCLUDE[netfx40_long](../../../../includes/netfx40-long-md.md)], which implements a contract with generic types, and two different clients, one targeting [!INCLUDE[dnprdnlong](../../../../includes/dnprdnlong-md.md)] and another targeting [!INCLUDE[netfx40_short](../../../../includes/netfx40-short-md.md)].  \n  \n The server attaches a <xref:System.Runtime.Serialization.SerializationBinder> to the binary formatter to be able to change the version of the types accordingly on serialization, so both clients can deserialize those types properly.  \n  \n#### To set up, build and run the sample  \n  \n1.  To execute the client, right-click the solution, SBGenericsVTS (6 projects) and then select **Properties**.  \n  \n2.  In **Common Properties**, select **Startup Project**, then select **Multiple Startup Projects**.  \n  \n3.  Select **Server** first, then **Client20** and then **Client40**. Select the **Start** action to these three projects and leave the rest set to **None**.  \n  \n4.  Click **OK** and then press F5 to run the sample.","nodes":[{"pos":[12,58],"content":"Usage of Serialization Binder | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Usage of Serialization Binder | Microsoft Docs","pos":[0,46]}]},{"pos":[356,385],"content":"Usage of Serialization Binder","linkify":"Usage of Serialization Binder","nodes":[{"content":"Usage of Serialization Binder","pos":[0,29]}]},{"content":"This sample shows how to use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> to change the version of a generic type when it is serialized.","pos":[386,537],"source":"This sample shows how to use the <xref:System.Runtime.Serialization.SerializationBinder> to change the version of a generic type when it is serialized."},{"pos":[546,558],"content":"Demonstrates","linkify":"Demonstrates","nodes":[{"content":"Demonstrates","pos":[0,12]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>","pos":[562,688],"source":"<xref:System.Runtime.Serialization.SerializationBinder>, <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>"},{"pos":[697,707],"content":"Discussion","linkify":"Discussion","nodes":[{"content":"Discussion","pos":[0,10]}]},{"pos":[711,927],"content":"This sample shows how two entities that are targeting different versions of the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> can communicate using the binary formatter and the serialization binder.","source":"This sample shows how two entities that are targeting different versions of the [!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)] can communicate using the binary formatter and the serialization binder."},{"content":"The development of this sample has been done using .NET Remoting.","pos":[934,999]},{"content":"The sample consists of a server targeting <ph id=\"ph1\">[!INCLUDE[netfx40_long](../../../../includes/netfx40-long-md.md)]</ph>, which implements a contract with generic types, and two different clients, one targeting <ph id=\"ph2\">[!INCLUDE[dnprdnlong](../../../../includes/dnprdnlong-md.md)]</ph> and another targeting <ph id=\"ph3\">[!INCLUDE[netfx40_short](../../../../includes/netfx40-short-md.md)]</ph>.","pos":[1000,1350],"source":" The sample consists of a server targeting [!INCLUDE[netfx40_long](../../../../includes/netfx40-long-md.md)], which implements a contract with generic types, and two different clients, one targeting [!INCLUDE[dnprdnlong](../../../../includes/dnprdnlong-md.md)] and another targeting [!INCLUDE[netfx40_short](../../../../includes/netfx40-short-md.md)]."},{"content":"The server attaches a <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> to the binary formatter to be able to change the version of the types accordingly on serialization, so both clients can deserialize those types properly.","pos":[1357,1588],"source":"The server attaches a <xref:System.Runtime.Serialization.SerializationBinder> to the binary formatter to be able to change the version of the types accordingly on serialization, so both clients can deserialize those types properly."},{"pos":[1599,1634],"content":"To set up, build and run the sample","linkify":"To set up, build and run the sample","nodes":[{"content":"To set up, build and run the sample","pos":[0,35]}]},{"pos":[1644,1751],"content":"To execute the client, right-click the solution, SBGenericsVTS (6 projects) and then select <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept>.","source":"To execute the client, right-click the solution, SBGenericsVTS (6 projects) and then select **Properties**."},{"pos":[1761,1857],"content":"In <bpt id=\"p1\">**</bpt>Common Properties<ept id=\"p1\">**</ept>, select <bpt id=\"p2\">**</bpt>Startup Project<ept id=\"p2\">**</ept>, then select <bpt id=\"p3\">**</bpt>Multiple Startup Projects<ept id=\"p3\">**</ept>.","source":"In **Common Properties**, select **Startup Project**, then select **Multiple Startup Projects**."},{"content":"Select <bpt id=\"p1\">**</bpt>Server<ept id=\"p1\">**</ept> first, then <bpt id=\"p2\">**</bpt>Client20<ept id=\"p2\">**</ept> and then <bpt id=\"p3\">**</bpt>Client40<ept id=\"p3\">**</ept>.","pos":[1867,1932],"source":"Select **Server** first, then **Client20** and then **Client40**."},{"content":"Select the <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> action to these three projects and leave the rest set to <bpt id=\"p2\">**</bpt>None<ept id=\"p2\">**</ept>.","pos":[1933,2020],"source":" Select the **Start** action to these three projects and leave the rest set to **None**."},{"pos":[2030,2079],"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> and then press F5 to run the sample.","source":"Click **OK** and then press F5 to run the sample."}]}