{"content":"---\ntitle: \"'=' expected (Let or Set assignment)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc32020\"\n  - \"vbc32020\"\nhelpviewer_keywords: \n  - \"BC32020\"\nms.assetid: 1b12f082-e502-4524-9326-b9b372670243\n---\n# '=' expected (Let or Set assignment)\nA `Let` or `Set` assignment statement does not include an equal sign (`=`).  \n  \n The `Let` and `Set` assignment statements are not supported in the current version of Visual Basic. The compiler can determine the type of assignment from the data type of the programming element that is to receive the value. A *value type* assignment replaces the `Let` statement, and a *reference type* assignment replaces the former `Set` statement.  \n  \n The [Set Statement](../../visual-basic/language-reference/statements/set-statement.md) is used in property definitions and has no relation to the `Set` assignment statement.  \n  \n **Error ID:** BC32020  \n  \n## To correct this error  \n  \n-   Use a standard assignment statement, including an equal sign (`=`) and a value to be assigned to the variable or property.  \n  \n## See also\n\n- [Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)\n- [Assignment operators (Visual Basic)](~/docs/visual-basic/language-reference/operators/assignment-operators.md)\n","nodes":[{"pos":[4,197],"embed":true,"restype":"x-metadata","content":"title: \"'=' expected (Let or Set assignment)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc32020\"\n  - \"vbc32020\"\nhelpviewer_keywords: \n  - \"BC32020\"\nms.assetid: 1b12f082-e502-4524-9326-b9b372670243","nodes":[{"content":"'=' expected (Let or Set assignment)","nodes":[{"pos":[0,36],"content":"'=' expected (Let or Set assignment)","nodes":[{"content":"'=' expected (Let or Set assignment)","pos":[0,36]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[204,240],"content":"'=' expected (Let or Set assignment)","linkify":"'=' expected (Let or Set assignment)","nodes":[{"content":"'=' expected (Let or Set assignment)","pos":[0,36]}]},{"pos":[241,316],"content":"A <ph id=\"ph1\">`Let`</ph> or <ph id=\"ph2\">`Set`</ph> assignment statement does not include an equal sign (<ph id=\"ph3\">`=`</ph>).","source":"A `Let` or `Set` assignment statement does not include an equal sign (`=`)."},{"content":"The <ph id=\"ph1\">`Let`</ph> and <ph id=\"ph2\">`Set`</ph> assignment statements are not supported in the current version of Visual Basic.","pos":[323,422],"source":"The `Let` and `Set` assignment statements are not supported in the current version of Visual Basic."},{"content":"The compiler can determine the type of assignment from the data type of the programming element that is to receive the value.","pos":[423,548]},{"content":"A <bpt id=\"p1\">*</bpt>value type<ept id=\"p1\">*</ept> assignment replaces the <ph id=\"ph1\">`Let`</ph> statement, and a <bpt id=\"p2\">*</bpt>reference type<ept id=\"p2\">*</ept> assignment replaces the former <ph id=\"ph2\">`Set`</ph> statement.","pos":[549,675],"source":" A *value type* assignment replaces the `Let` statement, and a *reference type* assignment replaces the former `Set` statement."},{"pos":[682,855],"content":"The <bpt id=\"p1\">[</bpt>Set Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/set-statement.md)</ept> is used in property definitions and has no relation to the <ph id=\"ph1\">`Set`</ph> assignment statement.","source":"The [Set Statement](../../visual-basic/language-reference/statements/set-statement.md) is used in property definitions and has no relation to the `Set` assignment statement."},{"pos":[862,883],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32020","source":"**Error ID:** BC32020"},{"pos":[892,913],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[923,1045],"content":"Use a standard assignment statement, including an equal sign (<ph id=\"ph1\">`=`</ph>) and a value to be assigned to the variable or property.","source":"Use a standard assignment statement, including an equal sign (`=`) and a value to be assigned to the variable or property."},{"pos":[1054,1062],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1066,1201],"content":"<bpt id=\"p1\">[</bpt>Value Types and Reference Types<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept>","source":"[Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)"},{"pos":[1204,1315],"content":"<bpt id=\"p1\">[</bpt>Assignment operators (Visual Basic)<ept id=\"p1\">](~/docs/visual-basic/language-reference/operators/assignment-operators.md)</ept>","source":"[Assignment operators (Visual Basic)](~/docs/visual-basic/language-reference/operators/assignment-operators.md)"}]}