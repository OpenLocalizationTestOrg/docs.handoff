{"content":"---\ntitle: \"How to: Create an Activity | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: c09b1e99-21b5-4d96-9c04-ec31db3f4436\ncaps.latest.revision: 39\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Create an Activity\nActivities are the core unit of behavior in [!INCLUDE[wf1](../../../includes/wf1-md.md)]. The execution logic of an activity can be implemented in managed code or it can be implemented by using other activities. This topic demonstrates how to create two activities. The first activity is a simple activity that uses code to implement its execution logic. The implementation of the second activity is defined by using other activities. These activities are used in following steps in the tutorial.  \n  \n> [!NOTE]\n>  To download a completed version of the tutorial, see [Windows Workflow Foundation (WF45) - Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkID=248976).  \n  \n### To create the activity library project  \n  \n1.  Open [!INCLUDE[vs_current_long](../../../includes/vs-current-long-md.md)] and choose **New**,  **Project** from the **File** menu.  \n  \n2.  Expand the **Other Project Types** node in the **Installed**, **Templates** list and select **Visual Studio Solutions**.  \n  \n3.  Select **Blank Solution** from the **Visual Studio Solutions** list. Ensure that **.NET Framework 4.5** is selected in the .NET Framework version drop-down list. Type `WF45GettingStartedTutorial` in the **Name** box and then click **OK**.  \n  \n4.  Right-click **WF45GettingStartedTutorial** in **Solution Explorer** and choose **Add**, **New Project**.  \n  \n    > [!TIP]\n    >  If the **Solution Explorer** window is not displayed, select **Solution Explorer** from the **View** menu.  \n  \n5.  In the **Installed** node, select **Visual C#**, **Workflow** (or **Visual Basic**, **Workflow**). Ensure that **.NET Framework 4.5** is selected in the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)] version drop-down list. Select **Activity Library** from the **Workflow** list. Type `NumberGuessWorkflowActivities` in the **Name** box and then click **OK**.  \n  \n    > [!NOTE]\n    >  Depending on which programming language is configured as the primary language in [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)], the **Visual C#** or **Visual Basic** node may be under the **Other Languages** node in the **Installed** node.  \n  \n6.  Right-click **Activity1.xaml** in **Solution Explorer** and choose **Delete**. Click **OK** to confirm.  \n  \n### To create the ReadInt activity  \n  \n1.  Choose **Add New Item** from the **Project** menu.  \n  \n2.  In the **Installed**, **Common Items** node, select **Workflow**. Select **Code Activity** from the **Workflow** list.  \n  \n3.  Type `ReadInt` into the **Name** box and then click **Add**.  \n  \n4.  Replace the existing `ReadInt` definition with the following definition.  \n  \n     [!code-csharp[CFX_WF_GettingStarted#1](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/readint.cs#1)]\n     [!code-vb[CFX_WF_GettingStarted#1](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/readint.vb#1)]  \n  \n    > [!NOTE]\n    >  The `ReadInt` activity derives from <xref:System.Activities.NativeActivity%601> instead of <xref:System.Activities.CodeActivity>, which is the default for the code activity template. <xref:System.Activities.CodeActivity%601> can be used if the activity provides a single result, which is exposed through the <xref:System.Activities.Activity%601.Result%2A> argument, but <xref:System.Activities.CodeActivity%601> does not support the use of bookmarks, so <xref:System.Activities.NativeActivity%601> is used.  \n  \n### To create the Prompt activity  \n  \n1.  Press CTRL+SHIFT+B to build the project. Building the project enables the `ReadInt` activity in this project to be used to build the custom activity from this step.  \n  \n2.  Choose **Add New Item** from the **Project** menu.  \n  \n3.  In the **Installed**, **Common Items** node, select **Workflow**. Select **Activity** from the **Workflow** list.  \n  \n4.  Type `Prompt` into the **Name** box and then click **Add**.  \n  \n5.  Double-click **Prompt.xaml** in **Solution Explorer** to display it in the designer if it is not already displayed.  \n  \n6.  Click **Arguments** in the lower-left side of the activity designer to display the **Arguments** pane.  \n  \n7.  Click **Create Argument**.  \n  \n8.  Type `BookmarkName` into the **Name** box, select **In** from the **Direction** drop-down list, select **String** from the **Argument type** drop-down list, and then press ENTER to save the argument.  \n  \n9. Click **Create Argument**.  \n  \n10. Type `Result` into the **Name** box that is underneath the newly added `BookmarkName` argument, select **Out** from the **Direction** drop-down list, select **Int32** from the **Argument type** drop-down list, and then press ENTER.  \n  \n11. Click **Create Argument**.  \n  \n12. Type `Text` into the **Name** box, select **In** from the **Direction** drop-down list, select **String** from the **Argument type** drop-down list, and then press ENTER to save the argument.  \n  \n     These three arguments are bound to the corresponding arguments of the <xref:System.Activities.Statements.WriteLine> and `ReadInt` activities that are added to the `Prompt` activity in the following steps.  \n  \n13. Click **Arguments** in the lower-left side of the activity designer to close the **Arguments** pane.  \n  \n14. Drag a **Sequence** activity from the **Control Flow** section of the **Toolbox** and drop it onto the **Drop activity here** label of the **Prompt** activity designer.  \n  \n    > [!TIP]\n    >  If the **Toolbox** window is not displayed, select **Toolbox** from the **View** menu.  \n  \n15. Drag a **WriteLine** activity from the **Primitives** section of the **Toolbox** and drop it onto the **Drop activity here** label of the **Sequence** activity.  \n  \n16. Bind the **Text** argument of the **WriteLine** activity to the **Text** argument of the **Prompt** activity by typing `Text` into the **Enter a C# expression** or **Enter a VB expression** box in the **Properties** window, and then press the TAB key two times. This dismisses the IntelliSense list members window and saves the property value by moving the selection off the property. This property can also be set by typing `Text` into the **Enter a C# expression** or **Enter a VB expression** box on the activity itself.  \n  \n    > [!TIP]\n    >  If the **Properties Window** is not displayed, select **Properties Window** from the **View** menu.  \n  \n17. Drag a **ReadInt** activity from the **NumberGuessWorkflowActivities** section of the **Toolbox** and drop it in the **Sequence** activity so that it follows the **WriteLine** activity.  \n  \n18. Bind the **BookmarkName** argument of the **ReadInt** activity to the **BookmarkName** argument of the **Prompt** activity by typing `BookmarkName` into the **Enter a VB expression** box to the right of the **BookmarkName** argument in the **Properties Window**, and then press the TAB key two times to close the IntelliSense list members window and save the property.  \n  \n19. Bind the **Result** argument of the **ReadInt** activity to the **Result** argument of the **Prompt** activity by typing `Result` into the **Enter a VB expression** box to the right of the **Result** argument in the **Properties Window**, and then press the TAB key two times.  \n  \n20. Press CTRL+SHIFT+B to build the solution.  \n  \n     For instructions on how to create a workflow by using these activities, see the next step in the tutorial, [How to: Create a Workflow](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md).  \n  \n## See Also  \n <xref:System.Activities.CodeActivity>   \n <xref:System.Activities.NativeActivity%601>   \n [Designing and Implementing Custom Activities](../../../docs/framework/windows-workflow-foundation/designing-and-implementing-custom-activities.md)   \n [Getting Started Tutorial](../../../docs/framework/windows-workflow-foundation/getting-started-tutorial.md)   \n [How to: Create a Workflow](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)   \n [Using the ExpressionTextBox in a Custom Activity Designer](../../../docs/framework/windows-workflow-foundation/samples/using-the-expressiontextbox-in-a-custom-activity-designer.md)","nodes":[{"pos":[4,314],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create an Activity | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: c09b1e99-21b5-4d96-9c04-ec31db3f4436\ncaps.latest.revision: 39\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","nodes":[{"content":"How to: Create an Activity | Microsoft Docs","nodes":[{"pos":[0,43],"content":"How to: Create an Activity | Microsoft Docs","nodes":[{"content":"How to: Create an Activity | Microsoft Docs","pos":[0,43]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[321,347],"content":"How to: Create an Activity","linkify":"How to: Create an Activity","nodes":[{"content":"How to: Create an Activity","pos":[0,26]}]},{"content":"Activities are the core unit of behavior in <ph id=\"ph1\">[!INCLUDE[wf1](../../../includes/wf1-md.md)]</ph>.","pos":[348,437],"source":"Activities are the core unit of behavior in [!INCLUDE[wf1](../../../includes/wf1-md.md)]."},{"content":"The execution logic of an activity can be implemented in managed code or it can be implemented by using other activities.","pos":[438,559]},{"content":"This topic demonstrates how to create two activities.","pos":[560,613]},{"content":"The first activity is a simple activity that uses code to implement its execution logic.","pos":[614,702]},{"content":"The implementation of the second activity is defined by using other activities.","pos":[703,782]},{"content":"These activities are used in following steps in the tutorial.","pos":[783,844]},{"pos":[852,1027],"content":"[!NOTE]\n To download a completed version of the tutorial, see [Windows Workflow Foundation (WF45) - Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkID=248976).","leadings":["","> "],"nodes":[{"content":"To download a completed version of the tutorial, see <bpt id=\"p1\">[</bpt>Windows Workflow Foundation (WF45) - Getting Started Tutorial<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=248976)</ept>.","pos":[9,173],"source":"To download a completed version of the tutorial, see [Windows Workflow Foundation (WF45) - Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkID=248976)."}]},{"pos":[1037,1075],"content":"To create the activity library project","linkify":"To create the activity library project","nodes":[{"content":"To create the activity library project","pos":[0,38]}]},{"pos":[1085,1215],"content":"Open <ph id=\"ph1\">[!INCLUDE[vs_current_long](../../../includes/vs-current-long-md.md)]</ph> and choose <bpt id=\"p1\">**</bpt>New<ept id=\"p1\">**</ept>,  <bpt id=\"p2\">**</bpt>Project<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>File<ept id=\"p3\">**</ept> menu.","source":"Open [!INCLUDE[vs_current_long](../../../includes/vs-current-long-md.md)] and choose **New**,  **Project** from the **File** menu."},{"pos":[1225,1345],"content":"Expand the <bpt id=\"p1\">**</bpt>Other Project Types<ept id=\"p1\">**</ept> node in the <bpt id=\"p2\">**</bpt>Installed<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Templates<ept id=\"p3\">**</ept> list and select <bpt id=\"p4\">**</bpt>Visual Studio Solutions<ept id=\"p4\">**</ept>.","source":"Expand the **Other Project Types** node in the **Installed**, **Templates** list and select **Visual Studio Solutions**."},{"content":"Select <bpt id=\"p1\">**</bpt>Blank Solution<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Visual Studio Solutions<ept id=\"p2\">**</ept> list.","pos":[1355,1423],"source":"Select **Blank Solution** from the **Visual Studio Solutions** list."},{"content":"Ensure that <bpt id=\"p1\">**</bpt>.NET Framework 4.5<ept id=\"p1\">**</ept> is selected in the .NET Framework version drop-down list.","pos":[1424,1516],"source":" Ensure that **.NET Framework 4.5** is selected in the .NET Framework version drop-down list."},{"content":"Type <ph id=\"ph1\">`WF45GettingStartedTutorial`</ph> in the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box and then click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","pos":[1517,1593],"source":" Type `WF45GettingStartedTutorial` in the **Name** box and then click **OK**."},{"pos":[1603,1707],"content":"Right-click <bpt id=\"p1\">**</bpt>WF45GettingStartedTutorial<ept id=\"p1\">**</ept> in <bpt id=\"p2\">**</bpt>Solution Explorer<ept id=\"p2\">**</ept> and choose <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>New Project<ept id=\"p4\">**</ept>.","source":"Right-click **WF45GettingStartedTutorial** in **Solution Explorer** and choose **Add**, **New Project**."},{"pos":[1719,1839],"content":"[!TIP]\nIf the **Solution Explorer** window is not displayed, select **Solution Explorer** from the **View** menu.","leadings":["","    >  "],"nodes":[{"content":"If the <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> window is not displayed, select <bpt id=\"p2\">**</bpt>Solution Explorer<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>View<ept id=\"p3\">**</ept> menu.","pos":[7,113],"source":"If the **Solution Explorer** window is not displayed, select **Solution Explorer** from the **View** menu."}]},{"content":"In the <bpt id=\"p1\">**</bpt>Installed<ept id=\"p1\">**</ept> node, select <bpt id=\"p2\">**</bpt>Visual C#<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Workflow<ept id=\"p3\">**</ept> (or <bpt id=\"p4\">**</bpt>Visual Basic<ept id=\"p4\">**</ept>, <bpt id=\"p5\">**</bpt>Workflow<ept id=\"p5\">**</ept>).","pos":[1849,1947],"source":"In the **Installed** node, select **Visual C#**, **Workflow** (or **Visual Basic**, **Workflow**)."},{"content":"Ensure that <bpt id=\"p1\">**</bpt>.NET Framework 4.5<ept id=\"p1\">**</ept> is selected in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph> version drop-down list.","pos":[1948,2086],"source":" Ensure that **.NET Framework 4.5** is selected in the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)] version drop-down list."},{"content":"Select <bpt id=\"p1\">**</bpt>Activity Library<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Workflow<ept id=\"p2\">**</ept> list.","pos":[2087,2142],"source":" Select **Activity Library** from the **Workflow** list."},{"content":"Type <ph id=\"ph1\">`NumberGuessWorkflowActivities`</ph> in the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box and then click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","pos":[2143,2222],"source":" Type `NumberGuessWorkflowActivities` in the **Name** box and then click **OK**."},{"pos":[2234,2493],"content":"[!NOTE]\nDepending on which programming language is configured as the primary language in [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)], the **Visual C#** or **Visual Basic** node may be under the **Other Languages** node in the **Installed** node.","leadings":["","    >  "],"nodes":[{"content":"Depending on which programming language is configured as the primary language in <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph>, the <bpt id=\"p1\">**</bpt>Visual C#<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Visual Basic<ept id=\"p2\">**</ept> node may be under the <bpt id=\"p3\">**</bpt>Other Languages<ept id=\"p3\">**</ept> node in the <bpt id=\"p4\">**</bpt>Installed<ept id=\"p4\">**</ept> node.","pos":[8,252],"source":"Depending on which programming language is configured as the primary language in [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)], the **Visual C#** or **Visual Basic** node may be under the **Other Languages** node in the **Installed** node."}]},{"content":"Right-click <bpt id=\"p1\">**</bpt>Activity1.xaml<ept id=\"p1\">**</ept> in <bpt id=\"p2\">**</bpt>Solution Explorer<ept id=\"p2\">**</ept> and choose <bpt id=\"p3\">**</bpt>Delete<ept id=\"p3\">**</ept>.","pos":[2503,2581],"source":"Right-click **Activity1.xaml** in **Solution Explorer** and choose **Delete**."},{"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to confirm.","pos":[2582,2606],"source":" Click **OK** to confirm."},{"pos":[2616,2646],"content":"To create the ReadInt activity","linkify":"To create the ReadInt activity","nodes":[{"content":"To create the ReadInt activity","pos":[0,30]}]},{"pos":[2656,2706],"content":"Choose <bpt id=\"p1\">**</bpt>Add New Item<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Project<ept id=\"p2\">**</ept> menu.","source":"Choose **Add New Item** from the **Project** menu."},{"content":"In the <bpt id=\"p1\">**</bpt>Installed<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Common Items<ept id=\"p2\">**</ept> node, select <bpt id=\"p3\">**</bpt>Workflow<ept id=\"p3\">**</ept>.","pos":[2716,2781],"source":"In the **Installed**, **Common Items** node, select **Workflow**."},{"content":"Select <bpt id=\"p1\">**</bpt>Code Activity<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Workflow<ept id=\"p2\">**</ept> list.","pos":[2782,2834],"source":" Select **Code Activity** from the **Workflow** list."},{"pos":[2844,2904],"content":"Type <ph id=\"ph1\">`ReadInt`</ph> into the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box and then click <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>.","source":"Type `ReadInt` into the **Name** box and then click **Add**."},{"pos":[2914,2986],"content":"Replace the existing <ph id=\"ph1\">`ReadInt`</ph> definition with the following definition.","source":"Replace the existing `ReadInt` definition with the following definition."},{"pos":[2997,3258],"content":"[!code-csharp[CFX_WF_GettingStarted#1](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/readint.cs#1)]\n [!code-vb[CFX_WF_GettingStarted#1](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/readint.vb#1)]","leadings":["","    "],"nodes":[]},{"pos":[3270,3791],"content":"[!NOTE]\nThe `ReadInt` activity derives from <xref:System.Activities.NativeActivity%601> instead of <xref:System.Activities.CodeActivity>, which is the default for the code activity template. <xref:System.Activities.CodeActivity%601> can be used if the activity provides a single result, which is exposed through the <xref:System.Activities.Activity%601.Result%2A> argument, but <xref:System.Activities.CodeActivity%601> does not support the use of bookmarks, so <xref:System.Activities.NativeActivity%601> is used.","leadings":["","    >  "],"nodes":[{"content":"The `ReadInt` activity derives from <xref:System.Activities.NativeActivity%601> instead of <xref:System.Activities.CodeActivity>, which is the default for the code activity template. <xref:System.Activities.CodeActivity%601> can be used if the activity provides a single result, which is exposed through the <xref:System.Activities.Activity%601.Result%2A> argument, but <xref:System.Activities.CodeActivity%601> does not support the use of bookmarks, so <xref:System.Activities.NativeActivity%601> is used.","pos":[8,514],"nodes":[{"content":"The <ph id=\"ph1\">`ReadInt`</ph> activity derives from <ph id=\"ph2\">&lt;xref:System.Activities.NativeActivity%601&gt;</ph> instead of <ph id=\"ph3\">&lt;xref:System.Activities.CodeActivity&gt;</ph>, which is the default for the code activity template.","pos":[0,182],"source":"The `ReadInt` activity derives from <xref:System.Activities.NativeActivity%601> instead of <xref:System.Activities.CodeActivity>, which is the default for the code activity template."},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity%601&gt;</ph> can be used if the activity provides a single result, which is exposed through the <ph id=\"ph2\">&lt;xref:System.Activities.Activity%601.Result%2A&gt;</ph> argument, but <ph id=\"ph3\">&lt;xref:System.Activities.CodeActivity%601&gt;</ph> does not support the use of bookmarks, so <ph id=\"ph4\">&lt;xref:System.Activities.NativeActivity%601&gt;</ph> is used.","pos":[183,506],"source":"<xref:System.Activities.CodeActivity%601> can be used if the activity provides a single result, which is exposed through the <xref:System.Activities.Activity%601.Result%2A> argument, but <xref:System.Activities.CodeActivity%601> does not support the use of bookmarks, so <xref:System.Activities.NativeActivity%601> is used."}]}]},{"pos":[3801,3830],"content":"To create the Prompt activity","linkify":"To create the Prompt activity","nodes":[{"content":"To create the Prompt activity","pos":[0,29]}]},{"content":"Press CTRL+SHIFT+B to build the project.","pos":[3840,3880]},{"content":"Building the project enables the <ph id=\"ph1\">`ReadInt`</ph> activity in this project to be used to build the custom activity from this step.","pos":[3881,4004],"source":" Building the project enables the `ReadInt` activity in this project to be used to build the custom activity from this step."},{"pos":[4014,4064],"content":"Choose <bpt id=\"p1\">**</bpt>Add New Item<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Project<ept id=\"p2\">**</ept> menu.","source":"Choose **Add New Item** from the **Project** menu."},{"content":"In the <bpt id=\"p1\">**</bpt>Installed<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Common Items<ept id=\"p2\">**</ept> node, select <bpt id=\"p3\">**</bpt>Workflow<ept id=\"p3\">**</ept>.","pos":[4074,4139],"source":"In the **Installed**, **Common Items** node, select **Workflow**."},{"content":"Select <bpt id=\"p1\">**</bpt>Activity<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Workflow<ept id=\"p2\">**</ept> list.","pos":[4140,4187],"source":" Select **Activity** from the **Workflow** list."},{"pos":[4197,4256],"content":"Type <ph id=\"ph1\">`Prompt`</ph> into the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box and then click <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept>.","source":"Type `Prompt` into the **Name** box and then click **Add**."},{"pos":[4266,4381],"content":"Double-click <bpt id=\"p1\">**</bpt>Prompt.xaml<ept id=\"p1\">**</ept> in <bpt id=\"p2\">**</bpt>Solution Explorer<ept id=\"p2\">**</ept> to display it in the designer if it is not already displayed.","source":"Double-click **Prompt.xaml** in **Solution Explorer** to display it in the designer if it is not already displayed."},{"pos":[4391,4493],"content":"Click <bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept> in the lower-left side of the activity designer to display the <bpt id=\"p2\">**</bpt>Arguments<ept id=\"p2\">**</ept> pane.","source":"Click **Arguments** in the lower-left side of the activity designer to display the **Arguments** pane."},{"pos":[4503,4529],"content":"Click <bpt id=\"p1\">**</bpt>Create Argument<ept id=\"p1\">**</ept>.","source":"Click **Create Argument**."},{"pos":[4539,4738],"content":"Type <ph id=\"ph1\">`BookmarkName`</ph> into the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box, select <bpt id=\"p2\">**</bpt>In<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Direction<ept id=\"p3\">**</ept> drop-down list, select <bpt id=\"p4\">**</bpt>String<ept id=\"p4\">**</ept> from the <bpt id=\"p5\">**</bpt>Argument type<ept id=\"p5\">**</ept> drop-down list, and then press ENTER to save the argument.","source":"Type `BookmarkName` into the **Name** box, select **In** from the **Direction** drop-down list, select **String** from the **Argument type** drop-down list, and then press ENTER to save the argument."},{"pos":[4747,4773],"content":"Click <bpt id=\"p1\">**</bpt>Create Argument<ept id=\"p1\">**</ept>.","source":"Click **Create Argument**."},{"pos":[4783,5014],"content":"Type <ph id=\"ph1\">`Result`</ph> into the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box that is underneath the newly added <ph id=\"ph2\">`BookmarkName`</ph> argument, select <bpt id=\"p2\">**</bpt>Out<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Direction<ept id=\"p3\">**</ept> drop-down list, select <bpt id=\"p4\">**</bpt>Int32<ept id=\"p4\">**</ept> from the <bpt id=\"p5\">**</bpt>Argument type<ept id=\"p5\">**</ept> drop-down list, and then press ENTER.","source":"Type `Result` into the **Name** box that is underneath the newly added `BookmarkName` argument, select **Out** from the **Direction** drop-down list, select **Int32** from the **Argument type** drop-down list, and then press ENTER."},{"pos":[5024,5050],"content":"Click <bpt id=\"p1\">**</bpt>Create Argument<ept id=\"p1\">**</ept>.","source":"Click **Create Argument**."},{"pos":[5060,5251],"content":"Type <ph id=\"ph1\">`Text`</ph> into the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box, select <bpt id=\"p2\">**</bpt>In<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Direction<ept id=\"p3\">**</ept> drop-down list, select <bpt id=\"p4\">**</bpt>String<ept id=\"p4\">**</ept> from the <bpt id=\"p5\">**</bpt>Argument type<ept id=\"p5\">**</ept> drop-down list, and then press ENTER to save the argument.","source":"Type `Text` into the **Name** box, select **In** from the **Direction** drop-down list, select **String** from the **Argument type** drop-down list, and then press ENTER to save the argument."},{"pos":[5262,5466],"content":"These three arguments are bound to the corresponding arguments of the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.WriteLine&gt;</ph> and <ph id=\"ph2\">`ReadInt`</ph> activities that are added to the <ph id=\"ph3\">`Prompt`</ph> activity in the following steps.","source":"These three arguments are bound to the corresponding arguments of the <xref:System.Activities.Statements.WriteLine> and `ReadInt` activities that are added to the `Prompt` activity in the following steps."},{"pos":[5476,5576],"content":"Click <bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept> in the lower-left side of the activity designer to close the <bpt id=\"p2\">**</bpt>Arguments<ept id=\"p2\">**</ept> pane.","source":"Click **Arguments** in the lower-left side of the activity designer to close the **Arguments** pane."},{"pos":[5586,5754],"content":"Drag a <bpt id=\"p1\">**</bpt>Sequence<ept id=\"p1\">**</ept> activity from the <bpt id=\"p2\">**</bpt>Control Flow<ept id=\"p2\">**</ept> section of the <bpt id=\"p3\">**</bpt>Toolbox<ept id=\"p3\">**</ept> and drop it onto the <bpt id=\"p4\">**</bpt>Drop activity here<ept id=\"p4\">**</ept> label of the <bpt id=\"p5\">**</bpt>Prompt<ept id=\"p5\">**</ept> activity designer.","source":"Drag a **Sequence** activity from the **Control Flow** section of the **Toolbox** and drop it onto the **Drop activity here** label of the **Prompt** activity designer."},{"pos":[5766,5866],"content":"[!TIP]\nIf the **Toolbox** window is not displayed, select **Toolbox** from the **View** menu.","leadings":["","    >  "],"nodes":[{"content":"If the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept> window is not displayed, select <bpt id=\"p2\">**</bpt>Toolbox<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>View<ept id=\"p3\">**</ept> menu.","pos":[7,93],"source":"If the **Toolbox** window is not displayed, select **Toolbox** from the **View** menu."}]},{"pos":[5876,6036],"content":"Drag a <bpt id=\"p1\">**</bpt>WriteLine<ept id=\"p1\">**</ept> activity from the <bpt id=\"p2\">**</bpt>Primitives<ept id=\"p2\">**</ept> section of the <bpt id=\"p3\">**</bpt>Toolbox<ept id=\"p3\">**</ept> and drop it onto the <bpt id=\"p4\">**</bpt>Drop activity here<ept id=\"p4\">**</ept> label of the <bpt id=\"p5\">**</bpt>Sequence<ept id=\"p5\">**</ept> activity.","source":"Drag a **WriteLine** activity from the **Primitives** section of the **Toolbox** and drop it onto the **Drop activity here** label of the **Sequence** activity."},{"content":"Bind the <bpt id=\"p1\">**</bpt>Text<ept id=\"p1\">**</ept> argument of the <bpt id=\"p2\">**</bpt>WriteLine<ept id=\"p2\">**</ept> activity to the <bpt id=\"p3\">**</bpt>Text<ept id=\"p3\">**</ept> argument of the <bpt id=\"p4\">**</bpt>Prompt<ept id=\"p4\">**</ept> activity by typing <ph id=\"ph1\">`Text`</ph> into the <bpt id=\"p5\">**</bpt>Enter a C# expression<ept id=\"p5\">**</ept> or <bpt id=\"p6\">**</bpt>Enter a VB expression<ept id=\"p6\">**</ept> box in the <bpt id=\"p7\">**</bpt>Properties<ept id=\"p7\">**</ept> window, and then press the TAB key two times.","pos":[6046,6307],"source":"Bind the **Text** argument of the **WriteLine** activity to the **Text** argument of the **Prompt** activity by typing `Text` into the **Enter a C# expression** or **Enter a VB expression** box in the **Properties** window, and then press the TAB key two times."},{"content":"This dismisses the IntelliSense list members window and saves the property value by moving the selection off the property.","pos":[6308,6430]},{"content":"This property can also be set by typing <ph id=\"ph1\">`Text`</ph> into the <bpt id=\"p1\">**</bpt>Enter a C# expression<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Enter a VB expression<ept id=\"p2\">**</ept> box on the activity itself.","pos":[6431,6569],"source":" This property can also be set by typing `Text` into the **Enter a C# expression** or **Enter a VB expression** box on the activity itself."},{"pos":[6581,6694],"content":"[!TIP]\nIf the **Properties Window** is not displayed, select **Properties Window** from the **View** menu.","leadings":["","    >  "],"nodes":[{"content":"If the <bpt id=\"p1\">**</bpt>Properties Window<ept id=\"p1\">**</ept> is not displayed, select <bpt id=\"p2\">**</bpt>Properties Window<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>View<ept id=\"p3\">**</ept> menu.","pos":[7,106],"source":"If the **Properties Window** is not displayed, select **Properties Window** from the **View** menu."}]},{"pos":[6704,6889],"content":"Drag a <bpt id=\"p1\">**</bpt>ReadInt<ept id=\"p1\">**</ept> activity from the <bpt id=\"p2\">**</bpt>NumberGuessWorkflowActivities<ept id=\"p2\">**</ept> section of the <bpt id=\"p3\">**</bpt>Toolbox<ept id=\"p3\">**</ept> and drop it in the <bpt id=\"p4\">**</bpt>Sequence<ept id=\"p4\">**</ept> activity so that it follows the <bpt id=\"p5\">**</bpt>WriteLine<ept id=\"p5\">**</ept> activity.","source":"Drag a **ReadInt** activity from the **NumberGuessWorkflowActivities** section of the **Toolbox** and drop it in the **Sequence** activity so that it follows the **WriteLine** activity."},{"pos":[6899,7267],"content":"Bind the <bpt id=\"p1\">**</bpt>BookmarkName<ept id=\"p1\">**</ept> argument of the <bpt id=\"p2\">**</bpt>ReadInt<ept id=\"p2\">**</ept> activity to the <bpt id=\"p3\">**</bpt>BookmarkName<ept id=\"p3\">**</ept> argument of the <bpt id=\"p4\">**</bpt>Prompt<ept id=\"p4\">**</ept> activity by typing <ph id=\"ph1\">`BookmarkName`</ph> into the <bpt id=\"p5\">**</bpt>Enter a VB expression<ept id=\"p5\">**</ept> box to the right of the <bpt id=\"p6\">**</bpt>BookmarkName<ept id=\"p6\">**</ept> argument in the <bpt id=\"p7\">**</bpt>Properties Window<ept id=\"p7\">**</ept>, and then press the TAB key two times to close the IntelliSense list members window and save the property.","source":"Bind the **BookmarkName** argument of the **ReadInt** activity to the **BookmarkName** argument of the **Prompt** activity by typing `BookmarkName` into the **Enter a VB expression** box to the right of the **BookmarkName** argument in the **Properties Window**, and then press the TAB key two times to close the IntelliSense list members window and save the property."},{"pos":[7277,7553],"content":"Bind the <bpt id=\"p1\">**</bpt>Result<ept id=\"p1\">**</ept> argument of the <bpt id=\"p2\">**</bpt>ReadInt<ept id=\"p2\">**</ept> activity to the <bpt id=\"p3\">**</bpt>Result<ept id=\"p3\">**</ept> argument of the <bpt id=\"p4\">**</bpt>Prompt<ept id=\"p4\">**</ept> activity by typing <ph id=\"ph1\">`Result`</ph> into the <bpt id=\"p5\">**</bpt>Enter a VB expression<ept id=\"p5\">**</ept> box to the right of the <bpt id=\"p6\">**</bpt>Result<ept id=\"p6\">**</ept> argument in the <bpt id=\"p7\">**</bpt>Properties Window<ept id=\"p7\">**</ept>, and then press the TAB key two times.","source":"Bind the **Result** argument of the **ReadInt** activity to the **Result** argument of the **Prompt** activity by typing `Result` into the **Enter a VB expression** box to the right of the **Result** argument in the **Properties Window**, and then press the TAB key two times."},{"content":"Press CTRL+SHIFT+B to build the solution.","pos":[7563,7604]},{"pos":[7615,7831],"content":"For instructions on how to create a workflow by using these activities, see the next step in the tutorial, <bpt id=\"p1\">[</bpt>How to: Create a Workflow<ept id=\"p1\">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)</ept>.","source":"For instructions on how to create a workflow by using these activities, see the next step in the tutorial, [How to: Create a Workflow](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)."},{"pos":[7840,7848],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Designing and Implementing Custom Activities<ept id=\"p1\">](../../../docs/framework/windows-workflow-foundation/designing-and-implementing-custom-activities.md)</ept><ph id=\"ph1\"> </ph>","pos":[7942,8090],"source":"[Designing and Implementing Custom Activities](../../../docs/framework/windows-workflow-foundation/designing-and-implementing-custom-activities.md) "},{"content":"<bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](../../../docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept><ph id=\"ph1\"> </ph>","pos":[8094,8202],"source":"[Getting Started Tutorial](../../../docs/framework/windows-workflow-foundation/getting-started-tutorial.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Create a Workflow<ept id=\"p1\">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)</ept><ph id=\"ph1\"> </ph>","pos":[8206,8315],"source":"[How to: Create a Workflow](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md) "},{"content":"<bpt id=\"p1\">[</bpt>Using the ExpressionTextBox in a Custom Activity Designer<ept id=\"p1\">](../../../docs/framework/windows-workflow-foundation/samples/using-the-expressiontextbox-in-a-custom-activity-designer.md)</ept>","pos":[8319,8500],"source":"[Using the ExpressionTextBox in a Custom Activity Designer](../../../docs/framework/windows-workflow-foundation/samples/using-the-expressiontextbox-in-a-custom-activity-designer.md)"}]}