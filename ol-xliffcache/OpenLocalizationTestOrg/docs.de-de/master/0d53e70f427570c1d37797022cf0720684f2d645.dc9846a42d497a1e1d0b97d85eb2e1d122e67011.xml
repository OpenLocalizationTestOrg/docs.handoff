{"content":"---\ntitle: \"ICLRSyncManager::GetRWLockOwnerNext Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICLRSyncManager.GetRWLockOwnerNext\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICLRSyncManager::GetRWLockOwnerNext\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICLRSyncManager::GetRWLockOwnerNext method [.NET Framework hosting]\"\n  - \"GetRWLockOwnerNext method [.NET Framework hosting]\"\nms.assetid: 0e025b6a-280e-40a2-a2d0-b15f58777b81\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 9\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICLRSyncManager::GetRWLockOwnerNext Method\nGets the next [IHostTask](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md) instance that is blocked on the current reader-writer lock.  \n  \n## Syntax  \n  \n```  \nHRESULT GetRWLockOwnerNext (  \n    [in] SIZE_T       Iterator,  \n    [out] IHostTask  *ppOwnerHostTask  \n);  \n```  \n  \n#### Parameters  \n `Iterator`  \n [in] The iterator that was created by using a call to [CreateRWLockOwnerIterator](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-createrwlockowneriterator-method.md).  \n  \n `ppOwnerHostTask`  \n [out] A pointer to the next `IHostTask` that is waiting on the lock, or null if no task is waiting.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`GetRWLockOwnerNext` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n  \n## Remarks  \n If `ppOwnerHostTask` is set to null, the iteration has terminated, and the host should call the [DeleteRWLockOwnerIterator](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-deleterwlockowneriterator-method.md) method.  \n  \n> [!NOTE]\n>  The CLR calls `AddRef` on the `IHostTask` to which `ppOwnerHostTask` points to prevent this task from exiting while the host holds the pointer. The host must call `Release` to decrement the reference count when it is finished.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [ICLRSyncManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-interface.md)   \n [IHostSyncManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostsyncmanager-interface.md)","nodes":[{"pos":[4,732],"embed":true,"restype":"x-metadata","content":"title: \"ICLRSyncManager::GetRWLockOwnerNext Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICLRSyncManager.GetRWLockOwnerNext\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICLRSyncManager::GetRWLockOwnerNext\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICLRSyncManager::GetRWLockOwnerNext method [.NET Framework hosting]\"\n  - \"GetRWLockOwnerNext method [.NET Framework hosting]\"\nms.assetid: 0e025b6a-280e-40a2-a2d0-b15f58777b81\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 9\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"ICLRSyncManager::GetRWLockOwnerNext Method | Microsoft Docs","nodes":[{"pos":[0,59],"content":"ICLRSyncManager::GetRWLockOwnerNext Method | Microsoft Docs","nodes":[{"content":"ICLRSyncManager::GetRWLockOwnerNext Method | Microsoft Docs","pos":[0,59]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[739,781],"content":"ICLRSyncManager::GetRWLockOwnerNext Method","linkify":"ICLRSyncManager::GetRWLockOwnerNext Method","nodes":[{"content":"ICLRSyncManager::GetRWLockOwnerNext Method","pos":[0,42]}]},{"pos":[782,940],"content":"Gets the next <bpt id=\"p1\">[</bpt>IHostTask<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)</ept> instance that is blocked on the current reader-writer lock.","source":"Gets the next [IHostTask](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md) instance that is blocked on the current reader-writer lock."},{"pos":[949,955],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1091,1101],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The iterator that was created by using a call to <bpt id=\"p1\">[</bpt>CreateRWLockOwnerIterator<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-createrwlockowneriterator-method.md)</ept>.","pos":[1119,1303],"source":"[in] The iterator that was created by using a call to [CreateRWLockOwnerIterator](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-createrwlockowneriterator-method.md)."},{"content":"[out] A pointer to the next <ph id=\"ph1\">`IHostTask`</ph> that is waiting on the lock, or null if no task is waiting.","pos":[1331,1430],"source":"[out] A pointer to the next `IHostTask` that is waiting on the lock, or null if no task is waiting."},{"pos":[1439,1451],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1458,1465]},{"content":"Description","pos":[1466,1477]},{"content":"S_OK","pos":[1518,1522]},{"pos":[1523,1566],"content":"<ph id=\"ph1\">`GetRWLockOwnerNext`</ph> returned successfully.","source":"`GetRWLockOwnerNext` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1571,1593]},{"content":"The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1594,1758]},{"content":"HOST_E_TIMEOUT","pos":[1763,1777]},{"content":"The call timed out.","pos":[1778,1797]},{"content":"HOST_E_NOT_OWNER","pos":[1802,1818]},{"content":"The caller does not own the lock.","pos":[1819,1852]},{"content":"HOST_E_ABANDONED","pos":[1857,1873]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1874,1946]},{"content":"E_FAIL","pos":[1951,1957]},{"content":"An unknown catastrophic failure occurred.","pos":[1958,1999]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[2000,2077]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[2078,2144]},{"pos":[2154,2161],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2165,2398],"content":"If <ph id=\"ph1\">`ppOwnerHostTask`</ph> is set to null, the iteration has terminated, and the host should call the <bpt id=\"p1\">[</bpt>DeleteRWLockOwnerIterator<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-deleterwlockowneriterator-method.md)</ept> method.","source":"If `ppOwnerHostTask` is set to null, the iteration has terminated, and the host should call the [DeleteRWLockOwnerIterator](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-deleterwlockowneriterator-method.md) method."},{"pos":[2406,2643],"content":"[!NOTE]\n The CLR calls `AddRef` on the `IHostTask` to which `ppOwnerHostTask` points to prevent this task from exiting while the host holds the pointer. The host must call `Release` to decrement the reference count when it is finished.","leadings":["","> "],"nodes":[{"content":"The CLR calls `AddRef` on the `IHostTask` to which `ppOwnerHostTask` points to prevent this task from exiting while the host holds the pointer. The host must call `Release` to decrement the reference count when it is finished.","pos":[9,235],"nodes":[{"content":"The CLR calls <ph id=\"ph1\">`AddRef`</ph> on the <ph id=\"ph2\">`IHostTask`</ph> to which <ph id=\"ph3\">`ppOwnerHostTask`</ph> points to prevent this task from exiting while the host holds the pointer.","pos":[0,143],"source":"The CLR calls `AddRef` on the `IHostTask` to which `ppOwnerHostTask` points to prevent this task from exiting while the host holds the pointer."},{"content":"The host must call <ph id=\"ph1\">`Release`</ph> to decrement the reference count when it is finished.","pos":[144,226],"source":" The host must call `Release` to decrement the reference count when it is finished."}]}]},{"pos":[2652,2664],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2668,2772],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2779,2800],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2807,2857],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2864,2892],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept>","source":"**.NET Framework Versions:**"},{"pos":[2981,2989],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICLRSyncManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2993,3100],"source":"[ICLRSyncManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>IHostSyncManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostsyncmanager-interface.md)</ept>","pos":[3104,3212],"source":"[IHostSyncManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostsyncmanager-interface.md)"}]}