{"content":"---\ntitle: \"ICorProfilerCallback::ExceptionThrown Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.ExceptionThrown\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::ExceptionThrown\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ExceptionThrown method [.NET Framework profiling]\"\n  - \"ICorProfilerCallback::ExceptionThrown method [.NET Framework profiling]\"\nms.assetid: f1a23f3b-ac21-4905-8abf-8ea59f15af53\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 12\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ICorProfilerCallback::ExceptionThrown Method\nNotifies the profiler that an exception has been thrown.  \n  \n> [!NOTE]\n>  This function is called only if the exception reaches managed code.  \n  \n## Syntax  \n  \n```  \nHRESULT ExceptionThrown(  \n    [in] ObjectID thrownObjectId);  \n```  \n  \n#### Parameters  \n `thrownObjectId`  \n [in] The ID of the object that caused the exception to be thrown.  \n  \n## Remarks  \n The profiler should not block in its implementation of this method because the stack may not be in a state that allows garbage collection, and therefore preemptive garbage collection cannot be enabled. If the profiler blocks here and garbage collection is attempted, the runtime will block until this callback returns.  \n  \n The profiler's implementation of this method should not call into managed code or in any way cause a managed-memory allocation.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)","nodes":[{"pos":[4,740],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerCallback::ExceptionThrown Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.ExceptionThrown\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::ExceptionThrown\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ExceptionThrown method [.NET Framework profiling]\"\n  - \"ICorProfilerCallback::ExceptionThrown method [.NET Framework profiling]\"\nms.assetid: f1a23f3b-ac21-4905-8abf-8ea59f15af53\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 12\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"ICorProfilerCallback::ExceptionThrown Method | Microsoft Docs","nodes":[{"pos":[0,61],"content":"ICorProfilerCallback::ExceptionThrown Method | Microsoft Docs","nodes":[{"content":"ICorProfilerCallback::ExceptionThrown Method | Microsoft Docs","pos":[0,61]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[747,791],"content":"ICorProfilerCallback::ExceptionThrown Method","linkify":"ICorProfilerCallback::ExceptionThrown Method","nodes":[{"content":"ICorProfilerCallback::ExceptionThrown Method","pos":[0,44]}]},{"content":"Notifies the profiler that an exception has been thrown.","pos":[792,848]},{"pos":[856,934],"content":"[!NOTE]\n This function is called only if the exception reaches managed code.","leadings":["","> "],"nodes":[{"content":"This function is called only if the exception reaches managed code.","pos":[9,76]}]},{"pos":[943,949],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1039,1049],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The ID of the object that caused the exception to be thrown.","pos":[1073,1138]},{"pos":[1147,1154],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The profiler should not block in its implementation of this method because the stack may not be in a state that allows garbage collection, and therefore preemptive garbage collection cannot be enabled.","pos":[1158,1359]},{"content":"If the profiler blocks here and garbage collection is attempted, the runtime will block until this callback returns.","pos":[1360,1476]},{"content":"The profiler's implementation of this method should not call into managed code or in any way cause a managed-memory allocation.","pos":[1483,1610]},{"pos":[1619,1631],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1635,1739],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[1746,1780],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[1787,1812],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[1819,1927],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[1936,1944],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1948,2066],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerCallback Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)</ept>","source":"[ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)"}]}