{"content":"---\ntitle: \"How to: Define an Operator (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"procedures, defining\"\n  - \"Visual Basic code, procedures\"\n  - \"operators [Visual Basic], defining\"\n  - \"procedures, operator\"\n  - \"Visual Basic code, operators\"\n  - \"syntax, Operator procedures\"\n  - \"operators [Visual Basic], overloading\"\n  - \"operator procedures, about operator procedures\"\n  - \"return values, Operator procedures\"\n  - \"operator overloading\"\nms.assetid: d4b0e253-092a-4e6e-9fe2-01f562140a29\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Define an Operator (Visual Basic)\nIf you have defined a class or structure, you can define the behavior of a standard operator (such as `*`, `<>`, or `And`) when one or both of the operands is of the type of your class or structure.  \n  \n Define the standard operator as an operator procedure within the class or structure. All operator procedures must be `Public` `Shared`.  \n  \n Defining an operator on a class or structure is also called *overloading* the operator.  \n  \n## Example  \n The following example defines the `+` operator for a structure called `height`. The structure uses heights measured in feet and inches. One *inch* is 2.54 centimeters, and one *foot* is 12 inches. To ensure normalized values (inches < 12.0), the constructor performs *modulo* 12 arithmetic. The `+` operator uses the constructor to generate normalized values.  \n  \n [!code-vb[VbVbcnProcedures#25](./codesnippet/VisualBasic/how-to-define-an-operator_1.vb)]  \n  \n You can test the structure `height` with the following code.  \n  \n [!code-vb[VbVbcnProcedures#26](./codesnippet/VisualBasic/how-to-define-an-operator_2.vb)]  \n  \n For more information and examples, see [Operator Overloading in Visual Basic 2005](http://go.microsoft.com/fwlink/?LinkId=101703).  \n  \n## See Also  \n [Operator Procedures](./operator-procedures.md)   \n [How to: Define a Conversion Operator](./how-to-define-a-conversion-operator.md)   \n [How to: Call an Operator Procedure](./how-to-call-an-operator-procedure.md)   \n [How to: Use a Class that Defines Operators](./how-to-use-a-class-that-defines-operators.md)   \n [Operator Statement](../../../../visual-basic/language-reference/statements/operator-statement.md)   \n [Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md)   \n [How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)   \n [Mod Operator](../../../../visual-basic/language-reference/operators/mod-operator.md)","nodes":[{"pos":[4,923],"nodes":[{"content":"How to: Define an Operator (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,58],"content":"How to: Define an Operator (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Define an Operator (Visual Basic) | Microsoft Docs","pos":[0,58]}]}],"pos":[6,67],"yaml":true}],"content":"title: \"How to: Define an Operator (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"procedures, defining\"\n  - \"Visual Basic code, procedures\"\n  - \"operators [Visual Basic], defining\"\n  - \"procedures, operator\"\n  - \"Visual Basic code, operators\"\n  - \"syntax, Operator procedures\"\n  - \"operators [Visual Basic], overloading\"\n  - \"operator procedures, about operator procedures\"\n  - \"return values, Operator procedures\"\n  - \"operator overloading\"\nms.assetid: d4b0e253-092a-4e6e-9fe2-01f562140a29\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[930,971],"content":"How to: Define an Operator (Visual Basic)","linkify":"How to: Define an Operator (Visual Basic)","nodes":[{"content":"How to: Define an Operator (Visual Basic)","pos":[0,41]}]},{"pos":[972,1170],"content":"If you have defined a class or structure, you can define the behavior of a standard operator (such as <ph id=\"ph1\">`*`</ph>, <ph id=\"ph2\">`&lt;&gt;`</ph>, or <ph id=\"ph3\">`And`</ph>) when one or both of the operands is of the type of your class or structure.","source":"If you have defined a class or structure, you can define the behavior of a standard operator (such as `*`, `<>`, or `And`) when one or both of the operands is of the type of your class or structure."},{"content":"Define the standard operator as an operator procedure within the class or structure.","pos":[1177,1261]},{"content":"All operator procedures must be <ph id=\"ph1\">`Public`</ph> <ph id=\"ph2\">`Shared`</ph>.","pos":[1262,1312],"source":" All operator procedures must be `Public` `Shared`."},{"pos":[1319,1406],"content":"Defining an operator on a class or structure is also called <bpt id=\"p1\">*</bpt>overloading<ept id=\"p1\">*</ept> the operator.","source":"Defining an operator on a class or structure is also called *overloading* the operator."},{"pos":[1415,1422],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example defines the <ph id=\"ph1\">`+`</ph> operator for a structure called <ph id=\"ph2\">`height`</ph>.","pos":[1426,1505],"source":"The following example defines the `+` operator for a structure called `height`."},{"content":"The structure uses heights measured in feet and inches.","pos":[1506,1561]},{"content":"One <bpt id=\"p1\">*</bpt>inch<ept id=\"p1\">*</ept> is 2.54 centimeters, and one <bpt id=\"p2\">*</bpt>foot<ept id=\"p2\">*</ept> is 12 inches.","pos":[1562,1622],"source":" One *inch* is 2.54 centimeters, and one *foot* is 12 inches."},{"content":"To ensure normalized values (inches &lt; 12.0), the constructor performs <bpt id=\"p1\">*</bpt>modulo<ept id=\"p1\">*</ept> 12 arithmetic.","pos":[1623,1716],"source":" To ensure normalized values (inches < 12.0), the constructor performs *modulo* 12 arithmetic."},{"content":"The <ph id=\"ph1\">`+`</ph> operator uses the constructor to generate normalized values.","pos":[1717,1785],"source":" The `+` operator uses the constructor to generate normalized values."},{"pos":[1792,1881],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbcnProcedures#25<ept id=\"p2\">](./codesnippet/VisualBasic/how-to-define-an-operator_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbcnProcedures#25](./codesnippet/VisualBasic/how-to-define-an-operator_1.vb)]"},{"pos":[1888,1948],"content":"You can test the structure <ph id=\"ph1\">`height`</ph> with the following code.","source":"You can test the structure `height` with the following code."},{"pos":[1955,2044],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbcnProcedures#26<ept id=\"p2\">](./codesnippet/VisualBasic/how-to-define-an-operator_2.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbcnProcedures#26](./codesnippet/VisualBasic/how-to-define-an-operator_2.vb)]"},{"pos":[2051,2181],"content":"For more information and examples, see <bpt id=\"p1\">[</bpt>Operator Overloading in Visual Basic 2005<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=101703)</ept>.","source":"For more information and examples, see [Operator Overloading in Visual Basic 2005](http://go.microsoft.com/fwlink/?LinkId=101703)."},{"pos":[2190,2198],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Operator Procedures<ept id=\"p1\">](./operator-procedures.md)</ept><ph id=\"ph1\"> </ph>","pos":[2202,2250],"source":"[Operator Procedures](./operator-procedures.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Define a Conversion Operator<ept id=\"p1\">](./how-to-define-a-conversion-operator.md)</ept><ph id=\"ph1\"> </ph>","pos":[2254,2335],"source":"[How to: Define a Conversion Operator](./how-to-define-a-conversion-operator.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Call an Operator Procedure<ept id=\"p1\">](./how-to-call-an-operator-procedure.md)</ept><ph id=\"ph1\"> </ph>","pos":[2339,2416],"source":"[How to: Call an Operator Procedure](./how-to-call-an-operator-procedure.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Use a Class that Defines Operators<ept id=\"p1\">](./how-to-use-a-class-that-defines-operators.md)</ept><ph id=\"ph1\"> </ph>","pos":[2420,2513],"source":"[How to: Use a Class that Defines Operators](./how-to-use-a-class-that-defines-operators.md) "},{"content":"<bpt id=\"p1\">[</bpt>Operator Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/operator-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2517,2616],"source":"[Operator Statement](../../../../visual-basic/language-reference/statements/operator-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/structure-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2620,2721],"source":"[Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Declare a Structure<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)</ept><ph id=\"ph1\"> </ph>","pos":[2725,2858],"source":"[How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md) "},{"content":"<bpt id=\"p1\">[</bpt>Mod Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/mod-operator.md)</ept>","pos":[2862,2947],"source":"[Mod Operator](../../../../visual-basic/language-reference/operators/mod-operator.md)"}]}