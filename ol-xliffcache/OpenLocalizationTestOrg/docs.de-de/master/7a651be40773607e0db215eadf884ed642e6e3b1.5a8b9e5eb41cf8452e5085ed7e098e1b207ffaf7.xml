{"content":"---\ntitle: \"AddFile2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"AddFile2\"\n  - \"IALink2.AddFile2\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"AddFile2\"\nhelpviewer_keywords: \n  - \"AddFile2 method\"\nms.assetid: 03bc49bf-a89b-4fb6-a88d-97482e061195\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# AddFile2 Method\nAdds files to the assembly. Can also be used to create unbound modules.  \n  \n## Syntax  \n  \n```  \nHRESULT AddFile2(  \n    mdAssembly AssemblyID,  \n    LPCWSTR pszFilename,  \n    DWORD dwFlags,  \n    IMetaDataEmit2* pEmitter,  \n    mdFile* pFileToken  \n) PURE;  \n```  \n  \n## Parameters  \n `AssemblyID`  \n ID for the assembly to which the file is added.  \n  \n `pszFilename`  \n Name of the file to be added.  \n  \n `dwFlags`  \n COM+ `FileDef` flags such as `ffContainsNoMetaData` and `ffWriteable`. `dwFlags` is passed to [DefineFile Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-definefile-method.md).  \n  \n `pEmitter`  \n Interface to [IMetaDataEmit2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataemit2-interface.md) interface.  \n  \n `pFileToken`  \n Receives ID for the file being added.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h.  \n  \n## See also\n\n- [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)\n- [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)\n- [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)\n","nodes":[{"pos":[4,336],"embed":true,"restype":"x-metadata","content":"title: \"AddFile2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"AddFile2\"\n  - \"IALink2.AddFile2\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"AddFile2\"\nhelpviewer_keywords: \n  - \"AddFile2 method\"\nms.assetid: 03bc49bf-a89b-4fb6-a88d-97482e061195\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"AddFile2 Method","nodes":[{"pos":[0,15],"content":"AddFile2 Method","nodes":[{"content":"AddFile2 Method","pos":[0,15]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[343,358],"content":"AddFile2 Method","linkify":"AddFile2 Method","nodes":[{"content":"AddFile2 Method","pos":[0,15]}]},{"content":"Adds files to the assembly.","pos":[359,386]},{"content":"Can also be used to create unbound modules.","pos":[387,430]},{"pos":[439,445],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[633,643],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ID for the assembly to which the file is added.","pos":[663,710]},{"content":"Name of the file to be added.","pos":[734,763]},{"content":"COM+ <ph id=\"ph1\">`FileDef`</ph> flags such as <ph id=\"ph2\">`ffContainsNoMetaData`</ph> and <ph id=\"ph3\">`ffWriteable`</ph>.","pos":[783,853],"source":"COM+ `FileDef` flags such as `ffContainsNoMetaData` and `ffWriteable`."},{"content":"<ph id=\"ph1\">`dwFlags`</ph> is passed to <bpt id=\"p1\">[</bpt>DefineFile Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-definefile-method.md)</ept>.","pos":[854,991],"source":"`dwFlags` is passed to [DefineFile Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-definefile-method.md)."},{"content":"Interface to <bpt id=\"p1\">[</bpt>IMetaDataEmit2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataemit2-interface.md)</ept> interface.","pos":[1012,1141],"source":"Interface to [IMetaDataEmit2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataemit2-interface.md) interface."},{"content":"Receives ID for the file being added.","pos":[1164,1201]},{"pos":[1210,1222],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1226,1262]},{"pos":[1271,1283],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h.","pos":[1287,1304]},{"pos":[1313,1321],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1325,1413],"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept>","source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)"},{"pos":[1416,1502],"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept>","source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)"},{"pos":[1505,1573],"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}