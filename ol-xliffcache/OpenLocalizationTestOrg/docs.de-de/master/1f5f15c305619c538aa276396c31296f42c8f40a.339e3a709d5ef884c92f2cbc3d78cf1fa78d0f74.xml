{"content":"---\ntitle: \"How to: Parse Strings Using String.Split (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"splitting strings [C#]\"\n  - \"Split method [C#]\"\n  - \"strings [C#], splitting\"\n  - \"parse strings\"\nms.assetid: 729c2923-4169-41c6-9c90-ef176c1e2953\ncaps.latest.revision: 17\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Parse Strings Using String.Split (C# Programming Guide)\nThe following code example demonstrates how a string can be parsed using the <xref:System.String.Split%2A?displayProperty=fullName> method. As input, <xref:System.String.Split%2A> takes an array of characters that indicate which characters separate interesting sub strings of the target string.  The function returns an array of the sub strings.  \n  \n This example uses spaces, commas, periods, colons, and tabs, all passed in an array containing these separating characters to <xref:System.String.Split%2A>.  Each word in the target string's sentence displays separately from the resulting array of strings.  \n  \n## Example  \n [!code-cs[csProgGuideStrings#16](../../../csharp/programming-guide/strings/codesnippet/CSharp/how-to-parse-strings-using-string-split_1.cs)]  \n  \n## Example  \n By default, String.Split returns empty strings when two separating characters appear contiguously in the target string.  You can pass an optional StringSplitOptions.RemoveEmptyEntries parameter to exclude any empty strings in the output.  \n  \n String.Split can take an array of strings (character sequences that act as separators for parsing the target string, instead of single characters).  \n  \n```csharp  \nclass TestStringSplit  \n{  \n    static void Main()  \n    {  \n        char[] separatingChars = { \"<<\", \"...\" };  \n  \n        string text = \"one<<two......three<four\";  \n        System.Console.WriteLine(\"Original text: '{0}'\", text);  \n  \n        string[] words = text.Split(separatingChars, System.StringSplitOptions.RemoveEmptyEntries );  \n        System.Console.WriteLine(\"{0} substrings in text:\", words.Length);  \n  \n        foreach (string s in words)  \n        {  \n            System.Console.WriteLine(s);  \n        }  \n  \n        // Keep the console window open in debug mode.  \n        System.Console.WriteLine(\"Press any key to exit.\");  \n        System.Console.ReadKey();  \n    }  \n}  \n/* Output:  \n    Original text: 'one<<two......three<four'  \n    3 words in text:  \n    one  \n    two  \n    three<four  \n*/  \n  \n```  \n  \n## See Also  \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Strings](../../../csharp/programming-guide/strings/index.md)   \n [.NET Framework Regular Expressions](https://msdn.microsoft.com/library/hs600312)","nodes":[{"pos":[4,664],"nodes":[{"content":"How to: Parse Strings Using String.Split (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,80],"content":"How to: Parse Strings Using String.Split (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"How to: Parse Strings Using String.Split (C# Programming Guide) | Microsoft Docs","pos":[0,80]}]}],"pos":[6,89],"yaml":true}],"content":"title: \"How to: Parse Strings Using String.Split (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"splitting strings [C#]\"\n  - \"Split method [C#]\"\n  - \"strings [C#], splitting\"\n  - \"parse strings\"\nms.assetid: 729c2923-4169-41c6-9c90-ef176c1e2953\ncaps.latest.revision: 17\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","yamlblock":true},{"pos":[671,734],"content":"How to: Parse Strings Using String.Split (C# Programming Guide)","linkify":"How to: Parse Strings Using String.Split (C# Programming Guide)","nodes":[{"content":"How to: Parse Strings Using String.Split (C# Programming Guide)","pos":[0,63]}]},{"content":"The following code example demonstrates how a string can be parsed using the <ph id=\"ph1\">&lt;xref:System.String.Split%2A?displayProperty=fullName&gt;</ph> method.","pos":[735,874],"source":"The following code example demonstrates how a string can be parsed using the <xref:System.String.Split%2A?displayProperty=fullName> method."},{"content":"As input, <ph id=\"ph1\">&lt;xref:System.String.Split%2A&gt;</ph> takes an array of characters that indicate which characters separate interesting sub strings of the target string.","pos":[875,1029],"source":" As input, <xref:System.String.Split%2A> takes an array of characters that indicate which characters separate interesting sub strings of the target string."},{"content":"The function returns an array of the sub strings.","pos":[1031,1080]},{"content":"This example uses spaces, commas, periods, colons, and tabs, all passed in an array containing these separating characters to <ph id=\"ph1\">&lt;xref:System.String.Split%2A&gt;</ph>.","pos":[1087,1243],"source":"This example uses spaces, commas, periods, colons, and tabs, all passed in an array containing these separating characters to <xref:System.String.Split%2A>."},{"content":"Each word in the target string's sentence displays separately from the resulting array of strings.","pos":[1245,1343]},{"pos":[1352,1359],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1363,1503],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideStrings#16<ept id=\"p2\">](../../../csharp/programming-guide/strings/codesnippet/CSharp/how-to-parse-strings-using-string-split_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideStrings#16](../../../csharp/programming-guide/strings/codesnippet/CSharp/how-to-parse-strings-using-string-split_1.cs)]"},{"pos":[1512,1519],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"By default, String.Split returns empty strings when two separating characters appear contiguously in the target string.","pos":[1523,1642]},{"content":"You can pass an optional StringSplitOptions.RemoveEmptyEntries parameter to exclude any empty strings in the output.","pos":[1644,1760]},{"content":"String.Split can take an array of strings (character sequences that act as separators for parsing the target string, instead of single characters).","pos":[1767,1914]},{"pos":[2768,2776],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2780,2847],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Strings<ept id=\"p1\">](../../../csharp/programming-guide/strings/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2851,2913],"source":"[Strings](../../../csharp/programming-guide/strings/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>.NET Framework Regular Expressions<ept id=\"p1\">](https://msdn.microsoft.com/library/hs600312)</ept>","pos":[2917,2998],"source":"[.NET Framework Regular Expressions](https://msdn.microsoft.com/library/hs600312)"}]}