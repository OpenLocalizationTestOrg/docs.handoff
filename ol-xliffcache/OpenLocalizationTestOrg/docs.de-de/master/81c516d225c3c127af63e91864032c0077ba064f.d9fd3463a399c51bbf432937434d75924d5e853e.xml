{"content":"---\ntitle: \"ExportNestedTypeForwarder Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IALink.ExportNestedTypeForwarder\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ExportNestedTypeForwarder\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ExportNestedTypeForwarder method\"\nms.assetid: 886ea6c5-6b26-4b88-8bf6-448d6d191950\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 4\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ExportNestedTypeForwarder Method\nAdds a type forwarder for a nested type to the type table of the given assembly.  \n  \n## Syntax  \n  \n```  \nHRESULT ExportNestedTypeForwarder(  \n    mdAssembly      AssemblyID,  \n    mdToken         FileToken,  \n    mdTypeDef       TypeToken,  \n    mdExportedType  ParentType,  \n    LPCWSTR         pszTypename,  \n    DWORD           dwFlags,  \n    mdExportedType* pType  \n) PURE;  \n```  \n  \n#### Parameters  \n `AssemblyID`  \n ID of the assembly to export from.  \n  \n `FileToken`  \n File token or assembly ID of file that defines the type.  \n  \n `TypeToken`  \n Token for the type.  \n  \n `ParentType`  \n Token of parent type.  \n  \n `pszTypename`  \n Fully qualified type name to export.  \n  \n `dwFlags`  \n `ComType` flags such as `tdPublic` or `tdNested`.  \n  \n `pType`  \n Receives token of export type. This is necessary only for emitting nested types.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h  \n  \n## See Also  \n [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)   \n [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)   \n [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)","nodes":[{"pos":[4,613],"nodes":[{"content":"ExportNestedTypeForwarder Method | Microsoft Docs","nodes":[{"pos":[0,49],"content":"ExportNestedTypeForwarder Method | Microsoft Docs","nodes":[{"content":"ExportNestedTypeForwarder Method | Microsoft Docs","pos":[0,49]}]}],"pos":[6,58],"yaml":true}],"content":"title: \"ExportNestedTypeForwarder Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IALink.ExportNestedTypeForwarder\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ExportNestedTypeForwarder\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ExportNestedTypeForwarder method\"\nms.assetid: 886ea6c5-6b26-4b88-8bf6-448d6d191950\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 4\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[620,652],"content":"ExportNestedTypeForwarder Method","linkify":"ExportNestedTypeForwarder Method","nodes":[{"content":"ExportNestedTypeForwarder Method","pos":[0,32]}]},{"content":"Adds a type forwarder for a nested type to the type table of the given assembly.","pos":[653,733]},{"pos":[742,748],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1049,1059],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ID of the assembly to export from.","pos":[1079,1113]},{"content":"File token or assembly ID of file that defines the type.","pos":[1135,1191]},{"content":"Token for the type.","pos":[1213,1232]},{"content":"Token of parent type.","pos":[1255,1276]},{"content":"Fully qualified type name to export.","pos":[1300,1336]},{"content":"<ph id=\"ph1\">`ComType`</ph> flags such as <ph id=\"ph2\">`tdPublic`</ph> or <ph id=\"ph3\">`tdNested`</ph>.","pos":[1356,1405],"source":"`ComType` flags such as `tdPublic` or `tdNested`."},{"content":"Receives token of export type.","pos":[1423,1453]},{"content":"This is necessary only for emitting nested types.","pos":[1454,1503]},{"pos":[1512,1524],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1528,1564]},{"pos":[1573,1585],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h","pos":[1589,1605]},{"pos":[1614,1622],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1626,1713],"source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1717,1806],"source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","pos":[1810,1878],"source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}