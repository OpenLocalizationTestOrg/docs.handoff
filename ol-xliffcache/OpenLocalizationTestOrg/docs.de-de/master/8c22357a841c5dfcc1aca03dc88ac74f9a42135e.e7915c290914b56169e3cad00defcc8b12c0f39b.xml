{"content":"---\ntitle: \"FunctionTailcall3WithInfo Function | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"FunctionTailcall3WithInfo\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"FunctionTailcall3WithInfo\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"FunctionTailcall3WithInfo function [.NET Framework profiling]\"\nms.assetid: 46380fcc-0198-43ae-a1f5-2d4939425886\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 10\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# FunctionTailcall3WithInfo Function\nNotifies the profiler that the currently executing function is about to perform a tail call to another function, and provides a handle that can be passed to the [ICorProfilerInfo3::GetFunctionTailcall3Info method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctiontailcall3info-method.md) to retrieve the stack frame.  \n  \n## Syntax  \n  \n```  \nvoid __stdcall FunctionTailcall3WithInfo(  \n               [in] FunctionIDOrClientID functionIDOrClientID,  \n               [in] COR_PRF_ELT_INFO eltInfo);  \n```  \n  \n#### Parameters  \n `functionIDOrClientID`  \n [in] The identifier of the currently executing function that is about to make a tail call.  \n  \n `eltInfo`  \n [in] An opaque handle that represents information about a given stack frame. This handle is valid only during the callback to which it is passed.  \n  \n## Remarks  \n The `FunctionTailcall3WithInfo` callback method notifies the profiler as functions are called, and allows the profiler to use the [ICorProfilerInfo3::GetFunctionTailcall3Info method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctiontailcall3info-method.md) to inspect the stack frame. To access stack frame information, the `COR_PRF_ENABLE_FRAME_INFO` flag has to be set. The profiler can use the [ICorProfilerInfo::SetEventMask method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md) to set the event flags, and then use the [ICorProfilerInfo3::SetEnterLeaveFunctionHooks3WithInfo method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md) to register your implementation of this function.  \n  \n The `FunctionTailcall3WithInfo` function is a callback; you must implement it. The implementation must use the `__declspec(naked)` storage-class attribute.  \n  \n The execution engine does not save any registers before calling this function.  \n  \n-   On entry, you must save all registers that you use, including those in the floating-point unit (FPU).  \n  \n-   On exit, you must restore the stack by popping off all the parameters that were pushed by its caller.  \n  \n The implementation of `FunctionTailcall3WithInfo` should not block, because it will delay garbage collection. The implementation should not attempt a garbage collection, because the stack may not be in a garbage collection-friendly state. If a garbage collection is attempted, the runtime will block until `FunctionTailcall3WithInfo` returns.  \n  \n Also, the FunctionTailcall3WithInfo function must not call into managed code or cause a managed memory allocation in any way.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [FunctionEnter3](../../../../docs/framework/unmanaged-api/profiling/functionenter3-function.md)   \n [FunctionLeave3](../../../../docs/framework/unmanaged-api/profiling/functionleave3-function.md)   \n [FunctionTailcall3](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3-function.md)   \n [FunctionEnter3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3-function.md)   \n [FunctionLeave3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionleave3withinfo-function.md)   \n [SetEnterLeaveFunctionHooks3](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3-method.md)   \n [SetEnterLeaveFunctionHooks3WithInfo](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md)   \n [SetFunctionIDMapper](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setfunctionidmapper-method.md)   \n [SetFunctionIDMapper2](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setfunctionidmapper2-method.md)   \n [Profiling Global Static Functions](../../../../docs/framework/unmanaged-api/profiling/profiling-global-static-functions.md)","nodes":[{"pos":[12,63],"content":"FunctionTailcall3WithInfo Function | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"FunctionTailcall3WithInfo Function | Microsoft Docs","pos":[0,51]}]},{"pos":[648,682],"content":"FunctionTailcall3WithInfo Function","linkify":"FunctionTailcall3WithInfo Function","nodes":[{"content":"FunctionTailcall3WithInfo Function","pos":[0,34]}]},{"pos":[683,1030],"content":"Notifies the profiler that the currently executing function is about to perform a tail call to another function, and provides a handle that can be passed to the <bpt id=\"p1\">[</bpt>ICorProfilerInfo3::GetFunctionTailcall3Info method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctiontailcall3info-method.md)</ept> to retrieve the stack frame.","source":"Notifies the profiler that the currently executing function is about to perform a tail call to another function, and provides a handle that can be passed to the [ICorProfilerInfo3::GetFunctionTailcall3Info method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctiontailcall3info-method.md) to retrieve the stack frame."},{"pos":[1039,1045],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1229,1239],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The identifier of the currently executing function that is about to make a tail call.","pos":[1269,1359]},{"content":"[in] An opaque handle that represents information about a given stack frame.","pos":[1379,1455]},{"content":"This handle is valid only during the callback to which it is passed.","pos":[1456,1524]},{"pos":[1533,1540],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`FunctionTailcall3WithInfo`</ph> callback method notifies the profiler as functions are called, and allows the profiler to use the <bpt id=\"p1\">[</bpt>ICorProfilerInfo3::GetFunctionTailcall3Info method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctiontailcall3info-method.md)</ept> to inspect the stack frame.","pos":[1544,1859],"source":"The `FunctionTailcall3WithInfo` callback method notifies the profiler as functions are called, and allows the profiler to use the [ICorProfilerInfo3::GetFunctionTailcall3Info method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-getfunctiontailcall3info-method.md) to inspect the stack frame."},{"content":"To access stack frame information, the <ph id=\"ph1\">`COR_PRF_ENABLE_FRAME_INFO`</ph> flag has to be set.","pos":[1860,1946],"source":" To access stack frame information, the `COR_PRF_ENABLE_FRAME_INFO` flag has to be set."},{"content":"The profiler can use the <bpt id=\"p1\">[</bpt>ICorProfilerInfo::SetEventMask method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md)</ept> to set the event flags, and then use the <bpt id=\"p2\">[</bpt>ICorProfilerInfo3::SetEnterLeaveFunctionHooks3WithInfo method<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md)</ept> to register your implementation of this function.","pos":[1947,2374],"source":" The profiler can use the [ICorProfilerInfo::SetEventMask method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md) to set the event flags, and then use the [ICorProfilerInfo3::SetEnterLeaveFunctionHooks3WithInfo method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md) to register your implementation of this function."},{"content":"The <ph id=\"ph1\">`FunctionTailcall3WithInfo`</ph> function is a callback; you must implement it.","pos":[2381,2459],"source":"The `FunctionTailcall3WithInfo` function is a callback; you must implement it."},{"content":"The implementation must use the <ph id=\"ph1\">`__declspec(naked)`</ph> storage-class attribute.","pos":[2460,2536],"source":" The implementation must use the `__declspec(naked)` storage-class attribute."},{"content":"The execution engine does not save any registers before calling this function.","pos":[2543,2621]},{"content":"On entry, you must save all registers that you use, including those in the floating-point unit (FPU).","pos":[2631,2732]},{"content":"On exit, you must restore the stack by popping off all the parameters that were pushed by its caller.","pos":[2742,2843]},{"content":"The implementation of <ph id=\"ph1\">`FunctionTailcall3WithInfo`</ph> should not block, because it will delay garbage collection.","pos":[2850,2959],"source":"The implementation of `FunctionTailcall3WithInfo` should not block, because it will delay garbage collection."},{"content":"The implementation should not attempt a garbage collection, because the stack may not be in a garbage collection-friendly state.","pos":[2960,3088]},{"content":"If a garbage collection is attempted, the runtime will block until <ph id=\"ph1\">`FunctionTailcall3WithInfo`</ph> returns.","pos":[3089,3192],"source":" If a garbage collection is attempted, the runtime will block until `FunctionTailcall3WithInfo` returns."},{"content":"Also, the FunctionTailcall3WithInfo function must not call into managed code or cause a managed memory allocation in any way.","pos":[3199,3324]},{"pos":[3333,3345],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3349,3453],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3460,3483],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl","source":"**Header:** CorProf.idl"},{"pos":[3490,3515],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3522,3630],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[3639,3647],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>FunctionEnter3<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionenter3-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[3651,3747],"source":"[FunctionEnter3](../../../../docs/framework/unmanaged-api/profiling/functionenter3-function.md) "},{"content":"<bpt id=\"p1\"> [</bpt>FunctionLeave3<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionleave3-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[3750,3847],"source":" [FunctionLeave3](../../../../docs/framework/unmanaged-api/profiling/functionleave3-function.md) "},{"content":"<bpt id=\"p1\"> [</bpt>FunctionTailcall3<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[3850,3953],"source":" [FunctionTailcall3](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3-function.md) "},{"content":"<bpt id=\"p1\"> [</bpt>FunctionEnter3WithInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[3956,4064],"source":" [FunctionEnter3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functiontailcall3-function.md) "},{"content":"<bpt id=\"p1\"> [</bpt>FunctionLeave3WithInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionleave3withinfo-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[4067,4180],"source":" [FunctionLeave3WithInfo](../../../../docs/framework/unmanaged-api/profiling/functionleave3withinfo-function.md) "},{"content":"<bpt id=\"p1\"> [</bpt>SetEnterLeaveFunctionHooks3<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3-method.md)</ept><ph id=\"ph1\"> </ph>","pos":[4183,4322],"source":" [SetEnterLeaveFunctionHooks3](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3-method.md) "},{"content":"<bpt id=\"p1\"> [</bpt>SetEnterLeaveFunctionHooks3WithInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md)</ept><ph id=\"ph1\"> </ph>","pos":[4325,4480],"source":" [SetEnterLeaveFunctionHooks3WithInfo](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setenterleavefunctionhooks3withinfo-method.md) "},{"content":"<bpt id=\"p1\"> [</bpt>SetFunctionIDMapper<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setfunctionidmapper-method.md)</ept><ph id=\"ph1\"> </ph>","pos":[4483,4605],"source":" [SetFunctionIDMapper](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setfunctionidmapper-method.md) "},{"content":"<bpt id=\"p1\"> [</bpt>SetFunctionIDMapper2<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setfunctionidmapper2-method.md)</ept><ph id=\"ph1\"> </ph>","pos":[4608,4733],"source":" [SetFunctionIDMapper2](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-setfunctionidmapper2-method.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Profiling Global Static Functions<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-global-static-functions.md)</ept>","pos":[4736,4861],"source":" [Profiling Global Static Functions](../../../../docs/framework/unmanaged-api/profiling/profiling-global-static-functions.md)"}]}