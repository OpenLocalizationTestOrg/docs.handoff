{"content":"---\ntitle: Deploy .NET Core apps with Visual Studio\ndescription: Learn to deploy a .NET Core app with Visual Studio.\nauthor: rpetrusha\nms.author: ronpet\nms.date: 09/03/2018\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.custom: vs-dotnet, seodec18\n---\n# Deploy .NET Core apps with Visual Studio\n\nYou can deploy a .NET Core application either as a *framework-dependent deployment*, which includes your application binaries but depends on the presence of .NET Core on the target system, or as a *self-contained deployment*, which includes both your application and .NET Core binaries. For an overview of .NET Core application deployment, see [.NET Core Application Deployment](index.md).\n\nThe following sections show how to use Microsoft Visual Studio to create the following kinds of deployments:\n\n- Framework-dependent deployment\n- Framework-dependent deployment with third-party dependencies\n- Self-contained deployment\n- Self-contained deployment with third-party dependencies\n\nFor information on using Visual Studio to develop .NET Core applications, see [Prerequisites for .NET Core on Windows](../windows-prerequisites.md#prerequisites-with-visual-studio-2017).\n\n## Framework-dependent deployment\n\nDeploying a framework-dependent deployment with no third-party dependencies simply involves building, testing, and publishing the app. A simple example written in C# illustrates the process.  \n\n1. Create the project.\n\n   Select **File** > **New** > **Project**. In the **New Project** dialog, expand your language's (C# or Visual Basic) project categories in the **Installed** project types pane, choose **.NET Core**, and then select the **Console App (.NET Core)** template in the center pane. Enter a project name, such as \"FDD\", in the **Name** text box. Select the **OK** button.\n\n1. Add the application's source code.\n\n   Open the *Program.cs* or *Program.vb* file in the editor and replace the auto-generated code with the following code. It prompts the user to enter text and displays the individual words entered by the user. It uses the regular expression `\\w+` to separate the words in the input text.\n\n   [!code-csharp[deployment#1](~/samples/snippets/core/deploying/cs/deployment-example.cs)]\n   [!code-vb[deployment#1](~/samples/snippets/core/deploying/vb/deployment-example.vb)]\n\n1. Create a Debug build of your app.\n\n   Select **Build** > **Build Solution**. You can also compile and run the Debug build of your application by selecting **Debug** > **Start Debugging**.\n\n1. Deploy your app.\n\n   After you've debugged and tested the program, create the files to be deployed with your app. To publish from Visual Studio, do the following:\n\n      1. Change the solution configuration from **Debug** to **Release** on the toolbar to build a Release (rather than a Debug) version of your app.\n\n      1. Right-click on the project (not the solution) in **Solution Explorer** and select **Publish**.\n\n      1. In the **Publish** tab, select **Publish**. Visual Studio writes the files that comprise your application to the local file system.\n\n      1. The **Publish** tab now shows a single profile, **FolderProfile**. The profile's configuration settings are shown in the **Summary** section of the tab.\n\n   The resulting files are placed in a directory named `Publish` on Windows and `publish` on Unix systems that is in a subdirectory of your project's *.\\bin\\release\\netcoreapp2.1* subdirectory.\n\nAlong with your application's files, the publishing process emits a program database (.pdb) file that contains debugging information about your app. The file is useful primarily for debugging exceptions. You can choose not to package it with your application's files. You should, however, save it in the event that you want to debug the Release build of your app.\n\nDeploy the complete set of application files in any way you like. For example, you can package them in a Zip file, use a simple `copy` command, or deploy them with any installation package of your choice. Once installed, users can then execute your application by using the `dotnet` command and providing the application filename, such as `dotnet fdd.dll`.\n\nIn addition to the application binaries, your installer should also either bundle the shared framework installer or check for it as a prerequisite as part of the application installation.  Installation of the shared framework requires Administrator/root access since it is machine-wide.\n\n## Framework-dependent deployment with third-party dependencies\n\nDeploying a framework-dependent deployment with one or more third-party dependencies requires that any dependencies be available to your project. The following additional steps are required before you can build your app:\n\n1. Use the **NuGet Package Manager** to add a reference to a NuGet package to your project; and if the package is not already available on your system, install it. To open the package manager, select **Tools** > **NuGet Package Manager** > **Manage NuGet Packages for Solution**.\n\n1. Confirm that `Newtonsoft.Json` is installed on your system and, if it is not, install it. The **Installed** tab lists NuGet packages installed on your system. If `Newtonsoft.Json` is not listed there, select the **Browse** tab and enter \"Newtonsoft.Json\" in the search box. Select `Newtonsoft.Json` and, in the right pane, select your project before selecting **Install**.\n\n1. If `Newtonsoft.Json` is already installed on your system, add it to your project by selecting your project in the right pane of the **Manage Packages for Solution** tab.\n\nNote that a framework-dependent deployment with third-party dependencies is only as portable as its third-party dependencies. For example, if a third-party library only supports macOS, the app isn't portable to Windows systems. This happens if the third-party dependency itself depends on native code. A good example of this is [Kestrel server](https://docs.microsoft.com/aspnet/core/fundamentals/servers/kestrel), which requires a native dependency on [libuv](https://github.com/libuv/libuv). When an FDD is created for an application with this kind of third-party dependency, the published output contains a folder for each [Runtime Identifier (RID)](../rid-catalog.md) that the native dependency supports (and that exists in its NuGet package).\n\n## <a name=\"simpleSelf\"></a> Self-contained deployment without third-party dependencies\n\nDeploying a self-contained deployment with no third-party dependencies involves creating the project, modifying the *csproj* file, building, testing, and publishing the app. A simple example written in C# illustrates the process. You begin by creating, coding, and testing your project just as you would a framework-dependent deployment:\n\n1. Create the project.\n\n   Select **File** > **New** > **Project**. In the **New Project** dialog, expand your language's (C# or Visual Basic) project categories in the **Installed** project types pane, choose **.NET Core**, and then select the **Console App (.NET Core)** template in the center pane. Enter a project name, such as \"SCD\", in the **Name** text box, and select the **OK** button.\n\n1. Add the application's source code.\n\n   Open the *Program.cs* or file in your editor, and replace the auto-generated code with the following code. It prompts the user to enter text and displays the individual words entered by the user. It uses the regular expression `\\w+` to separate the words in the input text.\n\n   [!code-csharp[deployment#1](~/samples/snippets/core/deploying/cs/deployment-example.cs)]\n   [!code-vb[deployment#1](~/samples/snippets/core/deploying/vb/deployment-example.vb)]\n\n1. Determine whether you want to use globalization invariant mode.\n\n   Particularly if your app targets Linux, you can reduce the total size of your deployment by taking advantage of [globalization invariant mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md). Globalization invariant mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture).\n\n   To enable invariant mode, right-click on your project (not the solution) in **Solution Explorer**, and select **Edit SCD.csproj** or **Edit SCD.vbproj**. Then add the following highlighted lines to the file:\n\n [!code-xml[globalization-invariant-mode](~/samples/snippets/core/deploying/xml/invariant.csproj)]\n\n1. Create a Debug build of your application.\n\n   Select **Build** > **Build Solution**. You can also compile and run the Debug build of your application by selecting **Debug** > **Start Debugging**. This debugging step lets you identify problems with your application when it's running on your host platform. You still will have to test it on each of your target platforms.\n\n   If you've enabled globalization invariant mode, be particularly sure to test whether the absence of culture-sensitive data is suitable for your application.\n\nOnce you've finished debugging, you can publish your self-contained deployment:\n\n# [Visual Studio 15.6 and earlier](#tab/vs156)\n\nAfter you've debugged and tested the program, create the files to be deployed with your app for each platform that it targets.\n\nTo publish your app from Visual Studio, do the following:\n\n1. Define the platforms that your app will target.\n\n   1. Right-click on your project (not the solution) in **Solution Explorer** and select **Edit SCD.csproj**.\n\n   1. Create a `<RuntimeIdentifiers>` tag in the `<PropertyGroup>` section of your *csproj* file that defines the platforms your app targets, and specify the runtime identifier (RID) of each platform that you target. Note that you also need to add a semicolon to separate the RIDs. See [Runtime IDentifier catalog](../rid-catalog.md) for a list of runtime identifiers.\n\n   For example, the following example indicates that the app runs on 64-bit Windows 10 operating systems and the 64-bit OS X Version 10.11 operating system.\n\n   ```xml\n   <PropertyGroup>\n      <RuntimeIdentifiers>win10-x64;osx.10.11-x64</RuntimeIdentifiers>\n   </PropertyGroup>\n   ```\n\n   Note that the `<RuntimeIdentifiers>` element can go into any `<PropertyGroup>` that you have in your *csproj* file. A complete sample *csproj* file appears later in this section.\n\n1. Publish your app.\n\n   After you've debugged and tested the program, create the files to be deployed with your app for each platform that it targets.\n\n   To publish your app from Visual Studio, do the following:\n\n      1. Change the solution configuration from **Debug** to **Release** on the toolbar to build a Release (rather than a Debug) version of your app.\n\n      1. Right-click on the project (not the solution) in **Solution Explorer** and select **Publish**.\n\n      1. In the **Publish** tab, select **Publish**. Visual Studio writes the files that comprise your application to the local file system.\n\n      1. The **Publish** tab now shows a single profile, **FolderProfile**. The profile's configuration settings are shown in the **Summary** section of the tab. **Target Runtime** identifies which runtime has been published, and **Target Location** identifies where the files for the self-contained deployment were written.\n\n      1. Visual Studio by default writes all published files to a single directory. For convenience, it's best to create separate profiles for each target runtime and to place published files in a platform-specific directory. This involves creating a separate publishing profile for each target platform. So now rebuild the application for each platform by doing the following:\n\n         1. Select **Create new profile** in the **Publish** dialog.\n\n         1. In the **Pick a publish target** dialog, change the **Choose a folder** location to *bin\\Release\\PublishOutput\\win10-x64*. Select **OK**.\n\n         1. Select the new profile (**FolderProfile1**) in the list of profiles, and make sure that the **Target Runtime** is `win10-x64`. If it isn't, select **Settings**. In the **Profile Settings** dialog, change the **Target Runtime** to `win10-x64` and select **Save**. Otherwise, select **Cancel**.\n\n         1. Select **Publish** to publish your app for 64-bit Windows 10 platforms.\n\n         1. Follow the previous steps again to create a profile for the `osx.10.11-x64` platform. The **Target Location** is *bin\\Release\\PublishOutput\\osx.10.11-x64*, and the **Target Runtime** is `osx.10.11-x64`. The name that Visual Studio assigns to this profile is **FolderProfile2**.\n\n      Note that each target location contains the complete set of files (both your app files and all .NET Core files) needed to launch your app.\n\nAlong with your application's files, the publishing process emits a program database (.pdb) file that contains debugging information about your app. The file is useful primarily for debugging exceptions. You can choose not to package it with your application's files. You should, however, save it in the event that you want to debug the Release build of your app.\n\nDeploy the published files in any way you like. For example, you can package them in a Zip file, use a simple `copy` command, or deploy them with any installation package of your choice.\n\nThe following is the complete *csproj* file for this project.\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>netcoreapp2.1</TargetFramework>\n    <RuntimeIdentifiers>win10-x64;osx.10.11-x64</RuntimeIdentifiers>\n  </PropertyGroup>\n</Project>\n```\n\n# [Visual Studio 15.7 and later](#tab/vs157)\n\nAfter you've debugged and tested the program, create the files to be deployed with your app for each platform that it targets. This involves creating a separate profile for each target platform.\n\nFor each platform that your application targets, do the following:\n\n1. Create a profile for your target platform.\n\n   If this is the first profile you've created, right-click on the project (not the solution) in **Solution Explorer** and select **Publish**.\n\n   If you've already created a profile, right-click on the project to open the **Publish** dialog if it isn't already open. Then select **New Profile**.\n\n   The **Pick a Publish Target** dialog box opens.\n  \n1. Select the location where Visual Studio publishes your application.\n\n   If you're only publishing to a single platform, you can accept the default value in the **Choose a folder** text box; this publishes the framework dependent deployment of your application to the *\\<project-directory>\\bin\\Release\\netcoreapp2.1\\publish\\* directory.\n\n   If you're publishing to more than one platform, append a string that identifies the target platform. For example, if you append the string \"linux\" to the file path, Visual Studio publishes the framework dependent deployment of your application to the *\\<project-directory>\\bin\\Release\\netcoreapp2.1\\publish\\linux* directory.\n\n1. Create the profile by selecting the drop-down list icon next to the **Publish** button and selecting **Create Profile**. Then select the **Create Profile** button to create the profile.\n\n1. Indicate that you are publishing a self-contained deployment and define a platform that your app will target.\n\n   1. In the **Publish** dialog, select the **Configure** link to open the **Profile Settings** dialog.\n\n   1. Select **Self-contained** in the **Deployment Mode** list box.\n\n   1. In the **Target Runtime** list box, select one of the platforms that your application targets.\n\n   1. Select **Save** to accept your changes and close the dialog.\n\n1. Name your profile.\n\n   1. Select **Actions** > **Rename Profile** to name your profile.\n\n   2. Assign your profile a name that identifies the target platform, then select **Save*.\n\nRepeat these steps to define any additional target platforms that your application targets.\n\nYou've configured your profiles and are now ready to publish your app. To do this:\n\n   1. If the **Publish** window isn't currently open, right-click on the project (not the solution) in **Solution Explorer** and select **Publish**.\n\n   2. Select the profile that you'd like to publish, then select **Publish**. Do this for each profile to be published.\n\n   Note that each target location (in the case of our example, bin\\release\\netcoreapp2.1\\publish\\\\*profile-name* contains the complete set of files (both your app files and all .NET Core files) needed to launch your app.\n\nAlong with your application's files, the publishing process emits a program database (.pdb) file that contains debugging information about your app. The file is useful primarily for debugging exceptions. You can choose not to package it with your application's files. You should, however, save it in the event that you want to debug the Release build of your app.\n\nDeploy the published files in any way you like. For example, you can package them in a Zip file, use a simple `copy` command, or deploy them with any installation package of your choice.\n\nThe following is the complete *csproj* file for this project.\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>netcoreapp2.1</TargetFramework>\n  </PropertyGroup>\n</Project>\n```\n\nIn addition, Visual Studio creates a separate publishing profile (\\*.pubxml) for each platform that you target. For example, the file for our linux profile (linux.pubxml) appears as follows:\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\nhttps://go.microsoft.com/fwlink/?LinkID=208121. \n-->\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <PropertyGroup>\n    <PublishProtocol>FileSystem</PublishProtocol>\n    <Configuration>Release</Configuration>\n    <Platform>Any CPU</Platform>\n    <TargetFramework>netcoreapp2.1</TargetFramework>\n    <PublishDir>bin\\Release\\netcoreapp2.1\\publish\\linux</PublishDir>\n    <RuntimeIdentifier>win-x86</RuntimeIdentifier>\n    <SelfContained>true</SelfContained>\n    <_IsPortable>false</_IsPortable>\n  </PropertyGroup>\n</Project>\n```\n\n---\n\n## Self-contained deployment with third-party dependencies\n\nDeploying a self-contained deployment with one or more third-party dependencies involves adding the dependencies. The following additional steps are required before you can build your app:\n\n1. Use the **NuGet Package Manager** to add a reference to a NuGet package to your project; and if the package is not already available on your system, install it. To open the package manager, select **Tools** > **NuGet Package Manager** > **Manage NuGet Packages for Solution**.\n\n1. Confirm that `Newtonsoft.Json` is installed on your system and, if it is not, install it. The **Installed** tab lists NuGet packages installed on your system. If `Newtonsoft.Json` is not listed there, select the **Browse** tab and enter \"Newtonsoft.Json\" in the search box. Select `Newtonsoft.Json` and, in the right pane, select your project before selecting **Install**.\n\n1. If `Newtonsoft.Json` is already installed on your system, add it to your project by selecting your project in the right pane of the **Manage Packages for Solution** tab.\n\nThe following is the complete *csproj* file for this project:\n\n# [Visual Studio 15.6 and earlier](#tab/vs156)\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>netcoreapp2.1</TargetFramework>\n    <RuntimeIdentifiers>win10-x64;osx.10.11-x64</RuntimeIdentifiers>\n  </PropertyGroup>\n  <ItemGroup>\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.2\" />\n  </ItemGroup>\n</Project>\n```\n\n# [Visual Studio 15.7 and later](#tab/vs157)\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>netcoreapp2.1</TargetFramework>\n  </PropertyGroup>\n  <ItemGroup>\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.2\" />\n  </ItemGroup>\n</Project>\n```\n\n---\n\nWhen you deploy your application, any third-party dependencies used in your app are also contained with your application files. Third-party libraries aren't required on the system on which the app is running.\n\nNote that you can only deploy a self-contained deployment with a third-party library to platforms supported by that library. This is similar to having third-party dependencies with native dependencies in your framework-dependent deployment, where the native dependencies won't exist on the target platform unless they were previously installed there.\n\n## See also\n\n- [.NET Core Application Deployment](index.md)\n- [.NET Core Runtime IDentifier (RID) catalog](../rid-catalog.md)\n","nodes":[{"pos":[4,237],"embed":true,"restype":"x-metadata","content":"title: Deploy .NET Core apps with Visual Studio\ndescription: Learn to deploy a .NET Core app with Visual Studio.\nauthor: rpetrusha\nms.author: ronpet\nms.date: 09/03/2018\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.custom: vs-dotnet, seodec18","nodes":[{"content":"Deploy .NET Core apps with Visual Studio","nodes":[{"pos":[0,40],"content":"Deploy .NET Core apps with Visual Studio","nodes":[{"content":"Deploy .NET Core apps with Visual Studio","pos":[0,40]}]}],"path":["title"],"nosxs":false},{"content":"Learn to deploy a .NET Core app with Visual Studio.","nodes":[{"pos":[0,51],"content":"Learn to deploy a .NET Core app with Visual Studio.","nodes":[{"content":"Learn to deploy a .NET Core app with Visual Studio.","pos":[0,51]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[244,284],"content":"Deploy .NET Core apps with Visual Studio","linkify":"Deploy .NET Core apps with Visual Studio","nodes":[{"content":"Deploy .NET Core apps with Visual Studio","pos":[0,40]}]},{"content":"You can deploy a .NET Core application either as a <bpt id=\"p1\">*</bpt>framework-dependent deployment<ept id=\"p1\">*</ept>, which includes your application binaries but depends on the presence of .NET Core on the target system, or as a <bpt id=\"p2\">*</bpt>self-contained deployment<ept id=\"p2\">*</ept>, which includes both your application and .NET Core binaries.","pos":[286,572],"source":"You can deploy a .NET Core application either as a *framework-dependent deployment*, which includes your application binaries but depends on the presence of .NET Core on the target system, or as a *self-contained deployment*, which includes both your application and .NET Core binaries."},{"content":"For an overview of .NET Core application deployment, see <bpt id=\"p1\">[</bpt>.NET Core Application Deployment<ept id=\"p1\">](index.md)</ept>.","pos":[573,675],"source":" For an overview of .NET Core application deployment, see [.NET Core Application Deployment](index.md)."},{"content":"The following sections show how to use Microsoft Visual Studio to create the following kinds of deployments:","pos":[677,785]},{"content":"Framework-dependent deployment","pos":[789,819]},{"content":"Framework-dependent deployment with third-party dependencies","pos":[822,882]},{"content":"Self-contained deployment","pos":[885,910]},{"content":"Self-contained deployment with third-party dependencies","pos":[913,968]},{"pos":[970,1156],"content":"For information on using Visual Studio to develop .NET Core applications, see <bpt id=\"p1\">[</bpt>Prerequisites for .NET Core on Windows<ept id=\"p1\">](../windows-prerequisites.md#prerequisites-with-visual-studio-2017)</ept>.","source":"For information on using Visual Studio to develop .NET Core applications, see [Prerequisites for .NET Core on Windows](../windows-prerequisites.md#prerequisites-with-visual-studio-2017)."},{"pos":[1161,1191],"content":"Framework-dependent deployment","linkify":"Framework-dependent deployment","nodes":[{"content":"Framework-dependent deployment","pos":[0,30]}]},{"content":"Deploying a framework-dependent deployment with no third-party dependencies simply involves building, testing, and publishing the app.","pos":[1193,1327]},{"content":"A simple example written in C# illustrates the process.","pos":[1328,1383]},{"content":"Create the project.","pos":[1390,1409]},{"content":"Select <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept><ph id=\"ph2\"> &gt; </ph><bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","pos":[1414,1454],"source":"Select **File** > **New** > **Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog, expand your language's (C# or Visual Basic) project categories in the <bpt id=\"p2\">**</bpt>Installed<ept id=\"p2\">**</ept> project types pane, choose <bpt id=\"p3\">**</bpt>.NET Core<ept id=\"p3\">**</ept>, and then select the <bpt id=\"p4\">**</bpt>Console App (.NET Core)<ept id=\"p4\">**</ept> template in the center pane.","pos":[1455,1688],"source":" In the **New Project** dialog, expand your language's (C# or Visual Basic) project categories in the **Installed** project types pane, choose **.NET Core**, and then select the **Console App (.NET Core)** template in the center pane."},{"content":"Enter a project name, such as \"FDD\", in the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> text box.","pos":[1689,1751],"source":" Enter a project name, such as \"FDD\", in the **Name** text box."},{"content":"Select the <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button.","pos":[1752,1777],"source":" Select the **OK** button."},{"content":"Add the application's source code.","pos":[1782,1816]},{"content":"Open the <bpt id=\"p1\">*</bpt>Program.cs<ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt>Program.vb<ept id=\"p2\">*</ept> file in the editor and replace the auto-generated code with the following code.","pos":[1821,1938],"source":"Open the *Program.cs* or *Program.vb* file in the editor and replace the auto-generated code with the following code."},{"content":"It prompts the user to enter text and displays the individual words entered by the user.","pos":[1939,2027]},{"content":"It uses the regular expression <ph id=\"ph1\">`\\w+`</ph> to separate the words in the input text.","pos":[2028,2105],"source":" It uses the regular expression `\\w+` to separate the words in the input text."},{"pos":[2110,2286],"content":"[!code-csharp[deployment#1](~/samples/snippets/core/deploying/cs/deployment-example.cs)]\n[!code-vb[deployment#1](~/samples/snippets/core/deploying/vb/deployment-example.vb)]","leadings":["","   "],"nodes":[]},{"content":"Create a Debug build of your app.","pos":[2291,2324]},{"content":"Select <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>Build Solution<ept id=\"p2\">**</ept>.","pos":[2329,2367],"source":"Select **Build** > **Build Solution**."},{"content":"You can also compile and run the Debug build of your application by selecting <bpt id=\"p1\">**</bpt>Debug<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>Start Debugging<ept id=\"p2\">**</ept>.","pos":[2368,2478],"source":" You can also compile and run the Debug build of your application by selecting **Debug** > **Start Debugging**."},{"content":"Deploy your app.","pos":[2483,2499]},{"content":"After you've debugged and tested the program, create the files to be deployed with your app.","pos":[2504,2596]},{"content":"To publish from Visual Studio, do the following:","pos":[2597,2645]},{"pos":[2656,2796],"content":"Change the solution configuration from <bpt id=\"p1\">**</bpt>Debug<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>Release<ept id=\"p2\">**</ept> on the toolbar to build a Release (rather than a Debug) version of your app.","source":"Change the solution configuration from **Debug** to **Release** on the toolbar to build a Release (rather than a Debug) version of your app."},{"pos":[2807,2901],"content":"Right-click on the project (not the solution) in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and select <bpt id=\"p2\">**</bpt>Publish<ept id=\"p2\">**</ept>.","source":"Right-click on the project (not the solution) in **Solution Explorer** and select **Publish**."},{"content":"In the <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> tab, select <bpt id=\"p2\">**</bpt>Publish<ept id=\"p2\">**</ept>.","pos":[2912,2955],"source":"In the **Publish** tab, select **Publish**."},{"content":"Visual Studio writes the files that comprise your application to the local file system.","pos":[2956,3043]},{"content":"The <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> tab now shows a single profile, <bpt id=\"p2\">**</bpt>FolderProfile<ept id=\"p2\">**</ept>.","pos":[3054,3120],"source":"The **Publish** tab now shows a single profile, **FolderProfile**."},{"content":"The profile's configuration settings are shown in the <bpt id=\"p1\">**</bpt>Summary<ept id=\"p1\">**</ept> section of the tab.","pos":[3121,3206],"source":" The profile's configuration settings are shown in the **Summary** section of the tab."},{"pos":[3211,3401],"content":"The resulting files are placed in a directory named <ph id=\"ph1\">`Publish`</ph> on Windows and <ph id=\"ph2\">`publish`</ph> on Unix systems that is in a subdirectory of your project's <bpt id=\"p1\">*</bpt>.\\bin\\release\\netcoreapp2.1<ept id=\"p1\">*</ept> subdirectory.","source":"The resulting files are placed in a directory named `Publish` on Windows and `publish` on Unix systems that is in a subdirectory of your project's *.\\bin\\release\\netcoreapp2.1* subdirectory."},{"content":"Along with your application's files, the publishing process emits a program database (.pdb) file that contains debugging information about your app.","pos":[3403,3551]},{"content":"The file is useful primarily for debugging exceptions.","pos":[3552,3606]},{"content":"You can choose not to package it with your application's files.","pos":[3607,3670]},{"content":"You should, however, save it in the event that you want to debug the Release build of your app.","pos":[3671,3766]},{"content":"Deploy the complete set of application files in any way you like.","pos":[3768,3833]},{"content":"For example, you can package them in a Zip file, use a simple <ph id=\"ph1\">`copy`</ph> command, or deploy them with any installation package of your choice.","pos":[3834,3972],"source":" For example, you can package them in a Zip file, use a simple `copy` command, or deploy them with any installation package of your choice."},{"content":"Once installed, users can then execute your application by using the <ph id=\"ph1\">`dotnet`</ph> command and providing the application filename, such as <ph id=\"ph2\">`dotnet fdd.dll`</ph>.","pos":[3973,4124],"source":" Once installed, users can then execute your application by using the `dotnet` command and providing the application filename, such as `dotnet fdd.dll`."},{"content":"In addition to the application binaries, your installer should also either bundle the shared framework installer or check for it as a prerequisite as part of the application installation.","pos":[4126,4313]},{"content":"Installation of the shared framework requires Administrator/root access since it is machine-wide.","pos":[4315,4412]},{"pos":[4417,4477],"content":"Framework-dependent deployment with third-party dependencies","linkify":"Framework-dependent deployment with third-party dependencies","nodes":[{"content":"Framework-dependent deployment with third-party dependencies","pos":[0,60]}]},{"content":"Deploying a framework-dependent deployment with one or more third-party dependencies requires that any dependencies be available to your project.","pos":[4479,4624]},{"content":"The following additional steps are required before you can build your app:","pos":[4625,4699]},{"content":"Use the <bpt id=\"p1\">**</bpt>NuGet Package Manager<ept id=\"p1\">**</ept> to add a reference to a NuGet package to your project; and if the package is not already available on your system, install it.","pos":[4704,4864],"source":"Use the **NuGet Package Manager** to add a reference to a NuGet package to your project; and if the package is not already available on your system, install it."},{"content":"To open the package manager, select <bpt id=\"p1\">**</bpt>Tools<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>NuGet Package Manager<ept id=\"p2\">**</ept><ph id=\"ph2\"> &gt; </ph><bpt id=\"p3\">**</bpt>Manage NuGet Packages for Solution<ept id=\"p3\">**</ept>.","pos":[4865,4980],"source":" To open the package manager, select **Tools** > **NuGet Package Manager** > **Manage NuGet Packages for Solution**."},{"content":"Confirm that <ph id=\"ph1\">`Newtonsoft.Json`</ph> is installed on your system and, if it is not, install it.","pos":[4985,5074],"source":"Confirm that `Newtonsoft.Json` is installed on your system and, if it is not, install it."},{"content":"The <bpt id=\"p1\">**</bpt>Installed<ept id=\"p1\">**</ept> tab lists NuGet packages installed on your system.","pos":[5075,5143],"source":" The **Installed** tab lists NuGet packages installed on your system."},{"content":"If <ph id=\"ph1\">`Newtonsoft.Json`</ph> is not listed there, select the <bpt id=\"p1\">**</bpt>Browse<ept id=\"p1\">**</ept> tab and enter \"Newtonsoft.Json\" in the search box.","pos":[5144,5258],"source":" If `Newtonsoft.Json` is not listed there, select the **Browse** tab and enter \"Newtonsoft.Json\" in the search box."},{"content":"Select <ph id=\"ph1\">`Newtonsoft.Json`</ph> and, in the right pane, select your project before selecting <bpt id=\"p1\">**</bpt>Install<ept id=\"p1\">**</ept>.","pos":[5259,5357],"source":" Select `Newtonsoft.Json` and, in the right pane, select your project before selecting **Install**."},{"pos":[5362,5531],"content":"If <ph id=\"ph1\">`Newtonsoft.Json`</ph> is already installed on your system, add it to your project by selecting your project in the right pane of the <bpt id=\"p1\">**</bpt>Manage Packages for Solution<ept id=\"p1\">**</ept> tab.","source":"If `Newtonsoft.Json` is already installed on your system, add it to your project by selecting your project in the right pane of the **Manage Packages for Solution** tab."},{"content":"Note that a framework-dependent deployment with third-party dependencies is only as portable as its third-party dependencies.","pos":[5533,5658]},{"content":"For example, if a third-party library only supports macOS, the app isn't portable to Windows systems.","pos":[5659,5760]},{"content":"This happens if the third-party dependency itself depends on native code.","pos":[5761,5834]},{"content":"A good example of this is <bpt id=\"p1\">[</bpt>Kestrel server<ept id=\"p1\">](https://docs.microsoft.com/aspnet/core/fundamentals/servers/kestrel)</ept>, which requires a native dependency on <bpt id=\"p2\">[</bpt>libuv<ept id=\"p2\">](https://github.com/libuv/libuv)</ept>.","pos":[5835,6026],"source":" A good example of this is [Kestrel server](https://docs.microsoft.com/aspnet/core/fundamentals/servers/kestrel), which requires a native dependency on [libuv](https://github.com/libuv/libuv)."},{"content":"When an FDD is created for an application with this kind of third-party dependency, the published output contains a folder for each <bpt id=\"p1\">[</bpt>Runtime Identifier (RID)<ept id=\"p1\">](../rid-catalog.md)</ept> that the native dependency supports (and that exists in its NuGet package).","pos":[6027,6280],"source":" When an FDD is created for an application with this kind of third-party dependency, the published output contains a folder for each [Runtime Identifier (RID)](../rid-catalog.md) that the native dependency supports (and that exists in its NuGet package)."},{"pos":[6285,6369],"content":"<bpt id=\"p1\">&lt;a name=\"simpleSelf\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept> Self-contained deployment without third-party dependencies","linkify":"<a name=\"simpleSelf\"></a> Self-contained deployment without third-party dependencies","source":"<a name=\"simpleSelf\"></a> Self-contained deployment without third-party dependencies"},{"content":"Deploying a self-contained deployment with no third-party dependencies involves creating the project, modifying the <bpt id=\"p1\">*</bpt>csproj<ept id=\"p1\">*</ept> file, building, testing, and publishing the app.","pos":[6371,6544],"source":"Deploying a self-contained deployment with no third-party dependencies involves creating the project, modifying the *csproj* file, building, testing, and publishing the app."},{"content":"A simple example written in C# illustrates the process.","pos":[6545,6600]},{"content":"You begin by creating, coding, and testing your project just as you would a framework-dependent deployment:","pos":[6601,6708]},{"content":"Create the project.","pos":[6713,6732]},{"content":"Select <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept><ph id=\"ph2\"> &gt; </ph><bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","pos":[6737,6777],"source":"Select **File** > **New** > **Project**."},{"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog, expand your language's (C# or Visual Basic) project categories in the <bpt id=\"p2\">**</bpt>Installed<ept id=\"p2\">**</ept> project types pane, choose <bpt id=\"p3\">**</bpt>.NET Core<ept id=\"p3\">**</ept>, and then select the <bpt id=\"p4\">**</bpt>Console App (.NET Core)<ept id=\"p4\">**</ept> template in the center pane.","pos":[6778,7011],"source":" In the **New Project** dialog, expand your language's (C# or Visual Basic) project categories in the **Installed** project types pane, choose **.NET Core**, and then select the **Console App (.NET Core)** template in the center pane."},{"content":"Enter a project name, such as \"SCD\", in the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> text box, and select the <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept> button.","pos":[7012,7104],"source":" Enter a project name, such as \"SCD\", in the **Name** text box, and select the **OK** button."},{"content":"Add the application's source code.","pos":[7109,7143]},{"content":"Open the <bpt id=\"p1\">*</bpt>Program.cs<ept id=\"p1\">*</ept> or file in your editor, and replace the auto-generated code with the following code.","pos":[7148,7254],"source":"Open the *Program.cs* or file in your editor, and replace the auto-generated code with the following code."},{"content":"It prompts the user to enter text and displays the individual words entered by the user.","pos":[7255,7343]},{"content":"It uses the regular expression <ph id=\"ph1\">`\\w+`</ph> to separate the words in the input text.","pos":[7344,7421],"source":" It uses the regular expression `\\w+` to separate the words in the input text."},{"pos":[7426,7602],"content":"[!code-csharp[deployment#1](~/samples/snippets/core/deploying/cs/deployment-example.cs)]\n[!code-vb[deployment#1](~/samples/snippets/core/deploying/vb/deployment-example.vb)]","leadings":["","   "],"nodes":[]},{"content":"Determine whether you want to use globalization invariant mode.","pos":[7607,7670]},{"content":"Particularly if your app targets Linux, you can reduce the total size of your deployment by taking advantage of <bpt id=\"p1\">[</bpt>globalization invariant mode<ept id=\"p1\">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)</ept>.","pos":[7675,7923],"source":"Particularly if your app targets Linux, you can reduce the total size of your deployment by taking advantage of [globalization invariant mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)."},{"content":"Globalization invariant mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the <bpt id=\"p1\">[</bpt>invariant culture<ept id=\"p1\">](xref:System.Globalization.CultureInfo.InvariantCulture)</ept>.","pos":[7924,8193],"source":" Globalization invariant mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture)."},{"content":"To enable invariant mode, right-click on your project (not the solution) in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, and select <bpt id=\"p2\">**</bpt>Edit SCD.csproj<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>Edit SCD.vbproj<ept id=\"p3\">**</ept>.","pos":[8198,8351],"source":"To enable invariant mode, right-click on your project (not the solution) in **Solution Explorer**, and select **Edit SCD.csproj** or **Edit SCD.vbproj**."},{"content":"Then add the following highlighted lines to the file:","pos":[8352,8405]},{"content":"Create a Debug build of your application.","pos":[8510,8551]},{"content":"Select <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>Build Solution<ept id=\"p2\">**</ept>.","pos":[8556,8594],"source":"Select **Build** > **Build Solution**."},{"content":"You can also compile and run the Debug build of your application by selecting <bpt id=\"p1\">**</bpt>Debug<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>Start Debugging<ept id=\"p2\">**</ept>.","pos":[8595,8705],"source":" You can also compile and run the Debug build of your application by selecting **Debug** > **Start Debugging**."},{"content":"This debugging step lets you identify problems with your application when it's running on your host platform.","pos":[8706,8815]},{"content":"You still will have to test it on each of your target platforms.","pos":[8816,8880]},{"content":"If you've enabled globalization invariant mode, be particularly sure to test whether the absence of culture-sensitive data is suitable for your application.","pos":[8885,9041]},{"content":"Once you've finished debugging, you can publish your self-contained deployment:","pos":[9043,9122]},{"pos":[9126,9170],"content":"<bpt id=\"p1\">[</bpt>Visual Studio 15.6 and earlier<ept id=\"p1\">](#tab/vs156)</ept>","linkify":"[Visual Studio 15.6 and earlier](#tab/vs156)","source":"[Visual Studio 15.6 and earlier](#tab/vs156)"},{"content":"After you've debugged and tested the program, create the files to be deployed with your app for each platform that it targets.","pos":[9172,9298]},{"content":"To publish your app from Visual Studio, do the following:","pos":[9300,9357]},{"content":"Define the platforms that your app will target.","pos":[9362,9409]},{"pos":[9417,9520],"content":"Right-click on your project (not the solution) in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and select <bpt id=\"p2\">**</bpt>Edit SCD.csproj<ept id=\"p2\">**</ept>.","source":"Right-click on your project (not the solution) in **Solution Explorer** and select **Edit SCD.csproj**."},{"content":"Create a <ph id=\"ph1\">`&lt;RuntimeIdentifiers&gt;`</ph> tag in the <ph id=\"ph2\">`&lt;PropertyGroup&gt;`</ph> section of your <bpt id=\"p1\">*</bpt>csproj<ept id=\"p1\">*</ept> file that defines the platforms your app targets, and specify the runtime identifier (RID) of each platform that you target.","pos":[9528,9738],"source":"Create a `<RuntimeIdentifiers>` tag in the `<PropertyGroup>` section of your *csproj* file that defines the platforms your app targets, and specify the runtime identifier (RID) of each platform that you target."},{"content":"Note that you also need to add a semicolon to separate the RIDs.","pos":[9739,9803]},{"content":"See <bpt id=\"p1\">[</bpt>Runtime IDentifier catalog<ept id=\"p1\">](../rid-catalog.md)</ept> for a list of runtime identifiers.","pos":[9804,9890],"source":" See [Runtime IDentifier catalog](../rid-catalog.md) for a list of runtime identifiers."},{"content":"For example, the following example indicates that the app runs on 64-bit Windows 10 operating systems and the 64-bit OS X Version 10.11 operating system.","pos":[9895,10048]},{"content":"Note that the <ph id=\"ph1\">`&lt;RuntimeIdentifiers&gt;`</ph> element can go into any <ph id=\"ph2\">`&lt;PropertyGroup&gt;`</ph> that you have in your <bpt id=\"p1\">*</bpt>csproj<ept id=\"p1\">*</ept> file.","pos":[10181,10296],"source":"Note that the `<RuntimeIdentifiers>` element can go into any `<PropertyGroup>` that you have in your *csproj* file."},{"content":"A complete sample <bpt id=\"p1\">*</bpt>csproj<ept id=\"p1\">*</ept> file appears later in this section.","pos":[10297,10359],"source":" A complete sample *csproj* file appears later in this section."},{"content":"Publish your app.","pos":[10364,10381]},{"content":"After you've debugged and tested the program, create the files to be deployed with your app for each platform that it targets.","pos":[10386,10512]},{"content":"To publish your app from Visual Studio, do the following:","pos":[10517,10574]},{"pos":[10585,10725],"content":"Change the solution configuration from <bpt id=\"p1\">**</bpt>Debug<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>Release<ept id=\"p2\">**</ept> on the toolbar to build a Release (rather than a Debug) version of your app.","source":"Change the solution configuration from **Debug** to **Release** on the toolbar to build a Release (rather than a Debug) version of your app."},{"pos":[10736,10830],"content":"Right-click on the project (not the solution) in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and select <bpt id=\"p2\">**</bpt>Publish<ept id=\"p2\">**</ept>.","source":"Right-click on the project (not the solution) in **Solution Explorer** and select **Publish**."},{"content":"In the <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> tab, select <bpt id=\"p2\">**</bpt>Publish<ept id=\"p2\">**</ept>.","pos":[10841,10884],"source":"In the **Publish** tab, select **Publish**."},{"content":"Visual Studio writes the files that comprise your application to the local file system.","pos":[10885,10972]},{"content":"The <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> tab now shows a single profile, <bpt id=\"p2\">**</bpt>FolderProfile<ept id=\"p2\">**</ept>.","pos":[10983,11049],"source":"The **Publish** tab now shows a single profile, **FolderProfile**."},{"content":"The profile's configuration settings are shown in the <bpt id=\"p1\">**</bpt>Summary<ept id=\"p1\">**</ept> section of the tab. <bpt id=\"p2\">**</bpt>Target Runtime<ept id=\"p2\">**</ept> identifies which runtime has been published, and <bpt id=\"p3\">**</bpt>Target Location<ept id=\"p3\">**</ept> identifies where the files for the self-contained deployment were written.","pos":[11050,11298],"source":" The profile's configuration settings are shown in the **Summary** section of the tab. **Target Runtime** identifies which runtime has been published, and **Target Location** identifies where the files for the self-contained deployment were written."},{"content":"Visual Studio by default writes all published files to a single directory.","pos":[11309,11383]},{"content":"For convenience, it's best to create separate profiles for each target runtime and to place published files in a platform-specific directory.","pos":[11384,11525]},{"content":"This involves creating a separate publishing profile for each target platform.","pos":[11526,11604]},{"content":"So now rebuild the application for each platform by doing the following:","pos":[11605,11677]},{"pos":[11691,11747],"content":"Select <bpt id=\"p1\">**</bpt>Create new profile<ept id=\"p1\">**</ept> in the <bpt id=\"p2\">**</bpt>Publish<ept id=\"p2\">**</ept> dialog.","source":"Select **Create new profile** in the **Publish** dialog."},{"content":"In the <bpt id=\"p1\">**</bpt>Pick a publish target<ept id=\"p1\">**</ept> dialog, change the <bpt id=\"p2\">**</bpt>Choose a folder<ept id=\"p2\">**</ept> location to <bpt id=\"p3\">*</bpt>bin\\Release\\PublishOutput\\win10-x64<ept id=\"p3\">*</ept>.","pos":[11761,11883],"source":"In the **Pick a publish target** dialog, change the **Choose a folder** location to *bin\\Release\\PublishOutput\\win10-x64*."},{"content":"Select <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","pos":[11884,11898],"source":" Select **OK**."},{"content":"Select the new profile (<bpt id=\"p1\">**</bpt>FolderProfile1<ept id=\"p1\">**</ept>) in the list of profiles, and make sure that the <bpt id=\"p2\">**</bpt>Target Runtime<ept id=\"p2\">**</ept> is <ph id=\"ph1\">`win10-x64`</ph>.","pos":[11912,12038],"source":"Select the new profile (**FolderProfile1**) in the list of profiles, and make sure that the **Target Runtime** is `win10-x64`."},{"content":"If it isn't, select <bpt id=\"p1\">**</bpt>Settings<ept id=\"p1\">**</ept>.","pos":[12039,12072],"source":" If it isn't, select **Settings**."},{"content":"In the <bpt id=\"p1\">**</bpt>Profile Settings<ept id=\"p1\">**</ept> dialog, change the <bpt id=\"p2\">**</bpt>Target Runtime<ept id=\"p2\">**</ept> to <ph id=\"ph1\">`win10-x64`</ph> and select <bpt id=\"p3\">**</bpt>Save<ept id=\"p3\">**</ept>.","pos":[12073,12174],"source":" In the **Profile Settings** dialog, change the **Target Runtime** to `win10-x64` and select **Save**."},{"content":"Otherwise, select <bpt id=\"p1\">**</bpt>Cancel<ept id=\"p1\">**</ept>.","pos":[12175,12204],"source":" Otherwise, select **Cancel**."},{"pos":[12218,12289],"content":"Select <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> to publish your app for 64-bit Windows 10 platforms.","source":"Select **Publish** to publish your app for 64-bit Windows 10 platforms."},{"content":"Follow the previous steps again to create a profile for the <ph id=\"ph1\">`osx.10.11-x64`</ph> platform.","pos":[12303,12388],"source":"Follow the previous steps again to create a profile for the `osx.10.11-x64` platform."},{"content":"The <bpt id=\"p1\">**</bpt>Target Location<ept id=\"p1\">**</ept> is <bpt id=\"p2\">*</bpt>bin\\Release\\PublishOutput\\osx.10.11-x64<ept id=\"p2\">*</ept>, and the <bpt id=\"p3\">**</bpt>Target Runtime<ept id=\"p3\">**</ept> is <ph id=\"ph1\">`osx.10.11-x64`</ph>.","pos":[12389,12505],"source":" The **Target Location** is *bin\\Release\\PublishOutput\\osx.10.11-x64*, and the **Target Runtime** is `osx.10.11-x64`."},{"content":"The name that Visual Studio assigns to this profile is <bpt id=\"p1\">**</bpt>FolderProfile2<ept id=\"p1\">**</ept>.","pos":[12506,12580],"source":" The name that Visual Studio assigns to this profile is **FolderProfile2**."},{"content":"Note that each target location contains the complete set of files (both your app files and all .NET Core files) needed to launch your app.","pos":[12588,12726]},{"content":"Along with your application's files, the publishing process emits a program database (.pdb) file that contains debugging information about your app.","pos":[12728,12876]},{"content":"The file is useful primarily for debugging exceptions.","pos":[12877,12931]},{"content":"You can choose not to package it with your application's files.","pos":[12932,12995]},{"content":"You should, however, save it in the event that you want to debug the Release build of your app.","pos":[12996,13091]},{"content":"Deploy the published files in any way you like.","pos":[13093,13140]},{"content":"For example, you can package them in a Zip file, use a simple <ph id=\"ph1\">`copy`</ph> command, or deploy them with any installation package of your choice.","pos":[13141,13279],"source":" For example, you can package them in a Zip file, use a simple `copy` command, or deploy them with any installation package of your choice."},{"pos":[13281,13342],"content":"The following is the complete <bpt id=\"p1\">*</bpt>csproj<ept id=\"p1\">*</ept> file for this project.","source":"The following is the complete *csproj* file for this project."},{"pos":[13595,13637],"content":"<bpt id=\"p1\">[</bpt>Visual Studio 15.7 and later<ept id=\"p1\">](#tab/vs157)</ept>","linkify":"[Visual Studio 15.7 and later](#tab/vs157)","source":"[Visual Studio 15.7 and later](#tab/vs157)"},{"content":"After you've debugged and tested the program, create the files to be deployed with your app for each platform that it targets.","pos":[13639,13765]},{"content":"This involves creating a separate profile for each target platform.","pos":[13766,13833]},{"content":"For each platform that your application targets, do the following:","pos":[13835,13901]},{"content":"Create a profile for your target platform.","pos":[13906,13948]},{"pos":[13953,14092],"content":"If this is the first profile you've created, right-click on the project (not the solution) in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and select <bpt id=\"p2\">**</bpt>Publish<ept id=\"p2\">**</ept>.","source":"If this is the first profile you've created, right-click on the project (not the solution) in **Solution Explorer** and select **Publish**."},{"content":"If you've already created a profile, right-click on the project to open the <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> dialog if it isn't already open.","pos":[14097,14217],"source":"If you've already created a profile, right-click on the project to open the **Publish** dialog if it isn't already open."},{"content":"Then select <bpt id=\"p1\">**</bpt>New Profile<ept id=\"p1\">**</ept>.","pos":[14218,14246],"source":" Then select **New Profile**."},{"pos":[14251,14298],"content":"The <bpt id=\"p1\">**</bpt>Pick a Publish Target<ept id=\"p1\">**</ept> dialog box opens.","source":"The **Pick a Publish Target** dialog box opens."},{"content":"Select the location where Visual Studio publishes your application.","pos":[14305,14372]},{"pos":[14377,14640],"content":"If you're only publishing to a single platform, you can accept the default value in the <bpt id=\"p1\">**</bpt>Choose a folder<ept id=\"p1\">**</ept> text box; this publishes the framework dependent deployment of your application to the *<ph id=\"ph1\">\\&lt;</ph>project-directory&gt;\\bin\\Release\\netcoreapp2.1\\publish<ph id=\"ph2\">\\*</ph> directory.","source":"If you're only publishing to a single platform, you can accept the default value in the **Choose a folder** text box; this publishes the framework dependent deployment of your application to the *\\<project-directory>\\bin\\Release\\netcoreapp2.1\\publish\\* directory."},{"content":"If you're publishing to more than one platform, append a string that identifies the target platform.","pos":[14645,14745]},{"content":"For example, if you append the string \"linux\" to the file path, Visual Studio publishes the framework dependent deployment of your application to the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\&lt;</ph>project-directory&gt;\\bin\\Release\\netcoreapp2.1\\publish\\linux<ept id=\"p1\">*</ept> directory.","pos":[14746,14969],"source":" For example, if you append the string \"linux\" to the file path, Visual Studio publishes the framework dependent deployment of your application to the *\\<project-directory>\\bin\\Release\\netcoreapp2.1\\publish\\linux* directory."},{"content":"Create the profile by selecting the drop-down list icon next to the <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> button and selecting <bpt id=\"p2\">**</bpt>Create Profile<ept id=\"p2\">**</ept>.","pos":[14974,15094],"source":"Create the profile by selecting the drop-down list icon next to the **Publish** button and selecting **Create Profile**."},{"content":"Then select the <bpt id=\"p1\">**</bpt>Create Profile<ept id=\"p1\">**</ept> button to create the profile.","pos":[15095,15159],"source":" Then select the **Create Profile** button to create the profile."},{"content":"Indicate that you are publishing a self-contained deployment and define a platform that your app will target.","pos":[15164,15273]},{"pos":[15281,15378],"content":"In the <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> dialog, select the <bpt id=\"p2\">**</bpt>Configure<ept id=\"p2\">**</ept> link to open the <bpt id=\"p3\">**</bpt>Profile Settings<ept id=\"p3\">**</ept> dialog.","source":"In the **Publish** dialog, select the **Configure** link to open the **Profile Settings** dialog."},{"pos":[15386,15448],"content":"Select <bpt id=\"p1\">**</bpt>Self-contained<ept id=\"p1\">**</ept> in the <bpt id=\"p2\">**</bpt>Deployment Mode<ept id=\"p2\">**</ept> list box.","source":"Select **Self-contained** in the **Deployment Mode** list box."},{"pos":[15456,15550],"content":"In the <bpt id=\"p1\">**</bpt>Target Runtime<ept id=\"p1\">**</ept> list box, select one of the platforms that your application targets.","source":"In the **Target Runtime** list box, select one of the platforms that your application targets."},{"pos":[15558,15618],"content":"Select <bpt id=\"p1\">**</bpt>Save<ept id=\"p1\">**</ept> to accept your changes and close the dialog.","source":"Select **Save** to accept your changes and close the dialog."},{"content":"Name your profile.","pos":[15623,15641]},{"pos":[15649,15710],"content":"Select <bpt id=\"p1\">**</bpt>Actions<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>Rename Profile<ept id=\"p2\">**</ept> to name your profile.","source":"Select **Actions** > **Rename Profile** to name your profile."},{"pos":[15718,15802],"content":"Assign your profile a name that identifies the target platform, then select *<bpt id=\"p1\">*</bpt>Save<ept id=\"p1\">*</ept>.","source":"Assign your profile a name that identifies the target platform, then select **Save*."},{"content":"Repeat these steps to define any additional target platforms that your application targets.","pos":[15804,15895]},{"content":"You've configured your profiles and are now ready to publish your app.","pos":[15897,15967]},{"content":"To do this:","pos":[15968,15979]},{"pos":[15987,16129],"content":"If the <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept> window isn't currently open, right-click on the project (not the solution) in <bpt id=\"p2\">**</bpt>Solution Explorer<ept id=\"p2\">**</ept> and select <bpt id=\"p3\">**</bpt>Publish<ept id=\"p3\">**</ept>.","source":"If the **Publish** window isn't currently open, right-click on the project (not the solution) in **Solution Explorer** and select **Publish**."},{"content":"Select the profile that you'd like to publish, then select <bpt id=\"p1\">**</bpt>Publish<ept id=\"p1\">**</ept>.","pos":[16137,16208],"source":"Select the profile that you'd like to publish, then select **Publish**."},{"content":"Do this for each profile to be published.","pos":[16209,16250]},{"pos":[16255,16472],"content":"Note that each target location (in the case of our example, bin\\release\\netcoreapp2.1\\publish<ph id=\"ph1\">\\\\</ph><bpt id=\"p1\">*</bpt>profile-name<ept id=\"p1\">*</ept> contains the complete set of files (both your app files and all .NET Core files) needed to launch your app.","source":"Note that each target location (in the case of our example, bin\\release\\netcoreapp2.1\\publish\\\\*profile-name* contains the complete set of files (both your app files and all .NET Core files) needed to launch your app."},{"content":"Along with your application's files, the publishing process emits a program database (.pdb) file that contains debugging information about your app.","pos":[16474,16622]},{"content":"The file is useful primarily for debugging exceptions.","pos":[16623,16677]},{"content":"You can choose not to package it with your application's files.","pos":[16678,16741]},{"content":"You should, however, save it in the event that you want to debug the Release build of your app.","pos":[16742,16837]},{"content":"Deploy the published files in any way you like.","pos":[16839,16886]},{"content":"For example, you can package them in a Zip file, use a simple <ph id=\"ph1\">`copy`</ph> command, or deploy them with any installation package of your choice.","pos":[16887,17025],"source":" For example, you can package them in a Zip file, use a simple `copy` command, or deploy them with any installation package of your choice."},{"pos":[17027,17088],"content":"The following is the complete <bpt id=\"p1\">*</bpt>csproj<ept id=\"p1\">*</ept> file for this project.","source":"The following is the complete *csproj* file for this project."},{"content":"In addition, Visual Studio creates a separate publishing profile (<ph id=\"ph1\">\\*</ph>.pubxml) for each platform that you target.","pos":[17270,17381],"source":"In addition, Visual Studio creates a separate publishing profile (\\*.pubxml) for each platform that you target."},{"content":"For example, the file for our linux profile (linux.pubxml) appears as follows:","pos":[17382,17460]},{"pos":[18092,18147],"content":"Self-contained deployment with third-party dependencies","linkify":"Self-contained deployment with third-party dependencies","nodes":[{"content":"Self-contained deployment with third-party dependencies","pos":[0,55]}]},{"content":"Deploying a self-contained deployment with one or more third-party dependencies involves adding the dependencies.","pos":[18149,18262]},{"content":"The following additional steps are required before you can build your app:","pos":[18263,18337]},{"content":"Use the <bpt id=\"p1\">**</bpt>NuGet Package Manager<ept id=\"p1\">**</ept> to add a reference to a NuGet package to your project; and if the package is not already available on your system, install it.","pos":[18342,18502],"source":"Use the **NuGet Package Manager** to add a reference to a NuGet package to your project; and if the package is not already available on your system, install it."},{"content":"To open the package manager, select <bpt id=\"p1\">**</bpt>Tools<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>NuGet Package Manager<ept id=\"p2\">**</ept><ph id=\"ph2\"> &gt; </ph><bpt id=\"p3\">**</bpt>Manage NuGet Packages for Solution<ept id=\"p3\">**</ept>.","pos":[18503,18618],"source":" To open the package manager, select **Tools** > **NuGet Package Manager** > **Manage NuGet Packages for Solution**."},{"content":"Confirm that <ph id=\"ph1\">`Newtonsoft.Json`</ph> is installed on your system and, if it is not, install it.","pos":[18623,18712],"source":"Confirm that `Newtonsoft.Json` is installed on your system and, if it is not, install it."},{"content":"The <bpt id=\"p1\">**</bpt>Installed<ept id=\"p1\">**</ept> tab lists NuGet packages installed on your system.","pos":[18713,18781],"source":" The **Installed** tab lists NuGet packages installed on your system."},{"content":"If <ph id=\"ph1\">`Newtonsoft.Json`</ph> is not listed there, select the <bpt id=\"p1\">**</bpt>Browse<ept id=\"p1\">**</ept> tab and enter \"Newtonsoft.Json\" in the search box.","pos":[18782,18896],"source":" If `Newtonsoft.Json` is not listed there, select the **Browse** tab and enter \"Newtonsoft.Json\" in the search box."},{"content":"Select <ph id=\"ph1\">`Newtonsoft.Json`</ph> and, in the right pane, select your project before selecting <bpt id=\"p1\">**</bpt>Install<ept id=\"p1\">**</ept>.","pos":[18897,18995],"source":" Select `Newtonsoft.Json` and, in the right pane, select your project before selecting **Install**."},{"pos":[19000,19169],"content":"If <ph id=\"ph1\">`Newtonsoft.Json`</ph> is already installed on your system, add it to your project by selecting your project in the right pane of the <bpt id=\"p1\">**</bpt>Manage Packages for Solution<ept id=\"p1\">**</ept> tab.","source":"If `Newtonsoft.Json` is already installed on your system, add it to your project by selecting your project in the right pane of the **Manage Packages for Solution** tab."},{"pos":[19171,19232],"content":"The following is the complete <bpt id=\"p1\">*</bpt>csproj<ept id=\"p1\">*</ept> file for this project:","source":"The following is the complete *csproj* file for this project:"},{"pos":[19236,19280],"content":"<bpt id=\"p1\">[</bpt>Visual Studio 15.6 and earlier<ept id=\"p1\">](#tab/vs156)</ept>","linkify":"[Visual Studio 15.6 and earlier](#tab/vs156)","source":"[Visual Studio 15.6 and earlier](#tab/vs156)"},{"pos":[19630,19672],"content":"<bpt id=\"p1\">[</bpt>Visual Studio 15.7 and later<ept id=\"p1\">](#tab/vs157)</ept>","linkify":"[Visual Studio 15.7 and later](#tab/vs157)","source":"[Visual Studio 15.7 and later](#tab/vs157)"},{"content":"When you deploy your application, any third-party dependencies used in your app are also contained with your application files.","pos":[19956,20083]},{"content":"Third-party libraries aren't required on the system on which the app is running.","pos":[20084,20164]},{"content":"Note that you can only deploy a self-contained deployment with a third-party library to platforms supported by that library.","pos":[20166,20290]},{"content":"This is similar to having third-party dependencies with native dependencies in your framework-dependent deployment, where the native dependencies won't exist on the target platform unless they were previously installed there.","pos":[20291,20516]},{"pos":[20521,20529],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[20533,20577],"content":"<bpt id=\"p1\">[</bpt>.NET Core Application Deployment<ept id=\"p1\">](index.md)</ept>","source":"[.NET Core Application Deployment](index.md)"},{"pos":[20580,20643],"content":"<bpt id=\"p1\">[</bpt>.NET Core Runtime IDentifier (RID) catalog<ept id=\"p1\">](../rid-catalog.md)</ept>","source":"[.NET Core Runtime IDentifier (RID) catalog](../rid-catalog.md)"}]}