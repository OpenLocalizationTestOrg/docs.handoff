{"content":"---\ntitle: \"-= operator - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"-=_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"subtraction assignment operator (-=) [C#]\"\n  - \"-= operator (subtraction assignment ) [C#]\"\nms.assetid: 05c7d68a-423f-4de8-891b-cf24e8fb6ed7\n---\n# -= operator (C# Reference)\n\nThe subtraction assignment operator.\n\n## Remarks\n\nAn expression using the `-=` assignment operator, such as\n\n```csharp\nx -= y\n```\n\n is equivalent to\n\n```csharp\nx = x - y\n```\n\nexcept that `x` is only evaluated once. The meaning of the [- operator](subtraction-operator.md) is dependent on the types of `x` and `y` (subtraction for numeric operands, delegate removal for delegate operands, and so forth).\n\nThe `-=` operator cannot be overloaded directly, but user-defined types can overload the [- operator](subtraction-operator.md) (see [operator](../keywords/operator.md)).\n\nThe -= operator is also used in C# to unsubscribe from an event. For more information, see [How to: Subscribe to and Unsubscribe from Events](../../programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md).\n\n## Example\n\n[!code-csharp[csRefOperators#6](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefOperators/CS/csrefOperators.cs#6)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# operators](index.md)\n","nodes":[{"pos":[4,284],"embed":true,"restype":"x-metadata","content":"title: \"-= operator - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"-=_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"subtraction assignment operator (-=) [C#]\"\n  - \"-= operator (subtraction assignment ) [C#]\"\nms.assetid: 05c7d68a-423f-4de8-891b-cf24e8fb6ed7","nodes":[{"content":"-= operator - C# Reference","nodes":[{"pos":[0,26],"content":"-= operator - C# Reference","nodes":[{"content":"-= operator - C# Reference","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[291,317],"content":"-= operator (C# Reference)","linkify":"-= operator (C# Reference)","nodes":[{"content":"-= operator (C# Reference)","pos":[0,26]}]},{"content":"The subtraction assignment operator.","pos":[319,355]},{"pos":[360,367],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[369,426],"content":"An expression using the <ph id=\"ph1\">`-=`</ph> assignment operator, such as","source":"An expression using the `-=` assignment operator, such as"},{"content":"is equivalent to","pos":[451,467]},{"content":"except that <ph id=\"ph1\">`x`</ph> is only evaluated once.","pos":[494,533],"source":"except that `x` is only evaluated once."},{"content":"The meaning of the <bpt id=\"p1\">[</bpt>- operator<ept id=\"p1\">](subtraction-operator.md)</ept> is dependent on the types of <ph id=\"ph1\">`x`</ph> and <ph id=\"ph2\">`y`</ph> (subtraction for numeric operands, delegate removal for delegate operands, and so forth).","pos":[534,721],"source":" The meaning of the [- operator](subtraction-operator.md) is dependent on the types of `x` and `y` (subtraction for numeric operands, delegate removal for delegate operands, and so forth)."},{"pos":[723,892],"content":"The <ph id=\"ph1\">`-=`</ph> operator cannot be overloaded directly, but user-defined types can overload the <bpt id=\"p1\">[</bpt>- operator<ept id=\"p1\">](subtraction-operator.md)</ept> (see <bpt id=\"p2\">[</bpt>operator<ept id=\"p2\">](../keywords/operator.md)</ept>).","source":"The `-=` operator cannot be overloaded directly, but user-defined types can overload the [- operator](subtraction-operator.md) (see [operator](../keywords/operator.md))."},{"content":"The -= operator is also used in C# to unsubscribe from an event.","pos":[894,958]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Subscribe to and Unsubscribe from Events<ept id=\"p1\">](../../programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md)</ept>.","pos":[959,1119],"source":" For more information, see [How to: Subscribe to and Unsubscribe from Events](../../programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md)."},{"pos":[1124,1131],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1256,1264],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1268,1295],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1298,1354],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1357,1381],"content":"<bpt id=\"p1\">[</bpt>C# operators<ept id=\"p1\">](index.md)</ept>","source":"[C# operators](index.md)"}]}