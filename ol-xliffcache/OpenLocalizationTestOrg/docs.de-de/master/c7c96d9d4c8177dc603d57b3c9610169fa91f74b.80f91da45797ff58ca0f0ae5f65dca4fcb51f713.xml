{"content":"---\ntitle: \"XmlReader Sample | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"XML Reader\"\nms.assetid: 60e5848d-7d9c-4ea5-bed9-22758c9ac16c\ncaps.latest.revision: 32\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# XmlReader Sample\nThe XmlReader sample demonstrates the processing of a message body using an <xref:System.Xml.XmlReader>. The sample is based on the [Getting Started](../../../../docs/framework/wcf/samples/getting-started-sample.md), which implements a calculator service. An additional service operation, `Sum`, has been added that accepts a message that contains an array of values to add together. The service reads the message using an <xref:System.Xml.XmlReader>.  \n  \n> [!NOTE]\n>  The setup procedure and build instructions for this sample are located at the end of this topic.  \n  \n The calculator interface includes a service operation named `Sum` that accepts a <xref:System.ServiceModel.Channels.Message> parameter, as shown in the following sample code.  \n  \n```  \npublic interface ICalculator  \n{  \n    [OperationContract]  \n    double Add(double n1, double n2);  \n    [OperationContract]  \n    double Subtract(double n1, double n2);  \n    [OperationContract]  \n    double Multiply(double n1, double n2);  \n    [OperationContract]  \n    double Divide(double n1, double n2);  \n    [OperationContract]  \n    Message Sum(Message message);  \n}  \n  \n```  \n  \n The client accesses `Sum` by first creating an array of integer values, then creating a message from the array, and then calling the `Sum` method using the created message, as shown in the following sample code.  \n  \n```  \nCalculatorClient client = new CalculatorClient();  \n...  \n// Call the Sum service operation.  \nint[] values = { 1, 2, 3, 4, 5 };  \nusing (new OperationContextScope(client.InnerChannel))  \n{  \n    Message request = Message.CreateMessage(OperationContext.Current.OutgoingMessageHeaders.MessageVersion, \"http://Microsoft.ServiceModel.Samples/ICalculator/Sum\", values);  \n    Message reply = client.Sum(request);  \n    int sum = reply.GetBody<int>();  \n  \n    Console.WriteLine(\"Sum(1,2,3,4,5) = {0}\", sum);  \n}  \n  \n```  \n  \n In the service, the implementation of the service operation `Sum` accesses the message body using an <xref:System.Xml.XmlReader> object to iterate through the values to sum. The <xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A> method is called to access the message body, as shown in the following sample code.  \n  \n```  \npublic int Sum(Message message)  \n{  \n    int sum = 0;  \n    string text = \"\";  \n  \n    //The body of the message contains a list of numbers that are read  \n    //directly using an XmlReader.  \n    XmlReader body = message.GetReaderAtBodyContents ();  \n    while (body.Read())  \n    {  \n        text = body.ReadString().Trim();  \n        if (text.Length>0)  \n        {  \n            sum += Convert.ToInt32(text);  \n        }  \n    }  \n    body.Close();  \n    Message response = Message.CreateMessage(  \n       \"http://Microsoft.ServiceModel.Samples/ICalculator/SumResponse\",  \n       sum);  \n    return response;  \n}  \n  \n```  \n  \n When you run the sample, the requests and responses of the operation are displayed in the client console window. Press ENTER in the client window to shut down the client.  \n  \n```  \n  \nAdd(100,15.99) = 115.99  \nSubtract(145,76.54) = 68.46  \nMultiply(9,81.25) = 731.25  \nDivide(22,7) = 3.14285714285714  \nSum(1,2,3,4,5) = 15  \n  \nPress <ENTER> to terminate client.  \n```  \n  \n### To set up, build, and run the sample  \n  \n1.  Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md).  \n  \n2.  To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md).  \n  \n3.  To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md).  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Basic\\Contract\\Message\\XmlReader`  \n  \n## See Also","nodes":[{"pos":[12,45],"content":"XmlReader Sample | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"XmlReader Sample | Microsoft Docs","pos":[0,33]}]},{"pos":[417,433],"content":"XmlReader Sample","linkify":"XmlReader Sample","nodes":[{"content":"XmlReader Sample","pos":[0,16]}]},{"content":"The XmlReader sample demonstrates the processing of a message body using an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph>.","pos":[434,538],"source":"The XmlReader sample demonstrates the processing of a message body using an <xref:System.Xml.XmlReader>."},{"content":"The sample is based on the <bpt id=\"p1\">[</bpt>Getting Started<ept id=\"p1\">](../../../../docs/framework/wcf/samples/getting-started-sample.md)</ept>, which implements a calculator service.","pos":[539,689],"source":" The sample is based on the [Getting Started](../../../../docs/framework/wcf/samples/getting-started-sample.md), which implements a calculator service."},{"content":"An additional service operation, <ph id=\"ph1\">`Sum`</ph>, has been added that accepts a message that contains an array of values to add together.","pos":[690,817],"source":" An additional service operation, `Sum`, has been added that accepts a message that contains an array of values to add together."},{"content":"The service reads the message using an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph>.","pos":[818,885],"source":" The service reads the message using an <xref:System.Xml.XmlReader>."},{"pos":[893,1000],"content":"[!NOTE]\n The setup procedure and build instructions for this sample are located at the end of this topic.","leadings":["","> "],"nodes":[{"content":"The setup procedure and build instructions for this sample are located at the end of this topic.","pos":[9,105]}]},{"pos":[1007,1181],"content":"The calculator interface includes a service operation named <ph id=\"ph1\">`Sum`</ph> that accepts a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> parameter, as shown in the following sample code.","source":"The calculator interface includes a service operation named `Sum` that accepts a <xref:System.ServiceModel.Channels.Message> parameter, as shown in the following sample code."},{"pos":[1584,1795],"content":"The client accesses <ph id=\"ph1\">`Sum`</ph> by first creating an array of integer values, then creating a message from the array, and then calling the <ph id=\"ph2\">`Sum`</ph> method using the created message, as shown in the following sample code.","source":"The client accesses `Sum` by first creating an array of integer values, then creating a message from the array, and then calling the `Sum` method using the created message, as shown in the following sample code."},{"content":"In the service, the implementation of the service operation <ph id=\"ph1\">`Sum`</ph> accesses the message body using an <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> object to iterate through the values to sum.","pos":[2330,2503],"source":"In the service, the implementation of the service operation `Sum` accesses the message body using an <xref:System.Xml.XmlReader> object to iterate through the values to sum."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A&gt;</ph> method is called to access the message body, as shown in the following sample code.","pos":[2504,2662],"source":" The <xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A> method is called to access the message body, as shown in the following sample code."},{"content":"When you run the sample, the requests and responses of the operation are displayed in the client console window.","pos":[3306,3418]},{"content":"Press ENTER in the client window to shut down the client.","pos":[3419,3476]},{"pos":[3685,3721],"content":"To set up, build, and run the sample","linkify":"To set up, build, and run the sample","nodes":[{"content":"To set up, build, and run the sample","pos":[0,36]}]},{"pos":[3731,3930],"content":"Ensure that you have performed the <bpt id=\"p1\">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)</ept>.","source":"Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)."},{"pos":[3940,4149],"content":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in <bpt id=\"p1\">[</bpt>Building the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.","source":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md)."},{"pos":[4159,4367],"content":"To run the sample in a single- or cross-machine configuration, follow the instructions in <bpt id=\"p1\">[</bpt>Running the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/running-the-samples.md)</ept>.","source":"To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md)."},{"pos":[4375,4507],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[4561,4887],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[4888,4938]},{"pos":[5027,5035],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}