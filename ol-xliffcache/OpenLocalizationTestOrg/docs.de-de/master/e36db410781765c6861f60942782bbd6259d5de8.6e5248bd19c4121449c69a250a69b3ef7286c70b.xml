{"content":"---\ntitle: \"Tutorial: Manipulating Content in a WordprocessingML Document (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: bc9815f8-13d2-4f50-a4d1-b1c0d50d37b3\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\n---\n# Tutorial: Manipulating Content in a WordprocessingML Document (C#)\nThis tutorial shows how to apply the functional transformational approach and LINQ to XML to manipulate XML documents. The C# examples query and manipulate information in Office Open XML WordprocessingML documents that are saved by Microsoft Word.  \n  \n For more information, see the [OpenXML Developer](http://go.microsoft.com/fwlink/?LinkID=95573) Web site.  \n  \n## In This Section  \n  \n|Topic|Description|  \n|-----------|-----------------|  \n|[Shape of WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/shape-of-wordprocessingml-documents.md)|Provides a quick explanation of details of a WordprocessingML document.|  \n|[Creating the Source Office Open XML Document (C#)](../../../../csharp/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)|Provides step-by-step instructions to create the source document for queries in this tutorial.|  \n|[Finding the Default Paragraph Style (C#)](../../../../csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md)|Shows a query to find the name of the default style for a document.|  \n|[Retrieving the Paragraphs and Their Styles (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)|Shows a query that retrieves a collection of the paragraphs of a document.|  \n|[Retrieving the Text of the Paragraphs (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-text-of-the-paragraphs.md)|Augments the previous query to retrieve the text of each paragraph.|  \n|[Refactoring Using an Extension Method (C#)](../../../../csharp/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)|Simplifies the code by refactoring using an extension method.|  \n|[Refactoring Using a Pure Function (C#)](../../../../csharp/programming-guide/concepts/linq/refactoring-using-a-pure-function.md)|Further simplifies the code by refactoring using a pure function.|  \n|[Projecting XML in a Different Shape (C#)](../../../../csharp/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md)|Completes an XML transformation by projecting XML in a different shape than the original document.|  \n|[Finding Text in Word Documents (C#)](../../../../csharp/programming-guide/concepts/linq/finding-text-in-word-documents.md)|Uses the previous queries to find a specified text string in a document.|  \n|[Details of Office Open XML WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)|Provides some details of Office Open XML WordprocessingML documents.|  \n  \n## See Also  \n [Pure Functional Transformations of XML (C#)](../../../../csharp/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md)   \n [Introduction to Pure Functional Transformations (C#)](../../../../csharp/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)","nodes":[{"pos":[4,373],"nodes":[{"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#) | Microsoft Docs","nodes":[{"pos":[0,83],"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#) | Microsoft Docs","nodes":[{"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#) | Microsoft Docs","pos":[0,83]}]}],"pos":[6,92],"yaml":true}],"content":"title: \"Tutorial: Manipulating Content in a WordprocessingML Document (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: bc9815f8-13d2-4f50-a4d1-b1c0d50d37b3\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n","yamlblock":true},{"pos":[380,446],"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#)","linkify":"Tutorial: Manipulating Content in a WordprocessingML Document (C#)","nodes":[{"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#)","pos":[0,66]}]},{"content":"This tutorial shows how to apply the functional transformational approach and LINQ to XML to manipulate XML documents.","pos":[447,565]},{"content":"The C# examples query and manipulate information in Office Open XML WordprocessingML documents that are saved by Microsoft Word.","pos":[566,694]},{"pos":[701,806],"content":"For more information, see the <bpt id=\"p1\">[</bpt>OpenXML Developer<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=95573)</ept> Web site.","source":"For more information, see the [OpenXML Developer](http://go.microsoft.com/fwlink/?LinkID=95573) Web site."},{"pos":[815,830],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"Topic","pos":[837,842]},{"content":"Description","pos":[843,854]},{"pos":[893,1026],"content":"<bpt id=\"p1\">[</bpt>Shape of WordprocessingML Documents (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/shape-of-wordprocessingml-documents.md)</ept>","source":"[Shape of WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/shape-of-wordprocessingml-documents.md)"},{"content":"Provides a quick explanation of details of a WordprocessingML document.","pos":[1027,1098]},{"pos":[1103,1254],"content":"<bpt id=\"p1\">[</bpt>Creating the Source Office Open XML Document (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)</ept>","source":"[Creating the Source Office Open XML Document (C#)](../../../../csharp/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)"},{"content":"Provides step-by-step instructions to create the source document for queries in this tutorial.","pos":[1255,1349]},{"pos":[1354,1487],"content":"<bpt id=\"p1\">[</bpt>Finding the Default Paragraph Style (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md)</ept>","source":"[Finding the Default Paragraph Style (C#)](../../../../csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md)"},{"content":"Shows a query to find the name of the default style for a document.","pos":[1488,1555]},{"pos":[1560,1707],"content":"<bpt id=\"p1\">[</bpt>Retrieving the Paragraphs and Their Styles (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)</ept>","source":"[Retrieving the Paragraphs and Their Styles (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)"},{"content":"Shows a query that retrieves a collection of the paragraphs of a document.","pos":[1708,1782]},{"pos":[1787,1924],"content":"<bpt id=\"p1\">[</bpt>Retrieving the Text of the Paragraphs (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/retrieving-the-text-of-the-paragraphs.md)</ept>","source":"[Retrieving the Text of the Paragraphs (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-text-of-the-paragraphs.md)"},{"content":"Augments the previous query to retrieve the text of each paragraph.","pos":[1925,1992]},{"pos":[1997,2134],"content":"<bpt id=\"p1\">[</bpt>Refactoring Using an Extension Method (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)</ept>","source":"[Refactoring Using an Extension Method (C#)](../../../../csharp/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)"},{"content":"Simplifies the code by refactoring using an extension method.","pos":[2135,2196]},{"pos":[2201,2330],"content":"<bpt id=\"p1\">[</bpt>Refactoring Using a Pure Function (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/refactoring-using-a-pure-function.md)</ept>","source":"[Refactoring Using a Pure Function (C#)](../../../../csharp/programming-guide/concepts/linq/refactoring-using-a-pure-function.md)"},{"content":"Further simplifies the code by refactoring using a pure function.","pos":[2331,2396]},{"pos":[2401,2534],"content":"<bpt id=\"p1\">[</bpt>Projecting XML in a Different Shape (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md)</ept>","source":"[Projecting XML in a Different Shape (C#)](../../../../csharp/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md)"},{"content":"Completes an XML transformation by projecting XML in a different shape than the original document.","pos":[2535,2633]},{"pos":[2638,2761],"content":"<bpt id=\"p1\">[</bpt>Finding Text in Word Documents (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/finding-text-in-word-documents.md)</ept>","source":"[Finding Text in Word Documents (C#)](../../../../csharp/programming-guide/concepts/linq/finding-text-in-word-documents.md)"},{"content":"Uses the previous queries to find a specified text string in a document.","pos":[2762,2834]},{"pos":[2839,3008],"content":"<bpt id=\"p1\">[</bpt>Details of Office Open XML WordprocessingML Documents (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)</ept>","source":"[Details of Office Open XML WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)"},{"content":"Provides some details of Office Open XML WordprocessingML documents.","pos":[3009,3077]},{"pos":[3087,3095],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Pure Functional Transformations of XML (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md)</ept><ph id=\"ph1\"> </ph>","pos":[3099,3239],"source":"[Pure Functional Transformations of XML (C#)](../../../../csharp/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md) "},{"content":"<bpt id=\"p1\">[</bpt>Introduction to Pure Functional Transformations (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)</ept>","pos":[3243,3400],"source":"[Introduction to Pure Functional Transformations (C#)](../../../../csharp/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)"}]}