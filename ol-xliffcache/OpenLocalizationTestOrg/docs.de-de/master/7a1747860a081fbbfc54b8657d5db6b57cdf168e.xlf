<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="integrating-with-com-plus-applications-overview.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a1747860a081fbbfc54b8657d5db6b57cdf168e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\integrating-with-com-plus-applications-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8555ac8beb59e86c66eb198c60a289cc64669b1c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ad13ad8517d1cd530c4f5606459006e15f29beb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Integrating with COM+ Applications Overview</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Integrating with COM+ Applications Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Communication Foundation (WCF) provides a rich environment for creating distributed applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you are already using component-based application logic hosted in COM+, you can use WCF to extend your existing logic rather than having to rewrite it.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A common scenario is when you want to expose existing COM+ or Enterprise Services business logic through Web Services.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When an interface on a COM+ component is exposed as a Web service, the specification and contract of these services are determined by an automatic mapping that is performed at application initialization time.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following list shows the conceptual model for this mapping:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>One service is defined for each exposed COM class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The contract for the service is derived directly from the selected component's interface definition with the possibility of method exclusion defined in configuration.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The operations in that contract are derived directly from the methods on the component's interface definition.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The parameters for those operations are derived directly from the COM interoperability type that corresponds to the component's method parameters.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Default addresses and transport bindings for the service are provided in a service configuration file, but these can be reconfigured as required.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The contracts for the exposed Web services remain constant as long as the COM+ interfaces and configuration remain unchanged.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A modification to several interfaces does not automatically update the available services and requires re-running the COM+ Service Model Configuration tool (ComSvcConfig.exe).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The authentication and authorization requirements of the COM+ application and its components continue to be enforced when used as a Web service.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the caller initiates a Web service transaction, components marked as transactional enlist within that transaction scope.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following steps are required to expose a COM+ component's interface as a Web service without modifying the component:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Determine whether the COM+ component's interface can be exposed as a Web service.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Select an appropriate hosting mode.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use the COM+ Service Model Configuration tool (ComSvcConfig.exe) to add a Web service for the interface.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information about how to use ComSvcConfig.exe, see <bpt id="p1">[</bpt>How to: Use the COM+ Service Model Configuration Tool<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-use-the-com-service-model-configuration-tool.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Configure any additional service settings in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information about how to configure a component, see <bpt id="p1">[</bpt>How to: Configure COM+ Service Settings<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-configure-com-service-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Supported Interfaces</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>There are some restrictions on the type of interfaces that can be exposed as a Web service.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following types of interfaces are not supported:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Interfaces that pass object references as parameters - the following limited object reference approach is described in the Limited Object Reference Support section.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Interfaces that pass types that are not compatible with the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> COM interoperability conversions.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Interfaces for applications that have application pooling enabled when hosted by COM+.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Interfaces of components that are marked as private to the application.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>COM+ infrastructure interfaces.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Interfaces from the system application.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Interfaces from Enterprise Services components that have not been added to the global assembly cache.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Limited Object Reference Support</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Because a number of deployed COM+ components do use objects by reference parameters, such as returning an ADO Recordset object, COM+ integration includes limited support for object reference parameters.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The support is limited to objects that implement the <ph id="ph1">`IPersistStream`</ph> COM interface.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This includes ADO Recordset objects and can be implemented for application specific COM objects.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To enable this support, the ComSvcConfig.exe tool provides the <bpt id="p1">**</bpt>allowreferences<ept id="p1">**</ept> switch that disables the regular method signature parameter and checks that the tool runs to ensure that object reference parameters are not being used.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In addition, the object types that you pass as parameters must be named and identified within the &lt;<ph id="ph1">`persistableTypes`</ph>&gt; configuration element that is a child of the &lt;<ph id="ph2">`comContract`</ph>&gt; element.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When this feature is used, the COM+ integration service uses the <ph id="ph1">`IPersistStream`</ph> interface to serialize or deserialize the object instance.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the object instance does not support <ph id="ph1">`IPersistStream`</ph>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Within a client application, the methods on the <ph id="ph1">&lt;xref:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper&gt;</ph> object can be used to pass an object in to a service and similarly to retrieve an object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Due to the custom and platform-specific nature of the serialization approach, this is best suited for use between WCF clients and WCF services.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Selecting the Hosting Mode</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>COM+ exposes Web services in one of the following hosting modes:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>COM+-hosted</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The Web service is hosted within the application's dedicated COM+ server process (Dllhost.exe).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This mode requires the application to be explicitly started before it can receive Web service requests.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The COM+ options "Run as an NT Service" or "Leave running when idle" can be used to prevent idle shutdown of the application and its services.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This mode provides both Web service and DCOM access to the server application.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Web-hosted</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The Web service is hosted within a Web server worker process.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This mode does not require COM+ to be active when the initial request is received.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the application is not active when this request is received, it is automatically activated prior to processing the request.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This mode also provides both Web service and DCOM access to the server application, but causes a process hop for Web service requests.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This typically requires the client to enable impersonation.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In WCF, this can be done with the <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ServiceModel.Security.WindowsClientCredential&gt;</ph> class, which is accessed as a property of the generic <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> class, as well as the <ph id="ph4">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Impersonation&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Web-hosted in-process</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The Web service and the COM+ application logic are hosted within the Web server worker process.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This provides automatic activation of the Web-hosted mode without causing a process hop for Web service requests.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The disadvantage is that the server application cannot be accessed through DCOM.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Security Considerations</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Like other WCF services, the security settings for the exposed service are administered through configuration settings for the WCF channel.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Traditional DCOM security settings such as the DCOM machine-wide permissions settings are not enforced.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To enforce COM+ application roles, "component-level access checks" authorization must be enabled for the component.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The use of a non-secured binding can leave communication open to tampering or information disclosure.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To prevent this, it is recommended that you use a secured binding.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For the COM+-hosted and Web-hosted modes, client applications must permit the server process to impersonate the client user.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This can be done in WCF clients by setting the impersonation level to <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Impersonation&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>With Internet Information Services (IIS) or Windows Process Activation Service (WAS) using the HTTP transport, the Httpcfg.exe tool can be used to reserve a transport endpoint address.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In other configurations, it is important to protect against rogue services that act as the intended service.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To prevent a rogue service from starting at the desired endpoint, the legitimate service can be configured to run as an NT service.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This enables the legitimate service to claim the endpoint address prior to any rogue services.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When exposing a COM+ application with configured COM+ roles as a Web-hosted service, the "Launch IIS Process Account" must be added to one of the application’s roles.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This account, typically with the name IWAM_machinename, must be added to enable clean shutdown of objects after use.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The account should not be granted any additional permissions.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The COM+ process recycling features cannot be used on integrated applications.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If the application is configured to use process recycling and the components are running in a COM+ hosted process, the service fails to start.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This requirement does not include services using the Web-hosted in-process mode because the process recycling settings are not applied.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Integrating with COM Applications Overview<ept id="p1">](../../../../docs/framework/wcf/feature-details/integrating-with-com-applications-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>