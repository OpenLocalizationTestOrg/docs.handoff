{"content":"---\ntitle: \"XML Comment Literal (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.XmlLiteralComment\"\nhelpviewer_keywords: \n  - \"comment literal [Visual Basic]\"\n  - \"XML comments, adding [Visual Basic]\"\n  - \"XML comment literal [Visual Basic]\"\n  - \"XML literals [Visual Basic], comment\"\nms.assetid: 634c1cee-5e01-48d0-88d7-2dd55e4a9e52\n---\n# XML Comment Literal (Visual Basic)\nA literal representing an <xref:System.Xml.Linq.XComment> object.  \n  \n## Syntax  \n  \n```xml  \n<!-- content -->  \n```  \n  \n## Parts  \n  \n|Term|Definition|  \n|---|---|  \n|`<!--`|Required. Denotes the start of the XML comment.|  \n|`content`|Required. Text to appear in the XML comment. Cannot contain a series of two hyphens (--) or end with a hyphen adjacent to the closing tag.|  \n|`-->`|Required. Denotes the end of the XML comment.|  \n  \n## Return Value  \n An <xref:System.Xml.Linq.XComment> object.  \n  \n## Remarks  \n XML comment literals do not contain document content; they contain information about the document. The XML comment section ends with the sequence \"-->\". This implies the following points:  \n  \n-   You cannot use an embedded expression in an XML comment literal because the embedded expression delimiters are valid XML comment content.  \n  \n-   XML comment sections cannot be nested, because `content` cannot contain the value \"-->\".  \n  \n You can assign an XML comment literal to a variable, or you can include it in an XML element literal.  \n  \n> [!NOTE]\n>  An XML literal can span multiple lines without using line continuation characters. This feature enables you to copy content from an XML document and paste it directly into a Visual Basic program.  \n  \n The Visual Basic compiler converts the XML comment literal to a call to the <xref:System.Xml.Linq.XComment.%23ctor%2A> constructor.  \n  \n## Example  \n The following example creates an XML comment that contains the text \"This is a comment\".  \n  \n [!code-vb[VbXMLSamples#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbXMLSamples/VB/XMLSamples4.vb#9)]  \n  \n## See also\n\n- <xref:System.Xml.Linq.XComment>\n- [XML Element Literal](../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)\n- [XML Literals](../../../visual-basic/language-reference/xml-literals/index.md)\n- [Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)\n","nodes":[{"pos":[4,342],"embed":true,"restype":"x-metadata","content":"title: \"XML Comment Literal (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.XmlLiteralComment\"\nhelpviewer_keywords: \n  - \"comment literal [Visual Basic]\"\n  - \"XML comments, adding [Visual Basic]\"\n  - \"XML comment literal [Visual Basic]\"\n  - \"XML literals [Visual Basic], comment\"\nms.assetid: 634c1cee-5e01-48d0-88d7-2dd55e4a9e52","nodes":[{"content":"XML Comment Literal (Visual Basic)","nodes":[{"pos":[0,34],"content":"XML Comment Literal (Visual Basic)","nodes":[{"content":"XML Comment Literal (Visual Basic)","pos":[0,34]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[349,383],"content":"XML Comment Literal (Visual Basic)","linkify":"XML Comment Literal (Visual Basic)","nodes":[{"content":"XML Comment Literal (Visual Basic)","pos":[0,34]}]},{"pos":[384,449],"content":"A literal representing an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment&gt;</ph> object.","source":"A literal representing an <xref:System.Xml.Linq.XComment> object."},{"pos":[458,464],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[510,515],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Term","pos":[522,526]},{"content":"Definition","pos":[527,537]},{"content":"Required.","pos":[561,570]},{"content":"Denotes the start of the XML comment.","pos":[571,608]},{"content":"Required.","pos":[623,632]},{"content":"Text to appear in the XML comment.","pos":[633,667]},{"content":"Cannot contain a series of two hyphens (--) or end with a hyphen adjacent to the closing tag.","pos":[668,761]},{"content":"Required.","pos":[772,781]},{"content":"Denotes the end of the XML comment.","pos":[782,817]},{"pos":[827,839],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[843,885],"content":"An <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment&gt;</ph> object.","source":"An <xref:System.Xml.Linq.XComment> object."},{"pos":[894,901],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"XML comment literals do not contain document content; they contain information about the document.","pos":[905,1003]},{"content":"The XML comment section ends with the sequence \"--&gt;\".","pos":[1004,1057],"source":" The XML comment section ends with the sequence \"-->\"."},{"content":"This implies the following points:","pos":[1058,1092]},{"content":"You cannot use an embedded expression in an XML comment literal because the embedded expression delimiters are valid XML comment content.","pos":[1102,1239]},{"pos":[1249,1337],"content":"XML comment sections cannot be nested, because <ph id=\"ph1\">`content`</ph> cannot contain the value \"--&gt;\".","source":"XML comment sections cannot be nested, because `content` cannot contain the value \"-->\"."},{"content":"You can assign an XML comment literal to a variable, or you can include it in an XML element literal.","pos":[1344,1445]},{"pos":[1453,1659],"content":"[!NOTE]\n An XML literal can span multiple lines without using line continuation characters. This feature enables you to copy content from an XML document and paste it directly into a Visual Basic program.","leadings":["","> "],"nodes":[{"content":"An XML literal can span multiple lines without using line continuation characters. This feature enables you to copy content from an XML document and paste it directly into a Visual Basic program.","pos":[9,204],"nodes":[{"content":"An XML literal can span multiple lines without using line continuation characters.","pos":[0,82]},{"content":"This feature enables you to copy content from an XML document and paste it directly into a Visual Basic program.","pos":[83,195]}]}]},{"pos":[1666,1797],"content":"The Visual Basic compiler converts the XML comment literal to a call to the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment.%23ctor%2A&gt;</ph> constructor.","source":"The Visual Basic compiler converts the XML comment literal to a call to the <xref:System.Xml.Linq.XComment.%23ctor%2A> constructor."},{"pos":[1806,1813],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example creates an XML comment that contains the text \"This is a comment\".","pos":[1817,1905]},{"pos":[2033,2041],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2079,2178],"content":"<bpt id=\"p1\">[</bpt>XML Element Literal<ept id=\"p1\">](../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept>","source":"[XML Element Literal](../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)"},{"pos":[2181,2259],"content":"<bpt id=\"p1\">[</bpt>XML Literals<ept id=\"p1\">](../../../visual-basic/language-reference/xml-literals/index.md)</ept>","source":"[XML Literals](../../../visual-basic/language-reference/xml-literals/index.md)"},{"pos":[2262,2371],"content":"<bpt id=\"p1\">[</bpt>Creating XML in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept>","source":"[Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)"}]}