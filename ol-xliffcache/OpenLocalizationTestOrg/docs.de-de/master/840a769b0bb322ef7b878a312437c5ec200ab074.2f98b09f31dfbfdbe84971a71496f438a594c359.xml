{"content":"---\ntitle: \"How to: Access Characters in Strings in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"strings [Visual Basic], accessing characters\"\n  - \"characters [Visual Basic], accessing in strings\"\nms.assetid: 02c5206c-ffab-494d-b648-3b2ea358dc34\n---\n# How to: Access Characters in Strings in Visual Basic\nThis example demonstrates how to use the <xref:System.String.Chars%2A> property to access the character at the specified location in a string.  \n  \n## Example  \n Sometimes it is useful to have data about the characters in your string and the positions of those characters within your string. You can think of a string as an array of characters (`Char` instances); you can retrieve a particular character by referencing the index of that character through the <xref:System.String.Chars%2A> property.  \n  \n [!code-vb[VbVbalrStrings#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class2.vb#49)]  \n  \n The `index` parameter of the <xref:System.String.Chars%2A> property is zero-based.  \n  \n## Robust Programming  \n The <xref:System.String.Chars%2A> property returns the character at the specified position. However, some Unicode characters can be represented by more than one character. For more information on how to work with Unicode characters, see [How to: Convert a String to an Array of Characters](../../../../visual-basic/programming-guide/language-features/strings/how-to-convert-a-string-to-an-array-of-characters.md).  \n  \n The <xref:System.String.Chars%2A> property throws an <xref:System.IndexOutOfRangeException> exception if the `index` parameter is greater than or equal to the length of the string, or if it is less than zero  \n  \n## See also\n\n- <xref:System.String.Chars%2A>\n- [How to: Convert a String to an Array of Characters](../../../../visual-basic/programming-guide/language-features/strings/how-to-convert-a-string-to-an-array-of-characters.md)\n- [Converting Between Strings and Other Data Types in Visual Basic](../../../../visual-basic/programming-guide/language-features/strings/converting-between-strings-and-other-data-types.md)\n- [Strings](../../../../visual-basic/programming-guide/language-features/strings/index.md)\n","nodes":[{"pos":[4,261],"embed":true,"restype":"x-metadata","content":"title: \"How to: Access Characters in Strings in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"strings [Visual Basic], accessing characters\"\n  - \"characters [Visual Basic], accessing in strings\"\nms.assetid: 02c5206c-ffab-494d-b648-3b2ea358dc34","nodes":[{"content":"How to: Access Characters in Strings in Visual Basic","nodes":[{"pos":[0,52],"content":"How to: Access Characters in Strings in Visual Basic","nodes":[{"content":"How to: Access Characters in Strings in Visual Basic","pos":[0,52]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[268,320],"content":"How to: Access Characters in Strings in Visual Basic","linkify":"How to: Access Characters in Strings in Visual Basic","nodes":[{"content":"How to: Access Characters in Strings in Visual Basic","pos":[0,52]}]},{"pos":[321,463],"content":"This example demonstrates how to use the <ph id=\"ph1\">&lt;xref:System.String.Chars%2A&gt;</ph> property to access the character at the specified location in a string.","source":"This example demonstrates how to use the <xref:System.String.Chars%2A> property to access the character at the specified location in a string."},{"pos":[472,479],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"Sometimes it is useful to have data about the characters in your string and the positions of those characters within your string.","pos":[483,612]},{"content":"You can think of a string as an array of characters (<ph id=\"ph1\">`Char`</ph> instances); you can retrieve a particular character by referencing the index of that character through the <ph id=\"ph2\">&lt;xref:System.String.Chars%2A&gt;</ph> property.","pos":[613,819],"source":" You can think of a string as an array of characters (`Char` instances); you can retrieve a particular character by referencing the index of that character through the <xref:System.String.Chars%2A> property."},{"pos":[946,1028],"content":"The <ph id=\"ph1\">`index`</ph> parameter of the <ph id=\"ph2\">&lt;xref:System.String.Chars%2A&gt;</ph> property is zero-based.","source":"The `index` parameter of the <xref:System.String.Chars%2A> property is zero-based."},{"pos":[1037,1055],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.String.Chars%2A&gt;</ph> property returns the character at the specified position.","pos":[1059,1150],"source":"The <xref:System.String.Chars%2A> property returns the character at the specified position."},{"content":"However, some Unicode characters can be represented by more than one character.","pos":[1151,1230]},{"content":"For more information on how to work with Unicode characters, see <bpt id=\"p1\">[</bpt>How to: Convert a String to an Array of Characters<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/strings/how-to-convert-a-string-to-an-array-of-characters.md)</ept>.","pos":[1231,1472],"source":" For more information on how to work with Unicode characters, see [How to: Convert a String to an Array of Characters](../../../../visual-basic/programming-guide/language-features/strings/how-to-convert-a-string-to-an-array-of-characters.md)."},{"pos":[1479,1686],"content":"The <ph id=\"ph1\">&lt;xref:System.String.Chars%2A&gt;</ph> property throws an <ph id=\"ph2\">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception if the <ph id=\"ph3\">`index`</ph> parameter is greater than or equal to the length of the string, or if it is less than zero","source":"The <xref:System.String.Chars%2A> property throws an <xref:System.IndexOutOfRangeException> exception if the `index` parameter is greater than or equal to the length of the string, or if it is less than zero"},{"pos":[1695,1703],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1739,1914],"content":"<bpt id=\"p1\">[</bpt>How to: Convert a String to an Array of Characters<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/strings/how-to-convert-a-string-to-an-array-of-characters.md)</ept>","source":"[How to: Convert a String to an Array of Characters](../../../../visual-basic/programming-guide/language-features/strings/how-to-convert-a-string-to-an-array-of-characters.md)"},{"pos":[1917,2103],"content":"<bpt id=\"p1\">[</bpt>Converting Between Strings and Other Data Types in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/strings/converting-between-strings-and-other-data-types.md)</ept>","source":"[Converting Between Strings and Other Data Types in Visual Basic](../../../../visual-basic/programming-guide/language-features/strings/converting-between-strings-and-other-data-types.md)"},{"pos":[2106,2194],"content":"<bpt id=\"p1\">[</bpt>Strings<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/strings/index.md)</ept>","source":"[Strings](../../../../visual-basic/programming-guide/language-features/strings/index.md)"}]}