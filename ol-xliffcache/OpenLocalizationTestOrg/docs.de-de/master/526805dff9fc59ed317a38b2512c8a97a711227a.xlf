<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="xslt-security-considerations.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">526805dff9fc59ed317a38b2512c8a97a711227a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\xslt-security-considerations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29e1bcd22691fa63d47b3312c4f2dec0175c3232</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7471cf22bd7246ef0e51f2d3f0bc82fac7c11dd1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>XSLT Security Considerations</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XSLT Security Considerations</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The XSLT language has a rich set of features that give you a great deal of power and flexibility.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It includes many features that, while useful, could also be exploited by outside sources.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In order to use XSLT safely, you must understand the types of security issues that arise when using XSLT, and the basic strategies that you can employ to mitigate these risks.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XSLT Extensions</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Two popular XSLT extensions are style sheet scripting and extension objects.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These extensions allow the XSLT processor to execute code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Extension objects add programming capabilities to XSL transformations.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Scripts can be embedded in the style sheet using the <ph id="ph1">`msxsl:script`</ph> extension element.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Extension Objects</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Extension objects are added using the <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList.AddExtensionObject%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The FullTrust permission set is required to support extension objects.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This ensures that elevation of permissions does not happen when extension object code is executed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Attempting to call the <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList.AddExtensionObject%2A&gt;</ph> method without FullTrust permissions results in a security exception being thrown.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Style Sheet Scripts</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Scripts can be embedded in a style sheet using the <ph id="ph1">`msxsl:script`</ph> extension element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Script support is an optional feature on the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class that is disabled by default.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Scripting can be enabled by setting the <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltSettings.EnableScript%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph> and passing the <ph id="ph3">&lt;xref:System.Xml.Xsl.XsltSettings&gt;</ph> object to the <ph id="ph4">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Enable scripting only when the style sheet comes from a trusted source.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you cannot verify the source of the style sheet, or if the style sheet does not come from a trusted source, pass in <ph id="ph1">`null`</ph> for the XSLT settings argument.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>External Resources</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The XSLT language has features such as <ph id="ph1">`xsl:import`</ph>, <ph id="ph2">`xsl:include`</ph>, or the <ph id="ph3">`document()`</ph> function, where the processor needs to resolve URI references.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> class is used to resolve external resources.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>External resources may need to be resolved in the following two cases:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When compiling a style sheet, the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> is used for <ph id="ph2">`xsl:import`</ph> and <ph id="ph3">`xsl:include`</ph> resolution.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When executing the transformation, the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> is used to resolve the <ph id="ph2">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`document()`</ph> function is disabled by default on the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This feature can be enabled by setting the <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltSettings.EnableDocumentFunction%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph> and passing the <ph id="ph3">&lt;xref:System.Xml.Xsl.XsltSettings&gt;</ph> object to the <ph id="ph4">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> methods each include overloads that accept an <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> is not specified, a default <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Enable the <ph id="ph1">`document()`</ph> function only when the style sheet comes from a trusted source.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following list describes when you may want to specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> object:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the XSLT process needs to access a network resource that requires authentication, you can use an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you want to restrict the resources that the XSLT process can access, you can use an <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> with the correct permission set.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> class if you need to open a resource that you do not control, or that is untrusted.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you want to customize behavior, you can implement your own <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> class and use it to resolve resources.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you want to ensure that no external resources are accessed, you can specify <ph id="ph1">`null`</ph> for the <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XSLT Transformations<ept id="p1">](../../../../docs/standard/data/xml/xslt-transformations.md)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Resolving External Resources During XSLT Processing<ept id="p1">](../../../../docs/standard/data/xml/resolving-external-resources-during-xslt-processing.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Code Access Security<ept id="p1">](../../../../docs/framework/misc/code-access-security.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>