{"content":"---\ntitle: \"Using the NetHttpBinding\"\nms.date: \"03/30/2017\"\nms.assetid: fe134acf-ceca-49de-84a9-05a37e3841f1\n---\n# Using the NetHttpBinding\n<xref:System.ServiceModel.NetHttpBinding> is a binding designed for consuming HTTP or WebSocket services and uses binary encoding by default. <xref:System.ServiceModel.NetHttpBinding> will detect whether it is used with a request-reply contract or duplex contract and change its behavior to match - it will use HTTP for request-reply contracts and WebSockets for duplex contracts. This behavior can be overridden using the <xref:System.ServiceModel.Channels.WebSocketTransportUsage> setting:  \n  \n1. <xref:System.ServiceModel.Channels.WebSocketTransportUsage.Always> - This forces WebSockets to be used even for request-reply contracts.  \n  \n2. <xref:System.ServiceModel.Channels.WebSocketTransportUsage.Never> - This prevents WebSockets from being used. Attempting to use a duplex contract with this setting will result in an exception.  \n  \n3. <xref:System.ServiceModel.Channels.WebSocketTransportUsage.WhenDuplex> - This is the default value and behaves as described above.  \n  \n <xref:System.ServiceModel.NetHttpBinding> supports reliable sessions in both HTTP mode and WebSocket mode. In WebSocket mode sessions are provided by the transport.  \n  \n> [!WARNING]\n>  When using the <xref:System.ServiceModel.NetHttpBinding> and the binding’s TransferMode is set to TransferMode.Streamed, large streams may cause a deadlock and the call will timeout. To work around this issue send smaller messages or use TransferMode.Buffered.  \n  \n## Configuring a Service to use NetHttpBinding  \n The <xref:System.ServiceModel.NetHttpBinding> can be configured the same as any other binding. The following configuration snippet illustrates how to configure a WCF service with <xref:System.ServiceModel.NetHttpBinding>.  \n  \n```xml  \n<system.serviceModel>  \n    <services>  \n      <service name=\"WcfService1.Service1\">  \n        <endpoint address=\"\"  \n                  binding=\"netHttpBinding\"  \n                  contract=\"WcfService1.IService1\"/>  \n        <endpoint address=\"mex\"  \n                  binding=\"mexHttpBinding\"  \n                  contract=\"IMetadataExchange\"/>  \n      </service>  \n    </services>  \n    <bindings>  \n      <netHttpBinding>  \n        <binding name=\"My_NetHttpBindingConfig\">  \n          <webSocketSettings transportUsage=\"WhenDuplex\"/>  \n        </binding>  \n      </netHttpBinding>  \n    </bindings>  \n    ...\n  </system.serviceModel>  \n```  \n  \n The following code snippet shows how to add the <xref:System.ServiceModel.NetHttpBinding> in code.  \n  \n```csharp  \nServiceHost svchost = new ServiceHost(typeof(Service1), baseAddress);  \n            NetHttpBinding binding = new NetHttpBinding();  \n            svchost.AddServiceEndpoint(typeof(IService1), binding, address);   \n        }  \n```  \n  \n## See also\n\n- [Configuring Bindings for Services](../../../../docs/framework/wcf/configuring-bindings-for-wcf-services.md)\n- [Bindings](../../../../docs/framework/wcf/feature-details/bindings.md)\n- [System-Provided Bindings](../../../../docs/framework/wcf/system-provided-bindings.md)\n- [Duplex Services](../../../../docs/framework/wcf/feature-details/duplex-services.md)\n","nodes":[{"pos":[4,108],"embed":true,"restype":"x-metadata","content":"title: \"Using the NetHttpBinding\"\nms.date: \"03/30/2017\"\nms.assetid: fe134acf-ceca-49de-84a9-05a37e3841f1","nodes":[{"content":"Using the NetHttpBinding","nodes":[{"pos":[0,24],"content":"Using the NetHttpBinding","nodes":[{"content":"Using the NetHttpBinding","pos":[0,24]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[115,139],"content":"Using the NetHttpBinding","linkify":"Using the NetHttpBinding","nodes":[{"content":"Using the NetHttpBinding","pos":[0,24]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> is a binding designed for consuming HTTP or WebSocket services and uses binary encoding by default.","pos":[140,281],"source":"<xref:System.ServiceModel.NetHttpBinding> is a binding designed for consuming HTTP or WebSocket services and uses binary encoding by default."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> will detect whether it is used with a request-reply contract or duplex contract and change its behavior to match - it will use HTTP for request-reply contracts and WebSockets for duplex contracts.","pos":[282,520],"source":"<xref:System.ServiceModel.NetHttpBinding> will detect whether it is used with a request-reply contract or duplex contract and change its behavior to match - it will use HTTP for request-reply contracts and WebSockets for duplex contracts."},{"content":"This behavior can be overridden using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebSocketTransportUsage&gt;</ph> setting:","pos":[521,631],"source":" This behavior can be overridden using the <xref:System.ServiceModel.Channels.WebSocketTransportUsage> setting:"},{"pos":[640,776],"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebSocketTransportUsage.Always&gt;</ph> - This forces WebSockets to be used even for request-reply contracts.","source":"<xref:System.ServiceModel.Channels.WebSocketTransportUsage.Always> - This forces WebSockets to be used even for request-reply contracts."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebSocketTransportUsage.Never&gt;</ph> - This prevents WebSockets from being used.","pos":[785,894],"source":"<xref:System.ServiceModel.Channels.WebSocketTransportUsage.Never> - This prevents WebSockets from being used."},{"content":"Attempting to use a duplex contract with this setting will result in an exception.","pos":[895,977]},{"pos":[986,1116],"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebSocketTransportUsage.WhenDuplex&gt;</ph> - This is the default value and behaves as described above.","source":"<xref:System.ServiceModel.Channels.WebSocketTransportUsage.WhenDuplex> - This is the default value and behaves as described above."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> supports reliable sessions in both HTTP mode and WebSocket mode.","pos":[1123,1229],"source":"<xref:System.ServiceModel.NetHttpBinding> supports reliable sessions in both HTTP mode and WebSocket mode."},{"content":"In WebSocket mode sessions are provided by the transport.","pos":[1230,1287]},{"pos":[1295,1569],"content":"[!WARNING]\n When using the <xref:System.ServiceModel.NetHttpBinding> and the binding’s TransferMode is set to TransferMode.Streamed, large streams may cause a deadlock and the call will timeout. To work around this issue send smaller messages or use TransferMode.Buffered.","leadings":["","> "],"nodes":[{"content":"When using the <xref:System.ServiceModel.NetHttpBinding> and the binding’s TransferMode is set to TransferMode.Streamed, large streams may cause a deadlock and the call will timeout. To work around this issue send smaller messages or use TransferMode.Buffered.","pos":[12,272],"nodes":[{"content":"When using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> and the binding’s TransferMode is set to TransferMode.Streamed, large streams may cause a deadlock and the call will timeout.","pos":[0,182],"source":"When using the <xref:System.ServiceModel.NetHttpBinding> and the binding’s TransferMode is set to TransferMode.Streamed, large streams may cause a deadlock and the call will timeout."},{"content":"To work around this issue send smaller messages or use TransferMode.Buffered.","pos":[183,260]}]}]},{"pos":[1578,1621],"content":"Configuring a Service to use NetHttpBinding","linkify":"Configuring a Service to use NetHttpBinding","nodes":[{"content":"Configuring a Service to use NetHttpBinding","pos":[0,43]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> can be configured the same as any other binding.","pos":[1625,1719],"source":"The <xref:System.ServiceModel.NetHttpBinding> can be configured the same as any other binding."},{"content":"The following configuration snippet illustrates how to configure a WCF service with <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph>.","pos":[1720,1846],"source":" The following configuration snippet illustrates how to configure a WCF service with <xref:System.ServiceModel.NetHttpBinding>."},{"pos":[2510,2608],"content":"The following code snippet shows how to add the <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> in code.","source":"The following code snippet shows how to add the <xref:System.ServiceModel.NetHttpBinding> in code."},{"pos":[2863,2871],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2875,2983],"content":"<bpt id=\"p1\">[</bpt>Configuring Bindings for Services<ept id=\"p1\">](../../../../docs/framework/wcf/configuring-bindings-for-wcf-services.md)</ept>","source":"[Configuring Bindings for Services](../../../../docs/framework/wcf/configuring-bindings-for-wcf-services.md)"},{"pos":[2986,3056],"content":"<bpt id=\"p1\">[</bpt>Bindings<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/bindings.md)</ept>","source":"[Bindings](../../../../docs/framework/wcf/feature-details/bindings.md)"},{"pos":[3059,3145],"content":"<bpt id=\"p1\">[</bpt>System-Provided Bindings<ept id=\"p1\">](../../../../docs/framework/wcf/system-provided-bindings.md)</ept>","source":"[System-Provided Bindings](../../../../docs/framework/wcf/system-provided-bindings.md)"},{"pos":[3148,3232],"content":"<bpt id=\"p1\">[</bpt>Duplex Services<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/duplex-services.md)</ept>","source":"[Duplex Services](../../../../docs/framework/wcf/feature-details/duplex-services.md)"}]}