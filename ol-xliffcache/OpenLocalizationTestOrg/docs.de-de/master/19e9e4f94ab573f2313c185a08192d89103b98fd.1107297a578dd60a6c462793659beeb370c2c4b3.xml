{"content":"---\ntitle: \"Default values table - C# Reference\"\nms.custom: seodec18\n\ndescription: Learn what are the default values of C# value types.\nms.date: 08/23/2018\nhelpviewer_keywords: \n  - \"constructors [C#], return values\"\n  - \"keywords [C#], new\"\n  - \"default constructor [C#]\"\n  - \"defaults [C#]\"\n  - \"value types [C#], initializing\"\n  - \"variables [C#], value types\"\n  - \"constructors [C#], default constructor\"\n  - \"types [C#], default constructor return values\"\n---\n# Default values table (C# Reference)\n\nThe following table shows the default values of [value types](value-types.md).\n\n|Value type|Default value|\n|----------------|-------------------|\n|[bool](bool.md)|`false`|\n|[byte](byte.md)|0|\n|[char](char.md)|'\\0'|\n|[decimal](decimal.md)|0M|\n|[double](double.md)|0.0D|\n|[enum](enum.md)|The value produced by the expression `(E)0`, where `E` is the enum identifier.|\n|[float](float.md)|0.0F|\n|[int](int.md)|0|\n|[long](long.md)|0L|\n|[sbyte](sbyte.md)|0|\n|[short](short.md)|0|\n|[struct](struct.md)|The value produced by setting all value-type fields to their default values and all reference-type fields to `null`.|\n|[uint](uint.md)|0|\n|[ulong](ulong.md)|0|\n|[ushort](ushort.md)|0|\n\n## Remarks\n\nYou cannot use uninitialized variables in C#. You can initialize a variable with the default value of its type. You also can use the default value of a type to specify the default value of a method's [optional argument](../../programming-guide/classes-and-structs/named-and-optional-arguments.md#optional-arguments).\n\nUse the [default value expression](../../programming-guide/statements-expressions-operators/default-value-expressions.md) to produce the default value of a type, as the following example shows:\n\n```csharp\nint a = default(int);\n```\n\nBeginning with C# 7.1, you can use the [`default` literal](../../programming-guide/statements-expressions-operators/default-value-expressions.md#default-literal-and-type-inference) to initialize a variable with the default value of its type:\n\n```csharp\nint a = default;\n```\n\nYou also can use the default constructor or the implicit default constructor to produce the default value of a value type, as the following example shows. For more information about constructors, see the [Constructors](../../programming-guide/classes-and-structs/constructors.md) article.\n\n```csharp\nint a = new int();\n```\n\nThe default value of any [reference type](reference-types.md) is `null`. The default value of a [nullable type](../../programming-guide/nullable-types/index.md) is an instance for which the <xref:System.Nullable%601.HasValue%2A> property is `false` and the <xref:System.Nullable%601.Value%2A> property is undefined.\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Reference tables for types](reference-tables-for-types.md)\n- [Value types](value-types.md)\n- [Value types table](value-types-table.md)\n- [Built-in types table](built-in-types-table.md)\n","nodes":[{"pos":[4,460],"embed":true,"restype":"x-metadata","content":"title: \"Default values table - C# Reference\"\nms.custom: seodec18\n\ndescription: Learn what are the default values of C# value types.\nms.date: 08/23/2018\nhelpviewer_keywords: \n  - \"constructors [C#], return values\"\n  - \"keywords [C#], new\"\n  - \"default constructor [C#]\"\n  - \"defaults [C#]\"\n  - \"value types [C#], initializing\"\n  - \"variables [C#], value types\"\n  - \"constructors [C#], default constructor\"\n  - \"types [C#], default constructor return values\"","nodes":[{"content":"Default values table - C# Reference","nodes":[{"pos":[0,35],"content":"Default values table - C# Reference","nodes":[{"content":"Default values table - C# Reference","pos":[0,35]}]}],"path":["title"],"nosxs":false},{"content":"Learn what are the default values of C# value types.","nodes":[{"pos":[0,52],"content":"Learn what are the default values of C# value types.","nodes":[{"content":"Learn what are the default values of C# value types.","pos":[0,52]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[467,502],"content":"Default values table (C# Reference)","linkify":"Default values table (C# Reference)","nodes":[{"content":"Default values table (C# Reference)","pos":[0,35]}]},{"pos":[504,582],"content":"The following table shows the default values of <bpt id=\"p1\">[</bpt>value types<ept id=\"p1\">](value-types.md)</ept>.","source":"The following table shows the default values of [value types](value-types.md)."},{"content":"Value type","pos":[585,595]},{"content":"Default value","pos":[596,609]},{"pos":[651,666],"content":"<bpt id=\"p1\">[</bpt>bool<ept id=\"p1\">](bool.md)</ept>","source":"[bool](bool.md)"},{"pos":[677,692],"content":"<bpt id=\"p1\">[</bpt>byte<ept id=\"p1\">](byte.md)</ept>","source":"[byte](byte.md)"},{"content":"0","pos":[693,694]},{"pos":[697,712],"content":"<bpt id=\"p1\">[</bpt>char<ept id=\"p1\">](char.md)</ept>","source":"[char](char.md)"},{"content":"'\\0'","pos":[713,717]},{"pos":[720,741],"content":"<bpt id=\"p1\">[</bpt>decimal<ept id=\"p1\">](decimal.md)</ept>","source":"[decimal](decimal.md)"},{"content":"0M","pos":[742,744]},{"pos":[747,766],"content":"<bpt id=\"p1\">[</bpt>double<ept id=\"p1\">](double.md)</ept>","source":"[double](double.md)"},{"content":"0.0D","pos":[767,771]},{"pos":[774,789],"content":"<bpt id=\"p1\">[</bpt>enum<ept id=\"p1\">](enum.md)</ept>","source":"[enum](enum.md)"},{"pos":[790,868],"content":"The value produced by the expression <ph id=\"ph1\">`(E)0`</ph>, where <ph id=\"ph2\">`E`</ph> is the enum identifier.","source":"The value produced by the expression `(E)0`, where `E` is the enum identifier."},{"pos":[871,888],"content":"<bpt id=\"p1\">[</bpt>float<ept id=\"p1\">](float.md)</ept>","source":"[float](float.md)"},{"content":"0.0F","pos":[889,893]},{"pos":[896,909],"content":"<bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](int.md)</ept>","source":"[int](int.md)"},{"content":"0","pos":[910,911]},{"pos":[914,929],"content":"<bpt id=\"p1\">[</bpt>long<ept id=\"p1\">](long.md)</ept>","source":"[long](long.md)"},{"content":"0L","pos":[930,932]},{"pos":[935,952],"content":"<bpt id=\"p1\">[</bpt>sbyte<ept id=\"p1\">](sbyte.md)</ept>","source":"[sbyte](sbyte.md)"},{"content":"0","pos":[953,954]},{"pos":[957,974],"content":"<bpt id=\"p1\">[</bpt>short<ept id=\"p1\">](short.md)</ept>","source":"[short](short.md)"},{"content":"0","pos":[975,976]},{"pos":[979,998],"content":"<bpt id=\"p1\">[</bpt>struct<ept id=\"p1\">](struct.md)</ept>","source":"[struct](struct.md)"},{"pos":[999,1115],"content":"The value produced by setting all value-type fields to their default values and all reference-type fields to <ph id=\"ph1\">`null`</ph>.","source":"The value produced by setting all value-type fields to their default values and all reference-type fields to `null`."},{"pos":[1118,1133],"content":"<bpt id=\"p1\">[</bpt>uint<ept id=\"p1\">](uint.md)</ept>","source":"[uint](uint.md)"},{"content":"0","pos":[1134,1135]},{"pos":[1138,1155],"content":"<bpt id=\"p1\">[</bpt>ulong<ept id=\"p1\">](ulong.md)</ept>","source":"[ulong](ulong.md)"},{"content":"0","pos":[1156,1157]},{"pos":[1160,1179],"content":"<bpt id=\"p1\">[</bpt>ushort<ept id=\"p1\">](ushort.md)</ept>","source":"[ushort](ushort.md)"},{"content":"0","pos":[1180,1181]},{"pos":[1187,1194],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You cannot use uninitialized variables in C#.","pos":[1196,1241]},{"content":"You can initialize a variable with the default value of its type.","pos":[1242,1307]},{"content":"You also can use the default value of a type to specify the default value of a method's <bpt id=\"p1\">[</bpt>optional argument<ept id=\"p1\">](../../programming-guide/classes-and-structs/named-and-optional-arguments.md#optional-arguments)</ept>.","pos":[1308,1512],"source":" You also can use the default value of a type to specify the default value of a method's [optional argument](../../programming-guide/classes-and-structs/named-and-optional-arguments.md#optional-arguments)."},{"pos":[1514,1707],"content":"Use the <bpt id=\"p1\">[</bpt>default value expression<ept id=\"p1\">](../../programming-guide/statements-expressions-operators/default-value-expressions.md)</ept> to produce the default value of a type, as the following example shows:","source":"Use the [default value expression](../../programming-guide/statements-expressions-operators/default-value-expressions.md) to produce the default value of a type, as the following example shows:"},{"pos":[1746,1987],"content":"Beginning with C# 7.1, you can use the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`default`</ph> literal<ept id=\"p1\">](../../programming-guide/statements-expressions-operators/default-value-expressions.md#default-literal-and-type-inference)</ept> to initialize a variable with the default value of its type:","source":"Beginning with C# 7.1, you can use the [`default` literal](../../programming-guide/statements-expressions-operators/default-value-expressions.md#default-literal-and-type-inference) to initialize a variable with the default value of its type:"},{"content":"You also can use the default constructor or the implicit default constructor to produce the default value of a value type, as the following example shows.","pos":[2021,2175]},{"content":"For more information about constructors, see the <bpt id=\"p1\">[</bpt>Constructors<ept id=\"p1\">](../../programming-guide/classes-and-structs/constructors.md)</ept> article.","pos":[2176,2309],"source":" For more information about constructors, see the [Constructors](../../programming-guide/classes-and-structs/constructors.md) article."},{"content":"The default value of any <bpt id=\"p1\">[</bpt>reference type<ept id=\"p1\">](reference-types.md)</ept> is <ph id=\"ph1\">`null`</ph>.","pos":[2345,2417],"source":"The default value of any [reference type](reference-types.md) is `null`."},{"content":"The default value of a <bpt id=\"p1\">[</bpt>nullable type<ept id=\"p1\">](../../programming-guide/nullable-types/index.md)</ept> is an instance for which the <ph id=\"ph1\">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph> and the <ph id=\"ph3\">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property is undefined.","pos":[2418,2660],"source":" The default value of a [nullable type](../../programming-guide/nullable-types/index.md) is an instance for which the <xref:System.Nullable%601.HasValue%2A> property is `false` and the <xref:System.Nullable%601.Value%2A> property is undefined."},{"pos":[2665,2673],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2677,2704],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[2707,2763],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[2766,2789],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[2792,2851],"content":"<bpt id=\"p1\">[</bpt>Reference tables for types<ept id=\"p1\">](reference-tables-for-types.md)</ept>","source":"[Reference tables for types](reference-tables-for-types.md)"},{"pos":[2854,2883],"content":"<bpt id=\"p1\">[</bpt>Value types<ept id=\"p1\">](value-types.md)</ept>","source":"[Value types](value-types.md)"},{"pos":[2886,2927],"content":"<bpt id=\"p1\">[</bpt>Value types table<ept id=\"p1\">](value-types-table.md)</ept>","source":"[Value types table](value-types-table.md)"},{"pos":[2930,2977],"content":"<bpt id=\"p1\">[</bpt>Built-in types table<ept id=\"p1\">](built-in-types-table.md)</ept>","source":"[Built-in types table](built-in-types-table.md)"}]}