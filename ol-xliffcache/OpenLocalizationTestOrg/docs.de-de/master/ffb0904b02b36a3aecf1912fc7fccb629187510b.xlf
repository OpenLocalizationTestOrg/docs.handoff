<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffb0904b02b36a3aecf1912fc7fccb629187510b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\performance\controlling-logging.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52298d39627fc217dab7b4ac2bfe7709ec5245a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2baebe07617259f00f35ba773c07a24a0b0c7b9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Controlling .NET Framework Logging | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Controlling .NET Framework Logging</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can use event tracing for Windows (ETW) to record common language runtime (CLR) events.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can create and view traces by using the following tools:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Logman<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150916)</ept> and <bpt id="p2">[</bpt>Tracerpt<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=150919)</ept> command-line tools, which are included with the Windows operating system.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Xperf<ept id="p1">](http://msdn.microsoft.com/library/windows/hardware/hh162920.aspx)</ept> tools in the <bpt id="p2">[</bpt>Windows Performance Toolkit<ept id="p2">](http://msdn.microsoft.com/library/windows/hardware/hh162945.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information about Xperf, see the <bpt id="p1">[</bpt>Windows Performance blog<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=179509)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To capture CLR event information, the CLR provider must be installed on your computer.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To confirm that the provider is installed, type <ph id="ph1">`logman query providers`</ph> at the command prompt.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A list of providers is displayed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This list should contain an entry for the CLR provider, as follows.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the CLR provider is not listed, you can install it on Windows Vista and later operating systems by using the Windows <bpt id="p1">[</bpt>Wevtutil<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=150915)</ept> command-line tool.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Open the Command Prompt window as an administrator.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Change the prompt directory to the <ph id="ph1">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph> folder (%WINDIR%\Microsoft.NET\Framework[64]\v4.<ph id="ph2">\&lt;</ph>.NET version&gt;\ ).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This folder contains the CLR-ETW.man file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>At the command prompt, type the following command to install the CLR provider:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Capturing CLR ETW Events</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>Logman<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150916)</ept> and <bpt id="p2">[</bpt>Xperf<ept id="p2">](http://msdn.microsoft.com/library/windows/hardware/hh162920.aspx)</ept> command-line tools to capture ETW events, and the <bpt id="p3">[</bpt>Tracerpt<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=150919)</ept> and <bpt id="p4">[</bpt>Xperf<ept id="p4">](http://msdn.microsoft.com/library/windows/hardware/hh162920.aspx)</ept> tools to decode the trace events.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To turn on logging, a user must specify three things:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The provider to communicate to.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A 64-bit number that represents a set of keywords.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each keyword represents a set of events that the provider can turn on.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The number represents a combined set of keywords to turn on.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A small number representing the level (verbosity) to log at.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Level 1 is the least verbose, and level 5 is the most verbose.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Level 0 is a default whose meaning is provider-specific.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To capture CLR ETW events using Logman</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>At the command prompt, type:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>where:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-p`</ph> parameter identifies the provider GUID.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0x1CCBD`</ph> specifies the categories of events that will be raised.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0x5`</ph> sets the level of logging (in this case, verbose (5)).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-ets`</ph> parameter instructs Logman to send commands to event tracing sessions.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-ct perf`</ph> parameter specifies that the <ph id="ph2">`QueryPerformanceCounter`</ph> function will be used to log the time stamp for each event.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To stop logging the events, type:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command creates a binary trace file named clrevents.etl.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To capture CLR ETW events using Xperf</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>At the command prompt, type:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>where the GUID is the CLR ETW provider GUID, and <ph id="ph1">`0x1CCBD:5`</ph> traces everything at and below level 5 (verbose).</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To stop tracing, type:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command creates a trace file named clrevents.etl.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Viewing CLR ETW Events</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use the commands listed below to view the CLR ETW events.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For a description of the events, see <bpt id="p1">[</bpt>CLR ETW Events<ept id="p1">](../../../docs/framework/performance/clr-etw-events.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To view CLR ETW events using Tracerpt</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>At the command prompt, type:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command creates two files: dumpfile.xml and summary.txt.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The dumpfile.xml file lists all the events, and summary.txt provides a summary of the events.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To view CLR ETW events using Xperf</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>At the command prompt, type:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This command opens the Xperf ETL file viewer.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In this viewer, the CLR events show up in the <bpt id="p1">**</bpt>Generic Events<ept id="p1">**</ept> view.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To display a data grid of events categorized by type, select a region of time in this view, and then right-click and select <bpt id="p1">**</bpt>Summary<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To convert the .etl file to a comma-separated value file</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>At the command prompt, type:</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This command causes XPerf to dump the events as a comma separated value (CSV) file that you can view.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Because different events have different fields, this CSV file is contains more than one header line before the data.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The first field of every line is the event type, which indicates which header should be used to determine the rest of the fields.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Performance Toolkit<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=161141)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ETW Events in the Common Language Runtime<ept id="p1">](../../../docs/framework/performance/etw-events-in-the-common-language-runtime.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>