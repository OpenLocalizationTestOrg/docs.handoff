{"content":"---\ntitle: \"Type parameters cannot be used as qualifiers | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc32098\"\n  - \"bc32098\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"BC32098\"\nms.assetid: bab05325-dde8-4621-a5f6-368b5b7b2d76\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Type parameters cannot be used as qualifiers\nA programming element is qualified with a qualification string that includes a type parameter.  \n  \n A type parameter represents a requirement for a type that is to be supplied when the generic type is constructed. It does not represent a specific defined type. A qualification string must include only elements that are defined at compile time.  \n  \n The following statements can generate this error.  \n  \n```  \nPublic Function checkText(Of c As System.Windows.Forms.Control)(  \n    ByVal badText As String) As Boolean  \n  \n    Dim saveText As c.Text  \n    ' Insert code to look for badText within saveText.  \nEnd Function  \n```  \n  \n **Error ID:** BC32098  \n  \n## To correct this error  \n  \n1.  Remove the type parameter from the qualification string, or replace it with a defined type.  \n  \n2.  If you need to use a constructed type to locate the programming element being qualified, you must use additional program logic.  \n  \n## See Also  \n [References to Declared Elements](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)   \n [Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)   \n [Type List](../../../visual-basic/language-reference/statements/type-list.md)","nodes":[{"pos":[12,73],"content":"Type parameters cannot be used as qualifiers | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Type parameters cannot be used as qualifiers | Microsoft Docs","pos":[0,61]}]},{"pos":[611,655],"content":"Type parameters cannot be used as qualifiers","linkify":"Type parameters cannot be used as qualifiers","nodes":[{"content":"Type parameters cannot be used as qualifiers","pos":[0,44]}]},{"content":"A programming element is qualified with a qualification string that includes a type parameter.","pos":[656,750]},{"content":"A type parameter represents a requirement for a type that is to be supplied when the generic type is constructed.","pos":[757,870]},{"content":"It does not represent a specific defined type.","pos":[871,917]},{"content":"A qualification string must include only elements that are defined at compile time.","pos":[918,1001]},{"content":"The following statements can generate this error.","pos":[1008,1057]},{"pos":[1292,1313],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32098","source":"**Error ID:** BC32098"},{"pos":[1322,1343],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Remove the type parameter from the qualification string, or replace it with a defined type.","pos":[1353,1444]},{"content":"If you need to use a constructed type to locate the programming element being qualified, you must use additional program logic.","pos":[1454,1581]},{"pos":[1590,1598],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>References to Declared Elements<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept><ph id=\"ph1\"> </ph>","pos":[1602,1748],"source":"[References to Declared Elements](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[1751,1871],"source":" [Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Type List<ept id=\"p1\">](../../../visual-basic/language-reference/statements/type-list.md)</ept>","pos":[1874,1952],"source":" [Type List](../../../visual-basic/language-reference/statements/type-list.md)"}]}