{"content":"---\ntitle: \"ICeeFileGen Class\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICeeFileGen\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICeeFileGen\"\nhelpviewer_keywords: \n  - \"ICeeFileGen class [.NET Framework hosting]\"\nms.assetid: 90368606-506e-40df-be1f-8d595159203f\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# ICeeFileGen Class\nProvides functionality for creating a native portable executable (PE) file. The interface will typically be used by compilers to generate their compiled output executable.  \n  \n> [!NOTE]\n>  `ICeeFileGen` supports the .NET Framework infrastructure and is not intended to be used directly from your code.  \n  \n This interface has been deprecated and will be removed in a future release.  \n  \n## Syntax  \n  \n```  \nclass ICeeFileGen {  \npublic:  \n    virtual HRESULT CreateCeeFile(HCEEFILE *ceeFile);  \n  \n    virtual HRESULT EmitMetaData (HCEEFILE ceeFile,  \n        IMetaDataEmit *emitter, mdScope scope);  \n  \n    virtual HRESULT EmitLibraryName (HCEEFILE ceeFile,  \n        IMetaDataEmit *emitter, mdScope scope);  \n  \n    virtual HRESULT EmitMethod ();  \n  \n    virtual HRESULT GetMethodRVA (HCEEFILE ceeFile,  \n        ULONG codeOffset, ULONG *codeRVA);  \n  \n    virtual HRESULT EmitSignature ();  \n  \n    virtual HRESULT EmitString (HCEEFILE ceeFile,  \n        __in LPWSTR strValue, ULONG *strRef);  \n  \n    virtual HRESULT GenerateCeeFile (HCEEFILE ceeFile);  \n  \n    virtual HRESULT SetOutputFileName (HCEEFILE ceeFile,  \n        __in LPWSTR outputFileName);  \n  \n    virtual HRESULT GetOutputFileName (HCEEFILE ceeFile,  \n        __out LPWSTR *outputFileName);  \n  \n    virtual HRESULT SetResourceFileName (HCEEFILE ceeFile,  \n        __in LPWSTR resourceFileName);  \n  \n    virtual HRESULT GetResourceFileName (HCEEFILE ceeFile,  \n        __out LPWSTR *resourceFileName);  \n  \n    virtual HRESULT SetImageBase(HCEEFILE ceeFile, size_t imageBase);  \n  \n    virtual HRESULT SetSubsystem(HCEEFILE ceeFile, DWORD subsystem,  \n        DWORD major, DWORD minor);  \n  \n    virtual HRESULT SetEntryClassToken ();  \n  \n    virtual HRESULT GetEntryClassToken ();  \n  \n    virtual HRESULT SetEntryPointDescr ();  \n  \n    virtual HRESULT GetEntryPointDescr ();  \n  \n    virtual HRESULT SetEntryPointFlags ();  \n  \n    virtual HRESULT GetEntryPointFlags ();  \n  \n    virtual HRESULT SetDllSwitch (HCEEFILE ceeFile, BOOL dllSwitch);  \n  \n    virtual HRESULT GetDllSwitch (HCEEFILE ceeFile, BOOL *dllSwitch);  \n  \n    virtual HRESULT SetLibraryName (HCEEFILE ceeFile,  \n        __in LPWSTR LibraryName);  \n  \n    virtual HRESULT GetLibraryName (HCEEFILE ceeFile,  \n        __out LPWSTR *LibraryName);  \n  \n    virtual HRESULT SetLibraryGuid (HCEEFILE ceeFile,  \n        __in LPWSTR LibraryGuid);  \n  \n    virtual HRESULT DestroyCeeFile(HCEEFILE *ceeFile);  \n  \n    virtual HRESULT GetSectionCreate (HCEEFILE ceeFile,  \n        const char *name, DWORD flags, HCEESECTION *section);  \n  \n    virtual HRESULT GetIlSection (HCEEFILE ceeFile,  \n        HCEESECTION *section);  \n  \n    virtual HRESULT GetRdataSection (HCEEFILE ceeFile,  \n        HCEESECTION *section);  \n  \n    virtual HRESULT GetSectionDataLen (HCEESECTION section,  \n        ULONG *dataLen);  \n  \n    virtual HRESULT GetSectionBlock (HCEESECTION section, ULONG len,  \n        ULONG align=1, void **ppBytes=0);  \n  \n    virtual HRESULT TruncateSection (HCEESECTION section, ULONG len);  \n  \n    virtual HRESULT AddSectionReloc (HCEESECTION section,  \n        ULONG offset, HCEESECTION relativeTo,  \n        CeeSectionRelocType relocType);  \n  \n    virtual HRESULT SetSectionDirectoryEntry (HCEESECTION section,  \n        ULONG num);  \n  \n    virtual HRESULT CreateSig ();  \n  \n    virtual HRESULT AddSigArg ();  \n  \n    virtual HRESULT SetSigReturnType ();  \n  \n    virtual HRESULT SetSigCallingConvention ();  \n  \n    virtual HRESULT DeleteSig ();  \n  \n    virtual HRESULT SetEntryPoint (HCEEFILE ceeFile,  \n        mdMethodDef method);  \n  \n    virtual HRESULT GetEntryPoint (HCEEFILE ceeFile,  \n        mdMethodDef *method);  \n  \n    virtual HRESULT SetComImageFlags (HCEEFILE ceeFile, DWORD mask);  \n  \n    virtual HRESULT GetComImageFlags (HCEEFILE ceeFile, DWORD *mask);  \n  \n    virtual HRESULT GetIMapTokenIface(HCEEFILE ceeFile,  \n        IMetaDataEmit *emitter, IUnknown **pIMapToken);  \n  \n    virtual HRESULT SetDirectoryEntry (HCEEFILE ceeFile,  \n        HCEESECTION section, ULONG num, ULONG size, ULONG offset = 0);  \n  \n    virtual HRESULT EmitMetaDataEx (HCEEFILE ceeFile,  \n        IMetaDataEmit *emitter);   \n  \n    virtual HRESULT EmitLibraryNameEx (HCEEFILE ceeFile,  \n        IMetaDataEmit *emitter);  \n  \n    virtual HRESULT GetIMapTokenIfaceEx(HCEEFILE ceeFile,  \n        IMetaDataEmit *emitter, IUnknown **pIMapToken);  \n  \n    virtual HRESULT EmitMacroDefinitions(HCEEFILE ceeFile,  \n        void *pData, DWORD cData);  \n  \n    virtual HRESULT CreateCeeFileFromICeeGen(ICeeGen *pFromICeeGen,  \n        HCEEFILE *ceeFile, DWORD createFlags =  \n        ICEE_CREATE_FILE_PURE_IL);  \n  \n    virtual HRESULT SetManifestEntry(HCEEFILE ceeFile, ULONG size,  \n        ULONG offset);  \n  \n    virtual HRESULT SetEnCRVABase(HCEEFILE ceeFile, ULONG dataBase,  \n        ULONG rdataBase);  \n  \n    virtual HRESULT GenerateCeeMemoryImage (HCEEFILE ceeFile,  \n        void **ppImage);  \n  \n    virtual HRESULT ComputeSectionOffset(HCEESECTION section,  \n        __in char *ptr, unsigned *offset);  \n  \n    virtual HRESULT ComputeOffset(HCEEFILE file, __in char *ptr,  \n        HCEESECTION *pSection, unsigned *offset);  \n  \n    virtual HRESULT GetCorHeader(HCEEFILE ceeFile,  \n        IMAGE_COR20_HEADER **header);  \n  \n    virtual HRESULT LinkCeeFile (HCEEFILE ceeFile);  \n  \n    virtual HRESULT FixupCeeFile (HCEEFILE ceeFile);  \n  \n    virtual HRESULT GetSectionRVA (HCEESECTION section, ULONG *rva);  \n  \n    virtual HRESULT ComputeSectionPointer(HCEESECTION section,  \n        ULONG offset, __out char **ptr);  \n  \n    virtual HRESULT SetObjSwitch (HCEEFILE ceeFile, BOOL objSwitch);  \n  \n    virtual HRESULT GetObjSwitch (HCEEFILE ceeFile, BOOL *objSwitch);  \n  \n    virtual HRESULT SetVTableEntry(HCEEFILE ceeFile, ULONG size,  \n        ULONG offset);  \n  \n    virtual HRESULT SetStrongNameEntry(HCEEFILE ceeFile, ULONG size,  \n        ULONG offset);  \n  \n    virtual HRESULT EmitMetaDataAt (HCEEFILE ceeFile,  \n        IMetaDataEmit *emitter, HCEESECTION section, DWORD offset,  \n        BYTE* buffer, unsigned buffLen);  \n  \n    virtual HRESULT GetFileTimeStamp (HCEEFILE ceeFile,  \n        DWORD *pTimeStamp);  \n  \n    virtual HRESULT AddNotificationHandler(HCEEFILE ceeFile,  \n        IUnknown *pHandler);  \n  \n    virtual HRESULT SetFileAlignment(HCEEFILE ceeFile,  \n        ULONG fileAlignment);  \n  \n    virtual HRESULT ClearComImageFlags (HCEEFILE ceeFile, DWORD mask);  \n  \n    virtual HRESULT CreateCeeFileEx(HCEEFILE *ceeFile,  \n        ULONG createFlags);  \n  \n    virtual HRESULT SetImageBase64(HCEEFILE ceeFile,  \n        ULONGLONG imageBase);  \n  \n    virtual HRESULT GetHeaderInfo (HCEEFILE ceeFile,  \n        PIMAGE_NT_HEADERS *ppNtHeaders,  \n        PIMAGE_SECTION_HEADER *ppSections, ULONG *pNumSections);  \n  \n    virtual HRESULT CreateCeeFileEx2(HCEEFILE *ceeFile,  \n        ULONG createFlags, LPCWSTR seedFileName = NULL);  \n  \n    virtual HRESULT SetVTableEntry64(HCEEFILE ceeFile, ULONG size,  \n        void* ptr);  \n};  \n```  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** ICeeFileGen.h  \n  \n **.NET Framework Version:** 1.0  \n  \n## See also\n\n- [Hosting Interfaces](../../../../docs/framework/unmanaged-api/hosting/hosting-interfaces.md)\n","nodes":[{"pos":[4,353],"embed":true,"restype":"x-metadata","content":"title: \"ICeeFileGen Class\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICeeFileGen\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICeeFileGen\"\nhelpviewer_keywords: \n  - \"ICeeFileGen class [.NET Framework hosting]\"\nms.assetid: 90368606-506e-40df-be1f-8d595159203f\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"ICeeFileGen Class","nodes":[{"pos":[0,17],"content":"ICeeFileGen Class","nodes":[{"content":"ICeeFileGen Class","pos":[0,17]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[360,377],"content":"ICeeFileGen Class","linkify":"ICeeFileGen Class","nodes":[{"content":"ICeeFileGen Class","pos":[0,17]}]},{"content":"Provides functionality for creating a native portable executable (PE) file.","pos":[378,453]},{"content":"The interface will typically be used by compilers to generate their compiled output executable.","pos":[454,549]},{"pos":[557,680],"content":"[!NOTE]\n `ICeeFileGen` supports the .NET Framework infrastructure and is not intended to be used directly from your code.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">`ICeeFileGen`</ph> supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[9,121],"source":"`ICeeFileGen` supports the .NET Framework infrastructure and is not intended to be used directly from your code."}]},{"content":"This interface has been deprecated and will be removed in a future release.","pos":[687,762]},{"pos":[771,777],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[7409,7421],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[7425,7529],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[7536,7561],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> ICeeFileGen.h","source":"**Header:** ICeeFileGen.h"},{"pos":[7568,7599],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Version:<ept id=\"p1\">**</ept> 1.0","source":"**.NET Framework Version:** 1.0"},{"pos":[7608,7616],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[7620,7712],"content":"<bpt id=\"p1\">[</bpt>Hosting Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/hosting-interfaces.md)</ept>","source":"[Hosting Interfaces](../../../../docs/framework/unmanaged-api/hosting/hosting-interfaces.md)"}]}