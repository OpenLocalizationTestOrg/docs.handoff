{"content":"---\ntitle: \"/= Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"/=_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"division assignment operator (/=) [C#]\"\n  - \"/= (division assignment operator) [C#]\"\nms.assetid: 50fc02b0-ee9c-4c3e-b58d-d591282caf1c\ncaps.latest.revision: 17\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /= Operator (C# Reference)\nThe division assignment operator.  \n  \n## Remarks  \n An expression using the `/=` assignment operator, such as  \n  \n```  \nx /= y  \n```  \n  \n is equivalent to  \n  \n```  \nx = x / y  \n```  \n  \n except that `x` is only evaluated once. The [/ operator](../../../csharp/language-reference/operators/division-operator.md) is predefined for numeric types to perform division.  \n  \n The `/=` operator cannot be overloaded directly, but user-defined types can overload the [/ operator](../../../csharp/language-reference/operators/division-operator.md) (see [operator](../../../csharp/language-reference/keywords/operator.md)). On all compound assignment operators, overloading the binary operator implicitly overloads the equivalent compound assignment.  \n  \n## Example  \n [!code-cs[csRefOperators#5](codesnippet/CSharp/division-assignment-operator_1.cs)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Operators](../../../csharp/language-reference/operators/index.md)\n","nodes":[{"pos":[4,620],"embed":true,"restype":"x-metadata","content":"title: \"/= Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"/=_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"division assignment operator (/=) [C#]\"\n  - \"/= (division assignment operator) [C#]\"\nms.assetid: 50fc02b0-ee9c-4c3e-b58d-d591282caf1c\ncaps.latest.revision: 17\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"/= Operator (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,43],"content":"/= Operator (C# Reference) | Microsoft Docs","nodes":[{"content":"/= Operator (C# Reference) | Microsoft Docs","pos":[0,43]}]}],"path":["title"]}],"yml":true},{"pos":[627,653],"content":"/= Operator (C# Reference)","linkify":"/= Operator (C# Reference)","nodes":[{"content":"/= Operator (C# Reference)","pos":[0,26]}]},{"content":"The division assignment operator.","pos":[654,687]},{"pos":[696,703],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[707,764],"content":"An expression using the <ph id=\"ph1\">`/=`</ph> assignment operator, such as","source":"An expression using the `/=` assignment operator, such as"},{"content":"is equivalent to","pos":[795,811]},{"content":"except that <ph id=\"ph1\">`x`</ph> is only evaluated once.","pos":[845,884],"source":"except that `x` is only evaluated once."},{"content":"The <bpt id=\"p1\">[</bpt>/ operator<ept id=\"p1\">](../../../csharp/language-reference/operators/division-operator.md)</ept> is predefined for numeric types to perform division.","pos":[885,1021],"source":" The [/ operator](../../../csharp/language-reference/operators/division-operator.md) is predefined for numeric types to perform division."},{"content":"The <ph id=\"ph1\">`/=`</ph> operator cannot be overloaded directly, but user-defined types can overload the <bpt id=\"p1\">[</bpt>/ operator<ept id=\"p1\">](../../../csharp/language-reference/operators/division-operator.md)</ept> (see <bpt id=\"p2\">[</bpt>operator<ept id=\"p2\">](../../../csharp/language-reference/keywords/operator.md)</ept>).","pos":[1028,1271],"source":"The `/=` operator cannot be overloaded directly, but user-defined types can overload the [/ operator](../../../csharp/language-reference/operators/division-operator.md) (see [operator](../../../csharp/language-reference/keywords/operator.md))."},{"content":"On all compound assignment operators, overloading the binary operator implicitly overloads the equivalent compound assignment.","pos":[1272,1398]},{"pos":[1407,1414],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1509,1517],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1521,1581],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1585,1652],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](../../../csharp/language-reference/operators/index.md)</ept>","pos":[1656,1725],"source":"[C# Operators](../../../csharp/language-reference/operators/index.md)"}]}