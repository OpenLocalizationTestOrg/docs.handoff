{"content":"---\ntitle: Write a simple parallel program using Parallel.ForEach\nms.date: 02/14/2019\nms.technology: dotnet-standard\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"foreach, parallel version\"\n  - \"parallel programming, foreach\"\nms.assetid: cb5fab92-1c19-499e-ae91-8b7525dd875f\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# How to: Write a simple Parallel.ForEach loop\n\nThis example shows how to use a <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> loop to enable data parallelism over any <xref:System.Collections.IEnumerable?displayProperty=nameWithType> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> data source.\n\n> [!NOTE]\n> This documentation uses lambda expressions to define delegates in PLINQ. If you are not familiar with lambda expressions in C# or Visual Basic, see [Lambda expressions in PLINQ and TPL](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md).\n\n## Example\n\nThis example assumes you have several .jpg files in a *C:\\Users\\Public\\Pictures\\Sample Pictures* folder and creates a new sub-folder named *Modified*. When you run the example, it rotates each .jpg image in *Sample Pictures* and saves it to *Modified*. You can modify the two paths as necessary.\n\n[!code-csharp[TPL_Parallel#03](../../../samples/snippets/csharp/VS_Snippets_Misc/tpl_parallel/cs/simpleforeach.cs#03)]\n[!code-vb[TPL_Parallel#03](../../../samples/snippets/visualbasic/VS_Snippets_Misc/tpl_parallel/vb/simpleforeach.vb#03)]\n\nA <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> loop works like a <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> loop. The loop partitions the source collection and schedules the work on multiple threads based on the system environment. The more processors on the system, the faster the parallel method runs. For some source collections, a sequential loop may be faster, depending on the size of the source and the kind of work the loop performs. For more information about performance, see [Potential pitfalls in data and task parallelism](../../../docs/standard/parallel-programming/potential-pitfalls-in-data-and-task-parallelism.md)\n\nFor more information about parallel loops, see [How to: Write a simple Parallel.For loop](../../../docs/standard/parallel-programming/how-to-write-a-simple-parallel-for-loop.md).\n\nTo use <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> with a non-generic collection, you can use the <xref:System.Linq.Enumerable.Cast%2A?displayProperty=nameWithType> extension method to convert the collection to a generic collection, as shown in the following example:\n\n[!code-csharp[TPL_Parallel#07](../../../samples/snippets/csharp/VS_Snippets_Misc/tpl_parallel/cs/nongeneric.cs#07)]\n[!code-vb[TPL_Parallel#07](../../../samples/snippets/visualbasic/VS_Snippets_Misc/tpl_parallel/vb/nongeneric.vb#07)]\n\nYou can also use Parallel LINQ (PLINQ) to parallelize processing of <xref:System.Collections.Generic.IEnumerable%601> data sources. PLINQ enables you to use declarative query syntax to express the loop behavior. For more information, see [Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md).\n\n## Compile and run the code\n\nYou can compile the code as a console application for .NET Framework or as a console application for .NET Core.\n\nIn Visual Studio, there are Visual Basic and C# console application templates for Windows Desktop and .NET Core.\n\nFrom the command line, you can use either .NET Core and its CLI tools (for example, `dotnet new console` or `dotnet new console -lang vb`), or you can create the file and use the command-line compiler for a .NET Framework application.\n\nFor a .NET Core project, you must reference the **System.Drawing.Common** NuGet package. In Visual Studio, use the NuGet Package Manager to install the package. Alternatively, you can add a reference to the package in your *.*csproj* or *.*vbproj* file:\n \n```xml\n<ItemGroup>\n     <PackageReference Include=\"System.Drawing.Common\" Version=\"4.5.1\" />\n</ItemGroup>\n```\n\nTo run a .NET Core console application from the command line, use `dotnet run` from the folder that contains your application.\n\nTo run your console application from Visual Studio, press **F5**.\n\n## See also\n\n- [Data parallelism](../../../docs/standard/parallel-programming/data-parallelism-task-parallel-library.md)\n- [Parallel programming](../../../docs/standard/parallel-programming/index.md)\n- [Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)\n","nodes":[{"pos":[4,327],"embed":true,"restype":"x-metadata","content":"title: Write a simple parallel program using Parallel.ForEach\nms.date: 02/14/2019\nms.technology: dotnet-standard\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"foreach, parallel version\"\n  - \"parallel programming, foreach\"\nms.assetid: cb5fab92-1c19-499e-ae91-8b7525dd875f\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"Write a simple parallel program using Parallel.ForEach","nodes":[{"pos":[0,54],"content":"Write a simple parallel program using Parallel.ForEach","nodes":[{"content":"Write a simple parallel program using Parallel.ForEach","pos":[0,54]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[334,378],"content":"How to: Write a simple Parallel.ForEach loop","linkify":"How to: Write a simple Parallel.ForEach loop","nodes":[{"content":"How to: Write a simple Parallel.ForEach loop","pos":[0,44]}]},{"pos":[380,693],"content":"This example shows how to use a <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> loop to enable data parallelism over any <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable?displayProperty=nameWithType&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> data source.","source":"This example shows how to use a <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> loop to enable data parallelism over any <xref:System.Collections.IEnumerable?displayProperty=nameWithType> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> data source."},{"pos":[697,977],"content":"[!NOTE]\nThis documentation uses lambda expressions to define delegates in PLINQ. If you are not familiar with lambda expressions in C# or Visual Basic, see [Lambda expressions in PLINQ and TPL](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md).","leadings":["","> "],"nodes":[{"content":"This documentation uses lambda expressions to define delegates in PLINQ. If you are not familiar with lambda expressions in C# or Visual Basic, see [Lambda expressions in PLINQ and TPL](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md).","pos":[8,278],"nodes":[{"content":"This documentation uses lambda expressions to define delegates in PLINQ.","pos":[0,72]},{"content":"If you are not familiar with lambda expressions in C# or Visual Basic, see <bpt id=\"p1\">[</bpt>Lambda expressions in PLINQ and TPL<ept id=\"p1\">](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md)</ept>.","pos":[73,270],"source":" If you are not familiar with lambda expressions in C# or Visual Basic, see [Lambda expressions in PLINQ and TPL](../../../docs/standard/parallel-programming/lambda-expressions-in-plinq-and-tpl.md)."}]}]},{"pos":[982,989],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example assumes you have several .jpg files in a <bpt id=\"p1\">*</bpt>C:\\Users\\Public\\Pictures\\Sample Pictures<ept id=\"p1\">*</ept> folder and creates a new sub-folder named <bpt id=\"p2\">*</bpt>Modified<ept id=\"p2\">*</ept>.","pos":[991,1141],"source":"This example assumes you have several .jpg files in a *C:\\Users\\Public\\Pictures\\Sample Pictures* folder and creates a new sub-folder named *Modified*."},{"content":"When you run the example, it rotates each .jpg image in <bpt id=\"p1\">*</bpt>Sample Pictures<ept id=\"p1\">*</ept> and saves it to <bpt id=\"p2\">*</bpt>Modified<ept id=\"p2\">*</ept>.","pos":[1142,1243],"source":" When you run the example, it rotates each .jpg image in *Sample Pictures* and saves it to *Modified*."},{"content":"You can modify the two paths as necessary.","pos":[1244,1286]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> loop works like a <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph> loop.","pos":[1528,1707],"source":"A <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> loop works like a <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType> loop."},{"content":"The loop partitions the source collection and schedules the work on multiple threads based on the system environment.","pos":[1708,1825]},{"content":"The more processors on the system, the faster the parallel method runs.","pos":[1826,1897]},{"content":"For some source collections, a sequential loop may be faster, depending on the size of the source and the kind of work the loop performs.","pos":[1898,2035]},{"content":"For more information about performance, see <bpt id=\"p1\">[</bpt>Potential pitfalls in data and task parallelism<ept id=\"p1\">](../../../docs/standard/parallel-programming/potential-pitfalls-in-data-and-task-parallelism.md)</ept>","pos":[2036,2225],"source":" For more information about performance, see [Potential pitfalls in data and task parallelism](../../../docs/standard/parallel-programming/potential-pitfalls-in-data-and-task-parallelism.md)"},{"pos":[2227,2405],"content":"For more information about parallel loops, see <bpt id=\"p1\">[</bpt>How to: Write a simple Parallel.For loop<ept id=\"p1\">](../../../docs/standard/parallel-programming/how-to-write-a-simple-parallel-for-loop.md)</ept>.","source":"For more information about parallel loops, see [How to: Write a simple Parallel.For loop](../../../docs/standard/parallel-programming/how-to-write-a-simple-parallel-for-loop.md)."},{"pos":[2407,2709],"content":"To use <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> with a non-generic collection, you can use the <ph id=\"ph2\">&lt;xref:System.Linq.Enumerable.Cast%2A?displayProperty=nameWithType&gt;</ph> extension method to convert the collection to a generic collection, as shown in the following example:","source":"To use <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> with a non-generic collection, you can use the <xref:System.Linq.Enumerable.Cast%2A?displayProperty=nameWithType> extension method to convert the collection to a generic collection, as shown in the following example:"},{"content":"You can also use Parallel LINQ (PLINQ) to parallelize processing of <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> data sources.","pos":[2945,3076],"source":"You can also use Parallel LINQ (PLINQ) to parallelize processing of <xref:System.Collections.Generic.IEnumerable%601> data sources."},{"content":"PLINQ enables you to use declarative query syntax to express the loop behavior.","pos":[3077,3156]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Parallel LINQ (PLINQ)<ept id=\"p1\">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.","pos":[3157,3275],"source":" For more information, see [Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)."},{"pos":[3280,3304],"content":"Compile and run the code","linkify":"Compile and run the code","nodes":[{"content":"Compile and run the code","pos":[0,24]}]},{"content":"You can compile the code as a console application for .NET Framework or as a console application for .NET Core.","pos":[3306,3417]},{"content":"In Visual Studio, there are Visual Basic and C# console application templates for Windows Desktop and .NET Core.","pos":[3419,3531]},{"pos":[3533,3767],"content":"From the command line, you can use either .NET Core and its CLI tools (for example, <ph id=\"ph1\">`dotnet new console`</ph> or <ph id=\"ph2\">`dotnet new console -lang vb`</ph>), or you can create the file and use the command-line compiler for a .NET Framework application.","source":"From the command line, you can use either .NET Core and its CLI tools (for example, `dotnet new console` or `dotnet new console -lang vb`), or you can create the file and use the command-line compiler for a .NET Framework application."},{"content":"For a .NET Core project, you must reference the <bpt id=\"p1\">**</bpt>System.Drawing.Common<ept id=\"p1\">**</ept> NuGet package.","pos":[3769,3857],"source":"For a .NET Core project, you must reference the **System.Drawing.Common** NuGet package."},{"content":"In Visual Studio, use the NuGet Package Manager to install the package.","pos":[3858,3929]},{"content":"Alternatively, you can add a reference to the package in your <bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>csproj* or <bpt id=\"p2\">*</bpt>.<ept id=\"p2\">*</ept>vbproj* file:","pos":[3930,4022],"source":" Alternatively, you can add a reference to the package in your *.*csproj* or *.*vbproj* file:"},{"pos":[4136,4262],"content":"To run a .NET Core console application from the command line, use <ph id=\"ph1\">`dotnet run`</ph> from the folder that contains your application.","source":"To run a .NET Core console application from the command line, use `dotnet run` from the folder that contains your application."},{"pos":[4264,4329],"content":"To run your console application from Visual Studio, press <bpt id=\"p1\">**</bpt>F5<ept id=\"p1\">**</ept>.","source":"To run your console application from Visual Studio, press **F5**."},{"pos":[4334,4342],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4346,4451],"content":"<bpt id=\"p1\">[</bpt>Data parallelism<ept id=\"p1\">](../../../docs/standard/parallel-programming/data-parallelism-task-parallel-library.md)</ept>","source":"[Data parallelism](../../../docs/standard/parallel-programming/data-parallelism-task-parallel-library.md)"},{"pos":[4454,4530],"content":"<bpt id=\"p1\">[</bpt>Parallel programming<ept id=\"p1\">](../../../docs/standard/parallel-programming/index.md)</ept>","source":"[Parallel programming](../../../docs/standard/parallel-programming/index.md)"},{"pos":[4533,4624],"content":"<bpt id=\"p1\">[</bpt>Parallel LINQ (PLINQ)<ept id=\"p1\">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>","source":"[Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)"}]}