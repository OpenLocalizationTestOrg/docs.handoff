<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb423681dd94e90150ef204cbe6c1d41e00a1512</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\security\how-to-enable-wif-for-a-wcf-web-service-application.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c1fece0824fba1cc92d6c1fe431207499780ce9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">687c4fb1df1fd65c712c0965e90f2cf9bcc25ed2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How To: Enable WIF for a WCF Web Service Application | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How To: Enable WIF for a WCF Web Service Application</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies To</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Microsoft® Windows® Identity Foundation (WIF)</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Microsoft® Windows® Communication Foundation (WCF)</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Summary</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This How-To provides detailed step-by-step procedures for enabling WIF in a WCF web service.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It also provides instructions for how to test the application to verify that the web service is correctly presenting claims when the application is run.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This How-To does not have detailed instructions for creating a Security Token Service (STS), and instead uses the Development STS that comes with the Identity and Access tool.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Development STS does not perform real authentication and is intended for testing purposes only.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You will need to install the Identity and Access tool to complete this How-To.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It can be downloaded from the following location: <bpt id="p1">[</bpt>Identity and Access Tool<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=245849)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Contents</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Objectives</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Summary of Steps</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Step 1 – Create a Simple WCF Service</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Step 2 – Create a Client Application for the WCF Service</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Step 3 – Test Your Solution</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Objectives</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Create a WCF service that requires issued tokens</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create a WCF client that requests a token from an STS and passes it to the WCF service</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This How-To is intended to demonstrate how a developer can use federated authentication when developing WCF services.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Some of the benefits of using federation in WCF services include:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Factoring authentication logic out of WCF service code</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Re-using existing identity management solutions</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Interoperability with other identity solutions</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Flexibility and resilience to future changes</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>WIF and the associated Identity and Access tool make it easier to develop and test a WCF service using federated authentication, as the following steps demonstrate.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Summary of Steps</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Step 1 – Create a Simple WCF Service</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Step 2 – Create a Client Application for the WCF Service</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Step 3 – Test Your Solution</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Step 1 – Create a Simple WCF Service</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this step, you will create a new WCF service that uses the Development STS that is included with the Identity and Access tool.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To create a simple WCF service</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Start Visual Studio in elevated mode as administrator.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In Visual Studio, click <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> window, click <bpt id="p2">**</bpt>WCF Service Application<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, enter <ph id="ph1">`TestService`</ph> and press <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>TestService<ept id="p1">**</ept> project under <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept>, then select <bpt id="p3">**</bpt>Identity and Access<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Identity and Access<ept id="p1">**</ept> window appears.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Providers<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Test your application with the Local Development STS<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>Apply<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The Identity and Access Tool configures the service to use WIF and to outsource authentication to the local development STS (<bpt id="p1">**</bpt>LocalSTS<ept id="p1">**</ept>) by adding configuration elements to the <bpt id="p2">*</bpt>Web.config<ept id="p2">*</ept> file.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>Service1.svc.cs<ept id="p1">*</ept> file, add a <ph id="ph1">`using`</ph> directive for the <bpt id="p2">**</bpt>System.Security.Claims<ept id="p2">**</ept> namespace and replace the existing code with the following, then save the file:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ComputeResponse`</ph> method displays the properties of various claims that are issued by <bpt id="p1">**</bpt>LocalSTS<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>IService1.cs<ept id="p1">*</ept> file, replace the existing code with the following, then save the file:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Build the project.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>Ctrl-F5<ept id="p1">**</ept> to run the service without starting the debugger.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A Web page should open for the service and you can verify that <bpt id="p1">**</bpt>LocalSTS<ept id="p1">**</ept> is running by looking in the notification area (system tray).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Both <bpt id="p1">**</bpt>TestService<ept id="p1">**</ept> and <bpt id="p2">**</bpt>LocalSTS<ept id="p2">**</ept> must be running when you add the service reference to the client application in the next step.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Step 2 – Create a Client Application for the WCF Service</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In this step, you will create a console application that uses the Development STS to authenticate with the WCF service you created in the previous step.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To create a client application</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right-click on the solution, click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Project<ept id="p1">**</ept> window, select <bpt id="p2">**</bpt>Console Application<ept id="p2">**</ept> from the <bpt id="p3">**</bpt>Visual C#<ept id="p3">**</ept> templates list, enter <ph id="ph1">`Client`</ph>, and then press <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The new project will be created in your solution folder.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Right-click on <bpt id="p1">**</bpt>References<ept id="p1">**</ept> under the <bpt id="p2">**</bpt>Client<ept id="p2">**</ept> project, and then click <bpt id="p3">**</bpt>Add Service Reference<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Service Reference<ept id="p1">**</ept> window, click the drop-down arrow on the <bpt id="p2">**</bpt>Discover<ept id="p2">**</ept> button and click <bpt id="p3">**</bpt>Services in Solution<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Address<ept id="p1">**</ept> will automatically populate with the WCF service you created earlier, and the <bpt id="p2">**</bpt>Namespace<ept id="p2">**</ept> will be set to <bpt id="p3">**</bpt>ServiceReference1<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Both <bpt id="p1">**</bpt>TestService<ept id="p1">**</ept> and <bpt id="p2">**</bpt>LocalSTS<ept id="p2">**</ept> must be running when you add the service reference to the client.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Visual Studio will generate proxy classes for the WCF service, and add all of the necessary reference information.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>It will also add elements to the <bpt id="p1">*</bpt>App.config<ept id="p1">*</ept> file to configure the client to get a token from the STS to authenticate with the service.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When this process is finished, the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file will open.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`using`</ph> directive for <bpt id="p1">**</bpt>System.ServiceModel<ept id="p1">**</ept> and another for <bpt id="p2">**</bpt>Client.ServiceReference1<ept id="p2">**</ept>, replace the <bpt id="p3">**</bpt>Main<ept id="p3">**</ept> method with the following code, then save the file:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>App.config<ept id="p1">*</ept> file and add the following XML as the first child element under the <ph id="ph1">`&lt;system.serviceModel&gt;`</ph> element, then save the file:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This disables certificate validation.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>TestService<ept id="p1">**</ept> solution and click on <bpt id="p2">**</bpt>Set StartUp Projects<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Startup Project<ept id="p1">**</ept> property page opens.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Startup Project<ept id="p1">**</ept> property page, select <bpt id="p2">**</bpt>Multiple startup projects<ept id="p2">**</ept> then click in the <bpt id="p3">**</bpt>Action<ept id="p3">**</ept> field for each project and select <bpt id="p4">**</bpt>Start<ept id="p4">**</ept> from the drop-down menu.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to save the settings.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Build the solution.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Step 3 – Test Your Solution</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In this step you will test your WIF-enabled WCF application and verify that claims are presented.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To test your WIF-enabled WCF application for claims</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> to build and run the application.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You should be presented with a console window, and the following text: <bpt id="p1">**</bpt>Press Enter key to invoke service, any other key to quit application:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>, and the following claims information should appear in the console:</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Both <bpt id="p1">**</bpt>TestService<ept id="p1">**</ept> and <bpt id="p2">**</bpt>LocalSTS<ept id="p2">**</ept> must be running before you press <bpt id="p3">**</bpt>Enter<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A Web page should open for the service and you can verify that <bpt id="p1">**</bpt>LocalSTS<ept id="p1">**</ept> is running by looking in the notification area (system tray).</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If these claims appear in the console, you have successfully authenticated with the STS to display claims from the WCF service.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>