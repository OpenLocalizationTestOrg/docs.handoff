<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">081b6d06b638ec8cc6781f8c5c741bc02334b57b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\using-the-discovery-client-channel.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1be9b39c1ce745674fad65b87c6d1b883bca5bcf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70c58796cb5390599f0e30e077e565093fad5b7d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using the Discovery Client Channel | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using the Discovery Client Channel</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When writing a WCF client application you need to know the endpoint address of the service you are calling.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In many situations the endpoint address of a service is not known in advance or the address of the service changes over time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Discovery Client Channel allows you to write a WCF client application, describe the service you want to call, and the client channel automatically sends a probe request.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When a service responds, the discovery client channel retrieves the endpoint address for the service from the probe response and uses it to call the service.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Using the Discovery Client Channel</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To use the Discovery Client Channel, add an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> to your client channel stack.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Alternatively you can use the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> and a <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> is automatically added to your binding if not already present.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> is the top-most element on your client channel stack.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Any binding element that is added on top of the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> must make sure that the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> or channel it creates does not use the endpoint address or <ph id="ph3">`Via`</ph> address (passed to the <ph id="ph4">`CreateChannel`</ph> method) because they may not contain the correct address.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> class contains two public properties:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement.FindCriteria%2A&gt;</ph>, which is used to describe the service you want to call.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement.FindCriteria%2A&gt;</ph> property allows you to specify the service contract you are searching for, any required scope URIs, and the maximum number of time to attempt to open the channel.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The contract type is specified by calling the constructor &lt;<ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.Discovery.FindCriteria%2A&gt;  --&gt;</ph> <ph id="ph2">`FindCriteria`</ph>&gt; .</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Scope URIs can be added to the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria.Scopes%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria.MaxResults%2A&gt;</ph> property allows you to specify the maximum number of results to which the client tries to connect to.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When a probe response is received the client attempts to open the channel using the endpoint address from the probe response.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If an exception occurs the client moves on to the next probe response, waiting for more responses to be received if necessary.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It continues to do this until the channel is successfully opened or the maximum number of results is reached.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph>these settings, see &lt;<ph id="ph2">&lt;!--zz &lt;xref:System.ServiceModel.Discovery.FindCriteria%2A&gt;  --&gt;</ph> <ph id="ph3">`FindCriteria`</ph>&gt;.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement.DiscoveryEndpoint%2A&gt;  --&gt;</ph> <ph id="ph2">`DiscoveryEndpoint%2A&gt;`</ph> property allows you to specify the discovery endpoint to use.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Normally this is a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph>, but it can be any valid endpoint.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When you are creating the binding to use to communicate with the service, you must be careful to use the exact same binding as the service.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The only difference is the client binding has a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> on the top of the stack.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If service is using one of the system-provided bindings, create a new <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CustomBinding&gt;</ph> and pass in the system-provided binding to the <ph id="ph2">&lt;!--zz &lt;xref:System.ServiceModel.CustomBinding.CustomBinding%2A&gt; `CustomBinding` --&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Then you can add the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> by calling <ph id="ph2">`Insert`</ph> on the <ph id="ph3">&lt;!--zz &lt;xref:System.ServiceModel.Channels.Binding.Elements%2A&gt; --&gt;</ph> <ph id="ph4">`Elements`</ph> property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Once you have added the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> to your binding and configured it, you can create an instance of the WCF client class, open it, and call its methods.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example uses the Discovery Client Channel to discover a WCF service that implements the <ph id="ph1">`ICalculator`</ph> class (used in the Getting Started WCF tutorial) and calls its <ph id="ph2">`Add`</ph> method.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Security and the Discovery Client Channel</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When using the discovery client channel, two endpoints are being specified.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>One is used for discovery messages, usually <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph>, and the other is the application endpoint.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When implementing a secure service, care must be taken to secure both endpoints.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> security, see <bpt id="p1">[</bpt>Securing Services and Clients<ept id="p1">](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>