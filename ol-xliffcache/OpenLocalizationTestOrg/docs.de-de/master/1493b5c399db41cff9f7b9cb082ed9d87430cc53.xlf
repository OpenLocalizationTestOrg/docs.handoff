<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1493b5c399db41cff9f7b9cb082ed9d87430cc53</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\globalization-localization\best-practices-for-developing-world-ready-apps.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad8752dff0608c757d9fc8f2b1ba531c91168904</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d852c870cadbcba1de45e22725539db9e64f95ac</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Best Practices for Developing World-Ready Applications | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Best Practices for Developing World-Ready Applications</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section describes the best practices to follow when developing world-ready applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Globalization Best Practices</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Make your application Unicode internally.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use the culture-aware classes provided by the <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace to manipulate and format data.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For sorting, use the <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Globalization.CompareInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For string comparisons, use the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For date and time formatting, use the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For numeric formatting, use the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For Gregorian and non-Gregorian calendars, use the <ph id="ph1">&lt;xref:System.Globalization.Calendar&gt;</ph> class or one of the specific calendar implementations.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use the culture property settings provided by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;</ph> class in the appropriate situations.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property for formatting tasks, such as date and time or numeric formatting.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property to retrieve resources.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`CurrentCulture`</ph> and <ph id="ph2">`CurrentUICulture`</ph> properties can be set per thread.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Enable your application to read and write data to and from a variety of encodings by using the encoding classes in the <ph id="ph1">&lt;xref:System.Text&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Do not assume ASCII data.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Assume that international characters will be supplied anywhere a user can enter text.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the application should accept international characters in server names, directories, file names, user names, and URLs.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When using the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> class, for security reasons, use the error detection feature offered by this class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To turn on the error detection feature, the application creates an instance of the class using the constructor that takes a <ph id="ph1">`throwOnInvalidBytes`</ph> parameter and sets the value of this parameter to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Whenever possible, handle strings as entire strings instead of as a series of individual characters.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is especially important when sorting or searching for substrings.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This will prevent problems associated with parsing combined characters.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Display text using the classes provided by the <ph id="ph1">&lt;xref:System.Drawing&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For consistency across operating systems, do not allow user settings to override <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`CultureInfo`</ph> constructor that accepts a <ph id="ph2">`useUserOverride`</ph> parameter and set it to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Test your application functionality on international operating system versions, using international data.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If a security decision is based on the result of a string comparison or case change operation, have the application perform a culture-insensitive operation.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This practice ensures that the result is not affected by the value of <ph id="ph1">`CultureInfo.CurrentCulture`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See the "String Comparisons that Use the Current Culture" section of <bpt id="p1">[</bpt>Best Practices for Using Strings<ept id="p1">](../../../docs/standard/base-types/best-practices-strings.md)</ept> for an example that demonstrates how culture-sensitive string comparisons can produce inconsistent results.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Localization Best Practices</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Move all localizable resources to separate resource-only DLLs.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Localizable resources include user interface elements, such as strings, error messages, dialog boxes, menus, and embedded object resources.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Do not hardcode strings or user interface resources.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Do not put nonlocalizable resources into the resource-only DLLs.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This causes confusion for translators.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Do not use composite strings that are built at run time from concatenated phrases.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Composite strings are difficult to localize because they often assume an English grammatical order that does not apply to all languages.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Avoid ambiguous constructs such as "Empty Folder" where the strings can be translated differently depending on the grammatical roles of the string components.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, "empty" can be either a verb or an adjective, which can lead to different translations in languages such as Italian or French.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Avoid using images and icons that contain text in your application.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>They are expensive to localize.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Allow plenty of room for the length of strings to expand in the user interface.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In some languages, phrases can require 50-75 percent more space than they need in other languages.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Resources.ResourceManager?displayProperty=fullName&gt;</ph> class to retrieve resources based on culture.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Use Visual Studio to create Windows Forms dialog boxes, so that they can be localized using the <bpt id="p1">[</bpt>Windows Forms Resource Editor (Winres.exe)<ept id="p1">](../../../docs/framework/tools/winres-exe-windows-forms-resource-editor.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Do not code Windows Forms dialog boxes by hand.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Arrange for professional localization (translation).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For a complete description of creating and localizing resources, see <bpt id="p1">[</bpt>Resources in Applications<ept id="p1">](../../../docs/framework/resources/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Globalization Best Practices for ASP.NET Applications</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Explicitly set the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> properties in your application.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Do not rely on defaults.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Note that ASP.NET applications are managed applications and therefore can use the same classes as other managed applications for retrieving, displaying, and manipulating information based on culture.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Be aware that you can specify the following three types of encodings in ASP.NET:</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>requestEncoding specifies the encoding received from the client's browser.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>responseEncoding specifies the encoding to send to the client browser.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In most situations, this encoding should be the same as that specified for requestEncoding.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>fileEncoding specifies the default encoding for .aspx, .asmx, and .asax file parsing.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Specify the values for the requestEncoding, responseEncoding, fileEncoding, culture, and uiCulture attributes in the following three places in an ASP.NET application:</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In the globalization section of a Web.config file.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This file is external to the ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>globalization&gt; Element<ept id="p1">](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In a page directive.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Note that, when an application is in a page, the file has already been read.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Therefore, it is too late to specify fileEncoding and requestEncoding.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Only uiCulture, Culture, and responseEncoding can be specified in a page directive.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Programmatically in application code.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This setting can vary per request.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>As with a page directive, by the time the application's code is reached it is too late to specify fileEncoding and requestEncoding.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Only uiCulture, Culture, and responseEncoding can be specified in application code.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Note that the uiCulture value can be set to the browser accept language.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](../../../docs/standard/globalization-localization/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Resources in Desktop Apps<ept id="p1">](../../../docs/framework/resources/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>