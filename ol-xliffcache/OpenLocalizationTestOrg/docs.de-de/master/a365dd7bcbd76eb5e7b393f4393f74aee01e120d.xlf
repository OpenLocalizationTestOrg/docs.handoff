<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a365dd7bcbd76eb5e7b393f4393f74aee01e120d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\how-to-hit-test-using-geometry-as-a-parameter.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f798ebf3c642ae3ecb2c2362624fcaf0fd20d1ae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d9112fd3f7c1c68f4b66bdf31279804ef32e268</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Hit Test Using Geometry as a Parameter | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Hit Test Using Geometry as a Parameter</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to perform a hit test on a visual object using a <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> as a hit test parameter.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following example shows how to set up a hit test using <ph id="ph1">&lt;xref:System.Windows.Media.GeometryHitTestParameters&gt;</ph> for the <ph id="ph2">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> value that is passed to the <ph id="ph2">`OnMouseDown`</ph> method is used to create a <ph id="ph3">&lt;xref:System.Windows.Media.Geometry&gt;</ph> object in order to expand the range of the hit test.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>HitTestingOverview#HitTestingOverviewSnippet10<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet10)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>HitTestingOverview#HitTestingOverviewSnippet10<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet10)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.GeometryHitTestResult.IntersectionDetail%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Media.GeometryHitTestResult&gt;</ph> provides information about the results of a hit test that uses a <ph id="ph3">&lt;xref:System.Windows.Media.Geometry&gt;</ph> as a hit test parameter.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following illustration shows the relationship between the hit test geometry (the blue circle) and the rendered content of the target visual object (the red square).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram of IntersectionDetail used in hit testing<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/media/intersectiondetail01.png "IntersectionDetail01")</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Intersection between hit test geometry and target visual object</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example shows how to implement a hit test callback when a <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> is used as a hit test parameter.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`result`</ph> parameter is cast to a <ph id="ph2">&lt;xref:System.Windows.Media.GeometryHitTestResult&gt;</ph> in order to retrieve the value of the <ph id="ph3">&lt;xref:System.Windows.Media.GeometryHitTestResult.IntersectionDetail%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The property value allows you to determine if the <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> hit test parameter is fully or partially contained within the rendered content of the hit test target.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this case, the sample code is only adding hit test results to the list for visuals that are fully contained within the target boundary.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>HitTestingOverview#HitTestingOverviewSnippet11<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet11)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>HitTestingOverview#HitTestingOverviewSnippet11<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet11)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult&gt;</ph> callback should not be called when the intersection detail is <ph id="ph2">&lt;xref:System.Windows.Media.IntersectionDetail&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hit Testing in the Visual Layer<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hit Test Geometry in a Visual<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/how-to-hit-test-geometry-in-a-visual.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>