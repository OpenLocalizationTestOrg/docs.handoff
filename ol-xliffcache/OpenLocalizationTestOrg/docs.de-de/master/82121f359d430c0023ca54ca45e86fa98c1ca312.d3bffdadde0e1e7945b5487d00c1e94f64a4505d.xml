{"content":"---\ntitle: \"Anonymous type property '<propertyname>' cannot be used in the definition of a lambda expression within the same initialization list\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc36549\"\n  - \"bc36549\"\nhelpviewer_keywords: \n  - \"BC36549\"\nms.assetid: 6d04692a-957a-41ce-a19c-fcb06a186d1a\n---\n# Anonymous type property '\\<propertyname>' cannot be used in the definition of a lambda expression within the same initialization list\nProperties defined in the initialization list of an anonymous type cannot be part of a lambda expression definition in the same list. For example, in the following code, property `Num` cannot be included in the definition of `LambdaFun`.  \n  \n```vb  \n' Not valid.  \n'Dim anon = New With {.Num = 4, .LambdaFun = Function() .Num > 0}  \n```  \n  \n **Error ID:** BC36549  \n\n## To correct this error  \n  \n1.  Consider splitting the anonymous type into two parts:  \n  \n```vb  \nDim anon1 = New With {.Num = 4}  \nDim anon2 = New With {.LambdaFun = Function() anon1.Num > 0}  \n' - or -  \nDim anon3 = New With {.lambdaFun = Function(n As Integer) n > 0}  \nConsole.WriteLine((anon2.LambdaFun)())  \nConsole.WriteLine(anon3.lambdaFun(anon1.Num))  \nanon1.Num = -5  \nConsole.WriteLine((anon2.LambdaFun)())  \nConsole.WriteLine(anon3.lambdaFun(anon1.Num))  \n```  \n  \nNote that if you declare `anon1.Num` as a `Key` property, its value cannot be changed.  \n  \n2.  An alternative is to use a regular function statement to access the anonymous type property:  \n  \n```vb  \nFunction testNum(ByVal n As Integer) As Boolean  \n    Return n > 0  \nEnd Function  \nConsole.WriteLine(testNum(anon1.Num))  \n```  \n  \n3.  Similarly, you can use a lambda function that is defined outside the anonymous type:  \n  \n```vb  \nDim lambdaFun1 = Function() anon1.Num > 0  \nDim lambdaFun2 = Function(n As Integer) n > 0  \n```  \n  \n## See also\n\n- [Lambda Expressions](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)\n- [Anonymous Types](../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)\n","nodes":[{"pos":[4,293],"embed":true,"restype":"x-metadata","content":"title: \"Anonymous type property '<propertyname>' cannot be used in the definition of a lambda expression within the same initialization list\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc36549\"\n  - \"bc36549\"\nhelpviewer_keywords: \n  - \"BC36549\"\nms.assetid: 6d04692a-957a-41ce-a19c-fcb06a186d1a","nodes":[{"content":"Anonymous type property '<propertyname>' cannot be used in the definition of a lambda expression within the same initialization list","nodes":[{"pos":[0,132],"content":"Anonymous type property '<ph id=\"ph1\">&lt;propertyname&gt;</ph>' cannot be used in the definition of a lambda expression within the same initialization list","source":"Anonymous type property '<propertyname>' cannot be used in the definition of a lambda expression within the same initialization list"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[300,433],"content":"Anonymous type property '\\<propertyname>' cannot be used in the definition of a lambda expression within the same initialization list","linkify":"Anonymous type property '\\<propertyname>' cannot be used in the definition of a lambda expression within the same initialization list","nodes":[{"content":"Anonymous type property '<ph id=\"ph1\">\\&lt;</ph>propertyname&gt;' cannot be used in the definition of a lambda expression within the same initialization list","pos":[0,133],"source":"Anonymous type property '\\<propertyname>' cannot be used in the definition of a lambda expression within the same initialization list"}]},{"content":"Properties defined in the initialization list of an anonymous type cannot be part of a lambda expression definition in the same list.","pos":[434,567]},{"content":"For example, in the following code, property <ph id=\"ph1\">`Num`</ph> cannot be included in the definition of <ph id=\"ph2\">`LambdaFun`</ph>.","pos":[568,671],"source":" For example, in the following code, property `Num` cannot be included in the definition of `LambdaFun`."},{"pos":[778,799],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36549","source":"**Error ID:** BC36549"},{"pos":[806,827],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Consider splitting the anonymous type into two parts:","pos":[837,890]},{"pos":[1283,1369],"content":"Note that if you declare <ph id=\"ph1\">`anon1.Num`</ph> as a <ph id=\"ph2\">`Key`</ph> property, its value cannot be changed.","source":"Note that if you declare `anon1.Num` as a `Key` property, its value cannot be changed."},{"content":"An alternative is to use a regular function statement to access the anonymous type property:","pos":[1379,1471]},{"content":"Similarly, you can use a lambda function that is defined outside the anonymous type:","pos":[1622,1706]},{"pos":[1824,1832],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1836,1945],"content":"<bpt id=\"p1\">[</bpt>Lambda Expressions<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept>","source":"[Lambda Expressions](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)"},{"pos":[1948,2060],"content":"<bpt id=\"p1\">[</bpt>Anonymous Types<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept>","source":"[Anonymous Types](../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)"}]}