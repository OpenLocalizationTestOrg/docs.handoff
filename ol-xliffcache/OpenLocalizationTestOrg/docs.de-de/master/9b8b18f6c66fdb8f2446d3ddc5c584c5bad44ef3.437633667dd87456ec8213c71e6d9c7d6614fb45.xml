{"content":"---\ntitle: \"How to: Create a Custom Principal Identity\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"IPrincipal\"\n  - \"IAuthorizationPolicy\"\n  - \"PrincipalPermissionMode\"\n  - \"PrincipalPermissionAttribute\"\nms.assetid: c4845fca-0ed9-4adf-bbdc-10812be69b61\n---\n# How to: Create a Custom Principal Identity\nThe <xref:System.Security.Permissions.PrincipalPermissionAttribute> is a declarative means of controlling access to service methods. When using this attribute, the <xref:System.ServiceModel.Description.PrincipalPermissionMode> enumeration specifies the mode for performing authorization checks. When this mode is set to <xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom>, it enables the user to specify a custom <xref:System.Security.Principal.IPrincipal> class returned by the <xref:System.Threading.Thread.CurrentPrincipal%2A> property. This topic illustrates the scenario when <xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom> is used in combination with a custom authorization policy and a custom principal.  \n  \n For more information about using the <xref:System.Security.Permissions.PrincipalPermissionAttribute>, see [How to: Restrict Access with the PrincipalPermissionAttribute Class](../../../../docs/framework/wcf/how-to-restrict-access-with-the-principalpermissionattribute-class.md).  \n  \n## Example  \n [!code-csharp[PrincipalPermissionMode#8](../../../../samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]\n [!code-vb[PrincipalPermissionMode#8](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  \n  \n## Compiling the Code  \n References to the following namespaces are needed to compile the code:  \n  \n-   <xref:System>  \n  \n-   <xref:System.Collections.Generic>  \n  \n-   <xref:System.Security.Permissions>  \n  \n-   <xref:System.Security.Principal>  \n  \n-   <xref:System.Threading>  \n  \n-   <xref:System.ServiceModel>  \n  \n-   <xref:System.ServiceModel.Channels>  \n  \n-   <xref:System.ServiceModel.Description>  \n  \n-   <xref:System.IdentityModel.Claims>  \n  \n-   <xref:System.IdentityModel.Policy>  \n  \n## See also\n\n- <xref:System.ServiceModel.Description.PrincipalPermissionMode>\n- <xref:System.ServiceModel.Description.PrincipalPermissionMode>\n- <xref:System.Security.Permissions.PrincipalPermissionAttribute>\n- [How to: Use the ASP.NET Role Provider with a Service](../../../../docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md)\n- [How to: Restrict Access with the PrincipalPermissionAttribute Class](../../../../docs/framework/wcf/how-to-restrict-access-with-the-principalpermissionattribute-class.md)\n","nodes":[{"pos":[4,291],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create a Custom Principal Identity\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"IPrincipal\"\n  - \"IAuthorizationPolicy\"\n  - \"PrincipalPermissionMode\"\n  - \"PrincipalPermissionAttribute\"\nms.assetid: c4845fca-0ed9-4adf-bbdc-10812be69b61","nodes":[{"content":"How to: Create a Custom Principal Identity","nodes":[{"pos":[0,42],"content":"How to: Create a Custom Principal Identity","nodes":[{"content":"How to: Create a Custom Principal Identity","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[298,340],"content":"How to: Create a Custom Principal Identity","linkify":"How to: Create a Custom Principal Identity","nodes":[{"content":"How to: Create a Custom Principal Identity","pos":[0,42]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.PrincipalPermissionAttribute&gt;</ph> is a declarative means of controlling access to service methods.","pos":[341,473],"source":"The <xref:System.Security.Permissions.PrincipalPermissionAttribute> is a declarative means of controlling access to service methods."},{"content":"When using this attribute, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode&gt;</ph> enumeration specifies the mode for performing authorization checks.","pos":[474,635],"source":" When using this attribute, the <xref:System.ServiceModel.Description.PrincipalPermissionMode> enumeration specifies the mode for performing authorization checks."},{"content":"When this mode is set to <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom&gt;</ph>, it enables the user to specify a custom <ph id=\"ph2\">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph> class returned by the <ph id=\"ph3\">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property.","pos":[636,898],"source":" When this mode is set to <xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom>, it enables the user to specify a custom <xref:System.Security.Principal.IPrincipal> class returned by the <xref:System.Threading.Thread.CurrentPrincipal%2A> property."},{"content":"This topic illustrates the scenario when <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom&gt;</ph> is used in combination with a custom authorization policy and a custom principal.","pos":[899,1091],"source":" This topic illustrates the scenario when <xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom> is used in combination with a custom authorization policy and a custom principal."},{"pos":[1098,1376],"content":"For more information about using the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.PrincipalPermissionAttribute&gt;</ph>, see <bpt id=\"p1\">[</bpt>How to: Restrict Access with the PrincipalPermissionAttribute Class<ept id=\"p1\">](../../../../docs/framework/wcf/how-to-restrict-access-with-the-principalpermissionattribute-class.md)</ept>.","source":"For more information about using the <xref:System.Security.Permissions.PrincipalPermissionAttribute>, see [How to: Restrict Access with the PrincipalPermissionAttribute Class](../../../../docs/framework/wcf/how-to-restrict-access-with-the-principalpermissionattribute-class.md)."},{"pos":[1385,1392],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1674,1692],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"References to the following namespaces are needed to compile the code:","pos":[1696,1766]},{"pos":[2177,2185],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2385,2541],"content":"<bpt id=\"p1\">[</bpt>How to: Use the ASP.NET Role Provider with a Service<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md)</ept>","source":"[How to: Use the ASP.NET Role Provider with a Service](../../../../docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md)"},{"pos":[2544,2715],"content":"<bpt id=\"p1\">[</bpt>How to: Restrict Access with the PrincipalPermissionAttribute Class<ept id=\"p1\">](../../../../docs/framework/wcf/how-to-restrict-access-with-the-principalpermissionattribute-class.md)</ept>","source":"[How to: Restrict Access with the PrincipalPermissionAttribute Class](../../../../docs/framework/wcf/how-to-restrict-access-with-the-principalpermissionattribute-class.md)"}]}