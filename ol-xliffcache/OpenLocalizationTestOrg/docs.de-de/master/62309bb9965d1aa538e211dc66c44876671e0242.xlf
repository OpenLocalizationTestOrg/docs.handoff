<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="mouse-events-in-windows-forms.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62309bb9965d1aa538e211dc66c44876671e0242</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\mouse-events-in-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77253b940835f9b7fa29a2f3cd27619e9e251f2f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">509834253dec475301529ac37050d49cca88a13f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Mouse Events in Windows Forms</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Mouse Events in Windows Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you handle mouse input, you usually want to know the location of the mouse pointer and the state of the mouse buttons.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic provides details on how to get this information from mouse events, and explains the order in which mouse click events are raised in Windows Forms controls.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For a list and description of all of the mouse events, see <bpt id="p1">[</bpt>How Mouse Input Works in Windows Forms<ept id="p1">](how-mouse-input-works-in-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>Event Handlers Overview (Windows Forms)<ept id="p1">](event-handlers-overview-windows-forms.md)</ept> and <bpt id="p2">[</bpt>Events Overview (Windows Forms)<ept id="p2">](events-overview-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Mouse Information</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs&gt;</ph> is sent to the handlers of mouse events related to clicking a mouse button and tracking mouse movements.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs&gt;</ph> provides information about the current state of the mouse, including the location of the mouse pointer in client coordinates, which mouse buttons are pressed, and whether the mouse wheel has scrolled.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Several mouse events, such as those that simply notify when the mouse pointer has entered or left the bounds of a control, send an <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> to the event handler with no further information.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you want to know the current state of the mouse buttons or the location of the mouse pointer, and you want to avoid handling a mouse event, you can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph> returns information about which mouse buttons are currently pressed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> returns the screen coordinates of the mouse pointer and is equivalent to the value returned by <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Position%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Converting Between Screen and Client Coordinates</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Because some mouse location information is in client coordinates and some is in screen coordinates, you may need to convert a point from one coordinate system to the other.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can do this easily by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph> methods available on the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Standard Click Event Behavior</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you want to handle mouse click events in the proper order, you need to know the order in which click events are raised in Windows Forms controls.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>All Windows Forms controls raise click events in the same order when a mouse button is pressed and released (regardless of which mouse button), except where noted in the following list for individual controls.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following list shows the order of events raised for a single mouse-button click:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Following is the order of events raised for a double mouse-button click:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>(This can vary, depending on whether the control in question has the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.StandardDoubleClick&gt;</ph> style bit set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information about how to set a <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, see the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.)</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For a code example that demonstrates the order of the mouse click events, see <bpt id="p1">[</bpt>How to: Handle User Input Events in Windows Forms Controls<ept id="p1">](how-to-handle-user-input-events-in-windows-forms-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Individual Controls</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following controls do not conform to the standard mouse click event behavior:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For the <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control, the event behavior detailed later occurs if the user clicks on the edit field, the button, or on an item within the list.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Left click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Right click: No click events raised</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Left double-click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>; <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Right double-click: No click events raised</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.CheckedListBox&gt;</ph> controls</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The event behavior detailed later occurs when the user clicks anywhere within these controls.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Left click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Right click: No click events raised</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Left double-click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Right double-click: No click events raised</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The event behavior detailed later occurs only when the user clicks on the items in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>No events are raised for clicks anywhere else on the control.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In addition to the events described later, there are the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeforeLabelEdit&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.AfterLabelEdit&gt;</ph> events, which may be of interest to you if you want to use validation with the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Left click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Right click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Left double-click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>; <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Right double-click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>; <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The event behavior detailed later occurs only when the user clicks on the items themselves or to the right of the items in the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>No events are raised for clicks anywhere else on the control.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In addition to those described later, there are the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.BeforeCheck&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeforeSelect&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.BeforeLabelEdit&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.TreeView.AfterSelect&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView.AfterCheck&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.TreeView.AfterLabelEdit&gt;</ph> events, which may be of interest to you if you want to use validation with the <ph id="ph7">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Left click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Right click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Left double-click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>; <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Right double-click: <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>; <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Painting Behavior of Toggle Controls</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Toggle controls, such as the controls deriving from the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph> class, have the following distinctive painting behavior in combination with mouse click events:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The user presses the mouse button.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The control paints in the pressed state.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The user releases the mouse button.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The control paints in the raised state.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the user moves the pointer out of the toggle control while the mouse button is down (such as moving the mouse off the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control while it is pressed), the toggle control will paint in the raised state and only the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> events will not occur in this situation.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mouse Input in a Windows Forms Application<ept id="p1">](mouse-input-in-a-windows-forms-application.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>