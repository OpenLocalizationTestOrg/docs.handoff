{"content":"---\ntitle: \"Cross-Table Queries (LINQ to DataSet) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 6819a16f-8656-41af-a54d-dfec0cb66366\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Cross-Table Queries (LINQ to DataSet)\nIn addition to querying a single table, you can also perform cross-table queries in [!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]. This is done by using a *join*. A join is the association of objects in one data source with objects that share a common attribute in another data source, such as a product or contact ID. In object-oriented programming, relationships between objects are relatively easy to navigate because each object has a member that references another object. In external database tables, however, navigating relationships is not as straightforward. Database tables do not contain built-in relationships. In these cases, the join operation can be used to match elements from each source. For example, given two tables that contain product information and sales information, you could use a join operation to match sales information and products for the same sales order.  \n  \n The [!INCLUDE[vbteclinqext](../../../../includes/vbteclinqext-md.md)] framework provides two join operators, <xref:System.Linq.Enumerable.Join%2A> and <xref:System.Linq.Enumerable.GroupJoin%2A>. These operators perform *equi-joins*: that is, joins that match two data sources only when their keys are equal. (By contrast, [!INCLUDE[tsql](../../../../includes/tsql-md.md)] supports join operators other than `equals`, such as the `less than` operator.)  \n  \n In relational database terms, <xref:System.Linq.Enumerable.Join%2A> implements an inner join. An inner join is a type of join in which only those objects that have a match in the opposite data set are returned.  \n  \n The <xref:System.Linq.Enumerable.GroupJoin%2A> operators have no direct equivalent in relational database terms; they implement a superset of inner joins and left outer joins. A left outer join is a join that returns each element of the first (left) collection, even if it has no correlated elements in the second collection.  \n  \n For more information about joins, see [Join Operations](http://msdn.microsoft.com/library/442d176d-028c-4beb-8d22-407d4ef89107).  \n  \n## Example  \n The following example performs a traditional join of the `SalesOrderHeader` and `SalesOrderDetail` tables from the AdventureWorks sample database to obtain online orders from the month of August.  \n  \n [!code-csharp[DP LINQ to DataSet Examples#Join](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#join)]\n [!code-vb[DP LINQ to DataSet Examples#Join](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#join)]  \n  \n## See Also  \n [Querying DataSets](../../../../docs/framework/data/adonet/querying-datasets-linq-to-dataset.md)   \n [Single-Table Queries](../../../../docs/framework/data/adonet/single-table-queries-linq-to-dataset.md)   \n [Querying Typed DataSets](../../../../docs/framework/data/adonet/querying-typed-datasets.md)   \n [Join Operations](http://msdn.microsoft.com/library/442d176d-028c-4beb-8d22-407d4ef89107)   \n [LINQ to DataSet Examples](../../../../docs/framework/data/adonet/linq-to-dataset-examples.md)","nodes":[{"pos":[4,368],"nodes":[{"content":"Cross-Table Queries (LINQ to DataSet) | Microsoft Docs","nodes":[{"pos":[0,54],"content":"Cross-Table Queries (LINQ to DataSet) | Microsoft Docs","nodes":[{"content":"Cross-Table Queries (LINQ to DataSet) | Microsoft Docs","pos":[0,54]}]}],"pos":[6,63],"yaml":true}],"content":"title: \"Cross-Table Queries (LINQ to DataSet) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 6819a16f-8656-41af-a54d-dfec0cb66366\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","yamlblock":true},{"pos":[375,412],"content":"Cross-Table Queries (LINQ to DataSet)","linkify":"Cross-Table Queries (LINQ to DataSet)","nodes":[{"content":"Cross-Table Queries (LINQ to DataSet)","pos":[0,37]}]},{"content":"In addition to querying a single table, you can also perform cross-table queries in <ph id=\"ph1\">[!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]</ph>.","pos":[413,563],"source":"In addition to querying a single table, you can also perform cross-table queries in [!INCLUDE[linq_dataset](../../../../includes/linq-dataset-md.md)]."},{"content":"This is done by using a <bpt id=\"p1\">*</bpt>join<ept id=\"p1\">*</ept>.","pos":[564,595],"source":" This is done by using a *join*."},{"content":"A join is the association of objects in one data source with objects that share a common attribute in another data source, such as a product or contact ID.","pos":[596,751]},{"content":"In object-oriented programming, relationships between objects are relatively easy to navigate because each object has a member that references another object.","pos":[752,910]},{"content":"In external database tables, however, navigating relationships is not as straightforward.","pos":[911,1000]},{"content":"Database tables do not contain built-in relationships.","pos":[1001,1055]},{"content":"In these cases, the join operation can be used to match elements from each source.","pos":[1056,1138]},{"content":"For example, given two tables that contain product information and sales information, you could use a join operation to match sales information and products for the same sales order.","pos":[1139,1321]},{"content":"The <ph id=\"ph1\">[!INCLUDE[vbteclinqext](../../../../includes/vbteclinqext-md.md)]</ph> framework provides two join operators, <ph id=\"ph2\">&lt;xref:System.Linq.Enumerable.Join%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Linq.Enumerable.GroupJoin%2A&gt;</ph>.","pos":[1328,1522],"source":"The [!INCLUDE[vbteclinqext](../../../../includes/vbteclinqext-md.md)] framework provides two join operators, <xref:System.Linq.Enumerable.Join%2A> and <xref:System.Linq.Enumerable.GroupJoin%2A>."},{"content":"These operators perform <bpt id=\"p1\">*</bpt>equi-joins<ept id=\"p1\">*</ept>: that is, joins that match two data sources only when their keys are equal.","pos":[1523,1635],"source":" These operators perform *equi-joins*: that is, joins that match two data sources only when their keys are equal."},{"content":"(By contrast, <ph id=\"ph1\">[!INCLUDE[tsql](../../../../includes/tsql-md.md)]</ph> supports join operators other than <ph id=\"ph2\">`equals`</ph>, such as the <ph id=\"ph3\">`less than`</ph> operator.)","pos":[1636,1779],"source":" (By contrast, [!INCLUDE[tsql](../../../../includes/tsql-md.md)] supports join operators other than `equals`, such as the `less than` operator.)"},{"content":"In relational database terms, <ph id=\"ph1\">&lt;xref:System.Linq.Enumerable.Join%2A&gt;</ph> implements an inner join.","pos":[1786,1879],"source":"In relational database terms, <xref:System.Linq.Enumerable.Join%2A> implements an inner join."},{"content":"An inner join is a type of join in which only those objects that have a match in the opposite data set are returned.","pos":[1880,1996]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Linq.Enumerable.GroupJoin%2A&gt;</ph> operators have no direct equivalent in relational database terms; they implement a superset of inner joins and left outer joins.","pos":[2003,2178],"source":"The <xref:System.Linq.Enumerable.GroupJoin%2A> operators have no direct equivalent in relational database terms; they implement a superset of inner joins and left outer joins."},{"content":"A left outer join is a join that returns each element of the first (left) collection, even if it has no correlated elements in the second collection.","pos":[2179,2328]},{"pos":[2335,2463],"content":"For more information about joins, see <bpt id=\"p1\">[</bpt>Join Operations<ept id=\"p1\">](http://msdn.microsoft.com/library/442d176d-028c-4beb-8d22-407d4ef89107)</ept>.","source":"For more information about joins, see [Join Operations](http://msdn.microsoft.com/library/442d176d-028c-4beb-8d22-407d4ef89107)."},{"pos":[2472,2479],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2483,2678],"content":"The following example performs a traditional join of the <ph id=\"ph1\">`SalesOrderHeader`</ph> and <ph id=\"ph2\">`SalesOrderDetail`</ph> tables from the AdventureWorks sample database to obtain online orders from the month of August.","source":"The following example performs a traditional join of the `SalesOrderHeader` and `SalesOrderDetail` tables from the AdventureWorks sample database to obtain online orders from the month of August."},{"pos":[2685,2992],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DP LINQ to DataSet Examples#Join<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#join)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>DP LINQ to DataSet Examples#Join<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#join)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[DP LINQ to DataSet Examples#Join](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#join)]\n [!code-vb[DP LINQ to DataSet Examples#Join](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#join)]"},{"pos":[3001,3009],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Querying DataSets<ept id=\"p1\">](../../../../docs/framework/data/adonet/querying-datasets-linq-to-dataset.md)</ept><ph id=\"ph1\"> </ph>","pos":[3013,3110],"source":"[Querying DataSets](../../../../docs/framework/data/adonet/querying-datasets-linq-to-dataset.md) "},{"content":"<bpt id=\"p1\">[</bpt>Single-Table Queries<ept id=\"p1\">](../../../../docs/framework/data/adonet/single-table-queries-linq-to-dataset.md)</ept><ph id=\"ph1\"> </ph>","pos":[3114,3217],"source":"[Single-Table Queries](../../../../docs/framework/data/adonet/single-table-queries-linq-to-dataset.md) "},{"content":"<bpt id=\"p1\">[</bpt>Querying Typed DataSets<ept id=\"p1\">](../../../../docs/framework/data/adonet/querying-typed-datasets.md)</ept><ph id=\"ph1\"> </ph>","pos":[3221,3314],"source":"[Querying Typed DataSets](../../../../docs/framework/data/adonet/querying-typed-datasets.md) "},{"content":"<bpt id=\"p1\">[</bpt>Join Operations<ept id=\"p1\">](http://msdn.microsoft.com/library/442d176d-028c-4beb-8d22-407d4ef89107)</ept><ph id=\"ph1\"> </ph>","pos":[3318,3408],"source":"[Join Operations](http://msdn.microsoft.com/library/442d176d-028c-4beb-8d22-407d4ef89107) "},{"content":"<bpt id=\"p1\">[</bpt>LINQ to DataSet Examples<ept id=\"p1\">](../../../../docs/framework/data/adonet/linq-to-dataset-examples.md)</ept>","pos":[3412,3506],"source":"[LINQ to DataSet Examples](../../../../docs/framework/data/adonet/linq-to-dataset-examples.md)"}]}