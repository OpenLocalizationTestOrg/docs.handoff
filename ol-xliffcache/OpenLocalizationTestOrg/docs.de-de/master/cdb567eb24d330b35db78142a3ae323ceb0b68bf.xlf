<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-implement-user-defined-conversions-between-structs.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdb567eb24d330b35db78142a3ae323ceb0b68bf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\statements-expressions-operators\how-to-implement-user-defined-conversions-between-structs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b4c916a8790169fe5a0a34d93393c9b0f4442b8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2359122b3f3631f0cfeafa29dec4a25652de9af</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Implement User-Defined Conversions Between Structs (C# Programming Guide) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Implement User-Defined Conversions Between Structs (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example defines two structs, <ph id="ph1">`RomanNumeral`</ph> and <ph id="ph2">`BinaryNumeral`</ph>, and demonstrates conversions between them.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Robust Programming</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the previous example, the statement:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>performs a conversion from a <ph id="ph1">`RomanNumeral`</ph> to a <ph id="ph2">`BinaryNumeral`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Because there is no direct conversion from <ph id="ph1">`RomanNumeral`</ph> to <ph id="ph2">`BinaryNumeral`</ph>, a cast is used to convert from a <ph id="ph3">`RomanNumeral`</ph> to an <ph id="ph4">`int`</ph>, and another cast to convert from an <ph id="ph5">`int`</ph> to a <ph id="ph6">`BinaryNumeral`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Also the statement</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>performs a conversion from a <ph id="ph1">`BinaryNumeral`</ph> to a <ph id="ph2">`RomanNumeral`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`RomanNumeral`</ph> defines an implicit conversion from <ph id="ph2">`BinaryNumeral`</ph>, no cast is required.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../../../csharp/language-reference/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Conversion Operators<ept id="p1">](../../../csharp/programming-guide/statements-expressions-operators/conversion-operators.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>