{"content":"---\ntitle: \"FunctionEnter2 Function\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"FunctionEnter2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"FunctionEnter2\"\nhelpviewer_keywords: \n  - \"FunctionEnter2 function [.NET Framework profiling]\"\nms.assetid: ce7a21f9-0ca3-4b92-bc4b-bb803cae3f51\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# FunctionEnter2 Function\nNotifies the profiler that control is being passed to a function and provides information about the stack frame and function arguments. This function supersedes the [FunctionEnter](../../../../docs/framework/unmanaged-api/profiling/functionenter-function.md) function.  \n  \n## Syntax  \n  \n```  \nvoid __stdcall FunctionEnter2 (  \n    [in]  FunctionID                       funcId,   \n    [in]  UINT_PTR                         clientData,   \n    [in]  COR_PRF_FRAME_INFO               func,   \n    [in]  COR_PRF_FUNCTION_ARGUMENT_INFO  *argumentInfo  \n);  \n```  \n  \n## Parameters  \n `funcId`  \n [in] The identifier of the function to which control is passed.  \n  \n `clientData`  \n [in] The remapped function identifier, which the profiler previously specified by using the [FunctionIDMapper](../../../../docs/framework/unmanaged-api/profiling/functionidmapper-function.md) function.  \n  \n `func`  \n [in] A `COR_PRF_FRAME_INFO` value that points to information about the stack frame.  \n  \n The profiler should treat this as an opaque handle that can be passed back to the execution engine in the [ICorProfilerInfo2::GetFunctionInfo2](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getfunctioninfo2-method.md) method.  \n  \n `argumentInfo`  \n [in] A pointer to a [COR_PRF_FUNCTION_ARGUMENT_INFO](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-info-structure.md) structure that specifies the locations in memory of the function's arguments.  \n  \n In order to access argument information, the `COR_PRF_ENABLE_FUNCTION_ARGS` flag must be set. The profiler can use the [ICorProfilerInfo::SetEventMask](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md) method to set the event flags.  \n  \n## Remarks  \n The values of the `func` and `argumentInfo` parameters are not valid after the `FunctionEnter2` function returns because the values may change or be destroyed.  \n  \n The `FunctionEnter2` function is a callback; you must implement it. The implementation must use the `__declspec`(`naked`) storage-class attribute.  \n  \n The execution engine does not save any registers before calling this function.  \n  \n-   On entry, you must save all registers that you use, including those in the floating-point unit (FPU).  \n  \n-   On exit, you must restore the stack by popping off all the parameters that were pushed by its caller.  \n  \n The implementation of `FunctionEnter2` should not block because it will delay garbage collection. The implementation should not attempt a garbage collection because the stack may not be in a garbage collection-friendly state. If a garbage collection is attempted, the runtime will block until `FunctionEnter2` returns.  \n  \n Also, the `FunctionEnter2` function must not call into managed code or in any way cause a managed memory allocation.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [FunctionLeave2 Function](../../../../docs/framework/unmanaged-api/profiling/functionleave2-function.md)\n- [FunctionTailcall2 Function](../../../../docs/framework/unmanaged-api/profiling/functiontailcall2-function.md)\n- [SetEnterLeaveFunctionHooks2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-setenterleavefunctionhooks2-method.md)\n- [Profiling Global Static Functions](../../../../docs/framework/unmanaged-api/profiling/profiling-global-static-functions.md)\n","nodes":[{"pos":[4,371],"embed":true,"restype":"x-metadata","content":"title: \"FunctionEnter2 Function\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"FunctionEnter2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"FunctionEnter2\"\nhelpviewer_keywords: \n  - \"FunctionEnter2 function [.NET Framework profiling]\"\nms.assetid: ce7a21f9-0ca3-4b92-bc4b-bb803cae3f51\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"FunctionEnter2 Function","nodes":[{"pos":[0,23],"content":"FunctionEnter2 Function","nodes":[{"content":"FunctionEnter2 Function","pos":[0,23]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[378,401],"content":"FunctionEnter2 Function","linkify":"FunctionEnter2 Function","nodes":[{"content":"FunctionEnter2 Function","pos":[0,23]}]},{"content":"Notifies the profiler that control is being passed to a function and provides information about the stack frame and function arguments.","pos":[402,537]},{"content":"This function supersedes the <bpt id=\"p1\">[</bpt>FunctionEnter<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionenter-function.md)</ept> function.","pos":[538,670],"source":" This function supersedes the [FunctionEnter](../../../../docs/framework/unmanaged-api/profiling/functionenter-function.md) function."},{"pos":[679,685],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[970,980],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The identifier of the function to which control is passed.","pos":[996,1059]},{"content":"[in] The remapped function identifier, which the profiler previously specified by using the <bpt id=\"p1\">[</bpt>FunctionIDMapper<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionidmapper-function.md)</ept> function.","pos":[1082,1283],"source":"[in] The remapped function identifier, which the profiler previously specified by using the [FunctionIDMapper](../../../../docs/framework/unmanaged-api/profiling/functionidmapper-function.md) function."},{"content":"[in] A <ph id=\"ph1\">`COR_PRF_FRAME_INFO`</ph> value that points to information about the stack frame.","pos":[1300,1383],"source":"[in] A `COR_PRF_FRAME_INFO` value that points to information about the stack frame."},{"pos":[1390,1638],"content":"The profiler should treat this as an opaque handle that can be passed back to the execution engine in the <bpt id=\"p1\">[</bpt>ICorProfilerInfo2::GetFunctionInfo2<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getfunctioninfo2-method.md)</ept> method.","source":"The profiler should treat this as an opaque handle that can be passed back to the execution engine in the [ICorProfilerInfo2::GetFunctionInfo2](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getfunctioninfo2-method.md) method."},{"content":"[in] A pointer to a <bpt id=\"p1\">[</bpt>COR_PRF_FUNCTION_ARGUMENT_INFO<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-info-structure.md)</ept> structure that specifies the locations in memory of the function's arguments.","pos":[1663,1889],"source":"[in] A pointer to a [COR_PRF_FUNCTION_ARGUMENT_INFO](../../../../docs/framework/unmanaged-api/profiling/cor-prf-function-argument-info-structure.md) structure that specifies the locations in memory of the function's arguments."},{"content":"In order to access argument information, the <ph id=\"ph1\">`COR_PRF_ENABLE_FUNCTION_ARGS`</ph> flag must be set.","pos":[1896,1989],"source":"In order to access argument information, the `COR_PRF_ENABLE_FUNCTION_ARGS` flag must be set."},{"content":"The profiler can use the <bpt id=\"p1\">[</bpt>ICorProfilerInfo::SetEventMask<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md)</ept> method to set the event flags.","pos":[1990,2170],"source":" The profiler can use the [ICorProfilerInfo::SetEventMask](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md) method to set the event flags."},{"pos":[2179,2186],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2190,2349],"content":"The values of the <ph id=\"ph1\">`func`</ph> and <ph id=\"ph2\">`argumentInfo`</ph> parameters are not valid after the <ph id=\"ph3\">`FunctionEnter2`</ph> function returns because the values may change or be destroyed.","source":"The values of the `func` and `argumentInfo` parameters are not valid after the `FunctionEnter2` function returns because the values may change or be destroyed."},{"content":"The <ph id=\"ph1\">`FunctionEnter2`</ph> function is a callback; you must implement it.","pos":[2356,2423],"source":"The `FunctionEnter2` function is a callback; you must implement it."},{"content":"The implementation must use the <ph id=\"ph1\">`__declspec`</ph>(<ph id=\"ph2\">`naked`</ph>) storage-class attribute.","pos":[2424,2502],"source":" The implementation must use the `__declspec`(`naked`) storage-class attribute."},{"content":"The execution engine does not save any registers before calling this function.","pos":[2509,2587]},{"content":"On entry, you must save all registers that you use, including those in the floating-point unit (FPU).","pos":[2597,2698]},{"content":"On exit, you must restore the stack by popping off all the parameters that were pushed by its caller.","pos":[2708,2809]},{"content":"The implementation of <ph id=\"ph1\">`FunctionEnter2`</ph> should not block because it will delay garbage collection.","pos":[2816,2913],"source":"The implementation of `FunctionEnter2` should not block because it will delay garbage collection."},{"content":"The implementation should not attempt a garbage collection because the stack may not be in a garbage collection-friendly state.","pos":[2914,3041]},{"content":"If a garbage collection is attempted, the runtime will block until <ph id=\"ph1\">`FunctionEnter2`</ph> returns.","pos":[3042,3134],"source":" If a garbage collection is attempted, the runtime will block until `FunctionEnter2` returns."},{"pos":[3141,3257],"content":"Also, the <ph id=\"ph1\">`FunctionEnter2`</ph> function must not call into managed code or in any way cause a managed memory allocation.","source":"Also, the `FunctionEnter2` function must not call into managed code or in any way cause a managed memory allocation."},{"pos":[3266,3278],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3282,3386],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3393,3416],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl","source":"**Header:** CorProf.idl"},{"pos":[3423,3448],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3455,3563],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[3572,3580],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3584,3688],"content":"<bpt id=\"p1\">[</bpt>FunctionLeave2 Function<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functionleave2-function.md)</ept>","source":"[FunctionLeave2 Function](../../../../docs/framework/unmanaged-api/profiling/functionleave2-function.md)"},{"pos":[3691,3801],"content":"<bpt id=\"p1\">[</bpt>FunctionTailcall2 Function<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/functiontailcall2-function.md)</ept>","source":"[FunctionTailcall2 Function](../../../../docs/framework/unmanaged-api/profiling/functiontailcall2-function.md)"},{"pos":[3804,3948],"content":"<bpt id=\"p1\">[</bpt>SetEnterLeaveFunctionHooks2 Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-setenterleavefunctionhooks2-method.md)</ept>","source":"[SetEnterLeaveFunctionHooks2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-setenterleavefunctionhooks2-method.md)"},{"pos":[3951,4075],"content":"<bpt id=\"p1\">[</bpt>Profiling Global Static Functions<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-global-static-functions.md)</ept>","source":"[Profiling Global Static Functions](../../../../docs/framework/unmanaged-api/profiling/profiling-global-static-functions.md)"}]}