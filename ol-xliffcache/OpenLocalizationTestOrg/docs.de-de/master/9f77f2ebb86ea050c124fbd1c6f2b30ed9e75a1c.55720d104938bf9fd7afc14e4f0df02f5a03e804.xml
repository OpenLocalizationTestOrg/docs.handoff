{"content":"---\ntitle: \"Entity Data Model: Inheritance\"\nms.date: \"03/30/2017\"\nms.assetid: 42c7ef24-710a-4af9-8493-cd41c399ecb0\n---\n# Entity Data Model: Inheritance\nThe Entity Data Model (EDM) supports inheritance for [entity types](../../../../docs/framework/data/adonet/entity-type.md). Inheritance in the EDM is similar to inheritance for classes in object-oriented programming languages. Like with classes in object-oriented languages, in a conceptual model you can define an entity type (a *derived type*) that inherits from another entity type (the *base type*). However, unlike classes in object-oriented programming, in a conceptual model the derived type always inherits all the [properties](../../../../docs/framework/data/adonet/property.md) and [navigation properties](../../../../docs/framework/data/adonet/navigation-property.md) of the base type. You cannot override inherited properties in a derived type.  \n  \n In a conceptual model you can build inheritance hierarchies in which a derived type inherits from another derived type. The type at the top of the hierarchy (the one type in the hierarchy that is not a derived type) is called the *root type*. In an inheritance hierarchy, the [entity key](../../../../docs/framework/data/adonet/entity-key.md) must be defined on the root type.  \n  \n You cannot build inheritance hierarchies in which a derived type inherits from more than one type. For example, in a conceptual model with a `Book` entity type, you could define derived types `FictionBook` and `NonFictionBook` that each inherit from `Book`. However, you could not then define a type that inherits from both the `FictionBook` and `NonFictionBook` types.  \n  \n## Example  \n\nThe following diagram shows a conceptual model with four entity types: `Book`, `FictionBook`, `Publisher`, and `Author`. The `FictionBook` entity type is a derived type, inheriting from the `Book` entity type. The `FictionBook` type inherits the `ISBN (Key)`, `Title`, and `Revision` properties, and defines an additional property called `Genre`.  \n  \n ![Diagram that shows a conceptual model with four entity types.](./media/entity-data-model-inheritance/entity-type-inheritance.gif)  \n  \n The [ADO.NET Entity Framework](../../../../docs/framework/data/adonet/ef/index.md) uses a domain-specific language (DSL) called conceptual schema definition language ([CSDL](../../../../docs/framework/data/adonet/ef/language-reference/csdl-specification.md)) to define conceptual models. The following CSDL defines an entity type, `FictionBook`, that inherits from the `Book` type (as in the diagram above):  \n  \n [!code-xml[EDM_Example_Model#DerivedType](../../../../samples/snippets/xml/VS_Snippets_Data/edm_example_model/xml/books5.edmx#derivedtype)]  \n  \n## See also\n\n- [Entity Data Model Key Concepts](../../../../docs/framework/data/adonet/entity-data-model-key-concepts.md)\n- [Entity Data Model](../../../../docs/framework/data/adonet/entity-data-model.md)\n","nodes":[{"pos":[4,114],"embed":true,"restype":"x-metadata","content":"title: \"Entity Data Model: Inheritance\"\nms.date: \"03/30/2017\"\nms.assetid: 42c7ef24-710a-4af9-8493-cd41c399ecb0","nodes":[{"content":"Entity Data Model: Inheritance","nodes":[{"pos":[0,30],"content":"Entity Data Model: Inheritance","nodes":[{"content":"Entity Data Model: Inheritance","pos":[0,30]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[121,151],"content":"Entity Data Model: Inheritance","linkify":"Entity Data Model: Inheritance","nodes":[{"content":"Entity Data Model: Inheritance","pos":[0,30]}]},{"content":"The Entity Data Model (EDM) supports inheritance for <bpt id=\"p1\">[</bpt>entity types<ept id=\"p1\">](../../../../docs/framework/data/adonet/entity-type.md)</ept>.","pos":[152,275],"source":"The Entity Data Model (EDM) supports inheritance for [entity types](../../../../docs/framework/data/adonet/entity-type.md)."},{"content":"Inheritance in the EDM is similar to inheritance for classes in object-oriented programming languages.","pos":[276,378]},{"content":"Like with classes in object-oriented languages, in a conceptual model you can define an entity type (a <bpt id=\"p1\">*</bpt>derived type<ept id=\"p1\">*</ept>) that inherits from another entity type (the <bpt id=\"p2\">*</bpt>base type<ept id=\"p2\">*</ept>).","pos":[379,555],"source":" Like with classes in object-oriented languages, in a conceptual model you can define an entity type (a *derived type*) that inherits from another entity type (the *base type*)."},{"content":"However, unlike classes in object-oriented programming, in a conceptual model the derived type always inherits all the <bpt id=\"p1\">[</bpt>properties<ept id=\"p1\">](../../../../docs/framework/data/adonet/property.md)</ept> and <bpt id=\"p2\">[</bpt>navigation properties<ept id=\"p2\">](../../../../docs/framework/data/adonet/navigation-property.md)</ept> of the base type.","pos":[556,848],"source":" However, unlike classes in object-oriented programming, in a conceptual model the derived type always inherits all the [properties](../../../../docs/framework/data/adonet/property.md) and [navigation properties](../../../../docs/framework/data/adonet/navigation-property.md) of the base type."},{"content":"You cannot override inherited properties in a derived type.","pos":[849,908]},{"content":"In a conceptual model you can build inheritance hierarchies in which a derived type inherits from another derived type.","pos":[915,1034]},{"content":"The type at the top of the hierarchy (the one type in the hierarchy that is not a derived type) is called the <bpt id=\"p1\">*</bpt>root type<ept id=\"p1\">*</ept>.","pos":[1035,1157],"source":" The type at the top of the hierarchy (the one type in the hierarchy that is not a derived type) is called the *root type*."},{"content":"In an inheritance hierarchy, the <bpt id=\"p1\">[</bpt>entity key<ept id=\"p1\">](../../../../docs/framework/data/adonet/entity-key.md)</ept> must be defined on the root type.","pos":[1158,1291],"source":" In an inheritance hierarchy, the [entity key](../../../../docs/framework/data/adonet/entity-key.md) must be defined on the root type."},{"content":"You cannot build inheritance hierarchies in which a derived type inherits from more than one type.","pos":[1298,1396]},{"content":"For example, in a conceptual model with a <ph id=\"ph1\">`Book`</ph> entity type, you could define derived types <ph id=\"ph2\">`FictionBook`</ph> and <ph id=\"ph3\">`NonFictionBook`</ph> that each inherit from <ph id=\"ph4\">`Book`</ph>.","pos":[1397,1555],"source":" For example, in a conceptual model with a `Book` entity type, you could define derived types `FictionBook` and `NonFictionBook` that each inherit from `Book`."},{"content":"However, you could not then define a type that inherits from both the <ph id=\"ph1\">`FictionBook`</ph> and <ph id=\"ph2\">`NonFictionBook`</ph> types.","pos":[1556,1667],"source":" However, you could not then define a type that inherits from both the `FictionBook` and `NonFictionBook` types."},{"pos":[1676,1683],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following diagram shows a conceptual model with four entity types: <ph id=\"ph1\">`Book`</ph>, <ph id=\"ph2\">`FictionBook`</ph>, <ph id=\"ph3\">`Publisher`</ph>, and <ph id=\"ph4\">`Author`</ph>.","pos":[1687,1807],"source":"The following diagram shows a conceptual model with four entity types: `Book`, `FictionBook`, `Publisher`, and `Author`."},{"content":"The <ph id=\"ph1\">`FictionBook`</ph> entity type is a derived type, inheriting from the <ph id=\"ph2\">`Book`</ph> entity type.","pos":[1808,1896],"source":" The `FictionBook` entity type is a derived type, inheriting from the `Book` entity type."},{"content":"The <ph id=\"ph1\">`FictionBook`</ph> type inherits the <ph id=\"ph2\">`ISBN (Key)`</ph>, <ph id=\"ph3\">`Title`</ph>, and <ph id=\"ph4\">`Revision`</ph> properties, and defines an additional property called <ph id=\"ph5\">`Genre`</ph>.","pos":[1897,2033],"source":" The `FictionBook` type inherits the `ISBN (Key)`, `Title`, and `Revision` properties, and defines an additional property called `Genre`."},{"content":"Diagram that shows a conceptual model with four entity types.","pos":[2042,2103]},{"content":"The <bpt id=\"p1\">[</bpt>ADO.NET Entity Framework<ept id=\"p1\">](../../../../docs/framework/data/adonet/ef/index.md)</ept> uses a domain-specific language (DSL) called conceptual schema definition language (<bpt id=\"p2\">[</bpt>CSDL<ept id=\"p2\">](../../../../docs/framework/data/adonet/ef/language-reference/csdl-specification.md)</ept>) to define conceptual models.","pos":[2178,2465],"source":"The [ADO.NET Entity Framework](../../../../docs/framework/data/adonet/ef/index.md) uses a domain-specific language (DSL) called conceptual schema definition language ([CSDL](../../../../docs/framework/data/adonet/ef/language-reference/csdl-specification.md)) to define conceptual models."},{"content":"The following CSDL defines an entity type, <ph id=\"ph1\">`FictionBook`</ph>, that inherits from the <ph id=\"ph2\">`Book`</ph> type (as in the diagram above):","pos":[2466,2585],"source":" The following CSDL defines an entity type, `FictionBook`, that inherits from the `Book` type (as in the diagram above):"},{"pos":[2740,2748],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2752,2858],"content":"<bpt id=\"p1\">[</bpt>Entity Data Model Key Concepts<ept id=\"p1\">](../../../../docs/framework/data/adonet/entity-data-model-key-concepts.md)</ept>","source":"[Entity Data Model Key Concepts](../../../../docs/framework/data/adonet/entity-data-model-key-concepts.md)"},{"pos":[2861,2941],"content":"<bpt id=\"p1\">[</bpt>Entity Data Model<ept id=\"p1\">](../../../../docs/framework/data/adonet/entity-data-model.md)</ept>","source":"[Entity Data Model](../../../../docs/framework/data/adonet/entity-data-model.md)"}]}