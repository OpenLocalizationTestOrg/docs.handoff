{"content":"---\ntitle: \"SetManifestFile Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink3.SetManifestFile\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"SetManifestFile\"\nhelpviewer_keywords: \n  - \"SetManifestFile method\"\nms.assetid: 1b33de4c-19cb-4a36-a93f-8675b2a36d58\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# SetManifestFile Method\nEnables you to specify or reset the manifest file that the linker uses when it creates the assembly.  \n  \n## Syntax  \n  \n```  \nHRESULT SetManifestFile(  \n    LPCWSTR pszFile  \n) PURE;  \n```  \n  \n## Parameters  \n `pszFile`  \n  \n The name of the manifest file whose contents are put into the Win32 resources blob.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Remarks  \n Call this before asking for the Win32ResBlob. The value of the `pszFile` parameter is the name of the manifest file whose contents are read and put in the Win32 resources with ID of RT_MANIFEST. When called by using a parameter of NULL, any previously read manifest is cleared. This enables one to reset the state of the linker to that of initialization time.  \n  \n## Requirements  \n Requires aLink.h  \n  \n## See also\n\n- [IALink3 Interface](../../../../docs/framework/unmanaged-api/alink/ialink3-interface.md)\n- [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)\n- [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)\n- [Al.exe (Assembly Linker)](../../../../docs/framework/tools/al-exe-assembly-linker.md)\n","nodes":[{"pos":[4,349],"embed":true,"restype":"x-metadata","content":"title: \"SetManifestFile Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink3.SetManifestFile\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"SetManifestFile\"\nhelpviewer_keywords: \n  - \"SetManifestFile method\"\nms.assetid: 1b33de4c-19cb-4a36-a93f-8675b2a36d58\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"SetManifestFile Method","nodes":[{"pos":[0,22],"content":"SetManifestFile Method","nodes":[{"content":"SetManifestFile Method","pos":[0,22]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[356,378],"content":"SetManifestFile Method","linkify":"SetManifestFile Method","nodes":[{"content":"SetManifestFile Method","pos":[0,22]}]},{"content":"Enables you to specify or reset the manifest file that the linker uses when it creates the assembly.","pos":[379,479]},{"pos":[488,494],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[577,587],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"The name of the manifest file whose contents are put into the Win32 resources blob.","pos":[607,690]},{"pos":[699,711],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[715,751]},{"pos":[760,767],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call this before asking for the Win32ResBlob.","pos":[771,816]},{"content":"The value of the <ph id=\"ph1\">`pszFile`</ph> parameter is the name of the manifest file whose contents are read and put in the Win32 resources with ID of RT_MANIFEST.","pos":[817,965],"source":" The value of the `pszFile` parameter is the name of the manifest file whose contents are read and put in the Win32 resources with ID of RT_MANIFEST."},{"content":"When called by using a parameter of NULL, any previously read manifest is cleared.","pos":[966,1048]},{"content":"This enables one to reset the state of the linker to that of initialization time.","pos":[1049,1130]},{"pos":[1139,1151],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires aLink.h","pos":[1155,1171]},{"pos":[1180,1188],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1192,1280],"content":"<bpt id=\"p1\">[</bpt>IALink3 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink3-interface.md)</ept>","source":"[IALink3 Interface](../../../../docs/framework/unmanaged-api/alink/ialink3-interface.md)"},{"pos":[1283,1351],"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"},{"pos":[1354,1440],"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept>","source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)"},{"pos":[1443,1529],"content":"<bpt id=\"p1\">[</bpt>Al.exe (Assembly Linker)<ept id=\"p1\">](../../../../docs/framework/tools/al-exe-assembly-linker.md)</ept>","source":"[Al.exe (Assembly Linker)](../../../../docs/framework/tools/al-exe-assembly-linker.md)"}]}