{"content":"---\ntitle: \"Anonymous type property &#39;&lt;propertyname&gt;&#39; cannot be used in the definition of a lambda expression within the same initialization list | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc36549\"\n  - \"bc36549\"\nhelpviewer_keywords: \n  - \"BC36549\"\nms.assetid: 6d04692a-957a-41ce-a19c-fcb06a186d1a\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Anonymous type property &#39;&lt;propertyname&gt;&#39; cannot be used in the definition of a lambda expression within the same initialization list\nProperties defined in the initialization list of an anonymous type cannot be part of a lambda expression definition in the same list. For example, in the following code, property `Num` cannot be included in the definition of `LambdaFun`.  \n  \n```vb  \n' Not valid.  \n'Dim anon = New With {.Num = 4, .LambdaFun = Function() .Num > 0}  \n```  \n  \n **Error ID:** BC36549  \n\n## To correct this error  \n  \n1.  Consider splitting the anonymous type into two parts:  \n  \n```vb  \nDim anon1 = New With {.Num = 4}  \nDim anon2 = New With {.LambdaFun = Function() anon1.Num > 0}  \n' - or -  \nDim anon3 = New With {.lambdaFun = Function(n As Integer) n > 0}  \nConsole.WriteLine((anon2.LambdaFun)())  \nConsole.WriteLine(anon3.lambdaFun(anon1.Num))  \nanon1.Num = -5  \nConsole.WriteLine((anon2.LambdaFun)())  \nConsole.WriteLine(anon3.lambdaFun(anon1.Num))  \n```  \n  \nNote that if you declare `anon1.Num` as a `Key` property, its value cannot be changed.  \n  \n2.  An alternative is to use a regular function statement to access the anonymous type property:  \n  \n```vb  \nFunction testNum(ByVal n As Integer) As Boolean  \n    Return n > 0  \nEnd Function  \nConsole.WriteLine(testNum(anon1.Num))  \n```  \n  \n3.  Similarly, you can use a lambda function that is defined outside the anonymous type:  \n  \n```vb  \nDim lambdaFun1 = Function() anon1.Num > 0  \nDim lambdaFun2 = Function(n As Integer) n > 0  \n```  \n  \n## See Also  \n [Lambda Expressions](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)   \n [Anonymous Types](../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)","nodes":[{"pos":[4,684],"nodes":[{"content":"Anonymous type property &#39;&lt;propertyname&gt;&#39; cannot be used in the definition of a lambda expression within the same initialization list | Microsoft Docs","nodes":[{"pos":[0,163],"content":"Anonymous type property &#39;&lt;propertyname&gt;&#39; cannot be used in the definition of a lambda expression within the same initialization list | Microsoft Docs","nodes":[{"content":"Anonymous type property &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>propertyname<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; cannot be used in the definition of a lambda expression within the same initialization list | Microsoft Docs","pos":[0,163],"source":"Anonymous type property &#39;&lt;propertyname&gt;&#39; cannot be used in the definition of a lambda expression within the same initialization list | Microsoft Docs"}]}],"pos":[6,172],"yaml":true}],"content":"title: \"Anonymous type property &#39;&lt;propertyname&gt;&#39; cannot be used in the definition of a lambda expression within the same initialization list | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc36549\"\n  - \"bc36549\"\nhelpviewer_keywords: \n  - \"BC36549\"\nms.assetid: 6d04692a-957a-41ce-a19c-fcb06a186d1a\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","yamlblock":true},{"pos":[691,837],"content":"Anonymous type property &#39;&lt;propertyname&gt;&#39; cannot be used in the definition of a lambda expression within the same initialization list","linkify":"Anonymous type property &#39;&lt;propertyname&gt;&#39; cannot be used in the definition of a lambda expression within the same initialization list","nodes":[{"content":"Anonymous type property &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>propertyname<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; cannot be used in the definition of a lambda expression within the same initialization list","pos":[0,146],"source":"Anonymous type property &#39;&lt;propertyname&gt;&#39; cannot be used in the definition of a lambda expression within the same initialization list"}]},{"content":"Properties defined in the initialization list of an anonymous type cannot be part of a lambda expression definition in the same list.","pos":[838,971]},{"content":"For example, in the following code, property <ph id=\"ph1\">`Num`</ph> cannot be included in the definition of <ph id=\"ph2\">`LambdaFun`</ph>.","pos":[972,1075],"source":" For example, in the following code, property `Num` cannot be included in the definition of `LambdaFun`."},{"pos":[1182,1203],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36549","source":"**Error ID:** BC36549"},{"pos":[1210,1231],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Consider splitting the anonymous type into two parts:","pos":[1241,1294]},{"pos":[1687,1773],"content":"Note that if you declare <ph id=\"ph1\">`anon1.Num`</ph> as a <ph id=\"ph2\">`Key`</ph> property, its value cannot be changed.","source":"Note that if you declare `anon1.Num` as a `Key` property, its value cannot be changed."},{"content":"An alternative is to use a regular function statement to access the anonymous type property:","pos":[1783,1875]},{"content":"Similarly, you can use a lambda function that is defined outside the anonymous type:","pos":[2026,2110]},{"pos":[2228,2236],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Lambda Expressions<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept><ph id=\"ph1\"> </ph>","pos":[2240,2350],"source":"[Lambda Expressions](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md) "},{"content":"<bpt id=\"p1\">[</bpt>Anonymous Types<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept>","pos":[2354,2466],"source":"[Anonymous Types](../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)"}]}