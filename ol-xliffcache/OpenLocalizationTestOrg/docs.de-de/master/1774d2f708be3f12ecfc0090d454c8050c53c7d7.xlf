<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1774d2f708be3f12ecfc0090d454c8050c53c7d7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\data-display-modes-in-the-windows-forms-datagridview-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4fa2a183ecfd15d718ef983098bd8f51c19d120</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6642a19dfd3b7a5102461181f1160ea7051138e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Data Display Modes in the Windows Forms DataGridView Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Data Display Modes in the Windows Forms DataGridView Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control can display data in three distinct modes: bound, unbound, and virtual.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Choose the most suitable mode based on your requirements.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Unbound</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Unbound mode is suitable for displaying relatively small amounts of data that you manage programmatically.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You do not attach the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control directly to a data source as in bound mode.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Instead, you must populate the control yourself, typically by using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Add%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Unbound mode can be particularly useful for static, read-only data, or when you want to provide your own code that interacts with an external data store.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When you want your users to interact with an external data source, however, you will typically use bound mode.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For an example that uses a read-only unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, see <bpt id="p1">[</bpt>How to: Create an Unbound Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-create-an-unbound-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Bound</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Bound mode is suitable for managing data using automatic interaction with the data store.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can attach the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control directly to its data source by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When the control is data bound, data rows are pushed and pulled without the need of explicit management on your part.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, each column in your data source will cause a corresponding column to be created in the control.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you prefer to create your own columns, you can set this property to <ph id="ph1">`false`</ph> and use the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A&gt;</ph> property to bind each column when you configure it.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This is useful when you want to use a column type other than the types that are generated by default.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Column Types in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/column-types-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For an example that uses a bound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, see <bpt id="p1">[</bpt>Walkthrough: Validating Data in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also add unbound columns to a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control in bound mode.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is useful when you want to display a column of buttons or links that enable users to perform actions on specific rows.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It is also useful to display columns with values calculated from bound columns.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can populate the cell values for calculated columns in a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you are using a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> as the data source, however, you might want to use the <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=fullName&gt;</ph> property to create a calculated column instead.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control will treat calculated column just like any other column in the data source.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Sorting by unbound columns in bound mode is not supported.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you create an unbound column in bound mode that contains user-editable values, you must implement virtual mode to maintain these values when the control is sorted by a bound column.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Virtual</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>With virtual mode, you can implement your own data management operations.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This is necessary to maintain the values of unbound columns in bound mode when the control is sorted by bound columns.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The primary use of virtual mode, however, is to optimize performance when interacting with large amounts of data.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You attach the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to a cache that you manage, and your code controls when data rows are pushed and pulled.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To keep the memory footprint small, the cache should be similar in size to the number of rows currently displayed.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When the user scrolls new rows into view, your code requests new data from the cache and optionally flushes old data from memory.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you are implementing virtual mode, you will need to track when a new row is needed in the data model and when to rollback the addition of the new row.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The exact implementation of this functionality will depend on the implementation of the data model and the transaction semantics of the data model; whether commit scope is at the cell or row level.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about virtual mode, see <bpt id="p1">[</bpt>Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For an example that shows how to use virtual mode events, see <bpt id="p1">[</bpt>Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Displaying Data in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Column Types in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/column-types-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Creating an Unbound Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/walkthrough-creating-an-unbound-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Bind Data to the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-bind-data-to-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>