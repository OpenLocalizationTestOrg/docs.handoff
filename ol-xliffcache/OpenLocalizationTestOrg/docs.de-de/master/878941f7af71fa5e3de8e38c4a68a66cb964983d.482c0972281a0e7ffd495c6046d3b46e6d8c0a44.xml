{"content":"---\ntitle: \"ICorDebugType2 Interface\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorDebugType2\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugType2\"\nhelpviewer_keywords: \n  - \"ICorDebugType2 interface\"\nms.assetid: 376fb03f-f1ef-4107-baa4-4d9d55884862\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# ICorDebugType2 Interface\nExtends the ICorDebugType interface to retrieve the type identifier  of a base type or complex (user-defined) type.  \n  \n## Methods  \n  \n|Method||  \n|------------|-|  \n|[GetTypeID Method](../../../../docs/framework/unmanaged-api/debugging/icordebugtype2-gettypeid-method.md)|Gets a [COR_TYPEID](../../../../docs/framework/unmanaged-api/debugging/cor-typeid-structure.md) for this type.|  \n  \n## Remarks  \n This interface is a logical extension of the ICorDebugType interface.  \n  \n> [!NOTE]\n>  This interface does not support being called remotely, either cross-machine or cross-process.  \n  \n## Example  \n The following code fragment illustrates the use of the [ICorDebugType2::GetTypeID](../../../../docs/framework/unmanaged-api/debugging/icordebugtype2-gettypeid-method.md) method.  \n  \n```  \n// (error checking omitted for brevity)  \n// given an ICorDebugType *pType  \n  \nICorDebugType2 *pType2 = NULL;  \npType->QueryInterface(IID_ICorDebugType2, &pType);  \n  \nCOR_TYPEID id;  \npType2->GetTypeID(&id);  \n  \n// now we can use existing APIs to get information about this COR_TYPEID  \n```  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v462plus](../../../../includes/net-current-v462plus-md.md)]  \n  \n## See also\n\n- [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)\n","nodes":[{"pos":[4,349],"embed":true,"restype":"x-metadata","content":"title: \"ICorDebugType2 Interface\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorDebugType2\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugType2\"\nhelpviewer_keywords: \n  - \"ICorDebugType2 interface\"\nms.assetid: 376fb03f-f1ef-4107-baa4-4d9d55884862\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"ICorDebugType2 Interface","nodes":[{"pos":[0,24],"content":"ICorDebugType2 Interface","nodes":[{"content":"ICorDebugType2 Interface","pos":[0,24]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[356,380],"content":"ICorDebugType2 Interface","linkify":"ICorDebugType2 Interface","nodes":[{"content":"ICorDebugType2 Interface","pos":[0,24]}]},{"content":"Extends the ICorDebugType interface to retrieve the type identifier  of a base type or complex (user-defined) type.","pos":[381,496]},{"pos":[505,512],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[519,525]},{"pos":[550,655],"content":"<bpt id=\"p1\">[</bpt>GetTypeID Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugtype2-gettypeid-method.md)</ept>","source":"[GetTypeID Method](../../../../docs/framework/unmanaged-api/debugging/icordebugtype2-gettypeid-method.md)"},{"pos":[656,766],"content":"Gets a <bpt id=\"p1\">[</bpt>COR_TYPEID<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/cor-typeid-structure.md)</ept> for this type.","source":"Gets a [COR_TYPEID](../../../../docs/framework/unmanaged-api/debugging/cor-typeid-structure.md) for this type."},{"pos":[776,783],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This interface is a logical extension of the ICorDebugType interface.","pos":[787,856]},{"pos":[864,968],"content":"[!NOTE]\n This interface does not support being called remotely, either cross-machine or cross-process.","leadings":["","> "],"nodes":[{"content":"This interface does not support being called remotely, either cross-machine or cross-process.","pos":[9,102]}]},{"pos":[977,984],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[988,1165],"content":"The following code fragment illustrates the use of the <bpt id=\"p1\">[</bpt>ICorDebugType2::GetTypeID<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugtype2-gettypeid-method.md)</ept> method.","source":"The following code fragment illustrates the use of the [ICorDebugType2::GetTypeID](../../../../docs/framework/unmanaged-api/debugging/icordebugtype2-gettypeid-method.md) method."},{"pos":[1479,1491],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1495,1599],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[1606,1642],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[1649,1674],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[1681,1791],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v462plus](../../../../includes/net-current-v462plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v462plus](../../../../includes/net-current-v462plus-md.md)]"},{"pos":[1800,1808],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1812,1910],"content":"<bpt id=\"p1\">[</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept>","source":"[Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)"}]}