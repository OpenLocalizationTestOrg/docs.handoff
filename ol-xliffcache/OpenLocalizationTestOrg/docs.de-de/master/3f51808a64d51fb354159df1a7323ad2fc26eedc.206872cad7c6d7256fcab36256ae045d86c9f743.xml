{"content":"---\ntitle: \"XDocument Class Overview (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 45cb7e71-196a-47da-bfe9-7a5589db1eed\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# XDocument Class Overview (Visual Basic)\nThis topic introduces the <xref:System.Xml.Linq.XDocument> class.  \n  \n## Overview of the XDocument class  \n The <xref:System.Xml.Linq.XDocument> class contains the information necessary for a valid XML document. This includes an XML declaration, processing instructions, and comments.  \n  \n Note that you only have to create <xref:System.Xml.Linq.XDocument> objects if you require the specific functionality provided by the <xref:System.Xml.Linq.XDocument> class. In many circumstances, you can work directly with <xref:System.Xml.Linq.XElement>. Working directly with <xref:System.Xml.Linq.XElement> is a simpler programming model.  \n  \n <xref:System.Xml.Linq.XDocument> derives from <xref:System.Xml.Linq.XContainer>. Therefore, it can contain child nodes. However, <xref:System.Xml.Linq.XDocument> objects can have only one child <xref:System.Xml.Linq.XElement> node. This reflects the XML standard that there can be only one root element in an XML document.  \n  \n## Components of XDocument  \n An <xref:System.Xml.Linq.XDocument> can contain the following elements:  \n  \n-   One <xref:System.Xml.Linq.XDeclaration> object. <xref:System.Xml.Linq.XDeclaration> enables you to specify the pertinent parts of an XML declaration: the XML version, the encoding of the document, and whether the XML document is stand-alone.  \n  \n-   One <xref:System.Xml.Linq.XElement> object. This is the root node of the XML document.  \n  \n-   Any number of <xref:System.Xml.Linq.XProcessingInstruction> objects. A processing instruction communicates information to an application that processes the XML.  \n  \n-   Any number of <xref:System.Xml.Linq.XComment> objects. The comments will be siblings to the root element. The <xref:System.Xml.Linq.XComment> object cannot be the first argument in the list, because it is not valid for an XML document to start with a comment.  \n  \n-   One <xref:System.Xml.Linq.XDocumentType> for the DTD.  \n  \n When you serialize an <xref:System.Xml.Linq.XDocument>, even if `XDocument.Declaration` is `null`, the output will have an XML declaration if the writer has `Writer.Settings.OmitXmlDeclaration` set to `false` (the default).  \n  \n By default, [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] sets the version to \"1.0\", and sets the encoding to \"utf-8\".  \n  \n## Using XElement without XDocument  \n As previously mentioned, the <xref:System.Xml.Linq.XElement> class is the main class in the [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] programming interface. In many cases, your application will not require that you create a document. By using the <xref:System.Xml.Linq.XElement> class, you can create an XML tree, add other XML trees to it, modify the XML tree, and save it.  \n  \n## Using XDocument  \n To construct an <xref:System.Xml.Linq.XDocument>, use functional construction, just like you do to construct <xref:System.Xml.Linq.XElement> objects.  \n  \n The following code creates an <xref:System.Xml.Linq.XDocument> object and its associated contained objects.  \n  \n```vb  \nDim doc As XDocument = <?xml version=\"1.0\" encoding=\"utf-8\"?>  \n                       <!--This is a comment.-->  \n                       <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  \n                       <Pubs>  \n                           <Book>  \n                               <Title>Artifacts of Roman Civilization</Title>  \n                               <Author>Moreno, Jordao</Author>  \n                           </Book>  \n                           <Book>  \n                               <Title>Midieval Tools and Implements</Title>  \n                               <Author>Gazit, Inbar</Author>  \n                           </Book>  \n                       </Pubs>  \n                       <!--This is another comment.-->  \ndoc.Save(\"test.xml\")  \n```  \n  \n When you examine the file test.xml, you get the following output:  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<!--This is a comment.-->  \n<?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  \n<Pubs>  \n  <Book>  \n    <Title>Artifacts of Roman Civilization</Title>  \n    <Author>Moreno, Jordao</Author>  \n  </Book>  \n  <Book>  \n    <Title>Midieval Tools and Implements</Title>  \n    <Author>Gazit, Inbar</Author>  \n  </Book>  \n</Pubs>  \n<!--This is another comment.-->  \n```  \n  \n## See Also  \n [LINQ to XML Programming Overview (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)","nodes":[{"pos":[12,68],"content":"XDocument Class Overview (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"XDocument Class Overview (Visual Basic) | Microsoft Docs","pos":[0,56]}]},{"pos":[449,488],"content":"XDocument Class Overview (Visual Basic)","linkify":"XDocument Class Overview (Visual Basic)","nodes":[{"content":"XDocument Class Overview (Visual Basic)","pos":[0,39]}]},{"content":"This topic introduces the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> class.","pos":[489,554],"source":"This topic introduces the <xref:System.Xml.Linq.XDocument> class."},{"pos":[563,594],"content":"Overview of the XDocument class","linkify":"Overview of the XDocument class","nodes":[{"content":"Overview of the XDocument class","pos":[0,31]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> class contains the information necessary for a valid XML document.","pos":[598,701],"source":"The <xref:System.Xml.Linq.XDocument> class contains the information necessary for a valid XML document."},{"content":"This includes an XML declaration, processing instructions, and comments.","pos":[702,774]},{"content":"Note that you only have to create <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> objects if you require the specific functionality provided by the <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> class.","pos":[781,953],"source":"Note that you only have to create <xref:System.Xml.Linq.XDocument> objects if you require the specific functionality provided by the <xref:System.Xml.Linq.XDocument> class."},{"content":"In many circumstances, you can work directly with <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.","pos":[954,1036],"source":" In many circumstances, you can work directly with <xref:System.Xml.Linq.XElement>."},{"content":"Working directly with <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> is a simpler programming model.","pos":[1037,1122],"source":" Working directly with <xref:System.Xml.Linq.XElement> is a simpler programming model."},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> derives from <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.","pos":[1129,1209],"source":"<xref:System.Xml.Linq.XDocument> derives from <xref:System.Xml.Linq.XContainer>."},{"content":"Therefore, it can contain child nodes.","pos":[1210,1248]},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> objects can have only one child <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> node.","pos":[1249,1360],"source":" However, <xref:System.Xml.Linq.XDocument> objects can have only one child <xref:System.Xml.Linq.XElement> node."},{"content":"This reflects the XML standard that there can be only one root element in an XML document.","pos":[1361,1451]},{"pos":[1460,1483],"content":"Components of XDocument","linkify":"Components of XDocument","nodes":[{"content":"Components of XDocument","pos":[0,23]}]},{"content":"An <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> can contain the following elements:","pos":[1487,1558],"source":"An <xref:System.Xml.Linq.XDocument> can contain the following elements:"},{"content":"One <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDeclaration&gt;</ph> object.","pos":[1568,1615],"source":"One <xref:System.Xml.Linq.XDeclaration> object."},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDeclaration&gt;</ph> enables you to specify the pertinent parts of an XML declaration: the XML version, the encoding of the document, and whether the XML document is stand-alone.","pos":[1616,1809],"source":"<xref:System.Xml.Linq.XDeclaration> enables you to specify the pertinent parts of an XML declaration: the XML version, the encoding of the document, and whether the XML document is stand-alone."},{"content":"One <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object.","pos":[1819,1862],"source":"One <xref:System.Xml.Linq.XElement> object."},{"content":"This is the root node of the XML document.","pos":[1863,1905]},{"content":"Any number of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XProcessingInstruction&gt;</ph> objects.","pos":[1915,1983],"source":"Any number of <xref:System.Xml.Linq.XProcessingInstruction> objects."},{"content":"A processing instruction communicates information to an application that processes the XML.","pos":[1984,2075]},{"content":"Any number of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment&gt;</ph> objects.","pos":[2085,2139],"source":"Any number of <xref:System.Xml.Linq.XComment> objects."},{"content":"The comments will be siblings to the root element.","pos":[2140,2190]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XComment&gt;</ph> object cannot be the first argument in the list, because it is not valid for an XML document to start with a comment.","pos":[2191,2344],"source":" The <xref:System.Xml.Linq.XComment> object cannot be the first argument in the list, because it is not valid for an XML document to start with a comment."},{"content":"One <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> for the DTD.","pos":[2354,2407],"source":"One <xref:System.Xml.Linq.XDocumentType> for the DTD."},{"pos":[2414,2637],"content":"When you serialize an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, even if <ph id=\"ph2\">`XDocument.Declaration`</ph> is <ph id=\"ph3\">`null`</ph>, the output will have an XML declaration if the writer has <ph id=\"ph4\">`Writer.Settings.OmitXmlDeclaration`</ph> set to <ph id=\"ph5\">`false`</ph> (the default).","source":"When you serialize an <xref:System.Xml.Linq.XDocument>, even if `XDocument.Declaration` is `null`, the output will have an XML declaration if the writer has `Writer.Settings.OmitXmlDeclaration` set to `false` (the default)."},{"pos":[2644,2819],"content":"By default, <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> sets the version to \"1.0\", and sets the encoding to \"utf-8\".","source":"By default, [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] sets the version to \"1.0\", and sets the encoding to \"utf-8\"."},{"pos":[2828,2860],"content":"Using XElement without XDocument","linkify":"Using XElement without XDocument","nodes":[{"content":"Using XElement without XDocument","pos":[0,32]}]},{"content":"As previously mentioned, the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class is the main class in the <ph id=\"ph2\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> programming interface.","pos":[2864,3081],"source":"As previously mentioned, the <xref:System.Xml.Linq.XElement> class is the main class in the [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] programming interface."},{"content":"In many cases, your application will not require that you create a document.","pos":[3082,3158]},{"content":"By using the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class, you can create an XML tree, add other XML trees to it, modify the XML tree, and save it.","pos":[3159,3299],"source":" By using the <xref:System.Xml.Linq.XElement> class, you can create an XML tree, add other XML trees to it, modify the XML tree, and save it."},{"pos":[3308,3323],"content":"Using XDocument","linkify":"Using XDocument","nodes":[{"content":"Using XDocument","pos":[0,15]}]},{"content":"To construct an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, use functional construction, just like you do to construct <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.","pos":[3327,3476],"source":"To construct an <xref:System.Xml.Linq.XDocument>, use functional construction, just like you do to construct <xref:System.Xml.Linq.XElement> objects."},{"content":"The following code creates an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object and its associated contained objects.","pos":[3483,3590],"source":"The following code creates an <xref:System.Xml.Linq.XDocument> object and its associated contained objects."},{"content":"When you examine the file test.xml, you get the following output:","pos":[4401,4466]},{"pos":[4911,4919],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4923,5066],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML Programming Overview (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept>","source":"[LINQ to XML Programming Overview (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)"}]}