<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49e6738a90663645f761bb7748a723624ad8fdc6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-run.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9bcb84b4f9ffbbe880d19e43bc718bf2f352591</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a5b7d8badead0b006e7b8cfa675cb1d1bd2ecba</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-run command - .NET Core CLI | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-run command provides a convenient option to run your application from the source code.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-run, CLI, CLI command, .NET Core</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-run</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-run`</ph> - Runs source code without any explicit compile or launch commands.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet run`</ph> command provides a convenient option to run your application from the source code with one command.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It's useful for fast iterative development from the command line.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The command depends on the <bpt id="p1">[</bpt><ph id="ph1">`dotnet build`</ph><ept id="p1">](dotnet-build.md)</ept> command to build the code.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Any requirements for the build, such as that the project must be restored first, apply to <ph id="ph1">`dotnet run`</ph> as well.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Output files are written into the default location, which is <ph id="ph1">`bin/&lt;configuration&gt;/&lt;target&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example if you have a <ph id="ph1">`netcoreapp1.0`</ph> application and you run <ph id="ph2">`dotnet run`</ph>, the output is placed in <ph id="ph3">`bin/Debug/netcoreapp1.0`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Files are overwritten as needed.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Temporary files are placed in the <ph id="ph1">`obj`</ph> directory.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the project specifies multiple frameworks, executing <ph id="ph1">`dotnet run`</ph> results in an error unless the <ph id="ph2">`-f|--framework &lt;FRAMEWORK&gt;`</ph> option is used to specify the framework.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet run`</ph> command is used in the context of projects, not built assemblies.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you're trying to run a framework-dependent application DLL instead, you must use <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept> without a command.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, to run <ph id="ph1">`myapp.dll`</ph>, use:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information on the <ph id="ph1">`dotnet`</ph> driver, see the <bpt id="p1">[</bpt>.NET Core Command Line Tools (CLI)<ept id="p1">](index.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In order to run the application, the <ph id="ph1">`dotnet run`</ph> command resolves the dependencies of the application that are outside of the shared runtime from the NuGet cache.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because it uses cached dependencies, it's not recommended to use <ph id="ph1">`dotnet run`</ph> to run applications in production.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Instead, <bpt id="p1">[</bpt>create a deployment<ept id="p1">](../deploying/index.md)</ept> using the <bpt id="p2">[</bpt><ph id="ph1">`dotnet publish`</ph><ept id="p2">](dotnet-publish.md)</ept> command and deploy the published output.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Options</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Delimits arguments to <ph id="ph1">`dotnet run`</ph> from arguments for the application being run.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>All arguments after this one are passed to the application run.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Configuration to use for building the project.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`Debug`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Builds and runs the app using the specified <bpt id="p1">[</bpt>framework<ept id="p1">](../../standard/frameworks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The framework must be specified in the project file.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the path and name of the project file.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>(See the NOTE.) It defaults to the current directory if not specified.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Use the path and name of the project file with the <ph id="ph1">`-p|--project`</ph> option.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A regression in the CLI prevents providing a folder path at this time.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information and to track this issue, see <bpt id="p1">[</bpt>dotnet run -p, can not start a project (dotnet/cli #5992)<ept id="p1">](https://github.com/dotnet/cli/issues/5992)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Run the project in the current directory:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Run the specified project:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Run the project in the current directory (the <ph id="ph1">`--help`</ph> argument in this example is passed to the application, since the <ph id="ph2">`--`</ph> argument is used):</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>