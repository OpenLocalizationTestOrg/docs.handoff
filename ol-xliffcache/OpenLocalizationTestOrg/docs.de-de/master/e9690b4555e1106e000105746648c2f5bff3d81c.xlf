<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9690b4555e1106e000105746648c2f5bff3d81c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\state-machine-workflows.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fea4bb5fae8baccd3aad5d657d0f534480f5510</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78fc4ba5a98dfa1a85b8d68e9d8d5c3065c652f5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>State Machine Workflows | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>State Machine Workflows</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A state machine is a well-known paradigm for developing programs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.StateMachine&gt;</ph> activity, along with <ph id="ph2">&lt;xref:System.Activities.Statements.State&gt;</ph>, <ph id="ph3">&lt;xref:System.Activities.Statements.Transition&gt;</ph>, and other activities can be used to build state machine workflow programs.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic provides an overview of creating state machine workflows.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>State Machine Workflow Overview</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>State machine workflows provide a modeling style with which you can model your workflow in an event-driven manner.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Activities.Statements.StateMachine&gt;</ph> activity contains the states and transitions that make up the logic of the state machine, and can be used anywhere an activity can be used.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>There are several classes in the state machine runtime:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To create a state machine workflow, states are added to a <ph id="ph1">&lt;xref:System.Activities.Statements.StateMachine&gt;</ph> activity, and transitions are used control the flow between states.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following screenshot, from the <bpt id="p1">[</bpt>Getting Started Tutorial<ept id="p1">](../../../docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept> step <bpt id="p2">[</bpt>How to: Create a State Machine Workflow<ept id="p2">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-state-machine-workflow.md)</ept>, shows a state machine workflow with three states and three transitions.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Initialize Target<ept id="p1">**</ept> is the initial state and represents the first state in the workflow.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is designated by the line leading to it from the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> node.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The final state in the workflow is named <bpt id="p1">**</bpt>FinalState<ept id="p1">**</ept>, and represents the point at which the workflow is completed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Completed State Machine Workflow<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/wfstatemachinegettingstartedtutorialcomplete.JPG "</bpt>WFStateMachineGettingStartedTutorialComplete<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A state machine workflow must have one and only one initial state, and at least one final state.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each state that is not a final state must have at least one transition.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following sections cover creating and configuring states and transitions.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creating and Configuring States</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Activities.Statements.State&gt;</ph> represents a state in which a state machine can be in.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To add a <ph id="ph1">&lt;xref:System.Activities.Statements.State&gt;</ph> to a workflow, drag the <bpt id="p1">**</bpt>State<ept id="p1">**</ept> activity designer from the <bpt id="p2">**</bpt>State Machine<ept id="p2">**</ept> section of the <bpt id="p3">**</bpt>Toolbox<ept id="p3">**</ept> and drop it onto a <ph id="ph2">&lt;xref:System.Activities.Statements.StateMachine&gt;</ph> activity on the <ph id="ph3">[!INCLUDE[wfd1](../../../includes/wfd1-md.md)]</ph> surface.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>WF4 State Machine Activities<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/netframework4platformupdate1statemachineactivities.jpg "</bpt>NETFramework4PlatformUpdate1StateMachineActivities<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To configure a state as the <bpt id="p1">**</bpt>Initial State<ept id="p1">**</ept>, right-click the state and select <bpt id="p2">**</bpt>Set as Initial State<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Additionally, if there is no current initial state, the initial state can be designated by dragging a line from the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> node at the top of the workflow to the desired state.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Activities.Statements.StateMachine&gt;</ph> activity is dropped onto the workflow designer, it is pre-configured with an initial state named <bpt id="p1">**</bpt>State1<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A state machine workflow must have one and only one initial state.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A state that represents a terminating state in a state machine is called a final state.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A final state is a state that has its <ph id="ph1">&lt;xref:System.Activities.Statements.State.IsFinal%2A&gt;</ph> property set to <ph id="ph2">`true`</ph>, has no <ph id="ph3">&lt;xref:System.Activities.Statements.State.Exit%2A&gt;</ph> activity, and no transitions originating from it.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To add a final state to a workflow, drag a <bpt id="p1">**</bpt>FinalState<ept id="p1">**</ept> activity designer from the <bpt id="p2">**</bpt>State Machine<ept id="p2">**</ept> section of the <bpt id="p3">**</bpt>Toolbox<ept id="p3">**</ept> and drop it onto a <ph id="ph1">&lt;xref:System.Activities.Statements.StateMachine&gt;</ph> activity on the <ph id="ph2">[!INCLUDE[wfd1](../../../includes/wfd1-md.md)]</ph> surface.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A state machine workflow must have at least one final state.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Configuring Entry and Exit Actions</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A state can have an <ph id="ph1">&lt;xref:System.Activities.Statements.State.Entry%2A&gt;</ph> and an <ph id="ph2">&lt;xref:System.Activities.Statements.State.Exit%2A&gt;</ph> action.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>(A state configured as a final state may have only an entry action).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When a workflow instance enters a state, any activities in the entry action execute.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When the entry action is complete, the triggers for the state’s transitions are scheduled.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When a transition to another state is confirmed, the activities in the exit action are executed, even if the state transitions back to the same state.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>After the exit action completes, the activities in the transition’s action execute, and then the new state is transitioned to, and its entry actions are scheduled.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When debugging a state machine workflow, breakpoints can be placed on the root state machine activity and states within the state machine workflow.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Breakpoints may not be placed directly on the transitions, but they may be placed on any activities contained within the states and transitions.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creating and Configuring Transitions</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>All states must have at least one transition, except for a final state which may not have any transitions.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Transitions may be added after a state is added to a state machine workflow, or they can be created as the state is dropped.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To add a <ph id="ph1">&lt;xref:System.Activities.Statements.State&gt;</ph> and create a transition in one step, drag a <bpt id="p1">**</bpt>State<ept id="p1">**</ept> activity from the <bpt id="p2">**</bpt>State Machine<ept id="p2">**</ept> section of the <bpt id="p3">**</bpt>Toolbox<ept id="p3">**</ept> and hover it over another state in the workflow designer.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When the dragged <ph id="ph1">&lt;xref:System.Activities.Statements.State&gt;</ph> is over another <ph id="ph2">&lt;xref:System.Activities.Statements.State&gt;</ph>, four triangles will appear around the other <ph id="ph3">&lt;xref:System.Activities.Statements.State&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.Statements.State&gt;</ph> is dropped onto one of the four triangles, it is added to the state machine and a transition is created from the source <ph id="ph2">&lt;xref:System.Activities.Statements.State&gt;</ph> to the dropped destination <ph id="ph3">&lt;xref:System.Activities.Statements.State&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Transition Activity Designer<ept id="p1">](/visualstudio/workflow-designer/transition-activity-designer)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To create a transition after a state is added, there are two options.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first option is to drag the state from the workflow designer surface and hover it over an existing state and drop it on one of the drop points.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This is very similar to the method described in the previous section.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can also hover the mouse over the desired source state, and drag a line to the desired destination state.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A single state in a state machine can have up to 76 transitions created using the workflow designer.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The limit on transitions for a state for workflows created outside the designer is limited only by system resources.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A transition may have a <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Trigger%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Activities.Statements.Transition.Condition%2A&gt;</ph>, and an <ph id="ph3">&lt;xref:System.Activities.Statements.Transition.Action%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A transition’s <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Trigger%2A&gt;</ph> is scheduled when the transition’s source state’s <ph id="ph2">&lt;xref:System.Activities.Statements.State.Entry%2A&gt;</ph> action is complete.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Typically the <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Trigger%2A&gt;</ph> is an activity that waits for some type of event to occur, but it can be any activity, or no activity at all.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Once the <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Trigger%2A&gt;</ph> activity is complete, the <ph id="ph2">&lt;xref:System.Activities.Statements.Transition.Condition%2A&gt;</ph>, if present, is evaluated.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If there is no <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Trigger%2A&gt;</ph> activity then the <ph id="ph2">&lt;xref:System.Activities.Statements.Transition.Condition%2A&gt;</ph> is immediately evaluated.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the condition evaluates to <ph id="ph1">`false`</ph>, the transition is cancelled, and the <ph id="ph2">&lt;xref:System.Activities.Statements.Transition.Trigger%2A&gt;</ph> activity for all transitions from the state are rescheduled.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If there are other transitions that share the same source state as the current transition, those <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Trigger%2A&gt;</ph> actions are cancelled and rescheduled as well.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Condition%2A&gt;</ph> evaluates to <ph id="ph2">`true`</ph>, or there is no condition, then the <ph id="ph3">&lt;xref:System.Activities.Statements.State.Exit%2A&gt;</ph> action of the source state is executed, and then the <ph id="ph4">&lt;xref:System.Activities.Statements.Transition.Action%2A&gt;</ph> of the transition is executed.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Action%2A&gt;</ph> completes, control passes to the <bpt id="p1">**</bpt>Target<ept id="p1">**</ept> state</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Transitions that share a common trigger are known as shared trigger transitions.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Each transition in a group of shared trigger transitions has the same trigger, but a unique <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Condition%2A&gt;</ph> and Action.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To add additional actions to a transition and create a shared transition, click the circle that indicates the start of the desired transition and drag it to the desired state.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The new transition will share a same trigger as the initial transition, but it will have a unique condition and action.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Shared transitions can also be created from within the transition designer by clicking <bpt id="p1">**</bpt>Add shared trigger transition<ept id="p1">**</ept> at the bottom of the transition designer, and then selecting the desired target state from the <bpt id="p2">**</bpt>Available states to connect<ept id="p2">**</ept> drop-down.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Note that if the <ph id="ph1">&lt;xref:System.Activities.Statements.Transition.Condition%2A&gt;</ph> of a transition evaluates to <ph id="ph2">`False`</ph> (or all of the conditions of a shared trigger transition evaluate to <ph id="ph3">`False`</ph>), the transition will not occur and all triggers for all the transitions from the state will be rescheduled.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For more information on creating state machine workflows, see <bpt id="p1">[</bpt>How to: Create a State Machine Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-state-machine-workflow.md)</ept>, <bpt id="p2">[</bpt>StateMachine Activity Designer<ept id="p2">](/visualstudio/workflow-designer/statemachine-activity-designer)</ept>, <bpt id="p3">[</bpt>State Activity Designer<ept id="p3">](/visualstudio/workflow-designer/state-activity-designer)</ept>, <bpt id="p4">[</bpt>FinalState Activity Designer<ept id="p4">](/visualstudio/workflow-designer/finalstate-activity-designer)</ept>, and <bpt id="p5">[</bpt>Transition Activity Designer<ept id="p5">](/visualstudio/workflow-designer/transition-activity-designer)</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>State Machine Terminology</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This section defines the state machine vocabulary used throughout this topic.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>State</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The basic unit that composes a state machine.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A state machine can be in one state at any particular time.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Entry Action</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An activity executed when entering the state</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Exit Action</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An activity executed when exiting the state</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Transition</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A directed relationship between two states which represents the complete response of a state machine to an occurrence of an event of a particular type.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Shared Transition</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A transition that shares a source state and trigger with one or more transitions, but has a unique condition and action.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Trigger</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A triggering activity that causes a transition to occur.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A constraint which must evaluate to <ph id="ph1">`true`</ph> after the trigger occurs in order for the transition to complete.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Transition Action</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An activity which is executed when performing a certain transition.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Conditional Transition</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A transition with an explicit condition.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Self-transition</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A transition which transits from a state to itself.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Initial State</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A state which represents the starting point of the state machine.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Final State</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A state which represents the completion of the state machine.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a State Machine Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-state-machine-workflow.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>StateMachine Activity Designer<ept id="p1">](/visualstudio/workflow-designer/statemachine-activity-designer)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>State Activity Designer<ept id="p1">](/visualstudio/workflow-designer/state-activity-designer)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>FinalState Activity Designer<ept id="p1">](/visualstudio/workflow-designer/finalstate-activity-designer)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Transition Activity Designer<ept id="p1">](/visualstudio/workflow-designer/transition-activity-designer)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>