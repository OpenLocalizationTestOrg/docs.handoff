{"content":"---\ntitle: \"IHostMemoryManager::VirtualQuery Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostMemoryManager.VirtualQuery\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostMemoryManager::VirtualQuery\"\nhelpviewer_keywords: \n  - \"IHostMemoryManager::VirtualQuery method [.NET Framework hosting]\"\n  - \"VirtualQuery method [.NET Framework hosting]\"\nms.assetid: 757af1e6-b9e8-49e7-b5db-342be3aa205f\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# IHostMemoryManager::VirtualQuery Method\nServes as a logical wrapper for the corresponding Win32 function. The Win32 implementation of `VirtualQuery` retrieves information about a range of pages in the virtual address space of the calling process.  \n  \n## Syntax  \n  \n```  \nHRESULT VirtualQuery (  \n    [in]  void*    lpAddress,  \n    [out] void*    lpBuffer,  \n    [in]  SIZE_T   dwLength,  \n    [out] SIZE_T*  pResult  \n);  \n```  \n  \n## Parameters  \n `lpAddress`  \n [in] A pointer to the address in virtual memory to be queried.  \n  \n `lpBuffer`  \n [out] A pointer to a structure that contains information about the specified memory region.  \n  \n `dwLength`  \n [in] The size, in bytes, of the buffer that `lpBuffer` points to.  \n  \n `pResult`  \n [out] A pointer to the number of bytes returned by the information buffer.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`VirtualQuery` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n  \n## Remarks  \n `VirtualQuery` provides information about a range of pages in the virtual address space of the calling process. This implementation sets the value of the `pResult` parameter to the number of bytes returned in the information buffer, and returns an HRESULT value. In the Win32 `VirtualQuery` function, the return value is the buffer size. For more information, see the Windows Platform documentation.  \n  \n> [!IMPORTANT]\n>  The operating system's implementation of `VirtualQuery` does not incur deadlock and can run to completion with random threads suspended in user code. Use great caution when implementing a hosted version of this method.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)\n","nodes":[{"pos":[4,489],"embed":true,"restype":"x-metadata","content":"title: \"IHostMemoryManager::VirtualQuery Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostMemoryManager.VirtualQuery\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostMemoryManager::VirtualQuery\"\nhelpviewer_keywords: \n  - \"IHostMemoryManager::VirtualQuery method [.NET Framework hosting]\"\n  - \"VirtualQuery method [.NET Framework hosting]\"\nms.assetid: 757af1e6-b9e8-49e7-b5db-342be3aa205f\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"IHostMemoryManager::VirtualQuery Method","nodes":[{"pos":[0,39],"content":"IHostMemoryManager::VirtualQuery Method","nodes":[{"content":"IHostMemoryManager::VirtualQuery Method","pos":[0,39]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[496,535],"content":"IHostMemoryManager::VirtualQuery Method","linkify":"IHostMemoryManager::VirtualQuery Method","nodes":[{"content":"IHostMemoryManager::VirtualQuery Method","pos":[0,39]}]},{"content":"Serves as a logical wrapper for the corresponding Win32 function.","pos":[536,601]},{"content":"The Win32 implementation of <ph id=\"ph1\">`VirtualQuery`</ph> retrieves information about a range of pages in the virtual address space of the calling process.","pos":[602,742],"source":" The Win32 implementation of `VirtualQuery` retrieves information about a range of pages in the virtual address space of the calling process."},{"pos":[751,757],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[934,944],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer to the address in virtual memory to be queried.","pos":[963,1025]},{"content":"[out] A pointer to a structure that contains information about the specified memory region.","pos":[1046,1137]},{"content":"[in] The size, in bytes, of the buffer that <ph id=\"ph1\">`lpBuffer`</ph> points to.","pos":[1158,1223],"source":"[in] The size, in bytes, of the buffer that `lpBuffer` points to."},{"content":"[out] A pointer to the number of bytes returned by the information buffer.","pos":[1243,1317]},{"pos":[1326,1338],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1345,1352]},{"content":"Description","pos":[1353,1364]},{"content":"S_OK","pos":[1405,1409]},{"pos":[1410,1447],"content":"<ph id=\"ph1\">`VirtualQuery`</ph> returned successfully.","source":"`VirtualQuery` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1452,1474]},{"content":"The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1475,1639]},{"content":"HOST_E_TIMEOUT","pos":[1644,1658]},{"content":"The call timed out.","pos":[1659,1678]},{"content":"HOST_E_NOT_OWNER","pos":[1683,1699]},{"content":"The caller does not own the lock.","pos":[1700,1733]},{"content":"HOST_E_ABANDONED","pos":[1738,1754]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1755,1827]},{"content":"E_FAIL","pos":[1832,1838]},{"content":"An unknown catastrophic failure occurred.","pos":[1839,1880]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1881,1958]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[1959,2025]},{"pos":[2035,2042],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`VirtualQuery`</ph> provides information about a range of pages in the virtual address space of the calling process.","pos":[2046,2157],"source":"`VirtualQuery` provides information about a range of pages in the virtual address space of the calling process."},{"content":"This implementation sets the value of the <ph id=\"ph1\">`pResult`</ph> parameter to the number of bytes returned in the information buffer, and returns an HRESULT value.","pos":[2158,2308],"source":" This implementation sets the value of the `pResult` parameter to the number of bytes returned in the information buffer, and returns an HRESULT value."},{"content":"In the Win32 <ph id=\"ph1\">`VirtualQuery`</ph> function, the return value is the buffer size.","pos":[2309,2383],"source":" In the Win32 `VirtualQuery` function, the return value is the buffer size."},{"content":"For more information, see the Windows Platform documentation.","pos":[2384,2445]},{"pos":[2453,2687],"content":"[!IMPORTANT]\n The operating system's implementation of `VirtualQuery` does not incur deadlock and can run to completion with random threads suspended in user code. Use great caution when implementing a hosted version of this method.","leadings":["","> "],"nodes":[{"content":"The operating system's implementation of `VirtualQuery` does not incur deadlock and can run to completion with random threads suspended in user code. Use great caution when implementing a hosted version of this method.","pos":[14,232],"nodes":[{"content":"The operating system's implementation of <ph id=\"ph1\">`VirtualQuery`</ph> does not incur deadlock and can run to completion with random threads suspended in user code.","pos":[0,149],"source":"The operating system's implementation of `VirtualQuery` does not incur deadlock and can run to completion with random threads suspended in user code."},{"content":"Use great caution when implementing a hosted version of this method.","pos":[150,218]}]}]},{"pos":[2696,2708],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2712,2816],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2823,2844],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2851,2901],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2908,3016],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[3025,3033],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3037,3149],"content":"<bpt id=\"p1\">[</bpt>IHostMemoryManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)</ept>","source":"[IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)"}]}