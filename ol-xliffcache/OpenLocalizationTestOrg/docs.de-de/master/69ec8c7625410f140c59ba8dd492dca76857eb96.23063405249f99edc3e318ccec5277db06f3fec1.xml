{"content":"---\ntitle: \"How to: Label Statements (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"colons (:)\"\n  - \"statements [Visual Basic], labels\"\n  - \": separator character\"\n  - \"Visual Basic code, labeling statements\"\nms.assetid: 38f1ff43-2054-42cb-963b-1998e60c6ed4\n---\n# How to: Label Statements (Visual Basic)\nStatement blocks are made up of lines of code delimited by colons. Lines of code preceded by an identifying string or integer are said to be *labeled*. Statement labels are used to mark a line of code to identify it for use with statements such as `On Error Goto`.  \n  \n Labels may be either valid Visual Basic identifiers—such as those that identify programming elements—or integer literals. A label must appear at the beginning of a line of source code and must be followed by a colon, regardless of whether it is followed by a statement on the same line.  \n  \n The compiler identifies labels by checking whether the beginning of the line matches any already-defined identifier. If it does not, the compiler assumes it is a label.  \n  \n Labels have their own declaration space and do not interfere with other identifiers. A label's scope is the body of the method. Label declaration takes precedence in any ambiguous situation.  \n  \n> [!NOTE]\n>  Labels can be used only on executable statements inside methods.  \n  \n### To label a line of code  \n  \n-   Place an identifier, followed by a colon, at the beginning of the line of source code.  \n  \n     For example, the following lines of code are labeled with `Jump` and `120`, respectively:  \n  \n     [!code-vb[VbVbalrStatements#708](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStatements/VB/Class1.vb#708)]  \n  \n## See also\n\n- [Statements](../../../visual-basic/programming-guide/language-features/statements.md)\n- [Declared Element Names](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)\n- [Program Structure and Code Conventions](../../../visual-basic/programming-guide/program-structure/program-structure-and-code-conventions.md)\n","nodes":[{"pos":[4,273],"embed":true,"restype":"x-metadata","content":"title: \"How to: Label Statements (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"colons (:)\"\n  - \"statements [Visual Basic], labels\"\n  - \": separator character\"\n  - \"Visual Basic code, labeling statements\"\nms.assetid: 38f1ff43-2054-42cb-963b-1998e60c6ed4","nodes":[{"content":"How to: Label Statements (Visual Basic)","nodes":[{"pos":[0,39],"content":"How to: Label Statements (Visual Basic)","nodes":[{"content":"How to: Label Statements (Visual Basic)","pos":[0,39]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[280,319],"content":"How to: Label Statements (Visual Basic)","linkify":"How to: Label Statements (Visual Basic)","nodes":[{"content":"How to: Label Statements (Visual Basic)","pos":[0,39]}]},{"content":"Statement blocks are made up of lines of code delimited by colons.","pos":[320,386]},{"content":"Lines of code preceded by an identifying string or integer are said to be <bpt id=\"p1\">*</bpt>labeled<ept id=\"p1\">*</ept>.","pos":[387,471],"source":" Lines of code preceded by an identifying string or integer are said to be *labeled*."},{"content":"Statement labels are used to mark a line of code to identify it for use with statements such as <ph id=\"ph1\">`On Error Goto`</ph>.","pos":[472,584],"source":" Statement labels are used to mark a line of code to identify it for use with statements such as `On Error Goto`."},{"content":"Labels may be either valid Visual Basic identifiers—such as those that identify programming elements—or integer literals.","pos":[591,712]},{"content":"A label must appear at the beginning of a line of source code and must be followed by a colon, regardless of whether it is followed by a statement on the same line.","pos":[713,877]},{"content":"The compiler identifies labels by checking whether the beginning of the line matches any already-defined identifier.","pos":[884,1000]},{"content":"If it does not, the compiler assumes it is a label.","pos":[1001,1052]},{"content":"Labels have their own declaration space and do not interfere with other identifiers.","pos":[1059,1143]},{"content":"A label's scope is the body of the method.","pos":[1144,1186]},{"content":"Label declaration takes precedence in any ambiguous situation.","pos":[1187,1249]},{"pos":[1257,1332],"content":"[!NOTE]\n Labels can be used only on executable statements inside methods.","leadings":["","> "],"nodes":[{"content":"Labels can be used only on executable statements inside methods.","pos":[9,73]}]},{"pos":[1342,1365],"content":"To label a line of code","linkify":"To label a line of code","nodes":[{"content":"To label a line of code","pos":[0,23]}]},{"content":"Place an identifier, followed by a colon, at the beginning of the line of source code.","pos":[1375,1461]},{"pos":[1472,1561],"content":"For example, the following lines of code are labeled with <ph id=\"ph1\">`Jump`</ph> and <ph id=\"ph2\">`120`</ph>, respectively:","source":"For example, the following lines of code are labeled with `Jump` and `120`, respectively:"},{"pos":[1702,1710],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1714,1799],"content":"<bpt id=\"p1\">[</bpt>Statements<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/statements.md)</ept>","source":"[Statements](../../../visual-basic/programming-guide/language-features/statements.md)"},{"pos":[1802,1929],"content":"<bpt id=\"p1\">[</bpt>Declared Element Names<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>","source":"[Declared Element Names](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)"},{"pos":[1932,2073],"content":"<bpt id=\"p1\">[</bpt>Program Structure and Code Conventions<ept id=\"p1\">](../../../visual-basic/programming-guide/program-structure/program-structure-and-code-conventions.md)</ept>","source":"[Program Structure and Code Conventions](../../../visual-basic/programming-guide/program-structure/program-structure-and-code-conventions.md)"}]}