{"content":"---\ntitle: \"Programming Concepts (C#)\"\nms.date: 07/20/2015\nms.assetid: 3227afd5-4794-484b-b83b-0f1f94a0476b\n---\n# Programming Concepts (C#)\nThis section explains programming concepts in the C# language.  \n  \n## In This Section  \n  \n|Title|Description|  \n|-----------|-----------------|  \n|[Assemblies in .NET](../../../standard/assembly/index.md)|Describes how to create and use assemblies.|  \n|[Asynchronous Programming with async and await (C#)](../../../csharp/programming-guide/concepts/async/index.md)|Describes how to write asynchronous solutions by using the [async](../../../csharp/language-reference/keywords/async.md) and [await](../../../csharp/language-reference/keywords/await.md) keywords in C#. Includes a walkthrough.|  \n|[Attributes (C#)](../../../csharp/programming-guide/concepts/attributes/index.md)|Discusses how to provide additional information about programming elements such as types, fields, methods, and properties by using attributes.|  \n|[Caller Information (C#)](../../../csharp/programming-guide/concepts/caller-information.md)|Describes how to obtain information about the caller of a method. This information includes the file path and the line number of the source code and the member name of the caller.|  \n|[Collections (C#)](../../../csharp/programming-guide/concepts/collections.md)|Describes some of the types of collections provided by the .NET Framework. Demonstrates how to use simple collections and collections of key/value pairs.|  \n|[Covariance and Contravariance (C#)](../../../csharp/programming-guide/concepts/covariance-contravariance/index.md)|Shows how to enable implicit conversion of generic type parameters in interfaces and delegates.|  \n|[Expression Trees (C#)](../../../csharp/programming-guide/concepts/expression-trees/index.md)|Explains how you can use expression trees to enable dynamic modification of executable code.|  \n|[Iterators (C#)](../../../csharp/programming-guide/concepts/iterators.md)|Describes iterators, which are used to step through collections and return elements one at a time.|  \n|[Language-Integrated Query (LINQ) (C#)](../../../csharp/programming-guide/concepts/linq/index.md)|Discusses the powerful query capabilities in the language syntax of C#, and the model for querying relational databases, XML documents, datasets, and in-memory collections.|  \n|[Object-Oriented Programming (C#)](../../../csharp/programming-guide/concepts/object-oriented-programming.md)|Describes common object-oriented concepts, including encapsulation, inheritance, and polymorphism.|  \n|[Reflection (C#)](../../../csharp/programming-guide/concepts/reflection.md)|Explains how to use reflection to dynamically create an instance of a type, bind the type to an existing object, or get the type from an existing object and invoke its methods or access its fields and properties.|  \n|[Serialization (C#)](../../../csharp/programming-guide/concepts/serialization/index.md)|Describes key concepts in binary, XML, and SOAP serialization.|  \n  \n## Related Sections  \n  \n|||  \n|---|---|  \n|[Performance Tips](../../../../docs/framework/performance/performance-tips.md) | Discusses several basic rules that may help you increase the performance of your application.|\n","nodes":[{"pos":[4,107],"embed":true,"restype":"x-metadata","content":"title: \"Programming Concepts (C#)\"\nms.date: 07/20/2015\nms.assetid: 3227afd5-4794-484b-b83b-0f1f94a0476b","nodes":[{"content":"Programming Concepts (C#)","nodes":[{"pos":[0,25],"content":"Programming Concepts (C#)","nodes":[{"content":"Programming Concepts (C#)","pos":[0,25]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[114,139],"content":"Programming Concepts (C#)","linkify":"Programming Concepts (C#)","nodes":[{"content":"Programming Concepts (C#)","pos":[0,25]}]},{"content":"This section explains programming concepts in the C# language.","pos":[140,202]},{"pos":[211,226],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"Title","pos":[233,238]},{"content":"Description","pos":[239,250]},{"pos":[289,346],"content":"<bpt id=\"p1\">[</bpt>Assemblies in .NET<ept id=\"p1\">](../../../standard/assembly/index.md)</ept>","source":"[Assemblies in .NET](../../../standard/assembly/index.md)"},{"content":"Describes how to create and use assemblies.","pos":[347,390]},{"pos":[395,506],"content":"<bpt id=\"p1\">[</bpt>Asynchronous Programming with async and await (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/async/index.md)</ept>","source":"[Asynchronous Programming with async and await (C#)](../../../csharp/programming-guide/concepts/async/index.md)"},{"content":"Describes how to write asynchronous solutions by using the <bpt id=\"p1\">[</bpt>async<ept id=\"p1\">](../../../csharp/language-reference/keywords/async.md)</ept> and <bpt id=\"p2\">[</bpt>await<ept id=\"p2\">](../../../csharp/language-reference/keywords/await.md)</ept> keywords in C#.","pos":[507,709],"source":"Describes how to write asynchronous solutions by using the [async](../../../csharp/language-reference/keywords/async.md) and [await](../../../csharp/language-reference/keywords/await.md) keywords in C#."},{"content":"Includes a walkthrough.","pos":[710,733]},{"pos":[738,819],"content":"<bpt id=\"p1\">[</bpt>Attributes (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/attributes/index.md)</ept>","source":"[Attributes (C#)](../../../csharp/programming-guide/concepts/attributes/index.md)"},{"content":"Discusses how to provide additional information about programming elements such as types, fields, methods, and properties by using attributes.","pos":[820,962]},{"pos":[967,1058],"content":"<bpt id=\"p1\">[</bpt>Caller Information (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/caller-information.md)</ept>","source":"[Caller Information (C#)](../../../csharp/programming-guide/concepts/caller-information.md)"},{"content":"Describes how to obtain information about the caller of a method.","pos":[1059,1124]},{"content":"This information includes the file path and the line number of the source code and the member name of the caller.","pos":[1125,1238]},{"pos":[1243,1320],"content":"<bpt id=\"p1\">[</bpt>Collections (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/collections.md)</ept>","source":"[Collections (C#)](../../../csharp/programming-guide/concepts/collections.md)"},{"content":"Describes some of the types of collections provided by the .NET Framework.","pos":[1321,1395]},{"content":"Demonstrates how to use simple collections and collections of key/value pairs.","pos":[1396,1474]},{"pos":[1479,1594],"content":"<bpt id=\"p1\">[</bpt>Covariance and Contravariance (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/covariance-contravariance/index.md)</ept>","source":"[Covariance and Contravariance (C#)](../../../csharp/programming-guide/concepts/covariance-contravariance/index.md)"},{"content":"Shows how to enable implicit conversion of generic type parameters in interfaces and delegates.","pos":[1595,1690]},{"pos":[1695,1788],"content":"<bpt id=\"p1\">[</bpt>Expression Trees (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/expression-trees/index.md)</ept>","source":"[Expression Trees (C#)](../../../csharp/programming-guide/concepts/expression-trees/index.md)"},{"content":"Explains how you can use expression trees to enable dynamic modification of executable code.","pos":[1789,1881]},{"pos":[1886,1959],"content":"<bpt id=\"p1\">[</bpt>Iterators (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/iterators.md)</ept>","source":"[Iterators (C#)](../../../csharp/programming-guide/concepts/iterators.md)"},{"content":"Describes iterators, which are used to step through collections and return elements one at a time.","pos":[1960,2058]},{"pos":[2063,2160],"content":"<bpt id=\"p1\">[</bpt>Language-Integrated Query (LINQ) (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/linq/index.md)</ept>","source":"[Language-Integrated Query (LINQ) (C#)](../../../csharp/programming-guide/concepts/linq/index.md)"},{"content":"Discusses the powerful query capabilities in the language syntax of C#, and the model for querying relational databases, XML documents, datasets, and in-memory collections.","pos":[2161,2333]},{"pos":[2338,2447],"content":"<bpt id=\"p1\">[</bpt>Object-Oriented Programming (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/object-oriented-programming.md)</ept>","source":"[Object-Oriented Programming (C#)](../../../csharp/programming-guide/concepts/object-oriented-programming.md)"},{"content":"Describes common object-oriented concepts, including encapsulation, inheritance, and polymorphism.","pos":[2448,2546]},{"pos":[2551,2626],"content":"<bpt id=\"p1\">[</bpt>Reflection (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/reflection.md)</ept>","source":"[Reflection (C#)](../../../csharp/programming-guide/concepts/reflection.md)"},{"content":"Explains how to use reflection to dynamically create an instance of a type, bind the type to an existing object, or get the type from an existing object and invoke its methods or access its fields and properties.","pos":[2627,2839]},{"pos":[2844,2931],"content":"<bpt id=\"p1\">[</bpt>Serialization (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/serialization/index.md)</ept>","source":"[Serialization (C#)](../../../csharp/programming-guide/concepts/serialization/index.md)"},{"content":"Describes key concepts in binary, XML, and SOAP serialization.","pos":[2932,2994]},{"pos":[3004,3020],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"pos":[3045,3123],"content":"<bpt id=\"p1\">[</bpt>Performance Tips<ept id=\"p1\">](../../../../docs/framework/performance/performance-tips.md)</ept>","source":"[Performance Tips](../../../../docs/framework/performance/performance-tips.md)"},{"content":"Discusses several basic rules that may help you increase the performance of your application.","pos":[3126,3219]}]}