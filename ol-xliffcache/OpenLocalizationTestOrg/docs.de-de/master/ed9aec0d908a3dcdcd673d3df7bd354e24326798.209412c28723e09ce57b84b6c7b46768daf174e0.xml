{"content":"---\ntitle: \"IHostTask::SetPriority Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IHostTask.SetPriority\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostTask::SetPriority\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IHostTask::SetPriority method [.NET Framework hosting]\"\n  - \"SetPriority method [.NET Framework hosting]\"\nms.assetid: cd8c379b-c7a0-434f-8e23-899bd26be75d\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# IHostTask::SetPriority Method\nRequests that the host adjust the thread priority level for the task represented by the current [IHostTask](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md) instance.  \n  \n## Syntax  \n  \n```  \nHRESULT SetPriority (  \n    [in] int newPriority  \n);  \n```  \n  \n#### Parameters  \n `newPriority`  \n [in] An integer that represents the requested thread priority value for the task represented by the current `IHostTask` instance.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`SetPriority` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n  \n## Remarks  \n Threads are granted processing time using a round-robin system that is partly based on a thread's priority level. `SetPriority` allows the CLR to set that thread priority level for the current task. The following `newPriority` values are supported.  \n  \n-   THREAD_PRIORITY_ABOVE_NORMAL  \n  \n-   THREAD_PRIORITY_BELOW_NORMAL  \n  \n-   THREAD_PRIORITY_HIGHEST  \n  \n-   THREAD_PRIORITY_IDLE  \n  \n-   THREAD_PRIORITY_LOWEST  \n  \n-   THREAD_PRIORITY_NORMAL  \n  \n-   THREAD_PRIORITY_TIME_CRITICAL  \n  \n The CLR calls `SetPriority` when the value of the <xref:System.Threading.Thread.Priority%2A?displayProperty=fullName> is modified by user code. A host can define its own algorithms for thread priority assignment, and is free to ignore this request.  \n  \n> [!NOTE]\n>  `SetPriority` does not report whether the thread priority level was changed. Call [IHostTask::GetPriority](../../../../docs/framework/unmanaged-api/hosting/ihosttask-getpriority-method.md) to determine the value of the task's thread priority level.  \n  \n Thread priority level values are defined by the Win32 `SetThreadPriority` function. For more information about thread priority, see the Windows Platform documentation.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n <xref:System.Threading.Thread>   \n [ICLRTask Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)   \n [ICLRTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md)   \n [IHostTask Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)   \n [GetPriority Method](../../../../docs/framework/unmanaged-api/hosting/ihosttask-getpriority-method.md)   \n [IHostTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)","nodes":[{"pos":[4,674],"embed":true,"restype":"x-metadata","content":"title: \"IHostTask::SetPriority Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IHostTask.SetPriority\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostTask::SetPriority\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IHostTask::SetPriority method [.NET Framework hosting]\"\n  - \"SetPriority method [.NET Framework hosting]\"\nms.assetid: cd8c379b-c7a0-434f-8e23-899bd26be75d\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"IHostTask::SetPriority Method | Microsoft Docs","nodes":[{"pos":[0,46],"content":"IHostTask::SetPriority Method | Microsoft Docs","nodes":[{"content":"IHostTask::SetPriority Method | Microsoft Docs","pos":[0,46]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[681,710],"content":"IHostTask::SetPriority Method","linkify":"IHostTask::SetPriority Method","nodes":[{"content":"IHostTask::SetPriority Method","pos":[0,29]}]},{"pos":[711,901],"content":"Requests that the host adjust the thread priority level for the task represented by the current <bpt id=\"p1\">[</bpt>IHostTask<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)</ept> instance.","source":"Requests that the host adjust the thread priority level for the task represented by the current [IHostTask](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md) instance."},{"pos":[910,916],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[998,1008],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] An integer that represents the requested thread priority value for the task represented by the current <ph id=\"ph1\">`IHostTask`</ph> instance.","pos":[1029,1158],"source":"[in] An integer that represents the requested thread priority value for the task represented by the current `IHostTask` instance."},{"pos":[1167,1179],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1186,1193]},{"content":"Description","pos":[1194,1205]},{"content":"S_OK","pos":[1246,1250]},{"pos":[1251,1287],"content":"<ph id=\"ph1\">`SetPriority`</ph> returned successfully.","source":"`SetPriority` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1292,1314]},{"content":"The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1315,1479]},{"content":"HOST_E_TIMEOUT","pos":[1484,1498]},{"content":"The call timed out.","pos":[1499,1518]},{"content":"HOST_E_NOT_OWNER","pos":[1523,1539]},{"content":"The caller does not own the lock.","pos":[1540,1573]},{"content":"HOST_E_ABANDONED","pos":[1578,1594]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1595,1667]},{"content":"E_FAIL","pos":[1672,1678]},{"content":"An unknown catastrophic failure occurred.","pos":[1679,1720]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1721,1798]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[1799,1865]},{"pos":[1875,1882],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Threads are granted processing time using a round-robin system that is partly based on a thread's priority level.","pos":[1886,1999]},{"content":"<ph id=\"ph1\">`SetPriority`</ph> allows the CLR to set that thread priority level for the current task.","pos":[2000,2084],"source":"`SetPriority` allows the CLR to set that thread priority level for the current task."},{"content":"The following <ph id=\"ph1\">`newPriority`</ph> values are supported.","pos":[2085,2134],"source":" The following `newPriority` values are supported."},{"content":"THREAD_PRIORITY_ABOVE_NORMAL","pos":[2144,2172]},{"content":"THREAD_PRIORITY_BELOW_NORMAL","pos":[2182,2210]},{"content":"THREAD_PRIORITY_HIGHEST","pos":[2220,2243]},{"content":"THREAD_PRIORITY_IDLE","pos":[2253,2273]},{"content":"THREAD_PRIORITY_LOWEST","pos":[2283,2305]},{"content":"THREAD_PRIORITY_NORMAL","pos":[2315,2337]},{"content":"THREAD_PRIORITY_TIME_CRITICAL","pos":[2347,2376]},{"content":"The CLR calls <ph id=\"ph1\">`SetPriority`</ph> when the value of the <ph id=\"ph2\">&lt;xref:System.Threading.Thread.Priority%2A?displayProperty=fullName&gt;</ph> is modified by user code.","pos":[2383,2526],"source":"The CLR calls `SetPriority` when the value of the <xref:System.Threading.Thread.Priority%2A?displayProperty=fullName> is modified by user code."},{"content":"A host can define its own algorithms for thread priority assignment, and is free to ignore this request.","pos":[2527,2631]},{"pos":[2639,2898],"content":"[!NOTE]\n `SetPriority` does not report whether the thread priority level was changed. Call [IHostTask::GetPriority](../../../../docs/framework/unmanaged-api/hosting/ihosttask-getpriority-method.md) to determine the value of the task's thread priority level.","leadings":["","> "],"nodes":[{"content":"`SetPriority` does not report whether the thread priority level was changed. Call [IHostTask::GetPriority](../../../../docs/framework/unmanaged-api/hosting/ihosttask-getpriority-method.md) to determine the value of the task's thread priority level.","pos":[9,257],"nodes":[{"content":"<ph id=\"ph1\">`SetPriority`</ph> does not report whether the thread priority level was changed.","pos":[0,76],"source":"`SetPriority` does not report whether the thread priority level was changed."},{"content":"Call <bpt id=\"p1\">[</bpt>IHostTask::GetPriority<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-getpriority-method.md)</ept> to determine the value of the task's thread priority level.","pos":[77,248],"source":" Call [IHostTask::GetPriority](../../../../docs/framework/unmanaged-api/hosting/ihosttask-getpriority-method.md) to determine the value of the task's thread priority level."}]}]},{"content":"Thread priority level values are defined by the Win32 <ph id=\"ph1\">`SetThreadPriority`</ph> function.","pos":[2905,2988],"source":"Thread priority level values are defined by the Win32 `SetThreadPriority` function."},{"content":"For more information about thread priority, see the Windows Platform documentation.","pos":[2989,3072]},{"pos":[3081,3093],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3097,3201],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3208,3229],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[3236,3286],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[3293,3401],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[3410,3418],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICLRTask Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3457,3550],"source":"[ICLRTask Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>ICLRTaskManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3554,3661],"source":"[ICLRTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>IHostTask Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3665,3760],"source":"[IHostTask Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>GetPriority Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-getpriority-method.md)</ept><ph id=\"ph1\"> </ph>","pos":[3764,3867],"source":"[GetPriority Method](../../../../docs/framework/unmanaged-api/hosting/ihosttask-getpriority-method.md) "},{"content":"<bpt id=\"p1\">[</bpt>IHostTaskManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)</ept>","pos":[3871,3979],"source":"[IHostTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)"}]}