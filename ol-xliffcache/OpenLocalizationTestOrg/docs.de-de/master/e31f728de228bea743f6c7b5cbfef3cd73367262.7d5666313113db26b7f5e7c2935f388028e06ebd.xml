{"content":"---\ntitle: \"Range variable <variable> hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc36633\"\n  - \"vbc36633\"\nhelpviewer_keywords: \n  - \"BC36633\"\nms.assetid: 5d5470e4-3de5-49c2-8831-1087625f4a77\n---\n# Range variable \\<variable> hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression\nA range variable name specified in a `Select`, `From`, `Aggregate`, or `Let` clause duplicates the name of a range variable already specified previously in the query, or the name of a variable that is implicitly declared by the query, such as a field name or the name of an aggregate function.  \n  \n **Error ID:** BC36633  \n  \n## To correct this error  \n  \n-   Ensure that all range variables in a particular query scope have unique names. You can enclose a query in parentheses to ensure that nested queries have a unique scope.  \n  \n## See also\n\n- [Introduction to LINQ in Visual Basic](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)\n- [From Clause](../../../visual-basic/language-reference/queries/from-clause.md)\n- [Let Clause](../../../visual-basic/language-reference/queries/let-clause.md)\n- [Aggregate Clause](../../../visual-basic/language-reference/queries/aggregate-clause.md)\n- [Select Clause](../../../visual-basic/language-reference/queries/select-clause.md)\n","nodes":[{"pos":[4,320],"embed":true,"restype":"x-metadata","content":"title: \"Range variable <variable> hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc36633\"\n  - \"vbc36633\"\nhelpviewer_keywords: \n  - \"BC36633\"\nms.assetid: 5d5470e4-3de5-49c2-8831-1087625f4a77","nodes":[{"content":"Range variable <variable> hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression","nodes":[{"pos":[0,159],"content":"Range variable <ph id=\"ph1\">&lt;variable&gt;</ph> hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression","source":"Range variable <variable> hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[327,487],"content":"Range variable \\<variable> hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression","linkify":"Range variable \\<variable> hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression","nodes":[{"content":"Range variable <ph id=\"ph1\">\\&lt;</ph>variable&gt; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression","pos":[0,160],"source":"Range variable \\<variable> hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression"}]},{"pos":[488,781],"content":"A range variable name specified in a <ph id=\"ph1\">`Select`</ph>, <ph id=\"ph2\">`From`</ph>, <ph id=\"ph3\">`Aggregate`</ph>, or <ph id=\"ph4\">`Let`</ph> clause duplicates the name of a range variable already specified previously in the query, or the name of a variable that is implicitly declared by the query, such as a field name or the name of an aggregate function.","source":"A range variable name specified in a `Select`, `From`, `Aggregate`, or `Let` clause duplicates the name of a range variable already specified previously in the query, or the name of a variable that is implicitly declared by the query, such as a field name or the name of an aggregate function."},{"pos":[788,809],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36633","source":"**Error ID:** BC36633"},{"pos":[818,839],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Ensure that all range variables in a particular query scope have unique names.","pos":[849,927]},{"content":"You can enclose a query in parentheses to ensure that nested queries have a unique scope.","pos":[928,1017]},{"pos":[1026,1034],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1038,1164],"content":"<bpt id=\"p1\">[</bpt>Introduction to LINQ in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept>","source":"[Introduction to LINQ in Visual Basic](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)"},{"pos":[1167,1245],"content":"<bpt id=\"p1\">[</bpt>From Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/from-clause.md)</ept>","source":"[From Clause](../../../visual-basic/language-reference/queries/from-clause.md)"},{"pos":[1248,1324],"content":"<bpt id=\"p1\">[</bpt>Let Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/let-clause.md)</ept>","source":"[Let Clause](../../../visual-basic/language-reference/queries/let-clause.md)"},{"pos":[1327,1415],"content":"<bpt id=\"p1\">[</bpt>Aggregate Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/aggregate-clause.md)</ept>","source":"[Aggregate Clause](../../../visual-basic/language-reference/queries/aggregate-clause.md)"},{"pos":[1418,1500],"content":"<bpt id=\"p1\">[</bpt>Select Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/select-clause.md)</ept>","source":"[Select Clause](../../../visual-basic/language-reference/queries/select-clause.md)"}]}