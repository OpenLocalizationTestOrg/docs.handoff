<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6a0a0bcaba407d1e577e29c3692d8c9ad5d65c1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\how-to-create-a-custom-authorization-policy.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">308dde3564ad93f3ee42b4b27a10ef0aac0dd79d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea9ad156b2bf927fe883fa50287c99c0cc0b4a9b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create a Custom Authorization Policy | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Custom Authorization Policy</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Identity Model infrastructure in <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> supports a claim-based authorization model.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Claims are extracted from tokens, optionally processed by custom authorization policy, and then placed into an <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph> that can then be examined to make authorization decisions.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A custom policy can be used to transform claims from incoming tokens into claims expected by the application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this way, the application layer can be insulated from the details on the differing claims served up by the different token types that <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic shows how to implement a custom authorization policy and how to add that policy to the collection of policies used by a service.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To implement a custom authorization policy</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Define a new class that derives from <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Implement the read-only <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationComponent.Id%2A&gt;</ph> property by generating a unique string in the constructor for the class and returning that string whenever the property is accessed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Implement the read-only <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer%2A&gt;</ph> property by returning a <ph id="ph2">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> that represents the policy issuer.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This could be a <ph id="ph1">`ClaimSet`</ph> that represents the application or a built-in <ph id="ph2">`ClaimSet`</ph> (for example, the <ph id="ph3">`ClaimSet`</ph> returned by the static <ph id="ph4">&lt;xref:System.IdentityModel.Claims.ClaimSet.System%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%28System.IdentityModel.Policy.EvaluationContext%2CSystem.Object%40%29&gt;</ph> method as described in the following procedure.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To implement the Evaluate method</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Two parameters are passed to this method: an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph> class and an object reference.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the custom authorization policy adds <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> instances without regard to the current content of the <ph id="ph2">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph>, then add each <ph id="ph3">`ClaimSet`</ph> by calling the <ph id="ph4">&lt;xref:System.IdentityModel.Policy.EvaluationContext.AddClaimSet%28System.IdentityModel.Policy.IAuthorizationPolicy%2CSystem.IdentityModel.Claims.ClaimSet%29&gt;</ph> method and return <ph id="ph5">`true`</ph> from the <ph id="ph6">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returning <ph id="ph1">`true`</ph> indicates to the authorization infrastructure that the authorization policy has performed its work and does not need to be called again.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the custom authorization policy adds claim sets only if certain claims are already present in the <ph id="ph1">`EvaluationContext`</ph>, then look for those claims by examining the <ph id="ph2">`ClaimSet`</ph> instances returned by the <ph id="ph3">&lt;xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the claims are present, then add the new claim sets by calling the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.EvaluationContext.AddClaimSet%28System.IdentityModel.Policy.IAuthorizationPolicy%2CSystem.IdentityModel.Claims.ClaimSet%29&gt;</ph> method and, if no more claim sets are to be added, return <ph id="ph2">`true`</ph>, indicating to the authorization infrastructure that the authorization policy has completed its work.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the claims are not present, return <ph id="ph1">`false`</ph>, indicating that the authorization policy should be called again if other authorization policies add more claim sets to the <ph id="ph2">`EvaluationContext`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In more complex processing scenarios, the second parameter of the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%28System.IdentityModel.Policy.EvaluationContext%2CSystem.Object%40%29&gt;</ph> method is used to store a state variable that the authorization infrastructure will pass back during each subsequent call to the <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%28System.IdentityModel.Policy.EvaluationContext%2CSystem.Object%40%29&gt;</ph> method for a particular evaluation.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To specify a custom authorization policy through configuration</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Specify the type of the custom authorization policy in the <ph id="ph1">`policyType`</ph> attribute in the <ph id="ph2">`add`</ph> element in the <ph id="ph3">`authorizationPolicies`</ph> element in the <ph id="ph4">`serviceAuthorization`</ph> element.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To specify a custom authorization policy through code</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create an instance of the custom authorization policy.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Add the authorization policy instance to the list.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Repeat steps 2 and 3 for each custom authorization policy.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Assign a read-only version of the list to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomAuthPol#8<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthpol/cs/c_customauthpol.cs#8)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomAuthPol#8<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthpol/vb/source.vb#8)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example shows a complete <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>c_CustomAuthPol#5<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthpol/cs/c_customauthpol.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>c_CustomAuthPol#5<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthpol/vb/source.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Compare Claims<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-compare-claims.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a Custom Authorization Manager for a Service<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Authorization Policy<ept id="p1">](../../../../docs/framework/wcf/samples/authorization-policy.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>