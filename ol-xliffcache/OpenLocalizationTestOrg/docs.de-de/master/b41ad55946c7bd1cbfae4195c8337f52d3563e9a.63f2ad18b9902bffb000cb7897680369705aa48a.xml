{"content":"---\ntitle: \"How to: Give Your Control a Transparent Background | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"transparent backgrounds, custom controls\"\n  - \"custom controls [Windows Forms], transparent background\"\n  - \"transparency, Windows Forms custom controls\"\nms.assetid: 32433e63-f4e9-4305-9857-6de3edeb944a\ncaps.latest.revision: 23\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Give Your Control a Transparent Background\nIn earlier versions of the .NET Framework, controls didn't support setting transparent backcolors without first setting the <xref:System.Windows.Forms.Control.SetStyle%2A> method in the forms's constructor. In the current framework version, the backcolor for most controls can be set to <xref:System.Drawing.Color.Transparent%2A> in the **Properties** window at design time, or in code in the form's constructor.  \n  \n> [!NOTE]\n>  Windows Forms controls do not support true transparency. The background of a transparent Windows Forms control is painted by its parent.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Controls.Button> control doesn't support a transparent backcolor even when the <xref:System.Windows.Forms.ButtonBase.BackColor%2A> property is set to <xref:System.Drawing.Color.Transparent%2A>.  \n  \n### To give your control a transparent backcolor  \n  \n-   In the Properties window, choose the <xref:System.Windows.Forms.ButtonBase.BackColor%2A> property and set it to <xref:System.Drawing.Color.Transparent%2A>  \n  \n## See Also  \n <xref:System.Drawing.Color.FromArgb%2A>   \n [Developing Custom Windows Forms Controls with the .NET Framework](../../../../docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)   \n [Using Managed Graphics Classes](../../../../docs/framework/winforms/advanced/using-managed-graphics-classes.md)   \n [How to: Draw Opaque and Semitransparent Lines](../../../../docs/framework/winforms/advanced/how-to-draw-opaque-and-semitransparent-lines.md)","nodes":[{"pos":[4,591],"embed":true,"restype":"x-metadata","content":"title: \"How to: Give Your Control a Transparent Background | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"transparent backgrounds, custom controls\"\n  - \"custom controls [Windows Forms], transparent background\"\n  - \"transparency, Windows Forms custom controls\"\nms.assetid: 32433e63-f4e9-4305-9857-6de3edeb944a\ncaps.latest.revision: 23\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Give Your Control a Transparent Background | Microsoft Docs","nodes":[{"pos":[0,67],"content":"How to: Give Your Control a Transparent Background | Microsoft Docs","nodes":[{"content":"How to: Give Your Control a Transparent Background | Microsoft Docs","pos":[0,67]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[598,648],"content":"How to: Give Your Control a Transparent Background","linkify":"How to: Give Your Control a Transparent Background","nodes":[{"content":"How to: Give Your Control a Transparent Background","pos":[0,50]}]},{"content":"In earlier versions of the .NET Framework, controls didn't support setting transparent backcolors without first setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method in the forms's constructor.","pos":[649,855],"source":"In earlier versions of the .NET Framework, controls didn't support setting transparent backcolors without first setting the <xref:System.Windows.Forms.Control.SetStyle%2A> method in the forms's constructor."},{"content":"In the current framework version, the backcolor for most controls can be set to <ph id=\"ph1\">&lt;xref:System.Drawing.Color.Transparent%2A&gt;</ph> in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window at design time, or in code in the form's constructor.","pos":[856,1061],"source":" In the current framework version, the backcolor for most controls can be set to <xref:System.Drawing.Color.Transparent%2A> in the **Properties** window at design time, or in code in the form's constructor."},{"pos":[1069,1216],"content":"[!NOTE]\n Windows Forms controls do not support true transparency. The background of a transparent Windows Forms control is painted by its parent.","leadings":["","> "],"nodes":[{"content":"Windows Forms controls do not support true transparency. The background of a transparent Windows Forms control is painted by its parent.","pos":[9,145],"nodes":[{"content":"Windows Forms controls do not support true transparency.","pos":[0,56]},{"content":"The background of a transparent Windows Forms control is painted by its parent.","pos":[57,136]}]}]},{"pos":[1224,1453],"content":"[!NOTE]\n The <xref:System.Windows.Controls.Button> control doesn't support a transparent backcolor even when the <xref:System.Windows.Forms.ButtonBase.BackColor%2A> property is set to <xref:System.Drawing.Color.Transparent%2A>.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> control doesn't support a transparent backcolor even when the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ButtonBase.BackColor%2A&gt;</ph> property is set to <ph id=\"ph3\">&lt;xref:System.Drawing.Color.Transparent%2A&gt;</ph>.","pos":[9,227],"source":"The <xref:System.Windows.Controls.Button> control doesn't support a transparent backcolor even when the <xref:System.Windows.Forms.ButtonBase.BackColor%2A> property is set to <xref:System.Drawing.Color.Transparent%2A>."}]},{"pos":[1463,1507],"content":"To give your control a transparent backcolor","linkify":"To give your control a transparent backcolor","nodes":[{"content":"To give your control a transparent backcolor","pos":[0,44]}]},{"pos":[1517,1671],"content":"In the Properties window, choose the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ButtonBase.BackColor%2A&gt;</ph> property and set it to <ph id=\"ph2\">&lt;xref:System.Drawing.Color.Transparent%2A&gt;</ph>","source":"In the Properties window, choose the <xref:System.Windows.Forms.ButtonBase.BackColor%2A> property and set it to <xref:System.Drawing.Color.Transparent%2A>"},{"pos":[1680,1688],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Developing Custom Windows Forms Controls with the .NET Framework<ept id=\"p1\">](../../../../docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)</ept><ph id=\"ph1\"> </ph>","pos":[1736,1893],"source":"[Developing Custom Windows Forms Controls with the .NET Framework](../../../../docs/framework/winforms/controls/developing-custom-windows-forms-controls.md) "},{"content":"<bpt id=\"p1\">[</bpt>Using Managed Graphics Classes<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/using-managed-graphics-classes.md)</ept><ph id=\"ph1\"> </ph>","pos":[1897,2010],"source":"[Using Managed Graphics Classes](../../../../docs/framework/winforms/advanced/using-managed-graphics-classes.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Draw Opaque and Semitransparent Lines<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/how-to-draw-opaque-and-semitransparent-lines.md)</ept>","pos":[2014,2155],"source":"[How to: Draw Opaque and Semitransparent Lines](../../../../docs/framework/winforms/advanced/how-to-draw-opaque-and-semitransparent-lines.md)"}]}