<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="exporting-and-importing-metadata.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39b964584cde42e6569da35f8653042f6d7432cb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\exporting-and-importing-metadata.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3151474b4ee3231537be3fdab4016e8fc3c7fb08</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8826a9fb85d2c2ab78a0435e8154eb9817bb1309</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Exporting and Importing Metadata</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Exporting and Importing Metadata</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In Windows Communication Foundation (WCF), exporting metadata is the process of describing service endpoints and projecting them into a parallel, standardized representation that clients can use to understand how to use the service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Importing service metadata is the process of generating <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> instances or parts from service metadata.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Exporting Metadata</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To export metadata from <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> instances, use an implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> abstract class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlExporter&gt;</ph> type is the implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> abstract class included with WCF.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType&gt;</ph> type generates Web Services Description Language (WSDL) metadata with attached policy expressions encapsulated in a <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSet&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use a <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType&gt;</ph> instance to iteratively export metadata for <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> objects and <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can also export a collection of <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects and associate them with a specific service name.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can only use the <ph id="ph1">`WsdlExporter`</ph> to export metadata from <ph id="ph2">`ContractDescription`</ph> instances that contain common language runtime (CLR) type information, such as a <ph id="ph3">`ContractDescription`</ph> instance created using the <ph id="ph4">`ContractDescription.GetContract`</ph> method or created as part of the <ph id="ph5">`ServiceDescription`</ph> for a <ph id="ph6">`ServiceHost`</ph> instance.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You cannot use the <ph id="ph1">`WsdlExporter`</ph> to export metadata from <ph id="ph2">`ContractDescription`</ph> instances imported from service metadata or constructed without type information.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Importing Metadata</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Importing WSDL Documents</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To import service metadata in WCF, use an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> type is the implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class included with WCF.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> type imports WSDL metadata with attached policies bundled in a <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSet&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> type gives you control over how to import the metadata.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can import all of the endpoints, all of the bindings, or all of the contracts.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can import all of the endpoints associated with a specific WSDL service, binding, or port type.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also import the endpoint for a specific WSDL port, the binding for a specific WSDL binding or the contract for a specific WSDL port type.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> also exposes a <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A&gt;</ph> property that allows you to specify a set of contracts that do not need to be imported.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> uses the contracts in the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A&gt;</ph> property instead of importing a contract with the same qualified name from the metadata.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Importing Policies</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> type collects the policy expressions attached to the message, operation, and endpoint policy subjects and then uses the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> implementations in the <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A&gt;</ph> collection to import the policy expressions.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The policy import logic automatically handles policy references to policy expressions in the same WSDL document and is identified with a <ph id="ph1">`wsu:Id`</ph> or <ph id="ph2">`xml:id`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The policy import logic protects applications against circular policy references by limiting the size of a policy expression to 4096 nodes, where a node is a one of the following elements: <ph id="ph1">`wsp:Policy`</ph>, <ph id="ph2">`wsp:All`</ph>, <ph id="ph3">`wsp:ExactlyOne`</ph>, <ph id="ph4">`wsp:policyReference`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The policy import logic also automatically normalizes policy expressions.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Nested policy expressions and the <ph id="ph1">`wsp:Optional`</ph> attribute are not normalized.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The amount of normalization processing done is limited to 4096 steps, where each step yields a policy assertion, or a child element of a <ph id="ph1">`wsp:ExactlyOne`</ph> element.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> type tries up to 32 combinations of policy alternatives attached to the different WSDL policy subjects.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If no combination imports cleanly, the first combination is used to construct a partial custom binding.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Both the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> types expose an <ph id="ph3">`Errors`</ph> property that can contain a collection of error and warning messages encountered during the export and import processes, respectively, that can be used when implementing tools.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter&gt;</ph> type generally throws an exception for an exception caught during the import process and adds a corresponding error to its <ph id="ph2">`Errors`</ph> property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter.ImportAllContracts%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter.ImportAllBindings%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoints%2A&gt;</ph> methods, however, do not throw these exceptions, so you must check the <ph id="ph5">`Errors`</ph> property to determine if any issues occurred when calling these methods.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlExporter&gt;</ph> type rethrows any exceptions caught during the export process.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>These exceptions are not captured as errors in the <ph id="ph1">`Errors`</ph> property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Once the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlExporter&gt;</ph> throws an exception, it is in a faulted state and cannot be reused.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlExporter&gt;</ph> does add warnings to its <ph id="ph2">`Errors`</ph> property when an operation cannot be exported because it uses wildcard actions and when duplicate binding names are encountered.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Import Metadata into Service Endpoints<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-import-metadata-into-service-endpoints.md)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Describes how to import downloaded metadata into description objects.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Export Metadata from Service Endpoints<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-export-metadata-from-service-endpoints.md)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Describes how to export description objects into metadata.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ServiceDescription and WSDL Reference<ept id="p1">](../../../../docs/framework/wcf/feature-details/servicedescription-and-wsdl-reference.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Describes the mapping between the description objects and WSDL.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Use Svcutil.exe to Export Metadata from Compiled Service Code<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-export-metadata-from-compiled-service-code.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Describes the use of Svcutil.exe to export metadata for services, contracts, and data types in compiled assemblies.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Contract Schema Reference<ept id="p1">](../../../../docs/framework/wcf/feature-details/data-contract-schema-reference.md)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Describes the subset of the XML Schema (XSD) used by <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> to describe common language run-time (CLR) types for XML serialization.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Reference</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Exporting Custom Metadata for a WCF Extension<ept id="p1">](../../../../docs/framework/wcf/extending/exporting-custom-metadata-for-a-wcf-extension.md)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Importing Custom Metadata for a WCF Extension<ept id="p1">](../../../../docs/framework/wcf/extending/importing-custom-metadata-for-a-wcf-extension.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>