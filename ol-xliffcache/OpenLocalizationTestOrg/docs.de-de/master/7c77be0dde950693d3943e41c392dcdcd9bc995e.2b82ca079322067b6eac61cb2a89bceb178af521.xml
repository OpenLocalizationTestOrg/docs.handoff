{"content":"---\ntitle: \"ISymUnmanagedMethod::GetRootScope Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedMethod.GetRootScope\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedMethod::GetRootScope\"\nhelpviewer_keywords: \n  - \"ISymUnmanagedMethod::GetRootScope method [.NET Framework debugging]\"\n  - \"GetRootScope method [.NET Framework debugging]\"\nms.assetid: 7d58caac-2e75-4dfa-9249-32d8a624b247\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ISymUnmanagedMethod::GetRootScope Method\nGets the root lexical scope within this method. This scope encloses the entire method.  \n  \n## Syntax  \n  \n```  \nHRESULT GetRootScope(  \n    [out, retval] ISymUnmanagedScope** pRetVal);  \n```  \n  \n## Parameters  \n `pRetVal`  \n [out] A pointer that is set to the returned [ISymUnmanagedScope](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedscope-interface.md) interface.  \n  \n## Return Value  \n S_OK if the method succeeds; otherwise, E_FAIL or some other error code.  \n  \n## Requirements  \n **Header:** CorSym.idl, CorSym.h  \n  \n## See also\n\n- [ISymUnmanagedMethod Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md)\n","nodes":[{"pos":[4,499],"embed":true,"restype":"x-metadata","content":"title: \"ISymUnmanagedMethod::GetRootScope Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedMethod.GetRootScope\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedMethod::GetRootScope\"\nhelpviewer_keywords: \n  - \"ISymUnmanagedMethod::GetRootScope method [.NET Framework debugging]\"\n  - \"GetRootScope method [.NET Framework debugging]\"\nms.assetid: 7d58caac-2e75-4dfa-9249-32d8a624b247\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ISymUnmanagedMethod::GetRootScope Method","nodes":[{"pos":[0,40],"content":"ISymUnmanagedMethod::GetRootScope Method","nodes":[{"content":"ISymUnmanagedMethod::GetRootScope Method","pos":[0,40]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[506,546],"content":"ISymUnmanagedMethod::GetRootScope Method","linkify":"ISymUnmanagedMethod::GetRootScope Method","nodes":[{"content":"ISymUnmanagedMethod::GetRootScope Method","pos":[0,40]}]},{"content":"Gets the root lexical scope within this method.","pos":[547,594]},{"content":"This scope encloses the entire method.","pos":[595,633]},{"pos":[642,648],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[747,757],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] A pointer that is set to the returned <bpt id=\"p1\">[</bpt>ISymUnmanagedScope<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedscope-interface.md)</ept> interface.","pos":[774,935],"source":"[out] A pointer that is set to the returned [ISymUnmanagedScope](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedscope-interface.md) interface."},{"pos":[944,956],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the method succeeds; otherwise, E_FAIL or some other error code.","pos":[960,1032]},{"pos":[1041,1053],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1057,1089],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl, CorSym.h","source":"**Header:** CorSym.idl, CorSym.h"},{"pos":[1098,1106],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1110,1228],"content":"<bpt id=\"p1\">[</bpt>ISymUnmanagedMethod Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md)</ept>","source":"[ISymUnmanagedMethod Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md)"}]}