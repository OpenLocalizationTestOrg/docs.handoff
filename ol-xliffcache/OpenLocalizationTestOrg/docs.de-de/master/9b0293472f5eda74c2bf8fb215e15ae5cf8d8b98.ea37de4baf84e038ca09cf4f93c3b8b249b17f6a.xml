{"content":"---\ntitle: \"Generic parameters used as optional parameter types must be class constrained\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32124\"\n  - \"bc32124\"\nhelpviewer_keywords: \n  - \"BC32124\"\nms.assetid: 55aa8b2a-9ce3-4620-a710-2f9b0feb6143\n---\n# Generic parameters used as optional parameter types must be class constrained\nA procedure is declared with an optional parameter that uses a type parameter that is not constrained to be a reference type.  \n  \n You must always supply a default value for each optional parameter. If the parameter is of a reference type, the optional value must be `Nothing`, which is a valid value for any reference type. However, if the parameter is of a value type, that type must be an elementary data type predefined by Visual Basic. This is because a composite value type, such as a user-defined structure, has no valid default value.  \n  \n When you use a type parameter for an optional parameter, you must guarantee that it is of a reference type to avoid the possibility of a value type with no valid default value. This means you must constrain the type parameter either with the `Class` keyword or with the name of a specific class.  \n  \n **Error ID:** BC32124  \n  \n## To correct this error  \n  \n-   Constrain the type parameter to accept only a reference type, or do not use it for the optional parameter.  \n  \n## See also\n\n- [Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n- [Type List](../../../visual-basic/language-reference/statements/type-list.md)\n- [Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)\n- [Optional Parameters](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)\n- [Structures](../../../visual-basic/programming-guide/language-features/data-types/structures.md)\n- [Nothing](../../../visual-basic/language-reference/nothing.md)\n","nodes":[{"pos":[4,238],"embed":true,"restype":"x-metadata","content":"title: \"Generic parameters used as optional parameter types must be class constrained\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32124\"\n  - \"bc32124\"\nhelpviewer_keywords: \n  - \"BC32124\"\nms.assetid: 55aa8b2a-9ce3-4620-a710-2f9b0feb6143","nodes":[{"content":"Generic parameters used as optional parameter types must be class constrained","nodes":[{"pos":[0,77],"content":"Generic parameters used as optional parameter types must be class constrained","nodes":[{"content":"Generic parameters used as optional parameter types must be class constrained","pos":[0,77]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[245,322],"content":"Generic parameters used as optional parameter types must be class constrained","linkify":"Generic parameters used as optional parameter types must be class constrained","nodes":[{"content":"Generic parameters used as optional parameter types must be class constrained","pos":[0,77]}]},{"content":"A procedure is declared with an optional parameter that uses a type parameter that is not constrained to be a reference type.","pos":[323,448]},{"content":"You must always supply a default value for each optional parameter.","pos":[455,522]},{"content":"If the parameter is of a reference type, the optional value must be <ph id=\"ph1\">`Nothing`</ph>, which is a valid value for any reference type.","pos":[523,648],"source":" If the parameter is of a reference type, the optional value must be `Nothing`, which is a valid value for any reference type."},{"content":"However, if the parameter is of a value type, that type must be an elementary data type predefined by Visual Basic.","pos":[649,764]},{"content":"This is because a composite value type, such as a user-defined structure, has no valid default value.","pos":[765,866]},{"content":"When you use a type parameter for an optional parameter, you must guarantee that it is of a reference type to avoid the possibility of a value type with no valid default value.","pos":[873,1049]},{"content":"This means you must constrain the type parameter either with the <ph id=\"ph1\">`Class`</ph> keyword or with the name of a specific class.","pos":[1050,1168],"source":" This means you must constrain the type parameter either with the `Class` keyword or with the name of a specific class."},{"pos":[1175,1196],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32124","source":"**Error ID:** BC32124"},{"pos":[1205,1226],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Constrain the type parameter to accept only a reference type, or do not use it for the optional parameter.","pos":[1236,1342]},{"pos":[1351,1359],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1363,1481],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"},{"pos":[1484,1561],"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../../visual-basic/language-reference/statements/type-list.md)</ept>","source":"[Type List](../../../visual-basic/language-reference/statements/type-list.md)"},{"pos":[1564,1653],"content":"<bpt id=\"p1\">[</bpt>Class Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/class-statement.md)</ept>","source":"[Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)"},{"pos":[1656,1770],"content":"<bpt id=\"p1\">[</bpt>Optional Parameters<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)</ept>","source":"[Optional Parameters](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)"},{"pos":[1773,1869],"content":"<bpt id=\"p1\">[</bpt>Structures<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept>","source":"[Structures](../../../visual-basic/programming-guide/language-features/data-types/structures.md)"},{"pos":[1872,1934],"content":"<bpt id=\"p1\">[</bpt>Nothing<ept id=\"p1\">](../../../visual-basic/language-reference/nothing.md)</ept>","source":"[Nothing](../../../visual-basic/language-reference/nothing.md)"}]}