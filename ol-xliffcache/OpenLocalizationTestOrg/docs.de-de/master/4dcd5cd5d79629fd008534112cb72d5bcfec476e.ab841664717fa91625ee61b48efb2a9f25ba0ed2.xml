{"content":"---\ntitle: \"How to: Collapse and Hide Sections of Code (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Visual Basic, code collapsing\"\n  - \"Visual Basic, code hiding\"\n  - \"Visual Basic code, collapsing and hiding\"\nms.assetid: b770e8f5-e07d-491a-ab4b-a977980f9ba2\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Collapse and Hide Sections of Code (Visual Basic)\nThe `#Region` directive enables you to collapse and hide sections of code in [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] files. The `#Region` directive lets you specify a block of code that you can expand or collapse when using the [!INCLUDE[vsprvs](../../../csharp/includes/vsprvs_md.md)] code editor. The ability to hide code selectively makes your files more manageable and easier to read. For more information, see [Outlining](https://docs.microsoft.com/visualstudio/ide/outlining).  \n  \n `#Region` directives support code block semantics such as `#If...#End If`. This means they cannot begin in one block and end in another; the start and end must be in the same block. `#Region` directives are not supported within functions.  \n  \n### To collapse and hide a section of code  \n  \n-   Place the section of code between the `#Region` and `#End Region` statements, as in the following example:  \n  \n     [!code-vb[VbVbalrConditionalComp#6](../../../visual-basic/language-reference/directives/codesnippet/VisualBasic/how-to-collapse-and-hide-sections-of-code_1.vb)]  \n  \n     The `#Region` block can be used multiple times in a code file; thus, users can define their own blocks of procedures and classes that can, in turn, be collapsed. `#Region` blocks can also be nested within other `#Region` blocks.  \n  \n    > [!NOTE]\n    >  Hiding code does not prevent it from being compiled and does not affect `#If...#End If` statements.  \n  \n## See Also  \n [Conditional Compilation](../../../visual-basic/programming-guide/program-structure/conditional-compilation.md)   \n [#Region Directive](../../../visual-basic/language-reference/directives/region-directive.md)   \n [#If...Then...#Else Directives](../../../visual-basic/language-reference/directives/if-then-else-directives.md)   \n [Outlining](https://docs.microsoft.com/visualstudio/ide/outlining)","nodes":[{"pos":[4,689],"nodes":[{"content":"How to: Collapse and Hide Sections of Code (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,74],"content":"How to: Collapse and Hide Sections of Code (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Collapse and Hide Sections of Code (Visual Basic) | Microsoft Docs","pos":[0,74]}]}],"pos":[6,83],"yaml":true}],"content":"title: \"How to: Collapse and Hide Sections of Code (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Visual Basic, code collapsing\"\n  - \"Visual Basic, code hiding\"\n  - \"Visual Basic code, collapsing and hiding\"\nms.assetid: b770e8f5-e07d-491a-ab4b-a977980f9ba2\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[696,753],"content":"How to: Collapse and Hide Sections of Code (Visual Basic)","linkify":"How to: Collapse and Hide Sections of Code (Visual Basic)","nodes":[{"content":"How to: Collapse and Hide Sections of Code (Visual Basic)","pos":[0,57]}]},{"content":"The <ph id=\"ph1\">`#Region`</ph> directive enables you to collapse and hide sections of code in <ph id=\"ph2\">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> files.","pos":[754,927],"source":"The `#Region` directive enables you to collapse and hide sections of code in [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] files."},{"content":"The <ph id=\"ph1\">`#Region`</ph> directive lets you specify a block of code that you can expand or collapse when using the <ph id=\"ph2\">[!INCLUDE[vsprvs](../../../csharp/includes/vsprvs_md.md)]</ph> code editor.","pos":[928,1102],"source":" The `#Region` directive lets you specify a block of code that you can expand or collapse when using the [!INCLUDE[vsprvs](../../../csharp/includes/vsprvs_md.md)] code editor."},{"content":"The ability to hide code selectively makes your files more manageable and easier to read.","pos":[1103,1192]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Outlining<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/ide/outlining)</ept>.","pos":[1193,1286],"source":" For more information, see [Outlining](https://docs.microsoft.com/visualstudio/ide/outlining)."},{"content":"<ph id=\"ph1\">`#Region`</ph> directives support code block semantics such as <ph id=\"ph2\">`#If...#End If`</ph>.","pos":[1293,1367],"source":"`#Region` directives support code block semantics such as `#If...#End If`."},{"content":"This means they cannot begin in one block and end in another; the start and end must be in the same block.","pos":[1368,1474]},{"content":"<ph id=\"ph1\">`#Region`</ph> directives are not supported within functions.","pos":[1475,1531],"source":"`#Region` directives are not supported within functions."},{"pos":[1541,1579],"content":"To collapse and hide a section of code","linkify":"To collapse and hide a section of code","nodes":[{"content":"To collapse and hide a section of code","pos":[0,38]}]},{"pos":[1589,1695],"content":"Place the section of code between the <ph id=\"ph1\">`#Region`</ph> and <ph id=\"ph2\">`#End Region`</ph> statements, as in the following example:","source":"Place the section of code between the `#Region` and `#End Region` statements, as in the following example:"},{"pos":[1706,1866],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrConditionalComp#6<ept id=\"p2\">](../../../visual-basic/language-reference/directives/codesnippet/VisualBasic/how-to-collapse-and-hide-sections-of-code_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrConditionalComp#6](../../../visual-basic/language-reference/directives/codesnippet/VisualBasic/how-to-collapse-and-hide-sections-of-code_1.vb)]"},{"content":"The <ph id=\"ph1\">`#Region`</ph> block can be used multiple times in a code file; thus, users can define their own blocks of procedures and classes that can, in turn, be collapsed.","pos":[1877,2038],"source":"The `#Region` block can be used multiple times in a code file; thus, users can define their own blocks of procedures and classes that can, in turn, be collapsed."},{"content":"<ph id=\"ph1\">`#Region`</ph> blocks can also be nested within other <ph id=\"ph2\">`#Region`</ph> blocks.","pos":[2039,2105],"source":"`#Region` blocks can also be nested within other `#Region` blocks."},{"pos":[2117,2231],"content":"[!NOTE]\nHiding code does not prevent it from being compiled and does not affect `#If...#End If` statements.","leadings":["","    >  "],"nodes":[{"content":"Hiding code does not prevent it from being compiled and does not affect <ph id=\"ph1\">`#If...#End If`</ph> statements.","pos":[8,107],"source":"Hiding code does not prevent it from being compiled and does not affect `#If...#End If` statements."}]},{"pos":[2240,2248],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Conditional Compilation<ept id=\"p1\">](../../../visual-basic/programming-guide/program-structure/conditional-compilation.md)</ept><ph id=\"ph1\"> </ph>","pos":[2252,2364],"source":"[Conditional Compilation](../../../visual-basic/programming-guide/program-structure/conditional-compilation.md) "},{"content":"<bpt id=\"p1\">[</bpt>#Region Directive<ept id=\"p1\">](../../../visual-basic/language-reference/directives/region-directive.md)</ept><ph id=\"ph1\"> </ph>","pos":[2368,2461],"source":"[#Region Directive](../../../visual-basic/language-reference/directives/region-directive.md) "},{"content":"<bpt id=\"p1\">[</bpt>#If...Then...#Else Directives<ept id=\"p1\">](../../../visual-basic/language-reference/directives/if-then-else-directives.md)</ept><ph id=\"ph1\"> </ph>","pos":[2465,2577],"source":"[#If...Then...#Else Directives](../../../visual-basic/language-reference/directives/if-then-else-directives.md) "},{"content":"<bpt id=\"p1\">[</bpt>Outlining<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/ide/outlining)</ept>","pos":[2581,2647],"source":"[Outlining](https://docs.microsoft.com/visualstudio/ide/outlining)"}]}