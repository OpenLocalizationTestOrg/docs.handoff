{"content":"---\ntitle: \"IHostMemoryManager::VirtualProtect Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IHostMemoryManager.VirtualProtect\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostMemoryManager::VirtualProtect\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IHostMemoryManager::VirtualProtect method [.NET Framework hosting]\"\n  - \"VirtualProtect method [.NET Framework hosting]\"\nms.assetid: 13be0299-df0d-4951-aabf-0676a30b385f\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# IHostMemoryManager::VirtualProtect Method\nServes as a logical wrapper for the corresponding Win32 function. The Win32 implementation of `VirtualProtect` changes the protection on a region of committed pages in the virtual address space of the calling process.  \n  \n## Syntax  \n  \n```  \nHRESULT VirtualProtect (  \n    [in]  void*   lpAddress,  \n    [in]  SIZE_T  dwSize,  \n    [in]  DWORD   flNewProtect,  \n    [out] DWORD*  pflOldProtect  \n);  \n```  \n  \n#### Parameters  \n `lpAddress`  \n [in] A pointer to the base address of the virtual memory whose protection attributes are to be changed.  \n  \n `dwSize`  \n [in] The size, in bytes, of the region of memory pages to be changed.  \n  \n `flNewProtect`  \n [in] The type of memory protection to apply.  \n  \n `pflOldProtect`  \n [out] A pointer to the previous memory protection value.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`VirtualProtect` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n  \n## Remarks  \n This implementation of `VirtualProtect` returns an HRESULT value, while the Win32 implementation returns a non-zero value to indicate success, and a zero value to indicate failure. For more information, see the Windows Platform documentation.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)","nodes":[{"pos":[12,70],"content":"IHostMemoryManager::VirtualProtect Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IHostMemoryManager::VirtualProtect Method | Microsoft Docs","pos":[0,58]}]},{"pos":[732,773],"content":"IHostMemoryManager::VirtualProtect Method","linkify":"IHostMemoryManager::VirtualProtect Method","nodes":[{"content":"IHostMemoryManager::VirtualProtect Method","pos":[0,41]}]},{"content":"Serves as a logical wrapper for the corresponding Win32 function.","pos":[774,839]},{"content":"The Win32 implementation of <ph id=\"ph1\">`VirtualProtect`</ph> changes the protection on a region of committed pages in the virtual address space of the calling process.","pos":[840,991],"source":" The Win32 implementation of `VirtualProtect` changes the protection on a region of committed pages in the virtual address space of the calling process."},{"pos":[1000,1006],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1191,1201],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer to the base address of the virtual memory whose protection attributes are to be changed.","pos":[1220,1323]},{"content":"[in] The size, in bytes, of the region of memory pages to be changed.","pos":[1342,1411]},{"content":"[in] The type of memory protection to apply.","pos":[1436,1480]},{"content":"[out] A pointer to the previous memory protection value.","pos":[1506,1562]},{"pos":[1571,1583],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1590,1597]},{"content":"Description","pos":[1598,1609]},{"content":"S_OK","pos":[1650,1654]},{"pos":[1655,1694],"content":"<ph id=\"ph1\">`VirtualProtect`</ph> returned successfully.","source":"`VirtualProtect` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1699,1721]},{"content":"The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1722,1886]},{"content":"HOST_E_TIMEOUT","pos":[1891,1905]},{"content":"The call timed out.","pos":[1906,1925]},{"content":"HOST_E_NOT_OWNER","pos":[1930,1946]},{"content":"The caller does not own the lock.","pos":[1947,1980]},{"content":"HOST_E_ABANDONED","pos":[1985,2001]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[2002,2074]},{"content":"E_FAIL","pos":[2079,2085]},{"content":"An unknown catastrophic failure occurred.","pos":[2086,2127]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[2128,2205]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[2206,2272]},{"pos":[2282,2289],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This implementation of <ph id=\"ph1\">`VirtualProtect`</ph> returns an HRESULT value, while the Win32 implementation returns a non-zero value to indicate success, and a zero value to indicate failure.","pos":[2293,2473],"source":"This implementation of `VirtualProtect` returns an HRESULT value, while the Win32 implementation returns a non-zero value to indicate success, and a zero value to indicate failure."},{"content":"For more information, see the Windows Platform documentation.","pos":[2474,2535]},{"pos":[2544,2556],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2560,2664],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2671,2692],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2699,2749],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2756,2864],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[2873,2881],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2885,2997],"content":"<bpt id=\"p1\">[</bpt>IHostMemoryManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)</ept>","source":"[IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)"}]}