{"content":"---\ntitle: \"AddImport Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"AddImport\"\n  - \"IALink.AddImport\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"AddImport\"\nhelpviewer_keywords: \n  - \"AddImport method\"\nms.assetid: 4fedf8a0-08c8-43d0-aa00-20f2a521c991\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# AddImport Method\nAdds imports to the assembly.  \n  \n## Syntax  \n  \n```  \nHRESULT AddImport(  \n    mdAssembly      AssemblyID,  \n    mdToken         ImportToken,  \n    DWORD           dwFlags,  \n    mdFile*         pFileToken  \n) PURE;  \n```  \n  \n## Parameters  \n `AssemblyID`  \n Unique ID of assembly to be augmented.  \n  \n `ImportToken`  \n Unique ID, retrieved from [ImportFile Method](../../../../docs/framework/unmanaged-api/alink/importfile-method.md), of file to be imported.  \n  \n `dwFlags`  \n COM+ FileDef flags such as `ffContainsNoMetaData` and `ffWriteable`. `dwFlags` is passed to [DefineFile Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-definefile-method.md).  \n  \n `pFileToken`  \n Pointer to token that receives the ID for the resulting file.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h  \n  \n## See also\n\n- [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)\n- [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)\n- [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)\n","nodes":[{"pos":[4,340],"embed":true,"restype":"x-metadata","content":"title: \"AddImport Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"AddImport\"\n  - \"IALink.AddImport\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"AddImport\"\nhelpviewer_keywords: \n  - \"AddImport method\"\nms.assetid: 4fedf8a0-08c8-43d0-aa00-20f2a521c991\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"AddImport Method","nodes":[{"pos":[0,16],"content":"AddImport Method","nodes":[{"content":"AddImport Method","pos":[0,16]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[347,363],"content":"AddImport Method","linkify":"AddImport Method","nodes":[{"content":"AddImport Method","pos":[0,16]}]},{"content":"Adds imports to the assembly.","pos":[364,393]},{"pos":[402,408],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[596,606],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Unique ID of assembly to be augmented.","pos":[626,664]},{"content":"Unique ID, retrieved from <bpt id=\"p1\">[</bpt>ImportFile Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/importfile-method.md)</ept>, of file to be imported.","pos":[688,827],"source":"Unique ID, retrieved from [ImportFile Method](../../../../docs/framework/unmanaged-api/alink/importfile-method.md), of file to be imported."},{"content":"COM+ FileDef flags such as <ph id=\"ph1\">`ffContainsNoMetaData`</ph> and <ph id=\"ph2\">`ffWriteable`</ph>.","pos":[847,915],"source":"COM+ FileDef flags such as `ffContainsNoMetaData` and `ffWriteable`."},{"content":"<ph id=\"ph1\">`dwFlags`</ph> is passed to <bpt id=\"p1\">[</bpt>DefineFile Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-definefile-method.md)</ept>.","pos":[916,1053],"source":"`dwFlags` is passed to [DefineFile Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-definefile-method.md)."},{"content":"Pointer to token that receives the ID for the resulting file.","pos":[1076,1137]},{"pos":[1146,1158],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1162,1198]},{"pos":[1207,1219],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h","pos":[1223,1239]},{"pos":[1248,1256],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1260,1346],"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept>","source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)"},{"pos":[1349,1437],"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept>","source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)"},{"pos":[1440,1508],"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}