<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ajax-service-using-http-post.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df199b40a4a9ebb9a36cea7234b484273348cd9e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\ajax-service-using-http-post.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb59862e6d655c18113f8235115dec5e19c1205c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8e646f1dc6189a37f7b27a46c5f9863e15fe27e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>AJAX Service Using HTTP POST</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>AJAX Service Using HTTP POST</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to use Windows Communication Foundation (WCF) to create an <ph id="ph1">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> Asynchronous JavaScript and XML (AJAX) service that uses HTTP POST.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An AJAX service is one that you can access by using basic JavaScript code from a Web browser client.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This sample builds on the <bpt id="p1">[</bpt>Basic AJAX Service<ept id="p1">](../../../../docs/framework/wcf/samples/basic-ajax-service.md)</ept> sample; the only difference between the two samples is the use of HTTP POST instead of HTTP GET.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>AJAX support in Windows Communication Foundation (WCF) is optimized for use with ASP.NET AJAX through the <ph id="ph1">`ScriptManager`</ph> control.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For an example of using WCF with ASP.NET AJAX, see the <bpt id="p1">[</bpt>Ajax Samples<ept id="p1">](../../../../docs/framework/wcf/samples/ajax-service-using-http-post.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The setup procedure and build instructions for this sample are located at the end of this topic.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The service in the following sample is a WCF service with no AJAX-specific code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> attribute is applied on an operation, or the <ph id="ph2">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> attribute is not applied, the default HTTP verb ("POST") is used.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>POST requests are harder to construct than GET requests, but they are not cached; use POST requests for all operations where caching is not appropriate.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create an AJAX endpoint on the service by using the <ph id="ph1">&lt;xref:System.ServiceModel.Activation.WebScriptServiceHostFactory&gt;</ph>, just as in the Basic AJAX Service sample.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Unlike GET requests, you cannot invoke POST services from the browser.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, navigating to <ph id="ph1">`http://localhost/ServiceModelSamples/service.svc/Add?n1=100&amp;n2=200`</ph> results in an error, because the POST service expects the <ph id="ph2">`n1`</ph> and <ph id="ph3">`n2`</ph> parameters to be sent in the message body in the JSON format, and not in the URL.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The client Web page PostAjaxClientPage.aspx contains ASP.NET code to invoke the service whenever the user clicks one of the operation buttons on the page.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The service responds in the same way as in the <bpt id="p1">[</bpt>Basic AJAX Service<ept id="p1">](../../../../docs/framework/wcf/samples/basic-ajax-service.md)</ept> sample, with the GET request.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your computer.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all Windows Communication Foundation (WCF) and <ph id="ph1">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To set up, build, and run the sample</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Ensure that you perform the setup instructions <bpt id="p1">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id="p1">](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Build the solution PostAjaxService.sln as described in <bpt id="p1">[</bpt>Building the Windows Communication Foundation Samples<ept id="p1">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Navigate to <ph id="ph1">`http://localhost/ServiceModelSamples/PostAjaxClientPage.aspx`</ph> (do not open PostAjaxClientPage.aspx in the browser from the project directory).</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>