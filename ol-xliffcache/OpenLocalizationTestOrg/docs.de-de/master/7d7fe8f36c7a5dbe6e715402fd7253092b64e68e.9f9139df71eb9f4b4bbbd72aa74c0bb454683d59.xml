{"content":"---\ntitle: \"ISymUnmanagedWriter::SetScopeRange Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedWriter.SetScopeRange\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedWriter::SetScopeRange\"\nhelpviewer_keywords: \n  - \"SetScopeRange method [.NET Framework debugging]\"\n  - \"ISymUnmanagedWriter::SetScopeRange method [.NET Framework debugging]\"\nms.assetid: d4d98676-444b-46ca-bfe6-0d827385cd22\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ISymUnmanagedWriter::SetScopeRange Method\nDefines the offset range for the specified lexical scope. The scope becomes the new current scope and is pushed onto a stack of scopes. Scopes must form a hierarchy. Siblings are not allowed to overlap.  \n  \n## Syntax  \n  \n```  \nHRESULT OpenScope(  \n    [in] ULONG32  scopeID,  \n    [in] ULONG32  startOffset,  \n    [in] ULONG32  endOffset);  \n```  \n  \n## Parameters  \n `scopeId`  \n [in] The scope identifier for the scope.  \n  \n `startOffset`  \n [in] The offset, in bytes, of the first instruction in the lexical scope from the beginning of the method.  \n  \n `endOffset`  \n [in] The offset, in bytes, of the last instruction in the lexical scope from the beginning of the method.  \n  \n## Return Value  \n S_OK if the method succeeds; otherwise, E_FAIL or some other error code.  \n  \n## Remarks  \n [ISymUnmanagedWriter::OpenScope](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-openscope-method.md) returns an opaque scope identifier that can be used with `ISymUnmanagedWriter::SetScopeRange` to define a scope's starting and ending offset at a later time. In this case, the offsets passed to `ISymUnmanagedWriter::OpenScope` and [ISymUnmanagedWriter::CloseScope](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-closescope-method.md) are ignored. Scope identifiers are only valid in the current method.  \n  \n## Requirements  \n **Header:** CorSym.idl, CorSym.h  \n  \n## See also\n\n- [ISymUnmanagedWriter Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md)\n","nodes":[{"pos":[4,504],"embed":true,"restype":"x-metadata","content":"title: \"ISymUnmanagedWriter::SetScopeRange Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedWriter.SetScopeRange\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedWriter::SetScopeRange\"\nhelpviewer_keywords: \n  - \"SetScopeRange method [.NET Framework debugging]\"\n  - \"ISymUnmanagedWriter::SetScopeRange method [.NET Framework debugging]\"\nms.assetid: d4d98676-444b-46ca-bfe6-0d827385cd22\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ISymUnmanagedWriter::SetScopeRange Method","nodes":[{"pos":[0,41],"content":"ISymUnmanagedWriter::SetScopeRange Method","nodes":[{"content":"ISymUnmanagedWriter::SetScopeRange Method","pos":[0,41]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[511,552],"content":"ISymUnmanagedWriter::SetScopeRange Method","linkify":"ISymUnmanagedWriter::SetScopeRange Method","nodes":[{"content":"ISymUnmanagedWriter::SetScopeRange Method","pos":[0,41]}]},{"content":"Defines the offset range for the specified lexical scope.","pos":[553,610]},{"content":"The scope becomes the new current scope and is pushed onto a stack of scopes.","pos":[611,688]},{"content":"Scopes must form a hierarchy.","pos":[689,718]},{"content":"Siblings are not allowed to overlap.","pos":[719,755]},{"pos":[764,770],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[909,919],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The scope identifier for the scope.","pos":[936,976]},{"content":"[in] The offset, in bytes, of the first instruction in the lexical scope from the beginning of the method.","pos":[1000,1106]},{"content":"[in] The offset, in bytes, of the last instruction in the lexical scope from the beginning of the method.","pos":[1128,1233]},{"pos":[1242,1254],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the method succeeds; otherwise, E_FAIL or some other error code.","pos":[1258,1330]},{"pos":[1339,1346],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<bpt id=\"p1\">[</bpt>ISymUnmanagedWriter::OpenScope<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-openscope-method.md)</ept> returns an opaque scope identifier that can be used with <ph id=\"ph1\">`ISymUnmanagedWriter::SetScopeRange`</ph> to define a scope's starting and ending offset at a later time.","pos":[1350,1634],"source":"[ISymUnmanagedWriter::OpenScope](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-openscope-method.md) returns an opaque scope identifier that can be used with `ISymUnmanagedWriter::SetScopeRange` to define a scope's starting and ending offset at a later time."},{"content":"In this case, the offsets passed to <ph id=\"ph1\">`ISymUnmanagedWriter::OpenScope`</ph> and <bpt id=\"p1\">[</bpt>ISymUnmanagedWriter::CloseScope<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-closescope-method.md)</ept> are ignored.","pos":[1635,1849],"source":" In this case, the offsets passed to `ISymUnmanagedWriter::OpenScope` and [ISymUnmanagedWriter::CloseScope](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-closescope-method.md) are ignored."},{"content":"Scope identifiers are only valid in the current method.","pos":[1850,1905]},{"pos":[1914,1926],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1930,1962],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl, CorSym.h","source":"**Header:** CorSym.idl, CorSym.h"},{"pos":[1971,1979],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1983,2101],"content":"<bpt id=\"p1\">[</bpt>ISymUnmanagedWriter Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md)</ept>","source":"[ISymUnmanagedWriter Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md)"}]}