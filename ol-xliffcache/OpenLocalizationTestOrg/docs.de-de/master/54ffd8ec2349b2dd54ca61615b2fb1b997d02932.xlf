<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="message-flow-overview.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54ffd8ec2349b2dd54ca61615b2fb1b997d02932</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\diagnostics\message-flow-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83f9ed60fd0ea573e05af6eed78557dd090e9d8a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8cedd67abff846d00427d29fe059ad7385e7e5f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Message Flow Overview</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Message Flow Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In a distributed system containing interconnected services, it is necessary to determine causal relationships between the services.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It is important to understand the various components that were part of a request flow to support critical scenarios such as health monitoring, troubleshooting, and root cause analysis.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To enable the correlation of traces between various services, in the .NET Framework 4 we added support through the following features:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Analytic tracing: A high performance and low verbosity tracing feature using Event Tracing for Windows (ETW).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>End-to-end activity model for WCF/WF services: This feature supports correlation of traces generated by the <ph id="ph1">&lt;xref:System.ServiceModel&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.ComponentModel&gt;</ph> namespaces.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ETW tracking for WF: This feature uses tracking records generated by WF services to provide visibility into the workflow’s current state and progress.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Errors logged in a tracking or tracing record can be used to find code defects or incorrectly formed messages.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ActivityId property of the Correlation node in the event’s message header can be used to determine the faulting activity.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To enable message flow tracing by activity ID, see <bpt id="p1">[</bpt>Configuring Message Flow Tracing<ept id="p1">](../../../../docs/framework/wcf/diagnostics/etw/configuring-message-flow-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic demonstrates how to enable message flow tracing in the project created in the Getting Started tutorial.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To enable message flow tracing in the Getting Started tutorial</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Open Event Viewer by clicking <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Run<ept id="p2">**</ept>, and entering <ph id="ph1">`eventvwr.exe`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you haven’t enabled analytic tracing, expand <bpt id="p1">**</bpt>Applications and Services Logs<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Microsoft<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Windows<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Application Server-Applications<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>View<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Show Analytic and Debug Logs<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Analytic<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Enable Log<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Leave Event Viewer open so that traces can be viewed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Open the sample created in the <bpt id="p1">[</bpt>Getting Started Tutorial<ept id="p1">](../../../../docs/framework/wcf/getting-started-tutorial.md)</ept> in Visual Studio 2012.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Note that you must run Visual Studio 2012 as an administrator so that the service can be created.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you have the WCF samples installed, you can open the <bpt id="p1">[</bpt>Getting Started<ept id="p1">](../../../../docs/framework/wcf/samples/getting-started-sample.md)</ept>, which contains the completed project created in the tutorial.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Service<ept id="p1">**</ept> project and select <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, <bpt id="p3">**</bpt>New Item<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Application Configuration File<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Add the following code to the App.Config file created in the previous step.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Execute the server application without debugging by pressing CTRL+F5.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Execute the client project by right-clicking the <bpt id="p1">**</bpt>Client<ept id="p1">**</ept> project and selecting <bpt id="p2">**</bpt>Debug<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Start New Instance<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To trace the events from the client to the server, add the following to the application configuration file in the Client project.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In Program.cs in the client, add the following Using statement.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the Main method in the program.cs file in the client project, set the Trace GUID to be propagated in the event log.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Refresh and examine the <bpt id="p1">**</bpt>Analytic<ept id="p1">**</ept>  log.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Look for an event with Event ID 220.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Select the event, and click the <bpt id="p1">**</bpt>Details<ept id="p1">**</ept> tab in the preview pane.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This event will contain the correlation ID for the calling activity.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>All events with the same GUID in the ActivityID are related to one request.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This can be used to correlate messages from a specific client to a specific service.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the client called another service, then the same client could be identified by ActivityID.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In some cases, the ActivityID can change from the original GUID to a new ActivityID.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In that case, a transfer event is emitted.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This event ID is 499, and the event will contain the following data in the header.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The transfer event records the change of the active ActivityID from the GUID specified as the ActivityID to the GUID specified as RelatedActivityID.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>After the transfer event is emitted, all events will contain the new GUID as the ActivityID.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>