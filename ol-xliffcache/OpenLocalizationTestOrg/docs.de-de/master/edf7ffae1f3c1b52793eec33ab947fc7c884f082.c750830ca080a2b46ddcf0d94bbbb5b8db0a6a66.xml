{"content":"---\ntitle: \"Handles Clause (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"Handles\"\n  - \"vb.Handles\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Handles keyword\"\nms.assetid: 1b051c0e-f499-42f6-acb5-6f4f27824b40\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Handles Clause (Visual Basic)\nDeclares that a procedure handles a specified event.  \n  \n## Syntax  \n  \n```  \n  \nproceduredeclaration Handles eventlist  \n```  \n  \n## Parts  \n `proceduredeclaration`  \n The `Sub` procedure declaration for the procedure that will handle the event.  \n  \n `eventlist`  \n List of the events for `proceduredeclaration` to handle, separated by commas. The events must be raised by either the base class for the current class, or by an object declared using the `WithEvents` keyword.  \n  \n## Remarks  \n Use the `Handles` keyword at the end of a procedure declaration to cause it to handle events raised by an object variable declared using the `WithEvents` keyword. The `Handles` keyword can also be used in a derived class to handle events from a base class.  \n  \n The `Handles` keyword and the `AddHandler` statement both allow you to specify that particular procedures handle particular events, but there are differences. Use the `Handles` keyword when defining a procedure to specify that it handles a particular event. The `AddHandler` statement connects procedures to events at run time. For more information, see [AddHandler Statement](../../../visual-basic/language-reference/statements/addhandler-statement.md).  \n  \n For custom events, the application invokes the event's `AddHandler` accessor when it adds the procedure as an event handler. For more information on custom events, see [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md).  \n  \n## Example  \n [!code-vb[VbVbalrEvents#2](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_1.vb)]  \n  \n The following example demonstrates how a derived class can use the `Handles` statement to handle an event from a base class.  \n  \n [!code-vb[VbVbalrEvents#3](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_2.vb)]  \n  \n## Example  \n The following example contains two button event handlers for a **WPF Application** project.  \n  \n [!code-vb[VbVbalrEvents#41](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_3.vb)]  \n  \n## Example  \n The following example is equivalent to the previous example. The `eventlist` in the `Handles` clause contains the events for both buttons.  \n  \n [!code-vb[VbVbalrEvents#42](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_4.vb)]  \n  \n## See Also  \n [WithEvents](../../../visual-basic/language-reference/modifiers/withevents.md)   \n [AddHandler Statement](../../../visual-basic/language-reference/statements/addhandler-statement.md)   \n [RemoveHandler Statement](../../../visual-basic/language-reference/statements/removehandler-statement.md)   \n [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)   \n [RaiseEvent Statement](../../../visual-basic/language-reference/statements/raiseevent-statement.md)   \n [Events](../../../visual-basic/programming-guide/language-features/events/index.md)","nodes":[{"pos":[4,600],"nodes":[{"content":"Handles Clause (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,46],"content":"Handles Clause (Visual Basic) | Microsoft Docs","nodes":[{"content":"Handles Clause (Visual Basic) | Microsoft Docs","pos":[0,46]}]}],"pos":[6,55],"yaml":true}],"content":"title: \"Handles Clause (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"Handles\"\n  - \"vb.Handles\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Handles keyword\"\nms.assetid: 1b051c0e-f499-42f6-acb5-6f4f27824b40\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[607,636],"content":"Handles Clause (Visual Basic)","linkify":"Handles Clause (Visual Basic)","nodes":[{"content":"Handles Clause (Visual Basic)","pos":[0,29]}]},{"content":"Declares that a procedure handles a specified event.","pos":[637,689]},{"pos":[698,704],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[772,777],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"The <ph id=\"ph1\">`Sub`</ph> procedure declaration for the procedure that will handle the event.","pos":[807,884],"source":"The `Sub` procedure declaration for the procedure that will handle the event."},{"content":"List of the events for <ph id=\"ph1\">`proceduredeclaration`</ph> to handle, separated by commas.","pos":[906,983],"source":"List of the events for `proceduredeclaration` to handle, separated by commas."},{"content":"The events must be raised by either the base class for the current class, or by an object declared using the <ph id=\"ph1\">`WithEvents`</ph> keyword.","pos":[984,1114],"source":" The events must be raised by either the base class for the current class, or by an object declared using the `WithEvents` keyword."},{"pos":[1123,1130],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the <ph id=\"ph1\">`Handles`</ph> keyword at the end of a procedure declaration to cause it to handle events raised by an object variable declared using the <ph id=\"ph2\">`WithEvents`</ph> keyword.","pos":[1134,1296],"source":"Use the `Handles` keyword at the end of a procedure declaration to cause it to handle events raised by an object variable declared using the `WithEvents` keyword."},{"content":"The <ph id=\"ph1\">`Handles`</ph> keyword can also be used in a derived class to handle events from a base class.","pos":[1297,1390],"source":" The `Handles` keyword can also be used in a derived class to handle events from a base class."},{"content":"The <ph id=\"ph1\">`Handles`</ph> keyword and the <ph id=\"ph2\">`AddHandler`</ph> statement both allow you to specify that particular procedures handle particular events, but there are differences.","pos":[1397,1555],"source":"The `Handles` keyword and the `AddHandler` statement both allow you to specify that particular procedures handle particular events, but there are differences."},{"content":"Use the <ph id=\"ph1\">`Handles`</ph> keyword when defining a procedure to specify that it handles a particular event.","pos":[1556,1654],"source":" Use the `Handles` keyword when defining a procedure to specify that it handles a particular event."},{"content":"The <ph id=\"ph1\">`AddHandler`</ph> statement connects procedures to events at run time.","pos":[1655,1724],"source":" The `AddHandler` statement connects procedures to events at run time."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>AddHandler Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept>.","pos":[1725,1851],"source":" For more information, see [AddHandler Statement](../../../visual-basic/language-reference/statements/addhandler-statement.md)."},{"content":"For custom events, the application invokes the event's <ph id=\"ph1\">`AddHandler`</ph> accessor when it adds the procedure as an event handler.","pos":[1858,1982],"source":"For custom events, the application invokes the event's `AddHandler` accessor when it adds the procedure as an event handler."},{"content":"For more information on custom events, see <bpt id=\"p1\">[</bpt>Event Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>.","pos":[1983,2116],"source":" For more information on custom events, see [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)."},{"pos":[2125,2132],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2136,2260],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrEvents#2<ept id=\"p2\">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrEvents#2](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_1.vb)]"},{"pos":[2267,2391],"content":"The following example demonstrates how a derived class can use the <ph id=\"ph1\">`Handles`</ph> statement to handle an event from a base class.","source":"The following example demonstrates how a derived class can use the `Handles` statement to handle an event from a base class."},{"pos":[2398,2522],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrEvents#3<ept id=\"p2\">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_2.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrEvents#3](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_2.vb)]"},{"pos":[2531,2538],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2542,2633],"content":"The following example contains two button event handlers for a <bpt id=\"p1\">**</bpt>WPF Application<ept id=\"p1\">**</ept> project.","source":"The following example contains two button event handlers for a **WPF Application** project."},{"pos":[2640,2765],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrEvents#41<ept id=\"p2\">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_3.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrEvents#41](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_3.vb)]"},{"pos":[2774,2781],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example is equivalent to the previous example.","pos":[2785,2845]},{"content":"The <ph id=\"ph1\">`eventlist`</ph> in the <ph id=\"ph2\">`Handles`</ph> clause contains the events for both buttons.","pos":[2846,2923],"source":" The `eventlist` in the `Handles` clause contains the events for both buttons."},{"pos":[2930,3055],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrEvents#42<ept id=\"p2\">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_4.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrEvents#42](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/handles-clause_4.vb)]"},{"pos":[3064,3072],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>WithEvents<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/withevents.md)</ept><ph id=\"ph1\"> </ph>","pos":[3076,3155],"source":"[WithEvents](../../../visual-basic/language-reference/modifiers/withevents.md) "},{"content":"<bpt id=\"p1\">[</bpt>AddHandler Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[3159,3259],"source":"[AddHandler Statement](../../../visual-basic/language-reference/statements/addhandler-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>RemoveHandler Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[3263,3369],"source":"[RemoveHandler Statement](../../../visual-basic/language-reference/statements/removehandler-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Event Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/event-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[3373,3463],"source":"[Event Statement](../../../visual-basic/language-reference/statements/event-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>RaiseEvent Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/raiseevent-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[3467,3567],"source":"[RaiseEvent Statement](../../../visual-basic/language-reference/statements/raiseevent-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept>","pos":[3571,3654],"source":"[Events](../../../visual-basic/programming-guide/language-features/events/index.md)"}]}