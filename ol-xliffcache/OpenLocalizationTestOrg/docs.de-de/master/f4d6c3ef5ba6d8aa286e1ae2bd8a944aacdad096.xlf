<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-write-text-to-files.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4d6c3ef5ba6d8aa286e1ae2bd8a944aacdad096</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\developing-apps\programming\drives-directories-files\how-to-write-text-to-files.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">710d575223bb27c1e244ac1e601d35314ffe19af</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ef108804a21211a9a6e7f617a782bc5e8363f0c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Write Text to Files in Visual Basic</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Write Text to Files in Visual Basic</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A&gt;</ph> method can be used to write text to files.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the specified file does not exist, it is created.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Procedure</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To write text to a file</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`WriteAllText`</ph> method to write text to a file, specifying the file and text to be written.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This example writes the line <ph id="ph1">`"This is new text."`</ph> to the file named <ph id="ph2">`test.txt`</ph>, appending the text to any existing text in the file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To write a series of strings to a file</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Loop through the string collection.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`WriteAllText`</ph> method to write text to a file, specifying the target file and string to be added and setting <ph id="ph2">`append`</ph> to <ph id="ph3">`True`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example writes the names of the files in the <ph id="ph1">`Documents and Settings`</ph> directory to <ph id="ph2">`FileList.txt`</ph>, inserting a carriage return between each for better readability.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Robust Programming</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following conditions may cause an exception:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The path is not valid for one of the following reasons: it is a zero-length string, it contains only white space, it contains invalid characters, or it is a device path (starts with <ph id="ph1">\\</ph><ph id="ph2">\\</ph>.<ph id="ph3">\\</ph>) (<ph id="ph4">&lt;xref:System.ArgumentException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The path is not valid because it is <ph id="ph1">`Nothing`</ph> (<ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`File`</ph> points to a path that does not exist (<ph id="ph2">&lt;xref:System.IO.FileNotFoundException&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The file is in use by another process, or an I/O error occurs (<ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The path exceeds the system-defined maximum length (<ph id="ph1">&lt;xref:System.IO.PathTooLongException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A file or directory name in the path contains a colon (:) or is in an invalid format (<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The user lacks necessary permissions to view the path (<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The disk is full, and the call to <ph id="ph1">`WriteAllText`</ph> fails (<ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you are running in a partial-trust context, the code might throw an exception due to insufficient privileges.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Code Access Security Basics<ept id="p1">](../../../../framework/misc/code-access-security-basics.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read from Text Files<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>