{"content":"---\ntitle: The .NET Portability Analyzer | .NET\ndescription: Learn how to use the .NET Portability Analyzer tool to evaluate how portable your code is among the various .NET Platforms.\nkeywords: .NET, .NET Core\nauthor: blackdwarf\nms.author: mairaw\nms.date: 01/23/2017\nms.topic: article\nms.prod: .net\nms.technology: dotnet-standard\nms.devlang: dotnet\nms.assetid: 0375250f-5704-4993-a6d5-e21c499cea1e\n---\n\n# The .NET Portability Analyzer\n\nWant to make your libraries multi-platform? Want to see how much work is required to make your application compatible with other .NET platforms? The [.NET Portability Analyzer](http://go.microsoft.com/fwlink/?LinkID=507467) is a tool that provides you with a detailed report on how flexible your program is across .NET platforms by analyzing assemblies. The Portability Analyzer is offered as a Visual Studio Extension and as a console app.\n\n## New targets\n\n*   [.NET Core](https://dotnetfoundation.org/net-core): Has a modular design, employs side-by-side, and targets cross-platform scenarios. Side-by-side allows you to adopt new .NET Core versions without breaking other apps.\n*   [ASP.NET Core](https://dotnetfoundation.org/asp-net-core): is a modern web-framework built on .NET Core thus giving developers the same benefits.\n*   [.NET Native](https://blogs.msdn.microsoft.com/dotnet/2014/04/24/net-native-performance): Improve performance of your Windows Store apps that run on x64 and ARM machines by using .NET Native’s static compilation.\n\n## How to use Portability Analyzer\n\nTo begin using the .NET Portability Analyzer, you first need to download and install the extension from the [Visual Studio Gallery](http://go.microsoft.com/fwlink/?LinkID=507467). You can configure it in Visual Studio via **Analyze** > **Portability Analyzer Settings** and select your Target Platforms.\n\n![Portability screenshot](./media/portability-analyzer/portability-screenshot.png)\n\nTo analyze your entire project, right-click on your project in **Solution Explorer** and select **Analyze Assembly Portability**. Otherwise, go to the **Analyze** menu and select **Analyze Assembly Portability**. From there, select your project’s executable or DLL.\n\n![Portability Solution Explorer](./media/portability-analyzer/portability-solution-explorer.png)\n\nAfter running the analysis, you will see your .NET Portability Report. Only types that are unsupported by a target platform will appear in the list and you can review recommendations in the **Messages** tab in the **Error List**. You can also jump to problem areas directly from the **Messages** tab.\n\n![Portability Report](./media/portability-analyzer/portability-report.png)\n\nDon’t want to use Visual Studio? You can also use the Portability Analyzer from the command prompt. Just download the [API Portability Analyzer](http://www.microsoft.com/download/details.aspx?id=42678).\n\n*   Type the following command to analyze the current directory: `\\...\\ApiPort.exe analyze -f .`\n*   To analyze a specific list of .dll files, type the following command: `\\...\\ApiPort.exe analyze -f first.dll -f second.dll -f third.dll`\n\nYour .NET Portability Report will be saved as an Excel file (*.xlsx*) in your current directory. The **Details** tab in the Excel Workbook will contain more information.\n\nFor more information on the .NET Portability Analyzer, visit the [GitHub documentation](https://github.com/Microsoft/dotnet-apiport#documentation) and [A Brief Look at the .NET Portability Analyzer](https://channel9.msdn.com/Blogs/Seth-Juarez/A-Brief-Look-at-the-NET-Portability-Analyzer) Channel 9 video.\n","nodes":[{"pos":[11,47],"content":"The .NET Portability Analyzer | .NET","needQuote":true,"needEscape":true,"nodes":[{"content":"The .NET Portability Analyzer | .NET","pos":[0,36]}]},{"pos":[61,184],"content":"Learn how to use the .NET Portability Analyzer tool to evaluate how portable your code is among the various .NET Platforms.","needQuote":true,"needEscape":true,"nodes":[{"content":"Learn how to use the .NET Portability Analyzer tool to evaluate how portable your code is among the various .NET Platforms.","pos":[0,123]}]},{"pos":[195,210],"content":".NET, .NET Core","needQuote":true,"needEscape":true,"nodes":[{"content":".NET, .NET Core","pos":[0,15]}]},{"pos":[406,435],"content":"The .NET Portability Analyzer","linkify":"The .NET Portability Analyzer","nodes":[{"content":"The .NET Portability Analyzer","pos":[0,29]}]},{"content":"Want to make your libraries multi-platform?","pos":[437,480]},{"content":"Want to see how much work is required to make your application compatible with other .NET platforms?","pos":[481,581]},{"content":"The <bpt id=\"p1\">[</bpt>.NET Portability Analyzer<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=507467)</ept> is a tool that provides you with a detailed report on how flexible your program is across .NET platforms by analyzing assemblies.","pos":[582,790],"source":" The [.NET Portability Analyzer](http://go.microsoft.com/fwlink/?LinkID=507467) is a tool that provides you with a detailed report on how flexible your program is across .NET platforms by analyzing assemblies."},{"content":"The Portability Analyzer is offered as a Visual Studio Extension and as a console app.","pos":[791,877]},{"pos":[882,893],"content":"New targets","linkify":"New targets","nodes":[{"content":"New targets","pos":[0,11]}]},{"content":"<bpt id=\"p1\">[</bpt>.NET Core<ept id=\"p1\">](https://dotnetfoundation.org/net-core)</ept>: Has a modular design, employs side-by-side, and targets cross-platform scenarios.","pos":[899,1032],"source":"[.NET Core](https://dotnetfoundation.org/net-core): Has a modular design, employs side-by-side, and targets cross-platform scenarios."},{"content":"Side-by-side allows you to adopt new .NET Core versions without breaking other apps.","pos":[1033,1117]},{"pos":[1122,1267],"content":"<bpt id=\"p1\">[</bpt>ASP.NET Core<ept id=\"p1\">](https://dotnetfoundation.org/asp-net-core)</ept>: is a modern web-framework built on .NET Core thus giving developers the same benefits.","source":"[ASP.NET Core](https://dotnetfoundation.org/asp-net-core): is a modern web-framework built on .NET Core thus giving developers the same benefits."},{"pos":[1272,1484],"content":"<bpt id=\"p1\">[</bpt>.NET Native<ept id=\"p1\">](https://blogs.msdn.microsoft.com/dotnet/2014/04/24/net-native-performance)</ept>: Improve performance of your Windows Store apps that run on x64 and ARM machines by using .NET Native’s static compilation.","source":"[.NET Native](https://blogs.msdn.microsoft.com/dotnet/2014/04/24/net-native-performance): Improve performance of your Windows Store apps that run on x64 and ARM machines by using .NET Native’s static compilation."},{"pos":[1489,1520],"content":"How to use Portability Analyzer","linkify":"How to use Portability Analyzer","nodes":[{"content":"How to use Portability Analyzer","pos":[0,31]}]},{"content":"To begin using the .NET Portability Analyzer, you first need to download and install the extension from the <bpt id=\"p1\">[</bpt>Visual Studio Gallery<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=507467)</ept>.","pos":[1522,1701],"source":"To begin using the .NET Portability Analyzer, you first need to download and install the extension from the [Visual Studio Gallery](http://go.microsoft.com/fwlink/?LinkID=507467)."},{"content":"You can configure it in Visual Studio via <bpt id=\"p1\">**</bpt>Analyze<ept id=\"p1\">**</ept><ph id=\"ph1\"> &gt; </ph><bpt id=\"p2\">**</bpt>Portability Analyzer Settings<ept id=\"p2\">**</ept> and select your Target Platforms.","pos":[1702,1825],"source":" You can configure it in Visual Studio via **Analyze** > **Portability Analyzer Settings** and select your Target Platforms."},{"content":"Portability screenshot","pos":[1829,1851]},{"content":"To analyze your entire project, right-click on your project in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and select <bpt id=\"p2\">**</bpt>Analyze Assembly Portability<ept id=\"p2\">**</ept>.","pos":[1911,2040],"source":"To analyze your entire project, right-click on your project in **Solution Explorer** and select **Analyze Assembly Portability**."},{"content":"Otherwise, go to the <bpt id=\"p1\">**</bpt>Analyze<ept id=\"p1\">**</ept> menu and select <bpt id=\"p2\">**</bpt>Analyze Assembly Portability<ept id=\"p2\">**</ept>.","pos":[2041,2123],"source":" Otherwise, go to the **Analyze** menu and select **Analyze Assembly Portability**."},{"content":"From there, select your project’s executable or DLL.","pos":[2124,2176]},{"content":"Portability Solution Explorer","pos":[2180,2209]},{"content":"After running the analysis, you will see your .NET Portability Report.","pos":[2276,2346]},{"content":"Only types that are unsupported by a target platform will appear in the list and you can review recommendations in the <bpt id=\"p1\">**</bpt>Messages<ept id=\"p1\">**</ept> tab in the <bpt id=\"p2\">**</bpt>Error List<ept id=\"p2\">**</ept>.","pos":[2347,2505],"source":" Only types that are unsupported by a target platform will appear in the list and you can review recommendations in the **Messages** tab in the **Error List**."},{"content":"You can also jump to problem areas directly from the <bpt id=\"p1\">**</bpt>Messages<ept id=\"p1\">**</ept> tab.","pos":[2506,2576],"source":" You can also jump to problem areas directly from the **Messages** tab."},{"content":"Portability Report","pos":[2580,2598]},{"content":"Don’t want to use Visual Studio?","pos":[2654,2686]},{"content":"You can also use the Portability Analyzer from the command prompt.","pos":[2687,2753]},{"content":"Just download the <bpt id=\"p1\">[</bpt>API Portability Analyzer<ept id=\"p1\">](http://www.microsoft.com/download/details.aspx?id=42678)</ept>.","pos":[2754,2856],"source":" Just download the [API Portability Analyzer](http://www.microsoft.com/download/details.aspx?id=42678)."},{"pos":[2862,2954],"content":"Type the following command to analyze the current directory: <ph id=\"ph1\">`\\...\\ApiPort.exe analyze -f .`</ph>","source":"Type the following command to analyze the current directory: `\\...\\ApiPort.exe analyze -f .`"},{"pos":[2959,3095],"content":"To analyze a specific list of .dll files, type the following command: <ph id=\"ph1\">`\\...\\ApiPort.exe analyze -f first.dll -f second.dll -f third.dll`</ph>","source":"To analyze a specific list of .dll files, type the following command: `\\...\\ApiPort.exe analyze -f first.dll -f second.dll -f third.dll`"},{"content":"Your .NET Portability Report will be saved as an Excel file (<bpt id=\"p1\">*</bpt>.xlsx<ept id=\"p1\">*</ept>) in your current directory.","pos":[3097,3193],"source":"Your .NET Portability Report will be saved as an Excel file (*.xlsx*) in your current directory."},{"content":"The <bpt id=\"p1\">**</bpt>Details<ept id=\"p1\">**</ept> tab in the Excel Workbook will contain more information.","pos":[3194,3266],"source":" The **Details** tab in the Excel Workbook will contain more information."},{"pos":[3268,3573],"content":"For more information on the .NET Portability Analyzer, visit the <bpt id=\"p1\">[</bpt>GitHub documentation<ept id=\"p1\">](https://github.com/Microsoft/dotnet-apiport#documentation)</ept> and <bpt id=\"p2\">[</bpt>A Brief Look at the .NET Portability Analyzer<ept id=\"p2\">](https://channel9.msdn.com/Blogs/Seth-Juarez/A-Brief-Look-at-the-NET-Portability-Analyzer)</ept> Channel 9 video.","source":"For more information on the .NET Portability Analyzer, visit the [GitHub documentation](https://github.com/Microsoft/dotnet-apiport#documentation) and [A Brief Look at the .NET Portability Analyzer](https://channel9.msdn.com/Blogs/Seth-Juarez/A-Brief-Look-at-the-NET-Portability-Analyzer) Channel 9 video."}]}