{"content":"---\ntitle: \"Single Data Type (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.Single\"\nhelpviewer_keywords: \n  - \"Single data type\"\n  - \"F literal type character [Visual Basic]\"\n  - \"trailing zeros\"\n  - \"real numbers\"\n  - \"literal type characters [Visual Basic], F\"\n  - \"trailing 0 characters [Visual Basic]\"\n  - \"identifier type characters [Visual Basic], !\"\n  - \"single-precision numbers\"\n  - \"! identifier type character\"\n  - \"0 characters [Visual Basic], trailing\"\n  - \"data types [Visual Basic], assigning\"\n  - \"floating-point numbers [Visual Basic], Single data type\"\n  - \"numbers [Visual Basic], real\"\n  - \"zeros, trailing\"\n  - \"numbers [Visual Basic], floating point\"\nms.assetid: 224a2795-4cd5-496c-8f7a-a4f05a06d45d\n---\n# Single Data Type (Visual Basic)\nHolds signed IEEE 32-bit (4-byte) single-precision floating-point numbers ranging in value from -3.4028235E+38 through -1.401298E-45 for negative values and from 1.401298E-45 through 3.4028235E+38 for positive values. Single-precision numbers store an approximation of a real number.  \n  \n## Remarks  \n Use the `Single` data type to contain floating-point values that do not require the full data width of `Double`. In some cases the common language runtime might be able to pack your `Single` variables closely together and save memory consumption.  \n  \n The default value of `Single` is 0.  \n  \n## Programming Tips  \n  \n-   **Precision.** When you work with floating-point numbers, keep in mind that they do not always have a precise representation in memory. This could lead to unexpected results from certain operations, such as value comparison and the `Mod` operator. For more information, see [Troubleshooting Data Types](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md).  \n  \n-   **Widening.** The `Single` data type widens to `Double`. This means you can convert `Single` to `Double` without encountering a <xref:System.OverflowException?displayProperty=nameWithType> error.  \n  \n-   **Trailing Zeros.** The floating-point data types do not have any internal representation of trailing 0 characters. For example, they do not distinguish between 4.2000 and 4.2. Consequently, trailing 0 characters do not appear when you display or print floating-point values.  \n  \n-   **Type Characters.** Appending the literal type character `F` to a literal forces it to the `Single` data type. Appending the identifier type character `!` to any identifier forces it to `Single`.  \n  \n-   **Framework Type.** The corresponding type in the .NET Framework is the <xref:System.Single?displayProperty=nameWithType> structure.  \n  \n## See also\n\n- <xref:System.Single?displayProperty=nameWithType>\n- [Data Types](../../../visual-basic/language-reference/data-types/index.md)\n- [Decimal Data Type](../../../visual-basic/language-reference/data-types/decimal-data-type.md)\n- [Double Data Type](../../../visual-basic/language-reference/data-types/double-data-type.md)\n- [Type Conversion Functions](../../../visual-basic/language-reference/functions/type-conversion-functions.md)\n- [Conversion Summary](../../../visual-basic/language-reference/keywords/conversion-summary.md)\n- [Efficient Use of Data Types](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)\n- [Troubleshooting Data Types](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)\n","nodes":[{"pos":[4,732],"embed":true,"restype":"x-metadata","content":"title: \"Single Data Type (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.Single\"\nhelpviewer_keywords: \n  - \"Single data type\"\n  - \"F literal type character [Visual Basic]\"\n  - \"trailing zeros\"\n  - \"real numbers\"\n  - \"literal type characters [Visual Basic], F\"\n  - \"trailing 0 characters [Visual Basic]\"\n  - \"identifier type characters [Visual Basic], !\"\n  - \"single-precision numbers\"\n  - \"! identifier type character\"\n  - \"0 characters [Visual Basic], trailing\"\n  - \"data types [Visual Basic], assigning\"\n  - \"floating-point numbers [Visual Basic], Single data type\"\n  - \"numbers [Visual Basic], real\"\n  - \"zeros, trailing\"\n  - \"numbers [Visual Basic], floating point\"\nms.assetid: 224a2795-4cd5-496c-8f7a-a4f05a06d45d","nodes":[{"content":"Single Data Type (Visual Basic)","nodes":[{"pos":[0,31],"content":"Single Data Type (Visual Basic)","nodes":[{"content":"Single Data Type (Visual Basic)","pos":[0,31]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[739,770],"content":"Single Data Type (Visual Basic)","linkify":"Single Data Type (Visual Basic)","nodes":[{"content":"Single Data Type (Visual Basic)","pos":[0,31]}]},{"content":"Holds signed IEEE 32-bit (4-byte) single-precision floating-point numbers ranging in value from -3.4028235E+38 through -1.401298E-45 for negative values and from 1.401298E-45 through 3.4028235E+38 for positive values.","pos":[771,988]},{"content":"Single-precision numbers store an approximation of a real number.","pos":[989,1054]},{"pos":[1063,1070],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the <ph id=\"ph1\">`Single`</ph> data type to contain floating-point values that do not require the full data width of <ph id=\"ph2\">`Double`</ph>.","pos":[1074,1186],"source":"Use the `Single` data type to contain floating-point values that do not require the full data width of `Double`."},{"content":"In some cases the common language runtime might be able to pack your <ph id=\"ph1\">`Single`</ph> variables closely together and save memory consumption.","pos":[1187,1320],"source":" In some cases the common language runtime might be able to pack your `Single` variables closely together and save memory consumption."},{"pos":[1327,1362],"content":"The default value of <ph id=\"ph1\">`Single`</ph> is 0.","source":"The default value of `Single` is 0."},{"pos":[1371,1387],"content":"Programming Tips","linkify":"Programming Tips","nodes":[{"content":"Programming Tips","pos":[0,16]}]},{"content":"<bpt id=\"p1\">**</bpt>Precision.<ept id=\"p1\">**</ept>","pos":[1397,1411],"source":"**Precision.**"},{"content":"When you work with floating-point numbers, keep in mind that they do not always have a precise representation in memory.","pos":[1412,1532]},{"content":"This could lead to unexpected results from certain operations, such as value comparison and the <ph id=\"ph1\">`Mod`</ph> operator.","pos":[1533,1644],"source":" This could lead to unexpected results from certain operations, such as value comparison and the `Mod` operator."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Troubleshooting Data Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept>.","pos":[1645,1800],"source":" For more information, see [Troubleshooting Data Types](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)."},{"content":"<bpt id=\"p1\">**</bpt>Widening.<ept id=\"p1\">**</ept>","pos":[1810,1823],"source":"**Widening.**"},{"content":"The <ph id=\"ph1\">`Single`</ph> data type widens to <ph id=\"ph2\">`Double`</ph>.","pos":[1824,1866],"source":" The `Single` data type widens to `Double`."},{"content":"This means you can convert <ph id=\"ph1\">`Single`</ph> to <ph id=\"ph2\">`Double`</ph> without encountering a <ph id=\"ph3\">&lt;xref:System.OverflowException?displayProperty=nameWithType&gt;</ph> error.","pos":[1867,2005],"source":" This means you can convert `Single` to `Double` without encountering a <xref:System.OverflowException?displayProperty=nameWithType> error."},{"content":"<bpt id=\"p1\">**</bpt>Trailing Zeros.<ept id=\"p1\">**</ept>","pos":[2015,2034],"source":"**Trailing Zeros.**"},{"content":"The floating-point data types do not have any internal representation of trailing 0 characters.","pos":[2035,2130]},{"content":"For example, they do not distinguish between 4.2000 and 4.2.","pos":[2131,2191]},{"content":"Consequently, trailing 0 characters do not appear when you display or print floating-point values.","pos":[2192,2290]},{"content":"<bpt id=\"p1\">**</bpt>Type Characters.<ept id=\"p1\">**</ept>","pos":[2300,2320],"source":"**Type Characters.**"},{"content":"Appending the literal type character <ph id=\"ph1\">`F`</ph> to a literal forces it to the <ph id=\"ph2\">`Single`</ph> data type.","pos":[2321,2411],"source":" Appending the literal type character `F` to a literal forces it to the `Single` data type."},{"content":"Appending the identifier type character <ph id=\"ph1\">`!`</ph> to any identifier forces it to <ph id=\"ph2\">`Single`</ph>.","pos":[2412,2496],"source":" Appending the identifier type character `!` to any identifier forces it to `Single`."},{"content":"<bpt id=\"p1\">**</bpt>Framework Type.<ept id=\"p1\">**</ept>","pos":[2506,2525],"source":"**Framework Type.**"},{"content":"The corresponding type in the .NET Framework is the <ph id=\"ph1\">&lt;xref:System.Single?displayProperty=nameWithType&gt;</ph> structure.","pos":[2526,2638],"source":" The corresponding type in the .NET Framework is the <xref:System.Single?displayProperty=nameWithType> structure."},{"pos":[2647,2655],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2711,2785],"content":"<bpt id=\"p1\">[</bpt>Data Types<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/index.md)</ept>","source":"[Data Types](../../../visual-basic/language-reference/data-types/index.md)"},{"pos":[2788,2881],"content":"<bpt id=\"p1\">[</bpt>Decimal Data Type<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/decimal-data-type.md)</ept>","source":"[Decimal Data Type](../../../visual-basic/language-reference/data-types/decimal-data-type.md)"},{"pos":[2884,2975],"content":"<bpt id=\"p1\">[</bpt>Double Data Type<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept>","source":"[Double Data Type](../../../visual-basic/language-reference/data-types/double-data-type.md)"},{"pos":[2978,3086],"content":"<bpt id=\"p1\">[</bpt>Type Conversion Functions<ept id=\"p1\">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept>","source":"[Type Conversion Functions](../../../visual-basic/language-reference/functions/type-conversion-functions.md)"},{"pos":[3089,3182],"content":"<bpt id=\"p1\">[</bpt>Conversion Summary<ept id=\"p1\">](../../../visual-basic/language-reference/keywords/conversion-summary.md)</ept>","source":"[Conversion Summary](../../../visual-basic/language-reference/keywords/conversion-summary.md)"},{"pos":[3185,3315],"content":"<bpt id=\"p1\">[</bpt>Efficient Use of Data Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)</ept>","source":"[Efficient Use of Data Types](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)"},{"pos":[3318,3446],"content":"<bpt id=\"p1\">[</bpt>Troubleshooting Data Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept>","source":"[Troubleshooting Data Types](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)"}]}