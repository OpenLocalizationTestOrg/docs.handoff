{"content":"---\ntitle: \"Common Tasks Performed with Visual Basic Operators | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"operators [Visual Basic], logical\"\n  - \"operators [Visual Basic], string concatenation\"\n  - \"operators [Visual Basic], bitwise\"\n  - \"operators [Visual Basic], bit-shift\"\n  - \"operators [Visual Basic], arithmetic\"\n  - \"operators [Visual Basic], string comparison\"\n  - \"operators [Visual Basic], concatenation\"\n  - \"Visual Basic code, operators\"\n  - \"operators [Visual Basic], comparison\"\n  - \"operators [Visual Basic], short-circuiting logical\"\nms.assetid: d181afe5-fafa-460f-a13b-81203f6f4587\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Common Tasks Performed with Visual Basic Operators\nOperators perform many common tasks involving one or more expressions called *operands*.  \n  \n## Arithmetic and Bit-shift Tasks  \n The following table summarizes the available arithmetic and bit-shift operations.  \n  \n|To|See|  \n|---|---|  \n|Add one numeric value to another|[+ Operator](../../../../visual-basic/language-reference/operators/addition-operator.md)|  \n|Subtract one numeric value from another|[- Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/subtraction-operator.md)|  \n|Reverse the sign of a numeric value|[- Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/subtraction-operator.md)|  \n|Multiply one numeric value by another|[* Operator](../../../../visual-basic/language-reference/operators/multiplication-operator.md)|  \n|Divide one numeric value into another|[/ Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/floating-point-division-operator.md)|  \n|Find the quotient of one numeric value divided by another (without the remainder)|[\\ Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/integer-division-operator.md)|  \n|Find the remainder of one numeric value divided by another (without the quotient)|[Mod Operator](../../../../visual-basic/language-reference/operators/mod-operator.md)|  \n|Raise one numeric value to the power of another|[^ Operator](../../../../visual-basic/language-reference/operators/exponentiation-operator.md)|  \n|Shift the bit pattern of a numeric value to the left|[<\\< Operator](../../../../visual-basic/language-reference/operators/left-shift-operator.md)|  \n|Shift the bit pattern of a numeric value to the right|[>> Operator](../../../../visual-basic/language-reference/operators/right-shift-operator.md)|  \n  \n## Comparison Tasks  \n The following table summarizes the available comparison operations.  \n  \n|To|See|  \n|---|---|  \n|Determine whether two values are equal|`=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether two values are unequal|`<>` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether one value is less than another|`<` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether one value is greater than another|`>` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether one value is less than or equal to another|`<=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether one value is greater than or equal to another|`>=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether two object variables refer to the same object instance|[Is Operator](../../../../visual-basic/language-reference/operators/is-operator.md)|  \n|Determine whether two object variables refer to different object instances|[IsNot Operator](../../../../visual-basic/language-reference/operators/isnot-operator.md)|  \n|Determine whether an object is of a specific type|[TypeOf Operator](../../../../visual-basic/language-reference/operators/typeof-operator.md)|  \n  \n## Concatenation Tasks  \n The following table summarizes the available concatenation operations.  \n  \n|To|See|  \n|---|---|  \n|Join multiple strings into a single string|`&` Operator ([Concatenation Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md))|  \n|Join numeric values with string values|`+` Operator ([Concatenation Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md))|  \n  \n## Logical and Bitwise Tasks  \n The following table summarizes the available logical and bitwise operations.  \n  \n|To|See|  \n|---|---|  \n|Perform logical negation on a Boolean value|[Not Operator](../../../../visual-basic/language-reference/operators/not-operator.md)|  \n|Perform logical conjunction on two Boolean values|[And Operator](../../../../visual-basic/language-reference/operators/and-operator.md)|  \n|Perform inclusive logical disjunction on two Boolean values|[Or Operator](../../../../visual-basic/language-reference/operators/or-operator.md)|  \n|Perform exclusive logical disjunction on two Boolean values|[Xor Operator](../../../../visual-basic/language-reference/operators/xor-operator.md)|  \n|Perform short-circuited logical conjunction on two Boolean values|[AndAlso Operator](../../../../visual-basic/language-reference/operators/andalso-operator.md)|  \n|Perform short-circuited inclusive logical disjunction on two Boolean values|[OrElse Operator](../../../../visual-basic/language-reference/operators/orelse-operator.md)|  \n|Perform bit-by-bit logical conjunction on two integral values|[And Operator](../../../../visual-basic/language-reference/operators/and-operator.md)|  \n|Perform bit-by-bit inclusive logical disjunction on two integral values|[Or Operator](../../../../visual-basic/language-reference/operators/or-operator.md)|  \n|Perform bit-by-bit exclusive logical disjunction on two integral values|[Xor Operator](../../../../visual-basic/language-reference/operators/xor-operator.md)|  \n|Perform bit-by-bit logical negation on an integral value|[Not Operator](../../../../visual-basic/language-reference/operators/not-operator.md)|  \n  \n## See Also  \n [Operators and Expressions](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)   \n [Operators Listed by Functionality](../../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)","nodes":[{"pos":[12,79],"content":"Common Tasks Performed with Visual Basic Operators | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Common Tasks Performed with Visual Basic Operators | Microsoft Docs","pos":[0,67]}]},{"pos":[1022,1072],"content":"Common Tasks Performed with Visual Basic Operators","linkify":"Common Tasks Performed with Visual Basic Operators","nodes":[{"content":"Common Tasks Performed with Visual Basic Operators","pos":[0,50]}]},{"pos":[1073,1161],"content":"Operators perform many common tasks involving one or more expressions called <bpt id=\"p1\">*</bpt>operands<ept id=\"p1\">*</ept>.","source":"Operators perform many common tasks involving one or more expressions called *operands*."},{"pos":[1170,1200],"content":"Arithmetic and Bit-shift Tasks","linkify":"Arithmetic and Bit-shift Tasks","nodes":[{"content":"Arithmetic and Bit-shift Tasks","pos":[0,30]}]},{"content":"The following table summarizes the available arithmetic and bit-shift operations.","pos":[1204,1285]},{"content":"To","pos":[1292,1294]},{"content":"See","pos":[1295,1298]},{"content":"Add one numeric value to another","pos":[1315,1347]},{"pos":[1348,1436],"content":"<bpt id=\"p1\">[</bpt>+ Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/addition-operator.md)</ept>","source":"[+ Operator](../../../../visual-basic/language-reference/operators/addition-operator.md)"},{"content":"Subtract one numeric value from another","pos":[1441,1480]},{"pos":[1481,1587],"content":"<bpt id=\"p1\">[</bpt>- Operator (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/subtraction-operator.md)</ept>","source":"[- Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/subtraction-operator.md)"},{"content":"Reverse the sign of a numeric value","pos":[1592,1627]},{"pos":[1628,1734],"content":"<bpt id=\"p1\">[</bpt>- Operator (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/subtraction-operator.md)</ept>","source":"[- Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/subtraction-operator.md)"},{"content":"Multiply one numeric value by another","pos":[1739,1776]},{"pos":[1777,1871],"content":"<bpt id=\"p1\">[</bpt>* Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/multiplication-operator.md)</ept>","source":"[* Operator](../../../../visual-basic/language-reference/operators/multiplication-operator.md)"},{"content":"Divide one numeric value into another","pos":[1876,1913]},{"pos":[1914,2032],"content":"<bpt id=\"p1\">[</bpt>/ Operator (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept>","source":"[/ Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/floating-point-division-operator.md)"},{"content":"Find the quotient of one numeric value divided by another (without the remainder)","pos":[2037,2118]},{"pos":[2119,2230],"content":"<bpt id=\"p1\">[</bpt>\\ Operator (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/integer-division-operator.md)</ept>","source":"[\\ Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/integer-division-operator.md)"},{"content":"Find the remainder of one numeric value divided by another (without the quotient)","pos":[2235,2316]},{"pos":[2317,2402],"content":"<bpt id=\"p1\">[</bpt>Mod Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/mod-operator.md)</ept>","source":"[Mod Operator](../../../../visual-basic/language-reference/operators/mod-operator.md)"},{"content":"Raise one numeric value to the power of another","pos":[2407,2454]},{"pos":[2455,2549],"content":"<bpt id=\"p1\">[</bpt>^ Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/exponentiation-operator.md)</ept>","source":"[^ Operator](../../../../visual-basic/language-reference/operators/exponentiation-operator.md)"},{"content":"Shift the bit pattern of a numeric value to the left","pos":[2554,2606]},{"pos":[2607,2699],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;</ph><ph id=\"ph2\">\\&lt;</ph> Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/left-shift-operator.md)</ept>","source":"[<\\< Operator](../../../../visual-basic/language-reference/operators/left-shift-operator.md)"},{"content":"Shift the bit pattern of a numeric value to the right","pos":[2704,2757]},{"pos":[2758,2850],"content":"<bpt id=\"p1\">[</bpt>&gt;&gt; Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/right-shift-operator.md)</ept>","source":"[>> Operator](../../../../visual-basic/language-reference/operators/right-shift-operator.md)"},{"pos":[2860,2876],"content":"Comparison Tasks","linkify":"Comparison Tasks","nodes":[{"content":"Comparison Tasks","pos":[0,16]}]},{"content":"The following table summarizes the available comparison operations.","pos":[2880,2947]},{"content":"To","pos":[2954,2956]},{"content":"See","pos":[2957,2960]},{"content":"Determine whether two values are equal","pos":[2977,3015]},{"pos":[3016,3181],"content":"<ph id=\"ph1\">`=`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether two values are unequal","pos":[3186,3226]},{"pos":[3227,3393],"content":"<ph id=\"ph1\">`&lt;&gt;`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`<>` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether one value is less than another","pos":[3398,3446]},{"pos":[3447,3612],"content":"<ph id=\"ph1\">`&lt;`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`<` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether one value is greater than another","pos":[3617,3668]},{"pos":[3669,3834],"content":"<ph id=\"ph1\">`&gt;`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`>` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether one value is less than or equal to another","pos":[3839,3899]},{"pos":[3900,4066],"content":"<ph id=\"ph1\">`&lt;=`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`<=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether one value is greater than or equal to another","pos":[4071,4134]},{"pos":[4135,4301],"content":"<ph id=\"ph1\">`&gt;=`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`>=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether two object variables refer to the same object instance","pos":[4306,4378]},{"pos":[4379,4462],"content":"<bpt id=\"p1\">[</bpt>Is Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/is-operator.md)</ept>","source":"[Is Operator](../../../../visual-basic/language-reference/operators/is-operator.md)"},{"content":"Determine whether two object variables refer to different object instances","pos":[4467,4541]},{"pos":[4542,4631],"content":"<bpt id=\"p1\">[</bpt>IsNot Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/isnot-operator.md)</ept>","source":"[IsNot Operator](../../../../visual-basic/language-reference/operators/isnot-operator.md)"},{"content":"Determine whether an object is of a specific type","pos":[4636,4685]},{"pos":[4686,4777],"content":"<bpt id=\"p1\">[</bpt>TypeOf Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/typeof-operator.md)</ept>","source":"[TypeOf Operator](../../../../visual-basic/language-reference/operators/typeof-operator.md)"},{"pos":[4787,4806],"content":"Concatenation Tasks","linkify":"Concatenation Tasks","nodes":[{"content":"Concatenation Tasks","pos":[0,19]}]},{"content":"The following table summarizes the available concatenation operations.","pos":[4810,4880]},{"content":"To","pos":[4887,4889]},{"content":"See","pos":[4890,4893]},{"content":"Join multiple strings into a single string","pos":[4910,4952]},{"pos":[4953,5124],"content":"<ph id=\"ph1\">`&amp;`</ph> Operator (<bpt id=\"p1\">[</bpt>Concatenation Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md)</ept>)","source":"`&` Operator ([Concatenation Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md))"},{"content":"Join numeric values with string values","pos":[5129,5167]},{"pos":[5168,5339],"content":"<ph id=\"ph1\">`+`</ph> Operator (<bpt id=\"p1\">[</bpt>Concatenation Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md)</ept>)","source":"`+` Operator ([Concatenation Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md))"},{"pos":[5349,5374],"content":"Logical and Bitwise Tasks","linkify":"Logical and Bitwise Tasks","nodes":[{"content":"Logical and Bitwise Tasks","pos":[0,25]}]},{"content":"The following table summarizes the available logical and bitwise operations.","pos":[5378,5454]},{"content":"To","pos":[5461,5463]},{"content":"See","pos":[5464,5467]},{"content":"Perform logical negation on a Boolean value","pos":[5484,5527]},{"pos":[5528,5613],"content":"<bpt id=\"p1\">[</bpt>Not Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/not-operator.md)</ept>","source":"[Not Operator](../../../../visual-basic/language-reference/operators/not-operator.md)"},{"content":"Perform logical conjunction on two Boolean values","pos":[5618,5667]},{"pos":[5668,5753],"content":"<bpt id=\"p1\">[</bpt>And Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/and-operator.md)</ept>","source":"[And Operator](../../../../visual-basic/language-reference/operators/and-operator.md)"},{"content":"Perform inclusive logical disjunction on two Boolean values","pos":[5758,5817]},{"pos":[5818,5901],"content":"<bpt id=\"p1\">[</bpt>Or Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/or-operator.md)</ept>","source":"[Or Operator](../../../../visual-basic/language-reference/operators/or-operator.md)"},{"content":"Perform exclusive logical disjunction on two Boolean values","pos":[5906,5965]},{"pos":[5966,6051],"content":"<bpt id=\"p1\">[</bpt>Xor Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/xor-operator.md)</ept>","source":"[Xor Operator](../../../../visual-basic/language-reference/operators/xor-operator.md)"},{"content":"Perform short-circuited logical conjunction on two Boolean values","pos":[6056,6121]},{"pos":[6122,6215],"content":"<bpt id=\"p1\">[</bpt>AndAlso Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/andalso-operator.md)</ept>","source":"[AndAlso Operator](../../../../visual-basic/language-reference/operators/andalso-operator.md)"},{"content":"Perform short-circuited inclusive logical disjunction on two Boolean values","pos":[6220,6295]},{"pos":[6296,6387],"content":"<bpt id=\"p1\">[</bpt>OrElse Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/orelse-operator.md)</ept>","source":"[OrElse Operator](../../../../visual-basic/language-reference/operators/orelse-operator.md)"},{"content":"Perform bit-by-bit logical conjunction on two integral values","pos":[6392,6453]},{"pos":[6454,6539],"content":"<bpt id=\"p1\">[</bpt>And Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/and-operator.md)</ept>","source":"[And Operator](../../../../visual-basic/language-reference/operators/and-operator.md)"},{"content":"Perform bit-by-bit inclusive logical disjunction on two integral values","pos":[6544,6615]},{"pos":[6616,6699],"content":"<bpt id=\"p1\">[</bpt>Or Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/or-operator.md)</ept>","source":"[Or Operator](../../../../visual-basic/language-reference/operators/or-operator.md)"},{"content":"Perform bit-by-bit exclusive logical disjunction on two integral values","pos":[6704,6775]},{"pos":[6776,6861],"content":"<bpt id=\"p1\">[</bpt>Xor Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/xor-operator.md)</ept>","source":"[Xor Operator](../../../../visual-basic/language-reference/operators/xor-operator.md)"},{"content":"Perform bit-by-bit logical negation on an integral value","pos":[6866,6922]},{"pos":[6923,7008],"content":"<bpt id=\"p1\">[</bpt>Not Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/not-operator.md)</ept>","source":"[Not Operator](../../../../visual-basic/language-reference/operators/not-operator.md)"},{"pos":[7018,7026],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Operators and Expressions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[7030,7155],"source":"[Operators and Expressions](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Operators Listed by Functionality<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept>","pos":[7158,7286],"source":" [Operators Listed by Functionality](../../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)"}]}