<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="using-drawingvisual-objects.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">354f80eff5f62f27ebd8bc1f947182a47cf99de1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\using-drawingvisual-objects.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f4faf58cc6a5078a32abce2f99829b0c8469017</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2da24704a40cfba1792e0e0b69e154ad2b4b2059</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Using DrawingVisual Objects | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using DrawingVisual Objects</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic provides an overview of how to use <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> objects in the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> visual layer.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic contains the following sections.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Drawing Visual Object<ept id="p1">](#drawingvisual_object)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DrawingVisual Host Container<ept id="p1">](#drawingvisual_host_container)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating DrawingVisual Objects<ept id="p1">](#creating_drawingvisual_objects)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating Overrides for FrameworkElement Members<ept id="p1">](#creating_overrides)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Providing Hit Testing Support<ept id="p1">](#providing_hit_testing_support)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DrawingVisual Object</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> is a lightweight drawing class that is used to render shapes, images, or text.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This class is considered lightweight because it does not provide layout or event handling, which improves its performance.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For this reason, drawings are ideal for backgrounds and clip art.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>DrawingVisual Host Container</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In order to use <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> objects, you need to create a host container for the objects.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The host container object must derive from the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> class, which provides the layout and event handling support that the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> class lacks.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The host container object does not display any visible properties, since its main purpose is to contain child objects.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property of the host container must be set to <ph id="ph2">&lt;xref:System.Windows.Visibility&gt;</ph>; otherwise, none of its child elements will be visible.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you create a host container object for visual objects, you need to store the visual object references in a <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Add%2A&gt;</ph> method to add a visual object to the host container.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the following example, a host container object is created, and three visual objects are added to its <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For the complete code sample from which the preceding code example was extracted, see <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creating DrawingVisual Objects</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When you create a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> object, it has no drawing content.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can add text, graphics, or image content by retrieving the object's <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> and drawing into it.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> is returned by calling the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual.RenderOpen%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To draw a rectangle into the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext.DrawRectangle%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Similar methods exist for drawing other types of content.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you are finished drawing content into the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext.Close%2A&gt;</ph> method to close the <ph id="ph3">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> and persist the content.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> object is created, and a rectangle is drawn into its <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creating Overrides for FrameworkElement Members</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The host container object is responsible for managing its collection of visual objects.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This requires that the host container implement member overrides for the derived <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following list describes the two members you must override:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</ph>: Returns a child at the specified index from the collection of child elements.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VisualChildrenCount%2A&gt;</ph>: Gets the number of visual child elements within this element.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the following example, overrides for the two <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> members are implemented.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Providing Hit Testing Support</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The host container object can provide event handling even if it does not display any visible properties—however, its <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property must be set to <ph id="ph2">&lt;xref:System.Windows.Visibility&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This allows you to create an event handling routine for the host container that can trap mouse events, such as the release of the left mouse button.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The event handling routine can then implement hit testing by invoking the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The method's <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResultCallback&gt;</ph> parameter refers to a user-defined procedure that you can use to determine the resulting action of a hit test.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the following example, hit testing support is implemented for the host container object and its children.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Graphics Rendering Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hit Testing in the Visual Layer<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>