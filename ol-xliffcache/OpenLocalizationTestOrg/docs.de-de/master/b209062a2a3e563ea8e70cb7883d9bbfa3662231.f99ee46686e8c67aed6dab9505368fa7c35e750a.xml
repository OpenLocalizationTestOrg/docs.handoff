{"content":"---\ntitle: \"into - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"into_CSharpKeyword\"\n  - \"into\"\nhelpviewer_keywords: \n  - \"into keyword [C#]\"\nms.assetid: 81ec62c1-f0b1-4755-8a31-959876e77f65\n---\n# into (C# Reference)\n\nThe `into` contextual keyword can be used to create a temporary identifier to store the results of a [group](group-clause.md), [join](join-clause.md) or [select](select-clause.md) clause into a new identifier. This identifier can itself be a generator for additional query commands. When used in a `group` or `select` clause, the use of the new identifier is sometimes referred to as a *continuation*.\n\n## Example\n\nThe following example shows the use of the `into` keyword to enable a temporary identifier `fruitGroup` which has an inferred type of `IGrouping`. By using the identifier, you can invoke the <xref:System.Linq.Enumerable.Count%2A> method on each group and select only those groups that contain two or more words.\n\n[!code-csharp[cscsrefQueryKeywords#18](~/samples/snippets/csharp/VS_Snippets_VBCSharp/CsCsrefQueryKeywords/CS/Into.cs#18)]\n\nThe use of `into` in a `group` clause is only necessary when you want to perform additional query operations on each group. For more information, see [group clause](group-clause.md).\n\nFor an example of the use of `into` in a `join` clause, see [join clause](join-clause.md).\n\n## See also\n\n- [Query Keywords (LINQ)](query-keywords.md)\n- [LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)\n- [group clause](group-clause.md)\n","nodes":[{"pos":[4,218],"embed":true,"restype":"x-metadata","content":"title: \"into - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"into_CSharpKeyword\"\n  - \"into\"\nhelpviewer_keywords: \n  - \"into keyword [C#]\"\nms.assetid: 81ec62c1-f0b1-4755-8a31-959876e77f65","nodes":[{"content":"into - C# Reference","nodes":[{"pos":[0,19],"content":"into - C# Reference","nodes":[{"content":"into - C# Reference","pos":[0,19]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[225,244],"content":"into (C# Reference)","linkify":"into (C# Reference)","nodes":[{"content":"into (C# Reference)","pos":[0,19]}]},{"content":"The <ph id=\"ph1\">`into`</ph> contextual keyword can be used to create a temporary identifier to store the results of a <bpt id=\"p1\">[</bpt>group<ept id=\"p1\">](group-clause.md)</ept>, <bpt id=\"p2\">[</bpt>join<ept id=\"p2\">](join-clause.md)</ept> or <bpt id=\"p3\">[</bpt>select<ept id=\"p3\">](select-clause.md)</ept> clause into a new identifier.","pos":[246,455],"source":"The `into` contextual keyword can be used to create a temporary identifier to store the results of a [group](group-clause.md), [join](join-clause.md) or [select](select-clause.md) clause into a new identifier."},{"content":"This identifier can itself be a generator for additional query commands.","pos":[456,528]},{"content":"When used in a <ph id=\"ph1\">`group`</ph> or <ph id=\"ph2\">`select`</ph> clause, the use of the new identifier is sometimes referred to as a <bpt id=\"p1\">*</bpt>continuation<ept id=\"p1\">*</ept>.","pos":[529,647],"source":" When used in a `group` or `select` clause, the use of the new identifier is sometimes referred to as a *continuation*."},{"pos":[652,659],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the use of the <ph id=\"ph1\">`into`</ph> keyword to enable a temporary identifier <ph id=\"ph2\">`fruitGroup`</ph> which has an inferred type of <ph id=\"ph3\">`IGrouping`</ph>.","pos":[661,807],"source":"The following example shows the use of the `into` keyword to enable a temporary identifier `fruitGroup` which has an inferred type of `IGrouping`."},{"content":"By using the identifier, you can invoke the <ph id=\"ph1\">&lt;xref:System.Linq.Enumerable.Count%2A&gt;</ph> method on each group and select only those groups that contain two or more words.","pos":[808,972],"source":" By using the identifier, you can invoke the <xref:System.Linq.Enumerable.Count%2A> method on each group and select only those groups that contain two or more words."},{"content":"The use of <ph id=\"ph1\">`into`</ph> in a <ph id=\"ph2\">`group`</ph> clause is only necessary when you want to perform additional query operations on each group.","pos":[1098,1221],"source":"The use of `into` in a `group` clause is only necessary when you want to perform additional query operations on each group."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>group clause<ept id=\"p1\">](group-clause.md)</ept>.","pos":[1222,1280],"source":" For more information, see [group clause](group-clause.md)."},{"pos":[1282,1372],"content":"For an example of the use of <ph id=\"ph1\">`into`</ph> in a <ph id=\"ph2\">`join`</ph> clause, see <bpt id=\"p1\">[</bpt>join clause<ept id=\"p1\">](join-clause.md)</ept>.","source":"For an example of the use of `into` in a `join` clause, see [join clause](join-clause.md)."},{"pos":[1377,1385],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1389,1431],"content":"<bpt id=\"p1\">[</bpt>Query Keywords (LINQ)<ept id=\"p1\">](query-keywords.md)</ept>","source":"[Query Keywords (LINQ)](query-keywords.md)"},{"pos":[1434,1525],"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](../../../csharp/programming-guide/linq-query-expressions/index.md)</ept>","source":"[LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)"},{"pos":[1528,1559],"content":"<bpt id=\"p1\">[</bpt>group clause<ept id=\"p1\">](group-clause.md)</ept>","source":"[group clause](group-clause.md)"}]}