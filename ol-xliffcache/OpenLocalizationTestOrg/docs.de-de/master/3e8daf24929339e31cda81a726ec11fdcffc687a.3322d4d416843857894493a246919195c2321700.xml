{"content":"---\ntitle: \"using directive - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords:\n  - \"using directive [C#]\"\nms.assetid: b42b8e61-5e7e-439c-bb71-370094b44ae8\n---\n# using directive (C# Reference)\n\nThe `using` directive has three uses:\n\n- To allow the use of types in a namespace so that you do not have to qualify the use of a type in that namespace:\n\n    ```csharp\n    using System.Text;\n    ```\n\n- To allow you to access static members and nested types of a type without having to qualify the access with the type name.\n\n    ```csharp\n    using static System.Math;\n    ```\n\n    For more information, see the [using static directive](using-static.md).\n\n- To create an alias for a namespace or a type. This is called a *using alias directive*.\n\n    ```csharp\n    using Project = PC.MyCompany.Project;\n    ```\n\nThe `using` keyword is also used to create *using statements*, which help ensure that <xref:System.IDisposable> objects such as files and fonts are handled correctly. See [using Statement](using-statement.md) for more information.\n\n## Using static type\n\nYou can access static members of a type without having to qualify the access with the type name:\n\n```csharp\nusing static System.Console;\nusing static System.Math;\nclass Program\n{\n    static void Main()\n    {\n        WriteLine(Sqrt(3*3 + 4*4));\n    }\n}\n```\n\n## Remarks\n\nThe scope of a `using` directive is limited to the file in which it appears.\n\nThe `using` directive can appear:\n\n- At the beginning of a source code file, before any namespace or type definitions.\n- In any namespace, but before any namespace or types declared in this namespace.\n\nOtherwise, compiler error [CS1529](../../misc/cs1529.md) is generated.\n\nCreate a `using` alias directive to make it easier to qualify an identifier to a namespace or type. In any `using` directive, the fully-qualified namespace or type must be used regardless of the `using` directives that come before it. No `using` alias can be used in the declaration of a `using` directive. For example, the following generates a compiler error:\n\n```csharp\nusing s = System.Text;\nusing s.RegularExpressions;\n```\n\nCreate a `using` directive to use the types in a namespace without having to specify the namespace. A `using` directive does not give you access to any namespaces that are nested in the namespace you specify.\n\nNamespaces come in two categories: user-defined and system-defined. User-defined namespaces are namespaces defined in your code. For a list of the system-defined namespaces, see [.NET API Browser](../../../../api/index.md).\n\nFor examples on referencing methods in other assemblies, see [Create and Use Assemblies Using the Command Line](../../programming-guide/concepts/assemblies-gac/how-to-create-and-use-assemblies-using-the-command-line.md).\n\n## Example 1\n\nThe following example shows how to define and use a `using` alias for a namespace:\n\n[!code-csharp[csrefKeywordsNamespace#8](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsNamespace/CS/csrefKeywordsNamespace2.cs#8)]\n\nA using alias directive cannot have an open generic type on the right hand side. For example, you cannot create a using alias for a `List<T>`, but you can create one for a `List<int>`.\n\n## Example 2\n\nThe following example shows how to define a `using` directive and a `using` alias for a class:\n\n[!code-csharp[csrefKeywordsNamespace#9](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsNamespace/CS/csrefKeywordsNamespace2.cs#9)]\n\n## C# language specification\n\nFor more information, see [Using directives](~/_csharplang/spec/namespaces.md#using-directives) in the [C# Language Specification](../language-specification/index.md). The language specification is the definitive source for C# syntax and usage.\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [Using Namespaces](../../programming-guide/namespaces/using-namespaces.md)\n- [C# Keywords](index.md)\n- [Namespace Keywords](namespace-keywords.md)\n- [Namespaces](../../programming-guide/namespaces/index.md)\n- [using Statement](using-statement.md)\n","nodes":[{"pos":[4,180],"embed":true,"restype":"x-metadata","content":"title: \"using directive - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords:\n  - \"using directive [C#]\"\nms.assetid: b42b8e61-5e7e-439c-bb71-370094b44ae8","nodes":[{"content":"using directive - C# Reference","nodes":[{"pos":[0,30],"content":"using directive - C# Reference","nodes":[{"content":"using directive - C# Reference","pos":[0,30]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[187,217],"content":"using directive (C# Reference)","linkify":"using directive (C# Reference)","nodes":[{"content":"using directive (C# Reference)","pos":[0,30]}]},{"pos":[219,256],"content":"The <ph id=\"ph1\">`using`</ph> directive has three uses:","source":"The `using` directive has three uses:"},{"content":"To allow the use of types in a namespace so that you do not have to qualify the use of a type in that namespace:","pos":[260,372]},{"content":"To allow you to access static members and nested types of a type without having to qualify the access with the type name.","pos":[422,543]},{"pos":[602,674],"content":"For more information, see the <bpt id=\"p1\">[</bpt>using static directive<ept id=\"p1\">](using-static.md)</ept>.","source":"For more information, see the [using static directive](using-static.md)."},{"content":"To create an alias for a namespace or a type.","pos":[678,723]},{"content":"This is called a <bpt id=\"p1\">*</bpt>using alias directive<ept id=\"p1\">*</ept>.","pos":[724,765],"source":" This is called a *using alias directive*."},{"content":"The <ph id=\"ph1\">`using`</ph> keyword is also used to create <bpt id=\"p1\">*</bpt>using statements<ept id=\"p1\">*</ept>, which help ensure that <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> objects such as files and fonts are handled correctly.","pos":[832,998],"source":"The `using` keyword is also used to create *using statements*, which help ensure that <xref:System.IDisposable> objects such as files and fonts are handled correctly."},{"content":"See <bpt id=\"p1\">[</bpt>using Statement<ept id=\"p1\">](using-statement.md)</ept> for more information.","pos":[999,1062],"source":" See [using Statement](using-statement.md) for more information."},{"pos":[1067,1084],"content":"Using static type","linkify":"Using static type","nodes":[{"content":"Using static type","pos":[0,17]}]},{"content":"You can access static members of a type without having to qualify the access with the type name:","pos":[1086,1182]},{"pos":[1346,1353],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1355,1431],"content":"The scope of a <ph id=\"ph1\">`using`</ph> directive is limited to the file in which it appears.","source":"The scope of a `using` directive is limited to the file in which it appears."},{"pos":[1433,1466],"content":"The <ph id=\"ph1\">`using`</ph> directive can appear:","source":"The `using` directive can appear:"},{"content":"At the beginning of a source code file, before any namespace or type definitions.","pos":[1470,1551]},{"content":"In any namespace, but before any namespace or types declared in this namespace.","pos":[1554,1633]},{"pos":[1635,1705],"content":"Otherwise, compiler error <bpt id=\"p1\">[</bpt>CS1529<ept id=\"p1\">](../../misc/cs1529.md)</ept> is generated.","source":"Otherwise, compiler error [CS1529](../../misc/cs1529.md) is generated."},{"content":"Create a <ph id=\"ph1\">`using`</ph> alias directive to make it easier to qualify an identifier to a namespace or type.","pos":[1707,1806],"source":"Create a `using` alias directive to make it easier to qualify an identifier to a namespace or type."},{"content":"In any <ph id=\"ph1\">`using`</ph> directive, the fully-qualified namespace or type must be used regardless of the <ph id=\"ph2\">`using`</ph> directives that come before it.","pos":[1807,1941],"source":" In any `using` directive, the fully-qualified namespace or type must be used regardless of the `using` directives that come before it."},{"content":"No <ph id=\"ph1\">`using`</ph> alias can be used in the declaration of a <ph id=\"ph2\">`using`</ph> directive.","pos":[1942,2013],"source":" No `using` alias can be used in the declaration of a `using` directive."},{"content":"For example, the following generates a compiler error:","pos":[2014,2068]},{"content":"Create a <ph id=\"ph1\">`using`</ph> directive to use the types in a namespace without having to specify the namespace.","pos":[2136,2235],"source":"Create a `using` directive to use the types in a namespace without having to specify the namespace."},{"content":"A <ph id=\"ph1\">`using`</ph> directive does not give you access to any namespaces that are nested in the namespace you specify.","pos":[2236,2344],"source":" A `using` directive does not give you access to any namespaces that are nested in the namespace you specify."},{"content":"Namespaces come in two categories: user-defined and system-defined.","pos":[2346,2413]},{"content":"User-defined namespaces are namespaces defined in your code.","pos":[2414,2474]},{"content":"For a list of the system-defined namespaces, see <bpt id=\"p1\">[</bpt>.NET API Browser<ept id=\"p1\">](../../../../api/index.md)</ept>.","pos":[2475,2569],"source":" For a list of the system-defined namespaces, see [.NET API Browser](../../../../api/index.md)."},{"pos":[2571,2791],"content":"For examples on referencing methods in other assemblies, see <bpt id=\"p1\">[</bpt>Create and Use Assemblies Using the Command Line<ept id=\"p1\">](../../programming-guide/concepts/assemblies-gac/how-to-create-and-use-assemblies-using-the-command-line.md)</ept>.","source":"For examples on referencing methods in other assemblies, see [Create and Use Assemblies Using the Command Line](../../programming-guide/concepts/assemblies-gac/how-to-create-and-use-assemblies-using-the-command-line.md)."},{"pos":[2796,2805],"content":"Example 1","linkify":"Example 1","nodes":[{"content":"Example 1","pos":[0,9]}]},{"pos":[2807,2889],"content":"The following example shows how to define and use a <ph id=\"ph1\">`using`</ph> alias for a namespace:","source":"The following example shows how to define and use a `using` alias for a namespace:"},{"content":"A using alias directive cannot have an open generic type on the right hand side.","pos":[3036,3116]},{"content":"For example, you cannot create a using alias for a <ph id=\"ph1\">`List&lt;T&gt;`</ph>, but you can create one for a <ph id=\"ph2\">`List&lt;int&gt;`</ph>.","pos":[3117,3220],"source":" For example, you cannot create a using alias for a `List<T>`, but you can create one for a `List<int>`."},{"pos":[3225,3234],"content":"Example 2","linkify":"Example 2","nodes":[{"content":"Example 2","pos":[0,9]}]},{"pos":[3236,3330],"content":"The following example shows how to define a <ph id=\"ph1\">`using`</ph> directive and a <ph id=\"ph2\">`using`</ph> alias for a class:","source":"The following example shows how to define a `using` directive and a `using` alias for a class:"},{"pos":[3480,3505],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using directives<ept id=\"p1\">](~/_csharplang/spec/namespaces.md#using-directives)</ept> in the <bpt id=\"p2\">[</bpt>C# Language Specification<ept id=\"p2\">](../language-specification/index.md)</ept>.","pos":[3507,3674],"source":"For more information, see [Using directives](~/_csharplang/spec/namespaces.md#using-directives) in the [C# Language Specification](../language-specification/index.md)."},{"content":"The language specification is the definitive source for C# syntax and usage.","pos":[3675,3751]},{"pos":[3756,3764],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3768,3795],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[3798,3854],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[3857,3931],"content":"<bpt id=\"p1\">[</bpt>Using Namespaces<ept id=\"p1\">](../../programming-guide/namespaces/using-namespaces.md)</ept>","source":"[Using Namespaces](../../programming-guide/namespaces/using-namespaces.md)"},{"pos":[3934,3957],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[3960,4003],"content":"<bpt id=\"p1\">[</bpt>Namespace Keywords<ept id=\"p1\">](namespace-keywords.md)</ept>","source":"[Namespace Keywords](namespace-keywords.md)"},{"pos":[4006,4063],"content":"<bpt id=\"p1\">[</bpt>Namespaces<ept id=\"p1\">](../../programming-guide/namespaces/index.md)</ept>","source":"[Namespaces](../../programming-guide/namespaces/index.md)"},{"pos":[4066,4103],"content":"<bpt id=\"p1\">[</bpt>using Statement<ept id=\"p1\">](using-statement.md)</ept>","source":"[using Statement](using-statement.md)"}]}