{"content":"---\ntitle: \"Peverify.exe (PEVerify Tool)\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"portable executable files, PEVerify\"\n  - \"verifying MSIL and metadata\"\n  - \"PEVerify tool\"\n  - \"type safety requirements\"\n  - \"MSIL\"\n  - \"PEverify.exe\"\n  - \"PE files, PEVerify\"\nms.assetid: f4f46f9e-8d08-4e66-a94b-0c69c9b0bbfa\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# Peverify.exe (PEVerify Tool)\nThe PEVerify tool helps developers who generate Microsoft intermediate language (MSIL) (such as compiler writers, script engine developers, and so on) to determine whether their MSIL code and associated metadata meet type safety requirements. Some compilers generate verifiably type-safe code only if you avoid using certain language constructs. If, as a developer, you are using such a compiler, you may want to verify that you have not compromised the type safety of your code. In this situation, you can run the PEVerify tool on your files to check the MSIL and metadata.  \n  \n This tool is automatically installed with Visual Studio. To run the tool, use the Developer Command Prompt for Visual Studio (or the Visual Studio Command Prompt in Windows 7). For more information, see [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md).  \n  \n At the command prompt, type the following:  \n  \n## Syntax  \n  \n```  \npeverify filename [options]  \n```  \n  \n## Parameters  \n  \n|Argument|Description|  \n|--------------|-----------------|  \n|*filename*|The portable executable (PE) file for which to check the MSIL and metadata.|  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**/break=** *maxErrorCount*|Aborts verification after *maxErrorCount* errors.<br /><br /> This parameter is not supported in .NET Framework version 2.0 or later.|  \n|**/clock**|Measures and reports the following verification times in milliseconds:<br /><br /> **MD Val. cycle**<br /> Metadata validation cycle<br /><br /> **MD Val. pure**<br /> Metadata validation pure<br /><br /> **IL Ver. cycle**<br /> Microsoft intermediate language (MSIL) verification cycle<br /><br /> **IL Ver pure**<br /> MSIL verification pure<br /><br /> The **MD Val. cycle** and **IL Ver. cycle** times include the time required to perform necessary startup and shutdown procedures. The **MD Val. pure** and **IL Ver pure** times reflect the time required to perform the validation or verification only.|  \n|**/help**|Displays command syntax and options for the tool.|  \n|**/hresult**|Displays error codes in hexadecimal format.|  \n|**/ignore=** *hex.code* [, *hex.code*]|Ignores the specified error codes.|  \n|**/ignore=@** *responseFile*|Ignores the error codes listed in the specified response file.|  \n|**/il**|Performs MSIL type safety verification checks for methods implemented in the assembly specified by *filename*. The tool returns detailed descriptions for each problem found unless you specify the **/quiet** option.|  \n|**/md**|Performs metadata validation checks on the assembly specified by *filename*. This walks the full metadata structure within the file and reports all validation problems encountered.|  \n|**/nologo**|Suppresses the display of product version and copyright information.|  \n|**/nosymbols**|In the .NET Framework version 2.0, suppresses line numbers for backward compatibility.|  \n|**/quiet**|Specifies quiet mode; suppresses output of the verification problem reports. Peverify.exe still reports whether the file is type safe, but does not report information on problems preventing type safety verification.|  \n|`/transparent`|Verify only the transparent methods.|  \n|**/unique**|Ignores repeating error codes.|  \n|**/verbose**|In the .NET Framework version 2.0, displays additional information in MSIL verification messages.|  \n|**/?**|Displays command syntax and options for the tool.|  \n  \n## Remarks  \n The common language runtime relies on the type-safe execution of application code to help enforce security and isolation mechanisms. Normally, code that is not [verifiably type safe](../../../docs/standard/security/key-security-concepts.md#type-safety-and-security) cannot run, although you can set security policy to allow the execution of trusted but unverifiable code.  \n  \n If neither the **/md** nor **/il** options are specified, Peverify.exe performs both types of checks. Peverify.exe performs **/md** checks first. If there are no errors, **/il** checks are made. If you specify both **/md** and **/il**, **/il** checks are made even if there are errors in the metadata. Thus, if there are no metadata errors, **peverify** *filename* is equivalent to **peverify** *filename* **/md** **/il**.  \n  \n Peverify.exe performs comprehensive MSIL verification checks based on dataflow analysis plus a list of several hundred rules on valid metadata. For detailed information on the checks Peverify.exe performs, see the \"Metadata Validation Specification\" and the \"MSIL Instruction Set Specification\" in the Tools Developers Guide folder in the [!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)].  \n  \n Note that the .NET Framework version 2.0 or later supports verifiable `byref` returns specified using the following MSIL instructions: `dup`, `ldsflda`, `ldflda`, `ldelema`, `call` and `unbox`.  \n  \n## Examples  \n The following command performs metadata validation checks and MSIL type safety verification checks for methods implemented in the assembly `myAssembly.exe`.  \n  \n```  \npeverify myAssembly.exe /md /il  \n```  \n  \n Upon successful completion of the above request, Peverify.exe displays the following message.  \n  \n```  \nAll classes and methods in myAssembly.exe Verified  \n```  \n  \n The following command performs metadata validation checks and MSIL type safety verification checks for methods implemented in the assembly `myAssembly.exe`. The tool displays the time required to perform these checks.  \n  \n```  \npeverify myAssembly.exe /md /il /clock  \n```  \n  \n Upon successful completion of the above request, Peverify.exe displays the following message.  \n  \n```  \nAll classes and methods in myAssembly.exe Verified  \nTiming: Total run     320 msec  \n        MD Val.cycle  40 msec  \n        MD Val.pure   10 msec  \n        IL Ver.cycle  270 msec  \n        IL Ver.pure   230 msec  \n```  \n  \n The following command performs metadata validation checks and MSIL type safety verification checks for methods implemented in the assembly `myAssembly.exe`. Peverify.exe stops, however, when it reaches the maximum error count of 100. The tool also ignores the specified error codes.  \n  \n```  \npeverify myAssembly.exe /break=100 /ignore=0x12345678,0xABCD1234  \n```  \n  \n The following command produces the same result as the above previous example, but specifies the error codes to ignore in the response file `ignoreErrors.rsp`.  \n  \n```  \npeverify myAssembly.exe /break=100 /ignore@ignoreErrors.rsp  \n```  \n  \n The response file can contain a comma-separated list of error codes.  \n  \n```  \n0x12345678, 0xABCD1234  \n```  \n  \n Alternatively, the response file can be formatted with one error code per line.  \n  \n```  \n0x12345678  \n0xABCD1234  \n```  \n  \n## See also\n\n- [Tools](../../../docs/framework/tools/index.md)\n- [Writing Verifiably Type-Safe Code](../../../docs/framework/misc/code-access-security-basics.md#typesafe_code)\n- [Type Safety and Security](../../../docs/standard/security/key-security-concepts.md#type-safety-and-security)\n- [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md)\n","nodes":[{"pos":[4,356],"embed":true,"restype":"x-metadata","content":"title: \"Peverify.exe (PEVerify Tool)\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"portable executable files, PEVerify\"\n  - \"verifying MSIL and metadata\"\n  - \"PEVerify tool\"\n  - \"type safety requirements\"\n  - \"MSIL\"\n  - \"PEverify.exe\"\n  - \"PE files, PEVerify\"\nms.assetid: f4f46f9e-8d08-4e66-a94b-0c69c9b0bbfa\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"Peverify.exe (PEVerify Tool)","nodes":[{"pos":[0,28],"content":"Peverify.exe (PEVerify Tool)","nodes":[{"content":"Peverify.exe (PEVerify Tool)","pos":[0,28]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[363,391],"content":"Peverify.exe (PEVerify Tool)","linkify":"Peverify.exe (PEVerify Tool)","nodes":[{"content":"Peverify.exe (PEVerify Tool)","pos":[0,28]}]},{"content":"The PEVerify tool helps developers who generate Microsoft intermediate language (MSIL) (such as compiler writers, script engine developers, and so on) to determine whether their MSIL code and associated metadata meet type safety requirements.","pos":[392,634]},{"content":"Some compilers generate verifiably type-safe code only if you avoid using certain language constructs.","pos":[635,737]},{"content":"If, as a developer, you are using such a compiler, you may want to verify that you have not compromised the type safety of your code.","pos":[738,871]},{"content":"In this situation, you can run the PEVerify tool on your files to check the MSIL and metadata.","pos":[872,966]},{"content":"This tool is automatically installed with Visual Studio.","pos":[973,1029]},{"content":"To run the tool, use the Developer Command Prompt for Visual Studio (or the Visual Studio Command Prompt in Windows 7).","pos":[1030,1149]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Command Prompts<ept id=\"p1\">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>.","pos":[1150,1260],"source":" For more information, see [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md)."},{"content":"At the command prompt, type the following:","pos":[1267,1309]},{"pos":[1318,1324],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1378,1388],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Argument","pos":[1395,1403]},{"content":"Description","pos":[1404,1415]},{"pos":[1457,1467],"content":"<bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept>","source":"*filename*"},{"content":"The portable executable (PE) file for which to check the MSIL and metadata.","pos":[1468,1543]},{"content":"Option","pos":[1551,1557]},{"content":"Description","pos":[1558,1569]},{"pos":[1609,1636],"content":"<bpt id=\"p1\">**</bpt>/break=<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>maxErrorCount<ept id=\"p2\">*</ept>","source":"**/break=** *maxErrorCount*"},{"content":"Aborts verification after <bpt id=\"p1\">*</bpt>maxErrorCount<ept id=\"p1\">*</ept> errors.","pos":[1637,1686],"source":"Aborts verification after *maxErrorCount* errors."},{"content":"This parameter is not supported in .NET Framework version 2.0 or later.","pos":[1699,1770]},{"pos":[1775,1785],"content":"<bpt id=\"p1\">**</bpt>/clock<ept id=\"p1\">**</ept>","source":"**/clock**"},{"content":"Measures and reports the following verification times in milliseconds:","pos":[1786,1856]},{"content":"<bpt id=\"p1\">**</bpt>MD Val. cycle<ept id=\"p1\">**</ept>","pos":[1869,1886],"source":"**MD Val. cycle**"},{"content":"Metadata validation cycle","pos":[1893,1918]},{"content":"<bpt id=\"p1\">**</bpt>MD Val. pure<ept id=\"p1\">**</ept>","pos":[1931,1947],"source":"**MD Val. pure**"},{"content":"Metadata validation pure","pos":[1954,1978]},{"content":"<bpt id=\"p1\">**</bpt>IL Ver. cycle<ept id=\"p1\">**</ept>","pos":[1991,2008],"source":"**IL Ver. cycle**"},{"content":"Microsoft intermediate language (MSIL) verification cycle","pos":[2015,2072]},{"content":"<bpt id=\"p1\">**</bpt>IL Ver pure<ept id=\"p1\">**</ept>","pos":[2085,2100],"source":"**IL Ver pure**"},{"content":"MSIL verification pure","pos":[2107,2129]},{"content":"The <bpt id=\"p1\">**</bpt>MD Val. cycle<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>IL Ver. cycle<ept id=\"p2\">**</ept> times include the time required to perform necessary startup and shutdown procedures.","pos":[2142,2271],"source":"The **MD Val. cycle** and **IL Ver. cycle** times include the time required to perform necessary startup and shutdown procedures."},{"content":"The <bpt id=\"p1\">**</bpt>MD Val. pure<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>IL Ver pure<ept id=\"p2\">**</ept> times reflect the time required to perform the validation or verification only.","pos":[2272,2392],"source":" The **MD Val. pure** and **IL Ver pure** times reflect the time required to perform the validation or verification only."},{"pos":[2397,2406],"content":"<bpt id=\"p1\">**</bpt>/help<ept id=\"p1\">**</ept>","source":"**/help**"},{"content":"Displays command syntax and options for the tool.","pos":[2407,2456]},{"pos":[2461,2473],"content":"<bpt id=\"p1\">**</bpt>/hresult<ept id=\"p1\">**</ept>","source":"**/hresult**"},{"content":"Displays error codes in hexadecimal format.","pos":[2474,2517]},{"pos":[2522,2560],"content":"<bpt id=\"p1\">**</bpt>/ignore=<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>hex.code<ept id=\"p2\">*</ept> [, <bpt id=\"p3\">*</bpt>hex.code<ept id=\"p3\">*</ept>]","source":"**/ignore=** *hex.code* [, *hex.code*]"},{"content":"Ignores the specified error codes.","pos":[2561,2595]},{"pos":[2600,2628],"content":"<bpt id=\"p1\">**</bpt>/ignore=@<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>responseFile<ept id=\"p2\">*</ept>","source":"**/ignore=@** *responseFile*"},{"content":"Ignores the error codes listed in the specified response file.","pos":[2629,2691]},{"pos":[2696,2703],"content":"<bpt id=\"p1\">**</bpt>/il<ept id=\"p1\">**</ept>","source":"**/il**"},{"content":"Performs MSIL type safety verification checks for methods implemented in the assembly specified by <bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept>.","pos":[2704,2814],"source":"Performs MSIL type safety verification checks for methods implemented in the assembly specified by *filename*."},{"content":"The tool returns detailed descriptions for each problem found unless you specify the <bpt id=\"p1\">**</bpt>/quiet<ept id=\"p1\">**</ept> option.","pos":[2815,2918],"source":" The tool returns detailed descriptions for each problem found unless you specify the **/quiet** option."},{"pos":[2923,2930],"content":"<bpt id=\"p1\">**</bpt>/md<ept id=\"p1\">**</ept>","source":"**/md**"},{"content":"Performs metadata validation checks on the assembly specified by <bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept>.","pos":[2931,3007],"source":"Performs metadata validation checks on the assembly specified by *filename*."},{"content":"This walks the full metadata structure within the file and reports all validation problems encountered.","pos":[3008,3111]},{"pos":[3116,3127],"content":"<bpt id=\"p1\">**</bpt>/nologo<ept id=\"p1\">**</ept>","source":"**/nologo**"},{"content":"Suppresses the display of product version and copyright information.","pos":[3128,3196]},{"pos":[3201,3215],"content":"<bpt id=\"p1\">**</bpt>/nosymbols<ept id=\"p1\">**</ept>","source":"**/nosymbols**"},{"content":"In the .NET Framework version 2.0, suppresses line numbers for backward compatibility.","pos":[3216,3302]},{"pos":[3307,3317],"content":"<bpt id=\"p1\">**</bpt>/quiet<ept id=\"p1\">**</ept>","source":"**/quiet**"},{"content":"Specifies quiet mode; suppresses output of the verification problem reports.","pos":[3318,3394]},{"content":"Peverify.exe still reports whether the file is type safe, but does not report information on problems preventing type safety verification.","pos":[3395,3533]},{"content":"Verify only the transparent methods.","pos":[3553,3589]},{"pos":[3594,3605],"content":"<bpt id=\"p1\">**</bpt>/unique<ept id=\"p1\">**</ept>","source":"**/unique**"},{"content":"Ignores repeating error codes.","pos":[3606,3636]},{"pos":[3641,3653],"content":"<bpt id=\"p1\">**</bpt>/verbose<ept id=\"p1\">**</ept>","source":"**/verbose**"},{"content":"In the .NET Framework version 2.0, displays additional information in MSIL verification messages.","pos":[3654,3751]},{"pos":[3756,3762],"content":"<bpt id=\"p1\">**</bpt>/?<ept id=\"p1\">**</ept>","source":"**/?**"},{"content":"Displays command syntax and options for the tool.","pos":[3763,3812]},{"pos":[3822,3829],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The common language runtime relies on the type-safe execution of application code to help enforce security and isolation mechanisms.","pos":[3833,3965]},{"content":"Normally, code that is not <bpt id=\"p1\">[</bpt>verifiably type safe<ept id=\"p1\">](../../../docs/standard/security/key-security-concepts.md#type-safety-and-security)</ept> cannot run, although you can set security policy to allow the execution of trusted but unverifiable code.","pos":[3966,4204],"source":" Normally, code that is not [verifiably type safe](../../../docs/standard/security/key-security-concepts.md#type-safety-and-security) cannot run, although you can set security policy to allow the execution of trusted but unverifiable code."},{"content":"If neither the <bpt id=\"p1\">**</bpt>/md<ept id=\"p1\">**</ept> nor <bpt id=\"p2\">**</bpt>/il<ept id=\"p2\">**</ept> options are specified, Peverify.exe performs both types of checks.","pos":[4211,4312],"source":"If neither the **/md** nor **/il** options are specified, Peverify.exe performs both types of checks."},{"content":"Peverify.exe performs <bpt id=\"p1\">**</bpt>/md<ept id=\"p1\">**</ept> checks first.","pos":[4313,4356],"source":" Peverify.exe performs **/md** checks first."},{"content":"If there are no errors, <bpt id=\"p1\">**</bpt>/il<ept id=\"p1\">**</ept> checks are made.","pos":[4357,4405],"source":" If there are no errors, **/il** checks are made."},{"content":"If you specify both <bpt id=\"p1\">**</bpt>/md<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>/il<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>/il<ept id=\"p3\">**</ept> checks are made even if there are errors in the metadata.","pos":[4406,4512],"source":" If you specify both **/md** and **/il**, **/il** checks are made even if there are errors in the metadata."},{"content":"Thus, if there are no metadata errors, <bpt id=\"p1\">**</bpt>peverify<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>filename<ept id=\"p2\">*</ept> is equivalent to <bpt id=\"p3\">**</bpt>peverify<ept id=\"p3\">**</ept> <bpt id=\"p4\">*</bpt>filename<ept id=\"p4\">*</ept> <bpt id=\"p5\">**</bpt>/md<ept id=\"p5\">**</ept> <bpt id=\"p6\">**</bpt>/il<ept id=\"p6\">**</ept>.","pos":[4513,4633],"source":" Thus, if there are no metadata errors, **peverify** *filename* is equivalent to **peverify** *filename* **/md** **/il**."},{"content":"Peverify.exe performs comprehensive MSIL verification checks based on dataflow analysis plus a list of several hundred rules on valid metadata.","pos":[4640,4783]},{"content":"For detailed information on the checks Peverify.exe performs, see the \"Metadata Validation Specification\" and the \"MSIL Instruction Set Specification\" in the Tools Developers Guide folder in the <ph id=\"ph1\">[!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)]</ph>.","pos":[4784,5038],"source":" For detailed information on the checks Peverify.exe performs, see the \"Metadata Validation Specification\" and the \"MSIL Instruction Set Specification\" in the Tools Developers Guide folder in the [!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)]."},{"pos":[5045,5238],"content":"Note that the .NET Framework version 2.0 or later supports verifiable <ph id=\"ph1\">`byref`</ph> returns specified using the following MSIL instructions: <ph id=\"ph2\">`dup`</ph>, <ph id=\"ph3\">`ldsflda`</ph>, <ph id=\"ph4\">`ldflda`</ph>, <ph id=\"ph5\">`ldelema`</ph>, <ph id=\"ph6\">`call`</ph> and <ph id=\"ph7\">`unbox`</ph>.","source":"Note that the .NET Framework version 2.0 or later supports verifiable `byref` returns specified using the following MSIL instructions: `dup`, `ldsflda`, `ldflda`, `ldelema`, `call` and `unbox`."},{"pos":[5247,5255],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5259,5415],"content":"The following command performs metadata validation checks and MSIL type safety verification checks for methods implemented in the assembly <ph id=\"ph1\">`myAssembly.exe`</ph>.","source":"The following command performs metadata validation checks and MSIL type safety verification checks for methods implemented in the assembly `myAssembly.exe`."},{"content":"Upon successful completion of the above request, Peverify.exe displays the following message.","pos":[5471,5564]},{"content":"The following command performs metadata validation checks and MSIL type safety verification checks for methods implemented in the assembly <ph id=\"ph1\">`myAssembly.exe`</ph>.","pos":[5639,5795],"source":"The following command performs metadata validation checks and MSIL type safety verification checks for methods implemented in the assembly `myAssembly.exe`."},{"content":"The tool displays the time required to perform these checks.","pos":[5796,5856]},{"content":"Upon successful completion of the above request, Peverify.exe displays the following message.","pos":[5919,6012]},{"content":"The following command performs metadata validation checks and MSIL type safety verification checks for methods implemented in the assembly <ph id=\"ph1\">`myAssembly.exe`</ph>.","pos":[6250,6406],"source":"The following command performs metadata validation checks and MSIL type safety verification checks for methods implemented in the assembly `myAssembly.exe`."},{"content":"Peverify.exe stops, however, when it reaches the maximum error count of 100.","pos":[6407,6483]},{"content":"The tool also ignores the specified error codes.","pos":[6484,6532]},{"pos":[6621,6779],"content":"The following command produces the same result as the above previous example, but specifies the error codes to ignore in the response file <ph id=\"ph1\">`ignoreErrors.rsp`</ph>.","source":"The following command produces the same result as the above previous example, but specifies the error codes to ignore in the response file `ignoreErrors.rsp`."},{"content":"The response file can contain a comma-separated list of error codes.","pos":[6863,6931]},{"content":"Alternatively, the response file can be formatted with one error code per line.","pos":[6978,7057]},{"pos":[7107,7115],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[7119,7166],"content":"<bpt id=\"p1\">[</bpt>Tools<ept id=\"p1\">](../../../docs/framework/tools/index.md)</ept>","source":"[Tools](../../../docs/framework/tools/index.md)"},{"pos":[7169,7279],"content":"<bpt id=\"p1\">[</bpt>Writing Verifiably Type-Safe Code<ept id=\"p1\">](../../../docs/framework/misc/code-access-security-basics.md#typesafe_code)</ept>","source":"[Writing Verifiably Type-Safe Code](../../../docs/framework/misc/code-access-security-basics.md#typesafe_code)"},{"pos":[7282,7391],"content":"<bpt id=\"p1\">[</bpt>Type Safety and Security<ept id=\"p1\">](../../../docs/standard/security/key-security-concepts.md#type-safety-and-security)</ept>","source":"[Type Safety and Security](../../../docs/standard/security/key-security-concepts.md#type-safety-and-security)"},{"pos":[7394,7477],"content":"<bpt id=\"p1\">[</bpt>Command Prompts<ept id=\"p1\">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>","source":"[Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md)"}]}