<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">403a78e3fc1496b91403b3c42494e34d12607b70</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\selecting-a-collection-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a0c43e1260cafc72b10c3b4f0eba336c0e3b37f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ad70698450183403df2ff96552dafcc5a8fefb6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Selecting a Collection Class | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Selecting a Collection Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Be sure to choose your collection class carefully.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using the wrong type can restrict your use of the collection.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In general, avoid using the types in the <ph id="ph1">&lt;xref:System.Collections&gt;</ph> namespace unless you are specifically targeting .NET Framework version 1.1.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The generic and concurrent versions of the collections are to be preferred because of their greater type safety and other improvements.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Consider the following questions:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Do you need a sequential list where the element is typically discarded after its value is retrieved?</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If yes, consider using the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> generic class if you need first-in, first-out (FIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph> generic class if you need last-in, first-out (LIFO) behavior.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For safe access from multiple threads, use the concurrent versions <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If not, consider using the other collections.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Do you need to access the elements in a certain order, such as FIFO, LIFO, or random?</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> generic class offer FIFO access.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>When to Use a Thread-Safe Collection<ept id="p1">](../../../docs/standard/collections/thread-safe/when-to-use-a-thread-safe-collection.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> generic class offer LIFO access.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>When to Use a Thread-Safe Collection<ept id="p1">](../../../docs/standard/collections/thread-safe/when-to-use-a-thread-safe-collection.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> generic class allows sequential access either from the head to the tail, or from the tail to the head.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Do you need to access each element by index?</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> classes and the <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class offer access to their elements by the zero-based index of the element.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.Specialized.StringDictionary&gt;</ph> classes, and the <ph id="ph5">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> and <ph id="ph6">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic classes offer access to their elements by the key of the element.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> classes, and the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> generic classes offer access to their elements by either the zero-based index or the key of the element.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Will each element contain one value, a combination of one key and one value, or a combination of one key and multiple values?</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>One value: Use any of the collections based on the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface or the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>One key and one value: Use any of the collections based on the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface or the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generic interface.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One value with embedded key: Use the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> generic class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>One key and multiple values: Use the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Do you need to sort the elements differently from how they were entered?</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> class sorts its elements by their hash codes.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>generic classes sort their elements by the key, based on implementations of the <ph id="ph4">&lt;xref:System.Collections.IComparer&gt;</ph> interface and the <ph id="ph5">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> generic interface.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> provides a <ph id="ph2">&lt;xref:System.Collections.ArrayList.Sort%2A&gt;</ph> method that takes an <ph id="ph3">&lt;xref:System.Collections.IComparer&gt;</ph> implementation as a parameter.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Its generic counterpart, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> generic class, provides a <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> method that takes an implementation of the <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> generic interface as a parameter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Do you need fast searches and retrieval of information?</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> is faster than <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> for small collections (10 items or fewer).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class provides faster lookup than the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic class.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The multi-threaded implementation is <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> provides fast multi-threaded insertion for unordered data.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about both multi-threaded types, see <bpt id="p1">[</bpt>When to Use a Thread-Safe Collection<ept id="p1">](../../../docs/standard/collections/thread-safe/when-to-use-a-thread-safe-collection.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Do you need collections that accept only strings?</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> (based on <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>) and <ph id="ph3">&lt;xref:System.Collections.Specialized.StringDictionary&gt;</ph> (based on <ph id="ph4">&lt;xref:System.Collections.IDictionary&gt;</ph>) are in the <ph id="ph5">&lt;xref:System.Collections.Specialized&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In addition, you can use any of the generic collection classes in the <ph id="ph1">&lt;xref:System.Collections.Generic&gt;</ph> namespace as strongly typed string collections by specifying the <ph id="ph2">&lt;xref:System.String&gt;</ph> class for their generic type arguments.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>LINQ to Objects and PLINQ</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>LINQ to Objects enables developers to use LINQ queries to access in-memory objects as long as the object type implements <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>LINQ queries provide a common pattern for accessing data, are typically more concise and readable than standard <ph id="ph1">`foreach`</ph> loops, and provide filtering, ordering, and grouping capabilities.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to Objects<ept id="p1">](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>PLINQ provides a parallel implementation of LINQ to Objects that can offer faster query execution in many scenarios, through more efficient use of multi-core computers.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Parallel LINQ (PLINQ)<ept id="p1">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Thread-Safe Collections<ept id="p1">](../../../docs/standard/collections/thread-safe/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>