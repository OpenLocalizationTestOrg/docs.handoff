{"content":"---\ntitle: \"How to: Exchange Queued Messages with WCF Endpoints\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 938e7825-f63a-4c3d-b603-63772fabfdb3\n---\n# How to: Exchange Queued Messages with WCF Endpoints\nQueues ensure that reliable messaging can occur between a client and a Windows Communication Foundation (WCF) service, even if the service is not available at the time of communication. The following procedures show how to ensure durable communication between a client and a service by using the standard queued binding when implementing the WCF service.  \n  \n This section explains how to use <xref:System.ServiceModel.NetMsmqBinding> for queued communication between a WCF client and a WCF service.  \n  \n### To use queuing in a WCF service  \n  \n1.  Define a service contract using an interface marked with the <xref:System.ServiceModel.ServiceContractAttribute>. Mark the operations in the interface that are part of the service contract with the <xref:System.ServiceModel.OperationContractAttribute> and specify them as one-way because no response to the method is returned. The following code provides an example service contract and its operation definition.  \n  \n     [!code-csharp[S_Msmq_Transacted#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/service.cs#1)]\n     [!code-vb[S_Msmq_Transacted#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/service.vb#1)]  \n  \n2.  When the service contract passes user-defined types, you must define data contracts for those types. The following code shows two data contracts, `PurchaseOrder` and `PurchaseOrderLineItem`. These two types define data that is sent to the service. (Note that the classes that define this data contract also define a number of methods. These methods are not considered part of the data contract. Only those members that are declared with the <xref:System.Runtime.Serialization.DataMemberAttribute> attribute are part of the data contract.)  \n  \n     [!code-csharp[S_Msmq_Transacted#2](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/service.cs#2)]\n     [!code-vb[S_Msmq_Transacted#2](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/service.vb#2)]  \n  \n3.  Implement the methods of the service contract defined in the interface in a class.  \n  \n     [!code-csharp[S_Msmq_Transacted#3](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/service.cs#3)]\n     [!code-vb[S_Msmq_Transacted#3](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/service.vb#3)]  \n  \n     Notice the <xref:System.ServiceModel.OperationBehaviorAttribute> placed on the `SubmitPurchaseOrder` method. This specifies that this operation must be called within a transaction and that the transaction automatically completes when the method completes.  \n  \n4.  Create a transactional queue using <xref:System.Messaging>. You can choose to create the queue using Microsoft Message Queuing (MSMQ) Microsoft Management Console (MMC) instead. If so, make sure you create a transactional queue.  \n  \n     [!code-csharp[S_Msmq_Transacted#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/hostapp.cs#4)]\n     [!code-vb[S_Msmq_Transacted#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/hostapp.vb#4)]  \n  \n5.  Define a <xref:System.ServiceModel.Description.ServiceEndpoint> in configuration that specifies the service address and uses the standard <xref:System.ServiceModel.NetMsmqBinding> binding. For more information about using WCF configuration, see [Configuring WCF services](../configuring-services.md).  \n\n6.  Create a host for the `OrderProcessing` service using <xref:System.ServiceModel.ServiceHost> that reads messages from the queue and processes them. Open the service host to make the service available. Display a message that tells the user to press any key to terminate the service. Call `ReadLine` to wait for the key to be pressed and then close the service.  \n  \n     [!code-csharp[S_Msmq_Transacted#6](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/hostapp.cs#6)]\n     [!code-vb[S_Msmq_Transacted#6](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/hostapp.vb#6)]  \n  \n### To create a client for the queued service  \n  \n1.  The following example shows how to run the hosting application and use the Svcutil.exe tool to create the WCF client.  \n  \n    ```  \n    svcutil http://localhost:8000/ServiceModelSamples/service  \n    ```  \n  \n2.  Define a <xref:System.ServiceModel.Description.ServiceEndpoint> in configuration that specifies the address and uses the standard <xref:System.ServiceModel.NetMsmqBinding> binding, as shown in the following example.  \n\n3.  Create a transaction scope to write to the transactional queue, call the `SubmitPurchaseOrder` operation and close the WCF client, as shown in the following example.  \n  \n     [!code-csharp[S_Msmq_Transacted#8](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/client.cs#8)]\n     [!code-vb[S_Msmq_Transacted#8](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/client.vb#8)]  \n  \n## Example  \n The following examples show the service code, hosting application, App.config file, and client code included for this example.  \n  \n [!code-csharp[S_Msmq_Transacted#9](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/service.cs#9)]\n [!code-vb[S_Msmq_Transacted#9](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/service.vb#9)]  \n  \n [!code-csharp[S_Msmq_Transacted#10](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/hostapp.cs#10)]\n [!code-vb[S_Msmq_Transacted#10](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/hostapp.vb#10)]  \n\n [!code-csharp[S_Msmq_Transacted#12](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/client.cs#12)]\n [!code-vb[S_Msmq_Transacted#12](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/client.vb#12)]  \n\n## See also\n\n- <xref:System.ServiceModel.NetMsmqBinding>\n- [Transacted MSMQ Binding](../../../../docs/framework/wcf/samples/transacted-msmq-binding.md)\n- [Queuing in WCF](../../../../docs/framework/wcf/feature-details/queuing-in-wcf.md)\n- [How to: Exchange Messages with WCF Endpoints and Message Queuing Applications](../../../../docs/framework/wcf/feature-details/how-to-exchange-messages-with-wcf-endpoints-and-message-queuing-applications.md)\n- [Windows Communication Foundation to Message Queuing](../../../../docs/framework/wcf/samples/wcf-to-message-queuing.md)\n- [Installing Message Queuing (MSMQ)](../../../../docs/framework/wcf/samples/installing-message-queuing-msmq.md)\n- [Message Queuing to Windows Communication Foundation](../../../../docs/framework/wcf/samples/message-queuing-to-wcf.md)\n- [Message Security over Message Queuing](../../../../docs/framework/wcf/samples/message-security-over-message-queuing.md)\n","nodes":[{"pos":[4,169],"embed":true,"restype":"x-metadata","content":"title: \"How to: Exchange Queued Messages with WCF Endpoints\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 938e7825-f63a-4c3d-b603-63772fabfdb3","nodes":[{"content":"How to: Exchange Queued Messages with WCF Endpoints","nodes":[{"pos":[0,51],"content":"How to: Exchange Queued Messages with WCF Endpoints","nodes":[{"content":"How to: Exchange Queued Messages with WCF Endpoints","pos":[0,51]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[176,227],"content":"How to: Exchange Queued Messages with WCF Endpoints","linkify":"How to: Exchange Queued Messages with WCF Endpoints","nodes":[{"content":"How to: Exchange Queued Messages with WCF Endpoints","pos":[0,51]}]},{"content":"Queues ensure that reliable messaging can occur between a client and a Windows Communication Foundation (WCF) service, even if the service is not available at the time of communication.","pos":[228,413]},{"content":"The following procedures show how to ensure durable communication between a client and a service by using the standard queued binding when implementing the WCF service.","pos":[414,582]},{"pos":[589,728],"content":"This section explains how to use <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetMsmqBinding&gt;</ph> for queued communication between a WCF client and a WCF service.","source":"This section explains how to use <xref:System.ServiceModel.NetMsmqBinding> for queued communication between a WCF client and a WCF service."},{"pos":[738,769],"content":"To use queuing in a WCF service","linkify":"To use queuing in a WCF service","nodes":[{"content":"To use queuing in a WCF service","pos":[0,31]}]},{"content":"Define a service contract using an interface marked with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>.","pos":[779,892],"source":"Define a service contract using an interface marked with the <xref:System.ServiceModel.ServiceContractAttribute>."},{"content":"Mark the operations in the interface that are part of the service contract with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> and specify them as one-way because no response to the method is returned.","pos":[893,1105],"source":" Mark the operations in the interface that are part of the service contract with the <xref:System.ServiceModel.OperationContractAttribute> and specify them as one-way because no response to the method is returned."},{"content":"The following code provides an example service contract and its operation definition.","pos":[1106,1191]},{"pos":[1202,1453],"content":"[!code-csharp[S_Msmq_Transacted#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/service.cs#1)]\n [!code-vb[S_Msmq_Transacted#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/service.vb#1)]","leadings":["","    "],"nodes":[]},{"content":"When the service contract passes user-defined types, you must define data contracts for those types.","pos":[1463,1563]},{"content":"The following code shows two data contracts, <ph id=\"ph1\">`PurchaseOrder`</ph> and <ph id=\"ph2\">`PurchaseOrderLineItem`</ph>.","pos":[1564,1653],"source":" The following code shows two data contracts, `PurchaseOrder` and `PurchaseOrderLineItem`."},{"content":"These two types define data that is sent to the service.","pos":[1654,1710]},{"content":"(Note that the classes that define this data contract also define a number of methods.","pos":[1711,1797]},{"content":"These methods are not considered part of the data contract.","pos":[1798,1857]},{"content":"Only those members that are declared with the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> attribute are part of the data contract.)","pos":[1858,2001],"source":" Only those members that are declared with the <xref:System.Runtime.Serialization.DataMemberAttribute> attribute are part of the data contract.)"},{"pos":[2012,2263],"content":"[!code-csharp[S_Msmq_Transacted#2](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/service.cs#2)]\n [!code-vb[S_Msmq_Transacted#2](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/service.vb#2)]","leadings":["","    "],"nodes":[]},{"content":"Implement the methods of the service contract defined in the interface in a class.","pos":[2273,2355]},{"pos":[2366,2617],"content":"[!code-csharp[S_Msmq_Transacted#3](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/service.cs#3)]\n [!code-vb[S_Msmq_Transacted#3](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/service.vb#3)]","leadings":["","    "],"nodes":[]},{"content":"Notice the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> placed on the <ph id=\"ph2\">`SubmitPurchaseOrder`</ph> method.","pos":[2628,2736],"source":"Notice the <xref:System.ServiceModel.OperationBehaviorAttribute> placed on the `SubmitPurchaseOrder` method."},{"content":"This specifies that this operation must be called within a transaction and that the transaction automatically completes when the method completes.","pos":[2737,2883]},{"content":"Create a transactional queue using <ph id=\"ph1\">&lt;xref:System.Messaging&gt;</ph>.","pos":[2893,2952],"source":"Create a transactional queue using <xref:System.Messaging>."},{"content":"You can choose to create the queue using Microsoft Message Queuing (MSMQ) Microsoft Management Console (MMC) instead.","pos":[2953,3070]},{"content":"If so, make sure you create a transactional queue.","pos":[3071,3121]},{"pos":[3132,3383],"content":"[!code-csharp[S_Msmq_Transacted#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/hostapp.cs#4)]\n [!code-vb[S_Msmq_Transacted#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/hostapp.vb#4)]","leadings":["","    "],"nodes":[]},{"content":"Define a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> in configuration that specifies the service address and uses the standard <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetMsmqBinding&gt;</ph> binding.","pos":[3393,3581],"source":"Define a <xref:System.ServiceModel.Description.ServiceEndpoint> in configuration that specifies the service address and uses the standard <xref:System.ServiceModel.NetMsmqBinding> binding."},{"content":"For more information about using WCF configuration, see <bpt id=\"p1\">[</bpt>Configuring WCF services<ept id=\"p1\">](../configuring-services.md)</ept>.","pos":[3582,3693],"source":" For more information about using WCF configuration, see [Configuring WCF services](../configuring-services.md)."},{"content":"Create a host for the <ph id=\"ph1\">`OrderProcessing`</ph> service using <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> that reads messages from the queue and processes them.","pos":[3701,3848],"source":"Create a host for the `OrderProcessing` service using <xref:System.ServiceModel.ServiceHost> that reads messages from the queue and processes them."},{"content":"Open the service host to make the service available.","pos":[3849,3901]},{"content":"Display a message that tells the user to press any key to terminate the service.","pos":[3902,3982]},{"content":"Call <ph id=\"ph1\">`ReadLine`</ph> to wait for the key to be pressed and then close the service.","pos":[3983,4060],"source":" Call `ReadLine` to wait for the key to be pressed and then close the service."},{"pos":[4071,4322],"content":"[!code-csharp[S_Msmq_Transacted#6](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/hostapp.cs#6)]\n [!code-vb[S_Msmq_Transacted#6](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/hostapp.vb#6)]","leadings":["","    "],"nodes":[]},{"pos":[4332,4373],"content":"To create a client for the queued service","linkify":"To create a client for the queued service","nodes":[{"content":"To create a client for the queued service","pos":[0,41]}]},{"content":"The following example shows how to run the hosting application and use the Svcutil.exe tool to create the WCF client.","pos":[4383,4500]},{"pos":[4597,4812],"content":"Define a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> in configuration that specifies the address and uses the standard <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetMsmqBinding&gt;</ph> binding, as shown in the following example.","source":"Define a <xref:System.ServiceModel.Description.ServiceEndpoint> in configuration that specifies the address and uses the standard <xref:System.ServiceModel.NetMsmqBinding> binding, as shown in the following example."},{"pos":[4820,4985],"content":"Create a transaction scope to write to the transactional queue, call the <ph id=\"ph1\">`SubmitPurchaseOrder`</ph> operation and close the WCF client, as shown in the following example.","source":"Create a transaction scope to write to the transactional queue, call the `SubmitPurchaseOrder` operation and close the WCF client, as shown in the following example."},{"pos":[4996,5245],"content":"[!code-csharp[S_Msmq_Transacted#8](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_msmq_transacted/cs/client.cs#8)]\n [!code-vb[S_Msmq_Transacted#8](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_msmq_transacted/vb/client.vb#8)]","leadings":["","    "],"nodes":[]},{"pos":[5254,5261],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following examples show the service code, hosting application, App.config file, and client code included for this example.","pos":[5265,5391]},{"pos":[6164,6172],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[6220,6312],"content":"<bpt id=\"p1\">[</bpt>Transacted MSMQ Binding<ept id=\"p1\">](../../../../docs/framework/wcf/samples/transacted-msmq-binding.md)</ept>","source":"[Transacted MSMQ Binding](../../../../docs/framework/wcf/samples/transacted-msmq-binding.md)"},{"pos":[6315,6397],"content":"<bpt id=\"p1\">[</bpt>Queuing in WCF<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/queuing-in-wcf.md)</ept>","source":"[Queuing in WCF](../../../../docs/framework/wcf/feature-details/queuing-in-wcf.md)"},{"pos":[6400,6607],"content":"<bpt id=\"p1\">[</bpt>How to: Exchange Messages with WCF Endpoints and Message Queuing Applications<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-exchange-messages-with-wcf-endpoints-and-message-queuing-applications.md)</ept>","source":"[How to: Exchange Messages with WCF Endpoints and Message Queuing Applications](../../../../docs/framework/wcf/feature-details/how-to-exchange-messages-with-wcf-endpoints-and-message-queuing-applications.md)"},{"pos":[6610,6729],"content":"<bpt id=\"p1\">[</bpt>Windows Communication Foundation to Message Queuing<ept id=\"p1\">](../../../../docs/framework/wcf/samples/wcf-to-message-queuing.md)</ept>","source":"[Windows Communication Foundation to Message Queuing](../../../../docs/framework/wcf/samples/wcf-to-message-queuing.md)"},{"pos":[6732,6842],"content":"<bpt id=\"p1\">[</bpt>Installing Message Queuing (MSMQ)<ept id=\"p1\">](../../../../docs/framework/wcf/samples/installing-message-queuing-msmq.md)</ept>","source":"[Installing Message Queuing (MSMQ)](../../../../docs/framework/wcf/samples/installing-message-queuing-msmq.md)"},{"pos":[6845,6964],"content":"<bpt id=\"p1\">[</bpt>Message Queuing to Windows Communication Foundation<ept id=\"p1\">](../../../../docs/framework/wcf/samples/message-queuing-to-wcf.md)</ept>","source":"[Message Queuing to Windows Communication Foundation](../../../../docs/framework/wcf/samples/message-queuing-to-wcf.md)"},{"pos":[6967,7087],"content":"<bpt id=\"p1\">[</bpt>Message Security over Message Queuing<ept id=\"p1\">](../../../../docs/framework/wcf/samples/message-security-over-message-queuing.md)</ept>","source":"[Message Security over Message Queuing](../../../../docs/framework/wcf/samples/message-security-over-message-queuing.md)"}]}