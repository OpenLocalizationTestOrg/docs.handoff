{"content":"---\ntitle: \"How to: Encrypt XML Elements with Symmetric Keys\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"AES algorithm\"\n  - \"cryptography [.NET Framework], symmetric keys\"\n  - \"encryption [.NET Framework], symmetric keys\"\n  - \"symmetric keys\"\n  - \"System.Security.Cryptography.EncryptedXml class\"\n  - \"System.Security.Cryptography.RijndaelManaged class\"\n  - \"XML encryption\"\n  - \"Advanced Encryption Standard algorithm\"\n  - \"Rijndael\"\nms.assetid: d8461a44-aa2c-4ef4-b3e4-ab7cbaaee1b5\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# How to: Encrypt XML Elements with Symmetric Keys\nYou can use the classes in the <xref:System.Security.Cryptography.Xml> namespace to encrypt an element within an XML document.  XML Encryption allows you to store or transport sensitive XML, without worrying about the data being easily read.  This procedure decrypts an XML element using the Advanced Encryption Standard (AES) algorithm, also known as Rijndael.  \n  \n For information about how to decrypt an XML element that was encrypted using this procedure, see [How to: Decrypt XML Elements with Symmetric Keys](../../../docs/standard/security/how-to-decrypt-xml-elements-with-symmetric-keys.md).  \n  \n When you use a symmetric algorithm like AES to encrypt XML data, you must use the same key to encrypt and decrypt the XML data.  The example in this procedure assumes that the encrypted XML will be decrypted using the same key, and that the encrypting and decrypting parties agree on the algorithm and key to use.  This example does not store or encrypt the AES key within the encrypted XML.  \n  \n This example is appropriate for situations where a single application needs to encrypt data based on a session key stored in memory, or based on a cryptographically strong key derived from a password.  For situations where two or more applications need to share encrypted XML data, consider using an encryption scheme based on an asymmetric algorithm or an X.509 certificate.  \n  \n### To encrypt an XML element with a symmetric key  \n  \n1.  Generate a symmetric key using the <xref:System.Security.Cryptography.RijndaelManaged> class.  This key will be used to encrypt the XML element.  \n  \n     [!code-csharp[HowToEncryptXMLElementSymmetric#2](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#2)]\n     [!code-vb[HowToEncryptXMLElementSymmetric#2](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#2)]  \n  \n2.  Create an <xref:System.Xml.XmlDocument> object by loading an XML file from disk.  The <xref:System.Xml.XmlDocument> object contains the XML element to encrypt.  \n  \n     [!code-csharp[HowToEncryptXMLElementSymmetric#3](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#3)]\n     [!code-vb[HowToEncryptXMLElementSymmetric#3](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#3)]  \n  \n3.  Find the specified element in the <xref:System.Xml.XmlDocument> object and create a new <xref:System.Xml.XmlElement> object to represent the element you want to encrypt.  In this example, the `\"creditcard\"` element is encrypted.  \n  \n     [!code-csharp[HowToEncryptXMLElementSymmetric#4](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#4)]\n     [!code-vb[HowToEncryptXMLElementSymmetric#4](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#4)]  \n  \n4.  Create a new instance of the <xref:System.Security.Cryptography.Xml.EncryptedXml> class and use it to encrypt the <xref:System.Xml.XmlElement> with the symmetric key.  The <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method returns the encrypted element as an array of encrypted bytes.  \n  \n     [!code-csharp[HowToEncryptXMLElementSymmetric#5](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#5)]\n     [!code-vb[HowToEncryptXMLElementSymmetric#5](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#5)]  \n  \n5.  Construct an <xref:System.Security.Cryptography.Xml.EncryptedData> object and populate it with the URL identifier of the XML Encryption element.  This URL identifier lets a decrypting party know that the XML contains an encrypted element.  You can use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> field to specify the URL identifier.  \n  \n     [!code-csharp[HowToEncryptXMLElementSymmetric#6](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#6)]\n     [!code-vb[HowToEncryptXMLElementSymmetric#6](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#6)]  \n  \n6.  Create an <xref:System.Security.Cryptography.Xml.EncryptionMethod> object that is initialized to the URL identifier of the cryptographic algorithm used to generate the key.  Pass the <xref:System.Security.Cryptography.Xml.EncryptionMethod> object to the <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod%2A> property.  \n  \n     [!code-csharp[HowToEncryptXMLElementSymmetric#7](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#7)]\n     [!code-vb[HowToEncryptXMLElementSymmetric#7](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#7)]  \n  \n7.  Add the encrypted element data to the <xref:System.Security.Cryptography.Xml.EncryptedData> object.  \n  \n     [!code-csharp[HowToEncryptXMLElementSymmetric#8](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#8)]\n     [!code-vb[HowToEncryptXMLElementSymmetric#8](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#8)]  \n  \n8.  Replace the element from the original <xref:System.Xml.XmlDocument> object with the <xref:System.Security.Cryptography.Xml.EncryptedData> element.  \n  \n     [!code-csharp[HowToEncryptXMLElementSymmetric#9](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#9)]\n     [!code-vb[HowToEncryptXMLElementSymmetric#9](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#9)]  \n  \n## Example  \n  \n```xml  \n<root>  \n    <creditcard>  \n        <number>19834209</number>  \n        <expiry>02/02/2002</expiry>  \n    </creditcard>  \n</root>  \n```  \n  \n [!code-csharp[HowToEncryptXMLElementSymmetric#1](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#1)]\n [!code-vb[HowToEncryptXMLElementSymmetric#1](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#1)]  \n  \n## Compiling the Code  \n  \n-   To compile this example, you need to include a reference to `System.Security.dll`.  \n  \n-   Include the following namespaces: <xref:System.Xml>, <xref:System.Security.Cryptography>, and <xref:System.Security.Cryptography.Xml>.  \n  \n## .NET Framework Security  \n Never store a cryptographic key in plaintext or transfer a key between machines in plaintext.  Instead, use a secure key container to store cryptographic keys.  \n  \n When you are done using a cryptographic key, clear it from memory by setting each byte to zero or by calling the <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> method of the managed cryptography class.  \n  \n## See also\n\n- <xref:System.Security.Cryptography.Xml>\n- [How to: Decrypt XML Elements with Symmetric Keys](../../../docs/standard/security/how-to-decrypt-xml-elements-with-symmetric-keys.md)\n","nodes":[{"pos":[4,591],"embed":true,"restype":"x-metadata","content":"title: \"How to: Encrypt XML Elements with Symmetric Keys\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"AES algorithm\"\n  - \"cryptography [.NET Framework], symmetric keys\"\n  - \"encryption [.NET Framework], symmetric keys\"\n  - \"symmetric keys\"\n  - \"System.Security.Cryptography.EncryptedXml class\"\n  - \"System.Security.Cryptography.RijndaelManaged class\"\n  - \"XML encryption\"\n  - \"Advanced Encryption Standard algorithm\"\n  - \"Rijndael\"\nms.assetid: d8461a44-aa2c-4ef4-b3e4-ab7cbaaee1b5\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"How to: Encrypt XML Elements with Symmetric Keys","nodes":[{"pos":[0,48],"content":"How to: Encrypt XML Elements with Symmetric Keys","nodes":[{"content":"How to: Encrypt XML Elements with Symmetric Keys","pos":[0,48]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[598,646],"content":"How to: Encrypt XML Elements with Symmetric Keys","linkify":"How to: Encrypt XML Elements with Symmetric Keys","nodes":[{"content":"How to: Encrypt XML Elements with Symmetric Keys","pos":[0,48]}]},{"content":"You can use the classes in the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml&gt;</ph> namespace to encrypt an element within an XML document.","pos":[647,773],"source":"You can use the classes in the <xref:System.Security.Cryptography.Xml> namespace to encrypt an element within an XML document."},{"content":"XML Encryption allows you to store or transport sensitive XML, without worrying about the data being easily read.","pos":[775,888]},{"content":"This procedure decrypts an XML element using the Advanced Encryption Standard (AES) algorithm, also known as Rijndael.","pos":[890,1008]},{"pos":[1015,1247],"content":"For information about how to decrypt an XML element that was encrypted using this procedure, see <bpt id=\"p1\">[</bpt>How to: Decrypt XML Elements with Symmetric Keys<ept id=\"p1\">](../../../docs/standard/security/how-to-decrypt-xml-elements-with-symmetric-keys.md)</ept>.","source":"For information about how to decrypt an XML element that was encrypted using this procedure, see [How to: Decrypt XML Elements with Symmetric Keys](../../../docs/standard/security/how-to-decrypt-xml-elements-with-symmetric-keys.md)."},{"content":"When you use a symmetric algorithm like AES to encrypt XML data, you must use the same key to encrypt and decrypt the XML data.","pos":[1254,1381]},{"content":"The example in this procedure assumes that the encrypted XML will be decrypted using the same key, and that the encrypting and decrypting parties agree on the algorithm and key to use.","pos":[1383,1567]},{"content":"This example does not store or encrypt the AES key within the encrypted XML.","pos":[1569,1645]},{"content":"This example is appropriate for situations where a single application needs to encrypt data based on a session key stored in memory, or based on a cryptographically strong key derived from a password.","pos":[1652,1852]},{"content":"For situations where two or more applications need to share encrypted XML data, consider using an encryption scheme based on an asymmetric algorithm or an X.509 certificate.","pos":[1854,2027]},{"pos":[2037,2083],"content":"To encrypt an XML element with a symmetric key","linkify":"To encrypt an XML element with a symmetric key","nodes":[{"content":"To encrypt an XML element with a symmetric key","pos":[0,46]}]},{"content":"Generate a symmetric key using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> class.","pos":[2093,2186],"source":"Generate a symmetric key using the <xref:System.Security.Cryptography.RijndaelManaged> class."},{"content":"This key will be used to encrypt the XML element.","pos":[2188,2237]},{"pos":[2248,2547],"content":"[!code-csharp[HowToEncryptXMLElementSymmetric#2](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#2)]\n [!code-vb[HowToEncryptXMLElementSymmetric#2](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#2)]","leadings":["","    "],"nodes":[]},{"content":"Create an <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object by loading an XML file from disk.","pos":[2557,2637],"source":"Create an <xref:System.Xml.XmlDocument> object by loading an XML file from disk."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object contains the XML element to encrypt.","pos":[2639,2716],"source":"  The <xref:System.Xml.XmlDocument> object contains the XML element to encrypt."},{"pos":[2727,3026],"content":"[!code-csharp[HowToEncryptXMLElementSymmetric#3](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#3)]\n [!code-vb[HowToEncryptXMLElementSymmetric#3](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#3)]","leadings":["","    "],"nodes":[]},{"content":"Find the specified element in the <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object and create a new <ph id=\"ph2\">&lt;xref:System.Xml.XmlElement&gt;</ph> object to represent the element you want to encrypt.","pos":[3036,3205],"source":"Find the specified element in the <xref:System.Xml.XmlDocument> object and create a new <xref:System.Xml.XmlElement> object to represent the element you want to encrypt."},{"content":"In this example, the <ph id=\"ph1\">`\"creditcard\"`</ph> element is encrypted.","pos":[3207,3264],"source":"  In this example, the `\"creditcard\"` element is encrypted."},{"pos":[3275,3574],"content":"[!code-csharp[HowToEncryptXMLElementSymmetric#4](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#4)]\n [!code-vb[HowToEncryptXMLElementSymmetric#4](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#4)]","leadings":["","    "],"nodes":[]},{"content":"Create a new instance of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml&gt;</ph> class and use it to encrypt the <ph id=\"ph2\">&lt;xref:System.Xml.XmlElement&gt;</ph> with the symmetric key.","pos":[3584,3750],"source":"Create a new instance of the <xref:System.Security.Cryptography.Xml.EncryptedXml> class and use it to encrypt the <xref:System.Xml.XmlElement> with the symmetric key."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A&gt;</ph> method returns the encrypted element as an array of encrypted bytes.","pos":[3752,3892],"source":"  The <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method returns the encrypted element as an array of encrypted bytes."},{"pos":[3903,4202],"content":"[!code-csharp[HowToEncryptXMLElementSymmetric#5](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#5)]\n [!code-vb[HowToEncryptXMLElementSymmetric#5](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#5)]","leadings":["","    "],"nodes":[]},{"content":"Construct an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt;</ph> object and populate it with the URL identifier of the XML Encryption element.","pos":[4212,4356],"source":"Construct an <xref:System.Security.Cryptography.Xml.EncryptedData> object and populate it with the URL identifier of the XML Encryption element."},{"content":"This URL identifier lets a decrypting party know that the XML contains an encrypted element.","pos":[4358,4450]},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl&gt;</ph> field to specify the URL identifier.","pos":[4452,4574],"source":"  You can use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> field to specify the URL identifier."},{"pos":[4585,4884],"content":"[!code-csharp[HowToEncryptXMLElementSymmetric#6](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#6)]\n [!code-vb[HowToEncryptXMLElementSymmetric#6](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#6)]","leadings":["","    "],"nodes":[]},{"content":"Create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.EncryptionMethod&gt;</ph> object that is initialized to the URL identifier of the cryptographic algorithm used to generate the key.","pos":[4894,5066],"source":"Create an <xref:System.Security.Cryptography.Xml.EncryptionMethod> object that is initialized to the URL identifier of the cryptographic algorithm used to generate the key."},{"content":"Pass the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.EncryptionMethod&gt;</ph> object to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod%2A&gt;</ph> property.","pos":[5068,5231],"source":"  Pass the <xref:System.Security.Cryptography.Xml.EncryptionMethod> object to the <xref:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod%2A> property."},{"pos":[5242,5541],"content":"[!code-csharp[HowToEncryptXMLElementSymmetric#7](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#7)]\n [!code-vb[HowToEncryptXMLElementSymmetric#7](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#7)]","leadings":["","    "],"nodes":[]},{"pos":[5551,5650],"content":"Add the encrypted element data to the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt;</ph> object.","source":"Add the encrypted element data to the <xref:System.Security.Cryptography.Xml.EncryptedData> object."},{"pos":[5661,5960],"content":"[!code-csharp[HowToEncryptXMLElementSymmetric#8](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#8)]\n [!code-vb[HowToEncryptXMLElementSymmetric#8](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#8)]","leadings":["","    "],"nodes":[]},{"pos":[5970,6116],"content":"Replace the element from the original <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object with the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.EncryptedData&gt;</ph> element.","source":"Replace the element from the original <xref:System.Xml.XmlDocument> object with the <xref:System.Security.Cryptography.Xml.EncryptedData> element."},{"pos":[6127,6426],"content":"[!code-csharp[HowToEncryptXMLElementSymmetric#9](../../../samples/snippets/csharp/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/cs/sample.cs#9)]\n [!code-vb[HowToEncryptXMLElementSymmetric#9](../../../samples/snippets/visualbasic/VS_Snippets_CLR/HowToEncryptXMLElementSymmetric/vb/sample.vb#9)]","leadings":["","    "],"nodes":[]},{"pos":[6435,6442],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6903,6921],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[6931,7013],"content":"To compile this example, you need to include a reference to <ph id=\"ph1\">`System.Security.dll`</ph>.","source":"To compile this example, you need to include a reference to `System.Security.dll`."},{"pos":[7023,7157],"content":"Include the following namespaces: <ph id=\"ph1\">&lt;xref:System.Xml&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Cryptography&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml&gt;</ph>.","source":"Include the following namespaces: <xref:System.Xml>, <xref:System.Security.Cryptography>, and <xref:System.Security.Cryptography.Xml>."},{"pos":[7166,7189],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"content":"Never store a cryptographic key in plaintext or transfer a key between machines in plaintext.","pos":[7193,7286]},{"content":"Instead, use a secure key container to store cryptographic keys.","pos":[7288,7352]},{"pos":[7359,7577],"content":"When you are done using a cryptographic key, clear it from memory by setting each byte to zero or by calling the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A&gt;</ph> method of the managed cryptography class.","source":"When you are done using a cryptographic key, clear it from memory by setting each byte to zero or by calling the <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> method of the managed cryptography class."},{"pos":[7586,7594],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[7640,7774],"content":"<bpt id=\"p1\">[</bpt>How to: Decrypt XML Elements with Symmetric Keys<ept id=\"p1\">](../../../docs/standard/security/how-to-decrypt-xml-elements-with-symmetric-keys.md)</ept>","source":"[How to: Decrypt XML Elements with Symmetric Keys](../../../docs/standard/security/how-to-decrypt-xml-elements-with-symmetric-keys.md)"}]}