{"content":"---\ntitle: \"Serializing in Json with Message Level Programming\"\nms.date: \"03/30/2017\"\nms.assetid: 5f940ba2-57ee-4c49-a779-957c5e7e71fa\n---\n# Serializing in Json with Message Level Programming\nWCF supports serializing data in JSON format. This topic describes how to tell WCF to serialize your types using the <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer>.  \n  \n## Typed Message Programming  \n The <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> is used when the <xref:System.ServiceModel.Web.WebGetAttribute> or the <xref:System.ServiceModel.Web.WebInvokeAttribute> is applied to a service operation. Both of these attributes allow you to specify the `RequestFormat` and `ResponseFormat`. To use JSON for requests and responses. set both of these to `WebMessageFormat.Json`.  In order to use JSON, you must use the <xref:System.ServiceModel.WebHttpBinding>, which automatically configures the <xref:System.ServiceModel.Description.WebHttpBehavior>. For more information about WCF serialization, see [Serialization and Deserialization](../../../../docs/framework/wcf/feature-details/serialization-and-deserialization.md). For more information about JSON and WCF, see [Service Station - An Introduction To RESTful Services With WCF](https://msdn.microsoft.com/magazine/dd315413.aspx).  \n  \n> [!IMPORTANT]\n>  Using JSON requires use of <xref:System.ServiceModel.WebHttpBinding> and <xref:System.ServiceModel.Description.WebHttpBehavior> which do not support SOAP communication. Services that communicate with the <xref:System.ServiceModel.WebHttpBinding> do not support exposing service metadata so you will not be able to use Visual Studio’s Add Service Reference functionality or the svcutil command-line tool to generate a client-side proxy. For more information how you can programmatically call services that use <xref:System.ServiceModel.WebHttpBinding>, see [How to Consume REST Services with WCF](https://blogs.msdn.com/b/pedram/archive/2008/04/21/how-to-consume-rest-services-with-wcf.aspx).  \n  \n## Untyped Message Programming  \n When working directly with untyped Message objects, you must explicitly set the properties on the untyped message to serialize it as JSON. The following code snippet shows how to do this.  \n  \n```  \n Message response = Message.CreateMessage(  \n                  MessageVersion.None,    // No SOAP message version  \n                             \"*\",                     // SOAP action, ignored since this is JSON  \n                             \"Response string: JSON format specified\", // Message body  \n                             new DataContractJsonSerializer(typeof(string))); // Specify DataContractJsonSerializer  \n      response.Properties.Add( WebBodyFormatMessageProperty.Name,   \n                    new WebBodyFormatMessageProperty(WebContentFormat.Json)); // Use JSON format  \n```  \n  \n## See also\n\n- [AJAX Integration and JSON Support](../../../../docs/framework/wcf/feature-details/ajax-integration-and-json-support.md)\n- [Stand-Alone JSON Serialization](../../../../docs/framework/wcf/feature-details/stand-alone-json-serialization.md)\n- [JSON Serialization](../../../../docs/framework/wcf/samples/json-serialization.md)\n","nodes":[{"pos":[4,134],"embed":true,"restype":"x-metadata","content":"title: \"Serializing in Json with Message Level Programming\"\nms.date: \"03/30/2017\"\nms.assetid: 5f940ba2-57ee-4c49-a779-957c5e7e71fa","nodes":[{"content":"Serializing in Json with Message Level Programming","nodes":[{"pos":[0,50],"content":"Serializing in Json with Message Level Programming","nodes":[{"content":"Serializing in Json with Message Level Programming","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[141,191],"content":"Serializing in Json with Message Level Programming","linkify":"Serializing in Json with Message Level Programming","nodes":[{"content":"Serializing in Json with Message Level Programming","pos":[0,50]}]},{"content":"WCF supports serializing data in JSON format.","pos":[192,237]},{"content":"This topic describes how to tell WCF to serialize your types using the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph>.","pos":[238,377],"source":" This topic describes how to tell WCF to serialize your types using the <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer>."},{"pos":[386,411],"content":"Typed Message Programming","linkify":"Typed Message Programming","nodes":[{"content":"Typed Message Programming","pos":[0,25]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> is used when the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> or the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> is applied to a service operation.","pos":[415,642],"source":"The <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> is used when the <xref:System.ServiceModel.Web.WebGetAttribute> or the <xref:System.ServiceModel.Web.WebInvokeAttribute> is applied to a service operation."},{"content":"Both of these attributes allow you to specify the <ph id=\"ph1\">`RequestFormat`</ph> and <ph id=\"ph2\">`ResponseFormat`</ph>.","pos":[643,730],"source":" Both of these attributes allow you to specify the `RequestFormat` and `ResponseFormat`."},{"content":"To use JSON for requests and responses.","pos":[731,770]},{"content":"set both of these to <ph id=\"ph1\">`WebMessageFormat.Json`</ph>.","pos":[771,816],"source":" set both of these to `WebMessageFormat.Json`."},{"content":"In order to use JSON, you must use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph>, which automatically configures the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>.","pos":[818,990],"source":"  In order to use JSON, you must use the <xref:System.ServiceModel.WebHttpBinding>, which automatically configures the <xref:System.ServiceModel.Description.WebHttpBehavior>."},{"content":"For more information about WCF serialization, see <bpt id=\"p1\">[</bpt>Serialization and Deserialization<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/serialization-and-deserialization.md)</ept>.","pos":[991,1162],"source":" For more information about WCF serialization, see [Serialization and Deserialization](../../../../docs/framework/wcf/feature-details/serialization-and-deserialization.md)."},{"content":"For more information about JSON and WCF, see <bpt id=\"p1\">[</bpt>Service Station - An Introduction To RESTful Services With WCF<ept id=\"p1\">](https://msdn.microsoft.com/magazine/dd315413.aspx)</ept>.","pos":[1163,1324],"source":" For more information about JSON and WCF, see [Service Station - An Introduction To RESTful Services With WCF](https://msdn.microsoft.com/magazine/dd315413.aspx)."},{"pos":[1332,2039],"content":"[!IMPORTANT]\n Using JSON requires use of <xref:System.ServiceModel.WebHttpBinding> and <xref:System.ServiceModel.Description.WebHttpBehavior> which do not support SOAP communication. Services that communicate with the <xref:System.ServiceModel.WebHttpBinding> do not support exposing service metadata so you will not be able to use Visual Studio’s Add Service Reference functionality or the svcutil command-line tool to generate a client-side proxy. For more information how you can programmatically call services that use <xref:System.ServiceModel.WebHttpBinding>, see [How to Consume REST Services with WCF](https://blogs.msdn.com/b/pedram/archive/2008/04/21/how-to-consume-rest-services-with-wcf.aspx).","leadings":["","> "],"nodes":[{"content":"Using JSON requires use of <xref:System.ServiceModel.WebHttpBinding> and <xref:System.ServiceModel.Description.WebHttpBehavior> which do not support SOAP communication. Services that communicate with the <xref:System.ServiceModel.WebHttpBinding> do not support exposing service metadata so you will not be able to use Visual Studio’s Add Service Reference functionality or the svcutil command-line tool to generate a client-side proxy. For more information how you can programmatically call services that use <xref:System.ServiceModel.WebHttpBinding>, see [How to Consume REST Services with WCF](https://blogs.msdn.com/b/pedram/archive/2008/04/21/how-to-consume-rest-services-with-wcf.aspx).","pos":[14,705],"nodes":[{"content":"Using JSON requires use of <ph id=\"ph1\">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> which do not support SOAP communication.","pos":[0,168],"source":"Using JSON requires use of <xref:System.ServiceModel.WebHttpBinding> and <xref:System.ServiceModel.Description.WebHttpBehavior> which do not support SOAP communication."},{"content":"Services that communicate with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> do not support exposing service metadata so you will not be able to use Visual Studio’s Add Service Reference functionality or the svcutil command-line tool to generate a client-side proxy.","pos":[169,435],"source":" Services that communicate with the <xref:System.ServiceModel.WebHttpBinding> do not support exposing service metadata so you will not be able to use Visual Studio’s Add Service Reference functionality or the svcutil command-line tool to generate a client-side proxy."},{"content":"For more information how you can programmatically call services that use <ph id=\"ph1\">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph>, see <bpt id=\"p1\">[</bpt>How to Consume REST Services with WCF<ept id=\"p1\">](https://blogs.msdn.com/b/pedram/archive/2008/04/21/how-to-consume-rest-services-with-wcf.aspx)</ept>.","pos":[436,691],"source":" For more information how you can programmatically call services that use <xref:System.ServiceModel.WebHttpBinding>, see [How to Consume REST Services with WCF](https://blogs.msdn.com/b/pedram/archive/2008/04/21/how-to-consume-rest-services-with-wcf.aspx)."}]}]},{"pos":[2048,2075],"content":"Untyped Message Programming","linkify":"Untyped Message Programming","nodes":[{"content":"Untyped Message Programming","pos":[0,27]}]},{"content":"When working directly with untyped Message objects, you must explicitly set the properties on the untyped message to serialize it as JSON.","pos":[2079,2217]},{"content":"The following code snippet shows how to do this.","pos":[2218,2266]},{"pos":[2880,2888],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2892,3012],"content":"<bpt id=\"p1\">[</bpt>AJAX Integration and JSON Support<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/ajax-integration-and-json-support.md)</ept>","source":"[AJAX Integration and JSON Support](../../../../docs/framework/wcf/feature-details/ajax-integration-and-json-support.md)"},{"pos":[3015,3129],"content":"<bpt id=\"p1\">[</bpt>Stand-Alone JSON Serialization<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/stand-alone-json-serialization.md)</ept>","source":"[Stand-Alone JSON Serialization](../../../../docs/framework/wcf/feature-details/stand-alone-json-serialization.md)"},{"pos":[3132,3214],"content":"<bpt id=\"p1\">[</bpt>JSON Serialization<ept id=\"p1\">](../../../../docs/framework/wcf/samples/json-serialization.md)</ept>","source":"[JSON Serialization](../../../../docs/framework/wcf/samples/json-serialization.md)"}]}