<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="wpf-globalization-and-localization-overview.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-444a0a2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db7a3230b527c6d25e5c48e3cda9d3421622d7c9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\wpf-globalization-and-localization-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">745b3d88667abffe688dc128da72c2e755818206</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aaf99a10f08d5b9143918dabc68fd50d8540af5d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>WPF Globalization and Localization Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WPF Globalization and Localization Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you limit your product's availability to only one language, you limit your potential customer base to a fraction of our world’s 6.5 billion population.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you want your applications to reach a global audience, cost-effective localization of your product is one of the best and most economical ways to reach more customers.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This overview introduces globalization and localization in              <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Globalization is the design and development of applications that perform in multiple locations.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, globalization supports localized user interfaces and regional data for users in different cultures.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides globalized design features, including              automatic layout, satellite assemblies, and localized attributes and commenting             .</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Localization is the translation of application resources into localized versions for the specific cultures that the application supports.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When you localize in              <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>, you use the APIs in the              <ph id="ph2">&lt;xref:System.Windows.Markup.Localizer&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These APIs power the              <bpt id="p1">[</bpt>LocBaml Tool Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160016)</ept> command-line tool.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For information about how to build and use LocBaml, see              <bpt id="p1">[</bpt>Localize an Application<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-localize-an-application.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Best Practices for Globalization and Localization in WPF</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can make the most of the globalization and localization functionality that is built into                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> by following the UI design and localization-related tips that this section provides.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Best Practices for WPF UI Design</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you design a                          <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>–based                          <ph id="ph2">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>, consider implementing these best practices:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Write                                  your                                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> in                                  <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>; avoid creating                                  <ph id="ph3">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> in code.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When you create your                                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> by using                                  <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>, you expose it through built-in localization APIs.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Avoid using absolute positions and fixed sizes to lay out content; instead, use relative or automatic                                  sizing                                 .</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use                                          <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph>; and keep widths and heights set to                                          <ph id="ph2">`Auto`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Avoid using                                          <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> to lay out                                          <ph id="ph2">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>s.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Use                                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> and its size-sharing feature.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Provide extra space in margins because localized text often requires more space.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Extra space allows for possible overhanging characters.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Enable                                  <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock.TextWrapping%2A&gt;</ph> on                                  <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> to avoid                                  clipping                                 .</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Set the                                  <bpt id="p1">**</bpt>xml:lang<ept id="p1">**</ept> attribute                                 .</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This                                  attribute describes the culture of a specific element and its child elements.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The value of this property changes the behavior of several features in                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, it changes the behavior of hyphenation, spell checking, number substitution, complex script shaping, and font fallback.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See                                  <bpt id="p1">[</bpt>Globalization for WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/globalization-for-wpf.md)</ept> for more information about setting the                                  <bpt id="p2">[</bpt>xml:lang Handling in XAML<ept id="p2">](../../../../docs/framework/xaml-services/xml-lang-handling-in-xaml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Create a                                  customized composite font to obtain better control of fonts that are used for different                                  languages                                 .</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default,                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> uses the GlobalUserInterface.composite font in your Windows\Fonts directory.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When you create navigation applications that may be localized in a culture that presents text in a right-to-left format, explicitly set the                                  <ph id="ph1">&lt;xref:System.Windows.FlowDirection&gt;</ph> of every page to ensure the page does not inherit                                  <ph id="ph2">&lt;xref:System.Windows.FlowDirection&gt;</ph> from the                                  <ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you create stand-alone navigation applications that are hosted outside a browser, set the                                  <ph id="ph1">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph> for your initial application to a                                  <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> instead of to a page (for example,                                  <ph id="ph3">`&lt;Application StartupUri="NavigationWindow.xaml"&gt;`</ph>).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This design enables you to change the                                  <ph id="ph1">&lt;xref:System.Windows.FlowDirection&gt;</ph> of the Window and the navigation bar.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information and an example, see                                  <bpt id="p1">[</bpt>Globalization Homepage Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159990)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Best Practices for WPF Localization</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When you localize                          <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>–based applications, consider implementing these best practices:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Use                                  local                                 ization comments to provide extra context for localizers.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Use localization attributes to control localization instead of selectively omitting                                  <ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties                                  on elements.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See                                  <bpt id="p1">[</bpt>Localization Attributes and Comments<ept id="p1">](../../../../docs/framework/wpf/advanced/localization-attributes-and-comments.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use                                  <bpt id="p1">**</bpt>msbuild /t:updateuid<ept id="p1">**</ept> and                                  <bpt id="p2">**</bpt>/t:checkuid<ept id="p2">**</ept> to add and check                                  <ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties in your                                  <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use                                  <ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties to track changes between development and localization.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties help you localize new development changes.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you manually add                                  <ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties to a                                  <ph id="ph2">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>, the task is typically tedious and less accurate.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Do not edit or change                                          <ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties after you begin localization.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Do not use duplicate                                          <ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties (remember this tip when you use the copy-and-paste command).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Set the                                          <ph id="ph1">`UltimateResourceFallback`</ph> location in AssemblyInfo.* to specify the appropriate language for fallback (for example,                                          <ph id="ph2">`[assembly: NeutralResourcesLanguage("en-US",   UltimateResourceFallbackLocation.Satellite)]`</ph>).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you decide to include your source language in the main assembly by omitting the                                          <ph id="ph1">`&lt;UICulture&gt;`</ph> tag in your project file, set the                                          <ph id="ph2">`UltimateResourceFallback`</ph> location as the main assembly instead of the satellite (for example,                                          <ph id="ph3">`[assembly: NeutralResourcesLanguage("en-US", UltimateResourceFallbackLocation.MainAssembly)]`</ph>).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Localize a WPF Application</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When you localize a                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application, you have several options.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, you can bind the localizable resources in your application to an                  <ph id="ph1">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> file, store localizable text in                  resx                  tables, or have your localizer use                  <ph id="ph2">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> files                 .</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This section describes a localization workflow that uses the BAML form of XAML                 , which provides several benefits:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can localize after you build .</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can update to a newer version of the BAML form of XAMLwith localizations from an older version of the BAML form of XAML so that you can localize at the same time that you develop.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can validate original source elements and semantics at compile time because the BAML form of XAML is the compiled form of                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Localization Build Process</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When you develop a                          <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application, the build process for localization is as follows:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The developer creates and globalizes the                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the project file the developer sets                                  <ph id="ph1">`&lt;UICulture&gt;en-US&lt;/UICulture&gt;`</ph> so that when the application is compiled, a language-neutral main assembly is generated.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This assembly has a satellite .resources.dll file that contains all the localizable resources.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Optionally, you can keep the source language in the main assembly because our localization                                  <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](../../../../includes/tla2sharptla-apisharpplural-md.md)]</ph> support extraction from the main assembly.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When the file is compiled into the build, the                                  <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> is converted to the BAML form of XAML.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The culturally neutral                                  <ph id="ph1">`MyDialog.exe`</ph> and the culturally dependent (English)                                  <ph id="ph2">`MyDialog.resources.dll`</ph> files are released to the English-speaking customer.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Localization Workflow</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The localization process begins after the unlocalized                          <ph id="ph1">`MyDialog.resources.dll`</ph> file is built.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> elements and properties in your original                          <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> are extracted from the BAML form of XAML into key-value pairs by using the                          <ph id="ph3">[!INCLUDE[TLA2#tla_api#plural](../../../../includes/tla2sharptla-apisharpplural-md.md)]</ph> under                          <ph id="ph4">&lt;xref:System.Windows.Markup.Localizer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Localizers use the key-value pairs to localize the application.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can generate a new .resource.dll from the new values after localization is complete.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The keys of the key-value pairs are                          <ph id="ph1">`x:Uid`</ph> values that are placed by the developer in the original                          <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>These                          <ph id="ph1">`x:Uid`</ph> values enable the                          <ph id="ph2">[!INCLUDE[TLA2#tla_api](../../../../includes/tla2sharptla-api-md.md)]</ph> to track and merge changes that happen between the developer and the localizer during localization.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, if the developer changes the                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> after the localizer begins localizing, you can merge the development change with the already completed localization work so that minimal translation work is lost.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The following graphic shows a typical localization workflow that is based on the BAML form of XAML.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This diagram assumes the developer writes the application in                          English                         .</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The developer creates and globalizes the WPF application.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In the project file the developer sets                          <ph id="ph1">`&lt;UICulture&gt;en-US&lt;/UICulture&gt;`</ph> so that on build, a language neutral main assembly gets generated with a satellite .resources.dll containing all localizable resources.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Alternately, one could keep the source language in the main assembly because WPF localization APIs support extraction from the main assembly.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>After the build process, the XAML get compiled into BAML.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The culturally neutral MyDialog.exe.resources.dll get shipped to the English speaking customer.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Localization workflow<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/localizationworkflow.png "</bpt>LocalizationWorkflow<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Unlocalized work flow<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/localizationworkflow2.png "</bpt>LocalizationWorkflow2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Examples of WPF Localization</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This section contains examples of localized applications to help you understand how to build and localize                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Run Dialog Box Example</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The following graphics show the output of the                                  <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box sample.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>English:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Run dialog box<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/rundialogenglish.PNG "</bpt>RunDialogEnglish<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>German:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>German Run dialog box<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/rundialoggerman.PNG "</bpt>RunDialogGerman<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Designing a Global Run Dialog Box<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This example produces a                                  <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box by using                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> and                                  <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This dialog box is equivalent to the                                  <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box that is available from the                                  <ph id="ph1">[!INCLUDE[TLA#tla_win](../../../../includes/tlasharptla-win-md.md)]</ph> Start menu.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Some highlights for making global dialog boxes are:</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Automatic Layout<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>In Window1.xaml:<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The previous Window property automatically resizes the window according to the size of the content.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This property prevents the window from cutting off content that increases in size after localization; it also removes unneeded space when content decreases in size after localization.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties are needed in order for                                  <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> localization                                  <ph id="ph3">[!INCLUDE[TLA2#tla_api#plural](../../../../includes/tla2sharptla-apisharpplural-md.md)]</ph> to work correctly.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>They are used by                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> localization                                  <ph id="ph2">[!INCLUDE[TLA2#tla_api#plural](../../../../includes/tla2sharptla-apisharpplural-md.md)]</ph> to track changes between the development and localization of the                                  <ph id="ph3">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties enable you to merge a newer version of the                                  <ph id="ph2">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> with an older localization of the                                  <ph id="ph3">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You add a                                  <ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> property by running                                  <bpt id="p1">**</bpt>msbuild /t:updateuid RunDialog.csproj<ept id="p1">**</ept> in a command shell.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This is the recommended method of adding                                  <ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties because manually adding them is typically time-consuming and less accurate.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can check that                                  <ph id="ph1">&lt;xref:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid%2A&gt;</ph> properties are correctly set by running                                  <bpt id="p1">**</bpt>msbuild /t:checkuid RunDialog.csproj<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> is structured by using the                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph> control, which is a useful control for taking advantage of the automatic layout in                                  <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Note that the dialog box is split into three rows and five columns.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Not one of the row and column definitions has a fixed size; hence, the                                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> elements that are positioned in each cell can adapt to increases and decreases in size during localization.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The first two columns where the                                  <bpt id="p1">**</bpt>Open:<ept id="p1">**</ept> label and                                  <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> are placed use 10 percent of the                                  <ph id="ph2">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> total width.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Note that of the example uses the shared-sizing feature of                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The last three columns take advantage of this by placing themselves in the same                                  <ph id="ph1">&lt;xref:System.Windows.Controls.DefinitionBase.SharedSizeGroup%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>As one would expect from the name of the property, this allows the columns to share the same size.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>So when the "Browse…" gets localized to the longer string "Durchsuchen…", all buttons grow in width instead of having a small "OK" button and a disproportionately large "Durchsuchen…" button.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Xml:lang<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Notice the                                  <bpt id="p1">[</bpt>xml:lang Handling in XAML<ept id="p1">](../../../../docs/framework/xaml-services/xml-lang-handling-in-xaml.md)</ept> placed at the root element of the                                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This property describes the culture of a given element and its children.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This value is used by several features in                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> and should be changed appropriately during localization.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This value changes what language dictionary is use to hyphenate and spell check words.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>It also affects the display of digits and how the font fallback system selects which font to use.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Finally, the property affects the way numbers are displayed and the way texts written in complex scripts are shaped.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The default value is "en-US".</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Building a Satellite Resource Assembly<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>In .csproj:<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Notice the addition of a                                  <ph id="ph1">`UICulture`</ph> value.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>When this is set to a valid                                  <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> value such as en-US, building the project will generate a satellite assembly with all localizable resources in it.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">`RunIcon.JPG`</ph> does not need to be localized because it should appear the same for all cultures.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Localizable`</ph> is set to                                  <ph id="ph2">`false`</ph> so that it remains in the language neutral main assembly instead of the satellite assembly.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The default value of all noncompilable resources is                                  <ph id="ph1">`Localizable`</ph> set to                                  <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Localizing the Run Dialog<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Parse<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>After building the application, the first step in localizing it is parsing the localizable resources out of the satellite assembly.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For the purposes of this topic, use the sample LocBaml tool which can be found at                                  <bpt id="p1">[</bpt>LocBaml Tool Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160016)</ept>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Note that LocBaml is only a sample tool meant to help you get started in building a localization tool that fits into your localization process.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Using LocBaml, run the following to parse:                                  <bpt id="p1">**</bpt>LocBaml /parse RunDialog.resources.dll /out:<ept id="p1">**</ept> to generate a "RunDialog.resources.dll.CSV" file.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Localize<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Use your favorite CSV editor that supports Unicode to edit this file.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Filter out all entries with a localization category of "None".</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You should see the following entries:</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Resource Key</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Localization Category</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Button_1:System.Windows.Controls.Button.$Content</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Button</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>OK</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Button_2:System.Windows.Controls.Button.$Content</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Button</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Cancel</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Button_3:System.Windows.Controls.Button.$Content</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Button</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Browse...</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>ComboBox_1:System.Windows.Controls.ComboBox.$Content</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>ComboBox</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>TextBlock_1:System.Windows.Controls.TextBlock.$Content</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Type the name of a program, folder, document, or Internet resource, and Windows will open it for you.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>TextBlock_2:System.Windows.Controls.TextBlock.$Content</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Open:</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Window_1:System.Windows.Window.Title</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Title</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Run</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Localizing the application to German would require the following translations:</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Resource Key</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Localization Category</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Button_1:System.Windows.Controls.Button.$Content</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Button</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>OK</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Button_2:System.Windows.Controls.Button.$Content</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Button</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Abbrechen</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Button_3:System.Windows.Controls.Button.$Content</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Button</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Durchsuchen…</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>ComboBox_1:System.Windows.Controls.ComboBox.$Content</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>ComboBox</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>TextBlock_1:System.Windows.Controls.TextBlock.$Content</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Geben Sie den Namen eines Programms, Ordners, Dokuments oder einer Internetresource an.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>TextBlock_2:System.Windows.Controls.TextBlock.$Content</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Öffnen:</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Window_1:System.Windows.Window.Title</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Title</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Run</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Generate<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The last step of localization involves creating the newly localized satellite assembly.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This can be accomplished with the following LocBaml command:</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>LocBaml.exe /generate RunDialog.resources.dll /trans:RunDialog.resources.dll.CSV /out: . /cul:de-DE<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>On German                                  <ph id="ph1">[!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)]</ph>, if this resources.dll is placed in a de-DE folder next to the main assembly, this resource will automatically load instead of the one in the en-US folder.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>If you do not have a German version of                                  <ph id="ph1">[!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)]</ph> to test this, set the culture to whatever culture of                                  <ph id="ph2">[!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)]</ph> you are using (i.e. en-US), and replace the original resources.dll.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Satellite Resource Loading<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>MyDialog.exe</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>en-US\MyDialog.resources.dll</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>de-DE\MyDialog.resources.dll</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Code</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Original English BAML</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Localized BAML</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Culturally neutral resources</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Other resources in English</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Other resources localized to German</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The .NET framework automatically chooses which satellite resources assembly to load based on the application’s                                  <ph id="ph1">`Thread.CurrentThread.CurrentUICulture`</ph>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>This defaults to the culture of your                                  <ph id="ph1">[!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)]</ph> OS.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>So if you are using German                                  <ph id="ph1">[!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)]</ph>, the de-DE\MyDialog.resources.dll loads, if you are using English                                  <ph id="ph2">[!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)]</ph>, the en-US\MyDialog.resources.dll loads.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>You can set the ultimate fallback resource for your application by specifying the NeutralResourcesLanguage in your project’s AssemblyInfo.*.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>For example if you specify:</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>then the en-US\MyDialog.resources.dll will be used with German Windows if a de-DE\MyDialog.resources.dll or de\MyDialog.resources.dll are both unavailable.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Microsoft Saudi Arabia Homepage</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The following graphics show an English and Arabic Homepage.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>For the complete sample that produces these graphics see                          <bpt id="p1">[</bpt>Globalization Homepage Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159990)</ept>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>English:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>English page<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/englishhomepage.jpg "</bpt>EnglishHomepage<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Arabic:<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Arabic page<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/arabichomepage.jpg "</bpt>ArabicHomepage<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Designing a Global Microsoft Homepage</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This mock up of the Microsoft Saudi Arabia web site illustrates the globalization features provided for RightToLeft languages.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Languages such as Hebrew and Arabic have a right-to-left reading order so the layout of                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> must often be laid out quite differently than it would be in left-to-right languages such as English.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Localizing from a left-to-right language to a right-to-left language or vice versa can be quite challenging.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> has been designed to make such localizations much easier.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FlowDirection<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Homepage.xaml:<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Notice the                          <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> property on                          <ph id="ph2">&lt;xref:System.Windows.Controls.Page&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Changing this property to                          <ph id="ph1">&lt;xref:System.Windows.FlowDirection&gt;</ph> will change the                          <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> of the                          <ph id="ph3">&lt;xref:System.Windows.Controls.Page&gt;</ph> and its children elements so that the layout of this                          <ph id="ph4">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> is flipped to become right-to-left as an Arabic user would expect.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>One can override the inheritance behavior by specifying an explicit                          <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> on any element.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> property is available on any                          <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or document related element and has an implicit value of                          <ph id="ph3">&lt;xref:System.Windows.FlowDirection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Observe that even the background gradient brushes are flipped correctly when the root                          <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> is changed:</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FlowDirection="LeftToRight"<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Flow from left to right<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/lefttoright.PNG "</bpt>LeftToRight<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FlowDirection="RightToLeft"<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Flow from right to left<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/righttoleft.PNG "</bpt>RightToLeft<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Avoid Using Fixed Dimensions for Panels and Controls<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Take a look through Homepage.xaml, notice that aside from the fixed width and height specified for the entire                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> on the top                          <ph id="ph2">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph>, there are no other fixed dimensions.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Avoid using fixed dimensions to prevent clipping localized text that may be longer than the source text.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> panels and controls will automatically resize based on the content that they contain.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Most controls also have minimum and maximum dimensions that you can set for more control (i.e. MinWidth= "20").</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>With                          <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph>, you can also set relative widths and heights by using ‘*’ (i.e. Width= "0.25<ph id="ph2">\*</ph>") or use its cell size sharing feature.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Localization Comments<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>There are many cases where content may be ambiguous and difficult to translate.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The developer or designer has the ability to provide extra context and comments to localizers through localization comments.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>For example the Localization.Comments below clarifies the usage of the character ‘&amp;#124;’.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>This comment becomes associated with TextBlock_1’s content and in the case of the LocBaml Tool, ( see                          <bpt id="p1">[</bpt>Localize an Application<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-localize-an-application.md)</ept>), it can be seen in the 6th column of the TextBlock_1 row in the output .csv file:</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Resource Key</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Category</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Readable</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Modifiable</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>TextBlock_1:System.Windows.Controls.TextBlock.$Content</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>TRUE</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>TRUE</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>This character is used as a decorative rule.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>&amp;#124;</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Comments can be placed on the content or property of any element using the following syntax:</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Localization Attributes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Often the developer or localization manager needs control of what localizers can read and modify.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>For example, you might not want the localizer to translate the name of your company or legal wording.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides attributes that enable you to set the readability, modifiability, and category of an element’s content or property which your localization tool can use to lock, hide, or sort elements.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>For more information, see                          <ph id="ph1">&lt;xref:System.Windows.Localization.Attributes%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>For the purposes of this sample, the LocBaml Tool just outputs the values of these attributes.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls all have default values for these attributes, but you the can override them.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>For example, the following example overrides the default localization attributes for                          <ph id="ph1">`TextBlock_1`</ph> and sets the content to be readable but unmodifiable for localizers.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>In addition to the readability and modifiability attributes,                          <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides an enumeration of common UI categories (                         <ph id="ph2">&lt;xref:System.Windows.LocalizationCategory&gt;</ph>) that can be used to give localizers more context.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> default categories for platform controls can be overridden in                          <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> as well:</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The default localization attributes that                          <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides can also be overridden through code, so you can correctly set the right default values for custom controls.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The per instance attributes set in                          <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> will take precedence over the values set in code on custom controls.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>For more information on attributes and comments, see                          <bpt id="p1">[</bpt>Localization Attributes and Comments<ept id="p1">](../../../../docs/framework/wpf/advanced/localization-attributes-and-comments.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Font Fallback and Composite Fonts<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>If you specify a font that does not support a given codepoint range,                          <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> will automatically fallback to one that does by using the Global User Interface.compositefont that is located in your Windows\Fonts directory.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Composite fonts work just as any other font and can be used explicitly by setting an element’s FontFamily (i.e. FontFamily= "Global User Interface").</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>You can specify your own font fallback preference by creating your own composite font and specifying what font to use for specific codepoint ranges and languages.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>For more information on composite fonts see                          <ph id="ph1">&lt;xref:System.Windows.Media.FontFamily&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Localizing the Microsoft Homepage<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>You can follow the same steps as the Run Dialog example to localize this application.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The localized .csv file for Arabic is available for you in the                          <bpt id="p1">[</bpt>Globalization Homepage Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159990)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>