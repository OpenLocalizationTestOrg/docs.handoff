{"content":"---\ntitle: \"Creating a DataTable from a DataView | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 2d45cf41-d8ae-4409-af3e-a96a7e476d85\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Creating a DataTable from a DataView\nOnce you have retrieved data from a data source, and have filled a <xref:System.Data.DataTable> with the data, you may want to sort, filter, or otherwise limit the returned data without retrieving it again. The <xref:System.Data.DataView> class makes this possible. In addition, if you need to create a new <xref:System.Data.DataTable>from the <xref:System.Data.DataView>, you can use the <xref:System.Data.DataView.ToTable%2A> method to copy all the rows and columns, or a subset of the data into a new <xref:System.Data.DataTable>. The <xref:System.Data.DataView.ToTable%2A> method provides overloads to:  \n  \n-   Create a <xref:System.Data.DataTable> containing columns that are a subset of the columns in the <xref:System.Data.DataView>.  \n  \n-   Create a <xref:System.Data.DataTable>that includes only distinct rows from the <xref:System.Data.DataView>, analogously to the DISTINCT keyword in Transact-SQL.  \n  \n## Example  \n The following console application example creates a <xref:System.Data.DataTable>that contains data from the **Person.Contact** table in the **AdventureWorks** sample database. Next, the example creates a sorted and filtered <xref:System.Data.DataView>based on the <xref:System.Data.DataTable>. After displaying the contents of the <xref:System.Data.DataTable>and the <xref:System.Data.DataView>, the example creates a new <xref:System.Data.DataTable>from the <xref:System.Data.DataView> by calling the <xref:System.Data.DataView.ToTable%2A> method, selecting only a subset of the available columns. Finally, the example displays the contents of the new <xref:System.Data.DataTable>.  \n  \n```vb  \nPrivate Sub DemonstrateDataView()  \n    ' Retrieve a DataTable from the AdventureWorks sample database.  \n    ' connectionString is assumed to be a valid connection string.  \n    Dim adapter As New SqlDataAdapter( _  \n       \"SELECT FirstName, LastName, EmailAddress FROM Person.Contact WHERE FirstName LIKE 'Mich%'\", connectionString)  \n    Dim table As New DataTable  \n  \n    adapter.Fill(table)  \n    Console.WriteLine(\"Original table name: \" & table.TableName)  \n    ' Print current table values.  \n    PrintTableOrView(table, \"Current Values in Table\")  \n  \n    ' Now create a DataView based on the DataTable.  \n    ' Sort and filter the data.  \n    Dim view As DataView = table.DefaultView  \n    view.Sort = \"LastName, FirstName\"  \n    view.RowFilter = \"LastName > 'M'\"  \n    PrintTableOrView(view, \"Current Values in View\")  \n  \n    ' Create a new DataTable based on the DataView,  \n    ' requesting only two columns with distinct values  \n    ' in the columns.  \n    Dim newTable As DataTable = view.ToTable(\"UniqueLastNames\", True, \"FirstName\", \"LastName\")  \n    PrintTableOrView(newTable, \"Table created from DataView\")  \n    Console.WriteLine(\"New table name: \" & newTable.TableName)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n    End Sub  \n  \nPrivate Sub PrintTableOrView(ByVal dv As DataView, ByVal label As String)  \n    Dim sw As System.IO.StringWriter  \n    Dim output As String  \n    Dim table As DataTable = dv.Table  \n  \n    Console.WriteLine(label)  \n  \n    ' Loop through each row in the view.  \n    For Each rowView As DataRowView In dv  \n        sw = New System.IO.StringWriter  \n  \n        ' Loop through each column.  \n        For Each col As DataColumn In table.Columns  \n            ' Output the value of each column's data.  \n            sw.Write(rowView(col.ColumnName).ToString() & \", \")  \n        Next  \n        output = sw.ToString  \n        ' Trim off the trailing \", \", so the output looks correct.  \n        If output.Length > 2 Then  \n            output = output.Substring(0, output.Length - 2)  \n        End If  \n        ' Display the row in the console window.  \n        Console.WriteLine(output)  \n    Next  \n    Console.WriteLine()  \nEnd Sub  \n  \nPrivate Sub PrintTableOrView(ByVal table As DataTable, ByVal label As String)  \n    Dim sw As System.IO.StringWriter  \n    Dim output As String  \n  \n    Console.WriteLine(label)  \n  \n    ' Loop through each row in the table.  \n    For Each row As DataRow In table.Rows  \n        sw = New System.IO.StringWriter  \n        ' Loop through each column.  \n        For Each col As DataColumn In table.Columns  \n            ' Output the value of each column's data.  \n            sw.Write(row(col).ToString() & \", \")  \n        Next  \n        output = sw.ToString  \n        ' Trim off the trailing \", \", so the output looks correct.  \n        If output.Length > 2 Then  \n            output = output.Substring(0, output.Length - 2)  \n        End If  \n        ' Display the row in the console window.  \n        Console.WriteLine(output)  \n    Next  \n    Console.WriteLine()  \n    End Sub  \nEnd Module  \n```  \n  \n```csharp  \nprivate static void DemonstrateDataView()  \n{  \n// Retrieve a DataTable from the AdventureWorks sample database.  \n// connectionString is assumed to be a valid connection string.  \nSqlDataAdapter adapter = new SqlDataAdapter(  \n    \"SELECT FirstName, LastName, EmailAddress \" +  \n    \"FROM Person.Contact WHERE FirstName LIKE 'Mich%'\",   \n       GetConnectionString());  \nDataTable table = new DataTable();  \n  \nadapter.Fill(table);  \nConsole.WriteLine(\"Original table name: \" + table.TableName);  \n// Print current table values.  \nPrintTableOrView(table, \"Current Values in Table\");  \n  \n// Now create a DataView based on the DataTable.  \n// Sort and filter the data.  \nDataView view = table.DefaultView;  \nview.Sort = \"LastName, FirstName\";  \nview.RowFilter = \"LastName > 'M'\";  \nPrintTableOrView(view, \"Current Values in View\");  \n  \n// Create a new DataTable based on the DataView,  \n// requesting only two columns with distinct values  \n// in the columns.  \nDataTable newTable = view.ToTable(\"UniqueLastNames\",  \n     true, \"FirstName\", \"LastName\");  \nPrintTableOrView(newTable, \"Table created from DataView\");  \nConsole.WriteLine(\"New table name: \" + newTable.TableName);  \n  \nConsole.WriteLine(\"Press any key to continue.\");  \nConsole.ReadKey();  \n}  \n  \nprivate static void PrintTableOrView(DataView dv, string label)  \n{  \nSystem.IO.StringWriter sw;  \nstring output;  \nDataTable table = dv.Table;  \n  \nConsole.WriteLine(label);  \n  \n// Loop through each row in the view.  \nforeach (DataRowView rowView in dv)  \n{  \n    sw = new System.IO.StringWriter();  \n  \n    // Loop through each column.  \n    foreach (DataColumn col in table.Columns)  \n    {  \n        // Output the value of each column's data.  \n        sw.Write(rowView[col.ColumnName].ToString() + \", \");  \n    }  \n    output = sw.ToString();  \n    // Trim off the trailing \", \", so the output looks correct.  \n    if (output.Length > 2)  \n    {  \n        output = output.Substring(0, output.Length - 2);  \n    }  \n    // Display the row in the console window.  \n    Console.WriteLine(output);  \n}  \nConsole.WriteLine();  \n}  \n  \nprivate static void PrintTableOrView(DataTable table, string label)  \n{  \nSystem.IO.StringWriter sw;  \nstring output;  \n  \nConsole.WriteLine(label);  \n  \n// Loop through each row in the table.  \nforeach (DataRow row in table.Rows)  \n{  \n    sw = new System.IO.StringWriter();  \n    // Loop through each column.  \n    foreach (DataColumn col in table.Columns)  \n    {  \n        // Output the value of each column's data.  \n        sw.Write(row[col].ToString() + \", \");  \n    }  \n    output = sw.ToString();  \n    // Trim off the trailing \", \", so the output looks correct.  \n    if (output.Length > 2)  \n    {  \n        output = output.Substring(0, output.Length - 2);  \n    }  \n    // Display the row in the console window.  \n    Console.WriteLine(output);  \n} //  \nConsole.WriteLine();  \n}  \n```  \n  \n }  \n  \n## See Also  \n <xref:System.Data.DataView.ToTable%2A>   \n [DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataviews.md)   \n [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)","nodes":[{"pos":[4,367],"nodes":[{"content":"Creating a DataTable from a DataView | Microsoft Docs","nodes":[{"pos":[0,53],"content":"Creating a DataTable from a DataView | Microsoft Docs","nodes":[{"content":"Creating a DataTable from a DataView | Microsoft Docs","pos":[0,53]}]}],"pos":[6,62],"yaml":true}],"content":"title: \"Creating a DataTable from a DataView | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 2d45cf41-d8ae-4409-af3e-a96a7e476d85\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","yamlblock":true},{"pos":[374,410],"content":"Creating a DataTable from a DataView","linkify":"Creating a DataTable from a DataView","nodes":[{"content":"Creating a DataTable from a DataView","pos":[0,36]}]},{"content":"Once you have retrieved data from a data source, and have filled a <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> with the data, you may want to sort, filter, or otherwise limit the returned data without retrieving it again.","pos":[411,617],"source":"Once you have retrieved data from a data source, and have filled a <xref:System.Data.DataTable> with the data, you may want to sort, filter, or otherwise limit the returned data without retrieving it again."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> class makes this possible.","pos":[618,676],"source":" The <xref:System.Data.DataView> class makes this possible."},{"content":"In addition, if you need to create a new <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>from the <ph id=\"ph2\">&lt;xref:System.Data.DataView&gt;</ph>, you can use the <ph id=\"ph3\">&lt;xref:System.Data.DataView.ToTable%2A&gt;</ph> method to copy all the rows and columns, or a subset of the data into a new <ph id=\"ph4\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[677,944],"source":" In addition, if you need to create a new <xref:System.Data.DataTable>from the <xref:System.Data.DataView>, you can use the <xref:System.Data.DataView.ToTable%2A> method to copy all the rows and columns, or a subset of the data into a new <xref:System.Data.DataTable>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataView.ToTable%2A&gt;</ph> method provides overloads to:","pos":[945,1017],"source":" The <xref:System.Data.DataView.ToTable%2A> method provides overloads to:"},{"content":"Create a <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> containing columns that are a subset of the columns in the <ph id=\"ph2\">&lt;xref:System.Data.DataView&gt;</ph>.","pos":[1027,1152],"source":"Create a <xref:System.Data.DataTable> containing columns that are a subset of the columns in the <xref:System.Data.DataView>."},{"content":"Create a <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>that includes only distinct rows from the <ph id=\"ph2\">&lt;xref:System.Data.DataView&gt;</ph>, analogously to the DISTINCT keyword in Transact-SQL.","pos":[1162,1322],"source":"Create a <xref:System.Data.DataTable>that includes only distinct rows from the <xref:System.Data.DataView>, analogously to the DISTINCT keyword in Transact-SQL."},{"pos":[1331,1338],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following console application example creates a <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>that contains data from the <bpt id=\"p1\">**</bpt>Person.Contact<ept id=\"p1\">**</ept> table in the <bpt id=\"p2\">**</bpt>AdventureWorks<ept id=\"p2\">**</ept> sample database.","pos":[1342,1517],"source":"The following console application example creates a <xref:System.Data.DataTable>that contains data from the **Person.Contact** table in the **AdventureWorks** sample database."},{"content":"Next, the example creates a sorted and filtered <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph>based on the <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[1518,1635],"source":" Next, the example creates a sorted and filtered <xref:System.Data.DataView>based on the <xref:System.Data.DataTable>."},{"content":"After displaying the contents of the <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>and the <ph id=\"ph2\">&lt;xref:System.Data.DataView&gt;</ph>, the example creates a new <ph id=\"ph3\">&lt;xref:System.Data.DataTable&gt;</ph>from the <ph id=\"ph4\">&lt;xref:System.Data.DataView&gt;</ph> by calling the <ph id=\"ph5\">&lt;xref:System.Data.DataView.ToTable%2A&gt;</ph> method, selecting only a subset of the available columns.","pos":[1636,1940],"source":" After displaying the contents of the <xref:System.Data.DataTable>and the <xref:System.Data.DataView>, the example creates a new <xref:System.Data.DataTable>from the <xref:System.Data.DataView> by calling the <xref:System.Data.DataView.ToTable%2A> method, selecting only a subset of the available columns."},{"content":"Finally, the example displays the contents of the new <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[1941,2024],"source":" Finally, the example displays the contents of the new <xref:System.Data.DataTable>."},{"content":"}","pos":[8080,8081]},{"pos":[8090,8098],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.DataView.ToTable%2A&gt;</ph>","pos":[8102,8140],"source":"<xref:System.Data.DataView.ToTable%2A> "},{"content":"<bpt id=\"p1\">[</bpt>DataViews<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataviews.md)</ept><ph id=\"ph1\"> </ph>","pos":[8145,8240],"source":"[DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataviews.md) "},{"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept>","pos":[8244,8347],"source":"[ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)"}]}