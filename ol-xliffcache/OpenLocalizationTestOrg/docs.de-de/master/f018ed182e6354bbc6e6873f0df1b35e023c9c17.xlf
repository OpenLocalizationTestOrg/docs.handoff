<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="conversion-tables.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f018ed182e6354bbc6e6873f0df1b35e023c9c17</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\conversion-tables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6754d40ab1b33aae7459841c6b2dde37a5e079a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1946eccedcd25597c1945d37ec4397e8cf1c850a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Type Conversion Tables in .NET</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Type Conversion Tables in .NET</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Widening conversion occurs when a value of one type is converted to another type that is of equal or greater size.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A narrowing conversion occurs when a value of one type is converted to a value of another type that is of a smaller size.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The tables in this topic illustrate the behaviors exhibited by both types of conversions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Widening Conversions</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following table describes the widening conversions that can be performed without the loss of information.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Can be converted without data loss to</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph2">&lt;xref:System.Int16&gt;</ph>, <ph id="ph3">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph6">&lt;xref:System.Int64&gt;</ph>, <ph id="ph7">&lt;xref:System.Single&gt;</ph>, <ph id="ph8">&lt;xref:System.Double&gt;</ph>, <ph id="ph9">&lt;xref:System.Decimal&gt;</ph></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Int16&gt;</ph>, <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, <ph id="ph3">&lt;xref:System.Int64&gt;</ph>, <ph id="ph4">&lt;xref:System.Single&gt;</ph>, <ph id="ph5">&lt;xref:System.Double&gt;</ph>, <ph id="ph6">&lt;xref:System.Decimal&gt;</ph></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Int32&gt;</ph>, <ph id="ph2">&lt;xref:System.Int64&gt;</ph>, <ph id="ph3">&lt;xref:System.Single&gt;</ph>, <ph id="ph4">&lt;xref:System.Double&gt;</ph>, <ph id="ph5">&lt;xref:System.Decimal&gt;</ph></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, <ph id="ph3">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph4">&lt;xref:System.Int64&gt;</ph>, <ph id="ph5">&lt;xref:System.Single&gt;</ph>, <ph id="ph6">&lt;xref:System.Double&gt;</ph>, <ph id="ph7">&lt;xref:System.Decimal&gt;</ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph3">&lt;xref:System.Int32&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.Single&gt;</ph>, <ph id="ph7">&lt;xref:System.Double&gt;</ph>, <ph id="ph8">&lt;xref:System.Decimal&gt;</ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Int64&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph>, <ph id="ph3">&lt;xref:System.Decimal&gt;</ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Int64&gt;</ph>, <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Some widening conversions to <ph id="ph1">&lt;xref:System.Single&gt;</ph> or <ph id="ph2">&lt;xref:System.Double&gt;</ph> can cause a loss of precision.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following table describes the widening conversions that sometimes result in a loss of information.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Can be converted to</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Narrowing Conversions</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A narrowing conversion to <ph id="ph1">&lt;xref:System.Single&gt;</ph> or <ph id="ph2">&lt;xref:System.Double&gt;</ph> can cause a loss of information.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the target type cannot properly express the magnitude of the source, the resulting type is set to the constant <ph id="ph1">`PositiveInfinity`</ph> or <ph id="ph2">`NegativeInfinity`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PositiveInfinity`</ph> results from dividing a positive number by zero and is also returned when the value of a <ph id="ph2">&lt;xref:System.Single&gt;</ph> or <ph id="ph3">&lt;xref:System.Double&gt;</ph> exceeds the value of the <ph id="ph4">`MaxValue`</ph> field.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`NegativeInfinity`</ph> results from dividing a negative number by zero and is also returned when the value of a <ph id="ph2">&lt;xref:System.Single&gt;</ph> or <ph id="ph3">&lt;xref:System.Double&gt;</ph> falls below the value of the <ph id="ph4">`MinValue`</ph> field.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A conversion from a <ph id="ph1">&lt;xref:System.Double&gt;</ph> to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> might result in <ph id="ph3">`PositiveInfinity`</ph> or <ph id="ph4">`NegativeInfinity`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A narrowing conversion can also result in a loss of information for other data types.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>However, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown if the value of a type that is being converted falls outside of the range specified by the target type's <ph id="ph2">`MaxValue`</ph> and <ph id="ph3">`MinValue`</ph> fields, and the conversion is checked by the runtime to ensure that the value of the target type does not exceed its <ph id="ph4">`MaxValue`</ph> or <ph id="ph5">`MinValue`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Conversions that are performed with the <ph id="ph1">&lt;xref:System.Convert?displayProperty=nameWithType&gt;</ph> class are always checked in this manner.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following table lists conversions that throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> using <ph id="ph2">&lt;xref:System.Convert?displayProperty=nameWithType&gt;</ph> or any checked conversion if the value of the type being converted is outside the defined range of the resulting type.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Can be converted to</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph3">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt64&gt;</ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.UInt16&gt;</ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>,<ph id="ph5">&lt;xref:System.UInt32&gt;</ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>,<ph id="ph6">&lt;xref:System.UInt32&gt;</ph>,<ph id="ph7">&lt;xref:System.UInt64&gt;</ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Conversion in .NET<ept id="p1">](../../../docs/standard/base-types/type-conversion.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>