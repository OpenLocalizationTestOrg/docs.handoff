{"content":"---\ntitle: \"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"DataGrid [WPF], displaying data from SQL Server\"\n  - \"controls [WPF], DataGrid\"\nms.assetid: 6810b048-0a23-4f86-bfa5-97f92b3cfab4\ncaps.latest.revision: 13\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Walkthrough: Display Data from a SQL Server Database in a DataGrid Control\nIn this walkthrough, you retrieve data from a SQL Server database and display that data in a <xref:System.Windows.Controls.DataGrid> control. You use the ADO.NET Entity Framework to create the entity classes that represent the data, and use LINQ to write a query that retrieves the specified data from an entity class.  \n  \n## Prerequisites  \n You need the following components to complete this walkthrough:  \n  \n-   [!INCLUDE[vs_dev11_long](../../../../includes/vs-dev11-long-md.md)].  \n  \n-   Access to a running instance of SQL Server or SQL Server Express that has the AdventureWorksLT2008 sample database attached to it. You can download the AdventureWorksLT2008 database from the [CodePlex Web site](http://go.microsoft.com/fwlink/?LinkId=159848).  \n  \n### To create entity classes  \n  \n1.  Create a new WPF Application project in Visual Basic or C#, and name it `DataGridSQLExample`.  \n  \n2.  In Solution Explorer, right-click your project, point to **Add**, and then select **New Item**.  \n  \n     The Add New Item dialog box appears.  \n  \n3.  In the Installed Templates pane, select **Data** and in the list of templates, select **ADO.NET Entity Data Mode**l.  \n  \n     ![Select ADO.NET Entity Data Model](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step1.png \"DataGrid_SQL_EF_Step1\")  \n  \n4.  Name the file `AdventureWorksModel.edmx` and then click **Add**.  \n  \n     The Entity Data Model Wizard appears.  \n  \n5.  In the Choose Model Contents screen, select **Generate from database** and then click **Next**.  \n  \n     ![Select Generate from database option](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step2.png \"DataGrid_SQL_EF_Step2\")  \n  \n6.  In the Choose Your Data Connection screen, provide the connection to your AdventureWorksLT2008 database. For more information, see [Choose Your Data Connection Dialog Box](http://go.microsoft.com/fwlink/?LinkId=160190).  \n  \n     ![Provide connection to database](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step3.png \"DataGrid_SQL_EF_Step3\")  \n  \n7.  Make sure that the name is`AdventureWorksLT2008Entities` and that the **Save entity connection settings in App.Config as** check box is selected, and then click **Next**.  \n  \n8.  In the Choose Your Database Objects screen, expand the Tables node, and select the **Product** and **ProductCategory** tables.  \n  \n     You can generate entity classes for all of the tables; however, in this example you only retrieve data from those two tables.  \n  \n     ![Select Product and ProductCategory from tables](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step4.png \"DataGrid_SQL_EF_Step4\")  \n  \n9. Click **Finish**.  \n  \n     The Product and ProductCategory entities are displayed in the Entity Designer.  \n  \n     ![Product and ProductCategory entity models](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step5.png \"DataGrid_SQL_EF_Step5\")  \n  \n### To retrieve and present the data  \n  \n1.  Open the MainWindow.xaml file.  \n  \n2.  Set the <xref:System.Windows.FrameworkElement.Width%2A> property on the <xref:System.Windows.Window> to 450.  \n  \n3.  In the XAML editor, add the following <xref:System.Windows.Controls.DataGrid> tag between the `<Grid>` and `</Grid>` tags to add a <xref:System.Windows.Controls.DataGrid> named `dataGrid1`.  \n  \n     [!code-xml[DataGrid_SQL_EF_Walkthrough#3](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/CS/MainWindow.xaml#3)]  \n  \n     ![Window with DataGrid](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step6.png \"DataGrid_SQL_EF_Step6\")  \n  \n4.  Select the <xref:System.Windows.Window>.  \n  \n5.  Using the Properties window or XAML editor, create an event handler for the <xref:System.Windows.Window> named `Window_Loaded` for the <xref:System.Windows.FrameworkElement.Loaded> event. For more information, see [How to: Create a Simple Event Handler](http://msdn.microsoft.com/en-us/b1456e07-9dec-4354-99cf-18666b64f480).  \n  \n     The following shows the XAML for MainWindow.xaml.  \n  \n    > [!NOTE]\n    >  If you are using Visual Basic, in the first line of MainWindow.xaml, replace `x:Class=\"DataGridSQLExample.MainWindow\"` with `x:Class=\"MainWindow\"`.  \n  \n     [!code-xml[DataGrid_SQL_EF_Walkthrough#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/CS/MainWindow.xaml#1)]  \n  \n6.  Open the code-behind file (MainWindow.xaml.vb or MainWindow.xaml.cs) for the <xref:System.Windows.Window>.  \n  \n7.  Add the following code to retrieve only specific values from the joined tables and set the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property of the <xref:System.Windows.Controls.DataGrid> to the results of the query.  \n  \n     [!code-csharp[DataGrid_SQL_EF_Walkthrough#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/CS/MainWindow.xaml.cs#2)]\n     [!code-vb[DataGrid_SQL_EF_Walkthrough#2](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/VB/MainWindow.xaml.vb#2)]  \n  \n8.  Run the example.  \n  \n     You should see a <xref:System.Windows.Controls.DataGrid> that displays data.  \n  \n     ![DataGrid with data from SQL database](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step7.png \"DataGrid_SQL_EF_Step7\")  \n  \n## Next Steps  \n  \n## See Also  \n <xref:System.Windows.Controls.DataGrid>   \n [How Do I: Get Started with Entity Framework in WPF Applications?](http://go.microsoft.com/fwlink/?LinkId=159868)","nodes":[{"pos":[4,511],"embed":true,"restype":"x-metadata","content":"title: \"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"DataGrid [WPF], displaying data from SQL Server\"\n  - \"controls [WPF], DataGrid\"\nms.assetid: 6810b048-0a23-4f86-bfa5-97f92b3cfab4\ncaps.latest.revision: 13\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control | Microsoft Docs","nodes":[{"pos":[0,91],"content":"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control | Microsoft Docs","nodes":[{"content":"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control | Microsoft Docs","pos":[0,91]}]}],"path":["title"]}],"yml":true},{"pos":[518,592],"content":"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control","linkify":"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control","nodes":[{"content":"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control","pos":[0,74]}]},{"content":"In this walkthrough, you retrieve data from a SQL Server database and display that data in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> control.","pos":[593,734],"source":"In this walkthrough, you retrieve data from a SQL Server database and display that data in a <xref:System.Windows.Controls.DataGrid> control."},{"content":"You use the ADO.NET Entity Framework to create the entity classes that represent the data, and use LINQ to write a query that retrieves the specified data from an entity class.","pos":[735,911]},{"pos":[920,933],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"You need the following components to complete this walkthrough:","pos":[937,1000]},{"pos":[1010,1078],"content":"<ph id=\"ph1\">[!INCLUDE[vs_dev11_long](../../../../includes/vs-dev11-long-md.md)]</ph>.","source":"[!INCLUDE[vs_dev11_long](../../../../includes/vs-dev11-long-md.md)]."},{"content":"Access to a running instance of SQL Server or SQL Server Express that has the AdventureWorksLT2008 sample database attached to it.","pos":[1088,1218]},{"content":"You can download the AdventureWorksLT2008 database from the <bpt id=\"p1\">[</bpt>CodePlex Web site<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=159848)</ept>.","pos":[1219,1346],"source":" You can download the AdventureWorksLT2008 database from the [CodePlex Web site](http://go.microsoft.com/fwlink/?LinkId=159848)."},{"pos":[1356,1380],"content":"To create entity classes","linkify":"To create entity classes","nodes":[{"content":"To create entity classes","pos":[0,24]}]},{"pos":[1390,1483],"content":"Create a new WPF Application project in Visual Basic or C#, and name it <ph id=\"ph1\">`DataGridSQLExample`</ph>.","source":"Create a new WPF Application project in Visual Basic or C#, and name it `DataGridSQLExample`."},{"pos":[1493,1588],"content":"In Solution Explorer, right-click your project, point to <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>, and then select <bpt id=\"p2\">**</bpt>New Item<ept id=\"p2\">**</ept>.","source":"In Solution Explorer, right-click your project, point to **Add**, and then select **New Item**."},{"content":"The Add New Item dialog box appears.","pos":[1599,1635]},{"pos":[1645,1761],"content":"In the Installed Templates pane, select <bpt id=\"p1\">**</bpt>Data<ept id=\"p1\">**</ept> and in the list of templates, select <bpt id=\"p2\">**</bpt>ADO.NET Entity Data Mode<ept id=\"p2\">**</ept>l.","source":"In the Installed Templates pane, select **Data** and in the list of templates, select **ADO.NET Entity Data Mode**l."},{"pos":[1772,1904],"content":"<bpt id=\"p1\">![</bpt>Select ADO.NET Entity Data Model<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step1.png \"</bpt>DataGrid_SQL_EF_Step1<ept id=\"p2\">\")</ept>","source":"![Select ADO.NET Entity Data Model](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step1.png \"DataGrid_SQL_EF_Step1\")"},{"pos":[1914,1978],"content":"Name the file <ph id=\"ph1\">`AdventureWorksModel.edmx`</ph> and then click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.","source":"Name the file `AdventureWorksModel.edmx` and then click **Add**."},{"content":"The Entity Data Model Wizard appears.","pos":[1989,2026]},{"pos":[2036,2131],"content":"In the Choose Model Contents screen, select <bpt id=\"p1\">**</bpt>Generate from database<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>Next<ept id=\"p2\">**</ept>.","source":"In the Choose Model Contents screen, select **Generate from database** and then click **Next**."},{"pos":[2142,2278],"content":"<bpt id=\"p1\">![</bpt>Select Generate from database option<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step2.png \"</bpt>DataGrid_SQL_EF_Step2<ept id=\"p2\">\")</ept>","source":"![Select Generate from database option](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step2.png \"DataGrid_SQL_EF_Step2\")"},{"content":"In the Choose Your Data Connection screen, provide the connection to your AdventureWorksLT2008 database.","pos":[2288,2392]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Choose Your Data Connection Dialog Box<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160190)</ept>.","pos":[2393,2507],"source":" For more information, see [Choose Your Data Connection Dialog Box](http://go.microsoft.com/fwlink/?LinkId=160190)."},{"pos":[2518,2648],"content":"<bpt id=\"p1\">![</bpt>Provide connection to database<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step3.png \"</bpt>DataGrid_SQL_EF_Step3<ept id=\"p2\">\")</ept>","source":"![Provide connection to database](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step3.png \"DataGrid_SQL_EF_Step3\")"},{"pos":[2658,2828],"content":"Make sure that the name is<ph id=\"ph1\">`AdventureWorksLT2008Entities`</ph> and that the <bpt id=\"p1\">**</bpt>Save entity connection settings in App.Config as<ept id=\"p1\">**</ept> check box is selected, and then click <bpt id=\"p2\">**</bpt>Next<ept id=\"p2\">**</ept>.","source":"Make sure that the name is`AdventureWorksLT2008Entities` and that the **Save entity connection settings in App.Config as** check box is selected, and then click **Next**."},{"pos":[2838,2964],"content":"In the Choose Your Database Objects screen, expand the Tables node, and select the <bpt id=\"p1\">**</bpt>Product<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>ProductCategory<ept id=\"p2\">**</ept> tables.","source":"In the Choose Your Database Objects screen, expand the Tables node, and select the **Product** and **ProductCategory** tables."},{"content":"You can generate entity classes for all of the tables; however, in this example you only retrieve data from those two tables.","pos":[2975,3100]},{"pos":[3111,3257],"content":"<bpt id=\"p1\">![</bpt>Select Product and ProductCategory from tables<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step4.png \"</bpt>DataGrid_SQL_EF_Step4<ept id=\"p2\">\")</ept>","source":"![Select Product and ProductCategory from tables](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step4.png \"DataGrid_SQL_EF_Step4\")"},{"pos":[3266,3283],"content":"Click <bpt id=\"p1\">**</bpt>Finish<ept id=\"p1\">**</ept>.","source":"Click **Finish**."},{"content":"The Product and ProductCategory entities are displayed in the Entity Designer.","pos":[3294,3372]},{"pos":[3383,3524],"content":"<bpt id=\"p1\">![</bpt>Product and ProductCategory entity models<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step5.png \"</bpt>DataGrid_SQL_EF_Step5<ept id=\"p2\">\")</ept>","source":"![Product and ProductCategory entity models](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step5.png \"DataGrid_SQL_EF_Step5\")"},{"pos":[3534,3566],"content":"To retrieve and present the data","linkify":"To retrieve and present the data","nodes":[{"content":"To retrieve and present the data","pos":[0,32]}]},{"content":"Open the MainWindow.xaml file.","pos":[3576,3606]},{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> property on the <ph id=\"ph2\">&lt;xref:System.Windows.Window&gt;</ph> to 450.","pos":[3616,3724],"source":"Set the <xref:System.Windows.FrameworkElement.Width%2A> property on the <xref:System.Windows.Window> to 450."},{"pos":[3734,3923],"content":"In the XAML editor, add the following <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> tag between the <ph id=\"ph2\">`&lt;Grid&gt;`</ph> and <ph id=\"ph3\">`&lt;/Grid&gt;`</ph> tags to add a <ph id=\"ph4\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> named <ph id=\"ph5\">`dataGrid1`</ph>.","source":"In the XAML editor, add the following <xref:System.Windows.Controls.DataGrid> tag between the `<Grid>` and `</Grid>` tags to add a <xref:System.Windows.Controls.DataGrid> named `dataGrid1`."},{"pos":[4089,4209],"content":"<bpt id=\"p1\">![</bpt>Window with DataGrid<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step6.png \"</bpt>DataGrid_SQL_EF_Step6<ept id=\"p2\">\")</ept>","source":"![Window with DataGrid](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step6.png \"DataGrid_SQL_EF_Step6\")"},{"content":"Select the <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph>.","pos":[4219,4259],"source":"Select the <xref:System.Windows.Window>."},{"content":"Using the Properties window or XAML editor, create an event handler for the <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> named <ph id=\"ph2\">`Window_Loaded`</ph> for the <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event.","pos":[4269,4456],"source":"Using the Properties window or XAML editor, create an event handler for the <xref:System.Windows.Window> named `Window_Loaded` for the <xref:System.Windows.FrameworkElement.Loaded> event."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Create a Simple Event Handler<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b1456e07-9dec-4354-99cf-18666b64f480)</ept>.","pos":[4457,4593],"source":" For more information, see [How to: Create a Simple Event Handler](http://msdn.microsoft.com/en-us/b1456e07-9dec-4354-99cf-18666b64f480)."},{"content":"The following shows the XAML for MainWindow.xaml.","pos":[4604,4653]},{"pos":[4665,4827],"content":"[!NOTE]\nIf you are using Visual Basic, in the first line of MainWindow.xaml, replace `x:Class=\"DataGridSQLExample.MainWindow\"` with `x:Class=\"MainWindow\"`.","leadings":["","    >  "],"nodes":[{"content":"If you are using Visual Basic, in the first line of MainWindow.xaml, replace <ph id=\"ph1\">`x:Class=\"DataGridSQLExample.MainWindow\"`</ph> with <ph id=\"ph2\">`x:Class=\"MainWindow\"`</ph>.","pos":[8,155],"source":"If you are using Visual Basic, in the first line of MainWindow.xaml, replace `x:Class=\"DataGridSQLExample.MainWindow\"` with `x:Class=\"MainWindow\"`."}]},{"content":"Open the code-behind file (MainWindow.xaml.vb or MainWindow.xaml.cs) for the <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph>.","pos":[4992,5098],"source":"Open the code-behind file (MainWindow.xaml.vb or MainWindow.xaml.cs) for the <xref:System.Windows.Window>."},{"content":"Add the following code to retrieve only specific values from the joined tables and set the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> to the results of the query.","pos":[5108,5342],"source":"Add the following code to retrieve only specific values from the joined tables and set the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property of the <xref:System.Windows.Controls.DataGrid> to the results of the query."},{"pos":[5353,5660],"content":"[!code-csharp[DataGrid_SQL_EF_Walkthrough#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/CS/MainWindow.xaml.cs#2)]\n [!code-vb[DataGrid_SQL_EF_Walkthrough#2](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/VB/MainWindow.xaml.vb#2)]","leadings":["","    "],"nodes":[]},{"content":"Run the example.","pos":[5670,5686]},{"content":"You should see a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> that displays data.","pos":[5697,5773],"source":"You should see a <xref:System.Windows.Controls.DataGrid> that displays data."},{"pos":[5784,5920],"content":"<bpt id=\"p1\">![</bpt>DataGrid with data from SQL database<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step7.png \"</bpt>DataGrid_SQL_EF_Step7<ept id=\"p2\">\")</ept>","source":"![DataGrid with data from SQL database](../../../../docs/framework/wpf/controls/media/datagrid-sql-ef-step7.png \"DataGrid_SQL_EF_Step7\")"},{"pos":[5929,5939],"content":"Next Steps","linkify":"Next Steps","nodes":[{"content":"Next Steps","pos":[0,10]}]},{"pos":[5948,5956],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>","pos":[5960,5999],"source":"<xref:System.Windows.Controls.DataGrid> "},{"content":"<bpt id=\"p1\">[</bpt>How Do I: Get Started with Entity Framework in WPF Applications?<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=159868)</ept>","pos":[6004,6117],"source":"[How Do I: Get Started with Entity Framework in WPF Applications?](http://go.microsoft.com/fwlink/?LinkId=159868)"}]}