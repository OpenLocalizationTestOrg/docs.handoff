{"content":"---\ntitle: \"How to: Find an Element with a Specific Child Element (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 00cf5555-374e-4369-bf93-7bd2e7f21db3\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\n---\n# How to: Find an Element with a Specific Child Element (C#)\nThis topic shows how to find a particular element that has a child element with a specific value.  \n  \n## Example  \n The example finds the `Test` element that has a `CommandLine` child element with the value of \"Examp2.EXE\".  \n  \n This example uses the following XML document: [Sample XML File: Test Configuration (LINQ to XML)](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-test-configuration-linq-to-xml.md).  \n  \n```csharp  \nXElement root = XElement.Load(\"TestConfig.xml\");  \nIEnumerable<XElement> tests =  \n    from el in root.Elements(\"Test\")  \n    where (string)el.Element(\"CommandLine\") == \"Examp2.EXE\"  \n    select el;  \nforeach (XElement el in tests)  \n    Console.WriteLine((string)el.Attribute(\"TestId\"));  \n```  \n  \n This code produces the following output:  \n  \n```  \n0002  \n0006  \n```  \n  \n## Example  \n The following example shows the same query for XML that is in a namespace. For more information, see [Working with XML Namespaces (C#)](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md).  \n  \n This example uses the following XML document: [Sample XML File: Test Configuration in a Namespace](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-test-configuration-in-a-namespace1.md).  \n  \n```csharp  \nXElement root = XElement.Load(\"TestConfigInNamespace.xml\");  \nXNamespace ad = \"http://www.adatum.com\";  \nIEnumerable<XElement> tests =  \n    from el in root.Elements(ad + \"Test\")  \n    where (string)el.Element(ad + \"CommandLine\") == \"Examp2.EXE\"  \n    select el;  \nforeach (XElement el in tests)  \n    Console.WriteLine((string)el.Attribute(\"TestId\"));  \n```  \n  \n This code produces the following output:  \n  \n```  \n0002  \n0006  \n```  \n  \n## See Also  \n <xref:System.Xml.Linq.XElement.Attribute%2A>   \n <xref:System.Xml.Linq.XContainer.Elements%2A>   \n [Basic Queries (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)   \n [Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)   \n [Projection Operations (C#)](../../../../csharp/programming-guide/concepts/linq/projection-operations.md)","nodes":[{"pos":[12,87],"content":"How to: Find an Element with a Specific Child Element (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Find an Element with a Specific Child Element (C#) | Microsoft Docs","pos":[0,75]}]},{"pos":[372,430],"content":"How to: Find an Element with a Specific Child Element (C#)","linkify":"How to: Find an Element with a Specific Child Element (C#)","nodes":[{"content":"How to: Find an Element with a Specific Child Element (C#)","pos":[0,58]}]},{"content":"This topic shows how to find a particular element that has a child element with a specific value.","pos":[431,528]},{"pos":[537,544],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[548,655],"content":"The example finds the <ph id=\"ph1\">`Test`</ph> element that has a <ph id=\"ph2\">`CommandLine`</ph> child element with the value of \"Examp2.EXE\".","source":"The example finds the `Test` element that has a `CommandLine` child element with the value of \"Examp2.EXE\"."},{"pos":[662,862],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Test Configuration (LINQ to XML)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-test-configuration-linq-to-xml.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Test Configuration (LINQ to XML)](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-test-configuration-linq-to-xml.md)."},{"content":"This code produces the following output:","pos":[1181,1221]},{"pos":[1259,1266],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the same query for XML that is in a namespace.","pos":[1270,1344]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with XML Namespaces (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.","pos":[1345,1489],"source":" For more information, see [Working with XML Namespaces (C#)](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md)."},{"pos":[1496,1701],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Test Configuration in a Namespace<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-test-configuration-in-a-namespace1.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Test Configuration in a Namespace](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-test-configuration-in-a-namespace1.md)."},{"content":"This code produces the following output:","pos":[2084,2124]},{"pos":[2162,2170],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;</ph>","pos":[2174,2218],"source":"<xref:System.Xml.Linq.XElement.Attribute%2A> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph>","pos":[2223,2268],"source":" <xref:System.Xml.Linq.XContainer.Elements%2A> "},{"content":"<bpt id=\"p1\"> [</bpt>Basic Queries (LINQ to XML) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept><ph id=\"ph1\"> </ph>","pos":[2272,2389],"source":" [Basic Queries (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/basic-queries-linq-to-xml.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Standard Query Operators Overview (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[2392,2523],"source":" [Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Projection Operations (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/projection-operations.md)</ept>","pos":[2526,2632],"source":" [Projection Operations (C#)](../../../../csharp/programming-guide/concepts/linq/projection-operations.md)"}]}