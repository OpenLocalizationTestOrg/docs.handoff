<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-enumerate-directories-and-files.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">863335cf080dbccd76b38c7222b74637b99ae2f0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\io\how-to-enumerate-directories-and-files.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db88ceae9d996eeafbc2093631ada3e3e1c220a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa2f2026e544ff45af80f6851141050cbd749b3e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Enumerate directories and files</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Enumerate directories and files</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enumerable collections provide better performance than arrays when you work with large collections of directories and files.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To enumerate directories and files, use methods that return an enumerable collection of directory or file names, or their <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>, or <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you want to search and return only the names of directories or files, use the enumeration methods of the <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you want to search and return other properties of directories or files, use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use enumerable collections from these methods as the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> parameter for constructors of collection classes like <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following table summarizes the methods that return enumerable collections of files and directories:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To search and return</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use method</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Directory names</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Directory information (<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>File names</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>File information (<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>File system entry names</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>File system entry information (<ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Directory and file names</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Although you can immediately enumerate all the files in the subdirectories of a parent directory by using the <ph id="ph1">&lt;xref:System.IO.SearchOption.AllDirectories&gt;</ph> option of the optional <ph id="ph2">&lt;xref:System.IO.SearchOption&gt;</ph> enumeration, <ph id="ph3">&lt;xref:System.UnauthorizedAccessException&gt;</ph> errors may make the enumeration incomplete.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can catch these exceptions by first enumerating directories and then enumerating files.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Examples: Use the Directory class</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%28System.String%29?displayProperty=nameWithType&gt;</ph> method to get a list of the top-level directory names in a specified path.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%28System.String%2CSystem.String%2CSystem.IO.SearchOption%29?displayProperty=nameWithType&gt;</ph> method to recursively enumerate all file names in a directory and subdirectories that match a certain pattern.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It then reads each line of each file and displays the lines that contain a specified string, with their filenames and paths.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Examples: Use the DirectoryInfo class</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType&gt;</ph> method to list a collection of top-level directories whose <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc&gt;</ph> is earlier than a certain <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType&gt;</ph> method to list all files whose <ph id="ph2">&lt;xref:System.IO.FileInfo.Length&gt;</ph> exceeds 10MB.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example first enumerates the top-level directories, to catch possible unauthorized access exceptions, and then enumerates the files.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>File and stream I/O<ept id="p1">](../../../docs/standard/io/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>