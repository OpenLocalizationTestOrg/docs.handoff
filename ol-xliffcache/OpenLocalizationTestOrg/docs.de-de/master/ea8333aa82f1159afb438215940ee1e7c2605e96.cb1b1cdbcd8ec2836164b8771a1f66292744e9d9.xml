{"content":"---\ntitle: \"How to: Get and Set the Main Application Window\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"windows objects [WPF], setting\"\n  - \"setting windows objects [WPF]\"\n  - \"windows objects [WPF], getting\"\n  - \"getting windows objects [WPF]\"\nms.assetid: ec902bc4-4a59-46f5-8ec1-963b46789356\n---\n# How to: Get and Set the Main Application Window\nThis example shows how to get and set the main application window.  \n  \n## Example  \n The first <xref:System.Windows.Window> that is instantiated within a Windows Presentation Foundation (WPF) application is automatically set by <xref:System.Windows.Application> as the main application window. The first <xref:System.Windows.Window> to be instantiated will most likely be the window that is specified as the startup [!INCLUDE[TLA#tla_uri](../../../../includes/tlasharptla-uri-md.md)] (see <xref:System.Windows.Application.StartupUri%2A>).  \n  \n The first <xref:System.Windows.Window> could also be instantiated using code. One example is opening a window during application startup, like the following:  \n  \n [!code-csharp[HOWTOWindowManagementSnippets#FirstWindowUsingCodeCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/App.xaml.cs#firstwindowusingcodecodebehind)]\n [!code-vb[HOWTOWindowManagementSnippets#FirstWindowUsingCodeCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/application.xaml.vb#firstwindowusingcodecodebehind)]  \n  \n Sometimes, the first instantiated <xref:System.Windows.Window> is not actually the main application window e.g. a splash screen. In this case, you can specify the main application window using markup, like the following:  \n  \n [!code-xaml[ApplicationMainWindowSnippets#SetApplicationMainWindowXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/ApplicationMainWindowSnippets/XAML/App.xaml#setapplicationmainwindowxaml)]  \n  \n Whether the main window is specified automatically or manually, you can get the main window from <xref:System.Windows.Application.MainWindow%2A> using the following code, like the following:  \n  \n [!code-csharp[ApplicationMainWindowSnippets#GetApplicationMainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationMainWindowSnippets/CSharp/App.xaml.cs#getapplicationmainwindowcode)]\n [!code-vb[ApplicationMainWindowSnippets#GetApplicationMainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationMainWindowSnippets/visualbasic/application.xaml.vb#getapplicationmainwindowcode)]\n","nodes":[{"pos":[4,333],"embed":true,"restype":"x-metadata","content":"title: \"How to: Get and Set the Main Application Window\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"windows objects [WPF], setting\"\n  - \"setting windows objects [WPF]\"\n  - \"windows objects [WPF], getting\"\n  - \"getting windows objects [WPF]\"\nms.assetid: ec902bc4-4a59-46f5-8ec1-963b46789356","nodes":[{"content":"How to: Get and Set the Main Application Window","nodes":[{"pos":[0,47],"content":"How to: Get and Set the Main Application Window","nodes":[{"content":"How to: Get and Set the Main Application Window","pos":[0,47]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[340,387],"content":"How to: Get and Set the Main Application Window","linkify":"How to: Get and Set the Main Application Window","nodes":[{"content":"How to: Get and Set the Main Application Window","pos":[0,47]}]},{"content":"This example shows how to get and set the main application window.","pos":[388,454]},{"pos":[463,470],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The first <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> that is instantiated within a Windows Presentation Foundation (WPF) application is automatically set by <ph id=\"ph2\">&lt;xref:System.Windows.Application&gt;</ph> as the main application window.","pos":[474,682],"source":"The first <xref:System.Windows.Window> that is instantiated within a Windows Presentation Foundation (WPF) application is automatically set by <xref:System.Windows.Application> as the main application window."},{"content":"The first <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> to be instantiated will most likely be the window that is specified as the startup <ph id=\"ph2\">[!INCLUDE[TLA#tla_uri](../../../../includes/tlasharptla-uri-md.md)]</ph> (see <ph id=\"ph3\">&lt;xref:System.Windows.Application.StartupUri%2A&gt;</ph>).","pos":[683,927],"source":" The first <xref:System.Windows.Window> to be instantiated will most likely be the window that is specified as the startup [!INCLUDE[TLA#tla_uri](../../../../includes/tlasharptla-uri-md.md)] (see <xref:System.Windows.Application.StartupUri%2A>)."},{"content":"The first <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> could also be instantiated using code.","pos":[934,1011],"source":"The first <xref:System.Windows.Window> could also be instantiated using code."},{"content":"One example is opening a window during application startup, like the following:","pos":[1012,1091]},{"content":"Sometimes, the first instantiated <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> is not actually the main application window e.g. a splash screen.","pos":[1519,1647],"source":"Sometimes, the first instantiated <xref:System.Windows.Window> is not actually the main application window e.g. a splash screen."},{"content":"In this case, you can specify the main application window using markup, like the following:","pos":[1648,1739]},{"pos":[1939,2129],"content":"Whether the main window is specified automatically or manually, you can get the main window from <ph id=\"ph1\">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> using the following code, like the following:","source":"Whether the main window is specified automatically or manually, you can get the main window from <xref:System.Windows.Application.MainWindow%2A> using the following code, like the following:"}]}