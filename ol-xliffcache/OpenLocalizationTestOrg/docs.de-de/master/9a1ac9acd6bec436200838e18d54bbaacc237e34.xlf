<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="understanding-protection-level.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a1ac9acd6bec436200838e18d54bbaacc237e34</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\understanding-protection-level.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f319d5b1e117b59627d16b1321bc8b3ad026a5ef</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f1df2787f58db636f5f23cb2b21fd2aa1719eae</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Understanding Protection Level | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Understanding Protection Level</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ProtectionLevel`</ph> property is found on many different classes, such as the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The property controls how a part (or whole) of a message is protected.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic explains the <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> feature and how it works.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For instructions on setting the protection level, see <bpt id="p1">[</bpt>How to: Set the ProtectionLevel Property<ept id="p1">](../../../docs/framework/wcf/how-to-set-the-protectionlevel-property.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Protection levels can be set only in code, not in configuration.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Basics</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To understand the protection level feature, the following basic statements apply:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Three basic levels of protection exist for any part of a message.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The property (wherever it occurs) is set to one of the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In ascending order of protection, they include:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`None`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Sign`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The protected part is digitally signed.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This ensures detection of any tampering with the protected message part.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`EncryptAndSign`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The message part is encrypted to ensure confidentiality before it is signed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can set protection requirements only for <bpt id="p1">*</bpt>application data<ept id="p1">*</ept> with this feature.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, WS-Addressing headers are infrastructure data and, therefore, are not affected by the <ph id="ph1">`ProtectionLevel`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the security mode is set to <ph id="ph1">`Transport`</ph>, the entire message is protected by the transport mechanism.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Therefore, setting a separate protection level for different parts of a message has no effect.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ProtectionLevel`</ph> is a way for the developer to set the <bpt id="p1">*</bpt>minimum level<ept id="p1">*</ept> that a binding must comply with.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When a service is deployed, the actual binding specified in configuration may or may not support the minimum level.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, by default, the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> class does not supply security (although it can be enabled).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Therefore, using it with a contract that has any setting other than <ph id="ph1">`None`</ph> will cause an exception to be thrown.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the service requires that the minimum <ph id="ph1">`ProtectionLevel`</ph> for all messages is <ph id="ph2">`Sign`</ph>, a client (perhaps created by a non-<ph id="ph3">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> technology) can encrypt and sign all messages (which is more than the minimum required).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In this case, <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> will not throw an exception because the client has done more than the minimum.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Note, however, that <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> applications (services or clients) will not over-secure a message part if possible but will comply with the minimum level.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Also note that when using <ph id="ph1">`Transport`</ph> as the security mode, the transport may over-secure the message stream because it is inherently unable to secure at a more granular level.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you set the <ph id="ph1">`ProtectionLevel`</ph> explicitly to either <ph id="ph2">`Sign`</ph> or <ph id="ph3">`EncryptAndSign`</ph>, then you must use a binding with security enabled or an exception will be thrown.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you select a binding that enables security and you do not set the <ph id="ph1">`ProtectionLevel`</ph> property anywhere on the contract, all application data will be encrypted and signed.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you select a binding that does not have security enabled (for example, the <ph id="ph1">`BasicHttpBinding`</ph> class has security disabled by default), and the <ph id="ph2">`ProtectionLevel`</ph> is not explicitly set, then none of the application data will be protected.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you are using a binding that applies security at the transport level, all application data will be secured according to the capabilities of the transport.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you use a binding that applies security at the message level, then application data will be secured according to the protection levels set on the contract.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you do not specify a protection level, then all application data in the messages will be encrypted and signed.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ProtectionLevel`</ph> can be set at different scoping levels.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>There is a hierarchy associated with scoping, which is explained in the next section.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Scoping</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Setting the <ph id="ph1">`ProtectionLevel`</ph> on the topmost API sets the level for all levels below it.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`ProtectionLevel`</ph> is set to a different value at a lower level, all APIs below that level in the hierarchy will now be reset to the new level (APIs above it, however, will still be affected by the topmost level).</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The hierarchy is as follows.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Attributes at the same level are peers.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Programming ProtectionLevel</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To program the <ph id="ph1">`ProtectionLevel`</ph> at any point in the hierarchy, simply set the property to an appropriate value when applying the attribute.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For examples, see <bpt id="p1">[</bpt>How to: Set the ProtectionLevel Property<ept id="p1">](../../../docs/framework/wcf/how-to-set-the-protectionlevel-property.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Setting the property on faults and message contracts requires understanding how those features work.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>How to: Set the ProtectionLevel Property<ept id="p1">](../../../docs/framework/wcf/how-to-set-the-protectionlevel-property.md)</ept> and <bpt id="p2">[</bpt>Using Message Contracts<ept id="p2">](../../../docs/framework/wcf/feature-details/using-message-contracts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>WS-Addressing Dependency</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In most cases, using the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> to generate a client ensures that the client and service contracts are identical.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>However, seemingly identical contracts can cause the client to throw an exception.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This occurs whenever a binding does not support the WS-Addressing specification and multiple levels of protection are specified on the contract.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> class does not support the specification, or if you create a custom binding that does not support WS-Addressing.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ProtectionLevel`</ph> feature relies on the WS-Addressing specification to enable different protection levels on a single contract.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If the binding does not support the WS-Addressing specification, all levels will be set to the same protection level.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The effective protection level for all scopes on the contract will be set to the strongest protection level used on the contract.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This may cause a problem that is hard to debug at first glance.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It is possible to create a client contract (an interface) that includes methods for more than one service.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>That is, the same interface is used to create a client that communicates with many services, and the single interface contains methods for all services.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The developer must take care in this rare scenario to invoke only those methods that are applicable for each particular service.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If the binding is the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> class, multiple protection levels cannot be supported.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, a service replying to the client might respond to a client with a lower protection level than required.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In this case, the client will throw an exception because it expects a higher protection level.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An example of the code illustrates this problem.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following example shows a service and a client contract.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Assume that the binding is the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>basicHttpBinding&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/basichttpbinding.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Therefore, all operations on a contract have the same protection level.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This uniform protection level is determined as the maximum protection level across all operations.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The service contract is:</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following code shows the client contract interface.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Note that it includes a <ph id="ph1">`Tax`</ph> method that is intended to be used with a different service:</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When the client calls the <ph id="ph1">`Price`</ph> method, it throws an exception when it receives a reply from the service.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This occurs because the client does not specify a <ph id="ph1">`ProtectionLevel`</ph> on the <ph id="ph2">`ServiceContractAttribute`</ph>, and therefore the client uses the default (<ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>) for all methods, including the <ph id="ph4">`Price`</ph> method.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>However, the service returns the value using the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> level because the service contract defines a single method that has its protection level set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In this case, the client will throw an error when validating the response from the service.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Securing Services<ept id="p1">](../../../docs/framework/wcf/securing-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Set the ProtectionLevel Property<ept id="p1">](../../../docs/framework/wcf/how-to-set-the-protectionlevel-property.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](../../../docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Message Contracts<ept id="p1">](../../../docs/framework/wcf/feature-details/using-message-contracts.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>