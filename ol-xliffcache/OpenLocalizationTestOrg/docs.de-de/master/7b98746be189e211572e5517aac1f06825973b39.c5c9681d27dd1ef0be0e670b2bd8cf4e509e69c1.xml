{"content":"---\ntitle: \"ICorProfilerInfo2::GetClassIDInfo2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerInfo2.GetClassIDInfo2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo2::GetClassIDInfo2\"\nhelpviewer_keywords: \n  - \"GetClassIDInfo2 method [.NET Framework profiling]\"\n  - \"ICorProfilerInfo2::GetClassIDInfo2 method [.NET Framework profiling]\"\nms.assetid: 0141d582-d066-4d49-8d1f-ae82129a1960\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ICorProfilerInfo2::GetClassIDInfo2 Method\nGets the parent module and metadata token for the open generic definition of the specified class, the `ClassID` of its parent class, and the `ClassID` for each type argument, if present, of the class.  \n  \n## Syntax  \n  \n```  \nHRESULT GetClassIDInfo2(  \n    [in]  ClassID classId,  \n    [out] ModuleID *pModuleId,  \n    [out] mdTypeDef *pTypeDefToken,  \n    [out] ClassID *pParentClassId,  \n    [in]  ULONG32 cNumTypeArgs,  \n    [out] ULONG32 *pcNumTypeArgs,  \n    [out] ClassID typeArgs[]);  \n```  \n  \n## Parameters  \n `classId`  \n [in] The ID of the class for which information will be retrieved.  \n  \n `pModuleId`  \n [out] Pointer to the ID of the parent module for the open generic definition of the specified class.  \n  \n `pTypeDefToken`  \n [out] Pointer to the metadata token for the open generic definition of the specified class.  \n  \n `pParentClassId`  \n [out] Pointer to the ID of the parent class.  \n  \n `cNumTypeArgs`  \n [in] The size of the `typeArgs` array.  \n  \n `pcNumTypeArgs`  \n [out] Pointer to the total number of available elements.  \n  \n `typeArgs`  \n [out] An array of `ClassID` values, each of which represents the ID of a type argument of the class. When the method returns, `typeArgs` will contain some or all the available `ClassID` values.  \n  \n## Remarks  \n The `GetClassIDInfo2` method is similar to the [ICorProfilerInfo::GetClassIDInfo](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getclassidinfo-method.md) method, but `GetClassIDInfo2` obtains additional information about a generic type.  \n  \n The profiler code can call [ICorProfilerInfo::GetModuleMetaData](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getmodulemetadata-method.md) to obtain a [metadata](../../../../docs/framework/unmanaged-api/metadata/index.md) interface for a given module. The metadata token that is returned to the location referenced by `pTypeDefToken` can then be used to access the metadata for the class.  \n  \n After `GetClassIDInfo2` returns, you must verify that the `typeArgs` buffer was large enough to contain all the `ClassID` values. To do this, compare the value that `pcNumTypeArgs` points to with the value of the `cNumTypeArgs` parameter. If `pcNumTypeArgs` points to a value that is larger than `cNumTypeArgs`, allocate a larger `typeArgs` buffer, update `cNumTypeArgs` with the new, larger size, and call `GetClassIDInfo2` again.  \n  \n Alternatively, you can first call `GetClassIDInfo2` with a zero-length `typeArgs` buffer to obtain the correct buffer size. You can then set the `typeArgs` buffer size to the value returned in `pcNumTypeArgs` and call `GetClassIDInfo2` again.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [ICorProfilerInfo Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)\n- [ICorProfilerInfo2 Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-interface.md)\n- [Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)\n- [Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)\n","nodes":[{"pos":[4,502],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerInfo2::GetClassIDInfo2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerInfo2.GetClassIDInfo2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo2::GetClassIDInfo2\"\nhelpviewer_keywords: \n  - \"GetClassIDInfo2 method [.NET Framework profiling]\"\n  - \"ICorProfilerInfo2::GetClassIDInfo2 method [.NET Framework profiling]\"\nms.assetid: 0141d582-d066-4d49-8d1f-ae82129a1960\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ICorProfilerInfo2::GetClassIDInfo2 Method","nodes":[{"pos":[0,41],"content":"ICorProfilerInfo2::GetClassIDInfo2 Method","nodes":[{"content":"ICorProfilerInfo2::GetClassIDInfo2 Method","pos":[0,41]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[509,550],"content":"ICorProfilerInfo2::GetClassIDInfo2 Method","linkify":"ICorProfilerInfo2::GetClassIDInfo2 Method","nodes":[{"content":"ICorProfilerInfo2::GetClassIDInfo2 Method","pos":[0,41]}]},{"pos":[551,751],"content":"Gets the parent module and metadata token for the open generic definition of the specified class, the <ph id=\"ph1\">`ClassID`</ph> of its parent class, and the <ph id=\"ph2\">`ClassID`</ph> for each type argument, if present, of the class.","source":"Gets the parent module and metadata token for the open generic definition of the specified class, the `ClassID` of its parent class, and the `ClassID` for each type argument, if present, of the class."},{"pos":[760,766],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1057,1067],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The ID of the class for which information will be retrieved.","pos":[1084,1149]},{"content":"[out] Pointer to the ID of the parent module for the open generic definition of the specified class.","pos":[1171,1271]},{"content":"[out] Pointer to the metadata token for the open generic definition of the specified class.","pos":[1297,1388]},{"content":"[out] Pointer to the ID of the parent class.","pos":[1415,1459]},{"content":"[in] The size of the <ph id=\"ph1\">`typeArgs`</ph> array.","pos":[1484,1522],"source":"[in] The size of the `typeArgs` array."},{"content":"[out] Pointer to the total number of available elements.","pos":[1548,1604]},{"content":"[out] An array of <ph id=\"ph1\">`ClassID`</ph> values, each of which represents the ID of a type argument of the class.","pos":[1625,1725],"source":"[out] An array of `ClassID` values, each of which represents the ID of a type argument of the class."},{"content":"When the method returns, <ph id=\"ph1\">`typeArgs`</ph> will contain some or all the available <ph id=\"ph2\">`ClassID`</ph> values.","pos":[1726,1818],"source":" When the method returns, `typeArgs` will contain some or all the available `ClassID` values."},{"pos":[1827,1834],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1838,2096],"content":"The <ph id=\"ph1\">`GetClassIDInfo2`</ph> method is similar to the <bpt id=\"p1\">[</bpt>ICorProfilerInfo::GetClassIDInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getclassidinfo-method.md)</ept> method, but <ph id=\"ph2\">`GetClassIDInfo2`</ph> obtains additional information about a generic type.","source":"The `GetClassIDInfo2` method is similar to the [ICorProfilerInfo::GetClassIDInfo](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getclassidinfo-method.md) method, but `GetClassIDInfo2` obtains additional information about a generic type."},{"content":"The profiler code can call <bpt id=\"p1\">[</bpt>ICorProfilerInfo::GetModuleMetaData<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getmodulemetadata-method.md)</ept> to obtain a <bpt id=\"p2\">[</bpt>metadata<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/metadata/index.md)</ept> interface for a given module.","pos":[2103,2377],"source":"The profiler code can call [ICorProfilerInfo::GetModuleMetaData](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getmodulemetadata-method.md) to obtain a [metadata](../../../../docs/framework/unmanaged-api/metadata/index.md) interface for a given module."},{"content":"The metadata token that is returned to the location referenced by <ph id=\"ph1\">`pTypeDefToken`</ph> can then be used to access the metadata for the class.","pos":[2378,2514],"source":" The metadata token that is returned to the location referenced by `pTypeDefToken` can then be used to access the metadata for the class."},{"content":"After <ph id=\"ph1\">`GetClassIDInfo2`</ph> returns, you must verify that the <ph id=\"ph2\">`typeArgs`</ph> buffer was large enough to contain all the <ph id=\"ph3\">`ClassID`</ph> values.","pos":[2521,2650],"source":"After `GetClassIDInfo2` returns, you must verify that the `typeArgs` buffer was large enough to contain all the `ClassID` values."},{"content":"To do this, compare the value that <ph id=\"ph1\">`pcNumTypeArgs`</ph> points to with the value of the <ph id=\"ph2\">`cNumTypeArgs`</ph> parameter.","pos":[2651,2759],"source":" To do this, compare the value that `pcNumTypeArgs` points to with the value of the `cNumTypeArgs` parameter."},{"content":"If <ph id=\"ph1\">`pcNumTypeArgs`</ph> points to a value that is larger than <ph id=\"ph2\">`cNumTypeArgs`</ph>, allocate a larger <ph id=\"ph3\">`typeArgs`</ph> buffer, update <ph id=\"ph4\">`cNumTypeArgs`</ph> with the new, larger size, and call <ph id=\"ph5\">`GetClassIDInfo2`</ph> again.","pos":[2760,2952],"source":" If `pcNumTypeArgs` points to a value that is larger than `cNumTypeArgs`, allocate a larger `typeArgs` buffer, update `cNumTypeArgs` with the new, larger size, and call `GetClassIDInfo2` again."},{"content":"Alternatively, you can first call <ph id=\"ph1\">`GetClassIDInfo2`</ph> with a zero-length <ph id=\"ph2\">`typeArgs`</ph> buffer to obtain the correct buffer size.","pos":[2959,3082],"source":"Alternatively, you can first call `GetClassIDInfo2` with a zero-length `typeArgs` buffer to obtain the correct buffer size."},{"content":"You can then set the <ph id=\"ph1\">`typeArgs`</ph> buffer size to the value returned in <ph id=\"ph2\">`pcNumTypeArgs`</ph> and call <ph id=\"ph3\">`GetClassIDInfo2`</ph> again.","pos":[3083,3201],"source":" You can then set the `typeArgs` buffer size to the value returned in `pcNumTypeArgs` and call `GetClassIDInfo2` again."},{"pos":[3210,3222],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3226,3330],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3337,3371],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[3378,3403],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3410,3518],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[3527,3535],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3539,3649],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerInfo Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)</ept>","source":"[ICorProfilerInfo Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)"},{"pos":[3652,3764],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerInfo2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-interface.md)</ept>","source":"[ICorProfilerInfo2 Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-interface.md)"},{"pos":[3767,3865],"content":"<bpt id=\"p1\">[</bpt>Profiling Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept>","source":"[Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)"},{"pos":[3868,3940],"content":"<bpt id=\"p1\">[</bpt>Profiling<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept>","source":"[Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)"}]}