{"content":"---\ntitle: \"How to: Execute a Query that Returns Complex Types | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"ESQL\"\n  - \"jsharp\"\nms.assetid: c2209fdb-70ef-4dea-8bb8-097fe96f5563\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# How to: Execute a Query that Returns Complex Types\nThis topic shows how to execute an [!INCLUDE[esql](../../../../../includes/esql-md.md)] query that returns entity type objects that contain a property of a complex type.  \n  \n### To run the code in this example  \n  \n1.  Add the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832) to your project and configure your project to use the [!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]. For more information, see [How to: Use the Entity Data Model Wizard](http://msdn.microsoft.com/en-us/dadb058a-c5d9-4c5c-8b01-28044112231d).  \n  \n2.  In the code page for your application, add the following `using` statements (`Imports` in Visual Basic):  \n  \n     [!code-csharp[DP EntityServices Concepts#Namespaces](../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts/cs/source.cs#namespaces)]\n     [!code-vb[DP EntityServices Concepts#Namespaces](../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp entityservices concepts/vb/source.vb#namespaces)]  \n  \n3.  Double click the .edmx file to display the model in the [Model Browser window](http://msdn.microsoft.com/en-us/94e836e8-a5ea-47ff-aa3e-599d8a02ebfd) of the Entity Designer. On the Entity Designer surface, select the `Email` and `Phone` properties of the `Contact` entity type, then right-click and select **Refactor into New Complex Type**.  \n  \n4.  A new complex type with the selected `Email` and `Phone` properties is added to the **Model Browser**. The complex type is given a default name: rename the type to `EmailPhone` in the **Properties** window. Also, a new `ComplexProperty` property is added to the `Contact` entity type. Rename the property to `EmailPhoneComplexType.`  \n  \n     For information about creating and modifying complex types by using the Entity Data Model Wizard, see [How to: Refactor Existing Properties into a Complex Type Property](http://msdn.microsoft.com/en-us/5b2eb3b3-693d-42cb-b43a-405812d677eb) and [How to: Create and Modify Complex Types](http://msdn.microsoft.com/en-us/afb8e206-0ffe-4597-b6d4-6ab566897e1d).  \n  \n## Example  \n The following example executes a query that returns a collection of `Contact` objects and displays two properties of the `Contact` objects: `ContactID` and the values of the `EmailPhoneComplexType` complex type.  \n  \n [!code-csharp[DP EntityServices Concepts#ComplexTypeWithEntityCommand](../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts/cs/source.cs#complextypewithentitycommand)]\n [!code-vb[DP EntityServices Concepts#ComplexTypeWithEntityCommand](../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp entityservices concepts/vb/source.vb#complextypewithentitycommand)]","nodes":[{"pos":[4,449],"embed":true,"restype":"x-metadata","content":"title: \"How to: Execute a Query that Returns Complex Types | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"ESQL\"\n  - \"jsharp\"\nms.assetid: c2209fdb-70ef-4dea-8bb8-097fe96f5563\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"How to: Execute a Query that Returns Complex Types | Microsoft Docs","nodes":[{"pos":[0,67],"content":"How to: Execute a Query that Returns Complex Types | Microsoft Docs","nodes":[{"content":"How to: Execute a Query that Returns Complex Types | Microsoft Docs","pos":[0,67]}]}],"path":["title"]}],"yml":true},{"pos":[456,506],"content":"How to: Execute a Query that Returns Complex Types","linkify":"How to: Execute a Query that Returns Complex Types","nodes":[{"content":"How to: Execute a Query that Returns Complex Types","pos":[0,50]}]},{"pos":[507,676],"content":"This topic shows how to execute an <ph id=\"ph1\">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> query that returns entity type objects that contain a property of a complex type.","source":"This topic shows how to execute an [!INCLUDE[esql](../../../../../includes/esql-md.md)] query that returns entity type objects that contain a property of a complex type."},{"pos":[686,717],"content":"To run the code in this example","linkify":"To run the code in this example","nodes":[{"content":"To run the code in this example","pos":[0,31]}]},{"content":"Add the <bpt id=\"p1\">[</bpt>AdventureWorks Sales Model<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832)</ept> to your project and configure your project to use the <ph id=\"ph1\">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph>.","pos":[727,951],"source":"Add the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832) to your project and configure your project to use the [!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Use the Entity Data Model Wizard<ept id=\"p1\">](http://msdn.microsoft.com/en-us/dadb058a-c5d9-4c5c-8b01-28044112231d)</ept>.","pos":[952,1091],"source":" For more information, see [How to: Use the Entity Data Model Wizard](http://msdn.microsoft.com/en-us/dadb058a-c5d9-4c5c-8b01-28044112231d)."},{"pos":[1101,1205],"content":"In the code page for your application, add the following <ph id=\"ph1\">`using`</ph> statements (<ph id=\"ph2\">`Imports`</ph> in Visual Basic):","source":"In the code page for your application, add the following `using` statements (`Imports` in Visual Basic):"},{"pos":[1216,1545],"content":"[!code-csharp[DP EntityServices Concepts#Namespaces](../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts/cs/source.cs#namespaces)]\n [!code-vb[DP EntityServices Concepts#Namespaces](../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp entityservices concepts/vb/source.vb#namespaces)]","leadings":["","    "],"nodes":[{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DP EntityServices Concepts#Namespaces<ept id=\"p2\">](../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts/cs/source.cs#namespaces)</ept><ept id=\"p1\">]</ept>","pos":[0,161],"source":"[!code-csharp[DP EntityServices Concepts#Namespaces](../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts/cs/source.cs#namespaces)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DP EntityServices Concepts#Namespaces<ept id=\"p2\">](../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp entityservices concepts/vb/source.vb#namespaces)</ept><ept id=\"p1\">]</ept>","pos":[163,325],"source":"[!code-vb[DP EntityServices Concepts#Namespaces](../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp entityservices concepts/vb/source.vb#namespaces)]"}]},{"content":"Double click the .edmx file to display the model in the <bpt id=\"p1\">[</bpt>Model Browser window<ept id=\"p1\">](http://msdn.microsoft.com/en-us/94e836e8-a5ea-47ff-aa3e-599d8a02ebfd)</ept> of the Entity Designer.","pos":[1555,1727],"source":"Double click the .edmx file to display the model in the [Model Browser window](http://msdn.microsoft.com/en-us/94e836e8-a5ea-47ff-aa3e-599d8a02ebfd) of the Entity Designer."},{"content":"On the Entity Designer surface, select the <ph id=\"ph1\">`Email`</ph> and <ph id=\"ph2\">`Phone`</ph> properties of the <ph id=\"ph3\">`Contact`</ph> entity type, then right-click and select <bpt id=\"p1\">**</bpt>Refactor into New Complex Type<ept id=\"p1\">**</ept>.","pos":[1728,1895],"source":" On the Entity Designer surface, select the `Email` and `Phone` properties of the `Contact` entity type, then right-click and select **Refactor into New Complex Type**."},{"content":"A new complex type with the selected <ph id=\"ph1\">`Email`</ph> and <ph id=\"ph2\">`Phone`</ph> properties is added to the <bpt id=\"p1\">**</bpt>Model Browser<ept id=\"p1\">**</ept>.","pos":[1905,2007],"source":"A new complex type with the selected `Email` and `Phone` properties is added to the **Model Browser**."},{"content":"The complex type is given a default name: rename the type to <ph id=\"ph1\">`EmailPhone`</ph> in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window.","pos":[2008,2111],"source":" The complex type is given a default name: rename the type to `EmailPhone` in the **Properties** window."},{"content":"Also, a new <ph id=\"ph1\">`ComplexProperty`</ph> property is added to the <ph id=\"ph2\">`Contact`</ph> entity type.","pos":[2112,2189],"source":" Also, a new `ComplexProperty` property is added to the `Contact` entity type."},{"content":"Rename the property to <ph id=\"ph1\">`EmailPhoneComplexType.`</ph>","pos":[2190,2237],"source":" Rename the property to `EmailPhoneComplexType.`"},{"pos":[2248,2604],"content":"For information about creating and modifying complex types by using the Entity Data Model Wizard, see <bpt id=\"p1\">[</bpt>How to: Refactor Existing Properties into a Complex Type Property<ept id=\"p1\">](http://msdn.microsoft.com/en-us/5b2eb3b3-693d-42cb-b43a-405812d677eb)</ept> and <bpt id=\"p2\">[</bpt>How to: Create and Modify Complex Types<ept id=\"p2\">](http://msdn.microsoft.com/en-us/afb8e206-0ffe-4597-b6d4-6ab566897e1d)</ept>.","source":"For information about creating and modifying complex types by using the Entity Data Model Wizard, see [How to: Refactor Existing Properties into a Complex Type Property](http://msdn.microsoft.com/en-us/5b2eb3b3-693d-42cb-b43a-405812d677eb) and [How to: Create and Modify Complex Types](http://msdn.microsoft.com/en-us/afb8e206-0ffe-4597-b6d4-6ab566897e1d)."},{"pos":[2613,2620],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2624,2835],"content":"The following example executes a query that returns a collection of <ph id=\"ph1\">`Contact`</ph> objects and displays two properties of the <ph id=\"ph2\">`Contact`</ph> objects: <ph id=\"ph3\">`ContactID`</ph> and the values of the <ph id=\"ph4\">`EmailPhoneComplexType`</ph> complex type.","source":"The following example executes a query that returns a collection of `Contact` objects and displays two properties of the `Contact` objects: `ContactID` and the values of the `EmailPhoneComplexType` complex type."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DP EntityServices Concepts#ComplexTypeWithEntityCommand<ept id=\"p2\">](../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts/cs/source.cs#complextypewithentitycommand)</ept><ept id=\"p1\">]</ept>","pos":[2842,3039],"source":"[!code-csharp[DP EntityServices Concepts#ComplexTypeWithEntityCommand](../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts/cs/source.cs#complextypewithentitycommand)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DP EntityServices Concepts#ComplexTypeWithEntityCommand<ept id=\"p2\">](../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp entityservices concepts/vb/source.vb#complextypewithentitycommand)</ept><ept id=\"p1\">]</ept>","pos":[3041,3239],"source":"[!code-vb[DP EntityServices Concepts#ComplexTypeWithEntityCommand](../../../../../samples/snippets/visualbasic/VS_Snippets_Data/dp entityservices concepts/vb/source.vb#complextypewithentitycommand)]"}]}