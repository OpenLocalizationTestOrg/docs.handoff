{"content":"---\ntitle: \"How to: Read Object Data from an XML File (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 1e1423bf-74a4-4dde-a3bb-ae1bfc0a68ed\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Read Object Data from an XML File (Visual Basic)\nThis example reads object data that was previously written to an XML file using the <xref:System.Xml.Serialization.XmlSerializer> class.  \n  \n## Example  \n  \n```vb  \nPublic Class Book  \n    Public Title As String  \nEnd Class  \n  \nPublic Sub ReadXML()  \n    Dim reader As New System.Xml.Serialization.XmlSerializer(GetType(Book))  \n    Dim file As New System.IO.StreamReader(  \n        \"c:\\temp\\SerializationOverview.xml\")  \n    Dim overview As Book  \n    overview = CType(reader.Deserialize(file), Book)  \n    Console.WriteLine(overview.Title)  \nEnd Sub  \n```  \n  \n## Compiling the Code  \n Replace the file name \"c:\\temp\\SerializationOverview.xml\" with the name of the file containing the serialized data. For more information about serializing data, see [How to: Write Object Data to an XML File (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md).  \n  \n The class must have a public constructor without parameters.  \n  \n Only public properties and fields are deserialized.  \n  \n## Robust Programming  \n The following conditions may cause an exception:  \n  \n-   The class being serialized does not have a public, parameterless constructor.  \n  \n-   The data in the file does not represent data from the class to be deserialized.  \n  \n-   The file does not exist (<xref:System.IO.IOException>).  \n  \n## .NET Framework Security  \n Always verify inputs, and never deserialize data from an untrusted source. The re-created object runs on a local computer with the permissions of the code that deserialized it. Verify all inputs before using the data in your application.  \n  \n## See Also  \n <xref:System.IO.StreamWriter>   \n [How to: Write Object Data to an XML File (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md)   \n [Serialization (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/index.md)   \n [Visual Basic Programming Guide](../../../../visual-basic/programming-guide/index.md)","nodes":[{"pos":[4,459],"embed":true,"restype":"x-metadata","content":"title: \"How to: Read Object Data from an XML File (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 1e1423bf-74a4-4dde-a3bb-ae1bfc0a68ed\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","nodes":[{"content":"How to: Read Object Data from an XML File (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,73],"content":"How to: Read Object Data from an XML File (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Read Object Data from an XML File (Visual Basic) | Microsoft Docs","pos":[0,73]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[466,522],"content":"How to: Read Object Data from an XML File (Visual Basic)","linkify":"How to: Read Object Data from an XML File (Visual Basic)","nodes":[{"content":"How to: Read Object Data from an XML File (Visual Basic)","pos":[0,56]}]},{"pos":[523,659],"content":"This example reads object data that was previously written to an XML file using the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class.","source":"This example reads object data that was previously written to an XML file using the <xref:System.Xml.Serialization.XmlSerializer> class."},{"pos":[668,675],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1091,1109],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"Replace the file name \"c:\\temp\\SerializationOverview.xml\" with the name of the file containing the serialized data.","pos":[1113,1228]},{"content":"For more information about serializing data, see <bpt id=\"p1\">[</bpt>How to: Write Object Data to an XML File (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md)</ept>.","pos":[1229,1446],"source":" For more information about serializing data, see [How to: Write Object Data to an XML File (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md)."},{"content":"The class must have a public constructor without parameters.","pos":[1453,1513]},{"content":"Only public properties and fields are deserialized.","pos":[1520,1571]},{"pos":[1580,1598],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"The following conditions may cause an exception:","pos":[1602,1650]},{"content":"The class being serialized does not have a public, parameterless constructor.","pos":[1660,1737]},{"content":"The data in the file does not represent data from the class to be deserialized.","pos":[1747,1826]},{"pos":[1836,1891],"content":"The file does not exist (<ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>).","source":"The file does not exist (<xref:System.IO.IOException>)."},{"pos":[1900,1923],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"content":"Always verify inputs, and never deserialize data from an untrusted source.","pos":[1927,2001]},{"content":"The re-created object runs on a local computer with the permissions of the code that deserialized it.","pos":[2002,2103]},{"content":"Verify all inputs before using the data in your application.","pos":[2104,2164]},{"pos":[2173,2181],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>How to: Write Object Data to an XML File (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md)</ept><ph id=\"ph1\"> </ph>","pos":[2219,2387],"source":"[How to: Write Object Data to an XML File (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md) "},{"content":"<bpt id=\"p1\">[</bpt>Serialization (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/serialization/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2391,2498],"source":"[Serialization (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Visual Basic Programming Guide<ept id=\"p1\">](../../../../visual-basic/programming-guide/index.md)</ept>","pos":[2502,2587],"source":"[Visual Basic Programming Guide](../../../../visual-basic/programming-guide/index.md)"}]}