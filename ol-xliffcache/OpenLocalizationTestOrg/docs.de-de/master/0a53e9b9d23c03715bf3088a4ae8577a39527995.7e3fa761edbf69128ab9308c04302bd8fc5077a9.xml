{"content":"---\ntitle: \"How to: Read Image Metadata\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"metadata [Windows Forms], property item\"\n  - \"metadata [Windows Forms], reading image\"\nms.assetid: 72ec0b31-0be7-444a-9575-1dbcb864e0be\n---\n# How to: Read Image Metadata\nSome image files contain metadata that you can read to determine features of the image. For example, a digital photograph might contain metadata that you can read to determine the make and model of the camera used to capture the image. With [!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)], you can read existing metadata, and you can also write new metadata to image files.  \n  \n [!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)] stores an individual piece of metadata in a <xref:System.Drawing.Imaging.PropertyItem> object. You can read the <xref:System.Drawing.Image.PropertyItems%2A> property of an <xref:System.Drawing.Image> object to retrieve all the metadata from a file. The <xref:System.Drawing.Image.PropertyItems%2A> property returns an array of <xref:System.Drawing.Imaging.PropertyItem> objects.  \n  \n A <xref:System.Drawing.Imaging.PropertyItem> object has the following four properties: `Id`, `Value`, `Len`, and `Type`.  \n  \n## Id  \n A tag that identifies the metadata item. Some values that can be assigned to <xref:System.Drawing.Imaging.PropertyItem.Id%2A> are shown in the following table.  \n  \n|Hexadecimal value|Description|  \n|-----------------------|-----------------|  \n|0x0320<br /><br /> 0x010F<br /><br /> 0x0110<br /><br /> 0x9003<br /><br /> 0x829A<br /><br /> 0x5090<br /><br /> 0x5091|Image title<br /><br /> Equipment manufacturer<br /><br /> Equipment model<br /><br /> ExifDTOriginal<br /><br /> Exif exposure time<br /><br /> Luminance table<br /><br /> Chrominance table|  \n  \n## Value  \n An array of values. The format of the values is determined by the <xref:System.Drawing.Imaging.PropertyItem.Type%2A> property.  \n  \n## Len  \n The length (in bytes) of the array of values pointed to by the <xref:System.Drawing.Imaging.PropertyItem.Value%2A> property.  \n  \n## Type  \n The data type of the values in the array pointed to by the `Value` property. The formats indicated by the `Type` property values are shown in the following table  \n  \n|Numeric value|Description|  \n|-------------------|-----------------|  \n|1|A `Byte`|  \n|2|An array of `Byte` objects encoded as ASCII|  \n|3|A 16-bit integer|  \n|4|A 32-bit integer|  \n|5|An array of two `Byte` objects that represent a rational number|  \n|6|Not used|  \n|7|Undefined|  \n|8|Not used|  \n|9|`SLong`|  \n|10|`SRational`|  \n  \n## Example  \n  \n### Description  \n The following code example reads and displays the seven pieces of metadata in the file `FakePhoto.jpg`. The second (index 1) property item in the list has <xref:System.Drawing.Imaging.PropertyItem.Id%2A> 0x010F (equipment manufacturer) and <xref:System.Drawing.Imaging.PropertyItem.Type%2A> 2 (ASCII-encoded byte array). The code example displays the value of that property item.  \n  \n The code produces output similar to the following:  \n  \n `Property Item 0`  \n  \n `id: 0x320`  \n  \n `type: 2`  \n  \n `length: 16 bytes`  \n  \n `Property Item 1`  \n  \n `id: 0x10f`  \n  \n `type: 2`  \n  \n `length: 17 bytes`  \n  \n `Property Item 2`  \n  \n `id: 0x110`  \n  \n `type: 2`  \n  \n `length: 7 bytes`  \n  \n `Property Item 3`  \n  \n `id: 0x9003`  \n  \n `type: 2`  \n  \n `length: 20 bytes`  \n  \n `Property Item 4`  \n  \n `id: 0x829a`  \n  \n `type: 5`  \n  \n `length: 8 bytes`  \n  \n `Property Item 5`  \n  \n `id: 0x5090`  \n  \n `type: 3`  \n  \n `length: 128 bytes`  \n  \n `Property Item 6`  \n  \n `id: 0x5091`  \n  \n `type: 3`  \n  \n `length: 128 bytes`  \n  \n `The equipment make is Northwind Camera.`  \n  \n### Code  \n [!code-csharp[System.Drawing.WorkingWithImages#51](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.WorkingWithImages/CS/Class1.cs#51)]\n [!code-vb[System.Drawing.WorkingWithImages#51](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.WorkingWithImages/VB/Class1.vb#51)]  \n  \n## Compiling the Code  \n The preceding example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> `e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and paste this code into the paint event handler. You must replace `FakePhoto.jpg` with an image name and path valid on your system and import the `System.Drawing.Imaging` namespace.  \n  \n## See also\n\n- [Images, Bitmaps, and Metafiles](images-bitmaps-and-metafiles.md)\n- [Working with Images, Bitmaps, Icons, and Metafiles](working-with-images-bitmaps-icons-and-metafiles.md)\n","nodes":[{"pos":[4,259],"embed":true,"restype":"x-metadata","content":"title: \"How to: Read Image Metadata\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"metadata [Windows Forms], property item\"\n  - \"metadata [Windows Forms], reading image\"\nms.assetid: 72ec0b31-0be7-444a-9575-1dbcb864e0be","nodes":[{"content":"How to: Read Image Metadata","nodes":[{"pos":[0,27],"content":"How to: Read Image Metadata","nodes":[{"content":"How to: Read Image Metadata","pos":[0,27]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[266,293],"content":"How to: Read Image Metadata","linkify":"How to: Read Image Metadata","nodes":[{"content":"How to: Read Image Metadata","pos":[0,27]}]},{"content":"Some image files contain metadata that you can read to determine features of the image.","pos":[294,381]},{"content":"For example, a digital photograph might contain metadata that you can read to determine the make and model of the camera used to capture the image.","pos":[382,529]},{"content":"With <ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)]</ph>, you can read existing metadata, and you can also write new metadata to image files.","pos":[530,687],"source":" With [!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)], you can read existing metadata, and you can also write new metadata to image files."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)]</ph> stores an individual piece of metadata in a <ph id=\"ph2\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> object.","pos":[694,856],"source":"[!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)] stores an individual piece of metadata in a <xref:System.Drawing.Imaging.PropertyItem> object."},{"content":"You can read the <ph id=\"ph1\">&lt;xref:System.Drawing.Image.PropertyItems%2A&gt;</ph> property of an <ph id=\"ph2\">&lt;xref:System.Drawing.Image&gt;</ph> object to retrieve all the metadata from a file.","pos":[857,1010],"source":" You can read the <xref:System.Drawing.Image.PropertyItems%2A> property of an <xref:System.Drawing.Image> object to retrieve all the metadata from a file."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Image.PropertyItems%2A&gt;</ph> property returns an array of <ph id=\"ph2\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> objects.","pos":[1011,1140],"source":" The <xref:System.Drawing.Image.PropertyItems%2A> property returns an array of <xref:System.Drawing.Imaging.PropertyItem> objects."},{"pos":[1147,1267],"content":"A <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem&gt;</ph> object has the following four properties: <ph id=\"ph2\">`Id`</ph>, <ph id=\"ph3\">`Value`</ph>, <ph id=\"ph4\">`Len`</ph>, and <ph id=\"ph5\">`Type`</ph>.","source":"A <xref:System.Drawing.Imaging.PropertyItem> object has the following four properties: `Id`, `Value`, `Len`, and `Type`."},{"pos":[1276,1278],"content":"Id","linkify":"Id","nodes":[{"content":"Id","pos":[0,2]}]},{"content":"A tag that identifies the metadata item.","pos":[1282,1322]},{"content":"Some values that can be assigned to <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem.Id%2A&gt;</ph> are shown in the following table.","pos":[1323,1441],"source":" Some values that can be assigned to <xref:System.Drawing.Imaging.PropertyItem.Id%2A> are shown in the following table."},{"content":"Hexadecimal value","pos":[1448,1465]},{"content":"Description","pos":[1466,1477]},{"content":"0x0320","pos":[1528,1534]},{"content":"0x010F","pos":[1547,1553]},{"content":"0x0110","pos":[1566,1572]},{"content":"0x9003","pos":[1585,1591]},{"content":"0x829A","pos":[1604,1610]},{"content":"0x5090","pos":[1623,1629]},{"content":"0x5091","pos":[1642,1648]},{"content":"Image title","pos":[1649,1660]},{"content":"Equipment manufacturer","pos":[1673,1695]},{"content":"Equipment model","pos":[1708,1723]},{"content":"ExifDTOriginal","pos":[1736,1750]},{"content":"Exif exposure time","pos":[1763,1781]},{"content":"Luminance table","pos":[1794,1809]},{"content":"Chrominance table","pos":[1822,1839]},{"pos":[1849,1854],"content":"Value","linkify":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"content":"An array of values.","pos":[1858,1877]},{"content":"The format of the values is determined by the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem.Type%2A&gt;</ph> property.","pos":[1878,1984],"source":" The format of the values is determined by the <xref:System.Drawing.Imaging.PropertyItem.Type%2A> property."},{"pos":[1993,1996],"content":"Len","linkify":"Len","nodes":[{"content":"Len","pos":[0,3]}]},{"pos":[2000,2124],"content":"The length (in bytes) of the array of values pointed to by the <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem.Value%2A&gt;</ph> property.","source":"The length (in bytes) of the array of values pointed to by the <xref:System.Drawing.Imaging.PropertyItem.Value%2A> property."},{"pos":[2133,2137],"content":"Type","linkify":"Type","nodes":[{"content":"Type","pos":[0,4]}]},{"content":"The data type of the values in the array pointed to by the <ph id=\"ph1\">`Value`</ph> property.","pos":[2141,2217],"source":"The data type of the values in the array pointed to by the `Value` property."},{"content":"The formats indicated by the <ph id=\"ph1\">`Type`</ph> property values are shown in the following table","pos":[2218,2302],"source":" The formats indicated by the `Type` property values are shown in the following table"},{"content":"Numeric value","pos":[2309,2322]},{"content":"Description","pos":[2323,2334]},{"content":"1","pos":[2381,2382]},{"pos":[2383,2391],"content":"A <ph id=\"ph1\">`Byte`</ph>","source":"A `Byte`"},{"content":"2","pos":[2396,2397]},{"pos":[2398,2441],"content":"An array of <ph id=\"ph1\">`Byte`</ph> objects encoded as ASCII","source":"An array of `Byte` objects encoded as ASCII"},{"content":"3","pos":[2446,2447]},{"content":"A 16-bit integer","pos":[2448,2464]},{"content":"4","pos":[2469,2470]},{"content":"A 32-bit integer","pos":[2471,2487]},{"content":"5","pos":[2492,2493]},{"pos":[2494,2557],"content":"An array of two <ph id=\"ph1\">`Byte`</ph> objects that represent a rational number","source":"An array of two `Byte` objects that represent a rational number"},{"content":"6","pos":[2562,2563]},{"content":"Not used","pos":[2564,2572]},{"content":"7","pos":[2577,2578]},{"content":"Undefined","pos":[2579,2588]},{"content":"8","pos":[2593,2594]},{"content":"Not used","pos":[2595,2603]},{"content":"9","pos":[2608,2609]},{"content":"10","pos":[2622,2624]},{"pos":[2646,2653],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2663,2674],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"content":"The following code example reads and displays the seven pieces of metadata in the file <ph id=\"ph1\">`FakePhoto.jpg`</ph>.","pos":[2678,2781],"source":"The following code example reads and displays the seven pieces of metadata in the file `FakePhoto.jpg`."},{"content":"The second (index 1) property item in the list has <ph id=\"ph1\">&lt;xref:System.Drawing.Imaging.PropertyItem.Id%2A&gt;</ph> 0x010F (equipment manufacturer) and <ph id=\"ph2\">&lt;xref:System.Drawing.Imaging.PropertyItem.Type%2A&gt;</ph> 2 (ASCII-encoded byte array).","pos":[2782,2998],"source":" The second (index 1) property item in the list has <xref:System.Drawing.Imaging.PropertyItem.Id%2A> 0x010F (equipment manufacturer) and <xref:System.Drawing.Imaging.PropertyItem.Type%2A> 2 (ASCII-encoded byte array)."},{"content":"The code example displays the value of that property item.","pos":[2999,3057]},{"content":"The code produces output similar to the following:","pos":[3064,3114]},{"pos":[3757,3761],"content":"Code","linkify":"Code","nodes":[{"content":"Code","pos":[0,4]}]},{"pos":[4073,4091],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"The preceding example is designed for use with Windows Forms, and it requires <ph id=\"ph1\">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id=\"ph2\">`e`</ph>, which is a parameter of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.","pos":[4095,4305],"source":"The preceding example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> `e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler."},{"content":"Handle the form's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and paste this code into the paint event handler.","pos":[4306,4421],"source":" Handle the form's <xref:System.Windows.Forms.Control.Paint> event and paste this code into the paint event handler."},{"content":"You must replace <ph id=\"ph1\">`FakePhoto.jpg`</ph> with an image name and path valid on your system and import the <ph id=\"ph2\">`System.Drawing.Imaging`</ph> namespace.","pos":[4422,4554],"source":" You must replace `FakePhoto.jpg` with an image name and path valid on your system and import the `System.Drawing.Imaging` namespace."},{"pos":[4563,4571],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4575,4640],"content":"<bpt id=\"p1\">[</bpt>Images, Bitmaps, and Metafiles<ept id=\"p1\">](images-bitmaps-and-metafiles.md)</ept>","source":"[Images, Bitmaps, and Metafiles](images-bitmaps-and-metafiles.md)"},{"pos":[4643,4747],"content":"<bpt id=\"p1\">[</bpt>Working with Images, Bitmaps, Icons, and Metafiles<ept id=\"p1\">](working-with-images-bitmaps-icons-and-metafiles.md)</ept>","source":"[Working with Images, Bitmaps, Icons, and Metafiles](working-with-images-bitmaps-icons-and-metafiles.md)"}]}