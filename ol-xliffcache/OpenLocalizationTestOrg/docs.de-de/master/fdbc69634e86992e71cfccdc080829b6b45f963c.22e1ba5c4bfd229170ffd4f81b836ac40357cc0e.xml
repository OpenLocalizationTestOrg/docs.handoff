{"content":"---\ntitle: \"x:ClassModifier Directive\"\nms.date: \"03/30/2017\"\nf1_keywords: \n  - \"xClassModifier\"\n  - \"x:ClassModifier\"\n  - \"ClassModifier\"\nhelpviewer_keywords: \n  - \"XAML [XAML Services], x:ClassModifier attribute\"\n  - \"x:ClassModifier attribute [XAML Services]\"\n  - \"ClassModifier attribute in XAML [XAML Services]\"\nms.assetid: ef30ab78-d334-4668-917d-c9f66c3b6aea\n---\n# x:ClassModifier Directive\nModifies XAML compilation behavior when `x:Class` is also provided. Specifically, instead of creating a partial `class` that has a `Public` access level (the default), the provided `x:Class` is created with a `NotPublic` access level. This behavior affects the access level for the class in the generated assemblies.  \n  \n## XAML Attribute Usage  \n  \n```  \n<object x:Class=\"namespace.classname\" x:ClassModifier=\"NotPublic\">  \n   ...  \n</object>  \n```  \n  \n## XAML Values  \n  \n|||  \n|-|-|  \n|*NotPublic*|The exact string to pass to specify <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> versus <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType> varies, depending on the code-behind programming language that you use. See Remarks.|  \n  \n## Dependencies  \n [x:Class](x-class-directive.md) must also be provided on the same element, and that element must be the root element in a page. For more information, see [\\[MS-XAML\\] Section 4.3.1.8](https://go.microsoft.com/fwlink/?LinkId=114525).  \n  \n## Remarks  \n The value of `x:ClassModifier` in .NET Framework XAML Services usage varies by programming language. The string to use depends on how each language implements its <xref:System.CodeDom.Compiler.CodeDomProvider> and the type converters it returns to define the meanings for <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> and <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType>, and whether that language is case sensitive.  \n  \n-   For C#, the string to pass to designate <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType> is `internal`.  \n  \n-   For Microsoft Visual Basic .NET, the string to pass to designate <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType> is `Friend`.  \n  \n-   For [!INCLUDE[TLA2#tla_cppcli](../../../includes/tla2sharptla-cppcli-md.md)], no targets exist that support compiling XAML; therefore, the value to pass is unspecified.  \n  \n You can also specify <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> (`public` in C#, `Public` in Visual Basic); however, specifying <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> is infrequently done because <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> is already the default behavior.  \n  \n Other values with equivalent user code access-level restrictions, such as `private` in C#, are not relevant for `x:ClassModifier` because nested class references are not supported in XAML, and therefore, the <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType> modifier has the same effect.  \n  \n## Security Notes  \n The access level as declared in `x:ClassModifier` is still subject to interpretation by particular frameworks and their capabilities. WPF includes capabilities to load and instantiate types where `x:ClassModifier` is `internal`, if that class is referenced from a WPF resource through a pack URI reference. As a consequence of this case and potentially others like it implemented by other frameworks, do not rely exclusively on `x:ClassModifier` to block all possible instantiation attempts.  \n  \n## See also\n\n- [x:Class Directive](x-class-directive.md)\n- [Code-Behind and XAML in WPF](../wpf/advanced/code-behind-and-xaml-in-wpf.md)\n- [x:FieldModifier Directive](x-fieldmodifier-directive.md)\n- [Security (WPF)](../wpf/security-wpf.md)\n- [Types Migrated from WPF to System.Xaml](types-migrated-from-wpf-to-system-xaml.md)\n","nodes":[{"pos":[4,364],"embed":true,"restype":"x-metadata","content":"title: \"x:ClassModifier Directive\"\nms.date: \"03/30/2017\"\nf1_keywords: \n  - \"xClassModifier\"\n  - \"x:ClassModifier\"\n  - \"ClassModifier\"\nhelpviewer_keywords: \n  - \"XAML [XAML Services], x:ClassModifier attribute\"\n  - \"x:ClassModifier attribute [XAML Services]\"\n  - \"ClassModifier attribute in XAML [XAML Services]\"\nms.assetid: ef30ab78-d334-4668-917d-c9f66c3b6aea","nodes":[{"content":"x:ClassModifier Directive","nodes":[{"pos":[0,25],"content":"x:ClassModifier Directive","nodes":[{"content":"x:ClassModifier Directive","pos":[0,25]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[371,396],"content":"x:ClassModifier Directive","linkify":"x:ClassModifier Directive","nodes":[{"content":"x:ClassModifier Directive","pos":[0,25]}]},{"content":"Modifies XAML compilation behavior when <ph id=\"ph1\">`x:Class`</ph> is also provided.","pos":[397,464],"source":"Modifies XAML compilation behavior when `x:Class` is also provided."},{"content":"Specifically, instead of creating a partial <ph id=\"ph1\">`class`</ph> that has a <ph id=\"ph2\">`Public`</ph> access level (the default), the provided <ph id=\"ph3\">`x:Class`</ph> is created with a <ph id=\"ph4\">`NotPublic`</ph> access level.","pos":[465,631],"source":" Specifically, instead of creating a partial `class` that has a `Public` access level (the default), the provided `x:Class` is created with a `NotPublic` access level."},{"content":"This behavior affects the access level for the class in the generated assemblies.","pos":[632,713]},{"pos":[722,742],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[856,867],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[888,899],"content":"<bpt id=\"p1\">*</bpt>NotPublic<ept id=\"p1\">*</ept>","source":"*NotPublic*"},{"content":"The exact string to pass to specify <ph id=\"ph1\">&lt;xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType&gt;</ph> versus <ph id=\"ph2\">&lt;xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType&gt;</ph> varies, depending on the code-behind programming language that you use.","pos":[900,1169],"source":"The exact string to pass to specify <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> versus <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType> varies, depending on the code-behind programming language that you use."},{"content":"See Remarks.","pos":[1170,1182]},{"pos":[1192,1204],"content":"Dependencies","linkify":"Dependencies","nodes":[{"content":"Dependencies","pos":[0,12]}]},{"content":"<bpt id=\"p1\">[</bpt>x:Class<ept id=\"p1\">](x-class-directive.md)</ept> must also be provided on the same element, and that element must be the root element in a page.","pos":[1208,1335],"source":"[x:Class](x-class-directive.md) must also be provided on the same element, and that element must be the root element in a page."},{"content":"For more information, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\[</ph>MS-XAML<ph id=\"ph2\">\\]</ph> Section 4.3.1.8<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=114525)</ept>.","pos":[1336,1440],"source":" For more information, see [\\[MS-XAML\\] Section 4.3.1.8](https://go.microsoft.com/fwlink/?LinkId=114525)."},{"pos":[1449,1456],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The value of <ph id=\"ph1\">`x:ClassModifier`</ph> in .NET Framework XAML Services usage varies by programming language.","pos":[1460,1560],"source":"The value of `x:ClassModifier` in .NET Framework XAML Services usage varies by programming language."},{"content":"The string to use depends on how each language implements its <ph id=\"ph1\">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> and the type converters it returns to define the meanings for <ph id=\"ph2\">&lt;xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType&gt;</ph>, and whether that language is case sensitive.","pos":[1561,1936],"source":" The string to use depends on how each language implements its <xref:System.CodeDom.Compiler.CodeDomProvider> and the type converters it returns to define the meanings for <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> and <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType>, and whether that language is case sensitive."},{"pos":[1946,2079],"content":"For C#, the string to pass to designate <ph id=\"ph1\">&lt;xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType&gt;</ph> is <ph id=\"ph2\">`internal`</ph>.","source":"For C#, the string to pass to designate <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType> is `internal`."},{"pos":[2089,2245],"content":"For Microsoft Visual Basic .NET, the string to pass to designate <ph id=\"ph1\">&lt;xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType&gt;</ph> is <ph id=\"ph2\">`Friend`</ph>.","source":"For Microsoft Visual Basic .NET, the string to pass to designate <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType> is `Friend`."},{"pos":[2255,2423],"content":"For <ph id=\"ph1\">[!INCLUDE[TLA2#tla_cppcli](../../../includes/tla2sharptla-cppcli-md.md)]</ph>, no targets exist that support compiling XAML; therefore, the value to pass is unspecified.","source":"For [!INCLUDE[TLA2#tla_cppcli](../../../includes/tla2sharptla-cppcli-md.md)], no targets exist that support compiling XAML; therefore, the value to pass is unspecified."},{"pos":[2430,2804],"content":"You can also specify <ph id=\"ph1\">&lt;xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType&gt;</ph> (<ph id=\"ph2\">`public`</ph> in C#, <ph id=\"ph3\">`Public`</ph> in Visual Basic); however, specifying <ph id=\"ph4\">&lt;xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType&gt;</ph> is infrequently done because <ph id=\"ph5\">&lt;xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType&gt;</ph> is already the default behavior.","source":"You can also specify <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> (`public` in C#, `Public` in Visual Basic); however, specifying <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> is infrequently done because <xref:System.Reflection.TypeAttributes.Public?displayProperty=nameWithType> is already the default behavior."},{"pos":[2811,3127],"content":"Other values with equivalent user code access-level restrictions, such as <ph id=\"ph1\">`private`</ph> in C#, are not relevant for <ph id=\"ph2\">`x:ClassModifier`</ph> because nested class references are not supported in XAML, and therefore, the <ph id=\"ph3\">&lt;xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType&gt;</ph> modifier has the same effect.","source":"Other values with equivalent user code access-level restrictions, such as `private` in C#, are not relevant for `x:ClassModifier` because nested class references are not supported in XAML, and therefore, the <xref:System.Reflection.TypeAttributes.NotPublic?displayProperty=nameWithType> modifier has the same effect."},{"pos":[3136,3150],"content":"Security Notes","linkify":"Security Notes","nodes":[{"content":"Security Notes","pos":[0,14]}]},{"content":"The access level as declared in <ph id=\"ph1\">`x:ClassModifier`</ph> is still subject to interpretation by particular frameworks and their capabilities.","pos":[3154,3287],"source":"The access level as declared in `x:ClassModifier` is still subject to interpretation by particular frameworks and their capabilities."},{"content":"WPF includes capabilities to load and instantiate types where <ph id=\"ph1\">`x:ClassModifier`</ph> is <ph id=\"ph2\">`internal`</ph>, if that class is referenced from a WPF resource through a pack URI reference.","pos":[3288,3460],"source":" WPF includes capabilities to load and instantiate types where `x:ClassModifier` is `internal`, if that class is referenced from a WPF resource through a pack URI reference."},{"content":"As a consequence of this case and potentially others like it implemented by other frameworks, do not rely exclusively on <ph id=\"ph1\">`x:ClassModifier`</ph> to block all possible instantiation attempts.","pos":[3461,3645],"source":" As a consequence of this case and potentially others like it implemented by other frameworks, do not rely exclusively on `x:ClassModifier` to block all possible instantiation attempts."},{"pos":[3654,3662],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3666,3707],"content":"<bpt id=\"p1\">[</bpt>x:Class Directive<ept id=\"p1\">](x-class-directive.md)</ept>","source":"[x:Class Directive](x-class-directive.md)"},{"pos":[3710,3787],"content":"<bpt id=\"p1\">[</bpt>Code-Behind and XAML in WPF<ept id=\"p1\">](../wpf/advanced/code-behind-and-xaml-in-wpf.md)</ept>","source":"[Code-Behind and XAML in WPF](../wpf/advanced/code-behind-and-xaml-in-wpf.md)"},{"pos":[3790,3847],"content":"<bpt id=\"p1\">[</bpt>x:FieldModifier Directive<ept id=\"p1\">](x-fieldmodifier-directive.md)</ept>","source":"[x:FieldModifier Directive](x-fieldmodifier-directive.md)"},{"pos":[3850,3890],"content":"<bpt id=\"p1\">[</bpt>Security (WPF)<ept id=\"p1\">](../wpf/security-wpf.md)</ept>","source":"[Security (WPF)](../wpf/security-wpf.md)"},{"pos":[3893,3976],"content":"<bpt id=\"p1\">[</bpt>Types Migrated from WPF to System.Xaml<ept id=\"p1\">](types-migrated-from-wpf-to-system-xaml.md)</ept>","source":"[Types Migrated from WPF to System.Xaml](types-migrated-from-wpf-to-system-xaml.md)"}]}