{"content":"---\ntitle: \"How to: Set a Location-Based Cache Policy for an Application | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"expliciting defining cache behavior\"\n  - \"location-based cache policies\"\n  - \"local cache\"\n  - \"request cache policies\"\n  - \"cache [.NET Framework], location-based policies\"\nms.assetid: 683bb88e-3411-4f46-9686-3411b6ba511c\ncaps.latest.revision: 10\nauthor: \"mcleblanc\"\nms.author: \"markl\"\nmanager: \"markl\"\n---\n# How to: Set a Location-Based Cache Policy for an Application\nLocation-based cache policies allow an application to explicitly define caching behavior based on the location of the requested resource. This topic demonstrates setting the cache policy programmatically. For information on setting the policy for an application using the configuration files, see [\\<requestCaching> Element (Network Settings)](../../../docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md).  \n  \n### To set a location-based cache policy for an application  \n  \n1.  Create a <xref:System.Net.Cache.RequestCachePolicy> or <xref:System.Net.Cache.HttpRequestCachePolicy> object.  \n  \n2.  Set the policy object as the default for the application domain.  \n  \n### To set a policy that takes requested resources from a cache  \n  \n-   Create a policy that takes requested resources from a cache if available, and otherwise, sends requests to the server, by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>. A request can be fulfilled by any cache between the client and server, including remote caches.  \n  \n    ```csharp  \n    public static void UseCacheIfAvailable()  \n    {  \n        HttpRequestCachePolicy policy = new HttpRequestCachePolicy  \n            (HttpRequestCacheLevel.CacheIfAvailable);  \n        HttpWebRequest.DefaultCachePolicy = policy;  \n    }  \n  \n    ```  \n  \n    ```vb  \n    Public Shared Sub UseCacheIfAvailable()  \n        Dim policy As New HttpRequestCachePolicy _  \n             (HttpRequestCacheLevel.CacheIfAvailable)  \n        HttpWebRequest.DefaultCachePolicy = policy  \n    End Sub  \n    ```  \n  \n### To set a policy that prevents any cache from supplying resources  \n  \n-   Create a policy that prevents any cache from supplying requested resources by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>. This policy level removes the resource from the local cache if it is present and indicates to remote caches that they should also remove the resource.  \n  \n    ```csharp  \n    public static void DoNotUseCache()  \n    {  \n    HttpRequestCachePolicy policy = new HttpRequestCachePolicy   \n            (HttpRequestCacheLevel.NoCacheNoStore);  \n        HttpWebRequest.DefaultCachePolicy = policy;  \n    }  \n    ```  \n  \n    ```vb  \n    Public Shared Sub DoNotUseCache()  \n        Dim policy As New HttpRequestCachePolicy _  \n            (HttpRequestCacheLevel.NoCacheNoStore)  \n        HttpWebRequest.DefaultCachePolicy = policy  \n    End Sub  \n    ```  \n  \n### To set a policy that returns requested resources only if they are in the local cache  \n  \n-   Create a policy that returns requested resources only if they are in the local cache by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>. If the requested resource is not in the cache, a <xref:System.Net.WebException> exception is thrown.  \n  \n    ```csharp  \n    public static void OnlyUseCache()  \n    {  \n        HttpRequestCachePolicy policy = new HttpRequestCachePolicy   \n            (HttpRequestCacheLevel.CacheOnly);  \n        HttpWebRequest.DefaultCachePolicy = policy;  \n    }  \n    ```  \n  \n    ```vb  \n    Public Shared Sub OnlyUseCache()  \n        Dim policy As New HttpRequestCachePolicy _  \n            (HttpRequestCacheLevel.CacheOnly)  \n        HttpWebRequest.DefaultCachePolicy = policy  \n    End Sub  \n    ```  \n  \n### To set a policy that prevents the local cache from supplying resources  \n  \n-   Create a policy that prevents the local cache from supplying requested resources by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>. If the requested resource is in an intermediate cache and is successfully revalidated, the intermediate cache can supply the requested resource.  \n  \n    ```csharp  \n    public static void DoNotUseLocalCache()  \n    {  \n     HttpRequestCachePolicy policy = new HttpRequestCachePolicy   \n            (HttpRequestCacheLevel.Refresh);  \n        HttpWebRequest.DefaultCachePolicy = policy;  \n    }  \n    ```  \n  \n    ```vb  \n    Public Shared Sub DoNotUseLocalCache()  \n        Dim policy As New HttpRequestCachePolicy _  \n            (HttpRequestCacheLevel.Refresh)  \n        HttpWebRequest.DefaultCachePolicy = policy  \n    End Sub  \n    ```  \n  \n### To set a policy that prevents any cache from supplying requested resources  \n  \n-   Create a policy that prevents any cache from supplying requested resources by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>. The resource returned by the server can be stored in the cache.  \n  \n    ```csharp  \n    public static void SendToServer()  \n    {  \n    HttpRequestCachePolicy policy = new HttpRequestCachePolicy   \n            (HttpRequestCacheLevel.Reload);  \n        HttpWebRequest.DefaultCachePolicy = policy;  \n    }  \n    ```  \n  \n    ```vb  \n    Public Shared Sub SendToServer()  \n        Dim policy As New HttpRequestCachePolicy _  \n            (HttpRequestCacheLevel.Reload)  \n        HttpWebRequest.DefaultCachePolicy = policy  \n    End Sub  \n    ```  \n  \n### To set a policy that allows any cache to supply requested resources if the resource on the server is not newer than the cached copy  \n  \n-   Create a policy that allows any cache to supply requested resources if the resource on the server is not newer than the cached copy by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>.  \n  \n    ```csharp  \n    public static void CheckServer()  \n    {  \n    HttpRequestCachePolicy policy = new HttpRequestCachePolicy  \n             (HttpRequestCacheLevel.Revalidate);  \n        HttpWebRequest.DefaultCachePolicy = policy;  \n    }  \n    ```  \n  \n    ```vb  \n    Public Shared Sub CheckServer()  \n        Dim policy As New HttpRequestCachePolicy _  \n            (HttpRequestCacheLevel.Revalidate)  \n        HttpWebRequest.DefaultCachePolicy = policy  \n    End Sub  \n    ```  \n  \n## See Also  \n [Cache Management for Network Applications](../../../docs/framework/network-programming/cache-management-for-network-applications.md)   \n [Cache Policy](../../../docs/framework/network-programming/cache-policy.md)   \n [Location-Based Cache Policies](../../../docs/framework/network-programming/location-based-cache-policies.md)   \n [Time-Based Cache Policies](../../../docs/framework/network-programming/time-based-cache-policies.md)   \n [\\<requestCaching> Element (Network Settings)](../../../docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)","nodes":[{"pos":[12,89],"content":"How to: Set a Location-Based Cache Policy for an Application | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Set a Location-Based Cache Policy for an Application | Microsoft Docs","pos":[0,77]}]},{"pos":[614,674],"content":"How to: Set a Location-Based Cache Policy for an Application","linkify":"How to: Set a Location-Based Cache Policy for an Application","nodes":[{"content":"How to: Set a Location-Based Cache Policy for an Application","pos":[0,60]}]},{"content":"Location-based cache policies allow an application to explicitly define caching behavior based on the location of the requested resource.","pos":[675,812]},{"content":"This topic demonstrates setting the cache policy programmatically.","pos":[813,879]},{"content":"For information on setting the policy for an application using the configuration files, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>requestCaching&gt; Element (Network Settings)<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)</ept>.","pos":[880,1122],"source":" For information on setting the policy for an application using the configuration files, see [\\<requestCaching> Element (Network Settings)](../../../docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)."},{"pos":[1132,1187],"content":"To set a location-based cache policy for an application","linkify":"To set a location-based cache policy for an application","nodes":[{"content":"To set a location-based cache policy for an application","pos":[0,55]}]},{"content":"Create a <ph id=\"ph1\">&lt;xref:System.Net.Cache.RequestCachePolicy&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> object.","pos":[1197,1306],"source":"Create a <xref:System.Net.Cache.RequestCachePolicy> or <xref:System.Net.Cache.HttpRequestCachePolicy> object."},{"content":"Set the policy object as the default for the application domain.","pos":[1316,1380]},{"pos":[1390,1449],"content":"To set a policy that takes requested resources from a cache","linkify":"To set a policy that takes requested resources from a cache","nodes":[{"content":"To set a policy that takes requested resources from a cache","pos":[0,59]}]},{"content":"Create a policy that takes requested resources from a cache if available, and otherwise, sends requests to the server, by setting the cache level to <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph>.","pos":[1459,1654],"source":"Create a policy that takes requested resources from a cache if available, and otherwise, sends requests to the server, by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>."},{"content":"A request can be fulfilled by any cache between the client and server, including remote caches.","pos":[1655,1750]},{"pos":[2281,2345],"content":"To set a policy that prevents any cache from supplying resources","linkify":"To set a policy that prevents any cache from supplying resources","nodes":[{"content":"To set a policy that prevents any cache from supplying resources","pos":[0,64]}]},{"content":"Create a policy that prevents any cache from supplying requested resources by setting the cache level to <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph>.","pos":[2355,2506],"source":"Create a policy that prevents any cache from supplying requested resources by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>."},{"content":"This policy level removes the resource from the local cache if it is present and indicates to remote caches that they should also remove the resource.","pos":[2507,2657]},{"pos":[3165,3249],"content":"To set a policy that returns requested resources only if they are in the local cache","linkify":"To set a policy that returns requested resources only if they are in the local cache","nodes":[{"content":"To set a policy that returns requested resources only if they are in the local cache","pos":[0,84]}]},{"content":"Create a policy that returns requested resources only if they are in the local cache by setting the cache level to <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph>.","pos":[3259,3420],"source":"Create a policy that returns requested resources only if they are in the local cache by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>."},{"content":"If the requested resource is not in the cache, a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> exception is thrown.","pos":[3421,3521],"source":" If the requested resource is not in the cache, a <xref:System.Net.WebException> exception is thrown."},{"pos":[4021,4091],"content":"To set a policy that prevents the local cache from supplying resources","linkify":"To set a policy that prevents the local cache from supplying resources","nodes":[{"content":"To set a policy that prevents the local cache from supplying resources","pos":[0,70]}]},{"content":"Create a policy that prevents the local cache from supplying requested resources by setting the cache level to <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph>.","pos":[4101,4258],"source":"Create a policy that prevents the local cache from supplying requested resources by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>."},{"content":"If the requested resource is in an intermediate cache and is successfully revalidated, the intermediate cache can supply the requested resource.","pos":[4259,4403]},{"pos":[4908,4982],"content":"To set a policy that prevents any cache from supplying requested resources","linkify":"To set a policy that prevents any cache from supplying requested resources","nodes":[{"content":"To set a policy that prevents any cache from supplying requested resources","pos":[0,74]}]},{"content":"Create a policy that prevents any cache from supplying requested resources by setting the cache level to <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph>.","pos":[4992,5143],"source":"Create a policy that prevents any cache from supplying requested resources by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>."},{"content":"The resource returned by the server can be stored in the cache.","pos":[5144,5207]},{"pos":[5697,5828],"content":"To set a policy that allows any cache to supply requested resources if the resource on the server is not newer than the cached copy","linkify":"To set a policy that allows any cache to supply requested resources if the resource on the server is not newer than the cached copy","nodes":[{"content":"To set a policy that allows any cache to supply requested resources if the resource on the server is not newer than the cached copy","pos":[0,131]}]},{"content":"Create a policy that allows any cache to supply requested resources if the resource on the server is not newer than the cached copy by setting the cache level to <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph>.","pos":[5838,6046],"source":"Create a policy that allows any cache to supply requested resources if the resource on the server is not newer than the cached copy by setting the cache level to <xref:System.Net.Cache.HttpRequestCacheLevel>."},{"pos":[6541,6549],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Cache Management for Network Applications<ept id=\"p1\">](../../../docs/framework/network-programming/cache-management-for-network-applications.md)</ept><ph id=\"ph1\"> </ph>","pos":[6553,6687],"source":"[Cache Management for Network Applications](../../../docs/framework/network-programming/cache-management-for-network-applications.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Cache Policy<ept id=\"p1\">](../../../docs/framework/network-programming/cache-policy.md)</ept><ph id=\"ph1\"> </ph>","pos":[6690,6767],"source":" [Cache Policy](../../../docs/framework/network-programming/cache-policy.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Location-Based Cache Policies<ept id=\"p1\">](../../../docs/framework/network-programming/location-based-cache-policies.md)</ept><ph id=\"ph1\"> </ph>","pos":[6770,6881],"source":" [Location-Based Cache Policies](../../../docs/framework/network-programming/location-based-cache-policies.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Time-Based Cache Policies<ept id=\"p1\">](../../../docs/framework/network-programming/time-based-cache-policies.md)</ept><ph id=\"ph1\"> </ph>","pos":[6884,6987],"source":" [Time-Based Cache Policies](../../../docs/framework/network-programming/time-based-cache-policies.md) "},{"content":"<bpt id=\"p1\"> [</bpt><ph id=\"ph1\">\\&lt;</ph>requestCaching&gt; Element (Network Settings)<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)</ept>","pos":[6990,7140],"source":" [\\<requestCaching> Element (Network Settings)](../../../docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)"}]}