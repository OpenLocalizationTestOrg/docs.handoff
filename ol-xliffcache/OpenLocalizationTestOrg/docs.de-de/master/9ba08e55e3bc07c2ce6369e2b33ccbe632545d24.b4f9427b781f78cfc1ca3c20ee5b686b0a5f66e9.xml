{"content":"---\ntitle: \"How to: Implement and Call a Custom Extension Method (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"extension methods [C#], implementing and calling\"\nms.assetid: 7dab2a56-cf8e-4a47-a444-fe610a02772a\ncaps.latest.revision: 15\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Implement and Call a Custom Extension Method (C# Programming Guide)\nThis topic shows how to implement your own extension methods for any type in the [.NET Framework Class Library](http://go.microsoft.com/fwlink/?LinkID=217856), or any other .NET type that you want to extend. Client code can use your extension methods by adding a reference to the DLL that contains them, and adding a [using](../../../csharp/language-reference/keywords/using-directive.md) directive that specifies the namespace in which the extension methods are defined.  \n  \n## To define and call the extension method  \n  \n1.  Define a static [class](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md) to contain the extension method.  \n  \n     The class must be visible to client code. For more information about accessibility rules, see [Access Modifiers](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md).  \n  \n2.  Implement the extension method as a static method with at least the same visibility as the containing class.  \n  \n3.  The first parameter of the method specifies the type that the method operates on; it must be preceded with the [this](../../../csharp/language-reference/keywords/this.md) modifier.  \n  \n4.  In the calling code, add a `using` directive to specify the [namespace](../../../csharp/language-reference/keywords/namespace.md) that contains the extension method class.  \n  \n5.  Call the methods as if they were instance methods on the type.  \n  \n     Note that the first parameter is not specified by calling code because it represents the type on which the operator is being applied, and the compiler already knows the type of your object. You only have to provide arguments for parameters 2 through `n`.  \n  \n## Example  \n The following example implements an extension method named `WordCount` in the `CustomExtensions.StringExtension` class. The method operates on the <xref:System.String> class, which is specified as the first method parameter. The `CustomExtensions` namespace is imported into the application namespace, and the method is called inside the `Main` method.  \n  \n [!code-cs[csProgGuideExtensionMethods#1](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/how-to-implement-and-call-a-custom-extension-method_1.cs)]  \n  \n## Compiling the Code  \n To run this code, copy and paste it into a Visual C# console application project that has been created in [!INCLUDE[vs_current_short](../../../csharp/programming-guide/classes-and-structs/includes/vs_current_short_md.md)]. By default, this project targets version 3.5 of the [!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)], and it has a reference to System.Core.dll and a `using` directive for System.Linq. If one or more of these requirements are missing from the project, you can add them manually.   \n  \n## .NET Framework Security  \n Extension methods present no specific security vulnerabilities. They can never be used to impersonate existing methods on a type, because all name collisions are resolved in favor of the instance or static method defined by the type itself. Extension methods cannot access any private data in the extended class.  \n  \n## See Also  \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Extension Methods](../../../csharp/programming-guide/classes-and-structs/extension-methods.md)   \n [LINQ (Language-Integrated Query)](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)   \n [Static Classes and Static Class Members](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)   \n [protected](../../../csharp/language-reference/keywords/protected.md)   \n [internal](../../../csharp/language-reference/keywords/internal.md)   \n [public](../../../csharp/language-reference/keywords/public.md)   \n [this](../../../csharp/language-reference/keywords/this.md)   \n [namespace](../../../csharp/language-reference/keywords/namespace.md)","nodes":[{"pos":[4,602],"nodes":[{"content":"How to: Implement and Call a Custom Extension Method (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,92],"content":"How to: Implement and Call a Custom Extension Method (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"How to: Implement and Call a Custom Extension Method (C# Programming Guide) | Microsoft Docs","pos":[0,92]}]}],"pos":[6,101],"yaml":true}],"content":"title: \"How to: Implement and Call a Custom Extension Method (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"extension methods [C#], implementing and calling\"\nms.assetid: 7dab2a56-cf8e-4a47-a444-fe610a02772a\ncaps.latest.revision: 15\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[609,684],"content":"How to: Implement and Call a Custom Extension Method (C# Programming Guide)","linkify":"How to: Implement and Call a Custom Extension Method (C# Programming Guide)","nodes":[{"content":"How to: Implement and Call a Custom Extension Method (C# Programming Guide)","pos":[0,75]}]},{"content":"This topic shows how to implement your own extension methods for any type in the <bpt id=\"p1\">[</bpt>.NET Framework Class Library<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=217856)</ept>, or any other .NET type that you want to extend.","pos":[685,892],"source":"This topic shows how to implement your own extension methods for any type in the [.NET Framework Class Library](http://go.microsoft.com/fwlink/?LinkID=217856), or any other .NET type that you want to extend."},{"content":"Client code can use your extension methods by adding a reference to the DLL that contains them, and adding a <bpt id=\"p1\">[</bpt>using<ept id=\"p1\">](../../../csharp/language-reference/keywords/using-directive.md)</ept> directive that specifies the namespace in which the extension methods are defined.","pos":[893,1156],"source":" Client code can use your extension methods by adding a reference to the DLL that contains them, and adding a [using](../../../csharp/language-reference/keywords/using-directive.md) directive that specifies the namespace in which the extension methods are defined."},{"pos":[1165,1204],"content":"To define and call the extension method","linkify":"To define and call the extension method","nodes":[{"content":"To define and call the extension method","pos":[0,39]}]},{"pos":[1214,1368],"content":"Define a static <bpt id=\"p1\">[</bpt>class<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)</ept> to contain the extension method.","source":"Define a static [class](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md) to contain the extension method."},{"content":"The class must be visible to client code.","pos":[1379,1420]},{"content":"For more information about accessibility rules, see <bpt id=\"p1\">[</bpt>Access Modifiers<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md)</ept>.","pos":[1421,1567],"source":" For more information about accessibility rules, see [Access Modifiers](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md)."},{"content":"Implement the extension method as a static method with at least the same visibility as the containing class.","pos":[1577,1685]},{"pos":[1695,1875],"content":"The first parameter of the method specifies the type that the method operates on; it must be preceded with the <bpt id=\"p1\">[</bpt>this<ept id=\"p1\">](../../../csharp/language-reference/keywords/this.md)</ept> modifier.","source":"The first parameter of the method specifies the type that the method operates on; it must be preceded with the [this](../../../csharp/language-reference/keywords/this.md) modifier."},{"pos":[1885,2056],"content":"In the calling code, add a <ph id=\"ph1\">`using`</ph> directive to specify the <bpt id=\"p1\">[</bpt>namespace<ept id=\"p1\">](../../../csharp/language-reference/keywords/namespace.md)</ept> that contains the extension method class.","source":"In the calling code, add a `using` directive to specify the [namespace](../../../csharp/language-reference/keywords/namespace.md) that contains the extension method class."},{"content":"Call the methods as if they were instance methods on the type.","pos":[2066,2128]},{"content":"Note that the first parameter is not specified by calling code because it represents the type on which the operator is being applied, and the compiler already knows the type of your object.","pos":[2139,2328]},{"content":"You only have to provide arguments for parameters 2 through <ph id=\"ph1\">`n`</ph>.","pos":[2329,2393],"source":" You only have to provide arguments for parameters 2 through `n`."},{"pos":[2402,2409],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example implements an extension method named <ph id=\"ph1\">`WordCount`</ph> in the <ph id=\"ph2\">`CustomExtensions.StringExtension`</ph> class.","pos":[2413,2532],"source":"The following example implements an extension method named `WordCount` in the `CustomExtensions.StringExtension` class."},{"content":"The method operates on the <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> class, which is specified as the first method parameter.","pos":[2533,2637],"source":" The method operates on the <xref:System.String> class, which is specified as the first method parameter."},{"content":"The <ph id=\"ph1\">`CustomExtensions`</ph> namespace is imported into the application namespace, and the method is called inside the <ph id=\"ph2\">`Main`</ph> method.","pos":[2638,2765],"source":" The `CustomExtensions` namespace is imported into the application namespace, and the method is called inside the `Main` method."},{"pos":[2772,2944],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideExtensionMethods#1<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/how-to-implement-and-call-a-custom-extension-method_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideExtensionMethods#1](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/how-to-implement-and-call-a-custom-extension-method_1.cs)]"},{"pos":[2953,2971],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"To run this code, copy and paste it into a Visual C# console application project that has been created in <ph id=\"ph1\">[!INCLUDE[vs_current_short](../../../csharp/programming-guide/classes-and-structs/includes/vs_current_short_md.md)]</ph>.","pos":[2975,3197],"source":"To run this code, copy and paste it into a Visual C# console application project that has been created in [!INCLUDE[vs_current_short](../../../csharp/programming-guide/classes-and-structs/includes/vs_current_short_md.md)]."},{"content":"By default, this project targets version 3.5 of the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>, and it has a reference to System.Core.dll and a <ph id=\"ph2\">`using`</ph> directive for System.Linq.","pos":[3198,3417],"source":" By default, this project targets version 3.5 of the [!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)], and it has a reference to System.Core.dll and a `using` directive for System.Linq."},{"content":"If one or more of these requirements are missing from the project, you can add them manually.","pos":[3418,3511]},{"pos":[3521,3544],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"content":"Extension methods present no specific security vulnerabilities.","pos":[3548,3611]},{"content":"They can never be used to impersonate existing methods on a type, because all name collisions are resolved in favor of the instance or static method defined by the type itself.","pos":[3612,3788]},{"content":"Extension methods cannot access any private data in the extended class.","pos":[3789,3860]},{"pos":[3869,3877],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3881,3948],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Extension Methods<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/extension-methods.md)</ept><ph id=\"ph1\"> </ph>","pos":[3952,4048],"source":"[Extension Methods](../../../csharp/programming-guide/classes-and-structs/extension-methods.md) "},{"content":"<bpt id=\"p1\">[</bpt>LINQ (Language-Integrated Query)<ept id=\"p1\">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept><ph id=\"ph1\"> </ph>","pos":[4052,4159],"source":"[LINQ (Language-Integrated Query)](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d) "},{"content":"<bpt id=\"p1\">[</bpt>Static Classes and Static Class Members<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md)</ept><ph id=\"ph1\"> </ph>","pos":[4163,4303],"source":"[Static Classes and Static Class Members](../../../csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members.md) "},{"content":"<bpt id=\"p1\">[</bpt>protected<ept id=\"p1\">](../../../csharp/language-reference/keywords/protected.md)</ept><ph id=\"ph1\"> </ph>","pos":[4307,4377],"source":"[protected](../../../csharp/language-reference/keywords/protected.md) "},{"content":"<bpt id=\"p1\">[</bpt>internal<ept id=\"p1\">](../../../csharp/language-reference/keywords/internal.md)</ept><ph id=\"ph1\"> </ph>","pos":[4381,4449],"source":"[internal](../../../csharp/language-reference/keywords/internal.md) "},{"content":"<bpt id=\"p1\">[</bpt>public<ept id=\"p1\">](../../../csharp/language-reference/keywords/public.md)</ept><ph id=\"ph1\"> </ph>","pos":[4453,4517],"source":"[public](../../../csharp/language-reference/keywords/public.md) "},{"content":"<bpt id=\"p1\">[</bpt>this<ept id=\"p1\">](../../../csharp/language-reference/keywords/this.md)</ept><ph id=\"ph1\"> </ph>","pos":[4521,4581],"source":"[this](../../../csharp/language-reference/keywords/this.md) "},{"content":"<bpt id=\"p1\">[</bpt>namespace<ept id=\"p1\">](../../../csharp/language-reference/keywords/namespace.md)</ept>","pos":[4585,4654],"source":"[namespace](../../../csharp/language-reference/keywords/namespace.md)"}]}