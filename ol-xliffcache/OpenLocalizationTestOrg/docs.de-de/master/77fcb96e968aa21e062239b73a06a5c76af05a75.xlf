<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77fcb96e968aa21e062239b73a06a5c76af05a75</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\advanced\how-to-create-mdi-child-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c0a9d8698ff3052aa515235bd12a1174b9014e3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9118de291024bdc1f8b13bc249c3e66c76984eb9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create MDI Child Forms | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create MDI Child Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>MDI child forms are an essential element of <bpt id="p1">[</bpt>Multiple-Document Interface (MDI) Applications<ept id="p1">](../../../../docs/framework/winforms/advanced/multiple-document-interface-mdi-applications.md)</ept>, as these forms are the center of user interaction.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In the following procedure, you will create MDI child form that displays a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control, similar to most word-processing applications.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Substituting the <ph id="ph1">&lt;xref:System.Windows.Forms&gt;</ph> control with other controls, such as the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, or a mixture of controls enables you to create MDI child windows (and, by extension, MDI applications) with diverse possibilities.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To change your settings, choose <bpt id="p1">**</bpt>Import and Export Settings<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Tools<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Customizing Development Settings in Visual Studio<ept id="p1">](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To create MDI child forms</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a new Windows Forms project.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>the Properties Windows<ept id="p1">**</ept> for the form, set its <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, and its <ph id="ph3">`WindowsState`</ph> property to <ph id="ph4">`Maximized`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This designates the form as an MDI container for child windows.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>From the <ph id="ph1">`Toolbox`</ph>, drag a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> control to the form.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Set its <ph id="ph1">`Text`</ph> property to <bpt id="p1">**</bpt>File<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Click the ellipses (â€¦) next to the <bpt id="p1">**</bpt>Items<ept id="p1">**</ept> property, and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> to add two child tool strip menu items.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`Text`</ph> property for these items to <bpt id="p1">**</bpt>New<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Window<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the project, point to <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, and then select <bpt id="p3">**</bpt>Add New Item<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, select <bpt id="p2">**</bpt>Windows Form<ept id="p2">**</ept> (in <ph id="ph1">[!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)]</ph> or in <ph id="ph2">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph>) or <bpt id="p3">**</bpt>Windows Forms Application (.NET)<ept id="p3">**</ept> (in <ph id="ph3">[!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]</ph>) from the <bpt id="p4">**</bpt>Templates<ept id="p4">**</ept> pane.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, name the form <bpt id="p2">**</bpt>Form2<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Open<ept id="p1">**</ept> button to add the form to the project.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The MDI child form you created in this step is a standard Windows Form.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>As such, it has an <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property, which enables you to control the transparency of the form.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property was designed for top-level windows.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Do not use it with MDI child forms, as painting problems can occur.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This form will be the template for your MDI child forms.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Windows Forms Designer<ept id="p1">**</ept> opens, displaying <bpt id="p2">**</bpt>Form2<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Toolbox<ept id="p1">**</ept>, drag a <bpt id="p2">**</bpt>RichTextBox<ept id="p2">**</ept> control to the form.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, set the <ph id="ph1">`Anchor`</ph> property to <bpt id="p2">**</bpt>Top, Left<ept id="p2">**</ept> and the <ph id="ph2">`Dock`</ph> property to <bpt id="p3">**</bpt>Fill<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This causes the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control to completely fill the area of the MDI child form, even when the form is resized.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Double click the <bpt id="p1">**</bpt>New<ept id="p1">**</ept> menu item to create a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler for it.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Insert code similar to the following to create a new MDI child form when the user clicks the <bpt id="p1">**</bpt>New<ept id="p1">**</ept> menu item.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the following example, the event handler handles the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event for <ph id="ph2">`MenuItem2`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Be aware that, depending on the specifics of your application architecture, your <bpt id="p1">**</bpt>New<ept id="p1">**</ept> menu item may not be <ph id="ph1">`MenuItem2`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]</ph>, add the following <ph id="ph2">`#include`</ph> directive at the top of Form1.h:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the drop-down list at the top of the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, select the menu strip that corresponds to the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu strip and set the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A&gt;</ph> property to the Window <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This will enable the <bpt id="p1">**</bpt>Window<ept id="p1">**</ept> menu to maintain a list of open MDI child windows with a check mark next to the active child window.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Press F5 to run the application.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>By selecting <bpt id="p1">**</bpt>New<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu, you can create new MDI child forms, which are kept track of in the <bpt id="p3">**</bpt>Window<ept id="p3">**</ept> menu item.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When an MDI child form has a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> component (with, usually, a menu structure of menu items) and it is opened within an MDI parent form that has a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> component (with, usually, a menu structure of menu items), the menu items will merge automatically if you have set the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph> property (and optionally, the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> property).</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph> property of both <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> components and all of the menu items of the child form to <ph id="ph3">&lt;xref:System.Windows.Forms.MenuMerge&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Additionally, set the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> property so that the menu items from both menus appear in the desired order.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Moreover, keep in mind that when you close an MDI parent form, each of the MDI child forms raises a <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event for the MDI parent is raised.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Canceling an MDI child's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event will not prevent the MDI parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event from being raised; however, the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> argument for the MDI parent's <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event will now be set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can force the MDI parent and all MDI child forms to close by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> argument to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Multiple-Document Interface (MDI) Applications<ept id="p1">](../../../../docs/framework/winforms/advanced/multiple-document-interface-mdi-applications.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create MDI Parent Forms<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-create-mdi-parent-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Determine the Active MDI Child<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-determine-the-active-mdi-child.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Send Data to the Active MDI Child<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-send-data-to-the-active-mdi-child.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Arrange MDI Child Forms<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-arrange-mdi-child-forms.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>