{"content":"---\ntitle: \"AddressOf Operator (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"AddressOf\"\n  - \"vb.AddressOf\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"AddressOf operator\"\n  - \"addresses, passing to API procedures\"\nms.assetid: 8105a59d-60d8-4ab5-b221-5899cdfacbf4\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# AddressOf Operator (Visual Basic)\nCreates a procedure delegate instance that references the specific procedure.  \n  \n## Syntax  \n  \n```  \n  \nAddressOf procedurename  \n```  \n  \n## Parts  \n `procedurename`  \n Required. Specifies the procedure to be referenced by the newly created procedure delegate.  \n  \n## Remarks  \n The `AddressOf` operator creates a function delegate that points to the function specified by `procedurename`. When the specified procedure is an instance method then the function delegate refers to both the instance and the method. Then, when the function delegate is invoked the specified method of the specified instance is called.  \n  \n The `AddressOf` operator can be used as the operand of a delegate constructor or it can be used in a context in which the type of the delegate can be determined by the compiler.  \n  \n## Example  \n This example uses the `AddressOf` operator to designate a delegate to handle the `Click` event of a button.  \n  \n [!code-vb[VbVbalrDelegates#8](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/addressof-operator_1.vb)]  \n  \n## Example  \n The following example uses the `AddressOf` operator to designate the startup function for a thread.  \n  \n [!code-vb[VbVbalrDelegates#9](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/addressof-operator_2.vb)]  \n  \n## See Also  \n [Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)   \n [Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)   \n [Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)   \n [Delegates](../../../visual-basic/programming-guide/language-features/delegates/index.md)","nodes":[{"pos":[4,654],"embed":true,"restype":"x-metadata","content":"title: \"AddressOf Operator (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"AddressOf\"\n  - \"vb.AddressOf\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"AddressOf operator\"\n  - \"addresses, passing to API procedures\"\nms.assetid: 8105a59d-60d8-4ab5-b221-5899cdfacbf4\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"AddressOf Operator (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,50],"content":"AddressOf Operator (Visual Basic) | Microsoft Docs","nodes":[{"content":"AddressOf Operator (Visual Basic) | Microsoft Docs","pos":[0,50]}]}],"path":["title"]}],"yml":true},{"pos":[661,694],"content":"AddressOf Operator (Visual Basic)","linkify":"AddressOf Operator (Visual Basic)","nodes":[{"content":"AddressOf Operator (Visual Basic)","pos":[0,33]}]},{"content":"Creates a procedure delegate instance that references the specific procedure.","pos":[695,772]},{"pos":[781,787],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[840,845],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Required.","pos":[868,877]},{"content":"Specifies the procedure to be referenced by the newly created procedure delegate.","pos":[878,959]},{"pos":[968,975],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`AddressOf`</ph> operator creates a function delegate that points to the function specified by <ph id=\"ph2\">`procedurename`</ph>.","pos":[979,1089],"source":"The `AddressOf` operator creates a function delegate that points to the function specified by `procedurename`."},{"content":"When the specified procedure is an instance method then the function delegate refers to both the instance and the method.","pos":[1090,1211]},{"content":"Then, when the function delegate is invoked the specified method of the specified instance is called.","pos":[1212,1313]},{"pos":[1320,1497],"content":"The <ph id=\"ph1\">`AddressOf`</ph> operator can be used as the operand of a delegate constructor or it can be used in a context in which the type of the delegate can be determined by the compiler.","source":"The `AddressOf` operator can be used as the operand of a delegate constructor or it can be used in a context in which the type of the delegate can be determined by the compiler."},{"pos":[1506,1513],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1517,1624],"content":"This example uses the <ph id=\"ph1\">`AddressOf`</ph> operator to designate a delegate to handle the <ph id=\"ph2\">`Click`</ph> event of a button.","source":"This example uses the `AddressOf` operator to designate a delegate to handle the `Click` event of a button."},{"pos":[1770,1777],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1781,1880],"content":"The following example uses the <ph id=\"ph1\">`AddressOf`</ph> operator to designate the startup function for a thread.","source":"The following example uses the `AddressOf` operator to designate the startup function for a thread."},{"pos":[2026,2034],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Declare Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2038,2132],"source":"[Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/function-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2136,2232],"source":"[Function Statement](../../../visual-basic/language-reference/statements/function-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Sub Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2236,2322],"source":"[Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Delegates<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept>","pos":[2326,2415],"source":"[Delegates](../../../visual-basic/programming-guide/language-features/delegates/index.md)"}]}