{"content":"---\ntitle: \"XML Integration with Relational Data and ADO.NET\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\nms.assetid: f6ebb1a1-f2ca-49b9-92c9-0150940cf6e6\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# XML Integration with Relational Data and ADO.NET\nThe **XmlDataDocument** class is a derived class of the **XmlDocument**, and contains XML data. The advantage of the **XmlDataDocument** is that it provides a bridge between relational and hierarchical data. It is an **XmlDocument** that can be bound to a **DataSet** and both classes can synchronize changes made to data contained in the two classes. An **XmlDocument** that is bound to a **DataSet** allows XML to integrate with relational data, and you do not have to have your data represented as either XML or in a relational format. You can do both and not be constrained to a single representation of the data.  \n  \n The benefits of having data available in two views are:  \n  \n-   The structured portion of an XML document can be mapped to a dataset, and be efficiently stored, indexed, and searched.  \n  \n-   Transformations, validation, and navigation can be done efficiently through a cursor model over the XML data that is stored relationally. At times, it can be done more efficiently against relational structures than if the XML is stored in an **XmlDocument** model.  \n  \n-   The **DataSet** can store a portion of the XML. That is, you can use **XPath** or **XslTransform** to store to a **DataSet** only those elements and attributes of interest. From there, changes can be made to the smaller, filtered subset of data, with the changes propagating to the larger data in the **XmlDataDocument**.  \n  \n You can also run a transform over data that was loaded into the **DataSet** from SQL Server. Another option is to bind .NET Framework classes-style-managed WinForm and WebForm controls to a **DataSet** that was populated from an XML input stream.  \n  \n In addition to supporting **XslTransform**, an **XmlDataDocument** exposes relational data to **XPath** queries and validation.  Basically, all XML services are available over relational data, and relational facilities, such as control binding, codegen, and so on, are available over a structured projection of XML without compromising XML fidelity.  \n  \n Because **XmlDataDocument** is inherited from an **XmlDocument**, it provides an implementation of the W3C DOM. The fact that the **XmlDataDocument** is associated with, and stores a subset of its data within, a **DataSet** does not restrict or alter its use as an **XmlDocument** in any way. Code written to consume an **XmlDocument** works unaltered against an **XmlDataDocument**. The **DataSet** provides the relational view of the same data by defining tables, columns, relations, and constraints, and is a stand-alone, in-memory user data store.  \n  \n The following illustration shows the different associations that XML data has with the **DataSet** and **XmlDataDocument**: \n  \n ![Diagram that shows different associations with the XML DataSet.](./media/xml-integration-with-relational-data-and-adonet/xml-integration-relational-data-adodotnet.gif)  \n  \n The illustration shows that XML data can be loaded directly into a **DataSet**, which allows direct manipulation with XML in the relational manner. Or, the XML can be loaded into a derived class of the DOM, which is the **XmlDataDocument**, and subsequently loaded and synchronized with the **DataSet**. Because the **DataSet** and **XmlDataDocument** are synchronized over a single set of data, changes made to the data in one store are reflected in the other store.  \n  \n The **XmlDataDocument** inherits all the editing and navigational features from the **XmlDocument**. There are times when using the **XmlDataDocument** and its inherited features, synchronized with a **DataSet**, is a more appropriate option than loading XML directly into the **DataSet**. The following table shows the items to be considered when choosing which method to use to load the **DataSet**.  \n  \n|When to load XML directly into a DataSet|When to synchronize an XmlDataDocument with a DataSet|  \n|----------------------------------------------|-----------------------------------------------------------|  \n|Queries of data in the **DataSet** are easier using SQL than XPath.|XPath queries are needed over data in the **DataSet**.|  \n|Preservation of element ordering in the source XML is not critical.|Preservation of element ordering in the source XML is critical.|  \n|White space between elements and formatting does not need to be preserved in the source XML.|White space and formatting preservation in the source XML is critical.|  \n  \n If loading and writing XML directly into and out of a **DataSet** addresses your needs, see [Loading a DataSet from XML](../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md) and [Writing a DataSet as XML Data](../../../../docs/framework/data/adonet/dataset-datatable-dataview/writing-dataset-contents-as-xml-data.md).  \n  \n If loading the **DataSet** from an **XmlDataDocument** addresses your needs, see [Synchronizing a Datasetwith an XML Document](../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md).  \n  \n## See also\n\n- [Using XML in a DataSet](../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)\n","nodes":[{"pos":[4,200],"embed":true,"restype":"x-metadata","content":"title: \"XML Integration with Relational Data and ADO.NET\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\nms.assetid: f6ebb1a1-f2ca-49b9-92c9-0150940cf6e6\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"XML Integration with Relational Data and ADO.NET","nodes":[{"pos":[0,48],"content":"XML Integration with Relational Data and ADO.NET","nodes":[{"content":"XML Integration with Relational Data and ADO.NET","pos":[0,48]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[207,255],"content":"XML Integration with Relational Data and ADO.NET","linkify":"XML Integration with Relational Data and ADO.NET","nodes":[{"content":"XML Integration with Relational Data and ADO.NET","pos":[0,48]}]},{"content":"The <bpt id=\"p1\">**</bpt>XmlDataDocument<ept id=\"p1\">**</ept> class is a derived class of the <bpt id=\"p2\">**</bpt>XmlDocument<ept id=\"p2\">**</ept>, and contains XML data.","pos":[256,351],"source":"The **XmlDataDocument** class is a derived class of the **XmlDocument**, and contains XML data."},{"content":"The advantage of the <bpt id=\"p1\">**</bpt>XmlDataDocument<ept id=\"p1\">**</ept> is that it provides a bridge between relational and hierarchical data.","pos":[352,463],"source":" The advantage of the **XmlDataDocument** is that it provides a bridge between relational and hierarchical data."},{"content":"It is an <bpt id=\"p1\">**</bpt>XmlDocument<ept id=\"p1\">**</ept> that can be bound to a <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> and both classes can synchronize changes made to data contained in the two classes.","pos":[464,607],"source":" It is an **XmlDocument** that can be bound to a **DataSet** and both classes can synchronize changes made to data contained in the two classes."},{"content":"An <bpt id=\"p1\">**</bpt>XmlDocument<ept id=\"p1\">**</ept> that is bound to a <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> allows XML to integrate with relational data, and you do not have to have your data represented as either XML or in a relational format.","pos":[608,794],"source":" An **XmlDocument** that is bound to a **DataSet** allows XML to integrate with relational data, and you do not have to have your data represented as either XML or in a relational format."},{"content":"You can do both and not be constrained to a single representation of the data.","pos":[795,873]},{"content":"The benefits of having data available in two views are:","pos":[880,935]},{"content":"The structured portion of an XML document can be mapped to a dataset, and be efficiently stored, indexed, and searched.","pos":[945,1064]},{"content":"Transformations, validation, and navigation can be done efficiently through a cursor model over the XML data that is stored relationally.","pos":[1074,1211]},{"content":"At times, it can be done more efficiently against relational structures than if the XML is stored in an <bpt id=\"p1\">**</bpt>XmlDocument<ept id=\"p1\">**</ept> model.","pos":[1212,1338],"source":" At times, it can be done more efficiently against relational structures than if the XML is stored in an **XmlDocument** model."},{"content":"The <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> can store a portion of the XML.","pos":[1348,1395],"source":"The **DataSet** can store a portion of the XML."},{"content":"That is, you can use <bpt id=\"p1\">**</bpt>XPath<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>XslTransform<ept id=\"p2\">**</ept> to store to a <bpt id=\"p3\">**</bpt>DataSet<ept id=\"p3\">**</ept> only those elements and attributes of interest.","pos":[1396,1520],"source":" That is, you can use **XPath** or **XslTransform** to store to a **DataSet** only those elements and attributes of interest."},{"content":"From there, changes can be made to the smaller, filtered subset of data, with the changes propagating to the larger data in the <bpt id=\"p1\">**</bpt>XmlDataDocument<ept id=\"p1\">**</ept>.","pos":[1521,1669],"source":" From there, changes can be made to the smaller, filtered subset of data, with the changes propagating to the larger data in the **XmlDataDocument**."},{"content":"You can also run a transform over data that was loaded into the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> from SQL Server.","pos":[1676,1768],"source":"You can also run a transform over data that was loaded into the **DataSet** from SQL Server."},{"content":"Another option is to bind .NET Framework classes-style-managed WinForm and WebForm controls to a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> that was populated from an XML input stream.","pos":[1769,1922],"source":" Another option is to bind .NET Framework classes-style-managed WinForm and WebForm controls to a **DataSet** that was populated from an XML input stream."},{"content":"In addition to supporting <bpt id=\"p1\">**</bpt>XslTransform<ept id=\"p1\">**</ept>, an <bpt id=\"p2\">**</bpt>XmlDataDocument<ept id=\"p2\">**</ept> exposes relational data to <bpt id=\"p3\">**</bpt>XPath<ept id=\"p3\">**</ept> queries and validation.","pos":[1929,2056],"source":"In addition to supporting **XslTransform**, an **XmlDataDocument** exposes relational data to **XPath** queries and validation."},{"content":"Basically, all XML services are available over relational data, and relational facilities, such as control binding, codegen, and so on, are available over a structured projection of XML without compromising XML fidelity.","pos":[2058,2278]},{"content":"Because <bpt id=\"p1\">**</bpt>XmlDataDocument<ept id=\"p1\">**</ept> is inherited from an <bpt id=\"p2\">**</bpt>XmlDocument<ept id=\"p2\">**</ept>, it provides an implementation of the W3C DOM.","pos":[2285,2396],"source":"Because **XmlDataDocument** is inherited from an **XmlDocument**, it provides an implementation of the W3C DOM."},{"content":"The fact that the <bpt id=\"p1\">**</bpt>XmlDataDocument<ept id=\"p1\">**</ept> is associated with, and stores a subset of its data within, a <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> does not restrict or alter its use as an <bpt id=\"p3\">**</bpt>XmlDocument<ept id=\"p3\">**</ept> in any way.","pos":[2397,2577],"source":" The fact that the **XmlDataDocument** is associated with, and stores a subset of its data within, a **DataSet** does not restrict or alter its use as an **XmlDocument** in any way."},{"content":"Code written to consume an <bpt id=\"p1\">**</bpt>XmlDocument<ept id=\"p1\">**</ept> works unaltered against an <bpt id=\"p2\">**</bpt>XmlDataDocument<ept id=\"p2\">**</ept>.","pos":[2578,2668],"source":" Code written to consume an **XmlDocument** works unaltered against an **XmlDataDocument**."},{"content":"The <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> provides the relational view of the same data by defining tables, columns, relations, and constraints, and is a stand-alone, in-memory user data store.","pos":[2669,2836],"source":" The **DataSet** provides the relational view of the same data by defining tables, columns, relations, and constraints, and is a stand-alone, in-memory user data store."},{"pos":[2843,2966],"content":"The following illustration shows the different associations that XML data has with the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>XmlDataDocument<ept id=\"p2\">**</ept>:","source":"The following illustration shows the different associations that XML data has with the **DataSet** and **XmlDataDocument**:"},{"content":"Diagram that shows different associations with the XML DataSet.","pos":[2974,3037]},{"content":"The illustration shows that XML data can be loaded directly into a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept>, which allows direct manipulation with XML in the relational manner.","pos":[3148,3295],"source":"The illustration shows that XML data can be loaded directly into a **DataSet**, which allows direct manipulation with XML in the relational manner."},{"content":"Or, the XML can be loaded into a derived class of the DOM, which is the <bpt id=\"p1\">**</bpt>XmlDataDocument<ept id=\"p1\">**</ept>, and subsequently loaded and synchronized with the <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept>.","pos":[3296,3451],"source":" Or, the XML can be loaded into a derived class of the DOM, which is the **XmlDataDocument**, and subsequently loaded and synchronized with the **DataSet**."},{"content":"Because the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>XmlDataDocument<ept id=\"p2\">**</ept> are synchronized over a single set of data, changes made to the data in one store are reflected in the other store.","pos":[3452,3615],"source":" Because the **DataSet** and **XmlDataDocument** are synchronized over a single set of data, changes made to the data in one store are reflected in the other store."},{"content":"The <bpt id=\"p1\">**</bpt>XmlDataDocument<ept id=\"p1\">**</ept> inherits all the editing and navigational features from the <bpt id=\"p2\">**</bpt>XmlDocument<ept id=\"p2\">**</ept>.","pos":[3622,3722],"source":"The **XmlDataDocument** inherits all the editing and navigational features from the **XmlDocument**."},{"content":"There are times when using the <bpt id=\"p1\">**</bpt>XmlDataDocument<ept id=\"p1\">**</ept> and its inherited features, synchronized with a <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept>, is a more appropriate option than loading XML directly into the <bpt id=\"p3\">**</bpt>DataSet<ept id=\"p3\">**</ept>.","pos":[3723,3911],"source":" There are times when using the **XmlDataDocument** and its inherited features, synchronized with a **DataSet**, is a more appropriate option than loading XML directly into the **DataSet**."},{"content":"The following table shows the items to be considered when choosing which method to use to load the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept>.","pos":[3912,4023],"source":" The following table shows the items to be considered when choosing which method to use to load the **DataSet**."},{"content":"When to load XML directly into a DataSet","pos":[4030,4070]},{"content":"When to synchronize an XmlDataDocument with a DataSet","pos":[4071,4124]},{"pos":[4240,4307],"content":"Queries of data in the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> are easier using SQL than XPath.","source":"Queries of data in the **DataSet** are easier using SQL than XPath."},{"pos":[4308,4362],"content":"XPath queries are needed over data in the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept>.","source":"XPath queries are needed over data in the **DataSet**."},{"content":"Preservation of element ordering in the source XML is not critical.","pos":[4367,4434]},{"content":"Preservation of element ordering in the source XML is critical.","pos":[4435,4498]},{"content":"White space between elements and formatting does not need to be preserved in the source XML.","pos":[4503,4595]},{"content":"White space and formatting preservation in the source XML is critical.","pos":[4596,4666]},{"pos":[4674,5035],"content":"If loading and writing XML directly into and out of a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> addresses your needs, see <bpt id=\"p2\">[</bpt>Loading a DataSet from XML<ept id=\"p2\">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md)</ept> and <bpt id=\"p3\">[</bpt>Writing a DataSet as XML Data<ept id=\"p3\">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/writing-dataset-contents-as-xml-data.md)</ept>.","source":"If loading and writing XML directly into and out of a **DataSet** addresses your needs, see [Loading a DataSet from XML](../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md) and [Writing a DataSet as XML Data](../../../../docs/framework/data/adonet/dataset-datatable-dataview/writing-dataset-contents-as-xml-data.md)."},{"pos":[5042,5283],"content":"If loading the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> from an <bpt id=\"p2\">**</bpt>XmlDataDocument<ept id=\"p2\">**</ept> addresses your needs, see <bpt id=\"p3\">[</bpt>Synchronizing a Datasetwith an XML Document<ept id=\"p3\">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md)</ept>.","source":"If loading the **DataSet** from an **XmlDataDocument** addresses your needs, see [Synchronizing a Datasetwith an XML Document](../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md)."},{"pos":[5292,5300],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5304,5421],"content":"<bpt id=\"p1\">[</bpt>Using XML in a DataSet<ept id=\"p1\">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)</ept>","source":"[Using XML in a DataSet](../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)"}]}