{"content":"---\ntitle: \"sealed modifier - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"sealed\"\n  - \"sealed_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"sealed keyword [C#]\"\nms.assetid: 8e4ed5d3-10be-47db-9488-0da2008e6f3f\n---\n# sealed (C# Reference)\n\nWhen applied to a class, the `sealed` modifier prevents other classes from inheriting from it. In the following example, class `B` inherits from class `A`, but no class can inherit from class `B`.\n\n```csharp\nclass A {}\nsealed class B : A {}\n```\n\nYou can also use the `sealed` modifier on a method or property that overrides a virtual method or property in a base class. This enables you to allow classes to derive from your class and prevent them from overriding specific virtual methods or properties.\n\n## Example\n\nIn the following example, `Z` inherits from `Y` but `Z` cannot override the virtual function `F` that is declared in `X` and sealed in `Y`.\n\n[!code-csharp[csrefKeywordsModifiers#16](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsModifiers/CS/csrefKeywordsModifiers.cs#16)]\n\nWhen you define new methods or properties in a class, you can prevent deriving classes from overriding them by not declaring them as [virtual](virtual.md).\n\nIt is an error to use the [abstract](abstract.md) modifier with a sealed class, because an abstract class must be inherited by a class that provides an implementation of the abstract methods or properties.\n\nWhen applied to a method or property, the `sealed` modifier must always be used with [override](override.md).\n\nBecause structs are implicitly sealed, they cannot be inherited.\n\nFor more information, see [Inheritance](../../programming-guide/classes-and-structs/inheritance.md).\n\nFor more examples, see [Abstract and Sealed Classes and Class Members](../../programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members.md).\n\n## Example\n\n[!code-csharp[csrefKeywordsModifiers#17](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsModifiers/CS/csrefKeywordsModifiers.cs#17)]\n\nIn the previous example, you might try to inherit from the sealed class by using the following statement:\n\n`class MyDerivedC: SealedClass {}   // Error`\n\nThe result is an error message:\n\n`'MyDerivedC': cannot derive from sealed type 'SealedClass'`\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## Remarks\n\nTo determine whether to seal a class, method, or property, you should generally consider the following two points:\n\n- The potential benefits that deriving classes might gain through the ability to customize your class.\n\n- The potential that deriving classes could modify your classes in such a way that they would no longer work correctly or as expected.\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Static Classes and Static Class Members](../../programming-guide/classes-and-structs/static-classes-and-static-class-members.md)\n- [Abstract and Sealed Classes and Class Members](../../programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members.md)\n- [Access Modifiers](../../programming-guide/classes-and-structs/access-modifiers.md)\n- [Modifiers](modifiers.md)\n- [override](override.md)\n- [virtual](virtual.md)","nodes":[{"pos":[4,235],"embed":true,"restype":"x-metadata","content":"title: \"sealed modifier - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"sealed\"\n  - \"sealed_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"sealed keyword [C#]\"\nms.assetid: 8e4ed5d3-10be-47db-9488-0da2008e6f3f","nodes":[{"content":"sealed modifier - C# Reference","nodes":[{"pos":[0,30],"content":"sealed modifier - C# Reference","nodes":[{"content":"sealed modifier - C# Reference","pos":[0,30]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[242,263],"content":"sealed (C# Reference)","linkify":"sealed (C# Reference)","nodes":[{"content":"sealed (C# Reference)","pos":[0,21]}]},{"content":"When applied to a class, the <ph id=\"ph1\">`sealed`</ph> modifier prevents other classes from inheriting from it.","pos":[265,359],"source":"When applied to a class, the `sealed` modifier prevents other classes from inheriting from it."},{"content":"In the following example, class <ph id=\"ph1\">`B`</ph> inherits from class <ph id=\"ph2\">`A`</ph>, but no class can inherit from class <ph id=\"ph3\">`B`</ph>.","pos":[360,461],"source":" In the following example, class `B` inherits from class `A`, but no class can inherit from class `B`."},{"content":"You can also use the <ph id=\"ph1\">`sealed`</ph> modifier on a method or property that overrides a virtual method or property in a base class.","pos":[511,634],"source":"You can also use the `sealed` modifier on a method or property that overrides a virtual method or property in a base class."},{"content":"This enables you to allow classes to derive from your class and prevent them from overriding specific virtual methods or properties.","pos":[635,767]},{"pos":[772,779],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[781,920],"content":"In the following example, <ph id=\"ph1\">`Z`</ph> inherits from <ph id=\"ph2\">`Y`</ph> but <ph id=\"ph3\">`Z`</ph> cannot override the virtual function <ph id=\"ph4\">`F`</ph> that is declared in <ph id=\"ph5\">`X`</ph> and sealed in <ph id=\"ph6\">`Y`</ph>.","source":"In the following example, `Z` inherits from `Y` but `Z` cannot override the virtual function `F` that is declared in `X` and sealed in `Y`."},{"pos":[1068,1223],"content":"When you define new methods or properties in a class, you can prevent deriving classes from overriding them by not declaring them as <bpt id=\"p1\">[</bpt>virtual<ept id=\"p1\">](virtual.md)</ept>.","source":"When you define new methods or properties in a class, you can prevent deriving classes from overriding them by not declaring them as [virtual](virtual.md)."},{"pos":[1225,1430],"content":"It is an error to use the <bpt id=\"p1\">[</bpt>abstract<ept id=\"p1\">](abstract.md)</ept> modifier with a sealed class, because an abstract class must be inherited by a class that provides an implementation of the abstract methods or properties.","source":"It is an error to use the [abstract](abstract.md) modifier with a sealed class, because an abstract class must be inherited by a class that provides an implementation of the abstract methods or properties."},{"pos":[1432,1541],"content":"When applied to a method or property, the <ph id=\"ph1\">`sealed`</ph> modifier must always be used with <bpt id=\"p1\">[</bpt>override<ept id=\"p1\">](override.md)</ept>.","source":"When applied to a method or property, the `sealed` modifier must always be used with [override](override.md)."},{"content":"Because structs are implicitly sealed, they cannot be inherited.","pos":[1543,1607]},{"pos":[1609,1709],"content":"For more information, see <bpt id=\"p1\">[</bpt>Inheritance<ept id=\"p1\">](../../programming-guide/classes-and-structs/inheritance.md)</ept>.","source":"For more information, see [Inheritance](../../programming-guide/classes-and-structs/inheritance.md)."},{"pos":[1711,1876],"content":"For more examples, see <bpt id=\"p1\">[</bpt>Abstract and Sealed Classes and Class Members<ept id=\"p1\">](../../programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members.md)</ept>.","source":"For more examples, see [Abstract and Sealed Classes and Class Members](../../programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members.md)."},{"pos":[1881,1888],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In the previous example, you might try to inherit from the sealed class by using the following statement:","pos":[2036,2141]},{"content":"The result is an error message:","pos":[2190,2221]},{"pos":[2288,2313],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[2379,2386],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To determine whether to seal a class, method, or property, you should generally consider the following two points:","pos":[2388,2502]},{"content":"The potential benefits that deriving classes might gain through the ability to customize your class.","pos":[2506,2606]},{"content":"The potential that deriving classes could modify your classes in such a way that they would no longer work correctly or as expected.","pos":[2610,2742]},{"pos":[2747,2755],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2759,2786],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[2789,2845],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[2848,2871],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[2874,3003],"content":"<bpt id=\"p1\">[</bpt>Static Classes and Static Class Members<ept id=\"p1\">](../../programming-guide/classes-and-structs/static-classes-and-static-class-members.md)</ept>","source":"[Static Classes and Static Class Members](../../programming-guide/classes-and-structs/static-classes-and-static-class-members.md)"},{"pos":[3006,3147],"content":"<bpt id=\"p1\">[</bpt>Abstract and Sealed Classes and Class Members<ept id=\"p1\">](../../programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members.md)</ept>","source":"[Abstract and Sealed Classes and Class Members](../../programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members.md)"},{"pos":[3150,3233],"content":"<bpt id=\"p1\">[</bpt>Access Modifiers<ept id=\"p1\">](../../programming-guide/classes-and-structs/access-modifiers.md)</ept>","source":"[Access Modifiers](../../programming-guide/classes-and-structs/access-modifiers.md)"},{"pos":[3236,3261],"content":"<bpt id=\"p1\">[</bpt>Modifiers<ept id=\"p1\">](modifiers.md)</ept>","source":"[Modifiers](modifiers.md)"},{"pos":[3264,3287],"content":"<bpt id=\"p1\">[</bpt>override<ept id=\"p1\">](override.md)</ept>","source":"[override](override.md)"},{"pos":[3290,3311],"content":"<bpt id=\"p1\">[</bpt>virtual<ept id=\"p1\">](virtual.md)</ept>","source":"[virtual](virtual.md)"}]}