{"content":"---\ntitle: \"ISymUnmanagedReader::UpdateSymbolStore Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedReader.UpdateSymbolStore\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedReader::UpdateSymbolStore\"\nhelpviewer_keywords: \n  - \"UpdateSymbolStore method [.NET Framework debugging]\"\n  - \"ISymUnmanagedReader::UpdateSymbolStore method [.NET Framework debugging]\"\nms.assetid: 4a17d723-86b9-4f27-bd0d-b70c3259011c\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ISymUnmanagedReader::UpdateSymbolStore Method\nUpdates the existing symbol store with a delta symbol store. This method is used in edit-and-continue scenarios to update the symbol store to match deltas to the original portable executable (PE) file.  \n  \n> [!NOTE]\n>  You need specify only one of the `filename` or `pIStream` parameters, not both. If `filename` is specified, the symbol store will be updated with the symbols in that file. If `pIStream` is specified, the store will be updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream>.  \n  \n## Syntax  \n  \n```  \nHRESULT UpdateSymbolStore (  \n    [in] const WCHAR *filename,  \n    [in] IStream *pIStream);  \n```  \n  \n## Parameters  \n `filename`  \n [in] The name of the file that contains the symbol store.  \n  \n `pIStream`  \n [in] The file stream, used as an alternative to the `filename` parameter.  \n  \n## Return Value  \n S_OK if the method succeeds; otherwise, E_FAIL or some other error code.  \n  \n## Requirements  \n **Header:** CorSym.idl, CorSym.h  \n  \n## See also\n\n- [ISymUnmanagedReader Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader-interface.md)\n","nodes":[{"pos":[4,524],"embed":true,"restype":"x-metadata","content":"title: \"ISymUnmanagedReader::UpdateSymbolStore Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedReader.UpdateSymbolStore\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedReader::UpdateSymbolStore\"\nhelpviewer_keywords: \n  - \"UpdateSymbolStore method [.NET Framework debugging]\"\n  - \"ISymUnmanagedReader::UpdateSymbolStore method [.NET Framework debugging]\"\nms.assetid: 4a17d723-86b9-4f27-bd0d-b70c3259011c\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ISymUnmanagedReader::UpdateSymbolStore Method","nodes":[{"pos":[0,45],"content":"ISymUnmanagedReader::UpdateSymbolStore Method","nodes":[{"content":"ISymUnmanagedReader::UpdateSymbolStore Method","pos":[0,45]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[531,576],"content":"ISymUnmanagedReader::UpdateSymbolStore Method","linkify":"ISymUnmanagedReader::UpdateSymbolStore Method","nodes":[{"content":"ISymUnmanagedReader::UpdateSymbolStore Method","pos":[0,45]}]},{"content":"Updates the existing symbol store with a delta symbol store.","pos":[577,637]},{"content":"This method is used in edit-and-continue scenarios to update the symbol store to match deltas to the original portable executable (PE) file.","pos":[638,778]},{"pos":[786,1101],"content":"[!NOTE]\n You need specify only one of the `filename` or `pIStream` parameters, not both. If `filename` is specified, the symbol store will be updated with the symbols in that file. If `pIStream` is specified, the store will be updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream>.","leadings":["","> "],"nodes":[{"content":"You need specify only one of the `filename` or `pIStream` parameters, not both. If `filename` is specified, the symbol store will be updated with the symbols in that file. If `pIStream` is specified, the store will be updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream>.","pos":[9,313],"nodes":[{"content":"You need specify only one of the <ph id=\"ph1\">`filename`</ph> or <ph id=\"ph2\">`pIStream`</ph> parameters, not both.","pos":[0,79],"source":"You need specify only one of the `filename` or `pIStream` parameters, not both."},{"content":"If <ph id=\"ph1\">`filename`</ph> is specified, the symbol store will be updated with the symbols in that file.","pos":[80,171],"source":" If `filename` is specified, the symbol store will be updated with the symbols in that file."},{"content":"If <ph id=\"ph1\">`pIStream`</ph> is specified, the store will be updated with the data from the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph>.","pos":[172,304],"source":" If `pIStream` is specified, the store will be updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream>."}]}]},{"pos":[1110,1116],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1235,1245],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The name of the file that contains the symbol store.","pos":[1263,1320]},{"content":"[in] The file stream, used as an alternative to the <ph id=\"ph1\">`filename`</ph> parameter.","pos":[1341,1414],"source":"[in] The file stream, used as an alternative to the `filename` parameter."},{"pos":[1423,1435],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the method succeeds; otherwise, E_FAIL or some other error code.","pos":[1439,1511]},{"pos":[1520,1532],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1536,1568],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl, CorSym.h","source":"**Header:** CorSym.idl, CorSym.h"},{"pos":[1577,1585],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1589,1707],"content":"<bpt id=\"p1\">[</bpt>ISymUnmanagedReader Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader-interface.md)</ept>","source":"[ISymUnmanagedReader Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader-interface.md)"}]}