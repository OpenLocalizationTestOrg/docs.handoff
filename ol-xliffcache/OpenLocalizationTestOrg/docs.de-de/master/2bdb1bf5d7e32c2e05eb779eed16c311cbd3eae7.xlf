<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="whats-new-in-accessibility.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bdb1bf5d7e32c2e05eb779eed16c311cbd3eae7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\whats-new\whats-new-in-accessibility.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fcb1369da541d81406e6b5fab1438d0fde01caa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e010bcb0a972e3fb75d9c904a24720e2d55fc21b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>What's new in accessibility in the .NET Framework</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>What's new in accessibility in the .NET Framework</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The .NET Framework aims at making applications more accessible for your users.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Accessibility features allow an application to provide an appropriate experience for users of Assistive Technology.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, the .NET Framework includes a large number of accessibility improvements that allow developers to create accessible applications.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Accessibility switches</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can configure your app to opt into accessibility features if it targets the .NET Framework 4.7 or an earlier version but is running on the .NET Framework 4.7.1 or later.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can also configure your app to use legacy features (and not take advantage of accessibility features) if it targets the .NET Framework 4.7.1 or later.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each version of the .NET Framework that includes accessibility features has a version-specific accessibility switch, which you add to the <bpt id="p1">[</bpt><ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element in the <bpt id="p2">[</bpt><ph id="ph2">`&lt;runtime&gt;`</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/index.md)</ept> section of the application's configuration file.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following are the supported switches:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Version</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Switch</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.7.1</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>"Switch.UseLegacyAccessibilityFeatures"</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.7.2</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>"Switch.UseLegacyAccessibilityFeatures.2"</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Taking advantage of accessibility enhancements</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The new accessibility features are enabled by default for applications that target the .NET Framework 4.7.1 or later.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In addition, applications that target an earlier version of the .NET Framework but are running on the .NET Framework 4.7.1 or later can opt out of legacy accessibility behaviors (and thereby take advantage of accessibility improvements) by adding switches to the <bpt id="p1">[</bpt><ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element in the <bpt id="p2">[</bpt><ph id="ph2">`&lt;runtime&gt;`</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/index.md)</ept> section of the application's configuration file and setting their value to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following shows how to opt in to accessibility enhancements introduced in the .NET Framework 4.7.1:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you choose to opt in to accessibility features in a later version of the .NET Framework, you must also explicitly opt in to the features from earlier versions of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Configuring your app to take advantage of accessibility improvements in both the .NET Framework 4.7.1 and 4.7.2 requires the following <bpt id="p1">[</bpt><ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Restoring legacy behavior</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Applications that target versions of the .NET Framework starting with 4.7.1 can disable accessibility features by adding switches to the <bpt id="p1">[</bpt><ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> element in the <bpt id="p2">[</bpt><ph id="ph2">`&lt;runtime&gt;`</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/runtime/index.md)</ept> section of the application's configuration file and setting their value to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, the following configuration opts out of accessibility features introduced in .NET Framework 4.7.2:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>What's new in accessibility in the .NET Framework 4.7.2</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The .NET Framework 4.7.2 includes new accessibility features in the following areas:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms<ept id="p1">](#winforms472)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Presentation Foundation (WPF)<ept id="p1">](#wpf472)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Windows Forms</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>OS-defined colors in High Contrast themes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Starting with .NET Framework 4.7.2, Windows Forms uses colors defined by the operating system in High Contrast themes.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This affects the following controls:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The drop-down arrow of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripDropDownButton&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls with <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle&gt;</ph> set to <ph id="ph5">&lt;xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType&gt;</ph> or <ph id="ph6">&lt;xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Previously, selected text and background colors were not contrasting and were hard to read.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Controls contained within a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> that has its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enabled&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripComboBox&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripDropDownButton&gt;</ph> controls, which have an increased luminosity contrast ratio in High Contrast Mode.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewLinkCell.LinkColor&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewLinkCell&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Narrator improvements<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.2, Narrator support is enhanced as follows:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It announces the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem.ShortcutKeys?displayProperty=nameWithType&gt;</ph> property when announcing the text of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>It indicates when a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> has its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enabled&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It gives feedback on the state of a check box when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckBoxes?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Narrator's Scan Mode focus order is consistent with the visual order of the controls on the ClickOnce download dialog window.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DataGridView improvements<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.2, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control has introduced the following accessibility improvements:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Rows can be sorted using the keyboard.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A user can use the F3 key in order to sort by the current column.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect?displayProperty=nameWithType&gt;</ph>, the column header changes color to indicate the current column as the user tabs through the cells in the current row.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Parent?displayProperty=nameWithType&gt;</ph> property of a  <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewLinkCell.DataGridViewLinkCellAccessibleObject?displayProperty=nameWithType&gt;</ph> returns the correct parent control.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Improved visual cues<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> controls with an empty <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.Text&gt;</ph> property  display a focus indicator when they receive the focus.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Improved Property Grid Support<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.PropertyGrid&gt;</ph> control child elements now return a <ph id="ph2">`true`</ph> for the  <ph id="ph3">&lt;xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty&gt;</ph> property only when a PropertyGrid element is enabled.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.PropertyGrid&gt;</ph> control child elements return a <ph id="ph2">`false`</ph> for the <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.IsEnabledProperty&gt;</ph> property only when a PropertyGrid element can be changed by the user.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Improved keyboard navigation<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph> control allows focus when contained within a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripPanel&gt;</ph> that has the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripPanel.TabStop&gt;</ph> property set to <ph id="ph4">`true`</ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Windows Presentation Foundation (WPF)</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Changes to the CheckBox and RadioButton controls<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4.7.1 and earlier versions, the WPF <ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox?displayProperty=nameWIthType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton?displayProperty=nameWIthType&gt;</ph> controls have inconsistent and, in Classic and High Contrast themes, incorrect focus visuals.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>These issues occur in cases where the controls do not have any content set.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This can make the transition between themes confusing and the focus visual hard to see.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4.7.2, these visuals are now more consistent across themes and more easily visible in Classic and High Contrast themes.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WinForms controls hosted in a WPF application<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For WinForms control hosted in a WPF application in the .NET Framework 4.7.1 and earlier versions, users couldn't tab out of the WinForms layer if the first or last control in that layer is the WPF <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4.7.2, users are now able to tab out of the WinForms layer.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, automated applications that rely on focus never escaping the WinForms layer may no longer work as expected.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>What's new in accessibility in the .NET Framework 4.7.1</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The .NET Framework 4.7.1 includes new accessibility features in the following areas:</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Presentation Foundation (WPF)<ept id="p1">](#wpf471)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms<ept id="p1">](#winforms471)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ASP.NET web controls<ept id="p1">](#aspnet471)</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET SDK Tools<ept id="p1">](#tools471)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Workflow Foundation (WF) Workflow Designer<ept id="p1">](#wf471)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Windows Presentation Foundation (WPF)</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Screen reader improvements<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If accessibility improvements are enabled, the .NET Framework 4.7.1 includes the following enhancements that affect screen readers:</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4.7 and earlier versions, <ph id="ph1">&lt;xref:System.Windows.Controls.Expander&gt;</ph> controls were announced by screen readers as buttons.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, they are correctly announced as expandable/collapsible groups.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4.7 and earlier versions, <ph id="ph1">&lt;xref:System.Windows.Controls.DataGridCell&gt;</ph> controls were announced by screen readers as “custom.”</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, they are now correctly announced as data grid cell (localized).</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, screen readers announce the name of an editable <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4.7 and earlier versions, <ph id="ph1">&lt;xref:System.Windows.Controls.PasswordBox&gt;</ph> controls were announced as “no item in view” or had otherwise incorrect behavior.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This issue is fixed starting with the .NET Framework 4.7.1.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>UIAutomation LiveRegion support<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Screen readers such as Narrator help people read the UI contents of an application, usually by text-to-speech output of the UI content that has the focus.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>However, if a UI element changes and does not have the focus, the user may not be notified and may miss important information.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Live regions aim at solving this problem.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A developer can use them to inform the screen reader or any other UIAutomation client that an important change has been made to a UI element.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The screen reader can then decide how and when to inform the user of this change.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To support live regions, the following APIs have been added to WPF:</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementIdentifiers.LiveSettingProperty?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementIdentifiers.LiveRegionChangedEvent?displayProperty=nameWithType&gt;</ph> fields, which identify the <bpt id="p1">**</bpt>LiveSetting<ept id="p1">**</ept> property and the <bpt id="p2">**</bpt>LiveRegionChanged<ept id="p2">**</ept> event.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>They can be set by using XAML.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AutomationProperties.LiveSetting<ept id="p1">**</ept> attached property, which informs the screen reader of the importance of the UI change to the user.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.LiveSettingProperty?displayProperty=nameWithType&gt;</ph> property, which identifies the <bpt id="p1">**</bpt>AutomationProperties.LiveSetting<ept id="p1">**</ept> attached property.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore%2A?displayProperty=nameWithType&gt;</ph> method, which can be overridden to provide a <bpt id="p1">**</bpt>LiveSetting<ept id="p1">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.GetLiveSetting%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationProperties.SetLiveSetting%2A?displayProperty=nameWithType&gt;</ph> methods, which get and set a <bpt id="p1">**</bpt>LiveSetting<ept id="p1">**</ept> value.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationLiveSetting?displayProperty=nameWithType&gt;</ph> enumeration, which defines the following possible <bpt id="p1">**</bpt>LiveSetting<ept id="p1">**</ept> values:</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationLiveSetting.Off?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The element does not send notifications if the content of the live region has changed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationLiveSetting.Polite?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The element sends non-interruptive notifications if the content of the live region has changed.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationLiveSetting.Assertive?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The element sends interruptive notifications if the content of the live region has changed.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can create a LiveRegion by setting the <bpt id="p1">**</bpt>AutomationProperties.LiveSetting<ept id="p1">**</ept> property on the element of interest, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When the data in the live region changes and you need to inform a screen reader, you explicitly raise an event, as shown in the following sample.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>High contrast<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, improvements in high contrast have been made to various WPF controls.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>They are now visible when the <ph id="ph1">&lt;xref:System.Windows.SystemParameters.HighContrast%2A&gt;</ph> theme is set.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>These include:</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Expander&gt;</ph> control</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The focus visual for the  <ph id="ph1">&lt;xref:System.Windows.Controls.Expander&gt;</ph> control is now visible.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The keyboard visuals for <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>,<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph> controls are visible as well.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Before:</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Expander control with focus before accessibility improvements</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>After:</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Expander control with focus after accessibility improvements</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph> controls</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The text in the <ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph> controls is now easier to see when selected in high contrast themes.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Before:</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>High contrast radio button with focus before accessibility improvements</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>After:</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>High contrast radio button with focus after accessibility improvements</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> control</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, the border of a disabled <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> control is the same color as disabled text.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Before:</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>ComboBox disabled border and text before accessibility improvements</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>After:</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>ComboBox disabled border and text after accessibility improvements</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>In addition, disabled and focused buttons use the correct theme color.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Before:</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Button theme colors before accessibility improvements</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>After:</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Button theme colors after accessibility improvements</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Finally, in the .NET Framework 4.7 and earlier versions, setting a <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> control’s style to <ph id="ph2">`Toolbar.ComboBoxStyleKey`</ph> caused the drop-down arrow to be invisible.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This issue is fixed starting with the .NET Framework 4.7.1.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Before:</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Toolbar.ComboBoxStyleKey before accessibility improvements</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>After:</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Toolbar.ComboBoxStyleKey after accessibility improvements</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> control</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, the sort indicator arrow in <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> controls now uses correct theme colors.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Before:</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Sort indicator arrow before accessibility improvements</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>After:</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Sort indicator arrow after accessibility improvements</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In addition, in the .NET Framework 4.7 and earlier versions, the default link style changed to an incorrect color on mouse over in high contrast modes.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>This is resolved starting with the .NET Framework 4.7.1.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Similarly, <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> checkbox columns uses the expected colors for keyboard focus feedback starting with the .NET Framework 4.7.1.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Before:</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>DataGrid default link style before accessibility improvements</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>After:</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>DataGrid default link style after accessibility improvements</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For more information on WPF accessibility improvements in the .NET Framework 4.7.1, see <bpt id="p1">[</bpt>Accessibility improvements in WPF<ept id="p1">](../migration-guide/retargeting/4.7-4.7.1.md#accessibility-improvements-in-wpf)</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Windows Forms accessibility improvements</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4.7.1, Windows Forms (WinForms) includes accessibility changes in the following areas.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Improved display in High Contrast mode<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, various WinForms controls offer improved rendering in the HighContrast modes available in the operating system.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Windows 10 has changed the values for some high contrast system colors, and Windows Forms is based on the Windows 10 Win32 framework.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For the best experience, run on the latest version of Windows and opt in to the latest OS changes by adding an app.manifest file in a test application and un-comment the Windows 10 supported OS  line so that it looks the following:</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Some examples of high contrast changes include:</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Checkmarks in <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> items are easier to view.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>When selected, disabled <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> items are easier to view.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Text in a selected <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control contrasts with the selection color.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Disabled text is easier to read.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Before:</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Disabled text before accessibility improvements</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>After:</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Disabled text after accessibility improvements</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>High contrast improvements in the Thread Exception Dialog.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Improved Narrator support<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Windows Forms in the .NET Framework 4.7.1 includes the following accessibility improvements for the Narrator:</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MonthCalendar&gt;</ph> control can be accessed by the Narrator, as well as by other UI automation tools.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CheckedListBox&gt;</ph> control notifies Narrator when an item's check state has changed so the user is notified that they’ve changed the value of a list item.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> control reports the correct read-only status to Narrator.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Narrator can now read disabled <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> text, whereas previously it would skip over disabled menu items.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Enhanced support for UIAutomation accessibility patterns<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, developers of accessibility technology tools can leverage common API accessibility patterns and properties for several WinForms controls.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>These accessibility improvements include:</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripSplitButton&gt;</ph> now support the <bpt id="p1">[</bpt>expand/collapse pattern<ept id="p1">](../ui-automation/implementing-the-ui-automation-expandcollapse-control-pattern.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph> now supports the <bpt id="p1">[</bpt>toggle pattern<ept id="p1">](../ui-automation/implementing-the-ui-automation-toggle-control-pattern.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> control supports the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name&gt;</ph> property and the <bpt id="p1">[</bpt>expand/collapse pattern<ept id="p1">](../ui-automation/implementing-the-ui-automation-expandcollapse-control-pattern.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph> controls support the <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Improved property browser experience<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1, Windows Forms includes:</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Better keyboard navigation through the various drop-down selection windows.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>A reduction of unnecessary tab stops.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Better reporting of control types.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Improved narrator behavior.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>ASP.NET web controls</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.7.1 and Visual Studio 2017 15.3, ASP.NET improves how ASP.NET web controls work with accessibility technology in Visual Studio.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Changes include the following:</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Changes to implement missing UI accessibility patterns in controls, like the <bpt id="p1">**</bpt>Add Field<ept id="p1">**</ept> dialog in the <bpt id="p2">**</bpt>Details View<ept id="p2">**</ept> wizard, or the <bpt id="p3">**</bpt>Configure ListView<ept id="p3">**</ept> dialog of the <bpt id="p4">**</bpt>ListView<ept id="p4">**</ept> wizard.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Changes to improve the display in High Contrast mode, like the <bpt id="p1">**</bpt>Data Pager Fields Editor<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Changes to improve the keyboard navigation experiences for controls, like the <bpt id="p1">**</bpt>Fields<ept id="p1">**</ept> dialog in the <bpt id="p2">**</bpt>Edit Pager Fields<ept id="p2">**</ept> wizard of the DataPager control, the <bpt id="p3">**</bpt>Configure ObjectContext<ept id="p3">**</ept> dialog, or the <bpt id="p4">**</bpt>Configure Data Selection<ept id="p4">**</ept> dialog of the <bpt id="p5">**</bpt>Configure Data Source<ept id="p5">**</ept> wizard.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>.NET SDK Tools</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Configuration Editor Tool (SvcConfigEditor.exe)<ept id="p1">](../wcf/configuration-editor-tool-svcconfigeditor-exe.md)</ept> and <bpt id="p2">[</bpt>Service Trace Viewer Tool (SvcTraceViewer.exe)<ept id="p2">](../wcf/service-trace-viewer-tool-svctraceviewer-exe.md)</ept> have been improved by fixing varied accessibility issues.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Most of these were small issues, like a name not being defined or certain UI automation patterns not being implemented correctly.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>While many users won’t be aware of these incorrect values, customers who use assistive technologies like screen readers will find these SDK tools more accessible.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>These enhancements change some previous behaviors, such as keyboard focus order.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Windows Workflow Foundation (WF) Workflow Designer</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Accessibility changes in the Workflow Designer include the following:</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The tab order changes to left to right and top to bottom in some controls:</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The initialize correlation window for setting correlation data for the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.InitializeCorrelation&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The content definition window for the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph>, and <ph id="ph4">&lt;xref:System.ServiceModel.Activities.ReceiveReply&gt;</ph> activities.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>More functions are available via the keyboard:</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>When editing the properties of an activity, property groups can be collapsed by keyboard the first time they are focused.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Warning icons are accessible by keyboard.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>More Properties<ept id="p1">**</ept> button in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> window is accessible by keyboard.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Keyboard users can access the header items in the <bpt id="p1">**</bpt>Arguments<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Variables<ept id="p2">**</ept> panes of the Workflow Designer.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Improved visibility of items with focus, such as when:</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Adding rows to data grids used by the Workflow Designer and activity designers.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Tabbing through fields in the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.ReceiveReply&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> activities.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Setting default values for variables or arguments</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Screen readers can now correctly recognize:</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Breakpoints set in the workflow designer.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Activities.CorrelationScope&gt;</ph> activities.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The contents of the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The Target Type for the <ph id="ph1">&lt;xref:System.Activities.Statements.InvokeMethod&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The Exception combo box and the Finally section in the <ph id="ph1">&lt;xref:System.Activities.Statements.TryCatch&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The Message Type combo box, the splitter in the Add Correlation Initializers window, the Content Definition window, and the CorrelatesOn Definition window in the messaging activities (<ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph>, and <ph id="ph4">&lt;xref:System.ServiceModel.Activities.ReceiveReply&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>State machine transitions and transitions destinations.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Annotations and connectors on <ph id="ph1">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> activities.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The context (right-click) menus for activities.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The property value editors, the Clear Search button, the By Category and Alphabetical sort buttons, and the Expression Editor dialog in the properties grid.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The zoom percentage in the Workflow Designer.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The separator in <ph id="ph1">&lt;xref:System.Activities.Statements.Parallel&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activities.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.InvokeDelegate&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The Select Types window for dictionary activities (<ph id="ph1">`Microsoft.Activities.AddToDictionary&lt;TKey,TValue&gt;`</ph>, <ph id="ph2">`Microsoft.Activities.RemoveFromDictionary&lt;TKey,TValue&gt;`</ph>, etc.).</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The Browse and Select .NET Type window.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Breadcrumbs in the Workflow Designer.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Users who choose High Contrast themes will see many improvements in the visibility of the Workflow Designer and its controls, like better contrast ratios between elements and more noticeable selection boxes used for focus elements.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>What's new in the .NET Framework<ept id="p1">](whats-new.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>