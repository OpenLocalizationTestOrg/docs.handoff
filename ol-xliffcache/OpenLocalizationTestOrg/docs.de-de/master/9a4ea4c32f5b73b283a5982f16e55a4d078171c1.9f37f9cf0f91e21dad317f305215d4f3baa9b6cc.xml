{"content":"---\ntitle: \"How to: Compress and extract files\"\nms.date: \"01/14/2019\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"I/O [.NET Framework], compression\"\n  - \"compression\"\n  - \"compress files\"\nms.assetid: e9876165-3c60-4c84-a272-513e47acf579\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# How to: Compress and extract files\n\nThe <xref:System.IO.Compression> namespace contains the following types for compressing and decompressing files and streams. You can also use these types to read and modify the contents of a compressed file.\n\n- <xref:System.IO.Compression.ZipFile>\n- <xref:System.IO.Compression.ZipArchive>\n- <xref:System.IO.Compression.ZipArchiveEntry>\n- <xref:System.IO.Compression.DeflateStream>\n- <xref:System.IO.Compression.GZipStream>\n\nThe following examples show some of the operations you can perform with compressed files.\n\n## Example 1: Create and extract a .zip file\n\nThe following example shows how to create and extract a compressed *.zip* file by using the <xref:System.IO.Compression.ZipFile> class. The example compresses the contents of a folder into a new *.zip* file, and then extracts the zip to a new folder. \n\nTo run the sample, create a *start* folder in your program folder and populate it with files to zip. \n\nIf you get the build error \"The name 'ZipFile' does not exist in the current context,\" add a reference to the `System.IO.Compression.FileSystem` assembly to your project.\n\n[!code-csharp[System.IO.Compression.ZipFile#1](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]\n[!code-vb[System.IO.Compression.ZipFile#1](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]\n\n## Example 2: Extract specific file extensions\n\nThe next example iterates through the contents of an existing *.zip* file and extracts files that have a *.txt* extension. It uses the <xref:System.IO.Compression.ZipArchive> class to access the zip, and the <xref:System.IO.Compression.ZipArchiveEntry> class to inspect the individual entries. The extension method <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%2A> for the <xref:System.IO.Compression.ZipArchiveEntry> object is available in the <xref:System.IO.Compression.ZipFileExtensions?displayProperty=nameWithType> class. \n\nTo run the sample, place a *.zip* file called *result.zip* in your program folder. When prompted, provide a folder name to extract to. \n\nIf you get the build error \"The name 'ZipFile' does not exist in the current context,\" add a reference to the `System.IO.Compression.FileSystem` assembly to your project.\n\nIf you get the error \"The type 'ZipArchive' is defined in an assembly that is not referenced,\" add a reference to the `System.IO.Compression` assembly to your project. \n\n> [!IMPORTANT]\n> When unzipping files, you must look for malicious file paths, which can escape out of the directory you unzip into. This is known as a path traversal attack. The following example demonstrates how to check for malicious file paths and provides a safe way to unzip.\n\n[!code-csharp[System.IO.Compression.ZipArchive#1](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]\n[!code-vb[System.IO.Compression.ZipArchive#1](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]\n\n## Example 3: Add a file to an existing zip\n\nThe following example uses the <xref:System.IO.Compression.ZipArchive> class to access an existing *.zip* file, and adds a file to it. The new file gets compressed when you add it to the existing zip.\n\n[!code-csharp[System.IO.Compression.ZipArchiveMode#1](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]\n[!code-vb[System.IO.Compression.ZipArchiveMode#1](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]\n\n## Example 4: Compress and decompress .gz files\n\nYou can also use the <xref:System.IO.Compression.GZipStream> and <xref:System.IO.Compression.DeflateStream> classes to compress and decompress data. They use the same compression algorithm. You can decompress <xref:System.IO.Compression.GZipStream> objects that are written to a *.gz* file by using many common tools. The following example shows how to compress and decompress a directory of files by using the <xref:System.IO.Compression.GZipStream> class:\n\n[!code-csharp[IO.Compression.GZip1#1](../../../samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]\n[!code-vb[IO.Compression.GZip1#1](../../../samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]\n\n## See also\n\n- <xref:System.IO.Compression.ZipArchive>  \n- <xref:System.IO.Compression.ZipFile>  \n- <xref:System.IO.Compression.ZipArchiveEntry>  \n- <xref:System.IO.Compression.DeflateStream>  \n- <xref:System.IO.Compression.GZipStream>  \n- [File and stream I/O](../../../docs/standard/io/index.md)\n","nodes":[{"pos":[4,321],"embed":true,"restype":"x-metadata","content":"title: \"How to: Compress and extract files\"\nms.date: \"01/14/2019\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"I/O [.NET Framework], compression\"\n  - \"compression\"\n  - \"compress files\"\nms.assetid: e9876165-3c60-4c84-a272-513e47acf579\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"How to: Compress and extract files","nodes":[{"pos":[0,34],"content":"How to: Compress and extract files","nodes":[{"content":"How to: Compress and extract files","pos":[0,34]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[328,362],"content":"How to: Compress and extract files","linkify":"How to: Compress and extract files","nodes":[{"content":"How to: Compress and extract files","pos":[0,34]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression&gt;</ph> namespace contains the following types for compressing and decompressing files and streams.","pos":[364,488],"source":"The <xref:System.IO.Compression> namespace contains the following types for compressing and decompressing files and streams."},{"content":"You can also use these types to read and modify the contents of a compressed file.","pos":[489,571]},{"content":"The following examples show some of the operations you can perform with compressed files.","pos":[789,878]},{"pos":[883,924],"content":"Example 1: Create and extract a .zip file","linkify":"Example 1: Create and extract a .zip file","nodes":[{"content":"Example 1: Create and extract a .zip file","pos":[0,41]}]},{"content":"The following example shows how to create and extract a compressed <bpt id=\"p1\">*</bpt>.zip<ept id=\"p1\">*</ept> file by using the <ph id=\"ph1\">&lt;xref:System.IO.Compression.ZipFile&gt;</ph> class.","pos":[926,1061],"source":"The following example shows how to create and extract a compressed *.zip* file by using the <xref:System.IO.Compression.ZipFile> class."},{"content":"The example compresses the contents of a folder into a new <bpt id=\"p1\">*</bpt>.zip<ept id=\"p1\">*</ept> file, and then extracts the zip to a new folder.","pos":[1062,1176],"source":" The example compresses the contents of a folder into a new *.zip* file, and then extracts the zip to a new folder."},{"pos":[1179,1279],"content":"To run the sample, create a <bpt id=\"p1\">*</bpt>start<ept id=\"p1\">*</ept> folder in your program folder and populate it with files to zip.","source":"To run the sample, create a *start* folder in your program folder and populate it with files to zip."},{"pos":[1282,1452],"content":"If you get the build error \"The name 'ZipFile' does not exist in the current context,\" add a reference to the <ph id=\"ph1\">`System.IO.Compression.FileSystem`</ph> assembly to your project.","source":"If you get the build error \"The name 'ZipFile' does not exist in the current context,\" add a reference to the `System.IO.Compression.FileSystem` assembly to your project."},{"pos":[1763,1806],"content":"Example 2: Extract specific file extensions","linkify":"Example 2: Extract specific file extensions","nodes":[{"content":"Example 2: Extract specific file extensions","pos":[0,43]}]},{"content":"The next example iterates through the contents of an existing <bpt id=\"p1\">*</bpt>.zip<ept id=\"p1\">*</ept> file and extracts files that have a <bpt id=\"p2\">*</bpt>.txt<ept id=\"p2\">*</ept> extension.","pos":[1808,1930],"source":"The next example iterates through the contents of an existing *.zip* file and extracts files that have a *.txt* extension."},{"content":"It uses the <ph id=\"ph1\">&lt;xref:System.IO.Compression.ZipArchive&gt;</ph> class to access the zip, and the <ph id=\"ph2\">&lt;xref:System.IO.Compression.ZipArchiveEntry&gt;</ph> class to inspect the individual entries.","pos":[1931,2101],"source":" It uses the <xref:System.IO.Compression.ZipArchive> class to access the zip, and the <xref:System.IO.Compression.ZipArchiveEntry> class to inspect the individual entries."},{"content":"The extension method <ph id=\"ph1\">&lt;xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%2A&gt;</ph> for the <ph id=\"ph2\">&lt;xref:System.IO.Compression.ZipArchiveEntry&gt;</ph> object is available in the <ph id=\"ph3\">&lt;xref:System.IO.Compression.ZipFileExtensions?displayProperty=nameWithType&gt;</ph> class.","pos":[2102,2349],"source":" The extension method <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%2A> for the <xref:System.IO.Compression.ZipArchiveEntry> object is available in the <xref:System.IO.Compression.ZipFileExtensions?displayProperty=nameWithType> class."},{"content":"To run the sample, place a <bpt id=\"p1\">*</bpt>.zip<ept id=\"p1\">*</ept> file called <bpt id=\"p2\">*</bpt>result.zip<ept id=\"p2\">*</ept> in your program folder.","pos":[2352,2434],"source":"To run the sample, place a *.zip* file called *result.zip* in your program folder."},{"content":"When prompted, provide a folder name to extract to.","pos":[2435,2486]},{"pos":[2489,2659],"content":"If you get the build error \"The name 'ZipFile' does not exist in the current context,\" add a reference to the <ph id=\"ph1\">`System.IO.Compression.FileSystem`</ph> assembly to your project.","source":"If you get the build error \"The name 'ZipFile' does not exist in the current context,\" add a reference to the `System.IO.Compression.FileSystem` assembly to your project."},{"pos":[2661,2828],"content":"If you get the error \"The type 'ZipArchive' is defined in an assembly that is not referenced,\" add a reference to the <ph id=\"ph1\">`System.IO.Compression`</ph> assembly to your project.","source":"If you get the error \"The type 'ZipArchive' is defined in an assembly that is not referenced,\" add a reference to the `System.IO.Compression` assembly to your project."},{"pos":[2833,3112],"content":"[!IMPORTANT]\nWhen unzipping files, you must look for malicious file paths, which can escape out of the directory you unzip into. This is known as a path traversal attack. The following example demonstrates how to check for malicious file paths and provides a safe way to unzip.","leadings":["","> "],"nodes":[{"content":"When unzipping files, you must look for malicious file paths, which can escape out of the directory you unzip into. This is known as a path traversal attack. The following example demonstrates how to check for malicious file paths and provides a safe way to unzip.","pos":[13,277],"nodes":[{"content":"When unzipping files, you must look for malicious file paths, which can escape out of the directory you unzip into.","pos":[0,115]},{"content":"This is known as a path traversal attack.","pos":[116,157]},{"content":"The following example demonstrates how to check for malicious file paths and provides a safe way to unzip.","pos":[158,264]}]}]},{"pos":[3435,3475],"content":"Example 3: Add a file to an existing zip","linkify":"Example 3: Add a file to an existing zip","nodes":[{"content":"Example 3: Add a file to an existing zip","pos":[0,40]}]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.IO.Compression.ZipArchive&gt;</ph> class to access an existing <bpt id=\"p1\">*</bpt>.zip<ept id=\"p1\">*</ept> file, and adds a file to it.","pos":[3477,3611],"source":"The following example uses the <xref:System.IO.Compression.ZipArchive> class to access an existing *.zip* file, and adds a file to it."},{"content":"The new file gets compressed when you add it to the existing zip.","pos":[3612,3677]},{"pos":[4016,4060],"content":"Example 4: Compress and decompress .gz files","linkify":"Example 4: Compress and decompress .gz files","nodes":[{"content":"Example 4: Compress and decompress .gz files","pos":[0,44]}]},{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> classes to compress and decompress data.","pos":[4062,4210],"source":"You can also use the <xref:System.IO.Compression.GZipStream> and <xref:System.IO.Compression.DeflateStream> classes to compress and decompress data."},{"content":"They use the same compression algorithm.","pos":[4211,4251]},{"content":"You can decompress <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> objects that are written to a <bpt id=\"p1\">*</bpt>.gz<ept id=\"p1\">*</ept> file by using many common tools.","pos":[4252,4379],"source":" You can decompress <xref:System.IO.Compression.GZipStream> objects that are written to a *.gz* file by using many common tools."},{"content":"The following example shows how to compress and decompress a directory of files by using the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class:","pos":[4380,4519],"source":" The following example shows how to compress and decompress a directory of files by using the <xref:System.IO.Compression.GZipStream> class:"},{"pos":[4780,4788],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5017,5074],"content":"<bpt id=\"p1\">[</bpt>File and stream I/O<ept id=\"p1\">](../../../docs/standard/io/index.md)</ept>","source":"[File and stream I/O](../../../docs/standard/io/index.md)"}]}