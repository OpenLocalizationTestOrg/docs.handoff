{"content":"---\ntitle: \"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"hexadecimal strings [C#], converting to numeric type\"\n  - \"conversions [C#], hexidecimal strings\"\n  - \"strings [C#], converting hexadecimal strings\"\n  - \"hexadecimal strings [C#]\"\nms.assetid: 7115c49f-7d1d-40c3-8bd9-aae0cc1d46b6\ncaps.latest.revision: 19\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide)\nThese examples show you how to perform the following tasks:  \n  \n-   Obtain the hexadecimal value of each character in a [string](../../../csharp/language-reference/keywords/string.md).  \n  \n-   Obtain the [char](../../../csharp/language-reference/keywords/char.md) that corresponds to each value in a hexadecimal string.  \n  \n-   Convert a hexadecimal `string` to an [int](../../../csharp/language-reference/keywords/int.md).  \n  \n-   Convert a hexadecimal `string` to a [float](../../../csharp/language-reference/keywords/float.md).  \n  \n-   Convert a [byte](../../../csharp/language-reference/keywords/byte.md) array to a hexadecimal `string`.  \n  \n## Example  \n This example outputs the hexadecimal value of each character in a `string`. First it parses the `string` to an array of characters. Then it calls <xref:System.Convert.ToInt32%28System.Char%29> on each character to obtain its numeric value. Finally, it formats the number as its hexadecimal representation in a `string`.  \n  \n [!code-cs[csProgGuideTypes#30](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_1.cs)]  \n  \n## Example  \n This example parses a `string` of hexadecimal values and outputs the character corresponding to each hexadecimal value. First it calls the [Split(Char\\[\\])](xref:System.String.Split(System.Char[])) method to obtain each hexadecimal value as an individual `string` in an array. Then it calls <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> to convert the hexadecimal value to a decimal value represented as an [int](../../../csharp/language-reference/keywords/int.md). It shows two different ways to obtain the character corresponding to that character code. The first technique uses <xref:System.Char.ConvertFromUtf32%28System.Int32%29>, which returns the character corresponding to the integer argument as a `string`. The second technique explicitly casts the `int` to a [char](../../../csharp/language-reference/keywords/char.md).  \n  \n [!code-cs[csProgGuideTypes#31](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_2.cs)]  \n  \n## Example  \n This example shows another way to convert a hexadecimal `string` to an integer, by calling the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method.  \n  \n [!code-cs[csProgGuideTypes#32](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_3.cs)]  \n  \n## Example  \n The following example shows how to convert a hexadecimal `string` to a [float](../../../csharp/language-reference/keywords/float.md) by using the <xref:System.BitConverter?displayProperty=fullName> class and the <xref:System.Int32.Parse%2A?displayProperty=fullName> method.  \n  \n [!code-cs[csProgGuideTypes#39](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_4.cs)]  \n  \n## Example  \n The following example shows how to convert a [byte](../../../csharp/language-reference/keywords/byte.md) array to a hexadecimal string by using the <xref:System.BitConverter?displayProperty=fullName> class.  \n  \n [!code-cs[csProgGuideTypes#38](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_5.cs)]  \n  \n## See Also  \n [Standard Numeric Format Strings](../../../standard/base-types/standard-numeric-format-strings.md)   \n [Types](../../../csharp/programming-guide/types/index.md)   \n [How to: Determine Whether a String Represents a Numeric Value](../../../csharp/programming-guide/strings/how-to-determine-whether-a-string-represents-a-numeric-value.md)\n","nodes":[{"pos":[4,741],"embed":true,"restype":"x-metadata","content":"title: \"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"hexadecimal strings [C#], converting to numeric type\"\n  - \"conversions [C#], hexidecimal strings\"\n  - \"strings [C#], converting hexadecimal strings\"\n  - \"hexadecimal strings [C#]\"\nms.assetid: 7115c49f-7d1d-40c3-8bd9-aae0cc1d46b6\ncaps.latest.revision: 19\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,101],"content":"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide) | Microsoft Docs","pos":[0,101]}]}],"path":["title"]}],"yml":true},{"pos":[748,832],"content":"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide)","linkify":"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide)","nodes":[{"content":"How to: Convert Between Hexadecimal Strings and Numeric Types (C# Programming Guide)","pos":[0,84]}]},{"content":"These examples show you how to perform the following tasks:","pos":[833,892]},{"pos":[902,1018],"content":"Obtain the hexadecimal value of each character in a <bpt id=\"p1\">[</bpt>string<ept id=\"p1\">](../../../csharp/language-reference/keywords/string.md)</ept>.","source":"Obtain the hexadecimal value of each character in a [string](../../../csharp/language-reference/keywords/string.md)."},{"pos":[1028,1154],"content":"Obtain the <bpt id=\"p1\">[</bpt>char<ept id=\"p1\">](../../../csharp/language-reference/keywords/char.md)</ept> that corresponds to each value in a hexadecimal string.","source":"Obtain the [char](../../../csharp/language-reference/keywords/char.md) that corresponds to each value in a hexadecimal string."},{"pos":[1164,1259],"content":"Convert a hexadecimal <ph id=\"ph1\">`string`</ph> to an <bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](../../../csharp/language-reference/keywords/int.md)</ept>.","source":"Convert a hexadecimal `string` to an [int](../../../csharp/language-reference/keywords/int.md)."},{"pos":[1269,1367],"content":"Convert a hexadecimal <ph id=\"ph1\">`string`</ph> to a <bpt id=\"p1\">[</bpt>float<ept id=\"p1\">](../../../csharp/language-reference/keywords/float.md)</ept>.","source":"Convert a hexadecimal `string` to a [float](../../../csharp/language-reference/keywords/float.md)."},{"pos":[1377,1479],"content":"Convert a <bpt id=\"p1\">[</bpt>byte<ept id=\"p1\">](../../../csharp/language-reference/keywords/byte.md)</ept> array to a hexadecimal <ph id=\"ph1\">`string`</ph>.","source":"Convert a [byte](../../../csharp/language-reference/keywords/byte.md) array to a hexadecimal `string`."},{"pos":[1488,1495],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example outputs the hexadecimal value of each character in a <ph id=\"ph1\">`string`</ph>.","pos":[1499,1574],"source":"This example outputs the hexadecimal value of each character in a `string`."},{"content":"First it parses the <ph id=\"ph1\">`string`</ph> to an array of characters.","pos":[1575,1630],"source":" First it parses the `string` to an array of characters."},{"content":"Then it calls <ph id=\"ph1\">&lt;xref:System.Convert.ToInt32%28System.Char%29&gt;</ph> on each character to obtain its numeric value.","pos":[1631,1738],"source":" Then it calls <xref:System.Convert.ToInt32%28System.Char%29> on each character to obtain its numeric value."},{"content":"Finally, it formats the number as its hexadecimal representation in a <ph id=\"ph1\">`string`</ph>.","pos":[1739,1818],"source":" Finally, it formats the number as its hexadecimal representation in a `string`."},{"pos":[1825,1991],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#30<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideTypes#30](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_1.cs)]"},{"pos":[2000,2007],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example parses a <ph id=\"ph1\">`string`</ph> of hexadecimal values and outputs the character corresponding to each hexadecimal value.","pos":[2011,2130],"source":"This example parses a `string` of hexadecimal values and outputs the character corresponding to each hexadecimal value."},{"content":"First it calls the <bpt id=\"p1\">[</bpt>Split(Char<ph id=\"ph1\">\\[</ph><ph id=\"ph2\">\\]</ph>)<ept id=\"p1\">](xref:System.String.Split(System.Char[]))</ept> method to obtain each hexadecimal value as an individual <ph id=\"ph3\">`string`</ph> in an array.","pos":[2131,2287],"source":" First it calls the [Split(Char\\[\\])](xref:System.String.Split(System.Char[])) method to obtain each hexadecimal value as an individual `string` in an array."},{"content":"Then it calls <ph id=\"ph1\">&lt;xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29&gt;</ph> to convert the hexadecimal value to a decimal value represented as an <bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](../../../csharp/language-reference/keywords/int.md)</ept>. It shows two different ways to obtain the character corresponding to that character code.","pos":[2288,2584],"source":" Then it calls <xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29> to convert the hexadecimal value to a decimal value represented as an [int](../../../csharp/language-reference/keywords/int.md). It shows two different ways to obtain the character corresponding to that character code."},{"content":"The first technique uses <ph id=\"ph1\">&lt;xref:System.Char.ConvertFromUtf32%28System.Int32%29&gt;</ph>, which returns the character corresponding to the integer argument as a <ph id=\"ph2\">`string`</ph>.","pos":[2585,2745],"source":" The first technique uses <xref:System.Char.ConvertFromUtf32%28System.Int32%29>, which returns the character corresponding to the integer argument as a `string`."},{"content":"The second technique explicitly casts the <ph id=\"ph1\">`int`</ph> to a <bpt id=\"p1\">[</bpt>char<ept id=\"p1\">](../../../csharp/language-reference/keywords/char.md)</ept>.","pos":[2746,2859],"source":" The second technique explicitly casts the `int` to a [char](../../../csharp/language-reference/keywords/char.md)."},{"pos":[2866,3032],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#31<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideTypes#31](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_2.cs)]"},{"pos":[3041,3048],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3052,3235],"content":"This example shows another way to convert a hexadecimal <ph id=\"ph1\">`string`</ph> to an integer, by calling the <ph id=\"ph2\">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method.","source":"This example shows another way to convert a hexadecimal `string` to an integer, by calling the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method."},{"pos":[3242,3408],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#32<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_3.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideTypes#32](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_3.cs)]"},{"pos":[3417,3424],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3428,3701],"content":"The following example shows how to convert a hexadecimal <ph id=\"ph1\">`string`</ph> to a <bpt id=\"p1\">[</bpt>float<ept id=\"p1\">](../../../csharp/language-reference/keywords/float.md)</ept> by using the <ph id=\"ph2\">&lt;xref:System.BitConverter?displayProperty=fullName&gt;</ph> class and the <ph id=\"ph3\">&lt;xref:System.Int32.Parse%2A?displayProperty=fullName&gt;</ph> method.","source":"The following example shows how to convert a hexadecimal `string` to a [float](../../../csharp/language-reference/keywords/float.md) by using the <xref:System.BitConverter?displayProperty=fullName> class and the <xref:System.Int32.Parse%2A?displayProperty=fullName> method."},{"pos":[3708,3874],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#39<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_4.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideTypes#39](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_4.cs)]"},{"pos":[3883,3890],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3894,4100],"content":"The following example shows how to convert a <bpt id=\"p1\">[</bpt>byte<ept id=\"p1\">](../../../csharp/language-reference/keywords/byte.md)</ept> array to a hexadecimal string by using the <ph id=\"ph1\">&lt;xref:System.BitConverter?displayProperty=fullName&gt;</ph> class.","source":"The following example shows how to convert a [byte](../../../csharp/language-reference/keywords/byte.md) array to a hexadecimal string by using the <xref:System.BitConverter?displayProperty=fullName> class."},{"pos":[4107,4273],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#38<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_5.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideTypes#38](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-between-hexadecimal-strings-and-numeric-types_5.cs)]"},{"pos":[4282,4290],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](../../../standard/base-types/standard-numeric-format-strings.md)</ept><ph id=\"ph1\"> </ph>","pos":[4294,4393],"source":"[Standard Numeric Format Strings](../../../standard/base-types/standard-numeric-format-strings.md) "},{"content":"<bpt id=\"p1\">[</bpt>Types<ept id=\"p1\">](../../../csharp/programming-guide/types/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[4397,4455],"source":"[Types](../../../csharp/programming-guide/types/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Determine Whether a String Represents a Numeric Value<ept id=\"p1\">](../../../csharp/programming-guide/strings/how-to-determine-whether-a-string-represents-a-numeric-value.md)</ept>","pos":[4459,4629],"source":"[How to: Determine Whether a String Represents a Numeric Value](../../../csharp/programming-guide/strings/how-to-determine-whether-a-string-represents-a-numeric-value.md)"}]}