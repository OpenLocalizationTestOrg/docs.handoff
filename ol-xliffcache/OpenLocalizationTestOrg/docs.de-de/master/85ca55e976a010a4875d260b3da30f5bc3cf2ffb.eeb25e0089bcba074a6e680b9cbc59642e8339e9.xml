{"content":"---\ntitle: \"ETW Events in Task Parallel Library and PLINQ\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords:\n  - \"tasks, ETW events\"\nms.assetid: 87a9cff5-d86f-4e44-a06e-d12764d0dce2\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ETW Events in Task Parallel Library and PLINQ\n\nBoth the Task Parallel Library and PLINQ generate Event Trace for Windows (ETW) events that you can use to profile and troubleshoot applications by using tools such as the Windows Performance Analyzer. However, in most scenarios, the best way to profile parallel application code is to use the [Concurrency Visualizer](/visualstudio/profiling/concurrency-visualizer) in Visual Studio.\n\n## Task Parallel Library ETW Events\n\nIn the EVENT_HEADER structure, the ProviderId GUID for events generated by <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType>, <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> and <xref:System.Threading.Tasks.Parallel.Invoke%2A?displayProperty=nameWithType> is:\n\n```\n0x2e5dba47, 0xa3d2, 0x4d16, 0x8e, 0xe0, 0x66, 0x71, 0xff, 0xdc, 0xd7, 0xb5\n```\n\n### Parallel Loop Begin\n\nEVENT_DESCRIPTOR.Task = 1\n\nEVENT_DESCRIPTOR.Id = 1\n\n#### User Data\n\n|**Name**|**Type**|**Description**|\n|--------------|--------------|---------------------|\n|OriginatingTaskSchedulerID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the TaskScheduler that started the loop.|\n|OriginatingTaskID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the task that started the loop.|\n|ForkJoinContextID|<xref:System.Int32?displayProperty=nameWithType>|A unique identifier used to indicate nesting and pairs for events with fork/join semantics.|\n|OperationType|<xref:System.Int32?displayProperty=nameWithType>|Indicates the type of loop:<br /><br /> 1 = ParallelInvoke<br /><br /> 2 = ParallelFor<br /><br /> 3 = ParallelForEach|\n|InclusiveFrom|<xref:System.Int64?displayProperty=nameWithType>|The starting value of the loop counter|\n|ExclusiveTo|<xref:System.Int64?displayProperty=nameWithType>|The ending value of the loop counter|\n\n### Parallel Loop End\n EVENT_DESCRIPTOR.Task = 2\n\n EVENT_DESCRIPTOR.Id = 2\n\n#### User Data\n\n|**Name**|**Type**|**Description**|\n|--------------|--------------|---------------------|\n|OriginatingTaskSchedulerID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the TaskScheduler that started the loop.|\n|OriginatingTaskID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the task that started the loop.|\n|ForkJoinContextID|<xref:System.Int32?displayProperty=nameWithType>|A unique identifier used to indicate nesting and pairs for events with fork/join semantics.|\n|totalIterations|<xref:System.Int64?displayProperty=nameWithType>|The total number of iterations|\n\n### Parallel Invoke Begin\n EVENT_DESCRIPTOR.Task = 3\n\n EVENT_DESCRIPTOR.Id = 3\n\n#### User Data\n\n|**Name**|**Type**|**Description**|\n|--------------|--------------|---------------------|\n|OriginatingTaskSchedulerID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the TaskScheduler that started the loop.|\n|OriginatingTaskID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the task that started the loop.|\n|ForkJoinContextID|<xref:System.Int32?displayProperty=nameWithType>|A unique identifier used to indicate nesting and pairs for events with fork/join semantics.|\n|totalIterations|<xref:System.Int64?displayProperty=nameWithType>|The total number of iterations|\n|operationType|<xref:System.Int32?displayProperty=nameWithType>|Indicates the type of loop:<br /><br /> 1 = ParallelInvoke<br /><br /> 2 = ParallelFor<br /><br /> 3 = ParallelForEach|\n|ActionCount|<xref:System.Int32?displayProperty=nameWithType>|The number of actions that will be executed in the parallel invoke.|\n\n### Parallel Invoke End\n EVENT_DESCRIPTOR.Task = 4\n\n EVENT_DESCRIPTOR.Id = 4\n\n#### User Data\n\n|**Name**|**Type**|**Description**|\n|--------------|--------------|---------------------|\n|OriginatingTaskSchedulerID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the TaskScheduler that started the loop.|\n|OriginatingTaskID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the task that started the loop.|\n|ForkJoinContextID|<xref:System.Int32?displayProperty=nameWithType>|A unique identifier used to indicate nesting and pairs for events with fork/join semantics.|\n\n## PLINQ ETW Events\n The EVENT_HEADER.ProviderId GUID for PLINQ is:\n\n```\n0x159eeeec, 0x4a14, 0x4418, 0xa8, 0xfe, 0xfa, 0xab, 0xcd, 0x98, 0x78, 0x87\n```\n\n### Parallel Query Begin\n EVENT_DESCRIPTOR.Task = 1\n\n EVENT_DESCRIPTOR.Id = 1\n\n#### User Data\n\n|**Name**|**Type**|**Description**|\n|--------------|--------------|---------------------|\n|OriginatingTaskSchedulerID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the TaskScheduler that started the loop.|\n|OriginatingTaskID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the task that started the loop.|\n|QueryID|<xref:System.Int32?displayProperty=nameWithType>|A unique query identifier.|\n\n### Parallel Query End\n EVENT_DESCRIPTOR.Task = 2\n\n EVENT_DESCRIPTOR.Id = 2\n\n#### User Data\n\n|**Name**|**Type**|**Description**|\n|--------------|--------------|---------------------|\n|OriginatingTaskSchedulerID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the TaskScheduler that started the loop.|\n|OriginatingTaskID|<xref:System.Int32?displayProperty=nameWithType>|The ID of the task that started the loop.|\n|QueryID|<xref:System.Int32?displayProperty=nameWithType>|A unique query identifier.|\n\n## See also\n\n- [ETW Events in the .NET Framework](../../../docs/framework/performance/etw-events.md)\n- [Task Parallel Library (TPL)](../../../docs/standard/parallel-programming/task-parallel-library-tpl.md)\n- [Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)\n","nodes":[{"pos":[4,211],"embed":true,"restype":"x-metadata","content":"title: \"ETW Events in Task Parallel Library and PLINQ\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords:\n  - \"tasks, ETW events\"\nms.assetid: 87a9cff5-d86f-4e44-a06e-d12764d0dce2\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ETW Events in Task Parallel Library and PLINQ","nodes":[{"pos":[0,45],"content":"ETW Events in Task Parallel Library and PLINQ","nodes":[{"content":"ETW Events in Task Parallel Library and PLINQ","pos":[0,45]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[218,263],"content":"ETW Events in Task Parallel Library and PLINQ","linkify":"ETW Events in Task Parallel Library and PLINQ","nodes":[{"content":"ETW Events in Task Parallel Library and PLINQ","pos":[0,45]}]},{"content":"Both the Task Parallel Library and PLINQ generate Event Trace for Windows (ETW) events that you can use to profile and troubleshoot applications by using tools such as the Windows Performance Analyzer.","pos":[265,466]},{"content":"However, in most scenarios, the best way to profile parallel application code is to use the <bpt id=\"p1\">[</bpt>Concurrency Visualizer<ept id=\"p1\">](/visualstudio/profiling/concurrency-visualizer)</ept> in Visual Studio.","pos":[467,649],"source":" However, in most scenarios, the best way to profile parallel application code is to use the [Concurrency Visualizer](/visualstudio/profiling/concurrency-visualizer) in Visual Studio."},{"pos":[654,686],"content":"Task Parallel Library ETW Events","linkify":"Task Parallel Library ETW Events","nodes":[{"content":"Task Parallel Library ETW Events","pos":[0,32]}]},{"pos":[688,1003],"content":"In the EVENT_HEADER structure, the ProviderId GUID for events generated by <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Parallel.Invoke%2A?displayProperty=nameWithType&gt;</ph> is:","source":"In the EVENT_HEADER structure, the ProviderId GUID for events generated by <xref:System.Threading.Tasks.Parallel.For%2A?displayProperty=nameWithType>, <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> and <xref:System.Threading.Tasks.Parallel.Invoke%2A?displayProperty=nameWithType> is:"},{"pos":[1093,1112],"content":"Parallel Loop Begin","linkify":"Parallel Loop Begin","nodes":[{"content":"Parallel Loop Begin","pos":[0,19]}]},{"content":"EVENT_DESCRIPTOR.Task = 1","pos":[1114,1139]},{"content":"EVENT_DESCRIPTOR.Id = 1","pos":[1141,1164]},{"pos":[1171,1180],"content":"User Data","linkify":"User Data","nodes":[{"content":"User Data","pos":[0,9]}]},{"pos":[1183,1191],"content":"<bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>","source":"**Name**"},{"pos":[1192,1200],"content":"<bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept>","source":"**Type**"},{"pos":[1201,1216],"content":"<bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept>","source":"**Description**"},{"content":"OriginatingTaskSchedulerID","pos":[1273,1299]},{"content":"The ID of the TaskScheduler that started the loop.","pos":[1349,1399]},{"content":"OriginatingTaskID","pos":[1402,1419]},{"content":"The ID of the task that started the loop.","pos":[1469,1510]},{"content":"ForkJoinContextID","pos":[1513,1530]},{"content":"A unique identifier used to indicate nesting and pairs for events with fork/join semantics.","pos":[1580,1671]},{"content":"OperationType","pos":[1674,1687]},{"content":"Indicates the type of loop:","pos":[1737,1764]},{"content":"1 = ParallelInvoke","pos":[1777,1795]},{"content":"2 = ParallelFor","pos":[1808,1823]},{"content":"3 = ParallelForEach","pos":[1836,1855]},{"content":"InclusiveFrom","pos":[1858,1871]},{"content":"The starting value of the loop counter","pos":[1921,1959]},{"content":"ExclusiveTo","pos":[1962,1973]},{"content":"The ending value of the loop counter","pos":[2023,2059]},{"pos":[2066,2083],"content":"Parallel Loop End","linkify":"Parallel Loop End","nodes":[{"content":"Parallel Loop End","pos":[0,17]}]},{"content":"EVENT_DESCRIPTOR.Task = 2","pos":[2085,2110]},{"content":"EVENT_DESCRIPTOR.Id = 2","pos":[2113,2136]},{"pos":[2143,2152],"content":"User Data","linkify":"User Data","nodes":[{"content":"User Data","pos":[0,9]}]},{"pos":[2155,2163],"content":"<bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>","source":"**Name**"},{"pos":[2164,2172],"content":"<bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept>","source":"**Type**"},{"pos":[2173,2188],"content":"<bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept>","source":"**Description**"},{"content":"OriginatingTaskSchedulerID","pos":[2245,2271]},{"content":"The ID of the TaskScheduler that started the loop.","pos":[2321,2371]},{"content":"OriginatingTaskID","pos":[2374,2391]},{"content":"The ID of the task that started the loop.","pos":[2441,2482]},{"content":"ForkJoinContextID","pos":[2485,2502]},{"content":"A unique identifier used to indicate nesting and pairs for events with fork/join semantics.","pos":[2552,2643]},{"content":"totalIterations","pos":[2646,2661]},{"content":"The total number of iterations","pos":[2711,2741]},{"pos":[2748,2769],"content":"Parallel Invoke Begin","linkify":"Parallel Invoke Begin","nodes":[{"content":"Parallel Invoke Begin","pos":[0,21]}]},{"content":"EVENT_DESCRIPTOR.Task = 3","pos":[2771,2796]},{"content":"EVENT_DESCRIPTOR.Id = 3","pos":[2799,2822]},{"pos":[2829,2838],"content":"User Data","linkify":"User Data","nodes":[{"content":"User Data","pos":[0,9]}]},{"pos":[2841,2849],"content":"<bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>","source":"**Name**"},{"pos":[2850,2858],"content":"<bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept>","source":"**Type**"},{"pos":[2859,2874],"content":"<bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept>","source":"**Description**"},{"content":"OriginatingTaskSchedulerID","pos":[2931,2957]},{"content":"The ID of the TaskScheduler that started the loop.","pos":[3007,3057]},{"content":"OriginatingTaskID","pos":[3060,3077]},{"content":"The ID of the task that started the loop.","pos":[3127,3168]},{"content":"ForkJoinContextID","pos":[3171,3188]},{"content":"A unique identifier used to indicate nesting and pairs for events with fork/join semantics.","pos":[3238,3329]},{"content":"totalIterations","pos":[3332,3347]},{"content":"The total number of iterations","pos":[3397,3427]},{"content":"operationType","pos":[3430,3443]},{"content":"Indicates the type of loop:","pos":[3493,3520]},{"content":"1 = ParallelInvoke","pos":[3533,3551]},{"content":"2 = ParallelFor","pos":[3564,3579]},{"content":"3 = ParallelForEach","pos":[3592,3611]},{"content":"ActionCount","pos":[3614,3625]},{"content":"The number of actions that will be executed in the parallel invoke.","pos":[3675,3742]},{"pos":[3749,3768],"content":"Parallel Invoke End","linkify":"Parallel Invoke End","nodes":[{"content":"Parallel Invoke End","pos":[0,19]}]},{"content":"EVENT_DESCRIPTOR.Task = 4","pos":[3770,3795]},{"content":"EVENT_DESCRIPTOR.Id = 4","pos":[3798,3821]},{"pos":[3828,3837],"content":"User Data","linkify":"User Data","nodes":[{"content":"User Data","pos":[0,9]}]},{"pos":[3840,3848],"content":"<bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>","source":"**Name**"},{"pos":[3849,3857],"content":"<bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept>","source":"**Type**"},{"pos":[3858,3873],"content":"<bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept>","source":"**Description**"},{"content":"OriginatingTaskSchedulerID","pos":[3930,3956]},{"content":"The ID of the TaskScheduler that started the loop.","pos":[4006,4056]},{"content":"OriginatingTaskID","pos":[4059,4076]},{"content":"The ID of the task that started the loop.","pos":[4126,4167]},{"content":"ForkJoinContextID","pos":[4170,4187]},{"content":"A unique identifier used to indicate nesting and pairs for events with fork/join semantics.","pos":[4237,4328]},{"pos":[4334,4350],"content":"PLINQ ETW Events","linkify":"PLINQ ETW Events","nodes":[{"content":"PLINQ ETW Events","pos":[0,16]}]},{"content":"The EVENT_HEADER.ProviderId GUID for PLINQ is:","pos":[4352,4398]},{"pos":[4488,4508],"content":"Parallel Query Begin","linkify":"Parallel Query Begin","nodes":[{"content":"Parallel Query Begin","pos":[0,20]}]},{"content":"EVENT_DESCRIPTOR.Task = 1","pos":[4510,4535]},{"content":"EVENT_DESCRIPTOR.Id = 1","pos":[4538,4561]},{"pos":[4568,4577],"content":"User Data","linkify":"User Data","nodes":[{"content":"User Data","pos":[0,9]}]},{"pos":[4580,4588],"content":"<bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>","source":"**Name**"},{"pos":[4589,4597],"content":"<bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept>","source":"**Type**"},{"pos":[4598,4613],"content":"<bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept>","source":"**Description**"},{"content":"OriginatingTaskSchedulerID","pos":[4670,4696]},{"content":"The ID of the TaskScheduler that started the loop.","pos":[4746,4796]},{"content":"OriginatingTaskID","pos":[4799,4816]},{"content":"The ID of the task that started the loop.","pos":[4866,4907]},{"content":"QueryID","pos":[4910,4917]},{"content":"A unique query identifier.","pos":[4967,4993]},{"pos":[5000,5018],"content":"Parallel Query End","linkify":"Parallel Query End","nodes":[{"content":"Parallel Query End","pos":[0,18]}]},{"content":"EVENT_DESCRIPTOR.Task = 2","pos":[5020,5045]},{"content":"EVENT_DESCRIPTOR.Id = 2","pos":[5048,5071]},{"pos":[5078,5087],"content":"User Data","linkify":"User Data","nodes":[{"content":"User Data","pos":[0,9]}]},{"pos":[5090,5098],"content":"<bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>","source":"**Name**"},{"pos":[5099,5107],"content":"<bpt id=\"p1\">**</bpt>Type<ept id=\"p1\">**</ept>","source":"**Type**"},{"pos":[5108,5123],"content":"<bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept>","source":"**Description**"},{"content":"OriginatingTaskSchedulerID","pos":[5180,5206]},{"content":"The ID of the TaskScheduler that started the loop.","pos":[5256,5306]},{"content":"OriginatingTaskID","pos":[5309,5326]},{"content":"The ID of the task that started the loop.","pos":[5376,5417]},{"content":"QueryID","pos":[5420,5427]},{"content":"A unique query identifier.","pos":[5477,5503]},{"pos":[5509,5517],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5521,5606],"content":"<bpt id=\"p1\">[</bpt>ETW Events in the .NET Framework<ept id=\"p1\">](../../../docs/framework/performance/etw-events.md)</ept>","source":"[ETW Events in the .NET Framework](../../../docs/framework/performance/etw-events.md)"},{"pos":[5609,5712],"content":"<bpt id=\"p1\">[</bpt>Task Parallel Library (TPL)<ept id=\"p1\">](../../../docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept>","source":"[Task Parallel Library (TPL)](../../../docs/standard/parallel-programming/task-parallel-library-tpl.md)"},{"pos":[5715,5806],"content":"<bpt id=\"p1\">[</bpt>Parallel LINQ (PLINQ)<ept id=\"p1\">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>","source":"[Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)"}]}