{"content":"---\ntitle: \"How to: Create a Custom Authorization Manager for a Service | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"Windows Communication Foundation, extending\"\n  - \"OperationRequirement class\"\nms.assetid: 6214afde-44c1-4bf5-ba07-5ad6493620ea\ncaps.latest.revision: 15\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Create a Custom Authorization Manager for a Service\nThe Identity Model infrastructure in [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] supports an extensible claims-based authorization model. Claims are extracted from tokens and optionally processed by custom authorization policies and then placed into an <xref:System.IdentityModel.Policy.AuthorizationContext>. An authorization manager examines the claims in the <xref:System.IdentityModel.Policy.AuthorizationContext> to make authorization decisions.  \n  \n By default, authorization decisions are made by the <xref:System.ServiceModel.ServiceAuthorizationManager> class; however these decisions can be overridden by creating a custom authorization manager. To create a custom authorization manager, create a class that derives from <xref:System.ServiceModel.ServiceAuthorizationManager> and implement <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method. Authorization decisions are made in the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method, which returns `true` when access is granted and `false` when access is denied.  \n  \n If the authorization decision depends on the contents of the message body, use the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A> method.  \n  \n Because of performance issues, if possible you should redesign your application so that the authorization decision does not require access to the message body.  \n  \n Registration of the custom authorization manager for a service can be done in code or configuration.  \n  \n### To create a custom authorization manager  \n  \n1.  Derive a class from the <xref:System.ServiceModel.ServiceAuthorizationManager> class.  \n  \n     [!code-csharp[c_CustomAuthMgr#5](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#5)]\n     [!code-vb[c_CustomAuthMgr#5](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#5)]  \n  \n2.  Override the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%28System.ServiceModel.OperationContext%29> method.  \n  \n     Use the <xref:System.ServiceModel.OperationContext> that is passed to the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%28System.ServiceModel.OperationContext%29> method to make authorization decisions.  \n  \n     The following code example uses the <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29> method to find the custom claim `http://www.contoso.com/claims/allowedoperation` to make an authorization decision.  \n  \n     [!code-csharp[c_CustomAuthMgr#6](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#6)]\n     [!code-vb[c_CustomAuthMgr#6](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#6)]  \n  \n### To register a custom authorization manager using code  \n  \n1.  Create an instance of the custom authorization manager and assign it to the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager%2A> property.  \n  \n     The <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> can be accessed using <xref:System.ServiceModel.ServiceHostBase.Authorization%2A> property.  \n  \n     The following code example registers the `MyServiceAuthorizationManager` custom authorization manager.  \n  \n     [!code-csharp[c_CustomAuthMgr#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#4)]\n     [!code-vb[c_CustomAuthMgr#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#4)]  \n  \n### To register a custom authorization manager using configuration  \n  \n1.  Open the configuration file for the service.  \n  \n2.  Add a [\\<serviceAuthorization>](../../../../docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) to the [\\<behaviors>](../../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md).  \n  \n     To the [\\<serviceAuthorization>](../../../../docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md), add a `serviceAuthorizationManagerType` attribute and set its value to the type that represents the custom authorization manager.  \n  \n3.  Add a binding that secures the communication between the client and service.  \n  \n     The binding that is chosen for this communication determines the claims that are added to the <xref:System.IdentityModel.Policy.AuthorizationContext>, which the custom authorization manager uses to make authorization decisions. For more details about the system-provided bindings, see [System-Provided Bindings](../../../../docs/framework/wcf/system-provided-bindings.md).  \n  \n4.  Associate the behavior to a service endpoint, by adding a [\\<service>](../../../../docs/framework/configure-apps/file-schema/wcf/service.md) element and set the value of the `behaviorConfiguration` attribute to the value of the name attribute for the [\\<behavior>](../../../../docs/framework/configure-apps/file-schema/wcf/behavior-of-servicebehaviors.md) element.  \n  \n     For more information about configuring a service endpoint, see [How to: Create a Service Endpoint in Configuration](../../../../docs/framework/wcf/feature-details/how-to-create-a-service-endpoint-in-configuration.md).  \n  \n     The following code example registers the custom authorization manager `Samples.MyServiceAuthorizationManager`.  \n  \n    ```  \n    <configuration>  \n      <system.serviceModel>  \n        <services>  \n          <service   \n              name=\"Microsoft.ServiceModel.Samples.CalculatorService\"  \n              behaviorConfiguration=\"CalculatorServiceBehavior\">  \n            <host>  \n              <baseAddresses>  \n                <add baseAddress=\"http://localhost:8000/ServiceModelSamples/service\"/>  \n              </baseAddresses>  \n            </host>  \n            <endpoint address=\"\"  \n                      binding=\"wsHttpBinding_Calculator\"  \n                      contract=\"Microsoft.ServiceModel.Samples.ICalculator\" />  \n          </service>  \n        </services>  \n        <bindings>  \n          <WSHttpBinding>  \n           <binding name = \"wsHttpBinding_Calculator\">  \n             <security mode=\"Message\">  \n               <message clientCredentialType=\"Windows\"/>  \n             </security>  \n            </binding>  \n          </WSHttpBinding>  \n    </bindings>  \n        <behaviors>  \n          <serviceBehaviors>  \n            <behavior name=\"CalculatorServiceBehavior\">  \n              <serviceAuthorization serviceAuthorizationManagerType=\"Samples.MyServiceAuthorizationManager,MyAssembly\" />  \n             </behavior>  \n         </serviceBehaviors>  \n       </behaviors>  \n      </system.serviceModel>  \n    </configuration>  \n    ```  \n  \n    > [!WARNING]\n    >  Note that when you specify the serviceAuthorizationManagerType, the string must contain the fully qualified type name. a comma, and the name of the assembly in which the type is defined. If you leave out the assembly name, WCF will attempt to load the type from System.ServiceModel.dll.  \n  \n## Example  \n The following code example demonstrates a basic implementation of a <xref:System.ServiceModel.ServiceAuthorizationManager> class that includes overriding the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method. The example code examines the <xref:System.IdentityModel.Policy.AuthorizationContext> for a custom claim and returns `true` when the resource for that custom claim matches the action value from the <xref:System.ServiceModel.OperationContext>. For a more complete implementation of a <xref:System.ServiceModel.ServiceAuthorizationManager> class, see [Authorization Policy](../../../../docs/framework/wcf/samples/authorization-policy.md).  \n  \n [!code-csharp[c_CustomAuthMgr#2](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#2)]\n [!code-vb[c_CustomAuthMgr#2](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#2)]  \n  \n## See Also  \n <xref:System.ServiceModel.ServiceAuthorizationManager>   \n [Authorization Policy](../../../../docs/framework/wcf/samples/authorization-policy.md)   \n [Authorization Policy](../../../../docs/framework/wcf/samples/authorization-policy.md)","nodes":[{"pos":[4,485],"nodes":[{"content":"How to: Create a Custom Authorization Manager for a Service | Microsoft Docs","nodes":[{"pos":[0,76],"content":"How to: Create a Custom Authorization Manager for a Service | Microsoft Docs","nodes":[{"content":"How to: Create a Custom Authorization Manager for a Service | Microsoft Docs","pos":[0,76]}]}],"pos":[6,85],"yaml":true}],"content":"title: \"How to: Create a Custom Authorization Manager for a Service | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"Windows Communication Foundation, extending\"\n  - \"OperationRequirement class\"\nms.assetid: 6214afde-44c1-4bf5-ba07-5ad6493620ea\ncaps.latest.revision: 15\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","yamlblock":true},{"pos":[492,551],"content":"How to: Create a Custom Authorization Manager for a Service","linkify":"How to: Create a Custom Authorization Manager for a Service","nodes":[{"content":"How to: Create a Custom Authorization Manager for a Service","pos":[0,59]}]},{"content":"The Identity Model infrastructure in <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> supports an extensible claims-based authorization model.","pos":[552,701],"source":"The Identity Model infrastructure in [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] supports an extensible claims-based authorization model."},{"content":"Claims are extracted from tokens and optionally processed by custom authorization policies and then placed into an <ph id=\"ph1\">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph>.","pos":[702,873],"source":" Claims are extracted from tokens and optionally processed by custom authorization policies and then placed into an <xref:System.IdentityModel.Policy.AuthorizationContext>."},{"content":"An authorization manager examines the claims in the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph> to make authorization decisions.","pos":[874,1014],"source":" An authorization manager examines the claims in the <xref:System.IdentityModel.Policy.AuthorizationContext> to make authorization decisions."},{"content":"By default, authorization decisions are made by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> class; however these decisions can be overridden by creating a custom authorization manager.","pos":[1021,1220],"source":"By default, authorization decisions are made by the <xref:System.ServiceModel.ServiceAuthorizationManager> class; however these decisions can be overridden by creating a custom authorization manager."},{"content":"To create a custom authorization manager, create a class that derives from <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> and implement <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.","pos":[1221,1446],"source":" To create a custom authorization manager, create a class that derives from <xref:System.ServiceModel.ServiceAuthorizationManager> and implement <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method."},{"content":"Authorization decisions are made in the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method, which returns <ph id=\"ph2\">`true`</ph> when access is granted and <ph id=\"ph3\">`false`</ph> when access is denied.","pos":[1447,1647],"source":" Authorization decisions are made in the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method, which returns `true` when access is granted and `false` when access is denied."},{"content":"If the authorization decision depends on the contents of the message body, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A&gt;</ph> method.","pos":[1654,1814],"source":"If the authorization decision depends on the contents of the message body, use the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A> method."},{"content":"Because of performance issues, if possible you should redesign your application so that the authorization decision does not require access to the message body.","pos":[1821,1980]},{"content":"Registration of the custom authorization manager for a service can be done in code or configuration.","pos":[1987,2087]},{"pos":[2097,2137],"content":"To create a custom authorization manager","linkify":"To create a custom authorization manager","nodes":[{"content":"To create a custom authorization manager","pos":[0,40]}]},{"content":"Derive a class from the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> class.","pos":[2147,2232],"source":"Derive a class from the <xref:System.ServiceModel.ServiceAuthorizationManager> class."},{"pos":[2243,2502],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_CustomAuthMgr#5<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#5)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>c_CustomAuthMgr#5<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#5)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[c_CustomAuthMgr#5](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#5)]\n [!code-vb[c_CustomAuthMgr#5](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#5)]"},{"content":"Override the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%28System.ServiceModel.OperationContext%29&gt;</ph> method.","pos":[2512,2645],"source":"Override the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%28System.ServiceModel.OperationContext%29> method."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> that is passed to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%28System.ServiceModel.OperationContext%29&gt;</ph> method to make authorization decisions.","pos":[2656,2882],"source":"Use the <xref:System.ServiceModel.OperationContext> that is passed to the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%28System.ServiceModel.OperationContext%29> method to make authorization decisions."},{"pos":[2893,3134],"content":"The following code example uses the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29&gt;</ph> method to find the custom claim <ph id=\"ph2\">`http://www.contoso.com/claims/allowedoperation`</ph> to make an authorization decision.","source":"The following code example uses the <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29> method to find the custom claim `http://www.contoso.com/claims/allowedoperation` to make an authorization decision."},{"pos":[3145,3404],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_CustomAuthMgr#6<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#6)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>c_CustomAuthMgr#6<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#6)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[c_CustomAuthMgr#6](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#6)]\n [!code-vb[c_CustomAuthMgr#6](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#6)]"},{"pos":[3414,3467],"content":"To register a custom authorization manager using code","linkify":"To register a custom authorization manager using code","nodes":[{"content":"To register a custom authorization manager using code","pos":[0,53]}]},{"content":"Create an instance of the custom authorization manager and assign it to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager%2A&gt;</ph> property.","pos":[3477,3661],"source":"Create an instance of the custom authorization manager and assign it to the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceAuthorizationBehavior&gt;</ph> can be accessed using <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHostBase.Authorization%2A&gt;</ph> property.","pos":[3672,3835],"source":"The <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> can be accessed using <xref:System.ServiceModel.ServiceHostBase.Authorization%2A> property."},{"pos":[3846,3948],"content":"The following code example registers the <ph id=\"ph1\">`MyServiceAuthorizationManager`</ph> custom authorization manager.","source":"The following code example registers the `MyServiceAuthorizationManager` custom authorization manager."},{"pos":[3959,4218],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_CustomAuthMgr#4<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#4)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>c_CustomAuthMgr#4<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[c_CustomAuthMgr#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#4)]\n [!code-vb[c_CustomAuthMgr#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#4)]"},{"pos":[4228,4290],"content":"To register a custom authorization manager using configuration","linkify":"To register a custom authorization manager using configuration","nodes":[{"content":"To register a custom authorization manager using configuration","pos":[0,62]}]},{"content":"Open the configuration file for the service.","pos":[4300,4344]},{"pos":[4354,4571],"content":"Add a <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>serviceAuthorization&gt;<ept id=\"p1\">](../../../../docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)</ept> to the <bpt id=\"p2\">[</bpt><ph id=\"ph2\">\\&lt;</ph>behaviors&gt;<ept id=\"p2\">](../../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md)</ept>.","source":"Add a [\\<serviceAuthorization>](../../../../docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) to the [\\<behaviors>](../../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md)."},{"pos":[4582,4836],"content":"To the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>serviceAuthorization&gt;<ept id=\"p1\">](../../../../docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)</ept>, add a <ph id=\"ph2\">`serviceAuthorizationManagerType`</ph> attribute and set its value to the type that represents the custom authorization manager.","source":"To the [\\<serviceAuthorization>](../../../../docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md), add a `serviceAuthorizationManagerType` attribute and set its value to the type that represents the custom authorization manager."},{"content":"Add a binding that secures the communication between the client and service.","pos":[4846,4922]},{"content":"The binding that is chosen for this communication determines the claims that are added to the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph>, which the custom authorization manager uses to make authorization decisions.","pos":[4933,5160],"source":"The binding that is chosen for this communication determines the claims that are added to the <xref:System.IdentityModel.Policy.AuthorizationContext>, which the custom authorization manager uses to make authorization decisions."},{"content":"For more details about the system-provided bindings, see <bpt id=\"p1\">[</bpt>System-Provided Bindings<ept id=\"p1\">](../../../../docs/framework/wcf/system-provided-bindings.md)</ept>.","pos":[5161,5305],"source":" For more details about the system-provided bindings, see [System-Provided Bindings](../../../../docs/framework/wcf/system-provided-bindings.md)."},{"pos":[5315,5679],"content":"Associate the behavior to a service endpoint, by adding a <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>service&gt;<ept id=\"p1\">](../../../../docs/framework/configure-apps/file-schema/wcf/service.md)</ept> element and set the value of the <ph id=\"ph2\">`behaviorConfiguration`</ph> attribute to the value of the name attribute for the <bpt id=\"p2\">[</bpt><ph id=\"ph3\">\\&lt;</ph>behavior&gt;<ept id=\"p2\">](../../../../docs/framework/configure-apps/file-schema/wcf/behavior-of-servicebehaviors.md)</ept> element.","source":"Associate the behavior to a service endpoint, by adding a [\\<service>](../../../../docs/framework/configure-apps/file-schema/wcf/service.md) element and set the value of the `behaviorConfiguration` attribute to the value of the name attribute for the [\\<behavior>](../../../../docs/framework/configure-apps/file-schema/wcf/behavior-of-servicebehaviors.md) element."},{"pos":[5690,5907],"content":"For more information about configuring a service endpoint, see <bpt id=\"p1\">[</bpt>How to: Create a Service Endpoint in Configuration<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-create-a-service-endpoint-in-configuration.md)</ept>.","source":"For more information about configuring a service endpoint, see [How to: Create a Service Endpoint in Configuration](../../../../docs/framework/wcf/feature-details/how-to-create-a-service-endpoint-in-configuration.md)."},{"pos":[5918,6028],"content":"The following code example registers the custom authorization manager <ph id=\"ph1\">`Samples.MyServiceAuthorizationManager`</ph>.","source":"The following code example registers the custom authorization manager `Samples.MyServiceAuthorizationManager`."},{"pos":[7388,7692],"content":"[!WARNING]\nNote that when you specify the serviceAuthorizationManagerType, the string must contain the fully qualified type name. a comma, and the name of the assembly in which the type is defined. If you leave out the assembly name, WCF will attempt to load the type from System.ServiceModel.dll.","leadings":["","    >  "],"nodes":[{"content":"Note that when you specify the serviceAuthorizationManagerType, the string must contain the fully qualified type name. a comma, and the name of the assembly in which the type is defined. If you leave out the assembly name, WCF will attempt to load the type from System.ServiceModel.dll.","pos":[11,297],"nodes":[{"content":"Note that when you specify the serviceAuthorizationManagerType, the string must contain the fully qualified type name.","pos":[0,118]},{"content":"a comma, and the name of the assembly in which the type is defined.","pos":[119,186]},{"content":"If you leave out the assembly name, WCF will attempt to load the type from System.ServiceModel.dll.","pos":[187,286]}]}]},{"pos":[7701,7708],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates a basic implementation of a <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> class that includes overriding the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.","pos":[7712,7951],"source":"The following code example demonstrates a basic implementation of a <xref:System.ServiceModel.ServiceAuthorizationManager> class that includes overriding the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method."},{"content":"The example code examines the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph> for a custom claim and returns <ph id=\"ph2\">`true`</ph> when the resource for that custom claim matches the action value from the <ph id=\"ph3\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.","pos":[7952,8194],"source":" The example code examines the <xref:System.IdentityModel.Policy.AuthorizationContext> for a custom claim and returns `true` when the resource for that custom claim matches the action value from the <xref:System.ServiceModel.OperationContext>."},{"content":"For a more complete implementation of a <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> class, see <bpt id=\"p1\">[</bpt>Authorization Policy<ept id=\"p1\">](../../../../docs/framework/wcf/samples/authorization-policy.md)</ept>.","pos":[8195,8388],"source":" For a more complete implementation of a <xref:System.ServiceModel.ServiceAuthorizationManager> class, see [Authorization Policy](../../../../docs/framework/wcf/samples/authorization-policy.md)."},{"pos":[8395,8650],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_CustomAuthMgr#2<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>c_CustomAuthMgr#2<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[c_CustomAuthMgr#2](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#2)]\n [!code-vb[c_CustomAuthMgr#2](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#2)]"},{"pos":[8659,8667],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph>","pos":[8671,8725],"source":"<xref:System.ServiceModel.ServiceAuthorizationManager> "},{"content":"<bpt id=\"p1\">[</bpt>Authorization Policy<ept id=\"p1\">](../../../../docs/framework/wcf/samples/authorization-policy.md)</ept><ph id=\"ph1\"> </ph>","pos":[8730,8817],"source":"[Authorization Policy](../../../../docs/framework/wcf/samples/authorization-policy.md) "},{"content":"<bpt id=\"p1\">[</bpt>Authorization Policy<ept id=\"p1\">](../../../../docs/framework/wcf/samples/authorization-policy.md)</ept>","pos":[8821,8907],"source":"[Authorization Policy](../../../../docs/framework/wcf/samples/authorization-policy.md)"}]}