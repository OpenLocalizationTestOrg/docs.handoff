<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1fd225e8750ea3447f84476030b493082c4a769b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\filestream-data.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37864c2f8d39f57f6f6736d669f02cf9f4665efb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8de10911c6ee49d18d1ec2bb9615b1b7a4cde25a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>FILESTREAM Data | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>FILESTREAM Data</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The FILESTREAM storage attribute is for binary (BLOB) data stored in a varbinary(max) column.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Before FILESTREAM, storing binary data required special handling.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Unstructured data, such as text documents, images and video, is often stored outside of the database, making it difficult to manage.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You must install the .NET Framework 3.5 SP1 (or later) to work with FILESTREAM data using SqlClient.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Specifying the FILESTREAM attribute on a varbinary(max) column causes <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> to store the data on the local NTFS file system instead of in the database file.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Although it is stored separately, you can use the same <ph id="ph1">[!INCLUDE[tsql](../../../../../includes/tsql-md.md)]</ph> statements that are supported for working with varbinary(max) data that is stored in the database.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>SqlClient Support for FILESTREAM</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../../includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient&gt;</ph>, supports reading and writing to FILESTREAM data using the <ph id="ph4">&lt;xref:System.Data.SqlTypes.SqlFileStream&gt;</ph> class defined in the <ph id="ph5">&lt;xref:System.Data.SqlTypes&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SqlFileStream`</ph> inherits from the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which provides methods for reading and writing to streams of data.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Reading from a stream transfers data from the stream into a data structure, such as an array of bytes.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Writing transfers the data from the data structure into a stream.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creating the <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> Table</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following <ph id="ph1">[!INCLUDE[tsql](../../../../../includes/tsql-md.md)]</ph> statements creates a table named employees and inserts a row of data.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Once you have enabled FILESTREAM storage, you can use this table in conjunction with the code examples that follow.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The links to resources in <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> Books Online are located at the end of this topic.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example: Reading, Overwriting, and Inserting FILESTREAM Data</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following sample demonstrates how to read data from a FILESTREAM.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The code gets the logical path to the file, setting the <ph id="ph1">`FileAccess`</ph> to <ph id="ph2">`Read`</ph> and the <ph id="ph3">`FileOptions`</ph> to <ph id="ph4">`SequentialScan`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The code then reads the bytes from the SqlFileStream into the buffer.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The bytes are then written to the console window.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The sample also demonstrates how to write data to a FILESTREAM in which all existing data is overwritten.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The code gets the logical path to the file and creates the <ph id="ph1">`SqlFileStream`</ph>, setting the <ph id="ph2">`FileAccess`</ph> to <ph id="ph3">`Write`</ph> and the <ph id="ph4">`FileOptions`</ph> to <ph id="ph5">`SequentialScan`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A single byte is written to the <ph id="ph1">`SqlFileStream`</ph>, replacing any data in the file.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The sample also demonstrates how to write data to a FILESTREAM by using the Seek method to append data to the end of the file.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The code gets the logical path to the file and creates the <ph id="ph1">`SqlFileStream`</ph>, setting the <ph id="ph2">`FileAccess`</ph> to <ph id="ph3">`ReadWrite`</ph> and the <ph id="ph4">`FileOptions`</ph> to <ph id="ph5">`SequentialScan`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The code uses the Seek method to seek to the end of the file, appending a single byte to the existing file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For another sample, see <bpt id="p1">[</bpt>How to store and fetch binary data into a file stream column<ept id="p1">](http://www.codeproject.com/Articles/32216/How-to-store-and-fetch-binary-data-into-a-file-str)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Resources in <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> Books Online</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The complete documentation for FILESTREAM is located in the following sections in <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../../includes/ssnoversion-md.md)]</ph> Books Online.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Topic</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Designing and Implementing FILESTREAM Storage<ept id="p1">](http://msdn2.microsoft.com/library/bb895234\(SQL.105\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Provides links to FILESTREAM documentation and related topics.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>FILESTREAM Overview<ept id="p1">](http://msdn2.microsoft.com/library/bb933993\(SQL.105\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Describes when to use FILESTREAM storage and how it integrates the SQL Server Database Engine with an NTFS file system.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting Started with FILESTREAM Storage<ept id="p1">](http://msdn.microsoft.com/library/bb933995\(SQL.105\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Describes how to enable FILESTREAM on an instance of SQL Server, how to create a database and a table to stored FILESTREAM data, and how to manipulate rows containing FILESTREAM data.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using FILESTREAM Storage in Client Applications<ept id="p1">](http://msdn.microsoft.com/library/bb933877\(SQL.105\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Describes the Win32 API functions for working with FILESTREAM data.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>FILESTREAM and Other SQL Server Features<ept id="p1">](http://msdn.microsoft.com/library/bb895334\(SQL.105\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Provides considerations, guidelines and limitations for using FILESTREAM data with other features of SQL Server.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SQL Server Data Types and ADO.NET<ept id="p1">](../../../../../docs/framework/data/adonet/sql/sql-server-data-types.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Retrieving and Modifying Data in ADO.NET<ept id="p1">](../../../../../docs/framework/data/adonet/retrieving-and-modifying-data.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Code Access Security and ADO.NET<ept id="p1">](../../../../../docs/framework/data/adonet/code-access-security.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>SQL Server Binary and Large-Value Data<ept id="p1">](../../../../../docs/framework/data/adonet/sql/sql-server-binary-and-large-value-data.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>