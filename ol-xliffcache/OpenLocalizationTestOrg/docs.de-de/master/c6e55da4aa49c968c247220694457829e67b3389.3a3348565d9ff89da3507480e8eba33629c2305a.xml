{"content":"---\ntitle: \"Performing Culture-Insensitive Case Changes | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"String.ToLower method\"\n  - \"culture, case sensitivity\"\n  - \"Char.ToLower method\"\n  - \"case, changing in culture-insensitive strings\"\n  - \"Char.ToUpper method\"\n  - \"culture-insensitive string operations, case changes\"\n  - \"String.ToUpper method\"\n  - \"culture parameter\"\nms.assetid: 822d551c-c69a-4191-82f4-183d82c9179c\ncaps.latest.revision: 18\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# Performing Culture-Insensitive Case Changes\nThe <xref:System.String.ToUpper%2A?displayProperty=fullName>, <xref:System.String.ToLower%2A?displayProperty=fullName>, <xref:System.Char.ToUpper%2A?displayProperty=fullName>, and <xref:System.Char.ToLower%2A?displayProperty=fullName> methods provide overloads that do not accept any parameters. By default, these overloads without parameters perform case changes based on the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>. This produces case-sensitive results that can vary by culture. To make it clear whether you want case changes to be culture-sensitive or culture-insensitive, you should use the overloads of these methods that require you to explicitly specify a `culture` parameter. For culture-sensitive case changes, specify `CultureInfo.CurrentCulture` for the `culture` parameter. For culture-insensitive case changes, specify `CultureInfo.InvariantCulture` for the `culture` parameter.  \n  \n Often, strings are converted to a standard case to enable easier lookup later. When strings are used in this way, you should specify `CultureInfo.InvariantCulture` for the `culture` parameter, because the value of <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> can potentially change between the time that the case is changed and the time that the lookup occurs.  \n  \n If a security decision is based on a case change operation, the operation should be culture-insensitive to ensure that the result is not affected by the value of `CultureInfo.CurrentCulture`. See the \"String Comparisons that Use the Current Culture\" section of the [Best Practices for Using Strings](../../../docs/standard/base-types/best-practices-strings.md) article for an example that demonstrates how culture-sensitive string operations can produce inconsistent results.  \n  \n## Using the String.ToUpper and String.ToLower Methods  \n For code clarity, it is recommended that you always use overloads of the `String.ToUpper` and `String.ToLower` methods that allow you to specify a `culture` parameter explicitly. For example, the following code performs an identifier lookup. The `key.ToLower` operation is culture-sensitive by default, but this behavior is not clear from reading the code.  \n  \n### Example  \n  \n```vb  \nShared Function LookupKey(key As String) As Object  \n   Return internalHashtable(key.ToLower())  \nEnd Function  \n  \n```  \n  \n```csharp  \nstatic object LookupKey(string key)   \n{  \n    return internalHashtable[key.ToLower()];  \n}  \n```  \n  \n If you want the `key.ToLower` operation to be culture-insensitive, you should change the preceding example as follows to explicitly use the `CultureInfo.InvariantCulture` when changing the case.  \n  \n```vb  \nShared Function LookupKey(key As String) As Object  \n    Return internalHashtable(key.ToLower(CultureInfo.InvariantCulture))  \nEnd Function  \n  \n```  \n  \n```csharp  \nstatic object LookupKey(string key)   \n{  \n    return internalHashtable[key.ToLower(CultureInfo.InvariantCulture)];  \n}  \n```  \n  \n## Using the Char.ToUpper and Char.ToLower Methods  \n Although the `Char.ToUpper` and `Char.ToLower` methods have the same characteristics as the `String.ToUpper` and `String.ToLower` methods, the only cultures that are affected are Turkish (Turkey) and Azerbaijani (Latin, Azerbaijan). These are the only two cultures with single-character casing differences. For more details about this unique case mapping, see the \"Casing\" section in the <xref:System.String> class topic. For code clarity and to ensure consistent results, it is recommended that you always use the overloads of these methods that allow you to explicitly specify a `culture` parameter.  \n  \n## See Also  \n <xref:System.String.ToUpper%2A?displayProperty=fullName>   \n <xref:System.String.ToLower%2A?displayProperty=fullName>   \n <xref:System.Char.ToUpper%2A?displayProperty=fullName>   \n <xref:System.Char.ToLower%2A?displayProperty=fullName>   \n [Performing Culture-Insensitive String Operations](../../../docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)","nodes":[{"pos":[12,72],"content":"Performing Culture-Insensitive Case Changes | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Performing Culture-Insensitive Case Changes | Microsoft Docs","pos":[0,60]}]},{"pos":[660,703],"content":"Performing Culture-Insensitive Case Changes","linkify":"Performing Culture-Insensitive Case Changes","nodes":[{"content":"Performing Culture-Insensitive Case Changes","pos":[0,43]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.String.ToUpper%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.String.ToLower%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Char.ToUpper%2A?displayProperty=fullName&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Char.ToLower%2A?displayProperty=fullName&gt;</ph> methods provide overloads that do not accept any parameters.","pos":[704,999],"source":"The <xref:System.String.ToUpper%2A?displayProperty=fullName>, <xref:System.String.ToLower%2A?displayProperty=fullName>, <xref:System.Char.ToUpper%2A?displayProperty=fullName>, and <xref:System.Char.ToLower%2A?displayProperty=fullName> methods provide overloads that do not accept any parameters."},{"content":"By default, these overloads without parameters perform case changes based on the value of the <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.","pos":[1000,1177],"source":" By default, these overloads without parameters perform case changes based on the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>."},{"content":"This produces case-sensitive results that can vary by culture.","pos":[1178,1240]},{"content":"To make it clear whether you want case changes to be culture-sensitive or culture-insensitive, you should use the overloads of these methods that require you to explicitly specify a <ph id=\"ph1\">`culture`</ph> parameter.","pos":[1241,1443],"source":" To make it clear whether you want case changes to be culture-sensitive or culture-insensitive, you should use the overloads of these methods that require you to explicitly specify a `culture` parameter."},{"content":"For culture-sensitive case changes, specify <ph id=\"ph1\">`CultureInfo.CurrentCulture`</ph> for the <ph id=\"ph2\">`culture`</ph> parameter.","pos":[1444,1545],"source":" For culture-sensitive case changes, specify `CultureInfo.CurrentCulture` for the `culture` parameter."},{"content":"For culture-insensitive case changes, specify <ph id=\"ph1\">`CultureInfo.InvariantCulture`</ph> for the <ph id=\"ph2\">`culture`</ph> parameter.","pos":[1546,1651],"source":" For culture-insensitive case changes, specify `CultureInfo.InvariantCulture` for the `culture` parameter."},{"content":"Often, strings are converted to a standard case to enable easier lookup later.","pos":[1658,1736]},{"content":"When strings are used in this way, you should specify <ph id=\"ph1\">`CultureInfo.InvariantCulture`</ph> for the <ph id=\"ph2\">`culture`</ph> parameter, because the value of <ph id=\"ph3\">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt;</ph> can potentially change between the time that the case is changed and the time that the lookup occurs.","pos":[1737,2047],"source":" When strings are used in this way, you should specify `CultureInfo.InvariantCulture` for the `culture` parameter, because the value of <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> can potentially change between the time that the case is changed and the time that the lookup occurs."},{"content":"If a security decision is based on a case change operation, the operation should be culture-insensitive to ensure that the result is not affected by the value of <ph id=\"ph1\">`CultureInfo.CurrentCulture`</ph>.","pos":[2054,2245],"source":"If a security decision is based on a case change operation, the operation should be culture-insensitive to ensure that the result is not affected by the value of `CultureInfo.CurrentCulture`."},{"content":"See the \"String Comparisons that Use the Current Culture\" section of the <bpt id=\"p1\">[</bpt>Best Practices for Using Strings<ept id=\"p1\">](../../../docs/standard/base-types/best-practices-strings.md)</ept> article for an example that demonstrates how culture-sensitive string operations can produce inconsistent results.","pos":[2246,2529],"source":" See the \"String Comparisons that Use the Current Culture\" section of the [Best Practices for Using Strings](../../../docs/standard/base-types/best-practices-strings.md) article for an example that demonstrates how culture-sensitive string operations can produce inconsistent results."},{"pos":[2538,2589],"content":"Using the String.ToUpper and String.ToLower Methods","linkify":"Using the String.ToUpper and String.ToLower Methods","nodes":[{"content":"Using the String.ToUpper and String.ToLower Methods","pos":[0,51]}]},{"content":"For code clarity, it is recommended that you always use overloads of the <ph id=\"ph1\">`String.ToUpper`</ph> and <ph id=\"ph2\">`String.ToLower`</ph> methods that allow you to specify a <ph id=\"ph3\">`culture`</ph> parameter explicitly.","pos":[2593,2771],"source":"For code clarity, it is recommended that you always use overloads of the `String.ToUpper` and `String.ToLower` methods that allow you to specify a `culture` parameter explicitly."},{"content":"For example, the following code performs an identifier lookup.","pos":[2772,2834]},{"content":"The <ph id=\"ph1\">`key.ToLower`</ph> operation is culture-sensitive by default, but this behavior is not clear from reading the code.","pos":[2835,2949],"source":" The `key.ToLower` operation is culture-sensitive by default, but this behavior is not clear from reading the code."},{"pos":[2959,2966],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3221,3415],"content":"If you want the <ph id=\"ph1\">`key.ToLower`</ph> operation to be culture-insensitive, you should change the preceding example as follows to explicitly use the <ph id=\"ph2\">`CultureInfo.InvariantCulture`</ph> when changing the case.","source":"If you want the `key.ToLower` operation to be culture-insensitive, you should change the preceding example as follows to explicitly use the `CultureInfo.InvariantCulture` when changing the case."},{"pos":[3729,3776],"content":"Using the Char.ToUpper and Char.ToLower Methods","linkify":"Using the Char.ToUpper and Char.ToLower Methods","nodes":[{"content":"Using the Char.ToUpper and Char.ToLower Methods","pos":[0,47]}]},{"content":"Although the <ph id=\"ph1\">`Char.ToUpper`</ph> and <ph id=\"ph2\">`Char.ToLower`</ph> methods have the same characteristics as the <ph id=\"ph3\">`String.ToUpper`</ph> and <ph id=\"ph4\">`String.ToLower`</ph> methods, the only cultures that are affected are Turkish (Turkey) and Azerbaijani (Latin, Azerbaijan).","pos":[3780,4012],"source":"Although the `Char.ToUpper` and `Char.ToLower` methods have the same characteristics as the `String.ToUpper` and `String.ToLower` methods, the only cultures that are affected are Turkish (Turkey) and Azerbaijani (Latin, Azerbaijan)."},{"content":"These are the only two cultures with single-character casing differences.","pos":[4013,4086]},{"content":"For more details about this unique case mapping, see the \"Casing\" section in the <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> class topic.","pos":[4087,4201],"source":" For more details about this unique case mapping, see the \"Casing\" section in the <xref:System.String> class topic."},{"content":"For code clarity and to ensure consistent results, it is recommended that you always use the overloads of these methods that allow you to explicitly specify a <ph id=\"ph1\">`culture`</ph> parameter.","pos":[4202,4381],"source":" For code clarity and to ensure consistent results, it is recommended that you always use the overloads of these methods that allow you to explicitly specify a `culture` parameter."},{"pos":[4390,4398],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.String.ToUpper%2A?displayProperty=fullName&gt;</ph>","pos":[4402,4458],"source":"<xref:System.String.ToUpper%2A?displayProperty=fullName> "},{"content":"<ph id=\"ph1\">&lt;xref:System.String.ToLower%2A?displayProperty=fullName&gt;</ph>","pos":[4463,4519],"source":" <xref:System.String.ToLower%2A?displayProperty=fullName> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Char.ToUpper%2A?displayProperty=fullName&gt;</ph>","pos":[4524,4578],"source":" <xref:System.Char.ToUpper%2A?displayProperty=fullName> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Char.ToLower%2A?displayProperty=fullName&gt;</ph>","pos":[4583,4637],"source":" <xref:System.Char.ToLower%2A?displayProperty=fullName> "},{"content":"<bpt id=\"p1\"> [</bpt>Performing Culture-Insensitive String Operations<ept id=\"p1\">](../../../docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)</ept>","pos":[4641,4795],"source":" [Performing Culture-Insensitive String Operations](../../../docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)"}]}