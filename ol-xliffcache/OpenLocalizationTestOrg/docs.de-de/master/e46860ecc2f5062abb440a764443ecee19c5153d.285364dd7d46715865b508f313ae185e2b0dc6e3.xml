{"content":"---\ntitle: \"How to: Display Command Line Arguments (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"command-line arguments [C#], displaying\"\nms.assetid: b8479f2d-9e05-4d38-82da-2e61246e5437\ncaps.latest.revision: 19\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Display Command Line Arguments (C# Programming Guide)\nArguments provided to an executable on the command-line are accessible through an optional parameter to `Main`. The arguments are provided in the form of an array of strings. Each element of the array contains one argument. White-space between arguments is removed. For example, consider these command-line invocations of a fictitious executable:  \n  \n|Input on Command-line|Array of strings passed to Main|  \n|----------------------------|-------------------------------------|  \n|**executable.exe a b c**|\"a\"<br /><br /> \"b\"<br /><br /> \"c\"|  \n|**executable.exe one two**|\"one\"<br /><br /> \"two\"|  \n|**executable.exe \"one two\" three**|\"one two\"<br /><br /> \"three\"|  \n  \n> [!NOTE]\n>  When you are running an application in Visual Studio, you can specify command-line arguments in the [Debug Page, Project Designer](https://docs.microsoft.com/visualstudio/ide/reference/debug-page-project-designer).  \n  \n## Example  \n This example displays the command line arguments passed to a command-line application. The output shown is for the first entry in the table above.  \n  \n [!code-cs[csProgGuideMain#9](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/how-to-display-command-line-arguments_1.cs)]  \n  \n## See Also  \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)   \n [Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md)   \n [How to: Access Command-Line Arguments Using foreach](../../../csharp/programming-guide/main-and-command-args/how-to-access-command-line-arguments-using-foreach.md)   \n [Main() Return Values](../../../csharp/programming-guide/main-and-command-args/main-return-values.md)","nodes":[{"pos":[4,579],"embed":true,"restype":"x-metadata","content":"title: \"How to: Display Command Line Arguments (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"command-line arguments [C#], displaying\"\nms.assetid: b8479f2d-9e05-4d38-82da-2e61246e5437\ncaps.latest.revision: 19\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"How to: Display Command Line Arguments (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,78],"content":"How to: Display Command Line Arguments (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"How to: Display Command Line Arguments (C# Programming Guide) | Microsoft Docs","pos":[0,78]}]}],"path":["title"]}],"yml":true},{"pos":[586,647],"content":"How to: Display Command Line Arguments (C# Programming Guide)","linkify":"How to: Display Command Line Arguments (C# Programming Guide)","nodes":[{"content":"How to: Display Command Line Arguments (C# Programming Guide)","pos":[0,61]}]},{"content":"Arguments provided to an executable on the command-line are accessible through an optional parameter to <ph id=\"ph1\">`Main`</ph>.","pos":[648,759],"source":"Arguments provided to an executable on the command-line are accessible through an optional parameter to `Main`."},{"content":"The arguments are provided in the form of an array of strings.","pos":[760,822]},{"content":"Each element of the array contains one argument.","pos":[823,871]},{"content":"White-space between arguments is removed.","pos":[872,913]},{"content":"For example, consider these command-line invocations of a fictitious executable:","pos":[914,994]},{"content":"Input on Command-line","pos":[1001,1022]},{"content":"Array of strings passed to Main","pos":[1023,1054]},{"pos":[1130,1154],"content":"<bpt id=\"p1\">**</bpt>executable.exe a b c<ept id=\"p1\">**</ept>","source":"**executable.exe a b c**"},{"content":"\"a\"","pos":[1155,1158]},{"content":"\"b\"","pos":[1171,1174]},{"content":"\"c\"","pos":[1187,1190]},{"pos":[1195,1221],"content":"<bpt id=\"p1\">**</bpt>executable.exe one two<ept id=\"p1\">**</ept>","source":"**executable.exe one two**"},{"content":"\"one\"","pos":[1222,1227]},{"content":"\"two\"","pos":[1240,1245]},{"pos":[1250,1284],"content":"<bpt id=\"p1\">**</bpt>executable.exe \"one two\" three<ept id=\"p1\">**</ept>","source":"**executable.exe \"one two\" three**"},{"content":"\"one two\"","pos":[1285,1294]},{"content":"\"three\"","pos":[1307,1314]},{"pos":[1323,1548],"content":"[!NOTE]\n When you are running an application in Visual Studio, you can specify command-line arguments in the [Debug Page, Project Designer](https://docs.microsoft.com/visualstudio/ide/reference/debug-page-project-designer).","leadings":["","> "],"nodes":[{"content":"When you are running an application in Visual Studio, you can specify command-line arguments in the <bpt id=\"p1\">[</bpt>Debug Page, Project Designer<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/ide/reference/debug-page-project-designer)</ept>.","pos":[9,223],"source":"When you are running an application in Visual Studio, you can specify command-line arguments in the [Debug Page, Project Designer](https://docs.microsoft.com/visualstudio/ide/reference/debug-page-project-designer)."}]},{"pos":[1557,1564],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example displays the command line arguments passed to a command-line application.","pos":[1568,1654]},{"content":"The output shown is for the first entry in the table above.","pos":[1655,1714]},{"pos":[1873,1881],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1885,1952],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Command-line Building With csc.exe<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept><ph id=\"ph1\"> </ph>","pos":[1956,2084],"source":"[Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md) "},{"content":"<bpt id=\"p1\">[</bpt>Main() and Command-Line Arguments<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2088,2190],"source":"[Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Access Command-Line Arguments Using foreach<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/how-to-access-command-line-arguments-using-foreach.md)</ept><ph id=\"ph1\"> </ph>","pos":[2194,2359],"source":"[How to: Access Command-Line Arguments Using foreach](../../../csharp/programming-guide/main-and-command-args/how-to-access-command-line-arguments-using-foreach.md) "},{"content":"<bpt id=\"p1\">[</bpt>Main() Return Values<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/main-return-values.md)</ept>","pos":[2363,2464],"source":"[Main() Return Values](../../../csharp/programming-guide/main-and-command-args/main-return-values.md)"}]}