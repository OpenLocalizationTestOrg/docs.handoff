{"content":"---\ntitle: \"Updating Data in a Data Source | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 55c545e5-dcd5-4323-a5b9-3825c2157462\ncaps.latest.revision: 4\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Updating Data in a Data Source\nSQL statements that modify data (such as INSERT, UPDATE, or DELETE) do not return rows. Similarly, many stored procedures perform an action but do not return rows. To execute commands that do not return rows, create a **Command** object with the appropriate SQL command and a **Connection**, including any required **Parameters**. Execute the command with the **ExecuteNonQuery** method of the **Command** object.  \n  \n The **ExecuteNonQuery** method returns an integer that represents the number of rows affected by the statement or stored procedure that was executed. If multiple statements are executed, the value returned is the sum of the records affected by all of the statements executed.  \n  \n## Example  \n The following code example executes an INSERT statement to insert a record into a database using **ExecuteNonQuery**.  \n  \n```vb  \n' Assumes connection is a valid SqlConnection.  \nconnection.Open()  \n  \nDim queryString As String = \"INSERT INTO Customers \" & _  \n  \"(CustomerID, CompanyName) Values('NWIND', 'Northwind Traders')\"  \n  \nDim command As SqlCommand = New SqlCommand(queryString, connection)  \nDim recordsAffected As Int32 = command.ExecuteNonQuery()  \n```  \n  \n```csharp  \n// Assumes connection is a valid SqlConnection.  \nconnection.Open();  \n  \nstring queryString = \"INSERT INTO Customers \" +  \n  \"(CustomerID, CompanyName) Values('NWIND', 'Northwind Traders')\";  \n  \nSqlCommand command = new SqlCommand(queryString, connection);  \nInt32 recordsAffected = command.ExecuteNonQuery();  \n```  \n  \n The following code example executes the stored procedure created by the sample code in [Performing Catalog Operations](../../../../docs/framework/data/adonet/performing-catalog-operations.md). No rows are returned by the stored procedure, so the **ExecuteNonQuery** method is used, but the stored procedure does receive an input parameter and returns an output parameter and a return value.  \n  \n For the <xref:System.Data.OleDb.OleDbCommand> object, the **ReturnValue** parameter must be added to the **Parameters** collection first.  \n  \n```vb  \n' Assumes connection is a valid SqlConnection.  \nDim command As SqlCommand = _  \n   New SqlCommand(\"InsertCategory\" , connection)  \ncommand.CommandType = CommandType.StoredProcedure  \n  \nDim parameter As SqlParameter = _  \n command.Parameters.Add(\"@RowCount\", SqlDbType.Int)  \nparameter.Direction = ParameterDirection.ReturnValue  \n  \nparameter = command.Parameters.Add( _  \n  \"@CategoryName\", SqlDbType.NChar, 15)  \n  \nparameter = command.Parameters.Add(\"@Identity\", SqlDbType.Int)  \nparameter.Direction = ParameterDirection.Output  \n  \ncommand.Parameters(\"@CategoryName\").Value = \"New Category\"  \ncommand.ExecuteNonQuery()  \n  \nDim categoryID As Int32 = CInt(command.Parameters(\"@Identity\").Value)  \nDim rowCount As Int32 = CInt(command.Parameters(\"@RowCount\").Value)   \n```  \n  \n```csharp  \n// Assumes connection is a valid SqlConnection.  \nSqlCommand command = new SqlCommand(\"InsertCategory\" , connection);  \ncommand.CommandType = CommandType.StoredProcedure;  \n  \nSqlParameter parameter = command.Parameters.Add(  \n  \"@RowCount\", SqlDbType.Int);  \nparameter.Direction = ParameterDirection.ReturnValue;  \n  \nparameter = command.Parameters.Add(  \n  \"@CategoryName\", SqlDbType.NChar, 15);  \n  \nparameter = command.Parameters.Add(\"@Identity\", SqlDbType.Int);  \nparameter.Direction = ParameterDirection.Output;  \n  \ncommand.Parameters[\"@CategoryName\"].Value = \"New Category\";  \ncommand.ExecuteNonQuery();  \n  \nInt32 categoryID = (Int32) command.Parameters[\"@Identity\"].Value;  \nInt32 rowCount = (Int32) command.Parameters[\"@RowCount\"].Value;  \n```  \n  \n## See Also  \n [Using Commands to Modify Data](../../../../docs/framework/data/adonet/using-commands-to-modify-data.md)   \n [Updating Data Sources with DataAdapters](../../../../docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)   \n [Commands and Parameters](../../../../docs/framework/data/adonet/commands-and-parameters.md)   \n [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)","nodes":[{"pos":[4,361],"nodes":[{"content":"Updating Data in a Data Source | Microsoft Docs","nodes":[{"pos":[0,47],"content":"Updating Data in a Data Source | Microsoft Docs","nodes":[{"content":"Updating Data in a Data Source | Microsoft Docs","pos":[0,47]}]}],"pos":[6,56],"yaml":true}],"content":"title: \"Updating Data in a Data Source | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 55c545e5-dcd5-4323-a5b9-3825c2157462\ncaps.latest.revision: 4\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","yamlblock":true},{"pos":[368,398],"content":"Updating Data in a Data Source","linkify":"Updating Data in a Data Source","nodes":[{"content":"Updating Data in a Data Source","pos":[0,30]}]},{"content":"SQL statements that modify data (such as INSERT, UPDATE, or DELETE) do not return rows.","pos":[399,486]},{"content":"Similarly, many stored procedures perform an action but do not return rows.","pos":[487,562]},{"content":"To execute commands that do not return rows, create a <bpt id=\"p1\">**</bpt>Command<ept id=\"p1\">**</ept> object with the appropriate SQL command and a <bpt id=\"p2\">**</bpt>Connection<ept id=\"p2\">**</ept>, including any required <bpt id=\"p3\">**</bpt>Parameters<ept id=\"p3\">**</ept>.","pos":[563,729],"source":" To execute commands that do not return rows, create a **Command** object with the appropriate SQL command and a **Connection**, including any required **Parameters**."},{"content":"Execute the command with the <bpt id=\"p1\">**</bpt>ExecuteNonQuery<ept id=\"p1\">**</ept> method of the <bpt id=\"p2\">**</bpt>Command<ept id=\"p2\">**</ept> object.","pos":[730,812],"source":" Execute the command with the **ExecuteNonQuery** method of the **Command** object."},{"content":"The <bpt id=\"p1\">**</bpt>ExecuteNonQuery<ept id=\"p1\">**</ept> method returns an integer that represents the number of rows affected by the statement or stored procedure that was executed.","pos":[819,968],"source":"The **ExecuteNonQuery** method returns an integer that represents the number of rows affected by the statement or stored procedure that was executed."},{"content":"If multiple statements are executed, the value returned is the sum of the records affected by all of the statements executed.","pos":[969,1094]},{"pos":[1103,1110],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1114,1231],"content":"The following code example executes an INSERT statement to insert a record into a database using <bpt id=\"p1\">**</bpt>ExecuteNonQuery<ept id=\"p1\">**</ept>.","source":"The following code example executes an INSERT statement to insert a record into a database using **ExecuteNonQuery**."},{"content":"The following code example executes the stored procedure created by the sample code in <bpt id=\"p1\">[</bpt>Performing Catalog Operations<ept id=\"p1\">](../../../../docs/framework/data/adonet/performing-catalog-operations.md)</ept>.","pos":[1922,2114],"source":"The following code example executes the stored procedure created by the sample code in [Performing Catalog Operations](../../../../docs/framework/data/adonet/performing-catalog-operations.md)."},{"content":"No rows are returned by the stored procedure, so the <bpt id=\"p1\">**</bpt>ExecuteNonQuery<ept id=\"p1\">**</ept> method is used, but the stored procedure does receive an input parameter and returns an output parameter and a return value.","pos":[2115,2312],"source":" No rows are returned by the stored procedure, so the **ExecuteNonQuery** method is used, but the stored procedure does receive an input parameter and returns an output parameter and a return value."},{"pos":[2319,2456],"content":"For the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object, the <bpt id=\"p1\">**</bpt>ReturnValue<ept id=\"p1\">**</ept> parameter must be added to the <bpt id=\"p2\">**</bpt>Parameters<ept id=\"p2\">**</ept> collection first.","source":"For the <xref:System.Data.OleDb.OleDbCommand> object, the **ReturnValue** parameter must be added to the **Parameters** collection first."},{"pos":[4027,4035],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Using Commands to Modify Data<ept id=\"p1\">](../../../../docs/framework/data/adonet/using-commands-to-modify-data.md)</ept><ph id=\"ph1\"> </ph>","pos":[4039,4144],"source":"[Using Commands to Modify Data](../../../../docs/framework/data/adonet/using-commands-to-modify-data.md) "},{"content":"<bpt id=\"p1\">[</bpt>Updating Data Sources with DataAdapters<ept id=\"p1\">](../../../../docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept><ph id=\"ph1\"> </ph>","pos":[4148,4273],"source":"[Updating Data Sources with DataAdapters](../../../../docs/framework/data/adonet/updating-data-sources-with-dataadapters.md) "},{"content":"<bpt id=\"p1\">[</bpt>Commands and Parameters<ept id=\"p1\">](../../../../docs/framework/data/adonet/commands-and-parameters.md)</ept><ph id=\"ph1\"> </ph>","pos":[4277,4370],"source":"[Commands and Parameters](../../../../docs/framework/data/adonet/commands-and-parameters.md) "},{"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept>","pos":[4374,4477],"source":"[ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)"}]}