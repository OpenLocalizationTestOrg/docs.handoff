{"content":"---\ntitle: \"Compiler Error CS1941\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS1941\"\nhelpviewer_keywords: \n  - \"CS1941\"\nms.assetid: 503054d6-9553-4a2a-9b68-4ccfdeccca22\n---\n# Compiler Error CS1941\n\nThe type of one of the expressions in the 'clause' clause is incorrect. Type inference failed in the call to 'method'.  \n  \nType inference in query expressions flows from the type of the elements in the data source(s).  \n  \n## To correct this error\n  \n1. If it is not immediately obvious why the error is occurring, examine the query carefully and trace the type of the result of each clause from the data source to the point where the error is occurring.  \n  \n## Example\n\nThe following code generates CS1941 because the `equals` operator is being asked to compare an `int` to a `string`.  \n\n```csharp\n// cs1941.cs  \nusing System.Collections;  \nusing System.Linq;  \nclass Test  \n{  \n    static int Main()  \n    {  \n        var nums = new[] { 1, 2, 3, 4, 5, 6 };  \n        var words = new string[] { \"lake\", \"mountain\", \"sky\" };  \n        IEnumerable e = from n in nums  \n                        join w in words on n equals w // CS1941  \n                        select w;  \n        return 0;  \n    }  \n}  \n```\n\nThe method in which type inference fails is the method that the query clause is translated to at compile time.  \n  \n## See also\n\n- [LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)\n- [Type Relationships in LINQ Query Operations](../../../csharp/programming-guide/concepts/linq/type-relationships-in-linq-query-operations.md)\n","nodes":[{"pos":[4,165],"embed":true,"restype":"x-metadata","content":"title: \"Compiler Error CS1941\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS1941\"\nhelpviewer_keywords: \n  - \"CS1941\"\nms.assetid: 503054d6-9553-4a2a-9b68-4ccfdeccca22","nodes":[{"content":"Compiler Error CS1941","nodes":[{"pos":[0,21],"content":"Compiler Error CS1941","nodes":[{"content":"Compiler Error CS1941","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[172,193],"content":"Compiler Error CS1941","linkify":"Compiler Error CS1941","nodes":[{"content":"Compiler Error CS1941","pos":[0,21]}]},{"content":"The type of one of the expressions in the 'clause' clause is incorrect.","pos":[195,266]},{"content":"Type inference failed in the call to 'method'.","pos":[267,313]},{"content":"Type inference in query expressions flows from the type of the elements in the data source(s).","pos":[319,413]},{"pos":[422,443],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If it is not immediately obvious why the error is occurring, examine the query carefully and trace the type of the result of each clause from the data source to the point where the error is occurring.","pos":[450,650]},{"pos":[659,666],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[668,783],"content":"The following code generates CS1941 because the <ph id=\"ph1\">`equals`</ph> operator is being asked to compare an <ph id=\"ph2\">`int`</ph> to a <ph id=\"ph3\">`string`</ph>.","source":"The following code generates CS1941 because the `equals` operator is being asked to compare an `int` to a `string`."},{"content":"The method in which type inference fails is the method that the query clause is translated to at compile time.","pos":[1205,1315]},{"pos":[1324,1332],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1336,1427],"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](../../../csharp/programming-guide/linq-query-expressions/index.md)</ept>","source":"[LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)"},{"pos":[1430,1571],"content":"<bpt id=\"p1\">[</bpt>Type Relationships in LINQ Query Operations<ept id=\"p1\">](../../../csharp/programming-guide/concepts/linq/type-relationships-in-linq-query-operations.md)</ept>","source":"[Type Relationships in LINQ Query Operations](../../../csharp/programming-guide/concepts/linq/type-relationships-in-linq-query-operations.md)"}]}