<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41c42aa5948afe80c811b3e8fe9c7831551b6a69</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\tools\sn-exe-strong-name-tool.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5952229f92c5c93fa002631c6325f49d9e30e60b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc58e8844fd93bfaeeaa9a41b0bbb1407ab36874</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Sn.exe (Strong Name Tool) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sn.exe (Strong Name Tool)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Strong Name tool (Sn.exe) helps sign assemblies with <bpt id="p1">[</bpt>strong names<ept id="p1">](../../../docs/framework/app-domains/strong-named-assemblies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Sn.exe provides options for key management, signature generation, and signature verification.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information on strong naming and strong-named assemblies, see <bpt id="p1">[</bpt>Strong-Named Assemblies<ept id="p1">](../../../docs/framework/app-domains/strong-named-assemblies.md)</ept> and <bpt id="p2">[</bpt>How to: Sign an Assembly with a Strong Name<ept id="p2">](../../../docs/framework/app-domains/how-to-sign-an-assembly-with-a-strong-name.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Strong Name tool is automatically installed with Visual Studio.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To start the tool, use the Developer Command Prompt (or the Visual Studio Command Prompt in Windows 7).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Command Prompts<ept id="p1">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>On 64-bit computers, run the 32-bit version of Sn.exe by using the Visual Studio Command Prompt and the 64-bit version by using the Visual Studio x64 Win64 Command Prompt.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>At the command prompt, type the following:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-a<ept id="p1">**</ept> <bpt id="p2">*</bpt>identityKeyPairFile<ept id="p2">*</ept> <bpt id="p3">*</bpt>signaturePublicKeyFile<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Generates <ph id="ph1">&lt;xref:System.Reflection.AssemblySignatureKeyAttribute&gt;</ph> data to migrate the identity key to the signature key from a file.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-ac<ept id="p1">**</ept> <bpt id="p2">*</bpt>identityPublicKeyFile<ept id="p2">*</ept> <bpt id="p3">*</bpt>identityKeyPairContainer<ept id="p3">*</ept> <bpt id="p4">*</bpt>signaturePublicKeyFile<ept id="p4">*</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Generates <ph id="ph1">&lt;xref:System.Reflection.AssemblySignatureKeyAttribute&gt;</ph> data to migrate the identity key to the signature key from a key container.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-c<ept id="p1">**</ept> [<bpt id="p2">*</bpt>csp<ept id="p2">*</ept>]</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Sets the default cryptographic service provider (CSP) to use for strong name signing.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This setting applies to the entire computer.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you do not specify a CSP name, Sn.exe clears the current setting.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-d<ept id="p1">**</ept> <bpt id="p2">*</bpt>container<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Deletes the specified key container from the strong name CSP.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-D<ept id="p1">**</ept>  <bpt id="p2">*</bpt>assembly1 assembly2<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Verifies that two assemblies differ only by signature.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This is often used as a check after an assembly has been re-signed with a different key pair.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-e<ept id="p1">**</ept>  <bpt id="p2">*</bpt>assembly outfile<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Extracts the public key from <bpt id="p1">*</bpt>assembly<ept id="p1">*</ept> and stores it in <bpt id="p2">*</bpt>outfile.<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-h<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Displays command syntax and options for the tool.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-i<ept id="p1">**</ept> <bpt id="p2">*</bpt>infile container<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Installs the key pair from <bpt id="p1">*</bpt>infile<ept id="p1">*</ept> in the specified key container.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The key container resides in the strong name CSP.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-k<ept id="p1">**</ept> [<bpt id="p2">*</bpt>keysize<ept id="p2">*</ept>] <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Generates a new <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> key of the specified size and writes it to the specified file.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Both a public and private key are written to the file.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you do not specify a key size, a 1,024-bit key is generated by default if you have the Microsoft enhanced cryptographic provider installed; otherwise, a 512-bit key is generated.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>keysize<ept id="p1">*</ept> parameter supports key lengths from 384 bits to 16,384 bits in increments of 8 bits if you have the Microsoft enhanced cryptographic provider installed.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft base cryptographic provider installed.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-m<ept id="p1">**</ept> [<bpt id="p2">**</bpt>y<ept id="p2">**</ept> <bpt id="p3">*</bpt>&amp;#124;<ept id="p3">*</ept> <bpt id="p4">**</bpt><ph id="ph1">n</ph><ept id="p4">**</ept>]</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Specifies whether key containers are computer-specific, or user-specific.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you specify <bpt id="p1">*</bpt>y<ept id="p1">*</ept>, key containers are computer-specific.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you specify <bpt id="p1">*</bpt><ph id="ph1">n</ph><ept id="p1">*</ept>, key containers are user-specific.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If neither y nor n is specified, this option displays the current setting.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-o<ept id="p1">**</ept>  <bpt id="p2">*</bpt>infile<ept id="p2">*</ept> [<bpt id="p3">*</bpt>outfile<ept id="p3">*</ept>]</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Extracts the public key from the <bpt id="p1">*</bpt>infile<ept id="p1">*</ept> and stores it in a .csv file.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A comma separates each byte of the public key.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This format is useful for hard-coding references to keys as initialized arrays in source code.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you do not specify an <bpt id="p1">*</bpt>outfile<ept id="p1">*</ept>, this option places the output on the Clipboard.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  This option does not verify that the input is only a public key.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`infile`</ph> contains a key pair with a private key, the private key is also extracted.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-p<ept id="p1">**</ept> <bpt id="p2">*</bpt>infile outfile<ept id="p2">*</ept> [<bpt id="p3">*</bpt>hashalg<ept id="p3">*</ept>]</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Extracts the public key from the key pair in <bpt id="p1">*</bpt>infile<ept id="p1">*</ept> and stores it in <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept>, optionally using the RSA algorithm specified by <bpt id="p3">*</bpt>hashalg<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This public key can be used to delay-sign an assembly using the <bpt id="p1">**</bpt>/delaysign+<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/keyfile<ept id="p2">**</ept> options of the <bpt id="p3">[</bpt>Assembly Linker (Al.exe)<ept id="p3">](../../../docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When an assembly is delay-signed, only the public key is set at compile time and space is reserved in the file for the signature to be added later, when the private key is known.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-pc<ept id="p1">**</ept>  <bpt id="p2">*</bpt>container<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept> [<bpt id="p4">*</bpt>hashalg<ept id="p4">*</ept>]</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Extracts the public key from the key pair in <bpt id="p1">*</bpt>container<ept id="p1">*</ept> and stores it in <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>hashalg<ept id="p1">*</ept> option, the RSA algorithm is used to extract the public key.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-Pb<ept id="p1">**</ept> [<bpt id="p2">**</bpt>y<ept id="p2">**</ept> <bpt id="p3">*</bpt>&amp;#124;<ept id="p3">*</ept> <bpt id="p4">**</bpt><ph id="ph1">n</ph><ept id="p4">**</ept>]</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Specifies whether the strong-name bypass policy is enforced.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If you specify <bpt id="p1">*</bpt>y<ept id="p1">*</ept>, strong names for full-trust assemblies are not validated when loaded into a full-trust <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you specify <bpt id="p1">*</bpt><ph id="ph1">n</ph><ept id="p1">*</ept>, strong names are validated for correctness, but not for a specific strong name.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</ph> has no effect on full-trust assemblies.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You must perform your own check for a strong name match.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If neither <ph id="ph1">`y`</ph> nor <ph id="ph2">`n`</ph> is specified, this option displays the current setting.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`y`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  On 64-bit computers, you must set this parameter in both the 32-bit and the 64-bit instances of Sn.exe.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-q<ept id="p1">**</ept>[<bpt id="p2">**</bpt>uiet<ept id="p2">**</ept>]</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Specifies quiet mode; suppresses the display of success messages.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-R<ept id="p1">**</ept>[<bpt id="p2">**</bpt>a<ept id="p2">**</ept>] <bpt id="p3">*</bpt>assembly<ept id="p3">*</ept> <bpt id="p4">*</bpt>infile<ept id="p4">*</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Re-signs a previously signed or delay-signed assembly with the key pair in <bpt id="p1">*</bpt>infile<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>-Ra<ept id="p1">**</ept> is used, hashes are recomputed for all files in the assembly.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-Rc<ept id="p1">**</ept>[<bpt id="p2">**</bpt>a<ept id="p2">**</ept>] <bpt id="p3">*</bpt>assembly container<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Re-signs a previously signed or delay-signed assembly with the key pair in <bpt id="p1">*</bpt>container<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>-Rca<ept id="p1">**</ept> is used, hashes are recomputed for all files in the assembly.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-Rh<ept id="p1">**</ept> <bpt id="p2">*</bpt>assembly<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Recomputes hashes for all files in the assembly.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-t<ept id="p1">**</ept>[<bpt id="p2">**</bpt>p<ept id="p2">**</ept>] <bpt id="p3">*</bpt>infile<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Displays the token for the public key stored in <bpt id="p1">*</bpt>infile<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The contents of <bpt id="p1">*</bpt>infile<ept id="p1">*</ept> must be a public key previously generated from a key pair file using <bpt id="p2">**</bpt>-p<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Do not use the <bpt id="p1">**</bpt>-t[p]<ept id="p1">**</ept> option to extract the token directly from a key pair file.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Sn.exe computes the token by using a hash function from the public key.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To save space, the common language runtime stores public key tokens in the manifest as part of a reference to another assembly when it records a dependency to an assembly that has a strong name.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>-tp<ept id="p1">**</ept> option displays the public key in addition to the token.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Reflection.AssemblySignatureKeyAttribute&gt;</ph> attribute has been applied to the assembly, the token is for the identity key, and the name of the hash algorithm and the identity key is displayed.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Note that this option does not verify the assembly signature and should not be used to make trust decisions.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This option only displays the raw public key token data.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-T<ept id="p1">**</ept>[<bpt id="p2">**</bpt>p<ept id="p2">**</ept>] <bpt id="p3">*</bpt>assembly<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Displays the public key token for <bpt id="p1">*</bpt>assembly.<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>assembly<ept id="p1">*</ept> must be the name of a file that contains an assembly manifest.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Sn.exe computes the token by using a hash function from the public key.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To save space, the runtime stores public key tokens in the manifest as part of a reference to another assembly when it records a dependency to an assembly that has a strong name.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>-Tp<ept id="p1">**</ept> option displays the public key in addition to the token.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Reflection.AssemblySignatureKeyAttribute&gt;</ph> attribute has been applied to the assembly, the token is for the identity key, and the name of the hash algorithm and the identity key is displayed.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Note that this option does not verify the assembly signature and should not be used to make trust decisions.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This option only displays the raw public key token data.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`-TS`</ph> <ph id="ph2">`assembly`</ph> <ph id="ph3">`infile`</ph></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Test-signs the signed or partially signed <ph id="ph1">`assembly`</ph> with the key pair in <ph id="ph2">`infile`</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Test-signs the signed or partially signed <ph id="ph1">`assembly`</ph> with the key pair in the key container <ph id="ph2">`container`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-v<ept id="p1">**</ept> <bpt id="p2">*</bpt>assembly<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Verifies the strong name in <bpt id="p1">*</bpt>assembly<ept id="p1">*</ept>, where <bpt id="p2">*</bpt>assembly<ept id="p2">*</ept> is the name of a file that contains an assembly manifest.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-vf<ept id="p1">**</ept>  <bpt id="p2">*</bpt>assembly<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Verifies the strong name in <bpt id="p1">*</bpt>assembly.<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Unlike the <bpt id="p1">**</bpt>-v<ept id="p1">**</ept> option, <bpt id="p2">**</bpt>-vf<ept id="p2">**</ept> forces verification even if it is disabled using the <bpt id="p3">**</bpt>-Vr<ept id="p3">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-Vk<ept id="p1">**</ept>  <bpt id="p2">*</bpt>regfile.reg<ept id="p2">*</ept> <bpt id="p3">*</bpt>assembly<ept id="p3">*</ept> [<bpt id="p4">*</bpt>userlist<ept id="p4">*</ept>] [<bpt id="p5">*</bpt>infile<ept id="p5">*</ept>]</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Creates a registration entries (.reg) file you can use to register the specified assembly for verification skipping.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The rules for assembly naming that apply to the <bpt id="p1">**</bpt>-Vr<ept id="p1">**</ept> option apply to <bpt id="p2">**</bpt>–Vk<ept id="p2">**</ept> as well.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For information about the <bpt id="p1">*</bpt>userlist<ept id="p1">*</ept> and <bpt id="p2">*</bpt>infile<ept id="p2">*</ept> options, see the <bpt id="p3">**</bpt>–Vr<ept id="p3">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-Vl<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Lists current settings for strong-name verification on this computer.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-Vr<ept id="p1">**</ept>  <bpt id="p2">*</bpt>assembly<ept id="p2">*</ept> [<bpt id="p3">*</bpt>userlist<ept id="p3">*</ept>] [<bpt id="p4">*</bpt>infile<ept id="p4">*</ept>]</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Registers <bpt id="p1">*</bpt>assembly<ept id="p1">*</ept> for verification skipping.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Optionally, you can specify a comma-separated list of user names the skip verification should apply to.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If you specify <bpt id="p1">*</bpt>infile<ept id="p1">*</ept>, verification remains enabled, but the public key in <bpt id="p2">*</bpt>infile<ept id="p2">*</ept> is used in verification operations.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You can specify <bpt id="p1">*</bpt>assembly<ept id="p1">*</ept> in the form <bpt id="p2">*</bpt><ph id="ph1">\*</ph>, strongname<ept id="p2">*</ept> to register all assemblies with the specified strong name.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">*</bpt>strongname<ept id="p1">*</ept>, specify the string of hexadecimal digits representing the tokenized form of the public key.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">**</bpt>-t<ept id="p1">**</ept> and <bpt id="p2">**</bpt>-T<ept id="p2">**</ept> options to display the public key token.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Caution:<ept id="p1">**</ept>  Use this option only during development.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Adding an assembly to the skip verification list creates a security vulnerability.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A malicious assembly could use the fully specified assembly name (assembly name, version, culture, and public key token) of the assembly added to the skip verification list to fake its identity.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This would allow the malicious assembly to also skip verification.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-Vu<ept id="p1">**</ept>  <bpt id="p2">*</bpt>assembly<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Unregisters <bpt id="p1">*</bpt>assembly<ept id="p1">*</ept> for verification skipping.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The same rules for assembly naming that apply to <bpt id="p1">**</bpt>-Vr<ept id="p1">**</ept> apply to <bpt id="p2">**</bpt>-Vu<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-Vx<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Removes all verification-skipping entries.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-?<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Displays command syntax and options for the tool.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>All Sn.exe options are case-sensitive and must be typed exactly as shown to be recognized by the tool.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>-R<ept id="p1">**</ept> and <bpt id="p2">**</bpt>–Rc<ept id="p2">**</ept> options are useful with assemblies that have been delay-signed.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>In this scenario, only the public key has been set at compile time and signing is performed later, when the private key is known.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For parameters (for example, –<bpt id="p1">**</bpt>Vr)<ept id="p1">**</ept> that write to protected resources such as the registry, run SN.exe as an administrator.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The following command creates a new, random key pair and stores it in <ph id="ph1">`keyPair.snk`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The following command stores the key in <ph id="ph1">`keyPair.snk`</ph> in the container <ph id="ph2">`MyContainer`</ph> in the strong name CSP.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The following command extracts the public key from <ph id="ph1">`keyPair.snk`</ph> and stores it in <ph id="ph2">`publicKey.snk`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The following command displays the public key and the token for the public key contained in <ph id="ph1">`publicKey.snk`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The following command verifies the assembly <ph id="ph1">`MyAsm.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The following command deletes <ph id="ph1">`MyContainer`</ph> from the default CSP.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tools<ept id="p1">](../../../docs/framework/tools/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Al.exe (Assembly Linker)<ept id="p1">](../../../docs/framework/tools/al-exe-assembly-linker.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Strong-Named Assemblies<ept id="p1">](../../../docs/framework/app-domains/strong-named-assemblies.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Command Prompts<ept id="p1">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>