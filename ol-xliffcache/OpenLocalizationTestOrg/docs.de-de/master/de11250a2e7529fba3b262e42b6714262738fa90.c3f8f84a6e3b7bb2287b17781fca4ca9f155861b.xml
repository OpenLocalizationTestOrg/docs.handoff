{"content":"---\ntitle: \"How to: Create a Custom View Mode for a ListView\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"ListView controls [WPF], creating custom View mode\"\nms.assetid: 71077349-eeb9-4344-ab29-b5df96df3314\n---\n# How to: Create a Custom View Mode for a ListView\nThis example shows how to create a custom <xref:System.Windows.Controls.ListView.View%2A> mode for a <xref:System.Windows.Controls.ListView> control.  \n  \n## Example  \n You must use the <xref:System.Windows.Controls.ViewBase> class when you create a custom view for the <xref:System.Windows.Controls.ListView> control. The following example shows a view mode that is called `PlainView`, which is derived from the <xref:System.Windows.Controls.ViewBase> class.  \n  \n [!code-csharp[ListViewCustomView#PlainView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp/PlainView.cs#plainview)]\n [!code-vb[ListViewCustomView#PlainView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCustomView/visualbasic/plainview.vb#plainview)]  \n  \n To apply a style to the custom view, use the <xref:System.Windows.Style> class. The following example defines a <xref:System.Windows.Style> for the `PlainView` view mode. In the previous example, this style is set as the value of the <xref:System.Windows.Controls.ViewBase.DefaultStyleKey%2A> property that is defined for `PlainView`.  \n  \n [!code-xaml[ListViewCustomView#PlainViewStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp/Themes/Generic.xaml#plainviewstyle)]  \n  \n To define the layout of data in a custom view mode, define a <xref:System.Windows.DataTemplate> object. The following example defines a <xref:System.Windows.DataTemplate> that can be used to display data in the `PlainView` view mode.  \n  \n [!code-xaml[ListViewCustomView#PlainViewDataTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp/Window1.xaml#plainviewdatatemplate)]  \n  \n The following example shows how to define a <xref:System.Windows.ResourceKey> for the `PlainView` view mode that uses the <xref:System.Windows.DataTemplate> that is defined in the previous example.  \n  \n [!code-xaml[ListViewCustomView#PlainViewtileView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp/Window1.xaml#plainviewtileview)]  \n  \n A <xref:System.Windows.Controls.ListView> control can use a custom view if you set the <xref:System.Windows.Controls.ListView.View%2A> property to the resource key. The following example shows how to specify `PlainView` as the view mode for a <xref:System.Windows.Controls.ListView>.  \n  \n [!code-csharp[ListViewCustomView#ListViewtileViewmode](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp/Window1.xaml.cs#listviewtileviewmode)]\n [!code-vb[ListViewCustomView#ListViewtileViewmode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCustomView/visualbasic/window1.xaml.vb#listviewtileviewmode)]  \n  \n For the complete sample, see [ListView with Multiple Views(C#)](https://github.com/dotnet/samples/tree/master/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp) or [ListView with Multiple Views(Visual Basic)](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/VS_Snippets_Wpf/ListViewCustomView/visualbasic).  \n  \n## See also\n\n- <xref:System.Windows.Controls.ListView>\n- <xref:System.Windows.Controls.GridView>\n- [How-to Topics](listview-how-to-topics.md)\n- [ListView Overview](listview-overview.md)\n- [GridView Overview](gridview-overview.md)\n","nodes":[{"pos":[4,245],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create a Custom View Mode for a ListView\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"ListView controls [WPF], creating custom View mode\"\nms.assetid: 71077349-eeb9-4344-ab29-b5df96df3314","nodes":[{"content":"How to: Create a Custom View Mode for a ListView","nodes":[{"pos":[0,48],"content":"How to: Create a Custom View Mode for a ListView","nodes":[{"content":"How to: Create a Custom View Mode for a ListView","pos":[0,48]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[252,300],"content":"How to: Create a Custom View Mode for a ListView","linkify":"How to: Create a Custom View Mode for a ListView","nodes":[{"content":"How to: Create a Custom View Mode for a ListView","pos":[0,48]}]},{"pos":[301,450],"content":"This example shows how to create a custom <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListView.View%2A&gt;</ph> mode for a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListView&gt;</ph> control.","source":"This example shows how to create a custom <xref:System.Windows.Controls.ListView.View%2A> mode for a <xref:System.Windows.Controls.ListView> control."},{"pos":[459,466],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"You must use the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ViewBase&gt;</ph> class when you create a custom view for the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListView&gt;</ph> control.","pos":[470,619],"source":"You must use the <xref:System.Windows.Controls.ViewBase> class when you create a custom view for the <xref:System.Windows.Controls.ListView> control."},{"content":"The following example shows a view mode that is called <ph id=\"ph1\">`PlainView`</ph>, which is derived from the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ViewBase&gt;</ph> class.","pos":[620,760],"source":" The following example shows a view mode that is called `PlainView`, which is derived from the <xref:System.Windows.Controls.ViewBase> class."},{"content":"To apply a style to the custom view, use the <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> class.","pos":[1054,1133],"source":"To apply a style to the custom view, use the <xref:System.Windows.Style> class."},{"content":"The following example defines a <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> for the <ph id=\"ph2\">`PlainView`</ph> view mode.","pos":[1134,1224],"source":" The following example defines a <xref:System.Windows.Style> for the `PlainView` view mode."},{"content":"In the previous example, this style is set as the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ViewBase.DefaultStyleKey%2A&gt;</ph> property that is defined for <ph id=\"ph2\">`PlainView`</ph>.","pos":[1225,1388],"source":" In the previous example, this style is set as the value of the <xref:System.Windows.Controls.ViewBase.DefaultStyleKey%2A> property that is defined for `PlainView`."},{"content":"To define the layout of data in a custom view mode, define a <ph id=\"ph1\">&lt;xref:System.Windows.DataTemplate&gt;</ph> object.","pos":[1553,1656],"source":"To define the layout of data in a custom view mode, define a <xref:System.Windows.DataTemplate> object."},{"content":"The following example defines a <ph id=\"ph1\">&lt;xref:System.Windows.DataTemplate&gt;</ph> that can be used to display data in the <ph id=\"ph2\">`PlainView`</ph> view mode.","pos":[1657,1786],"source":" The following example defines a <xref:System.Windows.DataTemplate> that can be used to display data in the `PlainView` view mode."},{"pos":[1958,2155],"content":"The following example shows how to define a <ph id=\"ph1\">&lt;xref:System.Windows.ResourceKey&gt;</ph> for the <ph id=\"ph2\">`PlainView`</ph> view mode that uses the <ph id=\"ph3\">&lt;xref:System.Windows.DataTemplate&gt;</ph> that is defined in the previous example.","source":"The following example shows how to define a <xref:System.Windows.ResourceKey> for the `PlainView` view mode that uses the <xref:System.Windows.DataTemplate> that is defined in the previous example."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListView&gt;</ph> control can use a custom view if you set the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListView.View%2A&gt;</ph> property to the resource key.","pos":[2319,2483],"source":"A <xref:System.Windows.Controls.ListView> control can use a custom view if you set the <xref:System.Windows.Controls.ListView.View%2A> property to the resource key."},{"content":"The following example shows how to specify <ph id=\"ph1\">`PlainView`</ph> as the view mode for a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListView&gt;</ph>.","pos":[2484,2602],"source":" The following example shows how to specify `PlainView` as the view mode for a <xref:System.Windows.Controls.ListView>."},{"pos":[2946,3278],"content":"For the complete sample, see <bpt id=\"p1\">[</bpt>ListView with Multiple Views(C#)<ept id=\"p1\">](https://github.com/dotnet/samples/tree/master/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp)</ept> or <bpt id=\"p2\">[</bpt>ListView with Multiple Views(Visual Basic)<ept id=\"p2\">](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/VS_Snippets_Wpf/ListViewCustomView/visualbasic)</ept>.","source":"For the complete sample, see [ListView with Multiple Views(C#)](https://github.com/dotnet/samples/tree/master/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp) or [ListView with Multiple Views(Visual Basic)](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/VS_Snippets_Wpf/ListViewCustomView/visualbasic)."},{"pos":[3287,3295],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3383,3425],"content":"<bpt id=\"p1\">[</bpt>How-to Topics<ept id=\"p1\">](listview-how-to-topics.md)</ept>","source":"[How-to Topics](listview-how-to-topics.md)"},{"pos":[3428,3469],"content":"<bpt id=\"p1\">[</bpt>ListView Overview<ept id=\"p1\">](listview-overview.md)</ept>","source":"[ListView Overview](listview-overview.md)"},{"pos":[3472,3513],"content":"<bpt id=\"p1\">[</bpt>GridView Overview<ept id=\"p1\">](gridview-overview.md)</ept>","source":"[GridView Overview](gridview-overview.md)"}]}