{"content":"---\ntitle: \"Collecting Ink | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"ink, collecting\"\n  - \"InkCanvas element\"\n  - \"properties, DrawingAttributes\"\n  - \"collecting digital ink\"\n  - \"digital ink, collecting\"\n  - \"DrawingAttributes property\"\n  - \"properties, DefaultDrawingAttributes\"\n  - \"DefaultDrawingAttributes property\"\nms.assetid: 66a3129d-9577-43eb-acbd-56c147282016\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Collecting Ink\nThe [Windows Presentation Foundation](../../../../docs/framework/wpf/index.md) platform collects digital ink as a core part of its functionality. This topic discusses methods for collection of ink in [!INCLUDE[TLA#tla_wpf](../../../../includes/tlasharptla-wpf-md.md)].  \n  \n## Prerequisites  \n To use the following examples, you must first install [!INCLUDE[TLA#tla_visualstu2005](../../../../includes/tlasharptla-visualstu2005-md.md)] and the [!INCLUDE[TLA2#tla_winfxsdk](../../../../includes/tla2sharptla-winfxsdk-md.md)]. You should also understand how to write applications for the [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]. For more information about getting started with [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)], see [Walkthrough: My First WPF Desktop Application](../../../../docs/framework/wpf/getting-started/walkthrough-my-first-wpf-desktop-application.md).  \n  \n## Using the InkCanvas Element  \n The <xref:System.Windows.Controls.InkCanvas> element provides the easiest way to collect ink in [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]. The <xref:System.Windows.Controls.InkCanvas> element is similar to the [Microsoft.Ink.InkOverlay](https://msdn.microsoft.com/library/microsoft.ink.inkoverlay\\(v=vs.90\\).aspx) object from the [!INCLUDE[TLA2#tla_tpclssdk](../../../../includes/tla2sharptla-tpclssdk-md.md)] and earlier versions.  \n  \n Use an <xref:System.Windows.Controls.InkCanvas> element to receive and display ink input. You commonly input ink through the use of a stylus, which interacts with a digitizer to produce ink strokes. In addition, a mouse can be used in place of a stylus. The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and they can be manipulated both programmatically and by user input. The <xref:System.Windows.Controls.InkCanvas> enables users to select, modify, or delete an existing <xref:System.Windows.Ink.Stroke>.  \n  \n By using XAML, you can set up ink collection as easily as adding an `InkCanvas` element to your tree. The following example adds an <xref:System.Windows.Controls.InkCanvas> to a default [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] project created in [!INCLUDE[TLA#tla_visualstu2005](../../../../includes/tlasharptla-visualstu2005-md.md)].  \n  \n [!code-xml[DigitalInkTopics#6](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DigitalInkTopics/CSharp/Window2.xaml#6)]  \n  \n The `InkCanvas` element can also contain child elements, making it possible to add ink annotation capabilities to almost any type of XAML element. For example, to add inking capabilities to a text element, simply make it a child of an <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-xml[DigitalInkTopics#5](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DigitalInkTopics/CSharp/Window2.xaml#5)]  \n  \n Adding support for marking up an image with ink is just as easy.  \n  \n [!code-xml[DigitalInkTopics#7](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DigitalInkTopics/CSharp/Window2.xaml#7)]  \n  \n### InkCollection Modes  \n The <xref:System.Windows.Controls.InkCanvas> provides support for various input modes through its <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property.  \n  \n### Manipulating Ink  \n The <xref:System.Windows.Controls.InkCanvas> provides support for many ink editing operations. For example, <xref:System.Windows.Controls.InkCanvas> supports back-of-pen erase with no additional code needed to add the functionality to the element.  \n  \n#### Selection  \n Setting selection mode is as simple as setting the <xref:System.Windows.Controls.InkCanvasEditingMode> property to **Select**. The following code sets the editing mode based on the value of a <xref:System.Windows.Forms.CheckBox>:  \n  \n [!code-csharp[DigitalInkTopics#8](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DigitalInkTopics/CSharp/Window1.xaml.cs#8)]\n [!code-vb[DigitalInkTopics#8](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/DigitalInkTopics/VisualBasic/Window1.xaml.vb#8)]  \n  \n#### DrawingAttributes  \n Use the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property to change the appearance of ink strokes. For instance, the <xref:System.Windows.Ink.DrawingAttributes.Color%2A> member of <xref:System.Windows.Ink.DrawingAttributes> sets the color of the rendered <xref:System.Windows.Ink.Stroke>. The following example changes the color of the selected strokes to red.  \n  \n [!code-csharp[DigitalInkTopics#9](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DigitalInkTopics/CSharp/Window1.xaml.cs#9)]\n [!code-vb[DigitalInkTopics#9](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/DigitalInkTopics/VisualBasic/Window1.xaml.vb#9)]  \n  \n### DefaultDrawingAttributes  \n The <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property provides access to properties such as the height, width, and color of the strokes to be created in an <xref:System.Windows.Controls.InkCanvas>. Once you change the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, all future strokes entered into the <xref:System.Windows.Controls.InkCanvas> are rendered with the new property values.  \n  \n In addition to modifying the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> in the code-behind file, you can use XAML syntax for specifying <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> properties. The following XAML code demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.Color%2A> property. To use this code, create a new [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] project called \"HelloInkCanvas\" in Visual Studio 2005. Replace the code in the Window1.xaml file with the following code.  \n  \n [!code-xml[HelloInkCanvas#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/HelloInkCanvas/CSharp/Window1.xaml#1)]  \n  \n Next, add the following button event handlers to the code behind file, inside the Window1 class.  \n  \n [!code-csharp[HelloInkCanvas#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/HelloInkCanvas/CSharp/Window1.xaml.cs#2)]  \n  \n After copying this code, press **F5** in Microsoft Visual Studio 2005 to run the program in the debugger.  \n  \n Notice how the <xref:System.Windows.Controls.StackPanel> places the buttons on top of the <xref:System.Windows.Controls.InkCanvas>. If you try to ink over the top of the buttons, the <xref:System.Windows.Controls.InkCanvas> collects and renders the ink behind the buttons. This is because the buttons are siblings of the <xref:System.Windows.Controls.InkCanvas> as opposed to children. Also, the buttons are higher in the z-order, so the ink is rendered behind them.  \n  \n## See Also  \n <xref:System.Windows.Ink.DrawingAttributes>   \n <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>   \n <xref:System.Windows.Ink>","nodes":[{"pos":[4,623],"embed":true,"restype":"x-metadata","content":"title: \"Collecting Ink | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"ink, collecting\"\n  - \"InkCanvas element\"\n  - \"properties, DrawingAttributes\"\n  - \"collecting digital ink\"\n  - \"digital ink, collecting\"\n  - \"DrawingAttributes property\"\n  - \"properties, DefaultDrawingAttributes\"\n  - \"DefaultDrawingAttributes property\"\nms.assetid: 66a3129d-9577-43eb-acbd-56c147282016\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"Collecting Ink | Microsoft Docs","nodes":[{"pos":[0,31],"content":"Collecting Ink | Microsoft Docs","nodes":[{"content":"Collecting Ink | Microsoft Docs","pos":[0,31]}]}],"path":["title"]}],"yml":true},{"pos":[630,644],"content":"Collecting Ink","linkify":"Collecting Ink","nodes":[{"content":"Collecting Ink","pos":[0,14]}]},{"content":"The <bpt id=\"p1\">[</bpt>Windows Presentation Foundation<ept id=\"p1\">](../../../../docs/framework/wpf/index.md)</ept> platform collects digital ink as a core part of its functionality.","pos":[645,790],"source":"The [Windows Presentation Foundation](../../../../docs/framework/wpf/index.md) platform collects digital ink as a core part of its functionality."},{"content":"This topic discusses methods for collection of ink in <ph id=\"ph1\">[!INCLUDE[TLA#tla_wpf](../../../../includes/tlasharptla-wpf-md.md)]</ph>.","pos":[791,913],"source":" This topic discusses methods for collection of ink in [!INCLUDE[TLA#tla_wpf](../../../../includes/tlasharptla-wpf-md.md)]."},{"pos":[922,935],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"To use the following examples, you must first install <ph id=\"ph1\">[!INCLUDE[TLA#tla_visualstu2005](../../../../includes/tlasharptla-visualstu2005-md.md)]</ph> and the <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winfxsdk](../../../../includes/tla2sharptla-winfxsdk-md.md)]</ph>.","pos":[939,1169],"source":"To use the following examples, you must first install [!INCLUDE[TLA#tla_visualstu2005](../../../../includes/tlasharptla-visualstu2005-md.md)] and the [!INCLUDE[TLA2#tla_winfxsdk](../../../../includes/tla2sharptla-winfxsdk-md.md)]."},{"content":"You should also understand how to write applications for the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.","pos":[1170,1313],"source":" You should also understand how to write applications for the [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]."},{"content":"For more information about getting started with <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Walkthrough: My First WPF Desktop Application<ept id=\"p1\">](../../../../docs/framework/wpf/getting-started/walkthrough-my-first-wpf-desktop-application.md)</ept>.","pos":[1314,1593],"source":" For more information about getting started with [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)], see [Walkthrough: My First WPF Desktop Application](../../../../docs/framework/wpf/getting-started/walkthrough-my-first-wpf-desktop-application.md)."},{"pos":[1602,1629],"content":"Using the InkCanvas Element","linkify":"Using the InkCanvas Element","nodes":[{"content":"Using the InkCanvas Element","pos":[0,27]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> element provides the easiest way to collect ink in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.","pos":[1633,1811],"source":"The <xref:System.Windows.Controls.InkCanvas> element provides the easiest way to collect ink in [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> element is similar to the <bpt id=\"p1\">[</bpt>Microsoft.Ink.InkOverlay<ept id=\"p1\">](https://msdn.microsoft.com/library/microsoft.ink.inkoverlay\\(v=vs.90\\).aspx)</ept> object from the <ph id=\"ph2\">[!INCLUDE[TLA2#tla_tpclssdk](../../../../includes/tla2sharptla-tpclssdk-md.md)]</ph> and earlier versions.","pos":[1812,2104],"source":" The <xref:System.Windows.Controls.InkCanvas> element is similar to the [Microsoft.Ink.InkOverlay](https://msdn.microsoft.com/library/microsoft.ink.inkoverlay\\(v=vs.90\\).aspx) object from the [!INCLUDE[TLA2#tla_tpclssdk](../../../../includes/tla2sharptla-tpclssdk-md.md)] and earlier versions."},{"content":"Use an <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> element to receive and display ink input.","pos":[2111,2200],"source":"Use an <xref:System.Windows.Controls.InkCanvas> element to receive and display ink input."},{"content":"You commonly input ink through the use of a stylus, which interacts with a digitizer to produce ink strokes.","pos":[2201,2309]},{"content":"In addition, a mouse can be used in place of a stylus.","pos":[2310,2364]},{"content":"The created strokes are represented as <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, and they can be manipulated both programmatically and by user input.","pos":[2365,2514],"source":" The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and they can be manipulated both programmatically and by user input."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> enables users to select, modify, or delete an existing <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.","pos":[2515,2648],"source":" The <xref:System.Windows.Controls.InkCanvas> enables users to select, modify, or delete an existing <xref:System.Windows.Ink.Stroke>."},{"content":"By using XAML, you can set up ink collection as easily as adding an <ph id=\"ph1\">`InkCanvas`</ph> element to your tree.","pos":[2655,2756],"source":"By using XAML, you can set up ink collection as easily as adding an `InkCanvas` element to your tree."},{"content":"The following example adds an <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> to a default <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> project created in <ph id=\"ph3\">[!INCLUDE[TLA#tla_visualstu2005](../../../../includes/tlasharptla-visualstu2005-md.md)]</ph>.","pos":[2757,3030],"source":" The following example adds an <xref:System.Windows.Controls.InkCanvas> to a default [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] project created in [!INCLUDE[TLA#tla_visualstu2005](../../../../includes/tlasharptla-visualstu2005-md.md)]."},{"content":"The <ph id=\"ph1\">`InkCanvas`</ph> element can also contain child elements, making it possible to add ink annotation capabilities to almost any type of XAML element.","pos":[3167,3313],"source":"The `InkCanvas` element can also contain child elements, making it possible to add ink annotation capabilities to almost any type of XAML element."},{"content":"For example, to add inking capabilities to a text element, simply make it a child of an <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.","pos":[3314,3443],"source":" For example, to add inking capabilities to a text element, simply make it a child of an <xref:System.Windows.Controls.InkCanvas>."},{"content":"Adding support for marking up an image with ink is just as easy.","pos":[3580,3644]},{"pos":[3784,3803],"content":"InkCollection Modes","linkify":"InkCollection Modes","nodes":[{"content":"InkCollection Modes","pos":[0,19]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> provides support for various input modes through its <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> property.","pos":[3807,3970],"source":"The <xref:System.Windows.Controls.InkCanvas> provides support for various input modes through its <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property."},{"pos":[3980,3996],"content":"Manipulating Ink","linkify":"Manipulating Ink","nodes":[{"content":"Manipulating Ink","pos":[0,16]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> provides support for many ink editing operations.","pos":[4000,4094],"source":"The <xref:System.Windows.Controls.InkCanvas> provides support for many ink editing operations."},{"content":"For example, <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> supports back-of-pen erase with no additional code needed to add the functionality to the element.","pos":[4095,4247],"source":" For example, <xref:System.Windows.Controls.InkCanvas> supports back-of-pen erase with no additional code needed to add the functionality to the element."},{"pos":[4258,4267],"content":"Selection","linkify":"Selection","nodes":[{"content":"Selection","pos":[0,9]}]},{"content":"Setting selection mode is as simple as setting the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;</ph> property to <bpt id=\"p1\">**</bpt>Select<ept id=\"p1\">**</ept>.","pos":[4271,4397],"source":"Setting selection mode is as simple as setting the <xref:System.Windows.Controls.InkCanvasEditingMode> property to **Select**."},{"content":"The following code sets the editing mode based on the value of a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>:","pos":[4398,4500],"source":" The following code sets the editing mode based on the value of a <xref:System.Windows.Forms.CheckBox>:"},{"pos":[4784,4801],"content":"DrawingAttributes","linkify":"DrawingAttributes","nodes":[{"content":"DrawingAttributes","pos":[0,17]}]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> property to change the appearance of ink strokes.","pos":[4805,4916],"source":"Use the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property to change the appearance of ink strokes."},{"content":"For instance, the <ph id=\"ph1\">&lt;xref:System.Windows.Ink.DrawingAttributes.Color%2A&gt;</ph> member of <ph id=\"ph2\">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> sets the color of the rendered <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.","pos":[4917,5106],"source":" For instance, the <xref:System.Windows.Ink.DrawingAttributes.Color%2A> member of <xref:System.Windows.Ink.DrawingAttributes> sets the color of the rendered <xref:System.Windows.Ink.Stroke>."},{"content":"The following example changes the color of the selected strokes to red.","pos":[5107,5178]},{"pos":[5461,5485],"content":"DefaultDrawingAttributes","linkify":"DefaultDrawingAttributes","nodes":[{"content":"DefaultDrawingAttributes","pos":[0,24]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> property provides access to properties such as the height, width, and color of the strokes to be created in an <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.","pos":[5489,5714],"source":"The <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property provides access to properties such as the height, width, and color of the strokes to be created in an <xref:System.Windows.Controls.InkCanvas>."},{"content":"Once you change the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph>, all future strokes entered into the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> are rendered with the new property values.","pos":[5715,5924],"source":" Once you change the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, all future strokes entered into the <xref:System.Windows.Controls.InkCanvas> are rendered with the new property values."},{"content":"In addition to modifying the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> in the code-behind file, you can use XAML syntax for specifying <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> properties.","pos":[5931,6173],"source":"In addition to modifying the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> in the code-behind file, you can use XAML syntax for specifying <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> properties."},{"content":"The following XAML code demonstrates how to set the <ph id=\"ph1\">&lt;xref:System.Windows.Ink.DrawingAttributes.Color%2A&gt;</ph> property.","pos":[6174,6288],"source":" The following XAML code demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.Color%2A> property."},{"content":"To use this code, create a new <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> project called \"HelloInkCanvas\" in Visual Studio 2005.","pos":[6289,6456],"source":" To use this code, create a new [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] project called \"HelloInkCanvas\" in Visual Studio 2005."},{"content":"Replace the code in the Window1.xaml file with the following code.","pos":[6457,6523]},{"content":"Next, add the following button event handlers to the code behind file, inside the Window1 class.","pos":[6656,6752]},{"pos":[6891,6996],"content":"After copying this code, press <bpt id=\"p1\">**</bpt>F5<ept id=\"p1\">**</ept> in Microsoft Visual Studio 2005 to run the program in the debugger.","source":"After copying this code, press **F5** in Microsoft Visual Studio 2005 to run the program in the debugger."},{"content":"Notice how the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> places the buttons on top of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.","pos":[7003,7134],"source":"Notice how the <xref:System.Windows.Controls.StackPanel> places the buttons on top of the <xref:System.Windows.Controls.InkCanvas>."},{"content":"If you try to ink over the top of the buttons, the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> collects and renders the ink behind the buttons.","pos":[7135,7275],"source":" If you try to ink over the top of the buttons, the <xref:System.Windows.Controls.InkCanvas> collects and renders the ink behind the buttons."},{"content":"This is because the buttons are siblings of the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> as opposed to children.","pos":[7276,7388],"source":" This is because the buttons are siblings of the <xref:System.Windows.Controls.InkCanvas> as opposed to children."},{"content":"Also, the buttons are higher in the z-order, so the ink is rendered behind them.","pos":[7389,7469]},{"pos":[7478,7486],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}