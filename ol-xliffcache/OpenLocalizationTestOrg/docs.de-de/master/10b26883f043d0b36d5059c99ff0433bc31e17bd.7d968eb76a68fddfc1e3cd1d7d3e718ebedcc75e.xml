{"content":"---\ntitle: \"Generic parameter constraint type <typename> is not CLS-compliant\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc40040\"\n  - \"vbc40040\"\nhelpviewer_keywords: \n  - \"BC40040\"\nms.assetid: c640dd59-56a9-43ed-b199-32a60f7b9b06\n---\n# Generic parameter constraint type \\<typename> is not CLS-compliant\nA generic type is marked as `<CLSCompliant(True)>`, but a constraint on one of its type parameters specifies a type that is marked as `<CLSCompliant(False)>`, is not marked, or does not qualify because it is a noncompliant type.  \n  \n For a type to be compliant with the [Language Independence and Language-Independent Components](../../standard/language-independence-and-language-independent-components.md) (CLS), it must use only CLS-compliant types. This applies also to the constraints on the type parameters of a generic type.  \n  \n The following Visual Basic data types are not CLS-compliant:  \n  \n-   [SByte Data Type](../../visual-basic/language-reference/data-types/sbyte-data-type.md)  \n  \n-   [UInteger Data Type](../../visual-basic/language-reference/data-types/uinteger-data-type.md)  \n  \n-   [ULong Data Type](../../visual-basic/language-reference/data-types/ulong-data-type.md)  \n  \n-   [UShort Data Type](../../visual-basic/language-reference/data-types/ushort-data-type.md)  \n  \n When you apply the <xref:System.CLSCompliantAttribute> attribute to a programming element, you set the attribute's `isCompliant` parameter to either `True` or `False` to indicate compliance or noncompliance. There is no default for this parameter, and you must supply a value.  \n  \n If you do not apply <xref:System.CLSCompliantAttribute> to an element, it is considered to be noncompliant.  \n  \n By default, this message is a warning. For information on hiding warnings or treating warnings as errors, see [Configuring Warnings in Visual Basic](/visualstudio/ide/configuring-warnings-in-visual-basic).  \n  \n **Error ID:** BC40040  \n  \n## To correct this error  \n  \n-   If the generic type must take a type parameter constrained by this particular type, remove <xref:System.CLSCompliantAttribute>. The type cannot be CLS-compliant.  \n  \n-   If the generic type must be CLS-compliant, change the type of this constraint to the closest CLS-compliant type. For example, in place of `UInteger` you might be able to use `Integer` if you do not need the value range above 2,147,483,647. If you do need the extended range, you can replace `UInteger` with `Long`.  \n  \n## See also\n\n- [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n","nodes":[{"pos":[4,226],"embed":true,"restype":"x-metadata","content":"title: \"Generic parameter constraint type <typename> is not CLS-compliant\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc40040\"\n  - \"vbc40040\"\nhelpviewer_keywords: \n  - \"BC40040\"\nms.assetid: c640dd59-56a9-43ed-b199-32a60f7b9b06","nodes":[{"content":"Generic parameter constraint type <typename> is not CLS-compliant","nodes":[{"pos":[0,65],"content":"Generic parameter constraint type <ph id=\"ph1\">&lt;typename&gt;</ph> is not CLS-compliant","source":"Generic parameter constraint type <typename> is not CLS-compliant"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[233,299],"content":"Generic parameter constraint type \\<typename> is not CLS-compliant","linkify":"Generic parameter constraint type \\<typename> is not CLS-compliant","nodes":[{"content":"Generic parameter constraint type <ph id=\"ph1\">\\&lt;</ph>typename&gt; is not CLS-compliant","pos":[0,66],"source":"Generic parameter constraint type \\<typename> is not CLS-compliant"}]},{"pos":[300,528],"content":"A generic type is marked as <ph id=\"ph1\">`&lt;CLSCompliant(True)&gt;`</ph>, but a constraint on one of its type parameters specifies a type that is marked as <ph id=\"ph2\">`&lt;CLSCompliant(False)&gt;`</ph>, is not marked, or does not qualify because it is a noncompliant type.","source":"A generic type is marked as `<CLSCompliant(True)>`, but a constraint on one of its type parameters specifies a type that is marked as `<CLSCompliant(False)>`, is not marked, or does not qualify because it is a noncompliant type."},{"content":"For a type to be compliant with the <bpt id=\"p1\">[</bpt>Language Independence and Language-Independent Components<ept id=\"p1\">](../../standard/language-independence-and-language-independent-components.md)</ept> (CLS), it must use only CLS-compliant types.","pos":[535,752],"source":"For a type to be compliant with the [Language Independence and Language-Independent Components](../../standard/language-independence-and-language-independent-components.md) (CLS), it must use only CLS-compliant types."},{"content":"This applies also to the constraints on the type parameters of a generic type.","pos":[753,831]},{"content":"The following Visual Basic data types are not CLS-compliant:","pos":[838,898]},{"pos":[908,994],"content":"<bpt id=\"p1\">[</bpt>SByte Data Type<ept id=\"p1\">](../../visual-basic/language-reference/data-types/sbyte-data-type.md)</ept>","source":"[SByte Data Type](../../visual-basic/language-reference/data-types/sbyte-data-type.md)"},{"pos":[1004,1096],"content":"<bpt id=\"p1\">[</bpt>UInteger Data Type<ept id=\"p1\">](../../visual-basic/language-reference/data-types/uinteger-data-type.md)</ept>","source":"[UInteger Data Type](../../visual-basic/language-reference/data-types/uinteger-data-type.md)"},{"pos":[1106,1192],"content":"<bpt id=\"p1\">[</bpt>ULong Data Type<ept id=\"p1\">](../../visual-basic/language-reference/data-types/ulong-data-type.md)</ept>","source":"[ULong Data Type](../../visual-basic/language-reference/data-types/ulong-data-type.md)"},{"pos":[1202,1290],"content":"<bpt id=\"p1\">[</bpt>UShort Data Type<ept id=\"p1\">](../../visual-basic/language-reference/data-types/ushort-data-type.md)</ept>","source":"[UShort Data Type](../../visual-basic/language-reference/data-types/ushort-data-type.md)"},{"content":"When you apply the <ph id=\"ph1\">&lt;xref:System.CLSCompliantAttribute&gt;</ph> attribute to a programming element, you set the attribute's <ph id=\"ph2\">`isCompliant`</ph> parameter to either <ph id=\"ph3\">`True`</ph> or <ph id=\"ph4\">`False`</ph> to indicate compliance or noncompliance.","pos":[1297,1504],"source":"When you apply the <xref:System.CLSCompliantAttribute> attribute to a programming element, you set the attribute's `isCompliant` parameter to either `True` or `False` to indicate compliance or noncompliance."},{"content":"There is no default for this parameter, and you must supply a value.","pos":[1505,1573]},{"pos":[1580,1687],"content":"If you do not apply <ph id=\"ph1\">&lt;xref:System.CLSCompliantAttribute&gt;</ph> to an element, it is considered to be noncompliant.","source":"If you do not apply <xref:System.CLSCompliantAttribute> to an element, it is considered to be noncompliant."},{"content":"By default, this message is a warning.","pos":[1694,1732]},{"content":"For information on hiding warnings or treating warnings as errors, see <bpt id=\"p1\">[</bpt>Configuring Warnings in Visual Basic<ept id=\"p1\">](/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.","pos":[1733,1899],"source":" For information on hiding warnings or treating warnings as errors, see [Configuring Warnings in Visual Basic](/visualstudio/ide/configuring-warnings-in-visual-basic)."},{"pos":[1906,1927],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC40040","source":"**Error ID:** BC40040"},{"pos":[1936,1957],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If the generic type must take a type parameter constrained by this particular type, remove <ph id=\"ph1\">&lt;xref:System.CLSCompliantAttribute&gt;</ph>.","pos":[1967,2094],"source":"If the generic type must take a type parameter constrained by this particular type, remove <xref:System.CLSCompliantAttribute>."},{"content":"The type cannot be CLS-compliant.","pos":[2095,2128]},{"content":"If the generic type must be CLS-compliant, change the type of this constraint to the closest CLS-compliant type.","pos":[2138,2250]},{"content":"For example, in place of <ph id=\"ph1\">`UInteger`</ph> you might be able to use <ph id=\"ph2\">`Integer`</ph> if you do not need the value range above 2,147,483,647.","pos":[2251,2377],"source":" For example, in place of `UInteger` you might be able to use `Integer` if you do not need the value range above 2,147,483,647."},{"content":"If you do need the extended range, you can replace <ph id=\"ph1\">`UInteger`</ph> with <ph id=\"ph2\">`Long`</ph>.","pos":[2378,2452],"source":" If you do need the extended range, you can replace `UInteger` with `Long`."},{"pos":[2461,2469],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2473,2588],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"}]}