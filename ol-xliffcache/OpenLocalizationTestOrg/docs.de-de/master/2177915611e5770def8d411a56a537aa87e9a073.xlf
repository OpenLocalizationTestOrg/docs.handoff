<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2177915611e5770def8d411a56a537aa87e9a073</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\advanced\how-to-draw-wrapped-text-in-a-rectangle.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1dd09c24d31da4ee5f0c4920ea8b8b055b6e48f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfce4458a8ec612e71026083e683a98a516f7a16</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Draw Wrapped Text in a Rectangle | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Draw Wrapped Text in a Rectangle</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can draw wrapped text in a rectangle by using the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> overloaded method of the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> class that takes a <ph id="ph3">&lt;xref:System.Drawing.Rectangle&gt;</ph> or <ph id="ph4">&lt;xref:System.Drawing.RectangleF&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You will also use a <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can also draw wrapped text in a rectangle by using the <ph id="ph1">&lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt;</ph> overloaded method of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> that takes a <ph id="ph3">&lt;xref:System.Drawing.Rectangle&gt;</ph> and a <ph id="ph4">&lt;xref:System.Windows.Forms.TextFormatFlags&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You will also use a <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following illustration shows the output of text drawn in the rectangle when you use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Fonts Text<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/winforms/advanced/media/csfontstext2.png "</bpt>csfontstext2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To draw wrapped text in a rectangle with GDI+</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> overloaded method, passing the text you want, <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> or <ph id="ph3">&lt;xref:System.Drawing.RectangleF&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Font&gt;</ph> and <ph id="ph5">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Drawing.AlignDrawnText#50<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.AlignDrawnText/CS/Form1.cs#50)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Drawing.AlignDrawnText#50<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.AlignDrawnText/VB/Form1.vb#50)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To draw wrapped text in a rectangle with GDI</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextFormatFlags&gt;</ph> enumeration value to specify the text should be wrapped with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt;</ph> overloaded method, passing the text you want, <ph id="ph3">&lt;xref:System.Drawing.Rectangle&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Font&gt;</ph> and <ph id="ph5">&lt;xref:System.Drawing.Color&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Drawing.AlignDrawnText#60<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.AlignDrawnText/CS/Form1.cs#60)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Drawing.AlignDrawnText#60<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.AlignDrawnText/VB/Form1.vb#60)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The previous examples require:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, which is a parameter of <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventHandler&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Draw Text with GDI<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-draw-text-with-gdi.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Using Fonts and Text<ept id="p1">](../../../../docs/framework/winforms/advanced/using-fonts-and-text.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Construct Font Families and Fonts<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-construct-font-families-and-fonts.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Draw Text at a Specified Location<ept id="p1">](../../../../docs/framework/winforms/advanced/how-to-draw-text-at-a-specified-location.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>