{"content":"---\ntitle: \"Using the Pick Activity | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: b89be812-a247-4025-b0e3-ffb20db027a6\ncaps.latest.revision: 11\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Using the Pick Activity\nThis sample demonstrates how to use the <xref:System.Activities.Statements.Pick> activity.  \n  \n The <xref:System.Activities.Statements.Pick> activity provides event-based control modeling. It behaves similar to the C# `switch` statement, which executes only one of the branches in the `switch` statement. Unlike the `switch` statement in which a branch is executed based upon on a value, the <xref:System.Activities.Statements.Pick> activity executes a branch based upon how an activity completes.  \n  \n This sample prompts a user to type in their name on the console within a given time period. The <xref:System.Activities.Statements.Pick> activity in the sample has two branches that are executed based upon whether the user types in their name within 5 seconds or not. If the user types in their name within 5 seconds, the first branch is executed, which contains a custom `ReadLine` activity; otherwise the other branch is executed, which contains a <xref:System.Activities.Statements.Delay> activity. Once a user’s name is typed in on the console, the user’s name is printed on the console. If an input is not entered within 5 seconds, the operation is timed out.  \n  \n## Demonstrates  \n <xref:System.Activities.Statements.Pick> activity.  \n  \n## Discussion  \n The sample includes a Designer workflow and coded workflow.  \n  \n Designer Workflow  \n The Designer version of the sample demonstrates how to create a workflow in the designer. The following files are included:  \n  \n-   Program.cs : Includes the `Main` function that executes the sample workflow.  \n  \n-   ReadString.cs: A custom activity that reads some input from the console.  \n  \n-   Sequence1.xaml: A workflow created using the designer that uses Pick.  \n  \n Coded Workflow  \n The coded version of the sample demonstrates how to create a workflow in the designer. The following files are included:  \n  \n-   Program.cs : Includes the `Main` function that executes the sample workflow.  \n  \n-   ReadString.cs: A custom activity that reads some input from the console.  \n  \n#### To use this sample  \n  \n1.  Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open the Pick.sln solution file.  \n  \n2.  To build the solution, press CTRL+SHIFT+B.  \n  \n3.  To run the solution, press F5.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Basic\\Built-InActivities\\Pick`  \n  \n## See Also","nodes":[{"pos":[12,52],"content":"Using the Pick Activity | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using the Pick Activity | Microsoft Docs","pos":[0,40]}]},{"pos":[318,341],"content":"Using the Pick Activity","linkify":"Using the Pick Activity","nodes":[{"content":"Using the Pick Activity","pos":[0,23]}]},{"content":"This sample demonstrates how to use the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity.","pos":[342,432],"source":"This sample demonstrates how to use the <xref:System.Activities.Statements.Pick> activity."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity provides event-based control modeling.","pos":[439,531],"source":"The <xref:System.Activities.Statements.Pick> activity provides event-based control modeling."},{"content":"It behaves similar to the C# <ph id=\"ph1\">`switch`</ph> statement, which executes only one of the branches in the <ph id=\"ph2\">`switch`</ph> statement.","pos":[532,647],"source":" It behaves similar to the C# `switch` statement, which executes only one of the branches in the `switch` statement."},{"content":"Unlike the <ph id=\"ph1\">`switch`</ph> statement in which a branch is executed based upon on a value, the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity executes a branch based upon how an activity completes.","pos":[648,840],"source":" Unlike the `switch` statement in which a branch is executed based upon on a value, the <xref:System.Activities.Statements.Pick> activity executes a branch based upon how an activity completes."},{"content":"This sample prompts a user to type in their name on the console within a given time period.","pos":[847,938]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity in the sample has two branches that are executed based upon whether the user types in their name within 5 seconds or not.","pos":[939,1114],"source":" The <xref:System.Activities.Statements.Pick> activity in the sample has two branches that are executed based upon whether the user types in their name within 5 seconds or not."},{"content":"If the user types in their name within 5 seconds, the first branch is executed, which contains a custom <ph id=\"ph1\">`ReadLine`</ph> activity; otherwise the other branch is executed, which contains a <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Delay&gt;</ph> activity.","pos":[1115,1348],"source":" If the user types in their name within 5 seconds, the first branch is executed, which contains a custom `ReadLine` activity; otherwise the other branch is executed, which contains a <xref:System.Activities.Statements.Delay> activity."},{"content":"Once a user’s name is typed in on the console, the user’s name is printed on the console.","pos":[1349,1438]},{"content":"If an input is not entered within 5 seconds, the operation is timed out.","pos":[1439,1511]},{"pos":[1520,1532],"content":"Demonstrates","linkify":"Demonstrates","nodes":[{"content":"Demonstrates","pos":[0,12]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity.","pos":[1536,1586],"source":"<xref:System.Activities.Statements.Pick> activity."},{"pos":[1595,1605],"content":"Discussion","linkify":"Discussion","nodes":[{"content":"Discussion","pos":[0,10]}]},{"content":"The sample includes a Designer workflow and coded workflow.","pos":[1609,1668]},{"content":"Designer Workflow","pos":[1675,1692]},{"content":"The Designer version of the sample demonstrates how to create a workflow in the designer.","pos":[1696,1785]},{"content":"The following files are included:","pos":[1786,1819]},{"pos":[1829,1905],"content":"Program.cs : Includes the <ph id=\"ph1\">`Main`</ph> function that executes the sample workflow.","source":"Program.cs : Includes the `Main` function that executes the sample workflow."},{"content":"ReadString.cs: A custom activity that reads some input from the console.","pos":[1915,1987]},{"content":"Sequence1.xaml: A workflow created using the designer that uses Pick.","pos":[1997,2066]},{"pos":[2073,2211],"content":"Coded Workflow  \nThe coded version of the sample demonstrates how to create a workflow in the designer. The following files are included:","leadings":[""," "],"nodes":[{"content":"Coded Workflow","pos":[0,14]},{"content":"The coded version of the sample demonstrates how to create a workflow in the designer. The following files are included:","pos":[17,137],"nodes":[{"content":"The coded version of the sample demonstrates how to create a workflow in the designer.","pos":[0,86]},{"content":"The following files are included:","pos":[87,120]}]}]},{"pos":[2221,2297],"content":"Program.cs : Includes the <ph id=\"ph1\">`Main`</ph> function that executes the sample workflow.","source":"Program.cs : Includes the `Main` function that executes the sample workflow."},{"content":"ReadString.cs: A custom activity that reads some input from the console.","pos":[2307,2379]},{"pos":[2390,2408],"content":"To use this sample","linkify":"To use this sample","nodes":[{"content":"To use this sample","pos":[0,18]}]},{"pos":[2418,2511],"content":"Using <ph id=\"ph1\">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, open the Pick.sln solution file.","source":"Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open the Pick.sln solution file."},{"content":"To build the solution, press CTRL+SHIFT+B.","pos":[2521,2563]},{"content":"To run the solution, press F5.","pos":[2573,2603]},{"pos":[2611,2743],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[2797,3123],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[3124,3174]},{"pos":[3259,3267],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}