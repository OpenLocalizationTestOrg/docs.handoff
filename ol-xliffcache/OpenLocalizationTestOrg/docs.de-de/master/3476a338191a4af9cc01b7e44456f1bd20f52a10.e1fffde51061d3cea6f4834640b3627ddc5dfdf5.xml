{"content":"---\ntitle: \"ICorProfilerInfo2 Interface\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerInfo2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo2\"\nhelpviewer_keywords: \n  - \"ICorProfilerInfo2 interface [.NET Framework profiling]\"\nms.assetid: 91bd49b6-4d12-494f-a8f1-2f251e8c65e3\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ICorProfilerInfo2 Interface\nProvides methods that code profilers use to communicate with the common language runtime (CLR) to control event monitoring and request information. The `ICorProfilerInfo2` interface is an extension of the [ICorProfilerInfo](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md) interface. That is, it provides new methods supported in the .NET Framework version 2.0 and later versions.  \n  \n## Methods  \n  \n|Method|Description|  \n|------------|-----------------|  \n|[DoStackSnapshot Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-dostacksnapshot-method.md)|Walks the stack of the specified thread to report managed call frames to the profiler.|  \n|[EnumModuleFrozenObjects Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-enummodulefrozenobjects-method.md)|Gets an enumerator that allows iteration over the frozen objects in the specified module.|  \n|[GetAppDomainStaticAddress Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getappdomainstaticaddress-method.md)|Gets the address of the specified application domain-static field that is in the scope of the specified application domain.|  \n|[GetArrayObjectInfo Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getarrayobjectinfo-method.md)|Gets detailed information about an array object.|  \n|[GetBoxClassLayout Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getboxclasslayout-method.md)|Gets information about the class layout for a specified value type that is boxed.|  \n|[GetClassFromTokenAndTypeArgs Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getclassfromtokenandtypeargs-method.md)|Gets the `ClassID` of a type by using the specified metadata token and the `ClassID` values of any type arguments.|  \n|[GetClassIDInfo2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getclassidinfo2-method.md)|Gets the parent module of the specified generic class, the metadata token for the class, the `ClassID` of its parent class, and the `ClassID` for each type argument, if present, of the class.|  \n|[GetClassLayout Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getclasslayout-method.md)|Gets information about the layout, in memory, of the fields defined by the specified class. That is, this method gets the offsets of the class's fields.|  \n|[GetCodeInfo2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getcodeinfo2-method.md)|Gets the extents of native code associated with the specified `FunctionID`.|  \n|[GetContextStaticAddress Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getcontextstaticaddress-method.md)|Gets the address of the specified context-static field that is in the scope of the specified context.|  \n|[GetFunctionFromTokenAndTypeArgs Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getfunctionfromtokenandtypeargs-method.md)|Gets the `FunctionID` of a function by using the specified metadata token, containing class, and `ClassID` values of any type arguments.|  \n|[GetFunctionInfo2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getfunctioninfo2-method.md)|Gets the parent class, the metadata token, and the `ClassID` of each type argument, if present, of a function.|  \n|[GetGenerationBounds Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getgenerationbounds-method.md)|Gets the memory regions (the segments of the heap) that make up the generations of the garbage-collected heap.|  \n|[GetNotifiedExceptionClauseInfo Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getnotifiedexceptionclauseinfo-method.md)|Gets the native address and frame information for the exception clause (`catch`/`finally`/`filter`) that is about to be run or has just been run.|  \n|[GetObjectGeneration Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getobjectgeneration-method.md)|Gets the segment of the heap that contains the specified object.|  \n|[GetRVAStaticAddress Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getrvastaticaddress-method.md)|Gets the address of the specified relative virtual address (RVA)-static field.|  \n|[GetStaticFieldInfo Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getstaticfieldinfo-method.md)|Gets the scope in which the specified field is static.|  \n|[GetStringLayout Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getstringlayout-method.md)|Gets information about the layout of a string object.|  \n|[GetThreadAppDomain Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getthreadappdomain-method.md)|Gets the ID of the application domain in which the specified thread is currently executing code.|  \n|[GetThreadStaticAddress Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getthreadstaticaddress-method.md)|Gets the address of the specified thread-static field that is in the scope of the specified thread.|  \n|[SetEnterLeaveFunctionHooks2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-setenterleavefunctionhooks2-method.md)|Specifies profiler-implemented functions to be called on \"enter\", \"leave\", and \"tailcall\" hooks of managed functions.|  \n  \n## Remarks  \n A profiler calls a method in the `ICorProfilerInfo2` interface to communicate with the CLR to control event monitoring and request information.  \n  \n The methods of the `ICorProfilerInfo2` interface are implemented by the CLR using the free-threaded model. Each method returns an HRESULT to indicate success or failure. For a list of possible return codes, see the CorError.h file.  \n  \n The CLR passes an `ICorProfilerInfo2` interface to each code profiler during initialization, using the profiler's implementation of [ICorProfilerCallback::Initialize](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-initialize-method.md). A code profiler can then call methods of the `ICorProfilerInfo2` interface to get information about managed code being executed under the control of the CLR.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)\n- [ICorProfilerInfo Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)\n","nodes":[{"pos":[4,385],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerInfo2 Interface\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerInfo2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo2\"\nhelpviewer_keywords: \n  - \"ICorProfilerInfo2 interface [.NET Framework profiling]\"\nms.assetid: 91bd49b6-4d12-494f-a8f1-2f251e8c65e3\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ICorProfilerInfo2 Interface","nodes":[{"pos":[0,27],"content":"ICorProfilerInfo2 Interface","nodes":[{"content":"ICorProfilerInfo2 Interface","pos":[0,27]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[392,419],"content":"ICorProfilerInfo2 Interface","linkify":"ICorProfilerInfo2 Interface","nodes":[{"content":"ICorProfilerInfo2 Interface","pos":[0,27]}]},{"content":"Provides methods that code profilers use to communicate with the common language runtime (CLR) to control event monitoring and request information.","pos":[420,567]},{"content":"The <ph id=\"ph1\">`ICorProfilerInfo2`</ph> interface is an extension of the <bpt id=\"p1\">[</bpt>ICorProfilerInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)</ept> interface.","pos":[568,736],"source":" The `ICorProfilerInfo2` interface is an extension of the [ICorProfilerInfo](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md) interface."},{"content":"That is, it provides new methods supported in the .NET Framework version 2.0 and later versions.","pos":[737,833]},{"pos":[842,849],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[856,862]},{"content":"Description","pos":[863,874]},{"pos":[914,1034],"content":"<bpt id=\"p1\">[</bpt>DoStackSnapshot Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-dostacksnapshot-method.md)</ept>","source":"[DoStackSnapshot Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-dostacksnapshot-method.md)"},{"content":"Walks the stack of the specified thread to report managed call frames to the profiler.","pos":[1035,1121]},{"pos":[1126,1262],"content":"<bpt id=\"p1\">[</bpt>EnumModuleFrozenObjects Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-enummodulefrozenobjects-method.md)</ept>","source":"[EnumModuleFrozenObjects Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-enummodulefrozenobjects-method.md)"},{"content":"Gets an enumerator that allows iteration over the frozen objects in the specified module.","pos":[1263,1352]},{"pos":[1357,1497],"content":"<bpt id=\"p1\">[</bpt>GetAppDomainStaticAddress Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getappdomainstaticaddress-method.md)</ept>","source":"[GetAppDomainStaticAddress Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getappdomainstaticaddress-method.md)"},{"content":"Gets the address of the specified application domain-static field that is in the scope of the specified application domain.","pos":[1498,1621]},{"pos":[1626,1752],"content":"<bpt id=\"p1\">[</bpt>GetArrayObjectInfo Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getarrayobjectinfo-method.md)</ept>","source":"[GetArrayObjectInfo Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getarrayobjectinfo-method.md)"},{"content":"Gets detailed information about an array object.","pos":[1753,1801]},{"pos":[1806,1930],"content":"<bpt id=\"p1\">[</bpt>GetBoxClassLayout Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getboxclasslayout-method.md)</ept>","source":"[GetBoxClassLayout Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getboxclasslayout-method.md)"},{"content":"Gets information about the class layout for a specified value type that is boxed.","pos":[1931,2012]},{"pos":[2017,2163],"content":"<bpt id=\"p1\">[</bpt>GetClassFromTokenAndTypeArgs Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getclassfromtokenandtypeargs-method.md)</ept>","source":"[GetClassFromTokenAndTypeArgs Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getclassfromtokenandtypeargs-method.md)"},{"pos":[2164,2278],"content":"Gets the <ph id=\"ph1\">`ClassID`</ph> of a type by using the specified metadata token and the <ph id=\"ph2\">`ClassID`</ph> values of any type arguments.","source":"Gets the `ClassID` of a type by using the specified metadata token and the `ClassID` values of any type arguments."},{"pos":[2283,2403],"content":"<bpt id=\"p1\">[</bpt>GetClassIDInfo2 Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getclassidinfo2-method.md)</ept>","source":"[GetClassIDInfo2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getclassidinfo2-method.md)"},{"pos":[2404,2595],"content":"Gets the parent module of the specified generic class, the metadata token for the class, the <ph id=\"ph1\">`ClassID`</ph> of its parent class, and the <ph id=\"ph2\">`ClassID`</ph> for each type argument, if present, of the class.","source":"Gets the parent module of the specified generic class, the metadata token for the class, the `ClassID` of its parent class, and the `ClassID` for each type argument, if present, of the class."},{"pos":[2600,2718],"content":"<bpt id=\"p1\">[</bpt>GetClassLayout Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getclasslayout-method.md)</ept>","source":"[GetClassLayout Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getclasslayout-method.md)"},{"content":"Gets information about the layout, in memory, of the fields defined by the specified class.","pos":[2719,2810]},{"content":"That is, this method gets the offsets of the class's fields.","pos":[2811,2871]},{"pos":[2876,2990],"content":"<bpt id=\"p1\">[</bpt>GetCodeInfo2 Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getcodeinfo2-method.md)</ept>","source":"[GetCodeInfo2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getcodeinfo2-method.md)"},{"pos":[2991,3066],"content":"Gets the extents of native code associated with the specified <ph id=\"ph1\">`FunctionID`</ph>.","source":"Gets the extents of native code associated with the specified `FunctionID`."},{"pos":[3071,3207],"content":"<bpt id=\"p1\">[</bpt>GetContextStaticAddress Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getcontextstaticaddress-method.md)</ept>","source":"[GetContextStaticAddress Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getcontextstaticaddress-method.md)"},{"content":"Gets the address of the specified context-static field that is in the scope of the specified context.","pos":[3208,3309]},{"pos":[3314,3466],"content":"<bpt id=\"p1\">[</bpt>GetFunctionFromTokenAndTypeArgs Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getfunctionfromtokenandtypeargs-method.md)</ept>","source":"[GetFunctionFromTokenAndTypeArgs Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getfunctionfromtokenandtypeargs-method.md)"},{"pos":[3467,3603],"content":"Gets the <ph id=\"ph1\">`FunctionID`</ph> of a function by using the specified metadata token, containing class, and <ph id=\"ph2\">`ClassID`</ph> values of any type arguments.","source":"Gets the `FunctionID` of a function by using the specified metadata token, containing class, and `ClassID` values of any type arguments."},{"pos":[3608,3730],"content":"<bpt id=\"p1\">[</bpt>GetFunctionInfo2 Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getfunctioninfo2-method.md)</ept>","source":"[GetFunctionInfo2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getfunctioninfo2-method.md)"},{"pos":[3731,3841],"content":"Gets the parent class, the metadata token, and the <ph id=\"ph1\">`ClassID`</ph> of each type argument, if present, of a function.","source":"Gets the parent class, the metadata token, and the `ClassID` of each type argument, if present, of a function."},{"pos":[3846,3974],"content":"<bpt id=\"p1\">[</bpt>GetGenerationBounds Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getgenerationbounds-method.md)</ept>","source":"[GetGenerationBounds Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getgenerationbounds-method.md)"},{"content":"Gets the memory regions (the segments of the heap) that make up the generations of the garbage-collected heap.","pos":[3975,4085]},{"pos":[4090,4240],"content":"<bpt id=\"p1\">[</bpt>GetNotifiedExceptionClauseInfo Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getnotifiedexceptionclauseinfo-method.md)</ept>","source":"[GetNotifiedExceptionClauseInfo Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getnotifiedexceptionclauseinfo-method.md)"},{"pos":[4241,4386],"content":"Gets the native address and frame information for the exception clause (<ph id=\"ph1\">`catch`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`finally`</ph><ph id=\"ph4\">/</ph><ph id=\"ph5\">`filter`</ph>) that is about to be run or has just been run.","source":"Gets the native address and frame information for the exception clause (`catch`/`finally`/`filter`) that is about to be run or has just been run."},{"pos":[4391,4519],"content":"<bpt id=\"p1\">[</bpt>GetObjectGeneration Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getobjectgeneration-method.md)</ept>","source":"[GetObjectGeneration Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getobjectgeneration-method.md)"},{"content":"Gets the segment of the heap that contains the specified object.","pos":[4520,4584]},{"pos":[4589,4717],"content":"<bpt id=\"p1\">[</bpt>GetRVAStaticAddress Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getrvastaticaddress-method.md)</ept>","source":"[GetRVAStaticAddress Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getrvastaticaddress-method.md)"},{"content":"Gets the address of the specified relative virtual address (RVA)-static field.","pos":[4718,4796]},{"pos":[4801,4927],"content":"<bpt id=\"p1\">[</bpt>GetStaticFieldInfo Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getstaticfieldinfo-method.md)</ept>","source":"[GetStaticFieldInfo Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getstaticfieldinfo-method.md)"},{"content":"Gets the scope in which the specified field is static.","pos":[4928,4982]},{"pos":[4987,5107],"content":"<bpt id=\"p1\">[</bpt>GetStringLayout Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getstringlayout-method.md)</ept>","source":"[GetStringLayout Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getstringlayout-method.md)"},{"content":"Gets information about the layout of a string object.","pos":[5108,5161]},{"pos":[5166,5292],"content":"<bpt id=\"p1\">[</bpt>GetThreadAppDomain Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getthreadappdomain-method.md)</ept>","source":"[GetThreadAppDomain Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getthreadappdomain-method.md)"},{"content":"Gets the ID of the application domain in which the specified thread is currently executing code.","pos":[5293,5389]},{"pos":[5394,5528],"content":"<bpt id=\"p1\">[</bpt>GetThreadStaticAddress Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getthreadstaticaddress-method.md)</ept>","source":"[GetThreadStaticAddress Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-getthreadstaticaddress-method.md)"},{"content":"Gets the address of the specified thread-static field that is in the scope of the specified thread.","pos":[5529,5628]},{"pos":[5633,5777],"content":"<bpt id=\"p1\">[</bpt>SetEnterLeaveFunctionHooks2 Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-setenterleavefunctionhooks2-method.md)</ept>","source":"[SetEnterLeaveFunctionHooks2 Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo2-setenterleavefunctionhooks2-method.md)"},{"content":"Specifies profiler-implemented functions to be called on \"enter\", \"leave\", and \"tailcall\" hooks of managed functions.","pos":[5778,5895]},{"pos":[5905,5912],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5916,6059],"content":"A profiler calls a method in the <ph id=\"ph1\">`ICorProfilerInfo2`</ph> interface to communicate with the CLR to control event monitoring and request information.","source":"A profiler calls a method in the `ICorProfilerInfo2` interface to communicate with the CLR to control event monitoring and request information."},{"content":"The methods of the <ph id=\"ph1\">`ICorProfilerInfo2`</ph> interface are implemented by the CLR using the free-threaded model.","pos":[6066,6172],"source":"The methods of the `ICorProfilerInfo2` interface are implemented by the CLR using the free-threaded model."},{"content":"Each method returns an HRESULT to indicate success or failure.","pos":[6173,6235]},{"content":"For a list of possible return codes, see the CorError.h file.","pos":[6236,6297]},{"content":"The CLR passes an <ph id=\"ph1\">`ICorProfilerInfo2`</ph> interface to each code profiler during initialization, using the profiler's implementation of <bpt id=\"p1\">[</bpt>ICorProfilerCallback::Initialize<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-initialize-method.md)</ept>.","pos":[6304,6565],"source":"The CLR passes an `ICorProfilerInfo2` interface to each code profiler during initialization, using the profiler's implementation of [ICorProfilerCallback::Initialize](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-initialize-method.md)."},{"content":"A code profiler can then call methods of the <ph id=\"ph1\">`ICorProfilerInfo2`</ph> interface to get information about managed code being executed under the control of the CLR.","pos":[6566,6723],"source":" A code profiler can then call methods of the `ICorProfilerInfo2` interface to get information about managed code being executed under the control of the CLR."},{"pos":[6732,6744],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[6748,6852],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[6859,6893],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[6900,6925],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[6932,7040],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[7049,7057],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[7061,7159],"content":"<bpt id=\"p1\">[</bpt>Profiling Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept>","source":"[Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)"},{"pos":[7162,7272],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerInfo Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)</ept>","source":"[ICorProfilerInfo Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)"}]}