<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="debugging-enumerations.md" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5edd6dfb3dac05ce4614c43949f2ec4c19b5f742</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\debugging\debugging-enumerations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f50e859ef94b1db8f98eb324e462b4458a79e6fa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f67994809a4b296a9d5b8683559b659a342409f4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Debugging Enumerations</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Debugging Enumerations</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section describes the unmanaged enumerations that the debugging API uses.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CLR_DEBUGGING_PROCESS_FLAGS Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/clr-debugging-process-flags-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Provides values that are used by the <bpt id="p1">[</bpt>ICLRDebugging::OpenVirtualProcess<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/iclrdebugging-openvirtualprocess-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CLRDataEnumMemoryFlags Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/clrdataenummemoryflags-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Indicates which memory regions a call to the <bpt id="p1">[</bpt>ICLRDataEnumMemoryRegions::EnumMemoryRegions<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/iclrdataenummemoryregions-enummemoryregions-method.md)</ept> method should include.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_PUB_ENUMPROCESS Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-pub-enumprocess-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Identifies the type of process to be enumerated.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugBlockingReason Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugblockingreason-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Specifies the reasons why a thread may become blocked on a given object.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>CorDebugChainReason</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Indicates the reason or reasons for the initiation of a call chain.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugCodeInvokeKind Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugcodeinvokekind-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Describes how an exported function invokes managed code.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugCodeInvokePurpose Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugcodeinvokepurpose-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Describes why an exported function calls managed code.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CorDebugCreateProcessFlags</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Provides additional debugging options that can be used in a call to the <bpt id="p1">[</bpt>ICorDebug::CreateProcess<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebug-createprocess-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugDebugEventKind Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugdebugeventkind-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Indicates the type of event whose information is decoded by the <bpt id="p1">[</bpt>DecodeEvent<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess6-decodeevent-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugDecodeEventFlagsWindows Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugdecodeeventflagswindows-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Provides additional information about debug events on the Windows platform.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CorDebugExceptionCallbackType</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Indicates the type of callback that is made from an <bpt id="p1">[</bpt>ICorDebugManagedCallback2::Exception<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugmanagedcallback2-exception-method.md)</ept> event.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugExceptionFlags Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugexceptionflags-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Provides additional information about an exception.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CorDebugExceptionUnwindCallbackType</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Indicates the event that is being signaled by the callback during the unwind phase.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugGCType Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebuggctype-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Indicates whether the garbage collector is running on a workstation or a server.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugGenerationTypes Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebuggenerationtypes-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specifies the generation of a region of memory on the managed heap.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CorDebugHandleType</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Indicates the handle type.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugIlToNativeMappingTypes Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugiltonativemappingtypes-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Indicates whether a particular range of native instructions corresponds to a special code region.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CorDebugIntercept</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Indicates the types of code that can be stepped into.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugInterfaceVersion Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebuginterfaceversion-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Specifies either a version of the .NET Framework, or the version of the .NET Framework in which an interface was introduced.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>CorDebugInternalFrameType</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Identifies the type of stack frame.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugJITCompilerFlags Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugjitcompilerflags-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Contains values that influence the behavior of the managed just-in-time (JIT) compiler.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugJITCompilerFlagsDeprecated Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugjitcompilerflagsdeprecated-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Obsolete.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`CORDEBUG_JIT_DEFAULT`</ph> member of the <bpt id="p1">[</bpt>CorDebugJITCompilerFlags<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugjitcompilerflags-enumeration.md)</ept> enumeration instead.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>CorDebugMappingResult</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Provides the details of how the value of the instruction pointer (IP) was obtained.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugMDAFlags Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugmdaflags-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Specifies the status of the thread on which the managed debugging assistant (MDA) is fired.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugNGenPolicy Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugngenpolicy-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Provides a value that determines whether a debugger loads native (NGen) images from the native image cache.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugPlatform Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugplatform-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Provides target platform values that are used by the <bpt id="p1">[</bpt>ICorDebugDataTarget::GetPlatform<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-getplatform-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugRecordFormat Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Describes the format of the data in a byte array that contains information about a native exception debug event.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CorDebugRegister</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Specifies the registers associated with a given processor architecture.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugSetContextFlag Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugsetcontextflag-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Indicates whether the context is from the active (or leaf) frame on the stack or has been computed by unwinding from another frame.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugStateChange Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugstatechange-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Describes the amount of cached data that must be discarded based on changes to the process.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>CorDebugStepReason</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Indicates the outcome of an individual step.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CorDebugThreadState</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies the state of a thread for debugging.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&gt;</ph>CorDebugUnmappedStop</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Specifies the type of unmapped code that can trigger a halt in code execution by the stepper.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CorDebugUserState</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Indicates the user state of a thread.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorGCReferenceType Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/corgcreferencetype-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Identifies the source of an object to be garbage-collected.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ILCodeKind Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/ilcodekind-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Provides values that specify whether the debugger is able to access local variables or code added in profiler ReJIT instrumentation.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LoggingLevelEnum Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/logginglevelenum-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Indicates the severity level of a descriptive message that is written to the event log when a managed thread logs an event.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LogSwitchCallReason Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/logswitchcallreason-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Indicates the operation that was performed on a debugging/tracing switch.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>VariableLocationType Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/variablelocationtype-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Indicates the native location type of a variable.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WriteableMetadataUpdateMode Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/writeablemetadataupdatemode-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Provides values that specify whether in-memory updates to metadata are visible to a debugger.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ClrDataSourceType Enumeration<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/clrdatasourcetype-enumeration.md)</ept> Provides values that are used by the CLRDATA_IL_ADDRESS_MAP structure.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Related Sections</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Coclasses<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-coclasses.md)</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Global Static Functions<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-global-static-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Structures<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>