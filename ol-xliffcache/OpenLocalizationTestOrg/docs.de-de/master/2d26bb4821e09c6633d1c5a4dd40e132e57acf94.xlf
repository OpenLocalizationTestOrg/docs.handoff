<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d26bb4821e09c6633d1c5a4dd40e132e57acf94</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\types\how-to-convert-a-byte-array-to-an-int.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6e6e8f3b368a17b21eaad6e8637a2d8b0af2861</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e094e0e8d264baab921f2d81fd77e860ac2c2d8b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Convert a byte Array to an int (C# Programming Guide) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Convert a byte Array to an int (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows you how to use the <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class to convert an array of bytes to an <bpt id="p1">[</bpt>int<ept id="p1">](../../../csharp/language-reference/keywords/int.md)</ept> and back to an array of bytes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You may have to convert from bytes to a built-in data type after you read bytes off the network, for example.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In addition to the <bpt id="p1">[</bpt>ToInt32(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToInt32(System.Byte[],System.Int32))</ept> method in the example, the following table lists methods in the <ph id="ph3">&lt;xref:System.BitConverter&gt;</ph> class that convert bytes (from an array of bytes) to other built-in types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Type returned</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToBoolean(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToBoolean(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToChar(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToChar(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToDouble(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToDouble(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToInt16(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToInt16(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToInt32(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToInt32(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToInt64(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToInt64(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToSingle(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToSingle(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToUInt16(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToUInt16(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToUInt32(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToUInt32(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ToUInt64(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToUInt64(System.Byte[],System.Int32))</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example initializes an array of bytes, reverses the array if the computer architecture is little-endian (that is, the least significant byte is stored first), and then calls the <bpt id="p1">[</bpt>ToInt32(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToInt32(System.Byte[],System.Int32))</ept> method to convert four bytes in the array to an <ph id="ph3">`int`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The second argument to <bpt id="p1">[</bpt>ToInt32(Byte<ph id="ph1">\[</ph><ph id="ph2">\]</ph>, Int32)<ept id="p1">](xref:System.BitConverter.ToInt32(System.Byte[],System.Int32))</ept> specifies the start index of the array of bytes.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The output may differ depending on the endianess of your computer's architecture.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuideTypes#22<ept id="p2">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-byte-array-to-an-int_1.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Int32%29&gt;</ph> method of the <ph id="ph2">&lt;xref:System.BitConverter&gt;</ph> class is called to convert an <ph id="ph3">`int`</ph> to an array of bytes.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The output may differ depending on the endianess of your computer's architecture.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuideTypes#23<ept id="p2">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-byte-array-to-an-int_2.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.BitConverter&gt;</ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.BitConverter.IsLittleEndian&gt;</ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Types<ept id="p1">](../../../csharp/programming-guide/types/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>