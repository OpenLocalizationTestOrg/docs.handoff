{"content":"---\ntitle: \"Compiler Error CS0835 | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"CS0835\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"CS0835\"\nms.assetid: 593c26f6-6d82-49a6-8ace-4d29dd9f5fbe\ncaps.latest.revision: 8\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error CS0835\nCannot convert lambda to an expression tree whose type argument 'type' is not a delegate type.  \n  \n If a lambda expression is converted to an expression tree, the expression tree must have a delegate type for its argument. Furthermore, the lambda expression must be convertible to the delegate type.  \n  \n## To correct this error  \n  \n1.  Change the type parameter from `int` to a delegate type, for example `Func<int,int>`.  \n  \n## Example  \n The following example generates CS0835:  \n  \n```  \n// cs0835.cs  \nusing System;  \nusing System.Linq;  \nusing System.Linq.Expressions;  \n  \npublic class C  \n{  \n    public static int Main()  \n    {  \n        Expression<int> e = x => x + 1; // CS0835  \n  \n        // Try the following line instead.  \n       // Expression<Func<int,int>> e2 = x => x + 1;  \n  \n        return 1;  \n    }  \n}  \n```","nodes":[{"pos":[12,50],"content":"Compiler Error CS0835 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error CS0835 | Microsoft Docs","pos":[0,38]}]},{"pos":[565,586],"content":"Compiler Error CS0835","linkify":"Compiler Error CS0835","nodes":[{"content":"Compiler Error CS0835","pos":[0,21]}]},{"content":"Cannot convert lambda to an expression tree whose type argument 'type' is not a delegate type.","pos":[587,681]},{"content":"If a lambda expression is converted to an expression tree, the expression tree must have a delegate type for its argument.","pos":[688,810]},{"content":"Furthermore, the lambda expression must be convertible to the delegate type.","pos":[811,887]},{"pos":[896,917],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[927,1012],"content":"Change the type parameter from <ph id=\"ph1\">`int`</ph> to a delegate type, for example <ph id=\"ph2\">`Func&lt;int,int&gt;`</ph>.","source":"Change the type parameter from `int` to a delegate type, for example `Func<int,int>`."},{"pos":[1021,1028],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example generates CS0835:","pos":[1032,1071]}]}