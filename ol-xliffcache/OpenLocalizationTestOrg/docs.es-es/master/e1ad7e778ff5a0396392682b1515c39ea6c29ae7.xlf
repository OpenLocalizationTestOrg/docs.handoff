<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-ffc129d" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1ad7e778ff5a0396392682b1515c39ea6c29ae7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\configure-apps\file-schema\wcf\msmqintegration.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fccba9bb5e9d3de871958f7b337778c5fe9703e0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99cba88e02c3837e678b5f5f9be8d7d99171d848</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph>msmqIntegration<ph id="ph2">&amp;gt;</ph> | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph>msmqIntegration<ph id="ph2">&amp;gt;</ph></source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies a MSMQ transport for custom binding.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>system.serviceModel&gt;</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>bindings&gt;</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>customBinding&gt;</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>binding&gt;</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>msmqIntegration&gt;</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Attributes and Elements</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following sections describe attributes, child elements, and parent elements.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Attributes</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>customDeadLetterQueue</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A URI that indicates the location of the per-application dead letter queue, where messages that have expired or failed to be delivered to the application are transferred.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For messages that require ExactlyOnce assurances (that is, <ph id="ph1">`exactlyOnce`</ph> is set to <ph id="ph2">`true`</ph>), this attribute defaults to the system-wide transactional dead-letter queue in MSMQ.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For messages that require no assurances (that is, <ph id="ph1">`exactlyOnce`</ph> is set to <ph id="ph2">`false`</ph>), this attribute defaults to <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The value must use the net.msmq scheme.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`d``eadLetterQueue`</ph> is set to <ph id="ph2">`None`</ph> or <ph id="ph3">`System`</ph>, then this attribute must be set to <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If this attribute is not <ph id="ph1">`null`</ph>, then <ph id="ph2">`deadLetterQueue`</ph> must be set to <ph id="ph3">`Custom`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>deadLetterQueue</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Specifies the type of dead letter queue to use.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Valid values include</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-   Custom: Custom deadletter queue.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-   None: No deadletter queue is to be used.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-   System: Use the system deadletter queue.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This attribute is of type DeadLetterQueue.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>durable</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A Boolean value that specifies whether the messages processed by this binding are durable or volatile.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A durable message survives a queue manager crash, while a volatile message does not.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Volatile messages are useful when applications require lower latency and can tolerate occasional lost messages.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`exactlyOnce`</ph> is set to <ph id="ph2">`true`</ph>, the messages must be durable.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>exactlyOnce</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A Boolean that specifies whether messages processed by this binding will be received exactly once.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A message can be sent with or without assurances.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An assurance enables an application to ensure that a sent message reached the receiving message queue, or if it did not, the application can determine this by reading the dead letter queue.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`exactlyOnce`</ph>, when set to <ph id="ph2">`true`</ph>, indicates that MSMQ will ensure that a sent message is delivered to the receiving message queue once and only once, and if delivery fails, the message is sent to the dead letter queue.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Messages sent with <ph id="ph1">`exactlyOnce`</ph> set to <ph id="ph2">`true`</ph> must be sent to a transactional queue only.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>manualAddressing</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A Boolean value that enables the user to take control of message addressing.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This property is usually used in router scenarios, where the application determines which one of several destinations to send a message to.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When set to <ph id="ph1">`true`</ph>, the channel assumes the message has already been addressed and does not add any additional information to it.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The user can then address every message individually.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When set to <ph id="ph1">`false`</ph>, the default Windows Communication Foundation (WCF) addressing mechanism automatically creates addresses for all messages.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>maxBufferPoolSize</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A positive integer that specifies the maximum size of the buffer pool.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is 524288.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Many parts of WCF use buffers.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Creating and destroying buffers each time they are used is expensive, and garbage collection for buffers is also expensive.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>With buffer pools, you can take a buffer from the pool, use it, and return it to the pool once you are done.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Thus the overhead in creating and destroying buffers is avoided.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>maxImmediateRetries</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An integer that specifies the maximum number of immediate retry attempts on a message that is read from the application queue..</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default is 5.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If the maximum number of immediate retries for the message is attempted and the message is not consumed by the application, then the message is sent to a retry queue for retrying at some later point in time.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If no retry cycles are specified, then the messages is either sent to the poison message queue, or a negative acknowledgment is sent back to the sender.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>maxReceivedMessageSize</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A positive integer that specifies the maximum message size in bytes including headers.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The sender of a message receives a SOAP fault when the message is too large for the receiver.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The receiver drops the message and creates an entry of the event in the trace log.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default is 65536.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>maxRetryCycles</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An integer that specifies the maximum number of retry cycles to attempt delivery of messages to the receiving application.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A single retry cycle attempts to deliver a message to an application a specified number of times.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The number of attempts made is set by the <ph id="ph1">`maxImmediateRetries`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If the application fails to consume the message after the attempts at delivery have been exhausted, the message is sent to a retry queue.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <ph id="ph1">`retryCycleDelay`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`maxRetryCycles`</ph> attribute specifies the number of retry cycles the application uses to attempt to deliver the message.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>rejectAfterLastRetry</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A Boolean value that specifies what action to take for a message that has failed delivery after the maximum number of retries have been attempted.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> means that a negative acknowledgment is returned to the sender and the message is dropped; <ph id="ph2">`false`</ph> means that the message is sent to the poison message queue.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If the value is <ph id="ph1">`false`</ph>, the receiving application can read the poison message queue to process poison messages (that is, messages that have failed delivery).</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>MSMQ 3.0 does not support returning a negative acknowledgment to the sender, so this attribute will be ignored in MSMQ 3.0.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>retryCycleDelay</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> that specifies the time delay between retry cycles when attempting to deliver a message that could not be delivered immediately.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default is 00:10:00.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A single retry cycle attempts to deliver a message to a receiving application a specified number of times.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The number of attempts made is specified by the <ph id="ph1">`maxImmediateRetries`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If the application fails to consume the message after the specified number of immediate retries, the message is sent to a retry queue.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <ph id="ph1">`retryCycleDelay`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The number of retry cycles is specified by <ph id="ph1">`maxRetryCycles`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>serializationFormat</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Specifies the formatter that is used to serialize objects that are sent as part of an MSMQ message.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Valid values are</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-   ActiveX: The ActiveX formatter is used when serializing COM objects.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-   Binary:  Serializes the object to a binary packet.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-   ByteArray:  Serializes the object to an array of bytes.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-   Stream:  Serializes the object to a stream.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-   Xml:  Serializes the object to an XML packet.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The default is XML.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This attribute is of type <ph id="ph1">&lt;xref:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>timeToLive</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> that specifies how long the messages are valid before they expired and are put in the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The default is 1.00:00:00, which means 1 day.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This attribute is set to ensure that time-sensitive messages do not become stale before they are processed by the receiving applications.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A message in a queue that is not consumed by the receiving application within the time interval specified is said to be expired.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Expired messages are sent to special queue called the dead letter queue.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The location of the dead letter queue is set with the <ph id="ph1">`customDeadLetterQueue`</ph> attribute or to the appropriate default, based on assurances.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>useMsmqTracing</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A Boolean value that specifies whether messages processed by this binding should be traced.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When tracing is enabled, report messages are created and sent to the report queue each time the message leaves or arrives at a Message Queuing computer.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>useSourceJournal</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A Boolean value that specifies whether copies of messages processed by this binding should be stored in the source journal queue.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Queued applications that want to keep a record of messages that have left the computer's outgoing queue can copy the messages to a journal queue.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Once a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Child Elements</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>msmqTransportSecurity</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Specifies transport security settings for this binding.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This element is of type <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqTransportSecurityElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Parent Elements</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>binding&gt;<ept id="p1">](../../../../../docs/framework/misc/binding.md)</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Defines all binding capabilities of the custom binding.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqIntegrationElement&gt;</ph></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CustomBinding&gt;</ph></source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Transports<ept id="p1">](../../../../../docs/framework/wcf/feature-details/transports.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Queues in WCF<ept id="p1">](../../../../../docs/framework/wcf/feature-details/queues-in-wcf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Choosing a Transport<ept id="p1">](../../../../../docs/framework/wcf/feature-details/choosing-a-transport.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Bindings<ept id="p1">](../../../../../docs/framework/wcf/bindings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Extending Bindings<ept id="p1">](../../../../../docs/framework/wcf/extending/extending-bindings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Custom Bindings<ept id="p1">](../../../../../docs/framework/wcf/extending/custom-bindings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt><ph id="ph1">\&lt;</ph>customBinding&gt;<ept id="p1">](../../../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>