{"content":"---\ntitle: \"CertVerifyAuthenticodeLicense Function | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"CertVerifyAuthenticodeLicense\"\napi_location: \n  - \"clr.dll\"\napi_type: \n  - \"DLLExport\"\ndev_langs: \n  - \"C++\"\nms.assetid: 00118de7-33c6-41c4-8e1f-5d5e35e0da83\ncaps.latest.revision: 5\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# CertVerifyAuthenticodeLicense Function\nVerifies the validity of an Authenticode XrML license.  \n  \n## Syntax  \n  \n```  \nHRESULT CertVerifyAuthenticodeLicense (  \n    [in]   PCRYPT_DATA_BLOB                   pLicenseBlob,  \n    [in]   OPTIONAL DWORD                     dwFlags,  \n    [out]  PAXL_AUTHENTICODE_SIGNER_INFO      pSignerInfo,  \n    [out]  PAXL_AUTHENTICODE_TIMESTAMPER_INFO pTimestamperInfo  \n);  \n```  \n  \n#### Parameters  \n `pLicenseBlob`  \n [in] The Authenticode XrML license to be verified.  \n  \n See the [CRYPTOAPI_BLOB](http://msdn.microsoft.com/library/windows/desktop/aa380238.aspx) structure.  \n  \n `dwFlags`  \n [in] Optional. A combination of following values:  \n  \n-   AXL_REVOCATION_NO_CHECK  \n  \n-   AXL_REVOCATION_CHECK_END_CERT_ONLY  \n  \n-   AXL_REVOCATION_CHECK_ENTIRE_CHAIN  \n  \n-   AXL_URL_CACHE_ONLY_RETRIEVAL  \n  \n-   AXL_LIFETIME_SIGNING  \n  \n-   AXL_TRUST_MICROSOFT_ROOT_ONLY  \n  \n `pSignerInfo`  \n [out] To receive the signer's information. If the license wasn't signed, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeSignerInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md) function after use.  \n  \n See [AXL_AUTHENTICODE_SIGNER_INFO Structure](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-signer-info-structure.md).  \n  \n `pTimestamperInfo`  \n [out] To receive time stamper's information, if available. If the license was not time-stamped, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeTimestamperInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md) function after use.  \n  \n See [AXL_AUTHENTICODE_TIMESTAMPER_INFO Structure](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-timestamper-info-structure.md).  \n  \n## Return Value  \n Returns `S_OK` if successful. Otherwise, returns an error code.  \n  \n## See Also  \n [Authenticode](../../../../docs/framework/unmanaged-api/authenticode/index.md)   \n [GetHashFromHandle Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-gethashfromhandle-method.md)   \n [ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)","nodes":[{"pos":[12,67],"content":"CertVerifyAuthenticodeLicense Function | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"CertVerifyAuthenticodeLicense Function | Microsoft Docs","pos":[0,55]}]},{"pos":[497,535],"content":"CertVerifyAuthenticodeLicense Function","linkify":"CertVerifyAuthenticodeLicense Function","nodes":[{"content":"CertVerifyAuthenticodeLicense Function","pos":[0,38]}]},{"content":"Verifies the validity of an Authenticode XrML license.","pos":[536,590]},{"pos":[599,605],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[923,933],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The Authenticode XrML license to be verified.","pos":[955,1005]},{"pos":[1012,1112],"content":"See the <bpt id=\"p1\">[</bpt>CRYPTOAPI_BLOB<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/aa380238.aspx)</ept> structure.","source":"See the [CRYPTOAPI_BLOB](http://msdn.microsoft.com/library/windows/desktop/aa380238.aspx) structure."},{"content":"[in] Optional.","pos":[1132,1146]},{"content":"A combination of following values:","pos":[1147,1181]},{"content":"AXL_REVOCATION_NO_CHECK","pos":[1191,1214]},{"content":"AXL_REVOCATION_CHECK_END_CERT_ONLY","pos":[1224,1258]},{"content":"AXL_REVOCATION_CHECK_ENTIRE_CHAIN","pos":[1268,1301]},{"content":"AXL_URL_CACHE_ONLY_RETRIEVAL","pos":[1311,1339]},{"content":"AXL_LIFETIME_SIGNING","pos":[1349,1369]},{"content":"AXL_TRUST_MICROSOFT_ROOT_ONLY","pos":[1379,1408]},{"pos":[1415,1761],"content":"`pSignerInfo`  \n[out] To receive the signer's information. If the license wasn't signed, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeSignerInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md) function after use.","leadings":[""," "],"nodes":[{"content":"[out] To receive the signer's information. If the license wasn't signed, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeSignerInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md) function after use.","pos":[16,345],"nodes":[{"content":"[out] To receive the signer's information.","pos":[0,42]},{"content":"If the license wasn't signed, <ph id=\"ph1\">`dwError`</ph> is set to TRUST_E_NOSIGNATURE.","pos":[43,113],"source":" If the license wasn't signed, `dwError` is set to TRUST_E_NOSIGNATURE."},{"content":"It is the caller's responsibility to free resources by using the <bpt id=\"p1\">[</bpt>CertFreeAuthenticodeSignerInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md)</ept> function after use.","pos":[114,329],"source":" It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeSignerInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodesignerinfo-function.md) function after use."}]}]},{"pos":[1768,1910],"content":"See <bpt id=\"p1\">[</bpt>AXL_AUTHENTICODE_SIGNER_INFO Structure<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-signer-info-structure.md)</ept>.","source":"See [AXL_AUTHENTICODE_SIGNER_INFO Structure](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-signer-info-structure.md)."},{"pos":[1917,2301],"content":"`pTimestamperInfo`  \n[out] To receive time stamper's information, if available. If the license was not time-stamped, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeTimestamperInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md) function after use.","leadings":[""," "],"nodes":[{"content":"[out] To receive time stamper's information, if available. If the license was not time-stamped, `dwError` is set to TRUST_E_NOSIGNATURE. It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeTimestamperInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md) function after use.","pos":[21,383],"nodes":[{"content":"[out] To receive time stamper's information, if available.","pos":[0,58]},{"content":"If the license was not time-stamped, <ph id=\"ph1\">`dwError`</ph> is set to TRUST_E_NOSIGNATURE.","pos":[59,136],"source":" If the license was not time-stamped, `dwError` is set to TRUST_E_NOSIGNATURE."},{"content":"It is the caller's responsibility to free resources by using the <bpt id=\"p1\">[</bpt>CertFreeAuthenticodeTimestamperInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md)</ept> function after use.","pos":[137,362],"source":" It is the caller's responsibility to free resources by using the [CertFreeAuthenticodeTimestamperInfo](../../../../docs/framework/unmanaged-api/authenticode/certfreeauthenticodetimestamperinfo-function.md) function after use."}]}]},{"pos":[2308,2460],"content":"See <bpt id=\"p1\">[</bpt>AXL_AUTHENTICODE_TIMESTAMPER_INFO Structure<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-timestamper-info-structure.md)</ept>.","source":"See [AXL_AUTHENTICODE_TIMESTAMPER_INFO Structure](../../../../docs/framework/unmanaged-api/authenticode/axl-authenticode-timestamper-info-structure.md)."},{"pos":[2469,2481],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns <ph id=\"ph1\">`S_OK`</ph> if successful.","pos":[2485,2514],"source":"Returns `S_OK` if successful."},{"content":"Otherwise, returns an error code.","pos":[2515,2548]},{"pos":[2557,2565],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Authenticode<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/authenticode/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2569,2648],"source":"[Authenticode](../../../../docs/framework/unmanaged-api/authenticode/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>GetHashFromHandle Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-gethashfromhandle-method.md)</ept><ph id=\"ph1\"> </ph>","pos":[2651,2772],"source":" [GetHashFromHandle Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-gethashfromhandle-method.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ICLRStrongName Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)</ept>","pos":[2775,2880],"source":" [ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)"}]}