{"content":"---\ntitle: \"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"change notifications [Windows Forms], raising\"\n  - \"BindingSource component [Windows Forms], and IPropertyChange\"\n  - \"data sources [Windows Forms], detecting changes\"\n  - \"examples [Windows Forms], BindingSource component\"\n  - \"change notifications\"\n  - \"INotifyPropertyChanged interface [Windows Forms], using with BindingSource\"\n  - \"BindingSource component [Windows Forms], examples\"\nms.assetid: 7fa2cf51-c09f-4375-adf0-e36c5617f099\n---\n# How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface\nThe <xref:System.Windows.Forms.BindingSource> component will automatically detect changes in a data source when the type contained in the data source implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface and raises <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> events when a property value is changed. This is useful because controls bound to the <xref:System.Windows.Forms.BindingSource> will then automatically update as the data source values change.  \n  \n> [!NOTE]\n>  If your data source implements <xref:System.ComponentModel.INotifyPropertyChanged> and you are performing asynchronous operations, you should not make changes to the data source on a background thread. Instead, you should read the data on a background thread and merge the data into a list on the UI thread.  \n  \n## Example  \n The following code example demonstrates a simple implementation of the <xref:System.ComponentModel.INotifyPropertyChanged> interface. It also shows how the <xref:System.Windows.Forms.BindingSource> automatically passes a data source change to a bound control when the <xref:System.Windows.Forms.BindingSource> is bound to a list of the <xref:System.ComponentModel.INotifyPropertyChanged> type.  \n  \n If you use the `CallerMemberName` attribute, calls to the `NotifyPropertyChanged` method don't have to specify the property name as a string argument. For more information, see [Caller Information (C#)](../../../csharp/programming-guide/concepts/caller-information.md) or [Caller Information (Visual Basic)](../../../visual-basic/programming-guide/concepts/caller-information.md).  \n  \n [!code-csharp[System.ComponentModel.IPropertyChangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IPropertyChangeExample/CS/Form1.cs#1)]\n [!code-vb[System.ComponentModel.IPropertyChangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IPropertyChangeExample/VB/Form1.vb#1)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Data, System.Drawing and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project. Also see [How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb129228(v=vs.100)).  \n  \n## See also\n\n- <xref:System.ComponentModel.INotifyPropertyChanged>\n- [BindingSource Component](bindingsource-component.md)\n- [How to: Raise Change Notifications Using the BindingSource ResetItem Method](how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)\n","nodes":[{"pos":[4,630],"embed":true,"restype":"x-metadata","content":"title: \"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"change notifications [Windows Forms], raising\"\n  - \"BindingSource component [Windows Forms], and IPropertyChange\"\n  - \"data sources [Windows Forms], detecting changes\"\n  - \"examples [Windows Forms], BindingSource component\"\n  - \"change notifications\"\n  - \"INotifyPropertyChanged interface [Windows Forms], using with BindingSource\"\n  - \"BindingSource component [Windows Forms], examples\"\nms.assetid: 7fa2cf51-c09f-4375-adf0-e36c5617f099","nodes":[{"content":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface","nodes":[{"pos":[0,97],"content":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface","nodes":[{"content":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface","pos":[0,97]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[637,734],"content":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface","linkify":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface","nodes":[{"content":"How to: Raise Change Notifications Using a BindingSource and the INotifyPropertyChanged Interface","pos":[0,97]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component will automatically detect changes in a data source when the type contained in the data source implements the <ph id=\"ph2\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface and raises <ph id=\"ph3\">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> events when a property value is changed.","pos":[735,1081],"source":"The <xref:System.Windows.Forms.BindingSource> component will automatically detect changes in a data source when the type contained in the data source implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface and raises <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> events when a property value is changed."},{"content":"This is useful because controls bound to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> will then automatically update as the data source values change.","pos":[1082,1233],"source":" This is useful because controls bound to the <xref:System.Windows.Forms.BindingSource> will then automatically update as the data source values change."},{"pos":[1241,1559],"content":"[!NOTE]\n If your data source implements <xref:System.ComponentModel.INotifyPropertyChanged> and you are performing asynchronous operations, you should not make changes to the data source on a background thread. Instead, you should read the data on a background thread and merge the data into a list on the UI thread.","leadings":["","> "],"nodes":[{"content":"If your data source implements <xref:System.ComponentModel.INotifyPropertyChanged> and you are performing asynchronous operations, you should not make changes to the data source on a background thread. Instead, you should read the data on a background thread and merge the data into a list on the UI thread.","pos":[9,316],"nodes":[{"content":"If your data source implements <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> and you are performing asynchronous operations, you should not make changes to the data source on a background thread.","pos":[0,201],"source":"If your data source implements <xref:System.ComponentModel.INotifyPropertyChanged> and you are performing asynchronous operations, you should not make changes to the data source on a background thread."},{"content":"Instead, you should read the data on a background thread and merge the data into a list on the UI thread.","pos":[202,307]}]}]},{"pos":[1568,1575],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates a simple implementation of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.","pos":[1579,1712],"source":"The following code example demonstrates a simple implementation of the <xref:System.ComponentModel.INotifyPropertyChanged> interface."},{"content":"It also shows how the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> automatically passes a data source change to a bound control when the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> is bound to a list of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> type.","pos":[1713,1972],"source":" It also shows how the <xref:System.Windows.Forms.BindingSource> automatically passes a data source change to a bound control when the <xref:System.Windows.Forms.BindingSource> is bound to a list of the <xref:System.ComponentModel.INotifyPropertyChanged> type."},{"content":"If you use the <ph id=\"ph1\">`CallerMemberName`</ph> attribute, calls to the <ph id=\"ph2\">`NotifyPropertyChanged`</ph> method don't have to specify the property name as a string argument.","pos":[1979,2129],"source":"If you use the `CallerMemberName` attribute, calls to the `NotifyPropertyChanged` method don't have to specify the property name as a string argument."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Caller Information (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/caller-information.md)</ept> or <bpt id=\"p2\">[</bpt>Caller Information (Visual Basic)<ept id=\"p2\">](../../../visual-basic/programming-guide/concepts/caller-information.md)</ept>.","pos":[2130,2359],"source":" For more information, see [Caller Information (C#)](../../../csharp/programming-guide/concepts/caller-information.md) or [Caller Information (Visual Basic)](../../../visual-basic/programming-guide/concepts/caller-information.md)."},{"pos":[2716,2734],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[2738,2760]},{"content":"References to the System, System.Data, System.Drawing and System.Windows.Forms assemblies.","pos":[2770,2860]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[2867,3217],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[3218,3306]},{"content":"Also see <bpt id=\"p1\">[</bpt>How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb129228(v=vs.100))</ept>.","pos":[3307,3497],"source":" Also see [How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb129228(v=vs.100))."},{"pos":[3506,3514],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3572,3625],"content":"<bpt id=\"p1\">[</bpt>BindingSource Component<ept id=\"p1\">](bindingsource-component.md)</ept>","source":"[BindingSource Component](bindingsource-component.md)"},{"pos":[3628,3784],"content":"<bpt id=\"p1\">[</bpt>How to: Raise Change Notifications Using the BindingSource ResetItem Method<ept id=\"p1\">](how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)</ept>","source":"[How to: Raise Change Notifications Using the BindingSource ResetItem Method](how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)"}]}