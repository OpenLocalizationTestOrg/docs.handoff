<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76cb202a24180c3b56fb774c252df79875c820ba</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\local-transactions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2af9358cfbfb474ae08608b49e2b47d5e1fd96e3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaf619a6ff011079e427db1314ad1ed70ef5b8f6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Local Transactions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Local Transactions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Transactions in <ph id="ph1">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph> are used when you want to bind multiple tasks together so that they execute as a single unit of work.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, imagine that an application performs two tasks.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>First, it updates a table with order information.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Second, it updates a table that contains inventory information, debiting the items ordered.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If either task fails, the both updates are rolled back.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Determining the Transaction Type</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A transaction considered to be a local transaction when it is a single-phase transaction and is handled by the database directly.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Transactions are considered to be distributed transactions when they are coordinated by a transaction monitor and use fail-safe mechanisms (such as two-phase commit) for transaction resolution.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each of the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> data providers has its own <ph id="ph2">`Transaction`</ph> object for performing local transactions.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you require a transaction to be performed in a SQL Server database, select a <ph id="ph1">&lt;xref:System.Data.SqlClient&gt;</ph> transaction.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For an Oracle transaction, use the <ph id="ph1">&lt;xref:System.Data.OracleClient&gt;</ph> provider.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In addition, there is a new <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> class that is available for writing provider-independent code that requires transactions.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Transactions are most efficient when it is performed on the server.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you are working with a SQL Server database that makes extensive use of explicit transactions, consider writing them as stored procedures using the Transact-SQL BEGIN TRANSACTION statement.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about performing server-side transactions, see SQL Server Books Online.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Performing a Transaction Using a Single Connection</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph>, you control transactions with the <ph id="ph2">`Connection`</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can initiate a local transaction with the <ph id="ph1">`BeginTransaction`</ph> method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Once you have begun a transaction, you can enlist a command in that transaction with the <ph id="ph1">`Transaction`</ph> property of a <ph id="ph2">`Command`</ph> object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can then commit or roll back modifications made at the data source based on the success or failure of the components of the transaction.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`EnlistDistributedTransaction`</ph> method should not be used for a local transaction.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The scope of the transaction is limited to the connection.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following example performs an explicit transaction that consists of two separate commands in the <ph id="ph1">`try`</ph> block.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The commands execute INSERT statements against the Production.ScrapReason table in the AdventureWorks <ph id="ph1">[!INCLUDE[ssNoVersion](../../../../includes/ssnoversion-md.md)]</ph> sample database, which are committed if no exceptions are thrown.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The code in the <ph id="ph1">`catch`</ph> block rolls back the transaction if an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the transaction is aborted or the connection is closed before the transaction has completed, it is automatically rolled back.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Follow these steps to perform a transaction.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object to mark the start of the transaction.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> method returns a reference to the transaction.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This reference is assigned to the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> objects that are enlisted in the transaction.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Assign the <ph id="ph1">`Transaction`</ph> object to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> to be executed.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If a command is executed on a connection with an active transaction, and the <ph id="ph1">`Transaction`</ph> object has not been assigned to the <ph id="ph2">`Transaction`</ph> property of the <ph id="ph3">`Command`</ph> object, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Execute the required commands.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object to complete the transaction, or call the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method to end the transaction.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the connection is closed or disposed before either the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods have been executed, the transaction is rolled back.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates transactional logic using <ph id="ph1">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph> with Microsoft SQL Server.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DataWorks SqlTransaction.Local#1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTransaction.Local/CS/source.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DataWorks SqlTransaction.Local#1<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTransaction.Local/VB/source.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Transactions and Concurrency<ept id="p1">](../../../../docs/framework/data/adonet/transactions-and-concurrency.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Distributed Transactions<ept id="p1">](../../../../docs/framework/data/adonet/distributed-transactions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>System.Transactions Integration with SQL Server<ept id="p1">](../../../../docs/framework/data/adonet/system-transactions-integration-with-sql-server.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>