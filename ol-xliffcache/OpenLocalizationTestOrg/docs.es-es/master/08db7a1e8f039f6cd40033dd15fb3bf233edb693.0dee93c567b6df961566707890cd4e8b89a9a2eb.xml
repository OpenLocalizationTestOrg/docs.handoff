{"content":"---\ntitle: \"Operator Keywords (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"keywords [C#], operators\"\n  - \"operators [C#], keywords\"\nms.assetid: f745c81f-f8d8-4673-86a1-0f3a85cc63c3\ncaps.latest.revision: 10\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Operator Keywords (C# Reference)\nUsed to perform miscellaneous actions such as creating objects, checking the run-time type of an object, obtaining the size of a type, and other actions. This section introduces the following keywords:  \n  \n-   [as](../../../csharp/language-reference/keywords/as.md) Converts an object to a compatible type.  \n  \n-   [await](../../../csharp/language-reference/keywords/await.md) Suspends an async method until an awaited task is completed.  \n  \n-   [is](../../../csharp/language-reference/keywords/is.md) Checks the run-time type of an object.  \n  \n-   [new](../../../csharp/language-reference/keywords/new.md)  \n  \n    -   [new Operator](../../../csharp/language-reference/keywords/new-operator.md) Creates objects.  \n  \n    -   [new Modifier](../../../csharp/language-reference/keywords/new-modifier.md) Hides an inherited member.  \n  \n    -   [new Constraint](../../../csharp/language-reference/keywords/new-constraint.md) Qualifies a type parameter.  \n  \n-   [sizeof](../../../csharp/language-reference/keywords/sizeof.md) Obtains the size of a type.  \n  \n-   [typeof](../../../csharp/language-reference/keywords/typeof.md) Obtains the **System.Type** object for a type.  \n  \n-   [true](../../../csharp/language-reference/keywords/true.md)  \n  \n    -   [true Operator](../../../csharp/language-reference/keywords/true-operator.md) Returns the boolean value true to indicate true and returns false otherwise.  \n  \n    -   [true Literal](../../../csharp/language-reference/keywords/true-literal.md) Represents the boolean value true.  \n  \n-   [false](../../../csharp/language-reference/keywords/false.md)  \n  \n    -   [false Operator](../../../csharp/language-reference/keywords/false-operator.md) Returns the Boolean value true to indicate false and returns false otherwise.  \n  \n    -   [false Literal](../../../csharp/language-reference/keywords/false-literal.md) Represents the boolean value false.  \n  \n-   [stackalloc](../../../csharp/language-reference/keywords/stackalloc.md) Allocates a block of memory on the stack.  \n  \n The following keywords, which can be used as operators and as statements, are covered in the [Statements](../../../csharp/language-reference/keywords/statement-keywords.md) section:  \n  \n-   [checked](../../../csharp/language-reference/keywords/checked.md) Specifies checked context.  \n  \n-   [unchecked](../../../csharp/language-reference/keywords/unchecked.md) Specifies unchecked context.  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Keywords](../../../csharp/language-reference/keywords/index.md)   \n [C# Operators](../../../csharp/language-reference/operators/index.md)","nodes":[{"pos":[12,61],"content":"Operator Keywords (C# Reference) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Operator Keywords (C# Reference) | Microsoft Docs","pos":[0,49]}]},{"pos":[568,600],"content":"Operator Keywords (C# Reference)","linkify":"Operator Keywords (C# Reference)","nodes":[{"content":"Operator Keywords (C# Reference)","pos":[0,32]}]},{"content":"Used to perform miscellaneous actions such as creating objects, checking the run-time type of an object, obtaining the size of a type, and other actions.","pos":[601,754]},{"content":"This section introduces the following keywords:","pos":[755,802]},{"pos":[812,908],"content":"<bpt id=\"p1\">[</bpt>as<ept id=\"p1\">](../../../csharp/language-reference/keywords/as.md)</ept> Converts an object to a compatible type.","source":"[as](../../../csharp/language-reference/keywords/as.md) Converts an object to a compatible type."},{"pos":[918,1040],"content":"<bpt id=\"p1\">[</bpt>await<ept id=\"p1\">](../../../csharp/language-reference/keywords/await.md)</ept> Suspends an async method until an awaited task is completed.","source":"[await](../../../csharp/language-reference/keywords/await.md) Suspends an async method until an awaited task is completed."},{"pos":[1050,1144],"content":"<bpt id=\"p1\">[</bpt>is<ept id=\"p1\">](../../../csharp/language-reference/keywords/is.md)</ept> Checks the run-time type of an object.","source":"[is](../../../csharp/language-reference/keywords/is.md) Checks the run-time type of an object."},{"pos":[1154,1211],"content":"<bpt id=\"p1\">[</bpt>new<ept id=\"p1\">](../../../csharp/language-reference/keywords/new.md)</ept>","source":"[new](../../../csharp/language-reference/keywords/new.md)"},{"pos":[1225,1317],"content":"<bpt id=\"p1\">[</bpt>new Operator<ept id=\"p1\">](../../../csharp/language-reference/keywords/new-operator.md)</ept> Creates objects.","source":"[new Operator](../../../csharp/language-reference/keywords/new-operator.md) Creates objects."},{"pos":[1331,1433],"content":"<bpt id=\"p1\">[</bpt>new Modifier<ept id=\"p1\">](../../../csharp/language-reference/keywords/new-modifier.md)</ept> Hides an inherited member.","source":"[new Modifier](../../../csharp/language-reference/keywords/new-modifier.md) Hides an inherited member."},{"pos":[1447,1554],"content":"<bpt id=\"p1\">[</bpt>new Constraint<ept id=\"p1\">](../../../csharp/language-reference/keywords/new-constraint.md)</ept> Qualifies a type parameter.","source":"[new Constraint](../../../csharp/language-reference/keywords/new-constraint.md) Qualifies a type parameter."},{"pos":[1564,1655],"content":"<bpt id=\"p1\">[</bpt>sizeof<ept id=\"p1\">](../../../csharp/language-reference/keywords/sizeof.md)</ept> Obtains the size of a type.","source":"[sizeof](../../../csharp/language-reference/keywords/sizeof.md) Obtains the size of a type."},{"pos":[1665,1775],"content":"<bpt id=\"p1\">[</bpt>typeof<ept id=\"p1\">](../../../csharp/language-reference/keywords/typeof.md)</ept> Obtains the <bpt id=\"p2\">**</bpt>System.Type<ept id=\"p2\">**</ept> object for a type.","source":"[typeof](../../../csharp/language-reference/keywords/typeof.md) Obtains the **System.Type** object for a type."},{"pos":[1785,1844],"content":"<bpt id=\"p1\">[</bpt>true<ept id=\"p1\">](../../../csharp/language-reference/keywords/true.md)</ept>","source":"[true](../../../csharp/language-reference/keywords/true.md)"},{"pos":[1858,2012],"content":"<bpt id=\"p1\">[</bpt>true Operator<ept id=\"p1\">](../../../csharp/language-reference/keywords/true-operator.md)</ept> Returns the boolean value true to indicate true and returns false otherwise.","source":"[true Operator](../../../csharp/language-reference/keywords/true-operator.md) Returns the boolean value true to indicate true and returns false otherwise."},{"pos":[2026,2136],"content":"<bpt id=\"p1\">[</bpt>true Literal<ept id=\"p1\">](../../../csharp/language-reference/keywords/true-literal.md)</ept> Represents the boolean value true.","source":"[true Literal](../../../csharp/language-reference/keywords/true-literal.md) Represents the boolean value true."},{"pos":[2146,2207],"content":"<bpt id=\"p1\">[</bpt>false<ept id=\"p1\">](../../../csharp/language-reference/keywords/false.md)</ept>","source":"[false](../../../csharp/language-reference/keywords/false.md)"},{"pos":[2221,2378],"content":"<bpt id=\"p1\">[</bpt>false Operator<ept id=\"p1\">](../../../csharp/language-reference/keywords/false-operator.md)</ept> Returns the Boolean value true to indicate false and returns false otherwise.","source":"[false Operator](../../../csharp/language-reference/keywords/false-operator.md) Returns the Boolean value true to indicate false and returns false otherwise."},{"pos":[2392,2505],"content":"<bpt id=\"p1\">[</bpt>false Literal<ept id=\"p1\">](../../../csharp/language-reference/keywords/false-literal.md)</ept> Represents the boolean value false.","source":"[false Literal](../../../csharp/language-reference/keywords/false-literal.md) Represents the boolean value false."},{"pos":[2515,2628],"content":"<bpt id=\"p1\">[</bpt>stackalloc<ept id=\"p1\">](../../../csharp/language-reference/keywords/stackalloc.md)</ept> Allocates a block of memory on the stack.","source":"[stackalloc](../../../csharp/language-reference/keywords/stackalloc.md) Allocates a block of memory on the stack."},{"pos":[2635,2816],"content":"The following keywords, which can be used as operators and as statements, are covered in the <bpt id=\"p1\">[</bpt>Statements<ept id=\"p1\">](../../../csharp/language-reference/keywords/statement-keywords.md)</ept> section:","source":"The following keywords, which can be used as operators and as statements, are covered in the [Statements](../../../csharp/language-reference/keywords/statement-keywords.md) section:"},{"pos":[2826,2918],"content":"<bpt id=\"p1\">[</bpt>checked<ept id=\"p1\">](../../../csharp/language-reference/keywords/checked.md)</ept> Specifies checked context.","source":"[checked](../../../csharp/language-reference/keywords/checked.md) Specifies checked context."},{"pos":[2928,3026],"content":"<bpt id=\"p1\">[</bpt>unchecked<ept id=\"p1\">](../../../csharp/language-reference/keywords/unchecked.md)</ept> Specifies unchecked context.","source":"[unchecked](../../../csharp/language-reference/keywords/unchecked.md) Specifies unchecked context."},{"pos":[3035,3043],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3047,3107],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3110,3178],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3181,3250],"source":" [C# Keywords](../../../csharp/language-reference/keywords/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Operators<ept id=\"p1\">](../../../csharp/language-reference/operators/index.md)</ept>","pos":[3253,3323],"source":" [C# Operators](../../../csharp/language-reference/operators/index.md)"}]}