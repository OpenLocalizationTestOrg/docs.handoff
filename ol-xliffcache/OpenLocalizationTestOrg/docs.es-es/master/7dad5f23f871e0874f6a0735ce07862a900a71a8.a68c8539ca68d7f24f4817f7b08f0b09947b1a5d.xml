{"content":"---\ntitle: \"How to: Generate XML from CSV Files (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: fe4dbc87-7b0d-40bf-88c3-5d706ee89a4d\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\n---\n# How to: Generate XML from CSV Files (Visual Basic)\nThis example shows how to use [!INCLUDE[vbteclinqext](../../../../csharp/getting-started/includes/vbteclinqext_md.md)] and [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] to generate an XML file from a comma-separated value (CSV) file.  \n  \n## Example  \n The following code performs a [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] query on an array of strings.  \n  \n```vb  \n  \n      ' Create the text file.  \nDim csvString As String = \"GREAL,Great Lakes Food Market,Howard Snyder,Marketing Manager,(503) 555-7555,2732 Baker Blvd.,Eugene,OR,97403,USA\" & vbCrLf & _  \n    \"HUNGC,Hungry Coyote Import Store,Yoshi Latimer,Sales Representative,(503) 555-6874,City Center Plaza 516 Main St.,Elgin,OR,97827,USA\" & vbCrLf & _  \n    \"LAZYK,Lazy K Kountry Store,John Steel,Marketing Manager,(509) 555-7969,12 Orchestra Terrace,Walla Walla,WA,99362,USA\" & vbCrLf & _  \n    \"LETSS,Let's Stop N Shop,Jaime Yorres,Owner,(415) 555-5938,87 Polk St. Suite 5,San Francisco,CA,94117,USA\"  \nFile.WriteAllText(\"cust.csv\", csvString)  \n  \n' Read into an array of strings.  \nDim source As String() = File.ReadAllLines(\"cust.csv\")  \nDim cust As XElement = _  \n    <Root>  \n        <%= From strs In source _  \n            Let fields = Split(strs, \",\") _  \n            Select _  \n            <Customer CustomerID=<%= fields(0) %>>  \n                <CompanyName><%= fields(1) %></CompanyName>  \n                <ContactName><%= fields(2) %></ContactName>  \n                <ContactTitle><%= fields(3) %></ContactTitle>  \n                <Phone><%= fields(4) %></Phone>  \n                <FullAddress>  \n                    <Address><%= fields(5) %></Address>  \n                    <City><%= fields(6) %></City>  \n                    <Region><%= fields(7) %></Region>  \n                    <PostalCode><%= fields(8) %></PostalCode>  \n                    <Country><%= fields(9) %></Country>  \n                </FullAddress>  \n            </Customer> _  \n        %>  \n    </Root>  \nConsole.WriteLine(cust)  \n  \n```  \n  \n This code produces the following output:  \n  \n```xml  \n<Root>  \n  <Customer CustomerID=\"GREAL\">  \n    <CompanyName>Great Lakes Food Market</CompanyName>  \n    <ContactName>Howard Snyder</ContactName>  \n    <ContactTitle>Marketing Manager</ContactTitle>  \n    <Phone>(503) 555-7555</Phone>  \n    <FullAddress>  \n      <Address>2732 Baker Blvd.</Address>  \n      <City>Eugene</City>  \n      <Region>OR</Region>  \n      <PostalCode>97403</PostalCode>  \n      <Country>USA</Country>  \n    </FullAddress>  \n  </Customer>  \n  <Customer CustomerID=\"HUNGC\">  \n    <CompanyName>Hungry Coyote Import Store</CompanyName>  \n    <ContactName>Yoshi Latimer</ContactName>  \n    <ContactTitle>Sales Representative</ContactTitle>  \n    <Phone>(503) 555-6874</Phone>  \n    <FullAddress>  \n      <Address>City Center Plaza 516 Main St.</Address>  \n      <City>Elgin</City>  \n      <Region>OR</Region>  \n      <PostalCode>97827</PostalCode>  \n      <Country>USA</Country>  \n    </FullAddress>  \n  </Customer>  \n  <Customer CustomerID=\"LAZYK\">  \n    <CompanyName>Lazy K Kountry Store</CompanyName>  \n    <ContactName>John Steel</ContactName>  \n    <ContactTitle>Marketing Manager</ContactTitle>  \n    <Phone>(509) 555-7969</Phone>  \n    <FullAddress>  \n      <Address>12 Orchestra Terrace</Address>  \n      <City>Walla Walla</City>  \n      <Region>WA</Region>  \n      <PostalCode>99362</PostalCode>  \n      <Country>USA</Country>  \n    </FullAddress>  \n  </Customer>  \n  <Customer CustomerID=\"LETSS\">  \n    <CompanyName>Let's Stop N Shop</CompanyName>  \n    <ContactName>Jaime Yorres</ContactName>  \n    <ContactTitle>Owner</ContactTitle>  \n    <Phone>(415) 555-5938</Phone>  \n    <FullAddress>  \n      <Address>87 Polk St. Suite 5</Address>  \n      <City>San Francisco</City>  \n      <Region>CA</Region>  \n      <PostalCode>94117</PostalCode>  \n      <Country>USA</Country>  \n    </FullAddress>  \n  </Customer>  \n</Root>  \n```  \n  \n## See Also  \n [Projections and Transformations (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)","nodes":[{"pos":[12,79],"content":"How to: Generate XML from CSV Files (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Generate XML from CSV Files (Visual Basic) | Microsoft Docs","pos":[0,67]}]},{"pos":[386,436],"content":"How to: Generate XML from CSV Files (Visual Basic)","linkify":"How to: Generate XML from CSV Files (Visual Basic)","nodes":[{"content":"How to: Generate XML from CSV Files (Visual Basic)","pos":[0,50]}]},{"pos":[437,727],"content":"This example shows how to use <ph id=\"ph1\">[!INCLUDE[vbteclinqext](../../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> to generate an XML file from a comma-separated value (CSV) file.","source":"This example shows how to use [!INCLUDE[vbteclinqext](../../../../csharp/getting-started/includes/vbteclinqext_md.md)] and [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] to generate an XML file from a comma-separated value (CSV) file."},{"pos":[736,743],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[747,873],"content":"The following code performs a <ph id=\"ph1\">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> query on an array of strings.","source":"The following code performs a [!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)] query on an array of strings."},{"content":"This code produces the following output:","pos":[2505,2545]},{"pos":[4420,4428],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4432,4599],"content":"<bpt id=\"p1\">[</bpt>Projections and Transformations (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)</ept>","source":"[Projections and Transformations (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)"}]}