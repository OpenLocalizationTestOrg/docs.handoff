{"content":"---\ntitle: \"#elif (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"#elif\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"#elif directive [C#]\"\nms.assetid: 731d78df-08e0-4d51-b8c8-f193c27de13f\ncaps.latest.revision: 14\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# #elif (C# Reference)\n`#elif` lets you create a compound conditional directive. The `#elif` expression will be evaluated if neither the preceding [#if](../../../csharp/language-reference/preprocessor-directives/preprocessor-if.md) nor any preceding, optional, `#elif` directive expressions evaluate to `true`. If a `#elif` expression evaluates to `true`, the compiler evaluates all the code between the `#elif` and the next conditional directive. For example:  \n  \n```  \n#define VC7  \n//...  \n#if debug  \n    Console.Writeline(\"Debug build\");  \n#elif VC7  \n    Console.Writeline(\"Visual Studio 7\");  \n#endif  \n```  \n  \n You can use the operators `==` (equality), `!=` (inequality), `&&` (and), and `||` (or), to evaluate multiple symbols. You can also group symbols and operators with parentheses.  \n  \n## Remarks  \n `#elif` is equivalent to using:  \n  \n```  \n#else  \n#if  \n```  \n  \n Using `#elif` is simpler, because each `#if` requires a [#endif](../../../csharp/language-reference/preprocessor-directives/preprocessor-endif.md), whereas a `#elif` can be used without a matching `#endif`.  \n  \n See [#if](../../../csharp/language-reference/preprocessor-directives/preprocessor-if.md) for an example of how to use `#elif`.  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Preprocessor Directives](../../../csharp/language-reference/preprocessor-directives/index.md)","nodes":[{"pos":[12,49],"content":"#elif (C# Reference) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"elif (C# Reference) | Microsoft Docs","pos":[1,37]}]},{"pos":[547,567],"content":"#elif (C# Reference)","linkify":"#elif (C# Reference)","nodes":[{"content":"#elif (C# Reference)","pos":[0,20]}]},{"content":"<ph id=\"ph1\">`#elif`</ph> lets you create a compound conditional directive.","pos":[568,625],"source":"`#elif` lets you create a compound conditional directive."},{"content":"The <ph id=\"ph1\">`#elif`</ph> expression will be evaluated if neither the preceding <bpt id=\"p1\">[</bpt>#if<ept id=\"p1\">](../../../csharp/language-reference/preprocessor-directives/preprocessor-if.md)</ept> nor any preceding, optional, <ph id=\"ph2\">`#elif`</ph> directive expressions evaluate to <ph id=\"ph3\">`true`</ph>.","pos":[626,855],"source":" The `#elif` expression will be evaluated if neither the preceding [#if](../../../csharp/language-reference/preprocessor-directives/preprocessor-if.md) nor any preceding, optional, `#elif` directive expressions evaluate to `true`."},{"content":"If a <ph id=\"ph1\">`#elif`</ph> expression evaluates to <ph id=\"ph2\">`true`</ph>, the compiler evaluates all the code between the <ph id=\"ph3\">`#elif`</ph> and the next conditional directive.","pos":[856,992],"source":" If a `#elif` expression evaluates to `true`, the compiler evaluates all the code between the `#elif` and the next conditional directive."},{"content":"For example:","pos":[993,1005]},{"content":"You can use the operators <ph id=\"ph1\">`==`</ph> (equality), <ph id=\"ph2\">`!=`</ph> (inequality), <ph id=\"ph3\">`&amp;&amp;`</ph> (and), and <ph id=\"ph4\">`||`</ph> (or), to evaluate multiple symbols.","pos":[1166,1284],"source":"You can use the operators `==` (equality), `!=` (inequality), `&&` (and), and `||` (or), to evaluate multiple symbols."},{"content":"You can also group symbols and operators with parentheses.","pos":[1285,1343]},{"pos":[1352,1359],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1363,1394],"content":"<ph id=\"ph1\">`#elif`</ph> is equivalent to using:","source":"`#elif` is equivalent to using:"},{"pos":[1430,1636],"content":"Using <ph id=\"ph1\">`#elif`</ph> is simpler, because each <ph id=\"ph2\">`#if`</ph> requires a <bpt id=\"p1\">[</bpt>#endif<ept id=\"p1\">](../../../csharp/language-reference/preprocessor-directives/preprocessor-endif.md)</ept>, whereas a <ph id=\"ph3\">`#elif`</ph> can be used without a matching <ph id=\"ph4\">`#endif`</ph>.","source":"Using `#elif` is simpler, because each `#if` requires a [#endif](../../../csharp/language-reference/preprocessor-directives/preprocessor-endif.md), whereas a `#elif` can be used without a matching `#endif`."},{"pos":[1643,1769],"content":"See <bpt id=\"p1\">[</bpt>#if<ept id=\"p1\">](../../../csharp/language-reference/preprocessor-directives/preprocessor-if.md)</ept> for an example of how to use <ph id=\"ph1\">`#elif`</ph>.","source":"See [#if](../../../csharp/language-reference/preprocessor-directives/preprocessor-if.md) for an example of how to use `#elif`."},{"pos":[1778,1786],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1790,1850],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1853,1921],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Preprocessor Directives<ept id=\"p1\">](../../../csharp/language-reference/preprocessor-directives/index.md)</ept>","pos":[1924,2022],"source":" [C# Preprocessor Directives](../../../csharp/language-reference/preprocessor-directives/index.md)"}]}