{"content":"---\ntitle: \"Customizing Operations by Using Stored Procedures Exclusively | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 441e8ef3-998c-4d12-8825-ce66a178f90f\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Customizing Operations by Using Stored Procedures Exclusively\nAccess to data by using only stored procedures is a common scenario.  \n  \n## Example  \n  \n### Description  \n You can modify the example provided in [Customizing Operations By Using Stored Procedures](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-by-using-stored-procedures.md) by replacing even the first query (which causes dynamic SQL execution) with a method call that wraps a stored procedure.  \n  \n Assume `CustomersByCity` is the method, as in the following example.  \n  \n### Code  \n [!code-csharp[DLinqOverrideDefaultSproc#4](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqOverrideDefaultSproc/cs/northwind.cs#4)]\n [!code-vb[DLinqOverrideDefaultSproc#4](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqOverrideDefaultSproc/vb/northwind.vb#4)]  \n  \n The following code executes without any dynamic SQL.  \n  \n [!code-csharp[DLinqOverrideDefaultSproc#5](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqOverrideDefaultSproc/cs/Program.cs#5)]\n [!code-vb[DLinqOverrideDefaultSproc#5](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqOverrideDefaultSproc/vb/Module1.vb#5)]  \n  \n## See Also  \n [Responsibilities of the Developer In Overriding Default Behavior](../../../../../../docs/framework/data/adonet/sql/linq/responsibilities-of-the-developer-in-overriding-default-behavior.md)","nodes":[{"pos":[4,392],"embed":true,"restype":"x-metadata","content":"title: \"Customizing Operations by Using Stored Procedures Exclusively | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 441e8ef3-998c-4d12-8825-ce66a178f90f\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"Customizing Operations by Using Stored Procedures Exclusively | Microsoft Docs","nodes":[{"pos":[0,78],"content":"Customizing Operations by Using Stored Procedures Exclusively | Microsoft Docs","nodes":[{"content":"Customizing Operations by Using Stored Procedures Exclusively | Microsoft Docs","pos":[0,78]}]}],"path":["title"]}],"yml":true},{"pos":[399,460],"content":"Customizing Operations by Using Stored Procedures Exclusively","linkify":"Customizing Operations by Using Stored Procedures Exclusively","nodes":[{"content":"Customizing Operations by Using Stored Procedures Exclusively","pos":[0,61]}]},{"content":"Access to data by using only stored procedures is a common scenario.","pos":[461,529]},{"pos":[538,545],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[555,566],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[570,889],"content":"You can modify the example provided in <bpt id=\"p1\">[</bpt>Customizing Operations By Using Stored Procedures<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-by-using-stored-procedures.md)</ept> by replacing even the first query (which causes dynamic SQL execution) with a method call that wraps a stored procedure.","source":"You can modify the example provided in [Customizing Operations By Using Stored Procedures](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-by-using-stored-procedures.md) by replacing even the first query (which causes dynamic SQL execution) with a method call that wraps a stored procedure."},{"pos":[896,964],"content":"Assume <ph id=\"ph1\">`CustomersByCity`</ph> is the method, as in the following example.","source":"Assume `CustomersByCity` is the method, as in the following example."},{"pos":[974,978],"content":"Code","linkify":"Code","nodes":[{"content":"Code","pos":[0,4]}]},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqOverrideDefaultSproc#4<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqOverrideDefaultSproc/cs/northwind.cs#4)</ept><ept id=\"p1\">]</ept>","pos":[982,1129],"source":"[!code-csharp[DLinqOverrideDefaultSproc#4](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqOverrideDefaultSproc/cs/northwind.cs#4)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqOverrideDefaultSproc#4<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqOverrideDefaultSproc/vb/northwind.vb#4)</ept><ept id=\"p1\">]</ept>","pos":[1131,1279],"source":"[!code-vb[DLinqOverrideDefaultSproc#4](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqOverrideDefaultSproc/vb/northwind.vb#4)]"},{"content":"The following code executes without any dynamic SQL.","pos":[1286,1338]},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqOverrideDefaultSproc#5<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqOverrideDefaultSproc/cs/Program.cs#5)</ept><ept id=\"p1\">]</ept>","pos":[1345,1490],"source":"[!code-csharp[DLinqOverrideDefaultSproc#5](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqOverrideDefaultSproc/cs/Program.cs#5)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqOverrideDefaultSproc#5<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqOverrideDefaultSproc/vb/Module1.vb#5)</ept><ept id=\"p1\">]</ept>","pos":[1492,1638],"source":"[!code-vb[DLinqOverrideDefaultSproc#5](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqOverrideDefaultSproc/vb/Module1.vb#5)]"},{"pos":[1647,1655],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1659,1848],"content":"<bpt id=\"p1\">[</bpt>Responsibilities of the Developer In Overriding Default Behavior<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/responsibilities-of-the-developer-in-overriding-default-behavior.md)</ept>","source":"[Responsibilities of the Developer In Overriding Default Behavior](../../../../../../docs/framework/data/adonet/sql/linq/responsibilities-of-the-developer-in-overriding-default-behavior.md)"}]}