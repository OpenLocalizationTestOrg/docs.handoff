{"content":"---\ntitle: \"How to: Inspect or Modify Parameters\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: ab6c0ac7-aac4-45ba-93d6-a0e9afd1756f\n---\n# How to: Inspect or Modify Parameters\nYou can inspect or modify the incoming or outgoing messages for a single operation on a Windows Communication Foundation (WCF) client object or a WCF service by implementing the <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> interface and inserting it into the client or service runtime. Typically an operation behavior is used to add parameter inspectors for a single operation; other behaviors can be used to provide easy access to the runtime at a greater scope. For more information, see [Extending Clients](../../../../docs/framework/wcf/extending/extending-clients.md) and [Extending Dispatchers](../../../../docs/framework/wcf/extending/extending-dispatchers.md).  \n  \n### Inspecting or Modifying Parameters  \n  \n1.  Implement the <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> interface.  \n  \n2.  Implement a <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> (depending upon the required scope) to add your parameter inspector to either the <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=nameWithType> properties.  \n  \n3.  Insert your behavior prior to calling <xref:System.ServiceModel.ClientBase%601.Open%2A?displayProperty=nameWithType> or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType>. For details, see [Configuring and Extending the Runtime with Behaviors](../../../../docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).  \n  \n## Example  \n The following code examples show, in order:  \n  \n-   A parameter inspector implementation.  \n  \n-   The behavior implementation that inserts the parameter inspector using a <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, and an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>.  \n  \n-   A configuration file that loads and runs the endpoint behavior in a client application to insert the parameter inspector on the client.  \n  \n [!code-csharp[Interceptors#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]\n [!code-vb[Interceptors#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  \n  \n [!code-csharp[Interceptors#5](../../../../samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]\n [!code-vb[Interceptors#5](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  \n  \n [!code-xml[Interceptors#3](../../../../samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]  \n  \n## See also\n\n- [Configuring and Extending the Runtime with Behaviors](../../../../docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)\n","nodes":[{"pos":[4,154],"embed":true,"restype":"x-metadata","content":"title: \"How to: Inspect or Modify Parameters\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: ab6c0ac7-aac4-45ba-93d6-a0e9afd1756f","nodes":[{"content":"How to: Inspect or Modify Parameters","nodes":[{"pos":[0,36],"content":"How to: Inspect or Modify Parameters","nodes":[{"content":"How to: Inspect or Modify Parameters","pos":[0,36]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[161,197],"content":"How to: Inspect or Modify Parameters","linkify":"How to: Inspect or Modify Parameters","nodes":[{"content":"How to: Inspect or Modify Parameters","pos":[0,36]}]},{"content":"You can inspect or modify the incoming or outgoing messages for a single operation on a Windows Communication Foundation (WCF) client object or a WCF service by implementing the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> interface and inserting it into the client or service runtime.","pos":[198,525],"source":"You can inspect or modify the incoming or outgoing messages for a single operation on a Windows Communication Foundation (WCF) client object or a WCF service by implementing the <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> interface and inserting it into the client or service runtime."},{"content":"Typically an operation behavior is used to add parameter inspectors for a single operation; other behaviors can be used to provide easy access to the runtime at a greater scope.","pos":[526,703]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Extending Clients<ept id=\"p1\">](../../../../docs/framework/wcf/extending/extending-clients.md)</ept> and <bpt id=\"p2\">[</bpt>Extending Dispatchers<ept id=\"p2\">](../../../../docs/framework/wcf/extending/extending-dispatchers.md)</ept>.","pos":[704,908],"source":" For more information, see [Extending Clients](../../../../docs/framework/wcf/extending/extending-clients.md) and [Extending Dispatchers](../../../../docs/framework/wcf/extending/extending-dispatchers.md)."},{"pos":[918,952],"content":"Inspecting or Modifying Parameters","linkify":"Inspecting or Modifying Parameters","nodes":[{"content":"Inspecting or Modifying Parameters","pos":[0,34]}]},{"pos":[962,1073],"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> interface.","source":"Implement the <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> interface."},{"pos":[1083,1754],"content":"Implement a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> (depending upon the required scope) to add your parameter inspector to either the <ph id=\"ph5\">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=nameWithType&gt;</ph> or <ph id=\"ph6\">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=nameWithType&gt;</ph> properties.","source":"Implement a <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> (depending upon the required scope) to add your parameter inspector to either the <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=nameWithType> properties."},{"content":"Insert your behavior prior to calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientBase%601.Open%2A?displayProperty=nameWithType&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method on the <ph id=\"ph3\">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph>.","pos":[1764,2062],"source":"Insert your behavior prior to calling <xref:System.ServiceModel.ClientBase%601.Open%2A?displayProperty=nameWithType> or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType>."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id=\"p1\">](../../../../docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.","pos":[2063,2233],"source":" For details, see [Configuring and Extending the Runtime with Behaviors](../../../../docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)."},{"pos":[2242,2249],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code examples show, in order:","pos":[2253,2296]},{"content":"A parameter inspector implementation.","pos":[2306,2343]},{"pos":[2353,2693],"content":"The behavior implementation that inserts the parameter inspector using a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph>, and an <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph>.","source":"The behavior implementation that inserts the parameter inspector using a <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, and an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>."},{"content":"A configuration file that loads and runs the endpoint behavior in a client application to insert the parameter inspector on the client.","pos":[2703,2838]},{"pos":[2845,3082],"content":"[!code-csharp[Interceptors#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]\n[!code-vb[Interceptors#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]","leadings":[""," "],"nodes":[]},{"pos":[3089,3338],"content":"[!code-csharp[Interceptors#5](../../../../samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]\n[!code-vb[Interceptors#5](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]","leadings":[""," "],"nodes":[]},{"pos":[3470,3478],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3482,3634],"content":"<bpt id=\"p1\">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id=\"p1\">](../../../../docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>","source":"[Configuring and Extending the Runtime with Behaviors](../../../../docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)"}]}