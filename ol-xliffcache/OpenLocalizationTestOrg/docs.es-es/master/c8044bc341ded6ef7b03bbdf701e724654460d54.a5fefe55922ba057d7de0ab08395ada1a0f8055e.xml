{"content":"---\ntitle: \"x:XData Intrinsic XAML Type\"\nms.date: \"03/30/2017\"\nf1_keywords: \n  - \"x:XData\"\n  - \"XData\"\n  - \"xXData\"\nhelpviewer_keywords: \n  - \"XAML [XAML Services], x:XData directive element\"\n  - \"XData in XAML [XAML Services]\"\n  - \"x:XData XAML directive element [XAML Services]\"\nms.assetid: 7ce209c2-621b-4977-b643-565f7e663534\n---\n# x:XData Intrinsic XAML Type\nEnables placement of XML data islands within a XAML production. XML elements within `x:XData` should not be treated by XAML processors as if they are a part of the acting default XAML namespace or any other XAML namespace. `x:XData` can contain arbitrary well-formed XML.  \n  \n## XAML Object Element Usage  \n  \n```  \n<x:XData>  \n  <elementDataRoot>  \n    [elementData]  \n  </elementDataRoot>  \n</x:XData>  \n```  \n  \n## XAML Values  \n  \n|||  \n|-|-|  \n|`elementDataRoot`|The single root element of the enclosed data island. For most eventual consumers, XML that does not have a single root is considered invalid. In particular, a single root is required if the `x:XData` is intended as an XML data source for WPF or many other technologies that use XML sources for data binding.|  \n|`[elementData]`|Optional. XML that represents the XML data. Any number of elements can be contained as element data and nested elements can be contained in other elements; however, the general rules of XML apply.|  \n  \n## Remarks  \n The XML elements within an `x:XData` object can re-declare all possible namespaces and prefixes of the containing XMLDOM within the data.  \n  \n Programmatic access to XML data and the `x:XData` intrinsic XAML type is possible in .NET Framework XAML Services through the <xref:System.Windows.Markup.XData> class.  \n  \n## WPF Usage Notes  \n The `x:XData` object is primarily used as a child object of an <xref:System.Windows.Data.XmlDataProvider>, or alternatively, as the child object of the <xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=nameWithType> property (in XAML, this is typically expressed in property element syntax).  \n  \n The data should typically redefine the base XML namespace within the data island to be a new default XML namespace (set to an empty string). This is easiest for simple data islands because the <xref:System.Windows.Data.Binding.XPath%2A> expressions that are used to reference and bind to the data can avoid inclusion of prefixes. More complex data islands might define multiple prefixes for the data and use a specific prefix for the XML namespace at the root. In this case, all <xref:System.Windows.Data.Binding.XPath%2A> expression references should include the appropriate namespace-mapped prefix. For more information, see [Data Binding Overview](../wpf/data/data-binding-overview.md).  \n  \n Technically, `x:XData` can be used as the content of any property of type <xref:System.Xml.Serialization.IXmlSerializable>. However, <xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=nameWithType> is the only prominent implementation.  \n  \n## See also\n\n- <xref:System.Windows.Data.XmlDataProvider>\n- [Data Binding Overview](../wpf/data/data-binding-overview.md)\n- [Binding Markup Extension](../wpf/advanced/binding-markup-extension.md)\n","nodes":[{"pos":[4,329],"embed":true,"restype":"x-metadata","content":"title: \"x:XData Intrinsic XAML Type\"\nms.date: \"03/30/2017\"\nf1_keywords: \n  - \"x:XData\"\n  - \"XData\"\n  - \"xXData\"\nhelpviewer_keywords: \n  - \"XAML [XAML Services], x:XData directive element\"\n  - \"XData in XAML [XAML Services]\"\n  - \"x:XData XAML directive element [XAML Services]\"\nms.assetid: 7ce209c2-621b-4977-b643-565f7e663534","nodes":[{"content":"x:XData Intrinsic XAML Type","nodes":[{"pos":[0,27],"content":"x:XData Intrinsic XAML Type","nodes":[{"content":"x:XData Intrinsic XAML Type","pos":[0,27]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[336,363],"content":"x:XData Intrinsic XAML Type","linkify":"x:XData Intrinsic XAML Type","nodes":[{"content":"x:XData Intrinsic XAML Type","pos":[0,27]}]},{"content":"Enables placement of XML data islands within a XAML production.","pos":[364,427]},{"content":"XML elements within <ph id=\"ph1\">`x:XData`</ph> should not be treated by XAML processors as if they are a part of the acting default XAML namespace or any other XAML namespace.","pos":[428,586],"source":" XML elements within `x:XData` should not be treated by XAML processors as if they are a part of the acting default XAML namespace or any other XAML namespace."},{"content":"<ph id=\"ph1\">`x:XData`</ph> can contain arbitrary well-formed XML.","pos":[587,635],"source":"`x:XData` can contain arbitrary well-formed XML."},{"pos":[644,669],"content":"XAML Object Element Usage","linkify":"XAML Object Element Usage","nodes":[{"content":"XAML Object Element Usage","pos":[0,25]}]},{"pos":[783,794],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"content":"The single root element of the enclosed data island.","pos":[833,885]},{"content":"For most eventual consumers, XML that does not have a single root is considered invalid.","pos":[886,974]},{"content":"In particular, a single root is required if the <ph id=\"ph1\">`x:XData`</ph> is intended as an XML data source for WPF or many other technologies that use XML sources for data binding.","pos":[975,1140],"source":" In particular, a single root is required if the `x:XData` is intended as an XML data source for WPF or many other technologies that use XML sources for data binding."},{"content":"Optional.","pos":[1161,1170]},{"content":"XML that represents the XML data.","pos":[1171,1204]},{"content":"Any number of elements can be contained as element data and nested elements can be contained in other elements; however, the general rules of XML apply.","pos":[1205,1357]},{"pos":[1367,1374],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1378,1515],"content":"The XML elements within an <ph id=\"ph1\">`x:XData`</ph> object can re-declare all possible namespaces and prefixes of the containing XMLDOM within the data.","source":"The XML elements within an `x:XData` object can re-declare all possible namespaces and prefixes of the containing XMLDOM within the data."},{"pos":[1522,1689],"content":"Programmatic access to XML data and the <ph id=\"ph1\">`x:XData`</ph> intrinsic XAML type is possible in .NET Framework XAML Services through the <ph id=\"ph2\">&lt;xref:System.Windows.Markup.XData&gt;</ph> class.","source":"Programmatic access to XML data and the `x:XData` intrinsic XAML type is possible in .NET Framework XAML Services through the <xref:System.Windows.Markup.XData> class."},{"pos":[1698,1713],"content":"WPF Usage Notes","linkify":"WPF Usage Notes","nodes":[{"content":"WPF Usage Notes","pos":[0,15]}]},{"pos":[1717,2033],"content":"The <ph id=\"ph1\">`x:XData`</ph> object is primarily used as a child object of an <ph id=\"ph2\">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph>, or alternatively, as the child object of the <ph id=\"ph3\">&lt;xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=nameWithType&gt;</ph> property (in XAML, this is typically expressed in property element syntax).","source":"The `x:XData` object is primarily used as a child object of an <xref:System.Windows.Data.XmlDataProvider>, or alternatively, as the child object of the <xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=nameWithType> property (in XAML, this is typically expressed in property element syntax)."},{"content":"The data should typically redefine the base XML namespace within the data island to be a new default XML namespace (set to an empty string).","pos":[2040,2180]},{"content":"This is easiest for simple data islands because the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> expressions that are used to reference and bind to the data can avoid inclusion of prefixes.","pos":[2181,2369],"source":" This is easiest for simple data islands because the <xref:System.Windows.Data.Binding.XPath%2A> expressions that are used to reference and bind to the data can avoid inclusion of prefixes."},{"content":"More complex data islands might define multiple prefixes for the data and use a specific prefix for the XML namespace at the root.","pos":[2370,2500]},{"content":"In this case, all <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> expression references should include the appropriate namespace-mapped prefix.","pos":[2501,2640],"source":" In this case, all <xref:System.Windows.Data.Binding.XPath%2A> expression references should include the appropriate namespace-mapped prefix."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](../wpf/data/data-binding-overview.md)</ept>.","pos":[2641,2729],"source":" For more information, see [Data Binding Overview](../wpf/data/data-binding-overview.md)."},{"content":"Technically, <ph id=\"ph1\">`x:XData`</ph> can be used as the content of any property of type <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.","pos":[2736,2859],"source":"Technically, `x:XData` can be used as the content of any property of type <xref:System.Xml.Serialization.IXmlSerializable>."},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=nameWithType&gt;</ph> is the only prominent implementation.","pos":[2860,2995],"source":" However, <xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A?displayProperty=nameWithType> is the only prominent implementation."},{"pos":[3004,3012],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3061,3122],"content":"<bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](../wpf/data/data-binding-overview.md)</ept>","source":"[Data Binding Overview](../wpf/data/data-binding-overview.md)"},{"pos":[3125,3196],"content":"<bpt id=\"p1\">[</bpt>Binding Markup Extension<ept id=\"p1\">](../wpf/advanced/binding-markup-extension.md)</ept>","source":"[Binding Markup Extension](../wpf/advanced/binding-markup-extension.md)"}]}