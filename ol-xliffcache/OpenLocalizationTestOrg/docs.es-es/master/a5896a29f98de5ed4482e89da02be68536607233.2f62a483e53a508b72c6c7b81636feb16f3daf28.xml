{"content":"---\ntitle: \"How to: Create Hierarchy Using Grouping (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 0213d59e-5f76-438c-9cab-4bf11f7b971d\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\n---\n# How to: Create Hierarchy Using Grouping (C#)\nThis example shows how to group data, and then generate XML based on the grouping.  \n  \n## Example  \n This example first groups data by a category, then generates a new XML file in which the XML hierarchy reflects the grouping.  \n  \n This example uses the following XML document: [Sample XML File: Numerical Data (LINQ to XML)](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-numerical-data-linq-to-xml.md).  \n  \n```csharp  \nXElement doc = XElement.Load(\"Data.xml\");  \nvar newData =  \n    new XElement(\"Root\",  \n        from data in doc.Elements(\"Data\")  \n        group data by (string)data.Element(\"Category\") into groupedData  \n        select new XElement(\"Group\",  \n            new XAttribute(\"ID\", groupedData.Key),  \n            from g in groupedData  \n            select new XElement(\"Data\",  \n                g.Element(\"Quantity\"),  \n                g.Element(\"Price\")  \n            )  \n        )  \n    );  \nConsole.WriteLine(newData);  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root>  \n  <Group ID=\"A\">  \n    <Data>  \n      <Quantity>3</Quantity>  \n      <Price>24.50</Price>  \n    </Data>  \n    <Data>  \n      <Quantity>5</Quantity>  \n      <Price>4.95</Price>  \n    </Data>  \n    <Data>  \n      <Quantity>3</Quantity>  \n      <Price>66.00</Price>  \n    </Data>  \n    <Data>  \n      <Quantity>15</Quantity>  \n      <Price>29.00</Price>  \n    </Data>  \n  </Group>  \n  <Group ID=\"B\">  \n    <Data>  \n      <Quantity>1</Quantity>  \n      <Price>89.99</Price>  \n    </Data>  \n    <Data>  \n      <Quantity>10</Quantity>  \n      <Price>.99</Price>  \n    </Data>  \n    <Data>  \n      <Quantity>8</Quantity>  \n      <Price>6.99</Price>  \n    </Data>  \n  </Group>  \n</Root>  \n```  \n  \n## See Also  \n [Advanced Query Techniques (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/advanced-query-techniques-linq-to-xml.md)","nodes":[{"pos":[12,73],"content":"How to: Create Hierarchy Using Grouping (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Create Hierarchy Using Grouping (C#) | Microsoft Docs","pos":[0,61]}]},{"pos":[358,402],"content":"How to: Create Hierarchy Using Grouping (C#)","linkify":"How to: Create Hierarchy Using Grouping (C#)","nodes":[{"content":"How to: Create Hierarchy Using Grouping (C#)","pos":[0,44]}]},{"content":"This example shows how to group data, and then generate XML based on the grouping.","pos":[403,485]},{"pos":[494,501],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example first groups data by a category, then generates a new XML file in which the XML hierarchy reflects the grouping.","pos":[505,630]},{"pos":[637,829],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Numerical Data (LINQ to XML)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-numerical-data-linq-to-xml.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Numerical Data (LINQ to XML)](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-numerical-data-linq-to-xml.md)."},{"content":"This example produces the following output:","pos":[1377,1420]},{"pos":[2137,2145],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2149,2288],"content":"<bpt id=\"p1\">[</bpt>Advanced Query Techniques (LINQ to XML) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/advanced-query-techniques-linq-to-xml.md)</ept>","source":"[Advanced Query Techniques (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/advanced-query-techniques-linq-to-xml.md)"}]}