{"content":"---\ntitle: \"Elementary Data Types (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"elementary data types [Visual Basic]\"\n  - \"data types [Visual Basic], elementary\"\nms.assetid: dfad6fe9-2da6-49a4-b0b1-2d7ae0283de5\n---\n# Elementary Data Types (Visual Basic)\nVisual Basic supplies a set of predefined data types, which you can use for many of your programming elements. This section describes these types and how to use them.  \n  \n> [!NOTE]\n>  Every elementary data type in Visual Basic is supported by a structure or a class that is in the <xref:System> namespace. The compiler uses each data type keyword as an alias for the underlying structure or class. For example, declaring a variable by using the reserved word `Byte` is the same as declaring it by using the fully qualified structure name <xref:System.Byte?displayProperty=nameWithType>.  \n  \n## In This Section  \n [Numeric Data Types](../../../../visual-basic/programming-guide/language-features/data-types/numeric-data-types.md)  \n Describes the integral and non-integral numeric types.  \n  \n [Character Data Types](../../../../visual-basic/programming-guide/language-features/data-types/character-data-types.md)  \n Describes the `Char` and `String` types.  \n  \n [Miscellaneous Data Types](../../../../visual-basic/programming-guide/language-features/data-types/miscellaneous-data-types.md)  \n Describes the `Boolean`, `Date`, and `Object` types.  \n  \n## Related Sections  \n [Data Types](../../../../visual-basic/programming-guide/language-features/data-types/index.md)  \n Introduces the Visual Basic data types and describes how to use them.  \n  \n [Data Types](../../../../visual-basic/language-reference/data-types/index.md)  \n Provides an overview of the elementary data types supplied by Visual Basic.\n","nodes":[{"pos":[4,227],"embed":true,"restype":"x-metadata","content":"title: \"Elementary Data Types (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"elementary data types [Visual Basic]\"\n  - \"data types [Visual Basic], elementary\"\nms.assetid: dfad6fe9-2da6-49a4-b0b1-2d7ae0283de5","nodes":[{"content":"Elementary Data Types (Visual Basic)","nodes":[{"pos":[0,36],"content":"Elementary Data Types (Visual Basic)","nodes":[{"content":"Elementary Data Types (Visual Basic)","pos":[0,36]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[234,270],"content":"Elementary Data Types (Visual Basic)","linkify":"Elementary Data Types (Visual Basic)","nodes":[{"content":"Elementary Data Types (Visual Basic)","pos":[0,36]}]},{"content":"Visual Basic supplies a set of predefined data types, which you can use for many of your programming elements.","pos":[271,381]},{"content":"This section describes these types and how to use them.","pos":[382,437]},{"pos":[445,858],"content":"[!NOTE]\n Every elementary data type in Visual Basic is supported by a structure or a class that is in the <xref:System> namespace. The compiler uses each data type keyword as an alias for the underlying structure or class. For example, declaring a variable by using the reserved word `Byte` is the same as declaring it by using the fully qualified structure name <xref:System.Byte?displayProperty=nameWithType>.","leadings":["","> "],"nodes":[{"content":"Every elementary data type in Visual Basic is supported by a structure or a class that is in the <xref:System> namespace. The compiler uses each data type keyword as an alias for the underlying structure or class. For example, declaring a variable by using the reserved word `Byte` is the same as declaring it by using the fully qualified structure name <xref:System.Byte?displayProperty=nameWithType>.","pos":[9,411],"nodes":[{"content":"Every elementary data type in Visual Basic is supported by a structure or a class that is in the <ph id=\"ph1\">&lt;xref:System&gt;</ph> namespace.","pos":[0,121],"source":"Every elementary data type in Visual Basic is supported by a structure or a class that is in the <xref:System> namespace."},{"content":"The compiler uses each data type keyword as an alias for the underlying structure or class.","pos":[122,213]},{"content":"For example, declaring a variable by using the reserved word <ph id=\"ph1\">`Byte`</ph> is the same as declaring it by using the fully qualified structure name <ph id=\"ph2\">&lt;xref:System.Byte?displayProperty=nameWithType&gt;</ph>.","pos":[214,402],"source":" For example, declaring a variable by using the reserved word `Byte` is the same as declaring it by using the fully qualified structure name <xref:System.Byte?displayProperty=nameWithType>."}]}]},{"pos":[867,882],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Numeric Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/numeric-data-types.md)</ept>","pos":[886,1001],"source":"[Numeric Data Types](../../../../visual-basic/programming-guide/language-features/data-types/numeric-data-types.md)"},{"content":"Describes the integral and non-integral numeric types.","pos":[1005,1059]},{"content":"<bpt id=\"p1\">[</bpt>Character Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/character-data-types.md)</ept>","pos":[1066,1185],"source":"[Character Data Types](../../../../visual-basic/programming-guide/language-features/data-types/character-data-types.md)"},{"content":"Describes the <ph id=\"ph1\">`Char`</ph> and <ph id=\"ph2\">`String`</ph> types.","pos":[1189,1229],"source":"Describes the `Char` and `String` types."},{"content":"<bpt id=\"p1\">[</bpt>Miscellaneous Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/miscellaneous-data-types.md)</ept>","pos":[1236,1363],"source":"[Miscellaneous Data Types](../../../../visual-basic/programming-guide/language-features/data-types/miscellaneous-data-types.md)"},{"content":"Describes the <ph id=\"ph1\">`Boolean`</ph>, <ph id=\"ph2\">`Date`</ph>, and <ph id=\"ph3\">`Object`</ph> types.","pos":[1367,1419],"source":"Describes the `Boolean`, `Date`, and `Object` types."},{"pos":[1428,1444],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept>","pos":[1448,1542],"source":"[Data Types](../../../../visual-basic/programming-guide/language-features/data-types/index.md)"},{"content":"Introduces the Visual Basic data types and describes how to use them.","pos":[1546,1615]},{"content":"<bpt id=\"p1\">[</bpt>Data Types<ept id=\"p1\">](../../../../visual-basic/language-reference/data-types/index.md)</ept>","pos":[1622,1699],"source":"[Data Types](../../../../visual-basic/language-reference/data-types/index.md)"},{"content":"Provides an overview of the elementary data types supplied by Visual Basic.","pos":[1703,1778]}]}