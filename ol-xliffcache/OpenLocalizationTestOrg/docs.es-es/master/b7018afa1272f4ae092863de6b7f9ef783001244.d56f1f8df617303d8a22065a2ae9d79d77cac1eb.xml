{"content":"---\ntitle: \"How to: Display Command Line Arguments - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"command-line arguments [C#], displaying\"\nms.assetid: b8479f2d-9e05-4d38-82da-2e61246e5437\n---\n# How to: Display Command Line Arguments (C# Programming Guide)\nArguments provided to an executable on the command-line are accessible through an optional parameter to `Main`. The arguments are provided in the form of an array of strings. Each element of the array contains one argument. White-space between arguments is removed. For example, consider these command-line invocations of a fictitious executable:  \n  \n|Input on Command-line|Array of strings passed to Main|  \n|----------------------------|-------------------------------------|  \n|**executable.exe a b c**|\"a\"<br /><br /> \"b\"<br /><br /> \"c\"|  \n|**executable.exe one two**|\"one\"<br /><br /> \"two\"|  \n|**executable.exe \"one two\" three**|\"one two\"<br /><br /> \"three\"|  \n  \n> [!NOTE]\n>  When you are running an application in Visual Studio, you can specify command-line arguments in the [Debug Page, Project Designer](/visualstudio/ide/reference/debug-page-project-designer).  \n  \n## Example  \n This example displays the command line arguments passed to a command-line application. The output shown is for the first entry in the table above.  \n  \n [!code-csharp[csProgGuideMain#9](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideMain/CS/Class1.cs#9)]  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)\n- [Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md)\n- [How to: Access Command-Line Arguments Using foreach](../../../csharp/programming-guide/main-and-command-args/how-to-access-command-line-arguments-using-foreach.md)\n- [Main() Return Values](../../../csharp/programming-guide/main-and-command-args/main-return-values.md)\n","nodes":[{"pos":[4,231],"embed":true,"restype":"x-metadata","content":"title: \"How to: Display Command Line Arguments - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"command-line arguments [C#], displaying\"\nms.assetid: b8479f2d-9e05-4d38-82da-2e61246e5437","nodes":[{"content":"How to: Display Command Line Arguments - C# Programming Guide","nodes":[{"pos":[0,61],"content":"How to: Display Command Line Arguments - C# Programming Guide","nodes":[{"content":"How to: Display Command Line Arguments - C# Programming Guide","pos":[0,61]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[238,299],"content":"How to: Display Command Line Arguments (C# Programming Guide)","linkify":"How to: Display Command Line Arguments (C# Programming Guide)","nodes":[{"content":"How to: Display Command Line Arguments (C# Programming Guide)","pos":[0,61]}]},{"content":"Arguments provided to an executable on the command-line are accessible through an optional parameter to <ph id=\"ph1\">`Main`</ph>.","pos":[300,411],"source":"Arguments provided to an executable on the command-line are accessible through an optional parameter to `Main`."},{"content":"The arguments are provided in the form of an array of strings.","pos":[412,474]},{"content":"Each element of the array contains one argument.","pos":[475,523]},{"content":"White-space between arguments is removed.","pos":[524,565]},{"content":"For example, consider these command-line invocations of a fictitious executable:","pos":[566,646]},{"content":"Input on Command-line","pos":[653,674]},{"content":"Array of strings passed to Main","pos":[675,706]},{"pos":[782,806],"content":"<bpt id=\"p1\">**</bpt>executable.exe a b c<ept id=\"p1\">**</ept>","source":"**executable.exe a b c**"},{"content":"\"a\"","pos":[807,810]},{"content":"\"b\"","pos":[823,826]},{"content":"\"c\"","pos":[839,842]},{"pos":[847,873],"content":"<bpt id=\"p1\">**</bpt>executable.exe one two<ept id=\"p1\">**</ept>","source":"**executable.exe one two**"},{"content":"\"one\"","pos":[874,879]},{"content":"\"two\"","pos":[892,897]},{"pos":[902,936],"content":"<bpt id=\"p1\">**</bpt>executable.exe \"one two\" three<ept id=\"p1\">**</ept>","source":"**executable.exe \"one two\" three**"},{"content":"\"one two\"","pos":[937,946]},{"content":"\"three\"","pos":[959,966]},{"pos":[975,1174],"content":"[!NOTE]\n When you are running an application in Visual Studio, you can specify command-line arguments in the [Debug Page, Project Designer](/visualstudio/ide/reference/debug-page-project-designer).","leadings":["","> "],"nodes":[{"content":"When you are running an application in Visual Studio, you can specify command-line arguments in the <bpt id=\"p1\">[</bpt>Debug Page, Project Designer<ept id=\"p1\">](/visualstudio/ide/reference/debug-page-project-designer)</ept>.","pos":[9,197],"source":"When you are running an application in Visual Studio, you can specify command-line arguments in the [Debug Page, Project Designer](/visualstudio/ide/reference/debug-page-project-designer)."}]},{"pos":[1183,1190],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example displays the command line arguments passed to a command-line application.","pos":[1194,1280]},{"content":"The output shown is for the first entry in the table above.","pos":[1281,1340]},{"pos":[1468,1476],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1480,1546],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[1549,1676],"content":"<bpt id=\"p1\">[</bpt>Command-line Building With csc.exe<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>","source":"[Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)"},{"pos":[1679,1780],"content":"<bpt id=\"p1\">[</bpt>Main() and Command-Line Arguments<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/index.md)</ept>","source":"[Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md)"},{"pos":[1783,1947],"content":"<bpt id=\"p1\">[</bpt>How to: Access Command-Line Arguments Using foreach<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/how-to-access-command-line-arguments-using-foreach.md)</ept>","source":"[How to: Access Command-Line Arguments Using foreach](../../../csharp/programming-guide/main-and-command-args/how-to-access-command-line-arguments-using-foreach.md)"},{"pos":[1950,2051],"content":"<bpt id=\"p1\">[</bpt>Main() Return Values<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/main-return-values.md)</ept>","source":"[Main() Return Values](../../../csharp/programming-guide/main-and-command-args/main-return-values.md)"}]}