{"content":"---\ntitle: \"Object variable or With block variable not set\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbrID91\"\nms.assetid: 2f03e611-f0ed-465c-99a2-a816e034faa3\n---\n# Object variable or With block variable not set\nAn invalid object variable is being referenced.   This error can occur for several reasons:  \n  \n-   A variable was declared without specifying a type. If a variable is declared without specifying a type, it defaults to type `Object`.  \n  \n     For example, a variable declared with `Dim x` would be of type `Object;` a variable declared with `Dim x As String` would be of type `String`.  \n  \n    > [!TIP]\n    >  The `Option Strict` statement disallows implicit typing that results in an `Object` type. If you omit the type, a compile-time error will occur. See [Option Strict Statement](../../../visual-basic/language-reference/statements/option-strict-statement.md).  \n  \n-   You are attempting to reference an object that has been set to `Nothing`  \n  \n     .  \n  \n-   You are attempting to access an element of an array variable that wasn't properly declared.  \n  \n     For example, an array declared as `products() As String` will trigger the error if you try to reference an element of the array `products(3) = \"Widget\"`. The array has no elements and is treated as an object.  \n  \n-   You are attempting to access code within a `With...End With` block before the block has been initialized.   A `With...End With` block must be initialized by executing the `With` statement entry point.  \n  \n> [!NOTE]\n>  In earlier versions of Visual Basic or VBA this error was also triggered by assigning a value to a variable without using the `Set` keyword (`x = \"name\"` instead of `Set x = \"name\"`). The `Set` keyword is no longer valid in Visual Basic .Net.  \n  \n## To correct this error  \n  \n1.  Set `Option Strict` to `On` by adding the following code to the beginning of the file:  \n  \n```vb  \nOption Strict On  \n```  \n\n     When you run the project, a compiler error will appear in the **Error List** for any variable that was specified without a type.  \n  \n2.  If you don't want to enable `Option Strict`, search your code for any variables that were specified without a type (`Dim x` instead of `Dim x As String`) and add the intended type to the declaration.  \n  \n3.  Make sure you aren't referring to  an object variable that has been set to `Nothing`.  Search your code for the keyword `Nothing`, and revise your code so that the object isn't set to `Nothing` until after you have referenced it.  \n  \n4.  Make sure that any array  variables are dimensioned before you access them. You can either assign a dimension when you first create the array (`Dim x(5) As String` instead of `Dim x() As String`), or use the `ReDim` keyword to set the dimensions of the array before you first access it.  \n  \n5.  Make sure your `With` block is initialized by executing the `With` statement entry point.  \n  \n## See also\n\n- [Object Variable Declaration](../../../visual-basic/programming-guide/language-features/variables/object-variable-declaration.md)\n- [ReDim Statement](../../../visual-basic/language-reference/statements/redim-statement.md)\n- [With...End With Statement](../../../visual-basic/language-reference/statements/with-end-with-statement.md)\n","nodes":[{"pos":[4,156],"embed":true,"restype":"x-metadata","content":"title: \"Object variable or With block variable not set\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbrID91\"\nms.assetid: 2f03e611-f0ed-465c-99a2-a816e034faa3","nodes":[{"content":"Object variable or With block variable not set","nodes":[{"pos":[0,46],"content":"Object variable or With block variable not set","nodes":[{"content":"Object variable or With block variable not set","pos":[0,46]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[163,209],"content":"Object variable or With block variable not set","linkify":"Object variable or With block variable not set","nodes":[{"content":"Object variable or With block variable not set","pos":[0,46]}]},{"content":"An invalid object variable is being referenced.","pos":[210,257]},{"content":"This error can occur for several reasons:","pos":[260,301]},{"content":"A variable was declared without specifying a type.","pos":[311,361]},{"content":"If a variable is declared without specifying a type, it defaults to type <ph id=\"ph1\">`Object`</ph>.","pos":[362,444],"source":" If a variable is declared without specifying a type, it defaults to type `Object`."},{"pos":[455,597],"content":"For example, a variable declared with <ph id=\"ph1\">`Dim x`</ph> would be of type <ph id=\"ph2\">`Object;`</ph> a variable declared with <ph id=\"ph3\">`Dim x As String`</ph> would be of type <ph id=\"ph4\">`String`</ph>.","source":"For example, a variable declared with `Dim x` would be of type `Object;` a variable declared with `Dim x As String` would be of type `String`."},{"pos":[609,878],"content":"[!TIP]\nThe `Option Strict` statement disallows implicit typing that results in an `Object` type. If you omit the type, a compile-time error will occur. See [Option Strict Statement](../../../visual-basic/language-reference/statements/option-strict-statement.md).","leadings":["","    >  "],"nodes":[{"content":"The `Option Strict` statement disallows implicit typing that results in an `Object` type. If you omit the type, a compile-time error will occur. See [Option Strict Statement](../../../visual-basic/language-reference/statements/option-strict-statement.md).","pos":[7,262],"nodes":[{"content":"The <ph id=\"ph1\">`Option Strict`</ph> statement disallows implicit typing that results in an <ph id=\"ph2\">`Object`</ph> type.","pos":[0,89],"source":"The `Option Strict` statement disallows implicit typing that results in an `Object` type."},{"content":"If you omit the type, a compile-time error will occur.","pos":[90,144]},{"content":"See <bpt id=\"p1\">[</bpt>Option Strict Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept>.","pos":[145,255],"source":" See [Option Strict Statement](../../../visual-basic/language-reference/statements/option-strict-statement.md)."}]}]},{"pos":[888,960],"content":"You are attempting to reference an object that has been set to <ph id=\"ph1\">`Nothing`</ph>","source":"You are attempting to reference an object that has been set to `Nothing`"},{"content":".","pos":[971,972]},{"content":"You are attempting to access an element of an array variable that wasn't properly declared.","pos":[982,1073]},{"content":"For example, an array declared as <ph id=\"ph1\">`products() As String`</ph> will trigger the error if you try to reference an element of the array <ph id=\"ph2\">`products(3) = \"Widget\"`</ph>.","pos":[1084,1237],"source":"For example, an array declared as `products() As String` will trigger the error if you try to reference an element of the array `products(3) = \"Widget\"`."},{"content":"The array has no elements and is treated as an object.","pos":[1238,1292]},{"content":"You are attempting to access code within a <ph id=\"ph1\">`With...End With`</ph> block before the block has been initialized.","pos":[1302,1407],"source":"You are attempting to access code within a `With...End With` block before the block has been initialized."},{"content":"A <ph id=\"ph1\">`With...End With`</ph> block must be initialized by executing the <ph id=\"ph2\">`With`</ph> statement entry point.","pos":[1410,1502],"source":"   A `With...End With` block must be initialized by executing the `With` statement entry point."},{"pos":[1510,1763],"content":"[!NOTE]\n In earlier versions of Visual Basic or VBA this error was also triggered by assigning a value to a variable without using the `Set` keyword (`x = \"name\"` instead of `Set x = \"name\"`). The `Set` keyword is no longer valid in Visual Basic .Net.","leadings":["","> "],"nodes":[{"content":"In earlier versions of Visual Basic or VBA this error was also triggered by assigning a value to a variable without using the `Set` keyword (`x = \"name\"` instead of `Set x = \"name\"`). The `Set` keyword is no longer valid in Visual Basic .Net.","pos":[9,251],"nodes":[{"content":"In earlier versions of Visual Basic or VBA this error was also triggered by assigning a value to a variable without using the <ph id=\"ph1\">`Set`</ph> keyword (<ph id=\"ph2\">`x = \"name\"`</ph> instead of <ph id=\"ph3\">`Set x = \"name\"`</ph>).","pos":[0,183],"source":"In earlier versions of Visual Basic or VBA this error was also triggered by assigning a value to a variable without using the `Set` keyword (`x = \"name\"` instead of `Set x = \"name\"`)."},{"content":"The <ph id=\"ph1\">`Set`</ph> keyword is no longer valid in Visual Basic .Net.","pos":[184,242],"source":" The `Set` keyword is no longer valid in Visual Basic .Net."}]}]},{"pos":[1772,1793],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1803,1889],"content":"Set <ph id=\"ph1\">`Option Strict`</ph> to <ph id=\"ph2\">`On`</ph> by adding the following code to the beginning of the file:","source":"Set `Option Strict` to `On` by adding the following code to the beginning of the file:"},{"pos":[2072,2271],"content":"If you don't want to enable <ph id=\"ph1\">`Option Strict`</ph>, search your code for any variables that were specified without a type (<ph id=\"ph2\">`Dim x`</ph> instead of <ph id=\"ph3\">`Dim x As String`</ph>) and add the intended type to the declaration.","source":"If you don't want to enable `Option Strict`, search your code for any variables that were specified without a type (`Dim x` instead of `Dim x As String`) and add the intended type to the declaration."},{"content":"Make sure you aren't referring to  an object variable that has been set to <ph id=\"ph1\">`Nothing`</ph>.","pos":[2281,2366],"source":"Make sure you aren't referring to  an object variable that has been set to `Nothing`."},{"content":"Search your code for the keyword <ph id=\"ph1\">`Nothing`</ph>, and revise your code so that the object isn't set to <ph id=\"ph2\">`Nothing`</ph> until after you have referenced it.","pos":[2368,2510],"source":"  Search your code for the keyword `Nothing`, and revise your code so that the object isn't set to `Nothing` until after you have referenced it."},{"content":"Make sure that any array  variables are dimensioned before you access them.","pos":[2520,2595]},{"content":"You can either assign a dimension when you first create the array (<ph id=\"ph1\">`Dim x(5) As String`</ph> instead of <ph id=\"ph2\">`Dim x() As String`</ph>), or use the <ph id=\"ph3\">`ReDim`</ph> keyword to set the dimensions of the array before you first access it.","pos":[2596,2806],"source":" You can either assign a dimension when you first create the array (`Dim x(5) As String` instead of `Dim x() As String`), or use the `ReDim` keyword to set the dimensions of the array before you first access it."},{"pos":[2816,2905],"content":"Make sure your <ph id=\"ph1\">`With`</ph> block is initialized by executing the <ph id=\"ph2\">`With`</ph> statement entry point.","source":"Make sure your `With` block is initialized by executing the `With` statement entry point."},{"pos":[2914,2922],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2926,3055],"content":"<bpt id=\"p1\">[</bpt>Object Variable Declaration<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/variables/object-variable-declaration.md)</ept>","source":"[Object Variable Declaration](../../../visual-basic/programming-guide/language-features/variables/object-variable-declaration.md)"},{"pos":[3058,3147],"content":"<bpt id=\"p1\">[</bpt>ReDim Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/redim-statement.md)</ept>","source":"[ReDim Statement](../../../visual-basic/language-reference/statements/redim-statement.md)"},{"pos":[3150,3257],"content":"<bpt id=\"p1\">[</bpt>With...End With Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/with-end-with-statement.md)</ept>","source":"[With...End With Statement](../../../visual-basic/language-reference/statements/with-end-with-statement.md)"}]}