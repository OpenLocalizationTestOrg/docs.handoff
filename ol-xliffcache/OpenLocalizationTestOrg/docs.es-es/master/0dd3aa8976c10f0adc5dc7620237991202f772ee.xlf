<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="greater-than-equal-operator.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0dd3aa8976c10f0adc5dc7620237991202f772ee</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\operators\greater-than-equal-operator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa17cf2b53c7b334fc122e6a57e43b7ba8b035b0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fcc7b71b097ec78bc67b4cd9f14f8ecd74b9a68</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>= Operator - C# Reference</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>&gt;= Operator (C# Reference)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The "greater than or equal" relational operator <ph id="ph1">`&gt;=`</ph> returns <ph id="ph2">`true`</ph> if its first operand is greater than or equal to its second operand, <ph id="ph3">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>All numeric and  enumeration types support the <ph id="ph1">`&gt;=`</ph> operator.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For operands of the same <bpt id="p1">[</bpt>enum<ept id="p1">](../keywords/enum.md)</ept> type, the corresponding values of the underlying integral type are compared.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For relational operators <ph id="ph1">`==`</ph>, <ph id="ph2">`&gt;`</ph>, <ph id="ph3">`&lt;`</ph>, <ph id="ph4">`&gt;=`</ph>, and <ph id="ph5">`&lt;=`</ph>, if any of the operands is not a number (<ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> or <ph id="ph7">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>) the result of operation is <ph id="ph8">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>That means that the <ph id="ph1">`NaN`</ph> value is neither greater than, less than, nor equal to any other <ph id="ph2">`double`</ph> (or <ph id="ph3">`float`</ph>) value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information and examples, see the <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph> reference article.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the usage of the <ph id="ph1">`&gt;=`</ph> operator:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Operator overloadability</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>User-defined types can <bpt id="p1">[</bpt>overload<ept id="p1">](../keywords/operator.md)</ept> the <ph id="ph1">`&gt;=`</ph> operator.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If a type overloads the "greater than or equal" operator <ph id="ph1">`&gt;=`</ph>, it must also overload the <bpt id="p1">[</bpt>"less than or equal" operator<ept id="p1">](less-than-equal-operator.md)</ept> <ph id="ph2">`&lt;=`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>C# language specification</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Relational and type-testing operators<ept id="p1">](~/_csharplang/spec/expressions.md#relational-and-type-testing-operators)</ept> section of the <bpt id="p2">[</bpt>C# language specification<ept id="p2">](../language-specification/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../index.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../programming-guide/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Operators<ept id="p1">](index.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&gt; Operator<ept id="p1">](greater-than-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>== Operator<ept id="p1">](equality-operators.md#equality-operator-)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>