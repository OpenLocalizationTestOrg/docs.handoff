{"content":"---\ntitle: \"How to: Move Through a DataSet with the Windows Forms BindingNavigator Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"datasets [Windows Forms], moving through\"\n  - \"BindingNavigator control [Windows Forms], moving through datasets\"\n  - \"examples [Windows Forms], BindingNavigator control\"\nms.assetid: 146d97be-3d97-400e-accb-860bbf47729d\n---\n# How to: Move Through a DataSet with the Windows Forms BindingNavigator Control\nAs you build data-driven applications, you will often need to display collections of data to users. The <xref:System.Windows.Forms.BindingNavigator> control, in conjunction with the <xref:System.Windows.Forms.BindingSource> component, provides a convenient and extensible solution for moving through a collection and displaying items sequentially.  \n  \n## Example  \n The following code example demonstrates how to use a <xref:System.Windows.Forms.BindingNavigator> control to move through data. The set is contained in a <xref:System.Data.DataView>, which is bound to a <xref:System.Windows.Forms.TextBox> control with a <xref:System.Windows.Forms.BindingSource> component.  \n  \n> [!NOTE]\n>  Storing sensitive information, such as a password, within the connection string can affect the security of your application. Using Windows Authentication (also known as integrated security) is a more secure way to control access to a database. For more information, see [Protecting Connection Information](../../data/adonet/protecting-connection-information.md).  \n  \n [!code-csharp[System.Windows.Forms.DataNavigator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/CS/form1.cs#1)]\n [!code-vb[System.Windows.Forms.DataNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/VB/form1.vb#1)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Data, System.Drawing, System.Windows.Forms and System.Xml assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project.  \n  \n## See also\n\n- <xref:System.Windows.Forms.BindingSource>\n- <xref:System.Windows.Forms.DataGridView>\n- <xref:System.Windows.Forms.BindingSource>\n- [BindingNavigator Control](bindingnavigator-control-windows-forms.md)\n- [BindingSource Component](bindingsource-component.md)\n- [How to: Bind a Windows Forms Control to a Type](how-to-bind-a-windows-forms-control-to-a-type.md)\n","nodes":[{"pos":[4,394],"embed":true,"restype":"x-metadata","content":"title: \"How to: Move Through a DataSet with the Windows Forms BindingNavigator Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"datasets [Windows Forms], moving through\"\n  - \"BindingNavigator control [Windows Forms], moving through datasets\"\n  - \"examples [Windows Forms], BindingNavigator control\"\nms.assetid: 146d97be-3d97-400e-accb-860bbf47729d","nodes":[{"content":"How to: Move Through a DataSet with the Windows Forms BindingNavigator Control","nodes":[{"pos":[0,78],"content":"How to: Move Through a DataSet with the Windows Forms BindingNavigator Control","nodes":[{"content":"How to: Move Through a DataSet with the Windows Forms BindingNavigator Control","pos":[0,78]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[401,479],"content":"How to: Move Through a DataSet with the Windows Forms BindingNavigator Control","linkify":"How to: Move Through a DataSet with the Windows Forms BindingNavigator Control","nodes":[{"content":"How to: Move Through a DataSet with the Windows Forms BindingNavigator Control","pos":[0,78]}]},{"content":"As you build data-driven applications, you will often need to display collections of data to users.","pos":[480,579]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph> control, in conjunction with the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component, provides a convenient and extensible solution for moving through a collection and displaying items sequentially.","pos":[580,827],"source":" The <xref:System.Windows.Forms.BindingNavigator> control, in conjunction with the <xref:System.Windows.Forms.BindingSource> component, provides a convenient and extensible solution for moving through a collection and displaying items sequentially."},{"pos":[836,843],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates how to use a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph> control to move through data.","pos":[847,974],"source":"The following code example demonstrates how to use a <xref:System.Windows.Forms.BindingNavigator> control to move through data."},{"content":"The set is contained in a <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph>, which is bound to a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.","pos":[975,1153],"source":" The set is contained in a <xref:System.Data.DataView>, which is bound to a <xref:System.Windows.Forms.TextBox> control with a <xref:System.Windows.Forms.BindingSource> component."},{"pos":[1161,1534],"content":"[!NOTE]\n Storing sensitive information, such as a password, within the connection string can affect the security of your application. Using Windows Authentication (also known as integrated security) is a more secure way to control access to a database. For more information, see [Protecting Connection Information](../../data/adonet/protecting-connection-information.md).","leadings":["","> "],"nodes":[{"content":"Storing sensitive information, such as a password, within the connection string can affect the security of your application. Using Windows Authentication (also known as integrated security) is a more secure way to control access to a database. For more information, see [Protecting Connection Information](../../data/adonet/protecting-connection-information.md).","pos":[9,371],"nodes":[{"content":"Storing sensitive information, such as a password, within the connection string can affect the security of your application.","pos":[0,124]},{"content":"Using Windows Authentication (also known as integrated security) is a more secure way to control access to a database.","pos":[125,243]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Protecting Connection Information<ept id=\"p1\">](../../data/adonet/protecting-connection-information.md)</ept>.","pos":[244,362],"source":" For more information, see [Protecting Connection Information](../../data/adonet/protecting-connection-information.md)."}]}]},{"pos":[1851,1869],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[1873,1895]},{"content":"References to the System, System.Data, System.Drawing, System.Windows.Forms and System.Xml assemblies.","pos":[1905,2007]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[2014,2368],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[2369,2457]},{"pos":[2466,2474],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2609,2678],"content":"<bpt id=\"p1\">[</bpt>BindingNavigator Control<ept id=\"p1\">](bindingnavigator-control-windows-forms.md)</ept>","source":"[BindingNavigator Control](bindingnavigator-control-windows-forms.md)"},{"pos":[2681,2734],"content":"<bpt id=\"p1\">[</bpt>BindingSource Component<ept id=\"p1\">](bindingsource-component.md)</ept>","source":"[BindingSource Component](bindingsource-component.md)"},{"pos":[2737,2835],"content":"<bpt id=\"p1\">[</bpt>How to: Bind a Windows Forms Control to a Type<ept id=\"p1\">](how-to-bind-a-windows-forms-control-to-a-type.md)</ept>","source":"[How to: Bind a Windows Forms Control to a Type](how-to-bind-a-windows-forms-control-to-a-type.md)"}]}