<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-get-information-about-files-folders-and-drives.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb85b7f521a12694c0bfcda6397c14a60c514f76</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\file-system\how-to-get-information-about-files-folders-and-drives.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9eeb95be16639f01111ae65e8754fac28c98e226</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00759c85b7d625bd64610e9a1627fc558b0ffd27</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Get Information About Files, Folders, and Drives  (C# Programming Guide) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Get Information About Files, Folders, and Drives  (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, you can access file system information by using the following classes:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> classes represent a file or directory and contain properties that expose many of the file attributes that are supported by the NTFS file system.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>They also contain methods for opening, closing, moving, and deleting files and folders.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can create instances of these classes by passing a string that represents the name of the file, folder, or drive in to the constructor:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can also obtain the names of files, folders, or drives by using calls to <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.DriveInfo.RootDirectory%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.File?displayProperty=fullName&gt;</ph> classes provide static methods for retrieving information about directories and files.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example shows various ways to access information about files and folders.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Robust Programming</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you process user-specified path strings, you should also handle exceptions for the following conditions:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The file name is malformed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, it contains invalid characters or only white space.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The file name is null.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The file name is longer than the system-defined maximum length.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The file name contains a colon (:).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the application does not have sufficient permissions to read the specified file, the <ph id="ph1">`Exists`</ph> method returns <ph id="ph2">`false`</ph> regardless of whether a path exists; the method does not throw an exception.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>File System and the Registry (C# Programming Guide)<ept id="p1">](../../../csharp/programming-guide/file-system/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>