{"content":"---\ntitle: \"Manipulating Strings in the .NET Framework\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\nhelpviewer_keywords: \n  - \"strings [.NET Framework], manipulating\"\n  - \"manipulating strings\"\nms.assetid: d4568ff3-9f83-4549-acd8-47aec2194ac0\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# Manipulating Strings in .NET\n.NET provides an extensive set of routines that enable you to efficiently create, compare, and modify strings as well as rapidly parse large amounts of text and data to search for, remove, and replace text patterns.  \n  \n## In This Section  \n [Best Practices for Using Strings](../../../docs/standard/base-types/best-practices-strings.md)  \n Examines string-sorting, comparison, and casing methods in .NET, and provides recommendations for selecting a string-handling method .  \n  \n [.NET Regular Expressions](../../../docs/standard/base-types/regular-expressions.md)  \n Provides detailed information about .NET regular expressions, including language elements, regular expression behavior, and examples.  \n  \n [Basic String Operations](../../../docs/standard/base-types/basic-string-operations.md)  \n Describes string operations provided by the <xref:System.String?displayProperty=nameWithType> and <xref:System.Text.StringBuilder?displayProperty=nameWithType> classes, including creating new strings from arrays of bytes, comparing string values, and modifying existing strings.  \n  \n## Related Sections  \n [Type Conversion in .NET](../../../docs/standard/base-types/type-conversion.md)  \n Explains the techniques and rules used to convert types using .NET.  \n  \n [Formatting Types](../../../docs/standard/base-types/formatting-types.md)  \n Provides how to use the base class library to implement formatting, how to format numeric types, how to format string types, and how to format for a specific culture.  \n  \n [Parsing Strings](../../../docs/standard/base-types/parsing-strings.md)  \n Describes how to initialize objects to the values described by string representations of those objects. Parsing is the inverse operation of formatting.\n","nodes":[{"pos":[4,291],"embed":true,"restype":"x-metadata","content":"title: \"Manipulating Strings in the .NET Framework\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\nhelpviewer_keywords: \n  - \"strings [.NET Framework], manipulating\"\n  - \"manipulating strings\"\nms.assetid: d4568ff3-9f83-4549-acd8-47aec2194ac0\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"Manipulating Strings in the .NET Framework","nodes":[{"pos":[0,42],"content":"Manipulating Strings in the .NET Framework","nodes":[{"content":"Manipulating Strings in the .NET Framework","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[298,326],"content":"Manipulating Strings in .NET","linkify":"Manipulating Strings in .NET","nodes":[{"content":"Manipulating Strings in .NET","pos":[0,28]}]},{"content":".NET provides an extensive set of routines that enable you to efficiently create, compare, and modify strings as well as rapidly parse large amounts of text and data to search for, remove, and replace text patterns.","pos":[327,542]},{"pos":[551,566],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Best Practices for Using Strings<ept id=\"p1\">](../../../docs/standard/base-types/best-practices-strings.md)</ept>","pos":[570,665],"source":"[Best Practices for Using Strings](../../../docs/standard/base-types/best-practices-strings.md)"},{"content":"Examines string-sorting, comparison, and casing methods in .NET, and provides recommendations for selecting a string-handling method .","pos":[669,803]},{"content":"<bpt id=\"p1\">[</bpt>.NET Regular Expressions<ept id=\"p1\">](../../../docs/standard/base-types/regular-expressions.md)</ept>","pos":[810,894],"source":"[.NET Regular Expressions](../../../docs/standard/base-types/regular-expressions.md)"},{"content":"Provides detailed information about .NET regular expressions, including language elements, regular expression behavior, and examples.","pos":[898,1031]},{"content":"<bpt id=\"p1\">[</bpt>Basic String Operations<ept id=\"p1\">](../../../docs/standard/base-types/basic-string-operations.md)</ept>","pos":[1038,1125],"source":"[Basic String Operations](../../../docs/standard/base-types/basic-string-operations.md)"},{"content":"Describes string operations provided by the <ph id=\"ph1\">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Text.StringBuilder?displayProperty=nameWithType&gt;</ph> classes, including creating new strings from arrays of bytes, comparing string values, and modifying existing strings.","pos":[1129,1407],"source":"Describes string operations provided by the <xref:System.String?displayProperty=nameWithType> and <xref:System.Text.StringBuilder?displayProperty=nameWithType> classes, including creating new strings from arrays of bytes, comparing string values, and modifying existing strings."},{"pos":[1416,1432],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Type Conversion in .NET<ept id=\"p1\">](../../../docs/standard/base-types/type-conversion.md)</ept>","pos":[1436,1515],"source":"[Type Conversion in .NET](../../../docs/standard/base-types/type-conversion.md)"},{"content":"Explains the techniques and rules used to convert types using .NET.","pos":[1519,1586]},{"content":"<bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](../../../docs/standard/base-types/formatting-types.md)</ept>","pos":[1593,1666],"source":"[Formatting Types](../../../docs/standard/base-types/formatting-types.md)"},{"content":"Provides how to use the base class library to implement formatting, how to format numeric types, how to format string types, and how to format for a specific culture.","pos":[1670,1836]},{"content":"<bpt id=\"p1\">[</bpt>Parsing Strings<ept id=\"p1\">](../../../docs/standard/base-types/parsing-strings.md)</ept>","pos":[1843,1914],"source":"[Parsing Strings](../../../docs/standard/base-types/parsing-strings.md)"},{"content":"Describes how to initialize objects to the values described by string representations of those objects.","pos":[1918,2021]},{"content":"Parsing is the inverse operation of formatting.","pos":[2022,2069]}]}