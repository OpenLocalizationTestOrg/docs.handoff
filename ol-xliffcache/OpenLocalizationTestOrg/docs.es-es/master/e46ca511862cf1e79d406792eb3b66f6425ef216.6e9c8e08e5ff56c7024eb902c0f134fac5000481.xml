{"content":"---\ntitle: \"ImportFile2 Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IALink.ImportFile2\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ImportFile2\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ImportFile2 method\"\nms.assetid: 9a6be861-c260-4a35-acea-3372ea515a0f\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 8\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ImportFile2 Method\nImports assemblies and unbound modules. This method is like [ImportFile Method](../../../../docs/framework/unmanaged-api/alink/importfile-method.md), but works even if the file being imported does not exist on disk.  \n  \n## Syntax  \n  \n```  \nHRESULT ImportFile2(  \n    LPCWSTR         pszFilename,  \n    LPCWSTR         pszTargetName,  \n    IMetaDataAssemblyImport* pAssemblyScopeIn,  \n    BOOL            fSmartImport,  \n    mdToken*        pImportToken,  \n    IMetaDataAssemblyImport** ppAssemblyScope,  \n    DWORD*          pdwCountOfScopes  \n) PURE;  \n```  \n  \n#### Parameters  \n `pszFilename`  \n Name of file to be imported.  \n  \n `pszTargetName`  \n Optional output file name that can be used to rename the file as it is linked into the assembly.  \n  \n `pAssemblyScopeIn`  \n Optional scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface.  \n  \n `fSmartImport`  \n If TRUE, ImportTypes is used, otherwise importing must be performed manually.  \n  \n `pImportToken`  \n Receives the ID for the file or assembly.  \n  \n `ppAssemblyScope`  \n Receives the [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface. NULL if the file is not an assembly.  \n  \n `pdwCountOfScopes`  \n Receives the found of files and/or scopes imported.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h.  \n  \n## See Also  \n [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)   \n [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)   \n [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)","nodes":[{"pos":[12,47],"content":"ImportFile2 Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ImportFile2 Method | Microsoft Docs","pos":[0,35]}]},{"pos":[564,582],"content":"ImportFile2 Method","linkify":"ImportFile2 Method","nodes":[{"content":"ImportFile2 Method","pos":[0,18]}]},{"content":"Imports assemblies and unbound modules.","pos":[583,622]},{"content":"This method is like <bpt id=\"p1\">[</bpt>ImportFile Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/importfile-method.md)</ept>, but works even if the file being imported does not exist on disk.","pos":[623,798],"source":" This method is like [ImportFile Method](../../../../docs/framework/unmanaged-api/alink/importfile-method.md), but works even if the file being imported does not exist on disk."},{"pos":[807,813],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1153,1163],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Name of file to be imported.","pos":[1184,1212]},{"content":"Optional output file name that can be used to rename the file as it is linked into the assembly.","pos":[1238,1334]},{"content":"Optional scope <bpt id=\"p1\">[</bpt>IMetaDataAssemblyImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)</ept> interface.","pos":[1363,1512],"source":" Optional scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface."},{"content":"If TRUE, ImportTypes is used, otherwise importing must be performed manually.","pos":[1537,1614]},{"content":"Receives the ID for the file or assembly.","pos":[1639,1680]},{"content":"Receives the <bpt id=\"p1\">[</bpt>IMetaDataAssemblyImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)</ept> interface.","pos":[1708,1855],"source":" Receives the [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface."},{"content":"NULL if the file is not an assembly.","pos":[1856,1892]},{"content":"Receives the found of files and/or scopes imported.","pos":[1921,1972]},{"pos":[1981,1993],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1997,2033]},{"pos":[2042,2054],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h.","pos":[2058,2075]},{"pos":[2084,2092],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2096,2183],"source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2186,2276],"source":" [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","pos":[2279,2348],"source":" [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}