<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="securing-messages-using-message-security.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf014c8aa972c45140a523573b9806996062b40f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\securing-messages-using-message-security.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebbb4cd8eeadf06169d462b6235bd7e5d864b301</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e85336ea8526b091b3fa08ef19a701b4bf368640</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Securing Messages Using Message Security</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Securing Messages Using Message Security</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section discusses WCF message security when using <ph id="ph1">&lt;xref:System.ServiceModel.NetMsmqBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Before reading through this topic, it is recommended that you read <bpt id="p1">[</bpt>Security Concepts<ept id="p1">](../../../../docs/framework/wcf/feature-details/security-concepts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following illustration provides a conceptual model of queued communication using WCF.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This illustration and terminology are used to explain</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>transport security concepts.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Queued Application Diagram<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wcf/feature-details/media/distributed-queue-figure.jpg "</bpt>Distributed-Queue-Figure<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When sending queued messages using WCF, the WCF message is attached as a body of the Message Queuing (MSMQ) message.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>While transport security secures the entire MSMQ message, message (or SOAP) security only secures the body of the MSMQ message.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The key concept of message security is that the client secures the message for the receiving application (service), unlike transport security where the client secures the message for the Target Queue.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>As such, MSMQ plays no part when securing the WCF message using message security.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>WCF message security adds security headers to the WCF message that integrate with existing security infrastructures, such as a certificate or the Kerberos protocol.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Message Credential Type</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Using message security, the service and client can present credentials to authenticate each another.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can select message security by setting the <ph id="ph1">&lt;xref:System.ServiceModel.NetMsmqBinding.Security%2A&gt;</ph> mode to <ph id="ph2">`Message`</ph> or <ph id="ph3">`Both`</ph> (that is, use both transport security and message security).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The service can use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext.Current%2A&gt;</ph> property to inspect the credential used to authenticate the client.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This can also be used for further authorization checks that the service chooses to implement.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This section explains the different credential types and how to use them with queues.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Certificate</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The certificate credential type uses an X.509 certificate to identify the service and the client.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In a typical scenario, the client and the service are issued a valid certificate by a trusted certification authority.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Then the connection is established, the client authenticates the validity of the service using the service's certificate to decide whether it can trust the service.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Similarly, the service uses the client's certificate to validate the client trust.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Given the disconnected nature of queues, the client and the service may not be online at the same time.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>As such, the client and service have to exchange certificates out-of-band.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In particular, the client, by virtue of holding the service's certificate (which can be chained to a certification authority) in its trusted store, must trust that it is communicating with the correct service.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For authenticating the client, the service uses the X.509 certificate attached with the message to matches it with the certificate in its store to verify the authenticity of the client.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Again, the certificate must be chained to a certification authority.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>On a computer running Windows, certificates are held in several kinds of stores.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information about the different stores, see <bpt id="p1">[</bpt>Certificate stores<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=87787)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Windows</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Windows message credential type uses the Kerberos protocol.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Kerberos protocol is a security mechanism that authenticates users on a domain and allows the authenticated users to establish secure contexts with other entities on a domain.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The problem with using the Kerberos protocol for queued communication is that the tickets that contain client identity that the Key Distribution Center (KDC) distributes are relatively short-lived.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>lifetime<ept id="p1">*</ept> is associated with the Kerberos ticket that indicates the validity of the ticket.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As such, given high latency, you cannot be sure that the token is still valid for the service that authenticates the client.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Note that when using this credential type, the service must be running under the SERVICE account.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Kerberos protocol is used by default when choosing message credential.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Exploring Kerberos, the Protocol for Distributed Security in Windows 2000<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=87790)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Username Password</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Using this property, the client can authenticate to the server using a username password in the security header of the message.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>IssuedToken</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The client can use the security token service to issue a token that can then be attached to the message for the service to authenticate the client.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Using Transport and Message Security</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When using both transport security and message security, the certificate used to secure the message both at the transport and the SOAP message level must be the same.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Securing Messages Using Transport Security<ept id="p1">](../../../../docs/framework/wcf/feature-details/securing-messages-using-transport-security.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Message Security over Message Queuing<ept id="p1">](../../../../docs/framework/wcf/samples/message-security-over-message-queuing.md)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security Concepts<ept id="p1">](../../../../docs/framework/wcf/feature-details/security-concepts.md)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Securing Services and Clients<ept id="p1">](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>