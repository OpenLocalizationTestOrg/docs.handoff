{"content":"---\ntitle: \"Programming concepts - Visual Basic\"\nms.date: 02/27/2017\nms.assetid: cc9cac84-61f6-476e-b8c7-9bae7749bd90\n---\n\n# Programming Concepts (Visual Basic)\n\nThis section explains programming concepts in the Visual Basic language.\n\n## In this section\n\n|Title|Description|\n|-----------|-----------------|\n|[Asynchronous Programming with Async and Await (Visual Basic)](../../../visual-basic/programming-guide/concepts/async/index.md)|Describes how to write asynchronous solutions by using [Async](../../../visual-basic/language-reference/modifiers/async.md) and [Await](../../../visual-basic/language-reference/operators/await-operator.md) keywords. Includes a walkthrough.|\n|[Attributes overview (Visual Basic)](../../../visual-basic/programming-guide/concepts/attributes/index.md)|Discusses how to provide additional information about programming elements such as types, fields, methods, and properties by using attributes.|\n|[Caller Information (Visual Basic)](../../../visual-basic/programming-guide/concepts/caller-information.md)|Describes how to obtain information about the caller of a method. This information includes the file path and the line number of the source code and the member name of the caller.|\n|[Collections (Visual Basic)](../../../visual-basic/programming-guide/concepts/collections.md)|Describes some of the types of collections provided by the .NET Framework. Demonstrates how to use simple collections and collections of key/value pairs.|\n|[Covariance and Contravariance (Visual Basic)](../../../visual-basic/programming-guide/concepts/covariance-contravariance/index.md)|Shows how to enable implicit conversion of generic type parameters in interfaces and delegates.|\n|[Expression Trees (Visual Basic)](../../../visual-basic/programming-guide/concepts/expression-trees/index.md)|Explains how you can use expression trees to enable dynamic modification of executable code.|\n|[Iterators (Visual Basic)](../../../visual-basic/programming-guide/concepts/iterators.md)|Describes iterators, which are used to step through collections and return elements one at a time.|\n|[Language-Integrated Query (LINQ) (Visual Basic)](../../../visual-basic/programming-guide/concepts/linq/index.md)|Discusses the powerful query capabilities in the language syntax of Visual Basic, and the model for querying relational databases, XML documents, datasets, and in-memory collections.|\n|[Object-Oriented Programming (Visual Basic)](../../../visual-basic/programming-guide/concepts/object-oriented-programming.md)|Describes common object-oriented concepts, including encapsulation, inheritance, and polymorphism.|\n|[Reflection (Visual Basic)](../../../visual-basic/programming-guide/concepts/reflection.md)|Explains how to use reflection to dynamically create an instance of a type, bind the type to an existing object, or get the type from an existing object and invoke its methods or access its fields and properties.|\n|[Serialization (Visual Basic)](../../../visual-basic/programming-guide/concepts/serialization/index.md)|Describes key concepts in binary, XML, and SOAP serialization.|\n\n## Related sections\n\n|||\n|---|---|\n|[Assemblies in .NET](../../../standard/assembly/index.md)|Describes how to create and use assemblies.|\n|[Performance Tips](../../../framework/performance/performance-tips.md) | Discusses several basic rules that may help you increase the performance of your application.|\n","nodes":[{"pos":[4,117],"embed":true,"restype":"x-metadata","content":"title: \"Programming concepts - Visual Basic\"\nms.date: 02/27/2017\nms.assetid: cc9cac84-61f6-476e-b8c7-9bae7749bd90","nodes":[{"content":"Programming concepts - Visual Basic","nodes":[{"pos":[0,35],"content":"Programming concepts - Visual Basic","nodes":[{"content":"Programming concepts - Visual Basic","pos":[0,35]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[125,160],"content":"Programming Concepts (Visual Basic)","linkify":"Programming Concepts (Visual Basic)","nodes":[{"content":"Programming Concepts (Visual Basic)","pos":[0,35]}]},{"content":"This section explains programming concepts in the Visual Basic language.","pos":[162,234]},{"pos":[239,254],"content":"In this section","linkify":"In this section","nodes":[{"content":"In this section","pos":[0,15]}]},{"content":"Title","pos":[257,262]},{"content":"Description","pos":[263,274]},{"pos":[309,436],"content":"<bpt id=\"p1\">[</bpt>Asynchronous Programming with Async and Await (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept>","source":"[Asynchronous Programming with Async and Await (Visual Basic)](../../../visual-basic/programming-guide/concepts/async/index.md)"},{"content":"Describes how to write asynchronous solutions by using <bpt id=\"p1\">[</bpt>Async<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/async.md)</ept> and <bpt id=\"p2\">[</bpt>Await<ept id=\"p2\">](../../../visual-basic/language-reference/operators/await-operator.md)</ept> keywords.","pos":[437,652],"source":"Describes how to write asynchronous solutions by using [Async](../../../visual-basic/language-reference/modifiers/async.md) and [Await](../../../visual-basic/language-reference/operators/await-operator.md) keywords."},{"content":"Includes a walkthrough.","pos":[653,676]},{"pos":[679,785],"content":"<bpt id=\"p1\">[</bpt>Attributes overview (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/attributes/index.md)</ept>","source":"[Attributes overview (Visual Basic)](../../../visual-basic/programming-guide/concepts/attributes/index.md)"},{"content":"Discusses how to provide additional information about programming elements such as types, fields, methods, and properties by using attributes.","pos":[786,928]},{"pos":[931,1038],"content":"<bpt id=\"p1\">[</bpt>Caller Information (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/caller-information.md)</ept>","source":"[Caller Information (Visual Basic)](../../../visual-basic/programming-guide/concepts/caller-information.md)"},{"content":"Describes how to obtain information about the caller of a method.","pos":[1039,1104]},{"content":"This information includes the file path and the line number of the source code and the member name of the caller.","pos":[1105,1218]},{"pos":[1221,1314],"content":"<bpt id=\"p1\">[</bpt>Collections (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/collections.md)</ept>","source":"[Collections (Visual Basic)](../../../visual-basic/programming-guide/concepts/collections.md)"},{"content":"Describes some of the types of collections provided by the .NET Framework.","pos":[1315,1389]},{"content":"Demonstrates how to use simple collections and collections of key/value pairs.","pos":[1390,1468]},{"pos":[1471,1602],"content":"<bpt id=\"p1\">[</bpt>Covariance and Contravariance (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/covariance-contravariance/index.md)</ept>","source":"[Covariance and Contravariance (Visual Basic)](../../../visual-basic/programming-guide/concepts/covariance-contravariance/index.md)"},{"content":"Shows how to enable implicit conversion of generic type parameters in interfaces and delegates.","pos":[1603,1698]},{"pos":[1701,1810],"content":"<bpt id=\"p1\">[</bpt>Expression Trees (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/expression-trees/index.md)</ept>","source":"[Expression Trees (Visual Basic)](../../../visual-basic/programming-guide/concepts/expression-trees/index.md)"},{"content":"Explains how you can use expression trees to enable dynamic modification of executable code.","pos":[1811,1903]},{"pos":[1906,1995],"content":"<bpt id=\"p1\">[</bpt>Iterators (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/iterators.md)</ept>","source":"[Iterators (Visual Basic)](../../../visual-basic/programming-guide/concepts/iterators.md)"},{"content":"Describes iterators, which are used to step through collections and return elements one at a time.","pos":[1996,2094]},{"pos":[2097,2210],"content":"<bpt id=\"p1\">[</bpt>Language-Integrated Query (LINQ) (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/linq/index.md)</ept>","source":"[Language-Integrated Query (LINQ) (Visual Basic)](../../../visual-basic/programming-guide/concepts/linq/index.md)"},{"content":"Discusses the powerful query capabilities in the language syntax of Visual Basic, and the model for querying relational databases, XML documents, datasets, and in-memory collections.","pos":[2211,2393]},{"pos":[2396,2521],"content":"<bpt id=\"p1\">[</bpt>Object-Oriented Programming (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/object-oriented-programming.md)</ept>","source":"[Object-Oriented Programming (Visual Basic)](../../../visual-basic/programming-guide/concepts/object-oriented-programming.md)"},{"content":"Describes common object-oriented concepts, including encapsulation, inheritance, and polymorphism.","pos":[2522,2620]},{"pos":[2623,2714],"content":"<bpt id=\"p1\">[</bpt>Reflection (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/reflection.md)</ept>","source":"[Reflection (Visual Basic)](../../../visual-basic/programming-guide/concepts/reflection.md)"},{"content":"Explains how to use reflection to dynamically create an instance of a type, bind the type to an existing object, or get the type from an existing object and invoke its methods or access its fields and properties.","pos":[2715,2927]},{"pos":[2930,3033],"content":"<bpt id=\"p1\">[</bpt>Serialization (Visual Basic)<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/serialization/index.md)</ept>","source":"[Serialization (Visual Basic)](../../../visual-basic/programming-guide/concepts/serialization/index.md)"},{"content":"Describes key concepts in binary, XML, and SOAP serialization.","pos":[3034,3096]},{"pos":[3102,3118],"content":"Related sections","linkify":"Related sections","nodes":[{"content":"Related sections","pos":[0,16]}]},{"pos":[3135,3192],"content":"<bpt id=\"p1\">[</bpt>Assemblies in .NET<ept id=\"p1\">](../../../standard/assembly/index.md)</ept>","source":"[Assemblies in .NET](../../../standard/assembly/index.md)"},{"content":"Describes how to create and use assemblies.","pos":[3193,3236]},{"pos":[3239,3309],"content":"<bpt id=\"p1\">[</bpt>Performance Tips<ept id=\"p1\">](../../../framework/performance/performance-tips.md)</ept>","source":"[Performance Tips](../../../framework/performance/performance-tips.md)"},{"content":"Discusses several basic rules that may help you increase the performance of your application.","pos":[3312,3405]}]}