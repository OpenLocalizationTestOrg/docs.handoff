{"content":"---\ntitle: \"Queries (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"queries [Visual Basic]\"\n  - \"LINQ, queries\"\nms.assetid: 8edc717c-4a24-4cbc-9c16-11f479c935db\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Queries (Visual Basic)\n[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] enables you to create [!INCLUDE[vbteclinqext](../../../csharp/getting-started/includes/vbteclinqext_md.md)] expressions in your code.  \n  \n## In This Section  \n [Aggregate Clause](../../../visual-basic/language-reference/queries/aggregate-clause.md)  \n Describes the `Aggregate` clause, which applies one or more aggregate functions to a collection.  \n  \n [Distinct Clause](../../../visual-basic/language-reference/queries/distinct-clause.md)  \n Describes the `Distinct` clause, which restricts the values of the current range variable to eliminate duplicate values in query results.  \n  \n [From Clause](../../../visual-basic/language-reference/queries/from-clause.md)  \n Describes the `From` clause, which specifies a collection and a range variable for a query.  \n  \n [Group By Clause](../../../visual-basic/language-reference/queries/group-by-clause.md)  \n Describes the `Group By` clause, which groups the elements of a query result and can be used to apply aggregate functions to each group.  \n  \n [Group Join Clause](../../../visual-basic/language-reference/queries/group-join-clause.md)  \n Describes the `Group Join` clause, which combines two collections into a single hierarchical collection.  \n  \n [Join Clause](../../../visual-basic/language-reference/queries/join-clause.md)  \n Describes the `Join` clause, which combines two collections into a single collection.  \n  \n [Let Clause](../../../visual-basic/language-reference/queries/let-clause.md)  \n Describes the `Let` clause, which computes a value and assigns it to a new variable in the query.  \n  \n [Order By Clause](../../../visual-basic/language-reference/queries/order-by-clause.md)  \n Describes the `Order By` clause, which specifies the sort order for columns in a query.  \n  \n [Select Clause](../../../visual-basic/language-reference/queries/select-clause.md)  \n Describes the `Select` clause, which declares a set of range variables for a query.  \n  \n [Skip Clause](../../../visual-basic/language-reference/queries/skip-clause.md)  \n Describes the `Skip` clause, which bypasses a specified number of elements in a collection and then returns the remaining elements.  \n  \n [Skip While Clause](../../../visual-basic/language-reference/queries/skip-while-clause.md)  \n Describes the `Skip While` clause, which bypasses elements in a collection as long as a specified condition is `true` and then returns the remaining elements.  \n  \n [Take Clause](../../../visual-basic/language-reference/queries/take-clause.md)  \n Describes the `Take` clause, which returns a specified number of contiguous elements from the start of a collection.  \n  \n [Take While Clause](../../../visual-basic/language-reference/queries/take-while-clause.md)  \n Describes the `Take While` clause, which includes elements in a collection as long as a specified condition is `true` and bypasses the remaining elements.  \n  \n [Where Clause](../../../visual-basic/language-reference/queries/where-clause.md)  \n Describes the `Where` clause, which specifies a filtering condition for a query.  \n  \n## See Also  \n [LINQ](../../../visual-basic/programming-guide/language-features/linq/index.md)   \n [Introduction to LINQ in Visual Basic](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)","nodes":[{"pos":[4,575],"nodes":[{"content":"Queries (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,39],"content":"Queries (Visual Basic) | Microsoft Docs","nodes":[{"content":"Queries (Visual Basic) | Microsoft Docs","pos":[0,39]}]}],"pos":[6,48],"yaml":true}],"content":"title: \"Queries (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"queries [Visual Basic]\"\n  - \"LINQ, queries\"\nms.assetid: 8edc717c-4a24-4cbc-9c16-11f479c935db\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[582,604],"content":"Queries (Visual Basic)","linkify":"Queries (Visual Basic)","nodes":[{"content":"Queries (Visual Basic)","pos":[0,22]}]},{"pos":[605,828],"content":"<ph id=\"ph1\">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> enables you to create <ph id=\"ph2\">[!INCLUDE[vbteclinqext](../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph> expressions in your code.","source":"[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] enables you to create [!INCLUDE[vbteclinqext](../../../csharp/getting-started/includes/vbteclinqext_md.md)] expressions in your code."},{"pos":[837,852],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Aggregate Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/aggregate-clause.md)</ept>","pos":[856,944],"source":"[Aggregate Clause](../../../visual-basic/language-reference/queries/aggregate-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Aggregate`</ph> clause, which applies one or more aggregate functions to a collection.","pos":[948,1044],"source":"Describes the `Aggregate` clause, which applies one or more aggregate functions to a collection."},{"content":"<bpt id=\"p1\">[</bpt>Distinct Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/distinct-clause.md)</ept>","pos":[1051,1137],"source":"[Distinct Clause](../../../visual-basic/language-reference/queries/distinct-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Distinct`</ph> clause, which restricts the values of the current range variable to eliminate duplicate values in query results.","pos":[1141,1278],"source":"Describes the `Distinct` clause, which restricts the values of the current range variable to eliminate duplicate values in query results."},{"content":"<bpt id=\"p1\">[</bpt>From Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/from-clause.md)</ept>","pos":[1285,1363],"source":"[From Clause](../../../visual-basic/language-reference/queries/from-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`From`</ph> clause, which specifies a collection and a range variable for a query.","pos":[1367,1458],"source":"Describes the `From` clause, which specifies a collection and a range variable for a query."},{"content":"<bpt id=\"p1\">[</bpt>Group By Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/group-by-clause.md)</ept>","pos":[1465,1551],"source":"[Group By Clause](../../../visual-basic/language-reference/queries/group-by-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Group By`</ph> clause, which groups the elements of a query result and can be used to apply aggregate functions to each group.","pos":[1555,1691],"source":"Describes the `Group By` clause, which groups the elements of a query result and can be used to apply aggregate functions to each group."},{"content":"<bpt id=\"p1\">[</bpt>Group Join Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/group-join-clause.md)</ept>","pos":[1698,1788],"source":"[Group Join Clause](../../../visual-basic/language-reference/queries/group-join-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Group Join`</ph> clause, which combines two collections into a single hierarchical collection.","pos":[1792,1896],"source":"Describes the `Group Join` clause, which combines two collections into a single hierarchical collection."},{"content":"<bpt id=\"p1\">[</bpt>Join Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/join-clause.md)</ept>","pos":[1903,1981],"source":"[Join Clause](../../../visual-basic/language-reference/queries/join-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Join`</ph> clause, which combines two collections into a single collection.","pos":[1985,2070],"source":"Describes the `Join` clause, which combines two collections into a single collection."},{"content":"<bpt id=\"p1\">[</bpt>Let Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/let-clause.md)</ept>","pos":[2077,2153],"source":"[Let Clause](../../../visual-basic/language-reference/queries/let-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Let`</ph> clause, which computes a value and assigns it to a new variable in the query.","pos":[2157,2254],"source":"Describes the `Let` clause, which computes a value and assigns it to a new variable in the query."},{"content":"<bpt id=\"p1\">[</bpt>Order By Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/order-by-clause.md)</ept>","pos":[2261,2347],"source":"[Order By Clause](../../../visual-basic/language-reference/queries/order-by-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Order By`</ph> clause, which specifies the sort order for columns in a query.","pos":[2351,2438],"source":"Describes the `Order By` clause, which specifies the sort order for columns in a query."},{"content":"<bpt id=\"p1\">[</bpt>Select Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/select-clause.md)</ept>","pos":[2445,2527],"source":"[Select Clause](../../../visual-basic/language-reference/queries/select-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Select`</ph> clause, which declares a set of range variables for a query.","pos":[2531,2614],"source":"Describes the `Select` clause, which declares a set of range variables for a query."},{"content":"<bpt id=\"p1\">[</bpt>Skip Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/skip-clause.md)</ept>","pos":[2621,2699],"source":"[Skip Clause](../../../visual-basic/language-reference/queries/skip-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Skip`</ph> clause, which bypasses a specified number of elements in a collection and then returns the remaining elements.","pos":[2703,2834],"source":"Describes the `Skip` clause, which bypasses a specified number of elements in a collection and then returns the remaining elements."},{"content":"<bpt id=\"p1\">[</bpt>Skip While Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/skip-while-clause.md)</ept>","pos":[2841,2931],"source":"[Skip While Clause](../../../visual-basic/language-reference/queries/skip-while-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Skip While`</ph> clause, which bypasses elements in a collection as long as a specified condition is <ph id=\"ph2\">`true`</ph> and then returns the remaining elements.","pos":[2935,3093],"source":"Describes the `Skip While` clause, which bypasses elements in a collection as long as a specified condition is `true` and then returns the remaining elements."},{"content":"<bpt id=\"p1\">[</bpt>Take Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/take-clause.md)</ept>","pos":[3100,3178],"source":"[Take Clause](../../../visual-basic/language-reference/queries/take-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Take`</ph> clause, which returns a specified number of contiguous elements from the start of a collection.","pos":[3182,3298],"source":"Describes the `Take` clause, which returns a specified number of contiguous elements from the start of a collection."},{"content":"<bpt id=\"p1\">[</bpt>Take While Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/take-while-clause.md)</ept>","pos":[3305,3395],"source":"[Take While Clause](../../../visual-basic/language-reference/queries/take-while-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Take While`</ph> clause, which includes elements in a collection as long as a specified condition is <ph id=\"ph2\">`true`</ph> and bypasses the remaining elements.","pos":[3399,3553],"source":"Describes the `Take While` clause, which includes elements in a collection as long as a specified condition is `true` and bypasses the remaining elements."},{"content":"<bpt id=\"p1\">[</bpt>Where Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/where-clause.md)</ept>","pos":[3560,3640],"source":"[Where Clause](../../../visual-basic/language-reference/queries/where-clause.md)"},{"content":"Describes the <ph id=\"ph1\">`Where`</ph> clause, which specifies a filtering condition for a query.","pos":[3644,3724],"source":"Describes the `Where` clause, which specifies a filtering condition for a query."},{"pos":[3733,3741],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>LINQ<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/linq/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3745,3825],"source":"[LINQ](../../../visual-basic/programming-guide/language-features/linq/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Introduction to LINQ in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept>","pos":[3829,3955],"source":"[Introduction to LINQ in Visual Basic](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)"}]}