<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a367389b29416622206baa9f82f053b6850b0210</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\fundamental-concepts.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1efb6a06431ff0b3e67d44023400b17786e8e4c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33c62147ab1452af8f0ce861159c3e31dadafe52</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Fundamental Windows Workflow Concepts | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Fundamental Windows Workflow Concepts</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Workflow development in the <ph id="ph1">[!INCLUDE[netfx_current_long](../../../includes/netfx-current-long-md.md)]</ph> uses concepts that may be new to some developers.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic describes some of the concepts and how they are implemented.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Workflows and Activities</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A workflow is a structured collection of actions that models a process.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Each action in the workflow is modeled as an activity.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A host interacts with a workflow by using <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> for invoking a workflow as if it were a method,  <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> for explicit control over the execution of a single workflow instance, and <ph id="ph3">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> for message-based interactions in multi-instance scenarios.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because steps of the workflow are defined as a hierarchy of activities, the topmost activity in the hierarchy can be said to define the workflow itself.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This hierarchy model takes the place of the explicit <ph id="ph1">`SequentialWorkflow`</ph> and <ph id="ph2">`StateMachineWorkflow`</ph> classes from previous versions.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Activities themselves are developed as collections of other activities (using the <ph id="ph1">&lt;xref:System.Activities.Activity&gt;</ph> class as a base, usually defined by using XAML) or are custom created by using the <ph id="ph2">&lt;xref:System.Activities.CodeActivity&gt;</ph> class, which can use the runtime for data access, or by using the <ph id="ph3">&lt;xref:System.Activities.NativeActivity&gt;</ph> class, which exposes the breadth of the workflow runtime to the activity author.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Activities developed by using <ph id="ph1">&lt;xref:System.Activities.CodeActivity&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.NativeActivity&gt;</ph> are created by using CLR-compliant languages such as C#.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Activity Data Model</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Activities store and share data by using the types shown in the following table.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Variable</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Stores data in an activity.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Argument</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Moves data into and out of an activity.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Expression</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An activity with an elevated return value used in argument bindings.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Workflow Runtime</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The workflow runtime is the environment in which workflows execute.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> is the simplest way to execute a workflow.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The host uses <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> for the following:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To synchronously invoke a workflow.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To provide input to, or retrieve output from a workflow.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To add extensions to be used by activities.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.ActivityInstance&gt;</ph> is the thread-safe proxy that hosts can use to interact with the runtime.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The host uses <ph id="ph1">&lt;xref:System.Activities.ActivityInstance&gt;</ph> for the following:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To acquire an instance by creating it or loading it from an instance store.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To be notified of instance life-cycle events.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To control workflow execution.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To provide input to, or retrieve output from a workflow.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To signal a workflow continuation and pass values into the workflow.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To persist workflow data.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To add extensions to be used by activities.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Activities gain access to the workflow runtime environment by using the appropriate <ph id="ph1">&lt;xref:System.Activities.ActivityContext&gt;</ph> derived class, such as <ph id="ph2">&lt;xref:System.Activities.NativeActivityContext&gt;</ph> or <ph id="ph3">&lt;xref:System.Activities.CodeActivityContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>They use this for resolving arguments and variables, for scheduling child activities, and for many other purposes.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Services</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Workflows provide a natural way to implement and access loosely-coupled services, using messaging activities.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Messaging activities are built on <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> and are the primary mechanism used to get data into and out of a workflow.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can compose messaging activities together to model any kind of message exchange pattern you wish.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph> see <bpt id="p1">[</bpt>Messaging Activities<ept id="p1">](../../../docs/framework/wcf/feature-details/messaging-activities.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Workflow services are hosted using the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Hosting Workflow Services Overview<ept id="p1">](../../../docs/framework/wcf/feature-details/hosting-workflow-services-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> workflow services see <bpt id="p1">[</bpt>Workflow Services<ept id="p1">](../../../docs/framework/wcf/feature-details/workflow-services.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Persistence, Unloading, and Long-Running Workflows</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Windows Workflow simplifies the authoring of long-running reactive programs by providing:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Activities that access external input.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The ability to create <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> objects that can be resumed by a host listener.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The ability to persist a workflow’s data and unload the workflow, and then reload and reactivate the workflow in response to the resumption of <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> objects in a particular workflow.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A workflow continuously executes activities until there are no more activities to execute or until all currently executing activities are waiting for input.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In this latter state, the workflow is idle.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It is common for a host to unload workflows that have gone idle and to reload them to continue execution when a message arrives.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> provides functionality for this feature and provides an extensible unload policy.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For blocks of execution that use volatile state data or other data that cannot be persisted, an activity can indicate to a host that it should not be persisted by using the <ph id="ph1">&lt;xref:System.Activities.NoPersistHandle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A workflow can also explicitly persist its data to a durable storage medium by using the <ph id="ph1">&lt;xref:System.Activities.Statements.Persist&gt;</ph> activity.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>