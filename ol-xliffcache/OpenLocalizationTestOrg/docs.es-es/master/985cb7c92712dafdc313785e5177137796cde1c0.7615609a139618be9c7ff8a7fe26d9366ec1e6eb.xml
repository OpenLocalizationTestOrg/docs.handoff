{"content":"---\ntitle: \"&lt;certificate&gt; of &lt;clientCertificate&gt; Element | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 00297efb-a7f2-4e03-bc2b-943d545610fc\ncaps.latest.revision: 9\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# &lt;certificate&gt; of &lt;clientCertificate&gt; Element\nSpecifies an X.509 certificate used to sign and encrypt messages.  \n  \n \\<system.ServiceModel>  \n\\<behaviors>  \n\\<serviceBehaviors>  \n\\<behavior>  \n\\<serviceCredentials>  \n\\<clientCertificate>  \n\\<certificate>  \n  \n## Syntax  \n  \n```  \n  \n<certificate findValue = \"String\"   \nstoreLocation = \"CurrentUser/LocalMachine\"  \nstoreName=\"AddressBook/AuthRoot/CertificateAuthority/Disallowed/My/Root/TrustedPeople/TrustedPublisher\"  \nX509FindType=\"FindByThumbPrint/FindBySubjectName/FindBySubjectDistinguishedName/FindByIssuerName/FindByIssuerDistinguishedName/FindBySerialNumber/FindByTimeValid/FindByTimeNotYetValid/FindByTemplateName/FindByApplicationPolicy/FindByCertificatePolicy/FindByExtension/FindByKeyUsage/FindBySubjectKeyIdentifier\"  \n/>  \n```  \n  \n## Attributes and Elements  \n The following sections describe attributes, child elements, and parent elements  \n  \n### Attributes  \n  \n|Attribute|Description|  \n|---------------|-----------------|  \n|`findValue`|A string that contains the value to search for in the X.509 certificate store. The type contained in the attribute must satisfy the requirements of the specified X509FindType. The default is an empty string.|  \n|`storeLocation`|Specifies the location of the X.509 certificate store that the client uses to validate the server’s certificate against. Valid values include the following:<br /><br /> -   LocalMachine: the certificate store assigned to the local machine.<br />-   CurrentUser: the certificate store assigned to the current user.<br /><br /> The default is LocalMachine.|  \n|`storeName`|Specifies the name of the X.509 certificate store to open. Valid values include the following:<br /><br /> -   AddressBook: Certificate store for other users.<br />-   AuthRoot: Certificate store for third-party certification authorities (CAs).<br />-   CertificationAuthority: Certificate store for intermediate certification authorities (CAs).<br />-   Disallowed: Certificate store for revoked certificates.<br />-   My: Certificate store for personal certificates.<br />-   Root: Certificate store for trusted root certification authorities (CAs).<br />-   TrustedPeople: Certificate store for directly trusted people and resources.<br />-   TrustedPublisher: Certificate store for directly trusted publishers.<br /><br /> The default is My.|  \n|`X509FindType`|Defines the type of X.509 search to be executed. Valid values include the following:<br /><br /> -   FindByThumbPrint<br />-   FindBySubjectName<br />-   FindBySubjectDistinguishedName<br />-   FindByIssuerName<br />-   FindByIssuerDistinguishedName<br />-   FindBySerialNumber<br />-   FindByTimeValid<br />-   FindByTimeNotYetValid<br />-   FindByTemplateName<br />-   FindByApplicationPolicy<br />-   FindByCertificatePolicy<br />-   FindByExtension<br />-   FindByKeyUsage<br />-   FindBySubjectKeyIdentifier<br /><br /> The type contained in the `findValue` attribute must satisfy the requirements of the specified X509FindType.<br /><br /> The default value is FindBySubjectDistinguishedName.|  \n  \n### Child Elements  \n None.  \n  \n### Parent Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|[\\<clientCertificate>](../../../../../docs/framework/configure-apps/file-schema/wcf/clientcertificate-of-servicecredentials.md)||  \n  \n## Remarks  \n The `<certificate>` element is used when the service must have the client's certificate in advance to communicate securely with the client. This occurs when using the duplex communication pattern. In the more typical request/response pattern, the client includes its certificate in the request, which the service uses to encrypt and sign its response back to the client. In the duplex communication pattern, however, the service does not have a request from the client and therefore it needs the client's certificate in advance to secure the message to the client. Therefore you must obtain the client's certificate in an out-of-band negotiation, and specify the certificate using this element. For more information about duplex services, see [How to: Create a Duplex Contract](../../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md).  \n  \n## Example  \n The following code specifies how to find an appropriate X.509 certificate and a custom validation type in the `<authentication>` element.  \n  \n```  \n<serviceBehaviors>  \n <behavior name=\"myServiceBehavior\">  \n  <clientCertificate>  \n   <certificate   \n         findValue=\"www.cohowinery.com\"   \n         storeLocation=\"CurrentUser\"   \n         storeName=\"TrustedPeople\"  \n         x509FindType=\"FindByIssuerName\" />  \n   <authentication customCertificateValidatorType=\"MyTypes.Coho\"  \n    certificateValidationMode=\"Custom\"   \n    revocationMode=\"Offline\"  \n    includeWindowsGroups=\"false\"   \n    mapClientCertificateToWindowsAccount=\"true\" />  \n  </clientCertificate>  \n </behavior>  \n</serviceBehaviors>  \n```  \n  \n## See Also  \n <xref:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate%2A>   \n <xref:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement.Certificate%2A>   \n <xref:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement>   \n [Security Behaviors](../../../../../docs/framework/wcf/feature-details/security-behaviors-in-wcf.md)   \n [How to: Create a Service that Employs a Custom Certificate Validator](../../../../../docs/framework/wcf/extending/how-to-create-a-service-that-employs-a-custom-certificate-validator.md)   \n [Working with Certificates](../../../../../docs/framework/wcf/feature-details/working-with-certificates.md)","nodes":[{"pos":[4,376],"embed":true,"restype":"x-metadata","content":"title: \"&lt;certificate&gt; of &lt;clientCertificate&gt; Element | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 00297efb-a7f2-4e03-bc2b-943d545610fc\ncaps.latest.revision: 9\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","nodes":[{"content":"&lt;certificate&gt; of &lt;clientCertificate&gt; Element | Microsoft Docs","nodes":[{"pos":[0,73],"content":"&lt;certificate&gt; of &lt;clientCertificate&gt; Element | Microsoft Docs","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>certificate<ph id=\"ph2\">&amp;gt;</ph> of <ph id=\"ph3\">&amp;lt;</ph>clientCertificate<ph id=\"ph4\">&amp;gt;</ph> Element | Microsoft Docs","pos":[0,73],"source":"&lt;certificate&gt; of &lt;clientCertificate&gt; Element | Microsoft Docs"}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[383,439],"content":"&lt;certificate&gt; of &lt;clientCertificate&gt; Element","linkify":"&lt;certificate&gt; of &lt;clientCertificate&gt; Element","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>certificate<ph id=\"ph2\">&amp;gt;</ph> of <ph id=\"ph3\">&amp;lt;</ph>clientCertificate<ph id=\"ph4\">&amp;gt;</ph> Element","pos":[0,56],"source":"&lt;certificate&gt; of &lt;clientCertificate&gt; Element"}]},{"content":"Specifies an X.509 certificate used to sign and encrypt messages.","pos":[440,505]},{"content":"<ph id=\"ph1\">\\&lt;</ph>system.ServiceModel&gt;","pos":[512,534],"source":"\\<system.ServiceModel>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>behaviors&gt;","pos":[537,549],"source":"\\<behaviors>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>serviceBehaviors&gt;","pos":[552,571],"source":"\\<serviceBehaviors>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>behavior&gt;","pos":[574,585],"source":"\\<behavior>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>serviceCredentials&gt;","pos":[588,609],"source":"\\<serviceCredentials>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>clientCertificate&gt;","pos":[612,632],"source":"\\<clientCertificate>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>certificate&gt;","pos":[635,649],"source":"\\<certificate>"},{"pos":[658,664],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1196,1219],"content":"Attributes and Elements","linkify":"Attributes and Elements","nodes":[{"content":"Attributes and Elements","pos":[0,23]}]},{"content":"The following sections describe attributes, child elements, and parent elements","pos":[1223,1302]},{"pos":[1312,1322],"content":"Attributes","linkify":"Attributes","nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"Attribute","pos":[1329,1338]},{"content":"Description","pos":[1339,1350]},{"content":"A string that contains the value to search for in the X.509 certificate store.","pos":[1405,1483]},{"content":"The type contained in the attribute must satisfy the requirements of the specified X509FindType.","pos":[1484,1580]},{"content":"The default is an empty string.","pos":[1581,1612]},{"content":"Specifies the location of the X.509 certificate store that the client uses to validate the server’s certificate against.","pos":[1633,1753]},{"content":"Valid values include the following:","pos":[1754,1789]},{"content":"-   LocalMachine: the certificate store assigned to the local machine.","pos":[1802,1872]},{"content":"-   CurrentUser: the certificate store assigned to the current user.","pos":[1878,1946]},{"content":"The default is LocalMachine.","pos":[1959,1987]},{"content":"Specifies the name of the X.509 certificate store to open.","pos":[2004,2062]},{"content":"Valid values include the following:","pos":[2063,2098]},{"content":"-   AddressBook: Certificate store for other users.","pos":[2111,2162]},{"content":"-   AuthRoot: Certificate store for third-party certification authorities (CAs).","pos":[2168,2248]},{"content":"-   CertificationAuthority: Certificate store for intermediate certification authorities (CAs).","pos":[2254,2349]},{"content":"-   Disallowed: Certificate store for revoked certificates.","pos":[2355,2414]},{"content":"-   My: Certificate store for personal certificates.","pos":[2420,2472]},{"content":"-   Root: Certificate store for trusted root certification authorities (CAs).","pos":[2478,2555]},{"content":"-   TrustedPeople: Certificate store for directly trusted people and resources.","pos":[2561,2640]},{"content":"-   TrustedPublisher: Certificate store for directly trusted publishers.","pos":[2646,2718]},{"content":"The default is My.","pos":[2731,2749]},{"content":"Defines the type of X.509 search to be executed.","pos":[2769,2817]},{"content":"Valid values include the following:","pos":[2818,2853]},{"content":"-   FindByThumbPrint","pos":[2866,2886]},{"content":"-   FindBySubjectName","pos":[2892,2913]},{"content":"-   FindBySubjectDistinguishedName","pos":[2919,2953]},{"content":"-   FindByIssuerName","pos":[2959,2979]},{"content":"-   FindByIssuerDistinguishedName","pos":[2985,3018]},{"content":"-   FindBySerialNumber","pos":[3024,3046]},{"content":"-   FindByTimeValid","pos":[3052,3071]},{"content":"-   FindByTimeNotYetValid","pos":[3077,3102]},{"content":"-   FindByTemplateName","pos":[3108,3130]},{"content":"-   FindByApplicationPolicy","pos":[3136,3163]},{"content":"-   FindByCertificatePolicy","pos":[3169,3196]},{"content":"-   FindByExtension","pos":[3202,3221]},{"content":"-   FindByKeyUsage","pos":[3227,3245]},{"content":"-   FindBySubjectKeyIdentifier","pos":[3251,3281]},{"content":"The type contained in the <ph id=\"ph1\">`findValue`</ph> attribute must satisfy the requirements of the specified X509FindType.","pos":[3294,3402],"source":"The type contained in the `findValue` attribute must satisfy the requirements of the specified X509FindType."},{"content":"The default value is FindBySubjectDistinguishedName.","pos":[3415,3467]},{"pos":[3478,3492],"content":"Child Elements","linkify":"Child Elements","nodes":[{"content":"Child Elements","pos":[0,14]}]},{"content":"None.","pos":[3496,3501]},{"pos":[3511,3526],"content":"Parent Elements","linkify":"Parent Elements","nodes":[{"content":"Parent Elements","pos":[0,15]}]},{"content":"Element","pos":[3533,3540]},{"content":"Description","pos":[3541,3552]},{"pos":[3593,3720],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>clientCertificate&gt;<ept id=\"p1\">](../../../../../docs/framework/configure-apps/file-schema/wcf/clientcertificate-of-servicecredentials.md)</ept>","source":"[\\<clientCertificate>](../../../../../docs/framework/configure-apps/file-schema/wcf/clientcertificate-of-servicecredentials.md)"},{"pos":[3731,3738],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`&lt;certificate&gt;`</ph> element is used when the service must have the client's certificate in advance to communicate securely with the client.","pos":[3742,3881],"source":"The `<certificate>` element is used when the service must have the client's certificate in advance to communicate securely with the client."},{"content":"This occurs when using the duplex communication pattern.","pos":[3882,3938]},{"content":"In the more typical request/response pattern, the client includes its certificate in the request, which the service uses to encrypt and sign its response back to the client.","pos":[3939,4112]},{"content":"In the duplex communication pattern, however, the service does not have a request from the client and therefore it needs the client's certificate in advance to secure the message to the client.","pos":[4113,4306]},{"content":"Therefore you must obtain the client's certificate in an out-of-band negotiation, and specify the certificate using this element.","pos":[4307,4436]},{"content":"For more information about duplex services, see <bpt id=\"p1\">[</bpt>How to: Create a Duplex Contract<ept id=\"p1\">](../../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)</ept>.","pos":[4437,4606],"source":" For more information about duplex services, see [How to: Create a Duplex Contract](../../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)."},{"pos":[4615,4622],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4626,4763],"content":"The following code specifies how to find an appropriate X.509 certificate and a custom validation type in the <ph id=\"ph1\">`&lt;authentication&gt;`</ph> element.","source":"The following code specifies how to find an appropriate X.509 certificate and a custom validation type in the `<authentication>` element."},{"pos":[5347,5355],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Security Behaviors<ept id=\"p1\">](../../../../../docs/framework/wcf/feature-details/security-behaviors-in-wcf.md)</ept><ph id=\"ph1\"> </ph>","pos":[5640,5741],"source":"[Security Behaviors](../../../../../docs/framework/wcf/feature-details/security-behaviors-in-wcf.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Create a Service that Employs a Custom Certificate Validator<ept id=\"p1\">](../../../../../docs/framework/wcf/extending/how-to-create-a-service-that-employs-a-custom-certificate-validator.md)</ept><ph id=\"ph1\"> </ph>","pos":[5745,5932],"source":"[How to: Create a Service that Employs a Custom Certificate Validator](../../../../../docs/framework/wcf/extending/how-to-create-a-service-that-employs-a-custom-certificate-validator.md) "},{"content":"<bpt id=\"p1\">[</bpt>Working with Certificates<ept id=\"p1\">](../../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept>","pos":[5936,6043],"source":"[Working with Certificates](../../../../../docs/framework/wcf/feature-details/working-with-certificates.md)"}]}