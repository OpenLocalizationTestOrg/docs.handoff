<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a32007febd90d631f11c7f1d417202cc17352871</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\preventing-replay-attacks-when-a-wcf-service-is-hosted-in-a-web-farm.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06f260550210637666a0926ccc9683215dd44ec8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca91cf2f1298e6b0a4b7268b44451f645cf74aab</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Preventing Replay Attacks When a WCF Service is Hosted in a Web Farm | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Preventing Replay Attacks When a WCF Service is Hosted in a Web Farm</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When using message security WCF prevents replay attacks by creating a NONCE out of the incoming message and checking the internal <ph id="ph1">`InMemoryNonceCache`</ph> to see if the generated NONCE is present.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If it is, the message is discarded as a replay.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When a WCF service is hosted in a web farm, since the <ph id="ph1">`InMemoryNonceCache`</ph> is not shared across the nodes in the web farm, the service is vulnerable to replay attacks.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To mitigate this scenario WCF 4.5 provides an extensibility point that allows you to implement your own shared NONCE cache by deriving a class from the abstract class <ph id="ph1">&lt;xref:System.ServiceModel.Security.NonceCache&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>NonceCache Implementation</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To implement your own shared NONCE cache, derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Security.NonceCache&gt;</ph> and override the <ph id="ph2">&lt;xref:System.ServiceModel.Security.NonceCache.CheckNonce%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Security.NonceCache.TryAddNonce%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Security.NonceCache.CheckNonce%2A&gt;</ph> will check to see if the specified NONCE exists in the cache.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Security.NonceCache.TryAddNonce%2A&gt;</ph> will attempt to add a NONCE to the cache.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Once the class is implemented, you hook it up by instantiating an instance and assigning it to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.LocalClientSecuritySettings.NonceCache%2A&gt;</ph> for client-side replay detection and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache%2A&gt;</ph> for server-side replay detection.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>There is no out of the box configuration support for this feature.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Message Security<ept id="p1">](../../../../docs/framework/wcf/feature-details/message-security-in-wcf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SymmetricSecurityBindingElement<ept id="p1">](../../../../docs/framework/wcf/diagnostics/wmi/symmetricsecuritybindingelement.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>