<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="including-or-importing-xml-schemas.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">320a8692d0c0f41ded7fe296d4b22cb7e659cd18</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\including-or-importing-xml-schemas.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c285523c8b674cbc9473e8af3e7b147349db39d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59f1b6bc26f14c51af62b0c3e87dba91a87eaff8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Including or Importing XML Schemas | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Including or Importing XML Schemas</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An XML schema may contain <ph id="ph1">`&lt;xs:import /&gt;`</ph>, <ph id="ph2">`&lt;xs:include /&gt;`</ph>, and <ph id="ph3">`&lt;xs:redefine /&gt;`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These schema elements refer to other XML schemas that can be used to supplement the structure of the schema that includes or imports them.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph> classes, map to these elements in the Schema Object Model (SOM) API.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Including or Importing an XML Schema</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following code example supplements the customer schema created in the <bpt id="p1">[</bpt>Building XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/building-xml-schemas.md)</ept> topic with the address schema.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Supplementing the customer schema with the address schema makes address types available in the customer schema.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The address schema can be incorporated using either <ph id="ph1">`&lt;xs:include /&gt;`</ph> or <ph id="ph2">`&lt;xs:import /&gt;`</ph> elements to use the components of the address schema as-is, or using an <ph id="ph3">`&lt;xs:redefine /&gt;`</ph> element to modify any of its components to suit the need of the customer schema.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Because the address schema has a <ph id="ph1">`targetNamespace`</ph> that is different from that of the customer schema, the <ph id="ph2">`&lt;xs:import /&gt;`</ph> element and therefore import semantics is used.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The code example includes the address schema in the following steps.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Adds the customer schema and the address schema to a new <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object and then compiles them.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Any schema validation warnings and errors encountered reading or compiling the schemas are handled by the <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> delegate.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Retrieves the compiled <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects for both the customer and address schemas from the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> by iterating over the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Because the schemas are compiled, Post-Schema-Compilation-Infoset (PSCI) properties are accessible.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph> object, sets the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaImport.Namespace%2A&gt;</ph> property of the import to the namespace of the address schema, sets the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaExternal.Schema%2A&gt;</ph> property of the import to the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object of the address schema, and adds the import to the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> property of the customer schema.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Reprocesses and compiles the modified <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object of the customer schema using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> methods of the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class and writes it to the console.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Finally, recursively writes all of the schemas imported into the customer schema to the console using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> property of the customer schema.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> property provides access to all the includes, imports, or redefines added to a schema.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following is the complete code example and the customer and address schemas written to the console.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information about the <ph id="ph1">`&lt;xs:import /&gt;`</ph>, <ph id="ph2">`&lt;xs:include /&gt;`</ph>, and <ph id="ph3">`&lt;xs:redefine /&gt;`</ph> elements and the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph> and <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph> classes, see the <bpt id="p1">[</bpt>W3C XML Schema<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=45242)</ept> and the <ph id="ph7">&lt;xref:System.Xml.Schema?displayProperty=fullName&gt;</ph> namespace class reference documentation.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Schema Object Model Overview<ept id="p1">](../../../../docs/standard/data/xml/xml-schema-object-model-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reading and Writing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/reading-and-writing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Building XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/building-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Traversing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/traversing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Editing XML Schemas<ept id="p1">](../../../../docs/standard/data/xml/editing-xml-schemas.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XmlSchemaSet for Schema Compilation<ept id="p1">](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>