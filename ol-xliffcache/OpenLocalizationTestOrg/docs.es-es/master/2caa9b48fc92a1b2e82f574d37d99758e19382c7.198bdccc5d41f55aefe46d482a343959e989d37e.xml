{"content":"---\ntitle: \"ISymUnmanagedWriter2::DefineLocalVariable2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedWriter2.DefineLocalVariable2\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedWriter2::DefineLocalVariable2\"\nhelpviewer_keywords: \n  - \"ISymUnmanagedWriter2::DefineLocalVariable2 method [.NET Framework debugging]\"\n  - \"DefineLocalVariable2 method [.NET Framework debugging]\"\nms.assetid: e774eefe-858c-4362-8d2d-28ebf2ba1a24\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ISymUnmanagedWriter2::DefineLocalVariable2 Method\nDefines a single variable in the current lexical scope. This method can be called multiple times for a variable of the same name that has multiple homes throughout a scope. In this case, however, the values of the `startOffset` and `endOffset` parameters must not overlap.  \n  \n## Syntax  \n  \n```  \nHRESULT DefineLocalVariable2(  \n    [in] const WCHAR  *name,  \n    [in] ULONG32      attributes,  \n    [in] mdSignature  sigToken,  \n    [in] ULONG32      addrKind,  \n    [in] ULONG32      addr1,  \n    [in] ULONG32      addr2,  \n    [in] ULONG32      addr3,  \n    [in] ULONG32      startOffset,  \n    [in] ULONG32      endOffset);  \n```  \n  \n## Parameters  \n `name`  \n [in] The local variable name.  \n  \n `attributes`  \n [in] The local variable attributes.  \n  \n `sigToken`  \n [in] The metadata token of the signature.  \n  \n `addrKind`  \n [in] The address type.  \n  \n `addr1`  \n [in] The first address for the parameter specification.  \n  \n `addr2`  \n [in] The second address for the parameter specification.  \n  \n `addr3`  \n [in] The third address for the parameter specification.  \n  \n `startOffset`  \n [in] The start offset for the variable. This parameter is optional. If it is 0, this parameter is ignored and the variable is defined throughout the entire scope. If it is a nonzero value, the variable falls within the offsets of the current scope.  \n  \n `endOffset`  \n [in] The end offset for the variable. This parameter is optional. If it is 0, this parameter is ignored and the variable is defined throughout the entire scope. If it is a nonzero value, the variable falls within the offsets of the current scope.  \n  \n## Return Value  \n S_OK if the method succeeds; otherwise, E_FAIL or some other error code.  \n  \n## Requirements  \n **Header:** CorSym.idl  \n  \n## See also\n\n- [ISymUnmanagedWriter2 Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter2-interface.md)\n- [DefineLocalVariable Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-definelocalvariable-method.md)\n","nodes":[{"pos":[4,543],"embed":true,"restype":"x-metadata","content":"title: \"ISymUnmanagedWriter2::DefineLocalVariable2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedWriter2.DefineLocalVariable2\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedWriter2::DefineLocalVariable2\"\nhelpviewer_keywords: \n  - \"ISymUnmanagedWriter2::DefineLocalVariable2 method [.NET Framework debugging]\"\n  - \"DefineLocalVariable2 method [.NET Framework debugging]\"\nms.assetid: e774eefe-858c-4362-8d2d-28ebf2ba1a24\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ISymUnmanagedWriter2::DefineLocalVariable2 Method","nodes":[{"pos":[0,49],"content":"ISymUnmanagedWriter2::DefineLocalVariable2 Method","nodes":[{"content":"ISymUnmanagedWriter2::DefineLocalVariable2 Method","pos":[0,49]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[550,599],"content":"ISymUnmanagedWriter2::DefineLocalVariable2 Method","linkify":"ISymUnmanagedWriter2::DefineLocalVariable2 Method","nodes":[{"content":"ISymUnmanagedWriter2::DefineLocalVariable2 Method","pos":[0,49]}]},{"content":"Defines a single variable in the current lexical scope.","pos":[600,655]},{"content":"This method can be called multiple times for a variable of the same name that has multiple homes throughout a scope.","pos":[656,772]},{"content":"In this case, however, the values of the <ph id=\"ph1\">`startOffset`</ph> and <ph id=\"ph2\">`endOffset`</ph> parameters must not overlap.","pos":[773,872],"source":" In this case, however, the values of the `startOffset` and `endOffset` parameters must not overlap."},{"pos":[881,887],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1244,1254],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The local variable name.","pos":[1268,1297]},{"content":"[in] The local variable attributes.","pos":[1320,1355]},{"content":"[in] The metadata token of the signature.","pos":[1376,1417]},{"content":"[in] The address type.","pos":[1438,1460]},{"content":"[in] The first address for the parameter specification.","pos":[1478,1533]},{"content":"[in] The second address for the parameter specification.","pos":[1551,1607]},{"content":"[in] The third address for the parameter specification.","pos":[1625,1680]},{"content":"[in] The start offset for the variable.","pos":[1704,1743]},{"content":"This parameter is optional.","pos":[1744,1771]},{"content":"If it is 0, this parameter is ignored and the variable is defined throughout the entire scope.","pos":[1772,1866]},{"content":"If it is a nonzero value, the variable falls within the offsets of the current scope.","pos":[1867,1952]},{"content":"[in] The end offset for the variable.","pos":[1974,2011]},{"content":"This parameter is optional.","pos":[2012,2039]},{"content":"If it is 0, this parameter is ignored and the variable is defined throughout the entire scope.","pos":[2040,2134]},{"content":"If it is a nonzero value, the variable falls within the offsets of the current scope.","pos":[2135,2220]},{"pos":[2229,2241],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the method succeeds; otherwise, E_FAIL or some other error code.","pos":[2245,2317]},{"pos":[2326,2338],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2342,2364],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl","source":"**Header:** CorSym.idl"},{"pos":[2373,2381],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2385,2505],"content":"<bpt id=\"p1\">[</bpt>ISymUnmanagedWriter2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter2-interface.md)</ept>","source":"[ISymUnmanagedWriter2 Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter2-interface.md)"},{"pos":[2508,2640],"content":"<bpt id=\"p1\">[</bpt>DefineLocalVariable Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-definelocalvariable-method.md)</ept>","source":"[DefineLocalVariable Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-definelocalvariable-method.md)"}]}