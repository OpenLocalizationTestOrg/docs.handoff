{"content":"---\ntitle: \"ConfigurationCodeGenerator | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 3913aae8-165f-4014-9262-7fe426f90cb2\ncaps.latest.revision: 11\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# ConfigurationCodeGenerator\nThe ConfigurationCodeGenerator is a tool that you can use to expose your custom channel implementations to the configuration system. This allows users of your custom channel to configure your channel by using a .config file just as they would configure a system-provided binding such as `NetTcpBinding` or a custom binding using the `TcpTransportBindingElement`.  \n  \n When you write a custom channel and expose it to the programming model by using a new `BindingElement` or `Binding`, you must create a set of classes to make the `BindingElement` or `Binding` configurable using a .config file. You can use the ConfigurationCodeGenerator tool to generate these classes and enhance your customer's experience.  \n  \n### To build the tool  \n  \n1.  To build the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md).  \n  \n2.  Building the solution generates one file: ConfigurationCodeGenerator.exe. The file SampleRun.cmd has a sample command line that shows how to use this tool to generate the classes for the [Transport: UDP](../../../../docs/framework/wcf/samples/transport-udp.md) sample.  \n  \n### To run the tool  \n  \n1.  At the command prompt type the following if you have both a custom `BindingElement` type and a custom `Binding` type:  \n  \n    ```  \n    ConfigurationCodeGenerator.exe /be:YourCustomBindingElementTypeName /sb:YourCustomStdBindingTypeName /dll:TheAssemblyWhereTheseTypesAreDefined  \n  \n    ```  \n  \n     Or type the following if you have only a custom `BindingElement` type:  \n  \n    ```  \n    ConfigurationCodeGenerator.exe /be:YourCustomBindingElementTypeName /dll: TheAssemblyWhereThisTypeIsDefined  \n  \n    ```  \n  \n     Or type the following if you have only a custom `Binding` type:  \n  \n    ```  \n    ConfigurationCodeGenerator.exe /sb:YourCustomStdBindingTypeName /dll:TheAssemblyWhereThisTypeIsDefined  \n  \n    ```  \n  \n     The command generates three .cs files for the `BindingElement` (if you specified the /be: option), five .cs files for the standard `Binding` (if you specified the /sb: option), and a .xml file.  \n  \n    1.  If you used the /be option, one of the .cs files implements the `BindingElementExtensionSection` for your binding element. This code exposes your `BindingElement` to the configuration system, so that other custom bindings can use your binding element. The other files have classes that represent defaults and constants. The files have `//TODO` comments to remind you to update the default values.  \n  \n    2.  If you specified the /sb option, two of the .cs files implement a `StandardBindingElement` and a `StandardBindingCollectionElement` respectively, which exposes your standard binding to the configuration system. The other files have classes that represent defaults and constants. The files have `//TODO` comments to remind you to update the default values.  \n  \n         If you specified the /sb: option the CodeToAddTo\\<*YourStdBinding*>.cs has code that you must manually add into the class that implements your standard binding.  \n  \n     The SampleConfig.xml file contains the configuration code that you must add to the configuration file that registers the handlers defined in the previous step 1 or 2.  \n  \n## See Also","nodes":[{"pos":[12,55],"content":"ConfigurationCodeGenerator | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ConfigurationCodeGenerator | Microsoft Docs","pos":[0,43]}]},{"pos":[354,380],"content":"ConfigurationCodeGenerator","linkify":"ConfigurationCodeGenerator","nodes":[{"content":"ConfigurationCodeGenerator","pos":[0,26]}]},{"content":"The ConfigurationCodeGenerator is a tool that you can use to expose your custom channel implementations to the configuration system.","pos":[381,513]},{"content":"This allows users of your custom channel to configure your channel by using a .config file just as they would configure a system-provided binding such as <ph id=\"ph1\">`NetTcpBinding`</ph> or a custom binding using the <ph id=\"ph2\">`TcpTransportBindingElement`</ph>.","pos":[514,743],"source":" This allows users of your custom channel to configure your channel by using a .config file just as they would configure a system-provided binding such as `NetTcpBinding` or a custom binding using the `TcpTransportBindingElement`."},{"content":"When you write a custom channel and expose it to the programming model by using a new <ph id=\"ph1\">`BindingElement`</ph> or <ph id=\"ph2\">`Binding`</ph>, you must create a set of classes to make the <ph id=\"ph3\">`BindingElement`</ph> or <ph id=\"ph4\">`Binding`</ph> configurable using a .config file.","pos":[750,976],"source":"When you write a custom channel and expose it to the programming model by using a new `BindingElement` or `Binding`, you must create a set of classes to make the `BindingElement` or `Binding` configurable using a .config file."},{"content":"You can use the ConfigurationCodeGenerator tool to generate these classes and enhance your customer's experience.","pos":[977,1090]},{"pos":[1100,1117],"content":"To build the tool","linkify":"To build the tool","nodes":[{"content":"To build the tool","pos":[0,17]}]},{"pos":[1127,1297],"content":"To build the solution, follow the instructions in <bpt id=\"p1\">[</bpt>Building the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.","source":"To build the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md)."},{"content":"Building the solution generates one file: ConfigurationCodeGenerator.exe.","pos":[1307,1380]},{"content":"The file SampleRun.cmd has a sample command line that shows how to use this tool to generate the classes for the <bpt id=\"p1\">[</bpt>Transport: UDP<ept id=\"p1\">](../../../../docs/framework/wcf/samples/transport-udp.md)</ept> sample.","pos":[1381,1575],"source":" The file SampleRun.cmd has a sample command line that shows how to use this tool to generate the classes for the [Transport: UDP](../../../../docs/framework/wcf/samples/transport-udp.md) sample."},{"pos":[1585,1600],"content":"To run the tool","linkify":"To run the tool","nodes":[{"content":"To run the tool","pos":[0,15]}]},{"pos":[1610,1727],"content":"At the command prompt type the following if you have both a custom <ph id=\"ph1\">`BindingElement`</ph> type and a custom <ph id=\"ph2\">`Binding`</ph> type:","source":"At the command prompt type the following if you have both a custom `BindingElement` type and a custom `Binding` type:"},{"pos":[1913,1983],"content":"Or type the following if you have only a custom <ph id=\"ph1\">`BindingElement`</ph> type:","source":"Or type the following if you have only a custom `BindingElement` type:"},{"pos":[2134,2197],"content":"Or type the following if you have only a custom <ph id=\"ph1\">`Binding`</ph> type:","source":"Or type the following if you have only a custom `Binding` type:"},{"pos":[2343,2536],"content":"The command generates three .cs files for the <ph id=\"ph1\">`BindingElement`</ph> (if you specified the /be: option), five .cs files for the standard <ph id=\"ph2\">`Binding`</ph> (if you specified the /sb: option), and a .xml file.","source":"The command generates three .cs files for the `BindingElement` (if you specified the /be: option), five .cs files for the standard `Binding` (if you specified the /sb: option), and a .xml file."},{"content":"If you used the /be option, one of the .cs files implements the <ph id=\"ph1\">`BindingElementExtensionSection`</ph> for your binding element.","pos":[2550,2672],"source":"If you used the /be option, one of the .cs files implements the `BindingElementExtensionSection` for your binding element."},{"content":"This code exposes your <ph id=\"ph1\">`BindingElement`</ph> to the configuration system, so that other custom bindings can use your binding element.","pos":[2673,2801],"source":" This code exposes your `BindingElement` to the configuration system, so that other custom bindings can use your binding element."},{"content":"The other files have classes that represent defaults and constants.","pos":[2802,2869]},{"content":"The files have <ph id=\"ph1\">`//TODO`</ph> comments to remind you to update the default values.","pos":[2870,2946],"source":" The files have `//TODO` comments to remind you to update the default values."},{"content":"If you specified the /sb option, two of the .cs files implement a <ph id=\"ph1\">`StandardBindingElement`</ph> and a <ph id=\"ph2\">`StandardBindingCollectionElement`</ph> respectively, which exposes your standard binding to the configuration system.","pos":[2960,3170],"source":"If you specified the /sb option, two of the .cs files implement a `StandardBindingElement` and a `StandardBindingCollectionElement` respectively, which exposes your standard binding to the configuration system."},{"content":"The other files have classes that represent defaults and constants.","pos":[3171,3238]},{"content":"The files have <ph id=\"ph1\">`//TODO`</ph> comments to remind you to update the default values.","pos":[3239,3315],"source":" The files have `//TODO` comments to remind you to update the default values."},{"pos":[3330,3490],"content":"If you specified the /sb: option the CodeToAddTo<ph id=\"ph1\">\\&lt;</ph><bpt id=\"p1\">*</bpt>YourStdBinding<ept id=\"p1\">*</ept>&gt;.cs has code that you must manually add into the class that implements your standard binding.","source":"If you specified the /sb: option the CodeToAddTo\\<*YourStdBinding*>.cs has code that you must manually add into the class that implements your standard binding."},{"content":"The SampleConfig.xml file contains the configuration code that you must add to the configuration file that registers the handlers defined in the previous step 1 or 2.","pos":[3501,3667]},{"pos":[3676,3684],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}