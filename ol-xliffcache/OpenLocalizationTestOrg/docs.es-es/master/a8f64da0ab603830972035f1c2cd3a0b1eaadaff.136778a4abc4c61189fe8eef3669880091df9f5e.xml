{"content":"---\ntitle: \"when contextual keyword - C# Reference\"\nms.custom: seodec18\n\nms.date: 03/07/2017\nf1_keywords: \n  - \"when_CSharpKeyword\"\n  - \"when\"\nhelpviewer_keywords: \n  - \"when keyword [C#]\"\nms.assetid: dd543335-ae37-48ac-9560-bd5f047b9aea\n---\n# when (C# Reference)\n\nYou can use the `when` contextual keyword to specify a filter condition in two contexts:\n\n- In the `catch` statement of a [try/catch](try-catch.md) or [try/catch/finally](try-catch-finally.md) block.\n- In the `case` label of a [switch](switch.md) statement.\n\n## `when` in a `catch` statement\n\nStarting with C# 6, `when` can be used in a `catch` statement to specify a condition that must be true for the handler for a specific exception to execute. Its syntax is:\n\n```csharp\ncatch (ExceptionType [e]) when (expr)\n```\n\nwhere *expr* is an expression that evaluates to a Boolean value. If it returns `true`, the exception handler executes; if `false`, it does not.\n\nThe following example uses the `when` keyword to conditionally execute handlers for an <xref:System.Net.Http.HttpRequestException> depending on the text of the exception message.\n\n[!code-csharp[when-with-catch](~/samples/snippets/csharp/language-reference/keywords/when/catch.cs)]\n\n## `when` in a `switch` statement\n\nStarting with C# 7.0, `case` labels no longer need be mutually exclusive, and the order in which `case` labels appear in a `switch` statement can determine which switch block executes. The `when` keyword can be used to specify a filter condition that causes its associated case label to be true only if the filter condition is also true. Its syntax is:\n\n```csharp\ncase (expr) when (when-condition):\n```\n\nwhere *expr* is a constant pattern or type pattern that is compared to the match expression, and *when-condition* is any Boolean expression.\n\nThe following example uses the `when` keyword to test for `Shape` objects that have an area of zero, as well as to test for a variety of `Shape` objects that have an area greater than zero.\n\n[!code-csharp[when-with-case#1](~/samples/snippets/csharp/language-reference/keywords/when/when.cs#1)]\n\n## See also\n\n- [switch statement](switch.md)\n- [try/catch statement](try-catch.md)\n- [try/catch/finally statement](try-catch-finally.md)","nodes":[{"pos":[4,237],"embed":true,"restype":"x-metadata","content":"title: \"when contextual keyword - C# Reference\"\nms.custom: seodec18\n\nms.date: 03/07/2017\nf1_keywords: \n  - \"when_CSharpKeyword\"\n  - \"when\"\nhelpviewer_keywords: \n  - \"when keyword [C#]\"\nms.assetid: dd543335-ae37-48ac-9560-bd5f047b9aea","nodes":[{"content":"when contextual keyword - C# Reference","nodes":[{"pos":[0,38],"content":"when contextual keyword - C# Reference","nodes":[{"content":"when contextual keyword - C# Reference","pos":[0,38]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[244,263],"content":"when (C# Reference)","linkify":"when (C# Reference)","nodes":[{"content":"when (C# Reference)","pos":[0,19]}]},{"pos":[265,353],"content":"You can use the <ph id=\"ph1\">`when`</ph> contextual keyword to specify a filter condition in two contexts:","source":"You can use the `when` contextual keyword to specify a filter condition in two contexts:"},{"pos":[357,464],"content":"In the <ph id=\"ph1\">`catch`</ph> statement of a <bpt id=\"p1\">[</bpt>try/catch<ept id=\"p1\">](try-catch.md)</ept> or <bpt id=\"p2\">[</bpt>try/catch/finally<ept id=\"p2\">](try-catch-finally.md)</ept> block.","source":"In the `catch` statement of a [try/catch](try-catch.md) or [try/catch/finally](try-catch-finally.md) block."},{"pos":[467,522],"content":"In the <ph id=\"ph1\">`case`</ph> label of a <bpt id=\"p1\">[</bpt>switch<ept id=\"p1\">](switch.md)</ept> statement.","source":"In the `case` label of a [switch](switch.md) statement."},{"pos":[527,556],"content":"<ph id=\"ph1\">`when`</ph> in a <ph id=\"ph2\">`catch`</ph> statement","linkify":"`when` in a `catch` statement","source":"`when` in a `catch` statement"},{"content":"Starting with C# 6, <ph id=\"ph1\">`when`</ph> can be used in a <ph id=\"ph2\">`catch`</ph> statement to specify a condition that must be true for the handler for a specific exception to execute.","pos":[558,713],"source":"Starting with C# 6, `when` can be used in a `catch` statement to specify a condition that must be true for the handler for a specific exception to execute."},{"content":"Its syntax is:","pos":[714,728]},{"content":"where <bpt id=\"p1\">*</bpt>expr<ept id=\"p1\">*</ept> is an expression that evaluates to a Boolean value.","pos":[783,847],"source":"where *expr* is an expression that evaluates to a Boolean value."},{"content":"If it returns <ph id=\"ph1\">`true`</ph>, the exception handler executes; if <ph id=\"ph2\">`false`</ph>, it does not.","pos":[848,926],"source":" If it returns `true`, the exception handler executes; if `false`, it does not."},{"pos":[928,1106],"content":"The following example uses the <ph id=\"ph1\">`when`</ph> keyword to conditionally execute handlers for an <ph id=\"ph2\">&lt;xref:System.Net.Http.HttpRequestException&gt;</ph> depending on the text of the exception message.","source":"The following example uses the `when` keyword to conditionally execute handlers for an <xref:System.Net.Http.HttpRequestException> depending on the text of the exception message."},{"pos":[1213,1243],"content":"<ph id=\"ph1\">`when`</ph> in a <ph id=\"ph2\">`switch`</ph> statement","linkify":"`when` in a `switch` statement","source":"`when` in a `switch` statement"},{"content":"Starting with C# 7.0, <ph id=\"ph1\">`case`</ph> labels no longer need be mutually exclusive, and the order in which <ph id=\"ph2\">`case`</ph> labels appear in a <ph id=\"ph3\">`switch`</ph> statement can determine which switch block executes.","pos":[1245,1429],"source":"Starting with C# 7.0, `case` labels no longer need be mutually exclusive, and the order in which `case` labels appear in a `switch` statement can determine which switch block executes."},{"content":"The <ph id=\"ph1\">`when`</ph> keyword can be used to specify a filter condition that causes its associated case label to be true only if the filter condition is also true.","pos":[1430,1582],"source":" The `when` keyword can be used to specify a filter condition that causes its associated case label to be true only if the filter condition is also true."},{"content":"Its syntax is:","pos":[1583,1597]},{"pos":[1649,1789],"content":"where <bpt id=\"p1\">*</bpt>expr<ept id=\"p1\">*</ept> is a constant pattern or type pattern that is compared to the match expression, and <bpt id=\"p2\">*</bpt>when-condition<ept id=\"p2\">*</ept> is any Boolean expression.","source":"where *expr* is a constant pattern or type pattern that is compared to the match expression, and *when-condition* is any Boolean expression."},{"pos":[1791,1980],"content":"The following example uses the <ph id=\"ph1\">`when`</ph> keyword to test for <ph id=\"ph2\">`Shape`</ph> objects that have an area of zero, as well as to test for a variety of <ph id=\"ph3\">`Shape`</ph> objects that have an area greater than zero.","source":"The following example uses the `when` keyword to test for `Shape` objects that have an area of zero, as well as to test for a variety of `Shape` objects that have an area greater than zero."},{"pos":[2089,2097],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2101,2130],"content":"<bpt id=\"p1\">[</bpt>switch statement<ept id=\"p1\">](switch.md)</ept>","source":"[switch statement](switch.md)"},{"pos":[2133,2168],"content":"<bpt id=\"p1\">[</bpt>try/catch statement<ept id=\"p1\">](try-catch.md)</ept>","source":"[try/catch statement](try-catch.md)"},{"pos":[2171,2222],"content":"<bpt id=\"p1\">[</bpt>try/catch/finally statement<ept id=\"p1\">](try-catch-finally.md)</ept>","source":"[try/catch/finally statement](try-catch-finally.md)"}]}