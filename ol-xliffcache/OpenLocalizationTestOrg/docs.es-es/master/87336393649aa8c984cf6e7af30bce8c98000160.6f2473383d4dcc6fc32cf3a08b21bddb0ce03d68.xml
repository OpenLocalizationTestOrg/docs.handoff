{"content":"---\ntitle: \"Recommended Tags for Documentation Comments (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"XML [C#], tags\"\n  - \"XML documentation [C#], tags\"\nms.assetid: 6e98f7a9-38f4-4d74-b644-1ff1b23320fd\ncaps.latest.revision: 20\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Recommended Tags for Documentation Comments (C# Programming Guide)\nThe C# compiler processes documentation comments in your code and formats them as XML in a file whose name you specify in the **/doc** command-line option. To create the final documentation based on the compiler-generated file, you can create a custom tool, or use a tool such as [Sandcastle](http://shfb.codeplex.com/).  \n  \n Tags are processed on code constructs such as types and type members.  \n  \n> [!NOTE]\n>  Documentation comments cannot be applied to a namespace.  \n  \n The compiler will process any tag that is valid XML. The following tags provide generally used functionality in user documentation.  \n  \n## Tags  \n  \n||||  \n|---|---|---|  \n|[\\<c>](../../../csharp/programming-guide/xmldoc/code-inline.md)|[\\<para>](../../../csharp/programming-guide/xmldoc/para.md)|[\\<see>](../../../csharp/programming-guide/xmldoc/see.md)*|  \n|[\\<code>](../../../csharp/programming-guide/xmldoc/code.md)|[\\<param>](../../../csharp/programming-guide/xmldoc/param.md)*|[\\<seealso>](../../../csharp/programming-guide/xmldoc/seealso.md)*|  \n|[\\<example>](../../../csharp/programming-guide/xmldoc/example.md)|[\\<paramref>](../../../csharp/programming-guide/xmldoc/paramref.md)|[\\<summary>](../../../csharp/programming-guide/xmldoc/summary.md)|  \n|[\\<exception>](../../../csharp/programming-guide/xmldoc/exception.md)*|[\\<permission>](../../../csharp/programming-guide/xmldoc/permission.md)*|[\\<typeparam>](../../../csharp/programming-guide/xmldoc/typeparam.md)*|  \n|[\\<include>](../../../csharp/programming-guide/xmldoc/include.md)*|[\\<remarks>](../../../csharp/programming-guide/xmldoc/remarks.md)|[\\<typeparamref>](../../../csharp/programming-guide/xmldoc/typeparamref.md)|  \n|[\\<list>](../../../csharp/programming-guide/xmldoc/list.md)|[\\<returns>](../../../csharp/programming-guide/xmldoc/returns.md)|[\\<value>](../../../csharp/programming-guide/xmldoc/value.md)|  \n  \n (* denotes that the compiler verifies syntax.)  \n  \n If you want angle brackets to appear in the text of a documentation comment, use `<` and `>`, as shown in the following example.  \n  \n```xml  \n/// <summary cref=\"C < T >\">  \n/// </summary>  \n```  \n  \n## See Also  \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [/doc (C# Compiler Options)](../../../csharp/language-reference/compiler-options/doc-compiler-option.md)   \n [XML Documentation Comments](../../../csharp/programming-guide/xmldoc/xml-documentation-comments.md)","nodes":[{"pos":[12,95],"content":"Recommended Tags for Documentation Comments (C# Programming Guide) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Recommended Tags for Documentation Comments (C# Programming Guide) | Microsoft Docs","pos":[0,83]}]},{"pos":[627,693],"content":"Recommended Tags for Documentation Comments (C# Programming Guide)","linkify":"Recommended Tags for Documentation Comments (C# Programming Guide)","nodes":[{"content":"Recommended Tags for Documentation Comments (C# Programming Guide)","pos":[0,66]}]},{"content":"The C# compiler processes documentation comments in your code and formats them as XML in a file whose name you specify in the <bpt id=\"p1\">**</bpt>/doc<ept id=\"p1\">**</ept> command-line option.","pos":[694,849],"source":"The C# compiler processes documentation comments in your code and formats them as XML in a file whose name you specify in the **/doc** command-line option."},{"content":"To create the final documentation based on the compiler-generated file, you can create a custom tool, or use a tool such as <bpt id=\"p1\">[</bpt>Sandcastle<ept id=\"p1\">](http://shfb.codeplex.com/)</ept>.","pos":[850,1014],"source":" To create the final documentation based on the compiler-generated file, you can create a custom tool, or use a tool such as [Sandcastle](http://shfb.codeplex.com/)."},{"content":"Tags are processed on code constructs such as types and type members.","pos":[1021,1090]},{"pos":[1098,1165],"content":"[!NOTE]\n Documentation comments cannot be applied to a namespace.","leadings":["","> "],"nodes":[{"content":"Documentation comments cannot be applied to a namespace.","pos":[9,65]}]},{"content":"The compiler will process any tag that is valid XML.","pos":[1172,1224]},{"content":"The following tags provide generally used functionality in user documentation.","pos":[1225,1303]},{"pos":[1312,1316],"content":"Tags","linkify":"Tags","nodes":[{"content":"Tags","pos":[0,4]}]},{"pos":[1346,1409],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>c&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/code-inline.md)</ept>","source":"[\\<c>](../../../csharp/programming-guide/xmldoc/code-inline.md)"},{"pos":[1410,1469],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>para&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/para.md)</ept>","source":"[\\<para>](../../../csharp/programming-guide/xmldoc/para.md)"},{"pos":[1470,1528],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>see&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/see.md)</ept><ph id=\"ph2\">*</ph>","source":"[\\<see>](../../../csharp/programming-guide/xmldoc/see.md)*"},{"pos":[1533,1592],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>code&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/code.md)</ept>","source":"[\\<code>](../../../csharp/programming-guide/xmldoc/code.md)"},{"pos":[1593,1655],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>param&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/param.md)</ept><ph id=\"ph2\">*</ph>","source":"[\\<param>](../../../csharp/programming-guide/xmldoc/param.md)*"},{"pos":[1656,1722],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>seealso&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/seealso.md)</ept><ph id=\"ph2\">*</ph>","source":"[\\<seealso>](../../../csharp/programming-guide/xmldoc/seealso.md)*"},{"pos":[1727,1792],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>example&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/example.md)</ept>","source":"[\\<example>](../../../csharp/programming-guide/xmldoc/example.md)"},{"pos":[1793,1860],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>paramref&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/paramref.md)</ept>","source":"[\\<paramref>](../../../csharp/programming-guide/xmldoc/paramref.md)"},{"pos":[1861,1926],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>summary&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/summary.md)</ept>","source":"[\\<summary>](../../../csharp/programming-guide/xmldoc/summary.md)"},{"pos":[1931,2001],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>exception&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/exception.md)</ept><ph id=\"ph2\">*</ph>","source":"[\\<exception>](../../../csharp/programming-guide/xmldoc/exception.md)*"},{"pos":[2002,2074],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>permission&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/permission.md)</ept><ph id=\"ph2\">*</ph>","source":"[\\<permission>](../../../csharp/programming-guide/xmldoc/permission.md)*"},{"pos":[2075,2145],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>typeparam&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/typeparam.md)</ept><ph id=\"ph2\">*</ph>","source":"[\\<typeparam>](../../../csharp/programming-guide/xmldoc/typeparam.md)*"},{"pos":[2150,2216],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>include&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/include.md)</ept><ph id=\"ph2\">*</ph>","source":"[\\<include>](../../../csharp/programming-guide/xmldoc/include.md)*"},{"pos":[2217,2282],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>remarks&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/remarks.md)</ept>","source":"[\\<remarks>](../../../csharp/programming-guide/xmldoc/remarks.md)"},{"pos":[2283,2358],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>typeparamref&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/typeparamref.md)</ept>","source":"[\\<typeparamref>](../../../csharp/programming-guide/xmldoc/typeparamref.md)"},{"pos":[2363,2422],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>list&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/list.md)</ept>","source":"[\\<list>](../../../csharp/programming-guide/xmldoc/list.md)"},{"pos":[2423,2488],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>returns&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/returns.md)</ept>","source":"[\\<returns>](../../../csharp/programming-guide/xmldoc/returns.md)"},{"pos":[2489,2550],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>value&gt;<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/value.md)</ept>","source":"[\\<value>](../../../csharp/programming-guide/xmldoc/value.md)"},{"content":"(* denotes that the compiler verifies syntax.)","pos":[2558,2604]},{"pos":[2611,2739],"content":"If you want angle brackets to appear in the text of a documentation comment, use <ph id=\"ph1\">`&lt;`</ph> and <ph id=\"ph2\">`&gt;`</ph>, as shown in the following example.","source":"If you want angle brackets to appear in the text of a documentation comment, use `<` and `>`, as shown in the following example."},{"pos":[2814,2822],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2826,2893],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>/doc (C# Compiler Options)<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/doc-compiler-option.md)</ept><ph id=\"ph1\"> </ph>","pos":[2896,3002],"source":" [/doc (C# Compiler Options)](../../../csharp/language-reference/compiler-options/doc-compiler-option.md) "},{"content":"<bpt id=\"p1\"> [</bpt>XML Documentation Comments<ept id=\"p1\">](../../../csharp/programming-guide/xmldoc/xml-documentation-comments.md)</ept>","pos":[3005,3106],"source":" [XML Documentation Comments](../../../csharp/programming-guide/xmldoc/xml-documentation-comments.md)"}]}