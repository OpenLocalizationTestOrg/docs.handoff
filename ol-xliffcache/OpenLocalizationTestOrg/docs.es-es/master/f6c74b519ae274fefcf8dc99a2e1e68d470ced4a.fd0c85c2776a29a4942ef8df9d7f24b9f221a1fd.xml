{"content":"---\ntitle: \"Using a custom activity | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 8f356419-681a-4175-ae93-878eee970249\ncaps.latest.revision: 2\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Using a custom activity\nActivities that derive from <xref:System.Activities.Activity> or its subclasses can be composed into larger workflows, or created directly in code. This topic describes how to use custom activities in workflows created either in code or in the designer.  \n  \n> [!NOTE]\n>  Custom activities can be used in the same project in which they are defined, as long as both the custom activity and the activity that uses it are compiled (i.e. loaded by an instantiating type generated by the build process) If the referencing activity is loaded dynamically (e.g. using ActivityXAMLServices), then the referenced assembly should be placed in a different project, or the designer-generated XAML needs to be hand-edited to enable this.  \n  \n#### Using a custom activity to a workflow project  \n  \n1.  Add a reference from the host project to the activity library project containing the custom activity.  \n  \n2.  Build the solution.  \n  \n3.  To use the custom activity in the designer, locate the custom activity in the toolbox, and drag the activity onto the designer surface.  \n  \n4.  To use the custom activity in code, add a Using statement that refers to the custom activity project, and pass a new instance of the activity to <xref:System.Activities.WorkflowInvoker.Invoke%2A>.","nodes":[{"pos":[12,52],"content":"Using a custom activity | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using a custom activity | Microsoft Docs","pos":[0,40]}]},{"pos":[317,340],"content":"Using a custom activity","linkify":"Using a custom activity","nodes":[{"content":"Using a custom activity","pos":[0,23]}]},{"content":"Activities that derive from <ph id=\"ph1\">&lt;xref:System.Activities.Activity&gt;</ph> or its subclasses can be composed into larger workflows, or created directly in code.","pos":[341,488],"source":"Activities that derive from <xref:System.Activities.Activity> or its subclasses can be composed into larger workflows, or created directly in code."},{"content":"This topic describes how to use custom activities in workflows created either in code or in the designer.","pos":[489,594]},{"pos":[602,1064],"content":"[!NOTE]\n Custom activities can be used in the same project in which they are defined, as long as both the custom activity and the activity that uses it are compiled (i.e. loaded by an instantiating type generated by the build process) If the referencing activity is loaded dynamically (e.g. using ActivityXAMLServices), then the referenced assembly should be placed in a different project, or the designer-generated XAML needs to be hand-edited to enable this.","leadings":["","> "],"nodes":[{"content":"Custom activities can be used in the same project in which they are defined, as long as both the custom activity and the activity that uses it are compiled (i.e. loaded by an instantiating type generated by the build process) If the referencing activity is loaded dynamically (e.g. using ActivityXAMLServices), then the referenced assembly should be placed in a different project, or the designer-generated XAML needs to be hand-edited to enable this.","pos":[9,460]}]},{"pos":[1075,1120],"content":"Using a custom activity to a workflow project","linkify":"Using a custom activity to a workflow project","nodes":[{"content":"Using a custom activity to a workflow project","pos":[0,45]}]},{"content":"Add a reference from the host project to the activity library project containing the custom activity.","pos":[1130,1231]},{"content":"Build the solution.","pos":[1241,1260]},{"content":"To use the custom activity in the designer, locate the custom activity in the toolbox, and drag the activity onto the designer surface.","pos":[1270,1405]},{"content":"To use the custom activity in code, add a Using statement that refers to the custom activity project, and pass a new instance of the activity to <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph>.","pos":[1415,1611],"source":"To use the custom activity in code, add a Using statement that refers to the custom activity project, and pass a new instance of the activity to <xref:System.Activities.WorkflowInvoker.Invoke%2A>."}]}