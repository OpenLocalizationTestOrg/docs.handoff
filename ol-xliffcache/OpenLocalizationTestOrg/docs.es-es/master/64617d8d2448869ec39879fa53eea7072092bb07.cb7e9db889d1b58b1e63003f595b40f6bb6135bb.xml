{"content":"---\ntitle: \"ICLRTaskManager::CreateTask Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICLRTaskManager.CreateTask\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICLRTaskManager::CreateTask\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICLRTaskManager::CreateTask method [.NET Framework hosting]\"\n  - \"CreateTask method, ICLRTaskManager interface [.NET Framework hosting]\"\nms.assetid: eea570d9-2e53-4320-9ea0-eb777bf9dcf3\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 12\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICLRTaskManager::CreateTask Method\nRequests explicitly that the common language runtime (CLR) create a new task.  \n  \n## Syntax  \n  \n```  \nHRESULT CreateTask (  \n    [out] ICLRTask **pTask  \n);  \n```  \n  \n#### Parameters  \n `pTask`  \n [out] A pointer to the address of a newly created [ICLRTask](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md), or null, if the task could not be created.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|The method returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The CLR has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n|E_OUTOFMEMORY|Not enough memory is available to allocate the requested resource.|  \n  \n## Remarks  \n The CLR creates a new task automatically upon initialization, when user code creates a thread by using types in the <xref:System.Threading> namespace, or when the size of the thread pool is increased. It also creates tasks when unmanaged code makes a call to a managed function.  \n  \n `CreateTask` allows the host to make an explicit request that the CLR create a new task. For example, the host can invoke this method to preinitialize data structures.  \n  \n> [!IMPORTANT]\n>  The new task is returned in a suspended state and remains suspended until the host explicitly calls [IHostTask::Start](../../../../docs/framework/unmanaged-api/hosting/ihosttask-start-method.md).  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [ICLRTask Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)   \n [ICLRTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md)   \n [IHostTask Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)   \n [IHostTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)","nodes":[{"pos":[12,63],"content":"ICLRTaskManager::CreateTask Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICLRTaskManager::CreateTask Method | Microsoft Docs","pos":[0,51]}]},{"pos":[727,761],"content":"ICLRTaskManager::CreateTask Method","linkify":"ICLRTaskManager::CreateTask Method","nodes":[{"content":"ICLRTaskManager::CreateTask Method","pos":[0,34]}]},{"content":"Requests explicitly that the common language runtime (CLR) create a new task.","pos":[762,839]},{"pos":[848,854],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[937,947],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] A pointer to the address of a newly created <bpt id=\"p1\">[</bpt>ICLRTask<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)</ept>, or null, if the task could not be created.","pos":[962,1138],"source":" [out] A pointer to the address of a newly created [ICLRTask](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md), or null, if the task could not be created."},{"pos":[1147,1159],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1166,1173]},{"content":"Description","pos":[1174,1185]},{"content":"S_OK","pos":[1226,1230]},{"content":"The method returned successfully.","pos":[1231,1264]},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1269,1291]},{"content":"The CLR has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1292,1430]},{"content":"HOST_E_TIMEOUT","pos":[1435,1449]},{"content":"The call timed out.","pos":[1450,1469]},{"content":"HOST_E_NOT_OWNER","pos":[1474,1490]},{"content":"The caller does not own the lock.","pos":[1491,1524]},{"content":"HOST_E_ABANDONED","pos":[1529,1545]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1546,1618]},{"content":"E_FAIL","pos":[1623,1629]},{"content":"An unknown catastrophic failure occurred.","pos":[1630,1671]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1672,1749]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[1750,1816]},{"content":"E_OUTOFMEMORY","pos":[1821,1834]},{"content":"Not enough memory is available to allocate the requested resource.","pos":[1835,1901]},{"pos":[1911,1918],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The CLR creates a new task automatically upon initialization, when user code creates a thread by using types in the <ph id=\"ph1\">&lt;xref:System.Threading&gt;</ph> namespace, or when the size of the thread pool is increased.","pos":[1922,2122],"source":"The CLR creates a new task automatically upon initialization, when user code creates a thread by using types in the <xref:System.Threading> namespace, or when the size of the thread pool is increased."},{"content":"It also creates tasks when unmanaged code makes a call to a managed function.","pos":[2123,2200]},{"content":"<ph id=\"ph1\">`CreateTask`</ph> allows the host to make an explicit request that the CLR create a new task.","pos":[2207,2295],"source":"`CreateTask` allows the host to make an explicit request that the CLR create a new task."},{"content":"For example, the host can invoke this method to preinitialize data structures.","pos":[2296,2374]},{"pos":[2382,2593],"content":"[!IMPORTANT]\n The new task is returned in a suspended state and remains suspended until the host explicitly calls [IHostTask::Start](../../../../docs/framework/unmanaged-api/hosting/ihosttask-start-method.md).","leadings":["","> "],"nodes":[{"content":"The new task is returned in a suspended state and remains suspended until the host explicitly calls <bpt id=\"p1\">[</bpt>IHostTask::Start<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-start-method.md)</ept>.","pos":[14,209],"source":" The new task is returned in a suspended state and remains suspended until the host explicitly calls [IHostTask::Start](../../../../docs/framework/unmanaged-api/hosting/ihosttask-start-method.md)."}]},{"pos":[2602,2614],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2618,2722],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2729,2750],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2757,2807],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2814,2922],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[2931,2939],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICLRTask Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2943,3036],"source":"[ICLRTask Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ICLRTaskManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3039,3147],"source":" [ICLRTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IHostTask Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3150,3246],"source":" [IHostTask Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IHostTaskManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)</ept>","pos":[3249,3358],"source":" [IHostTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)"}]}