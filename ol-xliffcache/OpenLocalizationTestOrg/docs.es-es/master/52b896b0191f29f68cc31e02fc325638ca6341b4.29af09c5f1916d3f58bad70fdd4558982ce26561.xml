{"content":"---\ntitle: \"How to: Write Object Data to an XML File (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: f7966480-5ed2-43ac-9894-33427436de2a\n---\n# How to: Write Object Data to an XML File (Visual Basic)\nThis example writes the object from a class to an XML file using the <xref:System.Xml.Serialization.XmlSerializer> class.  \n  \n## Example  \n  \n```vb  \nPublic Module XMLWrite  \n  \n    Sub Main()  \n        WriteXML()  \n    End Sub  \n  \n    Public Class Book  \n        Public Title As String  \n    End Class  \n  \n    Public Sub WriteXML()  \n        Dim overview As New Book  \n        overview.Title = \"Serialization Overview\"  \n        Dim writer As New System.Xml.Serialization.XmlSerializer(GetType(Book))  \n        Dim file As New System.IO.StreamWriter(  \n            \"c:\\temp\\SerializationOverview.xml\")  \n        writer.Serialize(file, overview)  \n        file.Close()  \n    End Sub  \nEnd Module  \n```  \n  \n## Compiling the Code  \n The class must have a public constructor without parameters.  \n  \n## Robust Programming  \n The following conditions may cause an exception:  \n  \n-   The class being serialized does not have a public, parameterless constructor.  \n  \n-   The file exists and is read-only (<xref:System.IO.IOException>).  \n  \n-   The path is too long (<xref:System.IO.PathTooLongException>).  \n  \n-   The disk is full (<xref:System.IO.IOException>).  \n  \n## .NET Framework Security  \n This example creates a new file, if the file does not already exist. If an application needs to create a file, that application needs `Create` access for the folder. If the file already exists, the application needs only `Write` access, a lesser privilege. Where possible, it is more secure to create the file during deployment, and only grant `Read` access to a single file, rather than `Create` access for a folder.  \n  \n## See also\n\n- <xref:System.IO.StreamWriter>\n- [How to: Read Object Data from an XML File (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/how-to-read-object-data-from-an-xml-file.md)\n- [Serialization (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/index.md)\n","nodes":[{"pos":[4,137],"embed":true,"restype":"x-metadata","content":"title: \"How to: Write Object Data to an XML File (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: f7966480-5ed2-43ac-9894-33427436de2a","nodes":[{"content":"How to: Write Object Data to an XML File (Visual Basic)","nodes":[{"pos":[0,55],"content":"How to: Write Object Data to an XML File (Visual Basic)","nodes":[{"content":"How to: Write Object Data to an XML File (Visual Basic)","pos":[0,55]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[144,199],"content":"How to: Write Object Data to an XML File (Visual Basic)","linkify":"How to: Write Object Data to an XML File (Visual Basic)","nodes":[{"content":"How to: Write Object Data to an XML File (Visual Basic)","pos":[0,55]}]},{"pos":[200,321],"content":"This example writes the object from a class to an XML file using the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class.","source":"This example writes the object from a class to an XML file using the <xref:System.Xml.Serialization.XmlSerializer> class."},{"pos":[330,337],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[913,931],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"The class must have a public constructor without parameters.","pos":[935,995]},{"pos":[1004,1022],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"The following conditions may cause an exception:","pos":[1026,1074]},{"content":"The class being serialized does not have a public, parameterless constructor.","pos":[1084,1161]},{"pos":[1171,1235],"content":"The file exists and is read-only (<ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>).","source":"The file exists and is read-only (<xref:System.IO.IOException>)."},{"pos":[1245,1306],"content":"The path is too long (<ph id=\"ph1\">&lt;xref:System.IO.PathTooLongException&gt;</ph>).","source":"The path is too long (<xref:System.IO.PathTooLongException>)."},{"pos":[1316,1364],"content":"The disk is full (<ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>).","source":"The disk is full (<xref:System.IO.IOException>)."},{"pos":[1373,1396],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"content":"This example creates a new file, if the file does not already exist.","pos":[1400,1468]},{"content":"If an application needs to create a file, that application needs <ph id=\"ph1\">`Create`</ph> access for the folder.","pos":[1469,1565],"source":" If an application needs to create a file, that application needs `Create` access for the folder."},{"content":"If the file already exists, the application needs only <ph id=\"ph1\">`Write`</ph> access, a lesser privilege.","pos":[1566,1656],"source":" If the file already exists, the application needs only `Write` access, a lesser privilege."},{"content":"Where possible, it is more secure to create the file during deployment, and only grant <ph id=\"ph1\">`Read`</ph> access to a single file, rather than <ph id=\"ph2\">`Create`</ph> access for a folder.","pos":[1657,1817],"source":" Where possible, it is more secure to create the file during deployment, and only grant `Read` access to a single file, rather than `Create` access for a folder."},{"pos":[1826,1834],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1870,2039],"content":"<bpt id=\"p1\">[</bpt>How to: Read Object Data from an XML File (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/serialization/how-to-read-object-data-from-an-xml-file.md)</ept>","source":"[How to: Read Object Data from an XML File (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/how-to-read-object-data-from-an-xml-file.md)"},{"pos":[2042,2148],"content":"<bpt id=\"p1\">[</bpt>Serialization (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/serialization/index.md)</ept>","source":"[Serialization (Visual Basic)](../../../../visual-basic/programming-guide/concepts/serialization/index.md)"}]}