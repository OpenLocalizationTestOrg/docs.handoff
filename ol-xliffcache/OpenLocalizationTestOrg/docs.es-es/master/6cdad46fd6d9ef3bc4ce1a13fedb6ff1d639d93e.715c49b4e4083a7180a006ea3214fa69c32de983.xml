{"content":"---\ntitle: \"How to: Bind to a Method\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"data binding [WPF], binding to methods using ObjectDataProvider\"\n  - \"binding [WPF], to methods\"\n  - \"methods [WPF], binding to\"\nms.assetid: 5f55e71e-2182-42a0-88d1-700cc1427a7a\n---\n# How to: Bind to a Method\nThe following example shows how to bind to a method using <xref:System.Windows.Data.ObjectDataProvider>.  \n  \n## Example  \n In this example, `TemperatureScale` is a class that has a method `ConvertTemp`, which takes two parameters (one of `double` and one of the `enum` type `TempType)` and converts the given value from one temperature scale to another. In the following example, an <xref:System.Windows.Data.ObjectDataProvider> is used to instantiate the `TemperatureScale` object. The `ConvertTemp` method is called with two specified parameters.  \n  \n [!code-xaml[BindToMethod#WindowResources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindToMethod/CS/Window1.xaml#windowresources)]  \n  \n Now that the method is available as a resource, you can bind to its results. In the following example, the <xref:System.Windows.Controls.TextBox.Text%2A> property of the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> of the <xref:System.Windows.Controls.ComboBox> are bound to the two parameters of the method. This allows users to specify the temperature to convert and the temperature scale to convert from. Note that <xref:System.Windows.Data.Binding.BindsDirectlyToSource%2A> is set to `true` because we are binding to the <xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A> property of the <xref:System.Windows.Data.ObjectDataProvider> instance and not properties of the object wrapped by the <xref:System.Windows.Data.ObjectDataProvider> (the `TemperatureScale` object).  \n  \n The <xref:System.Windows.Controls.ContentControl.Content%2A> of the last <xref:System.Windows.Controls.Label> updates when the user modifies the content of the <xref:System.Windows.Controls.TextBox> or the selection of the <xref:System.Windows.Controls.ComboBox>.  \n  \n [!code-xaml[BindToMethod#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/BindToMethod/CS/Window1.xaml#ui)]  \n  \n The converter `DoubleToString` takes a double and turns it into a string in the <xref:System.Windows.Data.IValueConverter.Convert%2A> direction (from the binding source to binding target, which is the <xref:System.Windows.Controls.TextBox.Text%2A> property) and converts a `string` to a `double` in the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> direction.  \n  \n The `InvalidationCharacterRule` is a <xref:System.Windows.Controls.ValidationRule> that checks for invalid characters. The default error template, which is a red border around the <xref:System.Windows.Controls.TextBox>, appears to notify users when the input value is not a double value.  \n  \n## See also\n\n- [How-to Topics](data-binding-how-to-topics.md)\n- [Bind to an Enumeration](how-to-bind-to-an-enumeration.md)\n","nodes":[{"pos":[4,264],"embed":true,"restype":"x-metadata","content":"title: \"How to: Bind to a Method\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"data binding [WPF], binding to methods using ObjectDataProvider\"\n  - \"binding [WPF], to methods\"\n  - \"methods [WPF], binding to\"\nms.assetid: 5f55e71e-2182-42a0-88d1-700cc1427a7a","nodes":[{"content":"How to: Bind to a Method","nodes":[{"pos":[0,24],"content":"How to: Bind to a Method","nodes":[{"content":"How to: Bind to a Method","pos":[0,24]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[271,295],"content":"How to: Bind to a Method","linkify":"How to: Bind to a Method","nodes":[{"content":"How to: Bind to a Method","pos":[0,24]}]},{"pos":[296,400],"content":"The following example shows how to bind to a method using <ph id=\"ph1\">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph>.","source":"The following example shows how to bind to a method using <xref:System.Windows.Data.ObjectDataProvider>."},{"pos":[409,416],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In this example, <ph id=\"ph1\">`TemperatureScale`</ph> is a class that has a method <ph id=\"ph2\">`ConvertTemp`</ph>, which takes two parameters (one of <ph id=\"ph3\">`double`</ph> and one of the <ph id=\"ph4\">`enum`</ph> type <ph id=\"ph5\">`TempType)`</ph> and converts the given value from one temperature scale to another.","pos":[420,650],"source":"In this example, `TemperatureScale` is a class that has a method `ConvertTemp`, which takes two parameters (one of `double` and one of the `enum` type `TempType)` and converts the given value from one temperature scale to another."},{"content":"In the following example, an <ph id=\"ph1\">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph> is used to instantiate the <ph id=\"ph2\">`TemperatureScale`</ph> object.","pos":[651,779],"source":" In the following example, an <xref:System.Windows.Data.ObjectDataProvider> is used to instantiate the `TemperatureScale` object."},{"content":"The <ph id=\"ph1\">`ConvertTemp`</ph> method is called with two specified parameters.","pos":[780,845],"source":" The `ConvertTemp` method is called with two specified parameters."},{"content":"Now that the method is available as a resource, you can bind to its results.","pos":[989,1065]},{"content":"In the following example, the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;</ph> of the <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> are bound to the two parameters of the method.","pos":[1066,1367],"source":" In the following example, the <xref:System.Windows.Controls.TextBox.Text%2A> property of the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> of the <xref:System.Windows.Controls.ComboBox> are bound to the two parameters of the method."},{"content":"This allows users to specify the temperature to convert and the temperature scale to convert from.","pos":[1368,1466]},{"content":"Note that <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.BindsDirectlyToSource%2A&gt;</ph> is set to <ph id=\"ph2\">`true`</ph> because we are binding to the <ph id=\"ph3\">&lt;xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph> instance and not properties of the object wrapped by the <ph id=\"ph5\">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph> (the <ph id=\"ph6\">`TemperatureScale`</ph> object).","pos":[1467,1847],"source":" Note that <xref:System.Windows.Data.Binding.BindsDirectlyToSource%2A> is set to `true` because we are binding to the <xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A> property of the <xref:System.Windows.Data.ObjectDataProvider> instance and not properties of the object wrapped by the <xref:System.Windows.Data.ObjectDataProvider> (the `TemperatureScale` object)."},{"pos":[1854,2117],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> of the last <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Label&gt;</ph> updates when the user modifies the content of the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> or the selection of the <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>.","source":"The <xref:System.Windows.Controls.ContentControl.Content%2A> of the last <xref:System.Windows.Controls.Label> updates when the user modifies the content of the <xref:System.Windows.Controls.TextBox> or the selection of the <xref:System.Windows.Controls.ComboBox>."},{"pos":[2235,2606],"content":"The converter <ph id=\"ph1\">`DoubleToString`</ph> takes a double and turns it into a string in the <ph id=\"ph2\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> direction (from the binding source to binding target, which is the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property) and converts a <ph id=\"ph4\">`string`</ph> to a <ph id=\"ph5\">`double`</ph> in the <ph id=\"ph6\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> direction.","source":"The converter `DoubleToString` takes a double and turns it into a string in the <xref:System.Windows.Data.IValueConverter.Convert%2A> direction (from the binding source to binding target, which is the <xref:System.Windows.Controls.TextBox.Text%2A> property) and converts a `string` to a `double` in the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> direction."},{"content":"The <ph id=\"ph1\">`InvalidationCharacterRule`</ph> is a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that checks for invalid characters.","pos":[2613,2731],"source":"The `InvalidationCharacterRule` is a <xref:System.Windows.Controls.ValidationRule> that checks for invalid characters."},{"content":"The default error template, which is a red border around the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, appears to notify users when the input value is not a double value.","pos":[2732,2900],"source":" The default error template, which is a red border around the <xref:System.Windows.Controls.TextBox>, appears to notify users when the input value is not a double value."},{"pos":[2909,2917],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2921,2967],"content":"<bpt id=\"p1\">[</bpt>How-to Topics<ept id=\"p1\">](data-binding-how-to-topics.md)</ept>","source":"[How-to Topics](data-binding-how-to-topics.md)"},{"pos":[2970,3028],"content":"<bpt id=\"p1\">[</bpt>Bind to an Enumeration<ept id=\"p1\">](how-to-bind-to-an-enumeration.md)</ept>","source":"[Bind to an Enumeration](how-to-bind-to-an-enumeration.md)"}]}