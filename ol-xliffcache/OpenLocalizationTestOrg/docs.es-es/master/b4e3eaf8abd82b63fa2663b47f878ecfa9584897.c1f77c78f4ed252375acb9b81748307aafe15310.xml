{"content":"---\ntitle: \"Entity SQL Quick Reference\"\nms.date: \"03/30/2017\"\nms.assetid: e53dad9e-5e83-426e-abb4-be3e78e3d6dc\n---\n# Entity SQL Quick Reference\nThis topic provides a quick reference to [!INCLUDE[esql](../../../../../../includes/esql-md.md)] queries. The queries in this topic are based on the AdventureWorks Sales model.  \n  \n## Literals  \n  \n### String  \n There are Unicode and non-Unicode character string literals. Unicode strings are prepended with N. For example, `N'hello'`.  \n  \n The following is an example of a Non-Unicode string literal:  \n  \n```  \n'hello'  \n--same as  \n\"hello\"  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|hello|  \n  \n### DateTime  \n In DateTime literals, both date and time parts are mandatory. There are no default values.  \n  \n Example:  \n  \n```  \nDATETIME '2006-12-25 01:01:00.000'   \n--same as  \nDATETIME '2006-12-25 01:01'  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|12/25/2006 1:01:00 AM|  \n  \n### Integer  \n Integer literals can be of type Int32 (123), UInt32 (123U), Int64 (123L), and UInt64 (123UL).  \n  \n Example:  \n  \n```  \n--a collection of integers  \n{1, 2, 3}  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|1|  \n|2|  \n|3|  \n  \n### Other  \n Other literals supported by [!INCLUDE[esql](../../../../../../includes/esql-md.md)] are Guid, Binary, Float/Double, Decimal, and `null`. Null literals in [!INCLUDE[esql](../../../../../../includes/esql-md.md)] are considered to be compatible with every other type in the conceptual model.  \n  \n## Type Constructors  \n  \n### ROW  \n [ROW](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md) constructs an anonymous, structurally-typed (record) value as in: `ROW(1 AS myNumber, ‘Name’ AS myName).`  \n  \n Example:  \n  \n```  \nSELECT VALUE row (product.ProductID as ProductID, product.Name   \n    as ProductName) FROM AdventureWorksEntities.Product AS product  \n```  \n  \n Output:  \n  \n|ProductID|Name|  \n|---------------|----------|  \n|1|Adjustable Race|  \n|879|All-Purpose Bike Stand|  \n|712|AWC Logo Cap|  \n|...|...|  \n  \n### MULTISET  \n [MULTISET](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md) constructs collections, such as:  \n  \n `MULTISET(1,2,2,3)` `--same as`-`{1,2,2,3}.`  \n  \n Example:  \n  \n```  \nSELECT VALUE product FROM AdventureWorksEntities.Product AS product WHERE product.ListPrice IN MultiSet (125, 300)  \n```  \n  \n Output:  \n  \n|ProductID|Name|ProductNumber|…|  \n|---------------|----------|-------------------|-------|  \n|842|Touring-Panniers, Large|PA-T100|…|  \n  \n### Object  \n [Named Type Constructor](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md) constructs (named) user-defined objects, such as `person(\"abc\", 12)`.  \n  \n Example:  \n  \n```  \nSELECT VALUE AdventureWorksModel.SalesOrderDetail (o.SalesOrderDetailID, o.CarrierTrackingNumber, o.OrderQty,   \no.ProductID, o.SpecialOfferID, o.UnitPrice, o.UnitPriceDiscount,   \no.rowguid, o.ModifiedDate) FROM AdventureWorksEntities.SalesOrderDetail   \nAS o  \n```  \n  \n Output:  \n  \n|SalesOrderDetailID|CarrierTrackingNumber|OrderQty|ProductID|...|  \n|------------------------|---------------------------|--------------|---------------|---------|  \n|1|4911-403C-98|1|776|...|  \n|2|4911-403C-98|3|777|...|  \n|...|...|...|...|...|  \n  \n## References  \n  \n### REF  \n [REF](../../../../../../docs/framework/data/adonet/ef/language-reference/ref-entity-sql.md) creates a reference to an entity type instance. For example, the following query returns references to each Order entity in the Orders entity set:  \n  \n```  \nSELECT REF(o) AS OrderID FROM Orders AS o  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|1|  \n|2|  \n|3|  \n|...|  \n  \n The following example uses the property extraction operator (.) to access a property of an entity. When the property extraction operator is used, the reference is automatically dereferenced.  \n  \n Example:  \n  \n```  \nSELECT VALUE REF(p).Name FROM   \n    AdventureWorksEntities.Product as p  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|Adjustable Race|  \n|All-Purpose Bike Stand|  \n|AWC Logo Cap|  \n|...|  \n  \n### DEREF  \n [DEREF](../../../../../../docs/framework/data/adonet/ef/language-reference/deref-entity-sql.md) dereferences a reference value and produces the result of that dereference. For example, the following query produces the Order entities for each Order in the Orders entity set: `SELECT DEREF(o2.r) FROM (SELECT REF(o) AS r FROM LOB.Orders AS o) AS o2`..  \n  \n Example:  \n  \n```  \nSELECT VALUE DEREF(REF(p)).Name FROM   \n    AdventureWorksEntities.Product as p  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|Adjustable Race|  \n|All-Purpose Bike Stand|  \n|AWC Logo Cap|  \n|...|  \n  \n### CREATEREF AND KEY  \n [CREATEREF](../../../../../../docs/framework/data/adonet/ef/language-reference/createref-entity-sql.md) creates a reference passing a key. [KEY](../../../../../../docs/framework/data/adonet/ef/language-reference/key-entity-sql.md) extracts the key portion of an expression with type reference.  \n  \n Example:  \n  \n```  \nSELECT VALUE Key(CreateRef(AdventureWorksEntities.Product, row(p.ProductID)))   \n    FROM AdventureWorksEntities.Product as p  \n```  \n  \n Output:  \n  \n|ProductID|  \n|---------------|  \n|980|  \n|365|  \n|771|  \n|...|  \n  \n## Functions  \n  \n### Canonical  \n The namespace for [canonical functions](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md) is Edm, as in `Edm.Length(\"string\")`. You do not have to specify the namespace unless another namespace is imported that contains a function with the same name as a canonical function. If two namespaces have the same function, the user should specific the full name.  \n  \n Example:  \n  \n```  \nSELECT Length(c. FirstName) As NameLen FROM   \n    AdventureWorksEntities.Contact AS c   \n    WHERE c.ContactID BETWEEN 10 AND 12  \n```  \n  \n Output:  \n  \n|NameLen|  \n|-------------|  \n|6|  \n|6|  \n|5|  \n  \n### Microsoft Provider-Specific  \n [Microsoft provider-specific functions](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md) are in the `SqlServer` namespace.  \n  \n Example:  \n  \n```  \nSELECT SqlServer.LEN(c.EmailAddress) As EmailLen FROM   \n    AdventureWorksEntities.Contact AS c WHERE   \n    c.ContactID BETWEEN 10 AND 12  \n```  \n  \n Output:  \n  \n|EmailLen|  \n|--------------|  \n|27|  \n|27|  \n|26|  \n  \n## Namespaces  \n [USING](../../../../../../docs/framework/data/adonet/ef/language-reference/using-entity-sql.md) specifies namespaces used in a query expression.  \n  \n Example:  \n  \n```  \nusing SqlServer; LOWER('AA');  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|aa|  \n  \n## Paging  \n Paging can be expressed by declaring a [SKIP](../../../../../../docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) and [LIMIT](../../../../../../docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) sub-clauses to the [ORDER BY](../../../../../../docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause.  \n  \n Example:  \n  \n```  \nSELECT c.ContactID as ID, c.LastName as Name FROM   \n    AdventureWorks.Contact AS c ORDER BY c.ContactID SKIP 9 LIMIT 3;  \n```  \n  \n Output:  \n  \n|ID|Name|  \n|--------|----------|  \n|10|Adina|  \n|11|Agcaoili|  \n|12|Aguilar|  \n  \n## Grouping  \n [GROUPING BY](../../../../../../docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) specifies groups into which objects returned by a query ([SELECT](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)) expression are to be placed.  \n  \n Example:  \n  \n```  \nSELECT VALUE name FROM AdventureWorksEntities.Product as P   \n    GROUP BY P.Name HAVING MAX(P.ListPrice) > 5  \n```  \n  \n Output:  \n  \n|name|  \n|----------|  \n|LL Mountain Seat Assembly|  \n|ML Mountain Seat Assembly|  \n|HL Mountain Seat Assembly|  \n|...|  \n  \n## Navigation  \n The relationship navigation operator allows you to navigate over the relationship from one entity (from end) to another (to end). [NAVIGATE](../../../../../../docs/framework/data/adonet/ef/language-reference/navigate-entity-sql.md) takes the relationship type qualified as \\<namespace>.\\<relationship type name>. Navigate returns Ref\\<T> if the cardinality of the to end is 1. If the cardinality of the to end is n, the Collection<Ref\\<T>> will be returned.  \n  \n Example:  \n  \n```  \nSELECT a.AddressID, (SELECT VALUE DEREF(v) FROM   \n    NAVIGATE(a, AdventureWorksModel.FK_SalesOrderHeader_Address_BillToAddressID) AS v)   \n    FROM AdventureWorksEntities.Address AS a  \n```  \n  \n Output:  \n  \n|AddressID|  \n|---------------|  \n|1|  \n|2|  \n|3|  \n|...|  \n  \n## SELECT VALUE AND SELECT  \n  \n### SELECT VALUE  \n [!INCLUDE[esql](../../../../../../includes/esql-md.md)] provides the SELECT VALUE clause to skip the implicit row construction. Only one item can be specified in a SELECT VALUE clause. When such a clause is used, no row wrapper is constructed around the items in the SELECT clause, and a collection of the desired shape can be produced, for example: `SELECT VALUE a`.  \n  \n Example:  \n  \n```  \nSELECT VALUE p.Name FROM AdventureWorksEntities.Product as p  \n```  \n  \n Output:  \n  \n|Name|  \n|----------|  \n|Adjustable Race|  \n|All-Purpose Bike Stand|  \n|AWC Logo Cap|  \n|...|  \n  \n### SELECT  \n [!INCLUDE[esql](../../../../../../includes/esql-md.md)] also provides the row constructor to construct arbitrary rows. SELECT takes one or more elements in the projection and results in a data record with fields, for example: `SELECT a, b, c`.  \n  \n Example:  \n  \n SELECT p.Name, p.ProductID FROM AdventureWorksEntities.Product as p Output:  \n  \n|Name|ProductID|  \n|----------|---------------|  \n|Adjustable Race|1|  \n|All-Purpose Bike Stand|879|  \n|AWC Logo Cap|712|  \n|...|...|  \n  \n## CASE EXPRESSION  \n The [case expression](../../../../../../docs/framework/data/adonet/ef/language-reference/case-entity-sql.md) evaluates a set of Boolean expressions to determine the result.  \n  \n Example:  \n  \n```  \nCASE WHEN AVG({25,12,11}) < 100 THEN TRUE ELSE FALSE END  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|TRUE|  \n  \n## See also\n\n- [Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)\n- [Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)\n","nodes":[{"pos":[4,110],"embed":true,"restype":"x-metadata","content":"title: \"Entity SQL Quick Reference\"\nms.date: \"03/30/2017\"\nms.assetid: e53dad9e-5e83-426e-abb4-be3e78e3d6dc","nodes":[{"content":"Entity SQL Quick Reference","nodes":[{"pos":[0,26],"content":"Entity SQL Quick Reference","nodes":[{"content":"Entity SQL Quick Reference","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[117,143],"content":"Entity SQL Quick Reference","linkify":"Entity SQL Quick Reference","nodes":[{"content":"Entity SQL Quick Reference","pos":[0,26]}]},{"content":"This topic provides a quick reference to <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> queries.","pos":[144,249],"source":"This topic provides a quick reference to [!INCLUDE[esql](../../../../../../includes/esql-md.md)] queries."},{"content":"The queries in this topic are based on the AdventureWorks Sales model.","pos":[250,320]},{"pos":[329,337],"content":"Literals","linkify":"Literals","nodes":[{"content":"Literals","pos":[0,8]}]},{"pos":[347,353],"content":"String","linkify":"String","nodes":[{"content":"String","pos":[0,6]}]},{"content":"There are Unicode and non-Unicode character string literals.","pos":[357,417]},{"content":"Unicode strings are prepended with N. For example, <ph id=\"ph1\">`N'hello'`</ph>.","pos":[418,480],"source":" Unicode strings are prepended with N. For example, `N'hello'`."},{"content":"The following is an example of a Non-Unicode string literal:","pos":[487,547]},{"content":"Output:","pos":[601,608]},{"content":"Value","pos":[615,620]},{"content":"hello","pos":[641,646]},{"pos":[657,665],"content":"DateTime","linkify":"DateTime","nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":"In DateTime literals, both date and time parts are mandatory.","pos":[669,730]},{"content":"There are no default values.","pos":[731,759]},{"content":"Example:","pos":[766,774]},{"content":"Output:","pos":[876,883]},{"content":"Value","pos":[890,895]},{"content":"12/25/2006 1:01:00 AM","pos":[916,937]},{"pos":[948,955],"content":"Integer","linkify":"Integer","nodes":[{"content":"Integer","pos":[0,7]}]},{"content":"Integer literals can be of type Int32 (123), UInt32 (123U), Int64 (123L), and UInt64 (123UL).","pos":[959,1052]},{"content":"Example:","pos":[1059,1067]},{"content":"Output:","pos":[1130,1137]},{"content":"Value","pos":[1144,1149]},{"content":"1","pos":[1170,1171]},{"content":"2","pos":[1176,1177]},{"content":"3","pos":[1182,1183]},{"pos":[1194,1199],"content":"Other","linkify":"Other","nodes":[{"content":"Other","pos":[0,5]}]},{"content":"Other literals supported by <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> are Guid, Binary, Float/Double, Decimal, and <ph id=\"ph2\">`null`</ph>.","pos":[1203,1339],"source":"Other literals supported by [!INCLUDE[esql](../../../../../../includes/esql-md.md)] are Guid, Binary, Float/Double, Decimal, and `null`."},{"content":"Null literals in <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> are considered to be compatible with every other type in the conceptual model.","pos":[1340,1491],"source":" Null literals in [!INCLUDE[esql](../../../../../../includes/esql-md.md)] are considered to be compatible with every other type in the conceptual model."},{"pos":[1500,1517],"content":"Type Constructors","linkify":"Type Constructors","nodes":[{"content":"Type Constructors","pos":[0,17]}]},{"pos":[1527,1530],"content":"ROW","linkify":"ROW","nodes":[{"content":"ROW","pos":[0,3]}]},{"pos":[1534,1731],"content":"<bpt id=\"p1\">[</bpt>ROW<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md)</ept> constructs an anonymous, structurally-typed (record) value as in: <ph id=\"ph1\">`ROW(1 AS myNumber, ‘Name’ AS myName).`</ph>","source":"[ROW](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md) constructs an anonymous, structurally-typed (record) value as in: `ROW(1 AS myNumber, ‘Name’ AS myName).`"},{"content":"Example:","pos":[1738,1746]},{"content":"Output:","pos":[1903,1910]},{"content":"ProductID","pos":[1917,1926]},{"content":"Name","pos":[1927,1931]},{"content":"1","pos":[1967,1968]},{"content":"Adjustable Race","pos":[1969,1984]},{"content":"879","pos":[1989,1992]},{"content":"All-Purpose Bike Stand","pos":[1993,2015]},{"content":"712","pos":[2020,2023]},{"content":"AWC Logo Cap","pos":[2024,2036]},{"content":"...","pos":[2041,2044]},{"content":"...","pos":[2045,2048]},{"pos":[2059,2067],"content":"MULTISET","linkify":"MULTISET","nodes":[{"content":"MULTISET","pos":[0,8]}]},{"pos":[2071,2205],"content":"<bpt id=\"p1\">[</bpt>MULTISET<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md)</ept> constructs collections, such as:","source":"[MULTISET](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md) constructs collections, such as:"},{"pos":[2212,2256],"content":"<ph id=\"ph1\">`MULTISET(1,2,2,3)`</ph> <ph id=\"ph2\">`--same as`</ph><ph id=\"ph3\">-</ph><ph id=\"ph4\">`{1,2,2,3}.`</ph>","source":"`MULTISET(1,2,2,3)` `--same as`-`{1,2,2,3}.`"},{"content":"Example:","pos":[2263,2271]},{"content":"Output:","pos":[2410,2417]},{"content":"ProductID","pos":[2424,2433]},{"content":"Name","pos":[2434,2438]},{"content":"ProductNumber","pos":[2439,2452]},{"content":"…","pos":[2453,2454]},{"content":"842","pos":[2518,2521]},{"content":"Touring-Panniers, Large","pos":[2522,2545]},{"content":"PA-T100","pos":[2546,2553]},{"content":"…","pos":[2554,2555]},{"pos":[2566,2572],"content":"Object","linkify":"Object","nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[2576,2775],"content":"<bpt id=\"p1\">[</bpt>Named Type Constructor<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md)</ept> constructs (named) user-defined objects, such as <ph id=\"ph1\">`person(\"abc\", 12)`</ph>.","source":"[Named Type Constructor](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md) constructs (named) user-defined objects, such as `person(\"abc\", 12)`."},{"content":"Example:","pos":[2782,2790]},{"content":"Output:","pos":[3075,3082]},{"content":"SalesOrderDetailID","pos":[3089,3107]},{"content":"CarrierTrackingNumber","pos":[3108,3129]},{"content":"OrderQty","pos":[3130,3138]},{"content":"ProductID","pos":[3139,3148]},{"content":"...","pos":[3149,3152]},{"content":"1","pos":[3255,3256]},{"content":"4911-403C-98","pos":[3257,3269]},{"content":"1","pos":[3270,3271]},{"content":"776","pos":[3272,3275]},{"content":"...","pos":[3276,3279]},{"content":"2","pos":[3284,3285]},{"content":"4911-403C-98","pos":[3286,3298]},{"content":"3","pos":[3299,3300]},{"content":"777","pos":[3301,3304]},{"content":"...","pos":[3305,3308]},{"content":"...","pos":[3313,3316]},{"content":"...","pos":[3317,3320]},{"content":"...","pos":[3321,3324]},{"content":"...","pos":[3325,3328]},{"content":"...","pos":[3329,3332]},{"pos":[3342,3352],"content":"References","linkify":"References","nodes":[{"content":"References","pos":[0,10]}]},{"pos":[3362,3365],"content":"REF","linkify":"REF","nodes":[{"content":"REF","pos":[0,3]}]},{"content":"<bpt id=\"p1\">[</bpt>REF<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/ref-entity-sql.md)</ept> creates a reference to an entity type instance.","pos":[3369,3508],"source":"[REF](../../../../../../docs/framework/data/adonet/ef/language-reference/ref-entity-sql.md) creates a reference to an entity type instance."},{"content":"For example, the following query returns references to each Order entity in the Orders entity set:","pos":[3509,3607]},{"content":"Output:","pos":[3673,3680]},{"content":"Value","pos":[3687,3692]},{"content":"1","pos":[3713,3714]},{"content":"2","pos":[3719,3720]},{"content":"3","pos":[3725,3726]},{"content":"...","pos":[3731,3734]},{"content":"The following example uses the property extraction operator (.) to access a property of an entity.","pos":[3742,3840]},{"content":"When the property extraction operator is used, the reference is automatically dereferenced.","pos":[3841,3932]},{"content":"Example:","pos":[3939,3947]},{"content":"Output:","pos":[4044,4051]},{"content":"Value","pos":[4058,4063]},{"content":"Adjustable Race","pos":[4084,4099]},{"content":"All-Purpose Bike Stand","pos":[4104,4126]},{"content":"AWC Logo Cap","pos":[4131,4143]},{"content":"...","pos":[4148,4151]},{"pos":[4162,4167],"content":"DEREF","linkify":"DEREF","nodes":[{"content":"DEREF","pos":[0,5]}]},{"content":"<bpt id=\"p1\">[</bpt>DEREF<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/deref-entity-sql.md)</ept> dereferences a reference value and produces the result of that dereference.","pos":[4171,4342],"source":"[DEREF](../../../../../../docs/framework/data/adonet/ef/language-reference/deref-entity-sql.md) dereferences a reference value and produces the result of that dereference."},{"content":"For example, the following query produces the Order entities for each Order in the Orders entity set: <ph id=\"ph1\">`SELECT DEREF(o2.r) FROM (SELECT REF(o) AS r FROM LOB.Orders AS o) AS o2`</ph>..","pos":[4343,4520],"source":" For example, the following query produces the Order entities for each Order in the Orders entity set: `SELECT DEREF(o2.r) FROM (SELECT REF(o) AS r FROM LOB.Orders AS o) AS o2`.."},{"content":"Example:","pos":[4527,4535]},{"content":"Output:","pos":[4639,4646]},{"content":"Value","pos":[4653,4658]},{"content":"Adjustable Race","pos":[4679,4694]},{"content":"All-Purpose Bike Stand","pos":[4699,4721]},{"content":"AWC Logo Cap","pos":[4726,4738]},{"content":"...","pos":[4743,4746]},{"pos":[4757,4774],"content":"CREATEREF AND KEY","linkify":"CREATEREF AND KEY","nodes":[{"content":"CREATEREF AND KEY","pos":[0,17]}]},{"content":"<bpt id=\"p1\">[</bpt>CREATEREF<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/createref-entity-sql.md)</ept> creates a reference passing a key.","pos":[4778,4916],"source":"[CREATEREF](../../../../../../docs/framework/data/adonet/ef/language-reference/createref-entity-sql.md) creates a reference passing a key."},{"content":"<bpt id=\"p1\">[</bpt>KEY<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/key-entity-sql.md)</ept> extracts the key portion of an expression with type reference.","pos":[4917,5071],"source":"[KEY](../../../../../../docs/framework/data/adonet/ef/language-reference/key-entity-sql.md) extracts the key portion of an expression with type reference."},{"content":"Example:","pos":[5078,5086]},{"content":"Output:","pos":[5236,5243]},{"content":"ProductID","pos":[5250,5259]},{"content":"980","pos":[5284,5287]},{"content":"365","pos":[5292,5295]},{"content":"771","pos":[5300,5303]},{"content":"...","pos":[5308,5311]},{"pos":[5321,5330],"content":"Functions","linkify":"Functions","nodes":[{"content":"Functions","pos":[0,9]}]},{"pos":[5340,5349],"content":"Canonical","linkify":"Canonical","nodes":[{"content":"Canonical","pos":[0,9]}]},{"content":"The namespace for <bpt id=\"p1\">[</bpt>canonical functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md)</ept> is Edm, as in <ph id=\"ph1\">`Edm.Length(\"string\")`</ph>.","pos":[5353,5521],"source":"The namespace for [canonical functions](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md) is Edm, as in `Edm.Length(\"string\")`."},{"content":"You do not have to specify the namespace unless another namespace is imported that contains a function with the same name as a canonical function.","pos":[5522,5668]},{"content":"If two namespaces have the same function, the user should specific the full name.","pos":[5669,5750]},{"content":"Example:","pos":[5757,5765]},{"content":"Output:","pos":[5919,5926]},{"content":"NameLen","pos":[5933,5940]},{"content":"6","pos":[5963,5964]},{"content":"6","pos":[5969,5970]},{"content":"5","pos":[5975,5976]},{"pos":[5987,6014],"content":"Microsoft Provider-Specific","linkify":"Microsoft Provider-Specific","nodes":[{"content":"Microsoft Provider-Specific","pos":[0,27]}]},{"pos":[6018,6170],"content":"<bpt id=\"p1\">[</bpt>Microsoft provider-specific functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)</ept> are in the <ph id=\"ph1\">`SqlServer`</ph> namespace.","source":"[Microsoft provider-specific functions](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md) are in the `SqlServer` namespace."},{"content":"Example:","pos":[6177,6185]},{"content":"Output:","pos":[6349,6356]},{"content":"EmailLen","pos":[6363,6371]},{"content":"27","pos":[6395,6397]},{"content":"27","pos":[6402,6404]},{"content":"26","pos":[6409,6411]},{"pos":[6421,6431],"content":"Namespaces","linkify":"Namespaces","nodes":[{"content":"Namespaces","pos":[0,10]}]},{"pos":[6435,6579],"content":"<bpt id=\"p1\">[</bpt>USING<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/using-entity-sql.md)</ept> specifies namespaces used in a query expression.","source":"[USING](../../../../../../docs/framework/data/adonet/ef/language-reference/using-entity-sql.md) specifies namespaces used in a query expression."},{"content":"Example:","pos":[6586,6594]},{"content":"Output:","pos":[6648,6655]},{"content":"Value","pos":[6662,6667]},{"content":"aa","pos":[6688,6690]},{"pos":[6700,6706],"content":"Paging","linkify":"Paging","nodes":[{"content":"Paging","pos":[0,6]}]},{"pos":[6710,7071],"content":"Paging can be expressed by declaring a <bpt id=\"p1\">[</bpt>SKIP<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md)</ept> and <bpt id=\"p2\">[</bpt>LIMIT<ept id=\"p2\">](../../../../../../docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)</ept> sub-clauses to the <bpt id=\"p3\">[</bpt>ORDER BY<ept id=\"p3\">](../../../../../../docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)</ept> clause.","source":"Paging can be expressed by declaring a [SKIP](../../../../../../docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) and [LIMIT](../../../../../../docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) sub-clauses to the [ORDER BY](../../../../../../docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause."},{"content":"Example:","pos":[7078,7086]},{"content":"Output:","pos":[7232,7239]},{"content":"ID","pos":[7246,7248]},{"content":"Name","pos":[7249,7253]},{"content":"10","pos":[7282,7284]},{"content":"Adina","pos":[7285,7290]},{"content":"11","pos":[7295,7297]},{"content":"Agcaoili","pos":[7298,7306]},{"content":"12","pos":[7311,7313]},{"content":"Aguilar","pos":[7314,7321]},{"pos":[7331,7339],"content":"Grouping","linkify":"Grouping","nodes":[{"content":"Grouping","pos":[0,8]}]},{"pos":[7343,7632],"content":"<bpt id=\"p1\">[</bpt>GROUPING BY<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md)</ept> specifies groups into which objects returned by a query (<bpt id=\"p2\">[</bpt>SELECT<ept id=\"p2\">](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept>) expression are to be placed.","source":"[GROUPING BY](../../../../../../docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) specifies groups into which objects returned by a query ([SELECT](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)) expression are to be placed."},{"content":"Example:","pos":[7639,7647]},{"content":"Output:","pos":[7781,7788]},{"content":"name","pos":[7795,7799]},{"content":"LL Mountain Seat Assembly","pos":[7819,7844]},{"content":"ML Mountain Seat Assembly","pos":[7849,7874]},{"content":"HL Mountain Seat Assembly","pos":[7879,7904]},{"content":"...","pos":[7909,7912]},{"pos":[7922,7932],"content":"Navigation","linkify":"Navigation","nodes":[{"content":"Navigation","pos":[0,10]}]},{"content":"The relationship navigation operator allows you to navigate over the relationship from one entity (from end) to another (to end).","pos":[7936,8065]},{"content":"<bpt id=\"p1\">[</bpt>NAVIGATE<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/navigate-entity-sql.md)</ept> takes the relationship type qualified as <ph id=\"ph1\">\\&lt;</ph>namespace&gt;.<ph id=\"ph2\">\\&lt;</ph>relationship type name&gt;.","pos":[8066,8248],"source":"[NAVIGATE](../../../../../../docs/framework/data/adonet/ef/language-reference/navigate-entity-sql.md) takes the relationship type qualified as \\<namespace>.\\<relationship type name>."},{"content":"Navigate returns Ref<ph id=\"ph1\">\\&lt;</ph>T&gt; if the cardinality of the to end is 1.","pos":[8249,8312],"source":" Navigate returns Ref\\<T> if the cardinality of the to end is 1."},{"content":"If the cardinality of the to end is n, the Collection&lt;Ref<ph id=\"ph1\">\\&lt;</ph>T&gt;&gt; will be returned.","pos":[8313,8393],"source":" If the cardinality of the to end is n, the Collection<Ref\\<T>> will be returned."},{"content":"Example:","pos":[8400,8408]},{"content":"Output:","pos":[8618,8625]},{"content":"AddressID","pos":[8632,8641]},{"content":"1","pos":[8666,8667]},{"content":"2","pos":[8672,8673]},{"content":"3","pos":[8678,8679]},{"content":"...","pos":[8684,8687]},{"pos":[8697,8720],"content":"SELECT VALUE AND SELECT","linkify":"SELECT VALUE AND SELECT","nodes":[{"content":"SELECT VALUE AND SELECT","pos":[0,23]}]},{"pos":[8730,8742],"content":"SELECT VALUE","linkify":"SELECT VALUE","nodes":[{"content":"SELECT VALUE","pos":[0,12]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> provides the SELECT VALUE clause to skip the implicit row construction.","pos":[8746,8873],"source":"[!INCLUDE[esql](../../../../../../includes/esql-md.md)] provides the SELECT VALUE clause to skip the implicit row construction."},{"content":"Only one item can be specified in a SELECT VALUE clause.","pos":[8874,8930]},{"content":"When such a clause is used, no row wrapper is constructed around the items in the SELECT clause, and a collection of the desired shape can be produced, for example: <ph id=\"ph1\">`SELECT VALUE a`</ph>.","pos":[8931,9113],"source":" When such a clause is used, no row wrapper is constructed around the items in the SELECT clause, and a collection of the desired shape can be produced, for example: `SELECT VALUE a`."},{"content":"Example:","pos":[9120,9128]},{"content":"Output:","pos":[9213,9220]},{"content":"Name","pos":[9227,9231]},{"content":"Adjustable Race","pos":[9251,9266]},{"content":"All-Purpose Bike Stand","pos":[9271,9293]},{"content":"AWC Logo Cap","pos":[9298,9310]},{"content":"...","pos":[9315,9318]},{"pos":[9329,9335],"content":"SELECT","linkify":"SELECT","nodes":[{"content":"SELECT","pos":[0,6]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> also provides the row constructor to construct arbitrary rows.","pos":[9339,9457],"source":"[!INCLUDE[esql](../../../../../../includes/esql-md.md)] also provides the row constructor to construct arbitrary rows."},{"content":"SELECT takes one or more elements in the projection and results in a data record with fields, for example: <ph id=\"ph1\">`SELECT a, b, c`</ph>.","pos":[9458,9582],"source":" SELECT takes one or more elements in the projection and results in a data record with fields, for example: `SELECT a, b, c`."},{"content":"Example:","pos":[9589,9597]},{"content":"SELECT p.Name, p.ProductID FROM AdventureWorksEntities.Product as p Output:","pos":[9604,9679]},{"content":"Name","pos":[9686,9690]},{"content":"ProductID","pos":[9691,9700]},{"content":"Adjustable Race","pos":[9736,9751]},{"content":"1","pos":[9752,9753]},{"content":"All-Purpose Bike Stand","pos":[9758,9780]},{"content":"879","pos":[9781,9784]},{"content":"AWC Logo Cap","pos":[9789,9801]},{"content":"712","pos":[9802,9805]},{"content":"...","pos":[9810,9813]},{"content":"...","pos":[9814,9817]},{"pos":[9827,9842],"content":"CASE EXPRESSION","linkify":"CASE EXPRESSION","nodes":[{"content":"CASE EXPRESSION","pos":[0,15]}]},{"pos":[9846,10018],"content":"The <bpt id=\"p1\">[</bpt>case expression<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/case-entity-sql.md)</ept> evaluates a set of Boolean expressions to determine the result.","source":"The [case expression](../../../../../../docs/framework/data/adonet/ef/language-reference/case-entity-sql.md) evaluates a set of Boolean expressions to determine the result."},{"content":"Example:","pos":[10025,10033]},{"content":"Output:","pos":[10114,10121]},{"content":"Value","pos":[10128,10133]},{"content":"TRUE","pos":[10154,10158]},{"pos":[10168,10176],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[10180,10294],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept>","source":"[Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)"},{"pos":[10297,10409],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Overview<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)</ept>","source":"[Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)"}]}