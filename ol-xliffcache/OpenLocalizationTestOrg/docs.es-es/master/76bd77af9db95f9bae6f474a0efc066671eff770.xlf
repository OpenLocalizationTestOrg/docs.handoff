<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76bd77af9db95f9bae6f474a0efc066671eff770</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\query-expressions-entity-sql.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bab3402418558568b6aa6009628723a226084673</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cbc80028499983aed0ce321e7e9bf773c6d471d0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Query Expressions (Entity SQL) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Query Expressions (Entity SQL)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A query expression combines many different query operators into a single syntax.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> provides various kinds of expressions, including the following: <bpt id="p1">[</bpt>literals<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/literals-entity-sql.md)</ept>, <bpt id="p2">[</bpt>parameters<ept id="p2">](../../../../../../docs/framework/data/adonet/ef/language-reference/parameters-entity-sql.md)</ept>, <bpt id="p3">[</bpt>variables<ept id="p3">](../../../../../../docs/framework/data/adonet/ef/language-reference/variables-entity-sql.md)</ept>, operators, <bpt id="p4">[</bpt>functions<ept id="p4">](../../../../../../docs/framework/data/adonet/ef/language-reference/functions-entity-sql.md)</ept>, set operators, and so on.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Entity SQL Reference<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Clauses</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A query expression is composed of a series of clauses that apply successive operations to a collection of objects.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>They are based on the same clauses found in standard a SQL select statement: <bpt id="p1">[</bpt>SELECT<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept>, <bpt id="p2">[</bpt>FROM<ept id="p2">](../../../../../../docs/framework/data/adonet/ef/language-reference/from-entity-sql.md)</ept>, <bpt id="p3">[</bpt>WHERE<ept id="p3">](../../../../../../docs/framework/data/adonet/ef/language-reference/where-entity-sql.md)</ept>, <bpt id="p4">[</bpt>GROUP BY<ept id="p4">](../../../../../../docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md)</ept>, <bpt id="p5">[</bpt>HAVING<ept id="p5">](../../../../../../docs/framework/data/adonet/ef/language-reference/having-entity-sql.md)</ept>, and <bpt id="p6">[</bpt>ORDER BY<ept id="p6">](../../../../../../docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Scope</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Names defined in the FROM clause are introduced into the FROM scope in order of appearance, left to right.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the JOIN list, expressions can refer to names defined earlier in the list.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Public properties of elements identified in the FROM clause are not added to the FROM scope: They must be always referenced through the alias-qualified name.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Normally, all parts of the select expression are considered within the FROM scope.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Entity SQL Reference<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>