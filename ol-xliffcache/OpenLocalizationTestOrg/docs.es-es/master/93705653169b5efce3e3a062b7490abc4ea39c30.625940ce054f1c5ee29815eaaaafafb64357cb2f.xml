{"content":"---\ntitle: \"How to: Unlink Dataflow Blocks\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"dataflow blocks, unlinking in TPL\"\n  - \"Task Parallel Library, dataflows\"\n  - \"TPL dataflow library, unlinking dataflow blocks\"\nms.assetid: 40f0208d-4618-47f7-85cf-4913d07d2d7d\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# How to: Unlink Dataflow Blocks\nThis document describes how to unlink a target dataflow block from its source.\n\n[!INCLUDE [tpl-install-instructions](../../../includes/tpl-install-instructions.md)]\n\n## Example  \n The following example creates three <xref:System.Threading.Tasks.Dataflow.TransformBlock%602> objects, each of which calls the `TrySolution` method to compute a value. This example requires only the result from the first call to `TrySolution` to finish.  \n  \n [!code-csharp[TPLDataflow_ReceiveAny#1](../../../samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_receiveany/cs/dataflowreceiveany.cs#1)]\n [!code-vb[TPLDataflow_ReceiveAny#1](../../../samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_receiveany/vb/dataflowreceiveany.vb#1)]  \n  \n To receive the value from the first <xref:System.Threading.Tasks.Dataflow.TransformBlock%602> object that finishes, this example defines the `ReceiveFromAny(T)` method. The `ReceiveFromAny(T)` method accepts an array of <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> objects and links each of these objects to a <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object. When you use the <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A> method to link a source dataflow block to a target block, the source propagates messages to the target as data becomes available. Because the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> class accepts only the first message that it is offered, the `ReceiveFromAny(T)` method produces its result by calling the <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Receive%2A> method. This produces the first message that is offered to the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object. The <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A> method has an overloaded version that takes an <xref:System.Threading.Tasks.Dataflow.DataflowLinkOptions> object with a <xref:System.Threading.Tasks.Dataflow.DataflowLinkOptions.MaxMessages> property that, when it is set to `1`, instructs the source block to unlink from the target after the target receives one message from the source. It is important for the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object to unlink from its sources because the relationship between the array of sources and the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object is no longer required after the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object receives a message.  \n  \n To enable the remaining calls to `TrySolution` to end after one of them computes a value, the `TrySolution` method takes a <xref:System.Threading.CancellationToken> object that is canceled after the call to `ReceiveFromAny(T)` returns. The <xref:System.Threading.SpinWait.SpinUntil%2A> method returns when this <xref:System.Threading.CancellationToken> object is canceled.  \n  \n## Compiling the Code  \n Copy the example code and paste it in a Visual Studio project, or paste it in a file that is named `DataflowReceiveAny.cs` (`DataflowReceiveAny.vb` for Visual Basic), and then run the following command in a Developer Command Prompt for Visual Studio window.  \n  \n Visual C#  \n  \n **csc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.cs**  \n  \n Visual Basic  \n  \n **vbc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.vb**  \n\n## See also\n\n- [Dataflow](../../../docs/standard/parallel-programming/dataflow-task-parallel-library.md)\n","nodes":[{"pos":[4,374],"embed":true,"restype":"x-metadata","content":"title: \"How to: Unlink Dataflow Blocks\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"dataflow blocks, unlinking in TPL\"\n  - \"Task Parallel Library, dataflows\"\n  - \"TPL dataflow library, unlinking dataflow blocks\"\nms.assetid: 40f0208d-4618-47f7-85cf-4913d07d2d7d\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"How to: Unlink Dataflow Blocks","nodes":[{"pos":[0,30],"content":"How to: Unlink Dataflow Blocks","nodes":[{"content":"How to: Unlink Dataflow Blocks","pos":[0,30]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[381,411],"content":"How to: Unlink Dataflow Blocks","linkify":"How to: Unlink Dataflow Blocks","nodes":[{"content":"How to: Unlink Dataflow Blocks","pos":[0,30]}]},{"content":"This document describes how to unlink a target dataflow block from its source.","pos":[412,490]},{"pos":[581,588],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example creates three <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.TransformBlock%602&gt;</ph> objects, each of which calls the <ph id=\"ph2\">`TrySolution`</ph> method to compute a value.","pos":[592,759],"source":"The following example creates three <xref:System.Threading.Tasks.Dataflow.TransformBlock%602> objects, each of which calls the `TrySolution` method to compute a value."},{"content":"This example requires only the result from the first call to <ph id=\"ph1\">`TrySolution`</ph> to finish.","pos":[760,845],"source":" This example requires only the result from the first call to `TrySolution` to finish."},{"content":"To receive the value from the first <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.TransformBlock%602&gt;</ph> object that finishes, this example defines the <ph id=\"ph2\">`ReceiveFromAny(T)`</ph> method.","pos":[1144,1312],"source":"To receive the value from the first <xref:System.Threading.Tasks.Dataflow.TransformBlock%602> object that finishes, this example defines the `ReceiveFromAny(T)` method."},{"content":"The <ph id=\"ph1\">`ReceiveFromAny(T)`</ph> method accepts an array of <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> objects and links each of these objects to a <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object.","pos":[1313,1530],"source":" The `ReceiveFromAny(T)` method accepts an array of <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> objects and links each of these objects to a <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object."},{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A&gt;</ph> method to link a source dataflow block to a target block, the source propagates messages to the target as data becomes available.","pos":[1531,1743],"source":" When you use the <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A> method to link a source dataflow block to a target block, the source propagates messages to the target as data becomes available."},{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> class accepts only the first message that it is offered, the <ph id=\"ph2\">`ReceiveFromAny(T)`</ph> method produces its result by calling the <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.Receive%2A&gt;</ph> method.","pos":[1744,2008],"source":" Because the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> class accepts only the first message that it is offered, the `ReceiveFromAny(T)` method produces its result by calling the <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Receive%2A> method."},{"content":"This produces the first message that is offered to the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object.","pos":[2009,2129],"source":" This produces the first message that is offered to the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A&gt;</ph> method has an overloaded version that takes an <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Dataflow.DataflowLinkOptions&gt;</ph> object with a <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Dataflow.DataflowLinkOptions.MaxMessages&gt;</ph> property that, when it is set to <ph id=\"ph4\">`1`</ph>, instructs the source block to unlink from the target after the target receives one message from the source.","pos":[2130,2536],"source":" The <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A> method has an overloaded version that takes an <xref:System.Threading.Tasks.Dataflow.DataflowLinkOptions> object with a <xref:System.Threading.Tasks.Dataflow.DataflowLinkOptions.MaxMessages> property that, when it is set to `1`, instructs the source block to unlink from the target after the target receives one message from the source."},{"content":"It is important for the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object to unlink from its sources because the relationship between the array of sources and the <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object is no longer required after the <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object receives a message.","pos":[2537,2896],"source":" It is important for the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object to unlink from its sources because the relationship between the array of sources and the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object is no longer required after the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object receives a message."},{"content":"To enable the remaining calls to <ph id=\"ph1\">`TrySolution`</ph> to end after one of them computes a value, the <ph id=\"ph2\">`TrySolution`</ph> method takes a <ph id=\"ph3\">&lt;xref:System.Threading.CancellationToken&gt;</ph> object that is canceled after the call to <ph id=\"ph4\">`ReceiveFromAny(T)`</ph> returns.","pos":[2903,3138],"source":"To enable the remaining calls to `TrySolution` to end after one of them computes a value, the `TrySolution` method takes a <xref:System.Threading.CancellationToken> object that is canceled after the call to `ReceiveFromAny(T)` returns."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.SpinWait.SpinUntil%2A&gt;</ph> method returns when this <ph id=\"ph2\">&lt;xref:System.Threading.CancellationToken&gt;</ph> object is canceled.","pos":[3139,3275],"source":" The <xref:System.Threading.SpinWait.SpinUntil%2A> method returns when this <xref:System.Threading.CancellationToken> object is canceled."},{"pos":[3284,3302],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[3306,3563],"content":"Copy the example code and paste it in a Visual Studio project, or paste it in a file that is named <ph id=\"ph1\">`DataflowReceiveAny.cs`</ph> (<ph id=\"ph2\">`DataflowReceiveAny.vb`</ph> for Visual Basic), and then run the following command in a Developer Command Prompt for Visual Studio window.","source":"Copy the example code and paste it in a Visual Studio project, or paste it in a file that is named `DataflowReceiveAny.cs` (`DataflowReceiveAny.vb` for Visual Basic), and then run the following command in a Developer Command Prompt for Visual Studio window."},{"content":"Visual C#","pos":[3570,3579]},{"pos":[3586,3658],"content":"<bpt id=\"p1\">**</bpt>csc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.cs<ept id=\"p1\">**</ept>","source":"**csc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.cs**"},{"content":"Visual Basic","pos":[3665,3677]},{"pos":[3684,3756],"content":"<bpt id=\"p1\">**</bpt>vbc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.vb<ept id=\"p1\">**</ept>","source":"**vbc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.vb**"},{"pos":[3763,3771],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3775,3864],"content":"<bpt id=\"p1\">[</bpt>Dataflow<ept id=\"p1\">](../../../docs/standard/parallel-programming/dataflow-task-parallel-library.md)</ept>","source":"[Dataflow](../../../docs/standard/parallel-programming/dataflow-task-parallel-library.md)"}]}