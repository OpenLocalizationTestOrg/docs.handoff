{"content":"---\ntitle: \"How to: Create a WindowsPrincipal Object | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"WindowsPrincipal objects, creating\"\n  - \"security [.NET Framework], creating a WindowsPrincipal object\"\n  - \"security [.NET Framework], principals\"\n  - \"principal objects, creating\"\nms.assetid: 56eb10ca-e61d-4ed2-af7a-555fc4c25a25\ncaps.latest.revision: 14\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# How to: Create a WindowsPrincipal Object\nThere are two ways to create a <xref:System.Security.Principal.WindowsPrincipal> object, depending on whether code must repeatedly perform role-based validation or must perform it only once.  \n  \n If code must repeatedly perform role-based validation, the first of the following procedures produces less overhead. When code needs to make role-based validations only once, you can create a <xref:System.Security.Principal.WindowsPrincipal> object by using the second of the following procedures.  \n  \n### To create a WindowsPrincipal object for repeated validation  \n  \n1.  Call the <xref:System.AppDomain.SetPrincipalPolicy%2A> method on the <xref:System.AppDomain> object that is returned by the static <xref:System.AppDomain.CurrentDomain%2A?displayProperty=fullName> property, passing the method a <xref:System.Security.Principal.PrincipalPolicy> enumeration value that indicates what the new policy should be. Supported values are <xref:System.Security.Principal.PrincipalPolicy>, <xref:System.Security.Principal.PrincipalPolicy>, and <xref:System.Security.Principal.PrincipalPolicy>. The following code demonstrates this method call.  \n  \n    ```csharp  \n    AppDomain.CurrentDomain.SetPrincipalPolicy(  \n        PrincipalPolicy.WindowsPrincipal);  \n    ```  \n  \n    ```vb  \n    AppDomain.CurrentDomain.SetPrincipalPolicy( _  \n        PrincipalPolicy.WindowsPrincipal)  \n    ```  \n  \n2.  With the policy set, use the static <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property to retrieve the principal that encapsulates the current Windows user. Because the property return type is <xref:System.Security.Principal.IPrincipal>, you must cast the result to a <xref:System.Security.Principal.WindowsPrincipal> type. The following code initializes a new <xref:System.Security.Principal.WindowsPrincipal> object to the value of the principal associated with the current thread.  \n  \n    ```csharp  \n    WindowsPrincipal MyPrincipal =   \n        (WindowsPrincipal) Thread.CurrentPrincipal;  \n    ```  \n  \n    ```vb  \n    Dim MyPrincipal As WindowsPrincipal = _  \n        CType(Thread.CurrentPrincipal, WindowsPrincipal)   \n    ```  \n  \n3.  When the principal object has been created, you can use one of several methods to validate it.  \n  \n### To create a WindowsPrincipal object for a single validation  \n  \n1.  Initialize a new <xref:System.Security.Principal.WindowsIdentity> object by calling the static <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A?displayProperty=fullName> method, which queries the current Windows account and places information about that account into the newly created identity object. The following code creates a new <xref:System.Security.Principal.WindowsIdentity> object and initializes it to the current authenticated user.  \n  \n    ```csharp  \n    WindowsIdentity MyIdentity = WindowsIdentity.GetCurrent();  \n    ```  \n  \n    ```vb  \n    Dim MyIdentity As WindowsIdentity = WindowsIdentity.GetCurrent()  \n    ```  \n  \n2.  Create a new <xref:System.Security.Principal.WindowsPrincipal> object and pass it the value of the <xref:System.Security.Principal.WindowsIdentity> object created in the preceding step.  \n  \n    ```csharp  \n    WindowsPrincipal MyPrincipal = new WindowsPrincipal(MyIdentity);  \n    ```  \n  \n    ```vb  \n    Dim MyPrincipal As New WindowsPrincipal(MyIdentity)  \n    ```  \n  \n3.  When the principal object has been created, you can use one of several methods to validate it.  \n  \n## See Also  \n [Principal and Identity Objects](../../../docs/standard/security/principal-and-identity-objects.md)","nodes":[{"pos":[12,69],"content":"How to: Create a WindowsPrincipal Object | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Create a WindowsPrincipal Object | Microsoft Docs","pos":[0,57]}]},{"pos":[624,664],"content":"How to: Create a WindowsPrincipal Object","linkify":"How to: Create a WindowsPrincipal Object","nodes":[{"content":"How to: Create a WindowsPrincipal Object","pos":[0,40]}]},{"content":"There are two ways to create a <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> object, depending on whether code must repeatedly perform role-based validation or must perform it only once.","pos":[665,855],"source":"There are two ways to create a <xref:System.Security.Principal.WindowsPrincipal> object, depending on whether code must repeatedly perform role-based validation or must perform it only once."},{"content":"If code must repeatedly perform role-based validation, the first of the following procedures produces less overhead.","pos":[862,978]},{"content":"When code needs to make role-based validations only once, you can create a <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> object by using the second of the following procedures.","pos":[979,1159],"source":" When code needs to make role-based validations only once, you can create a <xref:System.Security.Principal.WindowsPrincipal> object by using the second of the following procedures."},{"pos":[1169,1228],"content":"To create a WindowsPrincipal object for repeated validation","linkify":"To create a WindowsPrincipal object for repeated validation","nodes":[{"content":"To create a WindowsPrincipal object for repeated validation","pos":[0,59]}]},{"content":"Call the <ph id=\"ph1\">&lt;xref:System.AppDomain.SetPrincipalPolicy%2A&gt;</ph> method on the <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph> object that is returned by the static <ph id=\"ph3\">&lt;xref:System.AppDomain.CurrentDomain%2A?displayProperty=fullName&gt;</ph> property, passing the method a <ph id=\"ph4\">&lt;xref:System.Security.Principal.PrincipalPolicy&gt;</ph> enumeration value that indicates what the new policy should be.","pos":[1238,1578],"source":"Call the <xref:System.AppDomain.SetPrincipalPolicy%2A> method on the <xref:System.AppDomain> object that is returned by the static <xref:System.AppDomain.CurrentDomain%2A?displayProperty=fullName> property, passing the method a <xref:System.Security.Principal.PrincipalPolicy> enumeration value that indicates what the new policy should be."},{"content":"Supported values are <ph id=\"ph1\">&lt;xref:System.Security.Principal.PrincipalPolicy&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Principal.PrincipalPolicy&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Security.Principal.PrincipalPolicy&gt;</ph>.","pos":[1579,1753],"source":" Supported values are <xref:System.Security.Principal.PrincipalPolicy>, <xref:System.Security.Principal.PrincipalPolicy>, and <xref:System.Security.Principal.PrincipalPolicy>."},{"content":"The following code demonstrates this method call.","pos":[1754,1803]},{"content":"With the policy set, use the static <ph id=\"ph1\">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;</ph> property to retrieve the principal that encapsulates the current Windows user.","pos":[2058,2248],"source":"With the policy set, use the static <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> property to retrieve the principal that encapsulates the current Windows user."},{"content":"Because the property return type is <ph id=\"ph1\">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph>, you must cast the result to a <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> type.","pos":[2249,2415],"source":" Because the property return type is <xref:System.Security.Principal.IPrincipal>, you must cast the result to a <xref:System.Security.Principal.WindowsPrincipal> type."},{"content":"The following code initializes a new <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> object to the value of the principal associated with the current thread.","pos":[2416,2575],"source":" The following code initializes a new <xref:System.Security.Principal.WindowsPrincipal> object to the value of the principal associated with the current thread."},{"content":"When the principal object has been created, you can use one of several methods to validate it.","pos":[2837,2931]},{"pos":[2941,3000],"content":"To create a WindowsPrincipal object for a single validation","linkify":"To create a WindowsPrincipal object for a single validation","nodes":[{"content":"To create a WindowsPrincipal object for a single validation","pos":[0,59]}]},{"content":"Initialize a new <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object by calling the static <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A?displayProperty=fullName&gt;</ph> method, which queries the current Windows account and places information about that account into the newly created identity object.","pos":[3010,3324],"source":"Initialize a new <xref:System.Security.Principal.WindowsIdentity> object by calling the static <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A?displayProperty=fullName> method, which queries the current Windows account and places information about that account into the newly created identity object."},{"content":"The following code creates a new <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object and initializes it to the current authenticated user.","pos":[3325,3467],"source":" The following code creates a new <xref:System.Security.Principal.WindowsIdentity> object and initializes it to the current authenticated user."},{"content":"Create a new <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> object and pass it the value of the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object created in the preceding step.","pos":[3667,3852],"source":"Create a new <xref:System.Security.Principal.WindowsPrincipal> object and pass it the value of the <xref:System.Security.Principal.WindowsIdentity> object created in the preceding step."},{"content":"When the principal object has been created, you can use one of several methods to validate it.","pos":[4045,4139]},{"pos":[4148,4156],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4160,4259],"content":"<bpt id=\"p1\">[</bpt>Principal and Identity Objects<ept id=\"p1\">](../../../docs/standard/security/principal-and-identity-objects.md)</ept>","source":"[Principal and Identity Objects](../../../docs/standard/security/principal-and-identity-objects.md)"}]}