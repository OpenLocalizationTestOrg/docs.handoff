<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="icorprofilerinfo3-getmoduleinfo2-method.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22c7b55713801d9e9c60cb0c40e7fc8ded93413c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\profiling\icorprofilerinfo3-getmoduleinfo2-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1f58029f32faaed60c55d0c3a80ae637ead1eef</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">497032d63a29a91ca252ecf84848ce6150121772</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICorProfilerInfo3::GetModuleInfo2 Method | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorProfilerInfo3::GetModuleInfo2 Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Given a module ID, returns the file name of the module, the ID of the module's parent assembly, and a bitmask that describes the properties of the module.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in] The ID of the module for which information will be retrieved.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[out] The base address at which the module is loaded.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>[in] The length, in characters, of the <ph id="ph1">`szName`</ph> return buffer.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the total character length of the module's file name that is returned.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>[out] A caller-provided wide character buffer.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When the method returns, this buffer contains the file name of the module.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>[out] A pointer to the ID of the module's parent assembly.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>[out] A bitmask of values from the <bpt id="p1">[</bpt>COR_PRF_MODULE_FLAGS<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-module-flags-enumeration.md)</ept> enumeration that specify the properties of the module.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For dynamic modules, the <ph id="ph1">`szName`</ph> parameter is the metadata name of the module, and the base address is 0 (zero).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The metadata name is the value in the Name column from the Module table inside metadata.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This is also exposed as the <ph id="ph1">&lt;xref:System.Reflection.Module.ScopeName%2A?displayProperty=fullName&gt;</ph> property to managed code, and as the <ph id="ph2">`szName`</ph> parameter of the <bpt id="p1">[</bpt>IMetaDataImport::GetScopeProps<ept id="p1">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-getscopeprops-method.md)</ept> method to unmanaged metadata client code.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Although the <ph id="ph1">`GetModuleInfo2`</ph> method may be called as soon as the module's ID exists, the ID of the parent assembly will not be available until the profiler receives the <bpt id="p1">[</bpt>ICorProfilerCallback::ModuleAttachedToAssembly<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-moduleattachedtoassembly-method.md)</ept> callback.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`GetModuleInfo2`</ph> returns, you must verify that the <ph id="ph2">`szName`</ph> buffer was large enough to contain the full file name of the module.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To do this, compare the value that <ph id="ph1">`pcchName`</ph> points to with the value of the <ph id="ph2">`cchName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`pcchName`</ph> points to a value that is larger than <ph id="ph2">`cchName`</ph>, allocate a larger <ph id="ph3">`szName`</ph> buffer, update <ph id="ph4">`cchName`</ph> with the new, larger size, and call <ph id="ph5">`GetModuleInfo2`</ph> again.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Alternatively, you can first call <ph id="ph1">`GetModuleInfo2`</ph> with a zero-length <ph id="ph2">`szName`</ph> buffer to obtain the correct buffer size.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can then set the buffer size to the value returned in <ph id="ph1">`pcchName`</ph> and call <ph id="ph2">`GetModuleInfo2`</ph> again.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorProf.idl, CorProf.h</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerInfo Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>