{"content":"---\ntitle: \"ImportFile Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink.ImportFile\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ImportFile\"\nhelpviewer_keywords: \n  - \"ImportFile method\"\nms.assetid: bcbe321f-b83a-4e9a-9f10-8d913e244dc9\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ImportFile Method\nImports assemblies and unbound modules.  \n  \n## Syntax  \n  \n```  \nHRESULT ImportFile(  \n    LPCWSTR pszFilename,  \n    LPCWSTR pszTargetName,  \n    BOOL fSmartImport,  \n    mdToken* pImportToken,  \n    IMetaDataAssemblyImport** ppAssemblyScope,  \n    DWORD* pdwCountOfScopes  \n) PURE;  \n```  \n  \n## Parameters  \n `pszFilename`  \n Fully qualified name of file to be imported.  \n  \n `pszTargetName`  \n Optional output file name that can be used to rename the file as it is linked into the assembly.  \n  \n `fSmartImport`  \n If TRUE, ImportTypes is used, otherwise importing must be performed manually.  \n  \n `pImportToken`  \n Pointer to token where a unique file ID will be stored. The file can be an assembly or a file.  \n  \n `ppAssemblyScope`  \n Receives pointer to [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md). Can be NULL if the file is not an assembly.  \n  \n `pdwCountOfScopes`  \n Pointer to the count of files and/or scopes that have been imported.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h  \n  \n## See also\n\n- [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)\n- [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)\n- [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)\n","nodes":[{"pos":[4,328],"embed":true,"restype":"x-metadata","content":"title: \"ImportFile Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink.ImportFile\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ImportFile\"\nhelpviewer_keywords: \n  - \"ImportFile method\"\nms.assetid: bcbe321f-b83a-4e9a-9f10-8d913e244dc9\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ImportFile Method","nodes":[{"pos":[0,17],"content":"ImportFile Method","nodes":[{"content":"ImportFile Method","pos":[0,17]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[335,352],"content":"ImportFile Method","linkify":"ImportFile Method","nodes":[{"content":"ImportFile Method","pos":[0,17]}]},{"content":"Imports assemblies and unbound modules.","pos":[353,392]},{"pos":[401,407],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[652,662],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Fully qualified name of file to be imported.","pos":[683,727]},{"content":"Optional output file name that can be used to rename the file as it is linked into the assembly.","pos":[753,849]},{"content":"If TRUE, ImportTypes is used, otherwise importing must be performed manually.","pos":[874,951]},{"content":"Pointer to token where a unique file ID will be stored.","pos":[976,1031]},{"content":"The file can be an assembly or a file.","pos":[1032,1070]},{"content":"Receives pointer to <bpt id=\"p1\">[</bpt>IMetaDataAssemblyImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)</ept>.","pos":[1098,1242],"source":"Receives pointer to [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)."},{"content":"Can be NULL if the file is not an assembly.","pos":[1243,1286]},{"content":"Pointer to the count of files and/or scopes that have been imported.","pos":[1315,1383]},{"pos":[1392,1404],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1408,1444]},{"pos":[1453,1465],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h","pos":[1469,1485]},{"pos":[1494,1502],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1506,1592],"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept>","source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)"},{"pos":[1595,1683],"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept>","source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)"},{"pos":[1686,1754],"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}