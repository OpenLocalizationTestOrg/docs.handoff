{"content":"---\ntitle: \"How to: Explicitly Throw Exceptions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"exceptions, try/catch blocks\"\n  - \"FileNotFoundException class\"\n  - \"try/catch blocks\"\n  - \"exceptions, throwing\"\n  - \"implicitly throwing exceptions\"\nms.assetid: 72bdd157-caa9-4478-9ee3-cb4500b84528\ncaps.latest.revision: 10\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# How to explicitly throw exceptions\n\nYou can explicitly throw an exception using the `throw` statement. You can also throw a caught exception again using the `throw` statement. It is good coding practice to add information to an exception that is re-thrown to provide more information when debugging.\n\nThe following code example uses a `try`/`catch` block to catch a possible @System.IO.FileNotFoundException. Following the `try` block is a `catch` block that catches the @System.IO.FileNotFoundException and writes a message to the console if the data file is not found. The next statement is the `throw` statement that throws a new @System.IO.FileNotFoundException and adds text information to the exception.\n\n[!code-csharp[Exception.Throwing#1](../../../samples/snippets/csharp/VS_Snippets_CLR/Exception.Throwing/CS/throw.cs#1)]\n[!code-vb[Exception.Throwing#1](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Exception.Throwing/VB/throw.vb#1)]  \n\n## See Also  \n[Exceptions](index.md)","nodes":[{"pos":[4,524],"embed":true,"restype":"x-metadata","content":"title: \"How to: Explicitly Throw Exceptions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"exceptions, try/catch blocks\"\n  - \"FileNotFoundException class\"\n  - \"try/catch blocks\"\n  - \"exceptions, throwing\"\n  - \"implicitly throwing exceptions\"\nms.assetid: 72bdd157-caa9-4478-9ee3-cb4500b84528\ncaps.latest.revision: 10\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"How to: Explicitly Throw Exceptions | Microsoft Docs","nodes":[{"pos":[0,52],"content":"How to: Explicitly Throw Exceptions | Microsoft Docs","nodes":[{"content":"How to: Explicitly Throw Exceptions | Microsoft Docs","pos":[0,52]}]}],"path":["title"]}],"yml":true},{"pos":[531,565],"content":"How to explicitly throw exceptions","linkify":"How to explicitly throw exceptions","nodes":[{"content":"How to explicitly throw exceptions","pos":[0,34]}]},{"content":"You can explicitly throw an exception using the <ph id=\"ph1\">`throw`</ph> statement.","pos":[567,633],"source":"You can explicitly throw an exception using the `throw` statement."},{"content":"You can also throw a caught exception again using the <ph id=\"ph1\">`throw`</ph> statement.","pos":[634,706],"source":" You can also throw a caught exception again using the `throw` statement."},{"content":"It is good coding practice to add information to an exception that is re-thrown to provide more information when debugging.","pos":[707,830]},{"content":"The following code example uses a <ph id=\"ph1\">`try`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`catch`</ph> block to catch a possible <ph id=\"ph4\">@System.IO.FileNotFoundException</ph>.","pos":[832,939],"source":"The following code example uses a `try`/`catch` block to catch a possible @System.IO.FileNotFoundException."},{"content":"Following the <ph id=\"ph1\">`try`</ph> block is a <ph id=\"ph2\">`catch`</ph> block that catches the <ph id=\"ph3\">@System.IO.FileNotFoundException</ph> and writes a message to the console if the data file is not found.","pos":[940,1101],"source":" Following the `try` block is a `catch` block that catches the @System.IO.FileNotFoundException and writes a message to the console if the data file is not found."},{"content":"The next statement is the <ph id=\"ph1\">`throw`</ph> statement that throws a new <ph id=\"ph2\">@System.IO.FileNotFoundException</ph> and adds text information to the exception.","pos":[1102,1240],"source":" The next statement is the `throw` statement that throws a new @System.IO.FileNotFoundException and adds text information to the exception."},{"pos":[1489,1497],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1500,1522],"content":"<bpt id=\"p1\">[</bpt>Exceptions<ept id=\"p1\">](index.md)</ept>","source":"[Exceptions](index.md)"}]}