{"content":"---\ntitle: \"Reading and Writing XML Schemas | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: b5757c4a-ea59-467e-ac62-be2bfe24eb77\ncaps.latest.revision: 2\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Reading and Writing XML Schemas\nThe Schema Object Model (SOM) API can be used to read and write XML Schema definition language (XSD) schemas from files or other sources and build XML schemas in-memory using the classes in the <xref:System.Xml.Schema?displayProperty=fullName> namespace that map to the structures defined in the World Wide Web Consortium (W3C) XML Schema Recommendation.  \n  \n## Reading and Writing XML Schemas  \n The <xref:System.Xml.Schema.XmlSchema> class provides the <xref:System.Xml.Schema.XmlSchema.Read%2A> and <xref:System.Xml.Schema.XmlSchema.Write%2A> methods to read and write XML schemas. The <xref:System.Xml.Schema.XmlSchema.Read%2A> method returns an <xref:System.Xml.Schema.XmlSchema> object representing the XML schema and takes an optional <xref:System.Xml.Schema.ValidationEventHandler> as a parameter to handle schema validation warnings and errors encountered while reading an XML schema.  \n  \n The <xref:System.Xml.Schema.XmlSchema.Write%2A> method writes XML schemas to <xref:System.IO.Stream>, <xref:System.IO.TextWriter> and <xref:System.Xml.XmlWriter> objects and can take an optional <xref:System.Xml.XmlNamespaceManager> object as a parameter. An <xref:System.Xml.XmlNamespaceManager> is used to handle namespaces encountered in an XML schema. For more information about the <xref:System.Xml.XmlNamespaceManager> class, see [Managing Namespaces in an XML Document](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md).  \n  \n The following code example illustrates reading and writing XML schemas from and to a file. The code example takes the `example.xsd` file, reads it into an <xref:System.Xml.Schema.XmlSchema> object using the `static`<xref:System.Xml.Schema.XmlSchema.Read%2A> method, and then writes the file to the console and a new `new.xsd` file. The code example also provides a <xref:System.Xml.Schema.ValidationEventHandler> as a parameter to the `static`<xref:System.Xml.Schema.XmlSchema.Read%2A> method to handle any schema validation warnings or errors encountered while reading the XML schema. If the <xref:System.Xml.Schema.ValidationEventHandler> is not specified (`null`), no warnings or errors are reported.  \n  \n [!code-cpp[XmlSchemaReadWriteExample#1](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaReadWriteExample/CPP/XmlSchemaReadWriteExample.cpp#1)]\n [!code-csharp[XmlSchemaReadWriteExample#1](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaReadWriteExample/CS/XmlSchemaReadWriteExample.cs#1)]\n [!code-vb[XmlSchemaReadWriteExample#1](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaReadWriteExample/VB/XmlSchemaReadWriteExample.vb#1)]  \n  \n The example takes the `example.xsd` as input.  \n  \n```  \n<?xml version=\"1.0\"?>  \n<xs:schema id=\"play\" targetNamespace=\"http://tempuri.org/play.xsd\" elementFormDefault=\"qualified\" xmlns=\"http://tempuri.org/play.xsd\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">  \n    <xs:element name='myShoeSize'>  \n        <xs:complexType>  \n            <xs:simpleContent>  \n                <xs:extension base='xs:decimal'>  \n                    <xs:attribute name='sizing' type='xs:string' />  \n                </xs:extension>  \n            </xs:simpleContent>  \n        </xs:complexType>  \n    </xs:element>  \n</xs:schema>  \n```  \n  \n## See Also  \n [XML Schema Object Model Overview](../../../../docs/standard/data/xml/xml-schema-object-model-overview.md)   \n [Building XML Schemas](../../../../docs/standard/data/xml/building-xml-schemas.md)   \n [Traversing XML Schemas](../../../../docs/standard/data/xml/traversing-xml-schemas.md)   \n [Editing XML Schemas](../../../../docs/standard/data/xml/editing-xml-schemas.md)   \n [Including or Importing XML Schemas](../../../../docs/standard/data/xml/including-or-importing-xml-schemas.md)   \n [XmlSchemaSet for Schema Compilation](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)   \n [Post-Schema Compilation Infoset](../../../../docs/standard/data/xml/post-schema-compilation-infoset.md)   \n [Managing Namespaces in an XML Document](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)","nodes":[{"pos":[4,398],"nodes":[{"content":"Reading and Writing XML Schemas | Microsoft Docs","nodes":[{"pos":[0,48],"content":"Reading and Writing XML Schemas | Microsoft Docs","nodes":[{"content":"Reading and Writing XML Schemas | Microsoft Docs","pos":[0,48]}]}],"pos":[6,57],"yaml":true}],"content":"title: \"Reading and Writing XML Schemas | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: b5757c4a-ea59-467e-ac62-be2bfe24eb77\ncaps.latest.revision: 2\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[405,436],"content":"Reading and Writing XML Schemas","linkify":"Reading and Writing XML Schemas","nodes":[{"content":"Reading and Writing XML Schemas","pos":[0,31]}]},{"content":"The Schema Object Model (SOM) API can be used to read and write XML Schema definition language (XSD) schemas from files or other sources and build XML schemas in-memory using the classes in the <ph id=\"ph1\">&lt;xref:System.Xml.Schema?displayProperty=fullName&gt;</ph> namespace that map to the structures defined in the World Wide Web Consortium (W3C) XML Schema Recommendation.","pos":[437,791],"source":"The Schema Object Model (SOM) API can be used to read and write XML Schema definition language (XSD) schemas from files or other sources and build XML schemas in-memory using the classes in the <xref:System.Xml.Schema?displayProperty=fullName> namespace that map to the structures defined in the World Wide Web Consortium (W3C) XML Schema Recommendation."},{"pos":[800,831],"content":"Reading and Writing XML Schemas","linkify":"Reading and Writing XML Schemas","nodes":[{"content":"Reading and Writing XML Schemas","pos":[0,31]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> class provides the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchema.Read%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Xml.Schema.XmlSchema.Write%2A&gt;</ph> methods to read and write XML schemas.","pos":[835,1022],"source":"The <xref:System.Xml.Schema.XmlSchema> class provides the <xref:System.Xml.Schema.XmlSchema.Read%2A> and <xref:System.Xml.Schema.XmlSchema.Write%2A> methods to read and write XML schemas."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchema.Read%2A&gt;</ph> method returns an <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object representing the XML schema and takes an optional <ph id=\"ph3\">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> as a parameter to handle schema validation warnings and errors encountered while reading an XML schema.","pos":[1023,1331],"source":" The <xref:System.Xml.Schema.XmlSchema.Read%2A> method returns an <xref:System.Xml.Schema.XmlSchema> object representing the XML schema and takes an optional <xref:System.Xml.Schema.ValidationEventHandler> as a parameter to handle schema validation warnings and errors encountered while reading an XML schema."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchema.Write%2A&gt;</ph> method writes XML schemas to <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.IO.TextWriter&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects and can take an optional <ph id=\"ph5\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> object as a parameter.","pos":[1338,1593],"source":"The <xref:System.Xml.Schema.XmlSchema.Write%2A> method writes XML schemas to <xref:System.IO.Stream>, <xref:System.IO.TextWriter> and <xref:System.Xml.XmlWriter> objects and can take an optional <xref:System.Xml.XmlNamespaceManager> object as a parameter."},{"content":"An <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> is used to handle namespaces encountered in an XML schema.","pos":[1594,1693],"source":" An <xref:System.Xml.XmlNamespaceManager> is used to handle namespaces encountered in an XML schema."},{"content":"For more information about the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> class, see <bpt id=\"p1\">[</bpt>Managing Namespaces in an XML Document<ept id=\"p1\">](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)</ept>.","pos":[1694,1893],"source":" For more information about the <xref:System.Xml.XmlNamespaceManager> class, see [Managing Namespaces in an XML Document](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)."},{"content":"The following code example illustrates reading and writing XML schemas from and to a file.","pos":[1900,1990]},{"content":"The code example takes the <ph id=\"ph1\">`example.xsd`</ph> file, reads it into an <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object using the <ph id=\"ph3\">`static`</ph><ph id=\"ph4\">&lt;xref:System.Xml.Schema.XmlSchema.Read%2A&gt;</ph> method, and then writes the file to the console and a new <ph id=\"ph5\">`new.xsd`</ph> file.","pos":[1991,2231],"source":" The code example takes the `example.xsd` file, reads it into an <xref:System.Xml.Schema.XmlSchema> object using the `static`<xref:System.Xml.Schema.XmlSchema.Read%2A> method, and then writes the file to the console and a new `new.xsd` file."},{"content":"The code example also provides a <ph id=\"ph1\">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> as a parameter to the <ph id=\"ph2\">`static`</ph><ph id=\"ph3\">&lt;xref:System.Xml.Schema.XmlSchema.Read%2A&gt;</ph> method to handle any schema validation warnings or errors encountered while reading the XML schema.","pos":[2232,2485],"source":" The code example also provides a <xref:System.Xml.Schema.ValidationEventHandler> as a parameter to the `static`<xref:System.Xml.Schema.XmlSchema.Read%2A> method to handle any schema validation warnings or errors encountered while reading the XML schema."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> is not specified (<ph id=\"ph2\">`null`</ph>), no warnings or errors are reported.","pos":[2486,2603],"source":" If the <xref:System.Xml.Schema.ValidationEventHandler> is not specified (`null`), no warnings or errors are reported."},{"pos":[2610,3082],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>XmlSchemaReadWriteExample#1<ept id=\"p2\">](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaReadWriteExample/CPP/XmlSchemaReadWriteExample.cpp#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>XmlSchemaReadWriteExample#1<ept id=\"p4\">](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaReadWriteExample/CS/XmlSchemaReadWriteExample.cs#1)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>XmlSchemaReadWriteExample#1<ept id=\"p6\">](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaReadWriteExample/VB/XmlSchemaReadWriteExample.vb#1)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[XmlSchemaReadWriteExample#1](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaReadWriteExample/CPP/XmlSchemaReadWriteExample.cpp#1)]\n [!code-csharp[XmlSchemaReadWriteExample#1](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaReadWriteExample/CS/XmlSchemaReadWriteExample.cs#1)]\n [!code-vb[XmlSchemaReadWriteExample#1](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaReadWriteExample/VB/XmlSchemaReadWriteExample.vb#1)]"},{"pos":[3089,3134],"content":"The example takes the <ph id=\"ph1\">`example.xsd`</ph> as input.","source":"The example takes the `example.xsd` as input."},{"pos":[3712,3720],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>XML Schema Object Model Overview<ept id=\"p1\">](../../../../docs/standard/data/xml/xml-schema-object-model-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[3724,3831],"source":"[XML Schema Object Model Overview](../../../../docs/standard/data/xml/xml-schema-object-model-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Building XML Schemas<ept id=\"p1\">](../../../../docs/standard/data/xml/building-xml-schemas.md)</ept><ph id=\"ph1\"> </ph>","pos":[3835,3918],"source":"[Building XML Schemas](../../../../docs/standard/data/xml/building-xml-schemas.md) "},{"content":"<bpt id=\"p1\">[</bpt>Traversing XML Schemas<ept id=\"p1\">](../../../../docs/standard/data/xml/traversing-xml-schemas.md)</ept><ph id=\"ph1\"> </ph>","pos":[3922,4009],"source":"[Traversing XML Schemas](../../../../docs/standard/data/xml/traversing-xml-schemas.md) "},{"content":"<bpt id=\"p1\">[</bpt>Editing XML Schemas<ept id=\"p1\">](../../../../docs/standard/data/xml/editing-xml-schemas.md)</ept><ph id=\"ph1\"> </ph>","pos":[4013,4094],"source":"[Editing XML Schemas](../../../../docs/standard/data/xml/editing-xml-schemas.md) "},{"content":"<bpt id=\"p1\">[</bpt>Including or Importing XML Schemas<ept id=\"p1\">](../../../../docs/standard/data/xml/including-or-importing-xml-schemas.md)</ept><ph id=\"ph1\"> </ph>","pos":[4098,4209],"source":"[Including or Importing XML Schemas](../../../../docs/standard/data/xml/including-or-importing-xml-schemas.md) "},{"content":"<bpt id=\"p1\">[</bpt>XmlSchemaSet for Schema Compilation<ept id=\"p1\">](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)</ept><ph id=\"ph1\"> </ph>","pos":[4213,4326],"source":"[XmlSchemaSet for Schema Compilation](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md) "},{"content":"<bpt id=\"p1\">[</bpt>Post-Schema Compilation Infoset<ept id=\"p1\">](../../../../docs/standard/data/xml/post-schema-compilation-infoset.md)</ept><ph id=\"ph1\"> </ph>","pos":[4330,4435],"source":"[Post-Schema Compilation Infoset](../../../../docs/standard/data/xml/post-schema-compilation-infoset.md) "},{"content":"<bpt id=\"p1\">[</bpt>Managing Namespaces in an XML Document<ept id=\"p1\">](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)</ept>","pos":[4439,4557],"source":"[Managing Namespaces in an XML Document](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)"}]}