{"content":"---\ntitle: \"ICorProfilerCallback::JITCompilationStarted Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerCallback.JITCompilationStarted\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::JITCompilationStarted\"\nhelpviewer_keywords: \n  - \"JITCompilationStarted method [.NET Framework profiling]\"\n  - \"ICorProfilerCallback::JITCompilationStarted method [.NET Framework profiling]\"\nms.assetid: 31782b36-d311-4518-8f45-25f65385af5b\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ICorProfilerCallback::JITCompilationStarted Method\nNotifies the profiler that the just-in-time (JIT) compiler has started to compile a function.  \n  \n## Syntax  \n  \n```  \nHRESULT JITCompilationStarted(  \n    [in] FunctionID functionId,  \n    [in] BOOL       fIsSafeToBlock);  \n```  \n  \n## Parameters  \n `functionId`  \n [in] The ID of the function for which the compilation is starting.  \n  \n `fIsSafeToBlock`  \n [in] A value indicating to the profiler whether blocking will affect the operation of the runtime. The value is `true` if blocking may cause the runtime to wait for the calling thread to return from this callback; otherwise, `false`.  \n  \n Although a value of `true` will not harm the runtime, it can skew the profiling results.  \n  \n## Remarks  \n It is possible to receive more than one pair of `JITCompilationStarted` and [ICorProfilerCallback::JITCompilationFinished](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitcompilationfinished-method.md) calls for each function because of the way the runtime handles class constructors. For example, the runtime starts to JIT-compile method A, but the class constructor for class B needs to be run. Therefore, the runtime JIT-compiles the constructor for class B and runs it. While the constructor is running, it makes a call to method A, which causes method A to be JIT-compiled again. In this scenario, the first JIT compilation of method A is halted. However, both attempts to JIT-compile method A are reported with JIT-compilation events. If the profiler is going to replace Microsoft intermediate language (MSIL) code for method A by calling the [ICorProfilerInfo::SetILFunctionBody](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilfunctionbody-method.md) method, it must do so for both `JITCompilationStarted` events, but it may use the same MSIL block for both.  \n  \n Profilers must support the sequence of JIT callbacks in cases where two threads are simultaneously making callbacks. For example, thread A calls `JITCompilationStarted`. However, before thread A calls `JITCompilationFinished`, thread B calls [ICorProfilerCallback::ExceptionSearchFunctionEnter](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionsearchfunctionenter-method.md) with the function ID from thread A's `JITCompilationStarted` callback. It might appear that the function ID should not yet be valid because a call to `JITCompilationFinished` had not yet been received by the profiler. However, in a case like this one, the function ID is valid.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)\n- [JITCompilationFinished Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitcompilationfinished-method.md)\n","nodes":[{"pos":[4,544],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerCallback::JITCompilationStarted Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerCallback.JITCompilationStarted\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::JITCompilationStarted\"\nhelpviewer_keywords: \n  - \"JITCompilationStarted method [.NET Framework profiling]\"\n  - \"ICorProfilerCallback::JITCompilationStarted method [.NET Framework profiling]\"\nms.assetid: 31782b36-d311-4518-8f45-25f65385af5b\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ICorProfilerCallback::JITCompilationStarted Method","nodes":[{"pos":[0,50],"content":"ICorProfilerCallback::JITCompilationStarted Method","nodes":[{"content":"ICorProfilerCallback::JITCompilationStarted Method","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[551,601],"content":"ICorProfilerCallback::JITCompilationStarted Method","linkify":"ICorProfilerCallback::JITCompilationStarted Method","nodes":[{"content":"ICorProfilerCallback::JITCompilationStarted Method","pos":[0,50]}]},{"content":"Notifies the profiler that the just-in-time (JIT) compiler has started to compile a function.","pos":[602,695]},{"pos":[704,710],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[840,850],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The ID of the function for which the compilation is starting.","pos":[870,936]},{"content":"[in] A value indicating to the profiler whether blocking will affect the operation of the runtime.","pos":[963,1061]},{"content":"The value is <ph id=\"ph1\">`true`</ph> if blocking may cause the runtime to wait for the calling thread to return from this callback; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[1062,1196],"source":" The value is `true` if blocking may cause the runtime to wait for the calling thread to return from this callback; otherwise, `false`."},{"pos":[1203,1291],"content":"Although a value of <ph id=\"ph1\">`true`</ph> will not harm the runtime, it can skew the profiling results.","source":"Although a value of `true` will not harm the runtime, it can skew the profiling results."},{"pos":[1300,1307],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"It is possible to receive more than one pair of <ph id=\"ph1\">`JITCompilationStarted`</ph> and <bpt id=\"p1\">[</bpt>ICorProfilerCallback::JITCompilationFinished<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitcompilationfinished-method.md)</ept> calls for each function because of the way the runtime handles class constructors.","pos":[1311,1622],"source":"It is possible to receive more than one pair of `JITCompilationStarted` and [ICorProfilerCallback::JITCompilationFinished](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitcompilationfinished-method.md) calls for each function because of the way the runtime handles class constructors."},{"content":"For example, the runtime starts to JIT-compile method A, but the class constructor for class B needs to be run.","pos":[1623,1734]},{"content":"Therefore, the runtime JIT-compiles the constructor for class B and runs it.","pos":[1735,1811]},{"content":"While the constructor is running, it makes a call to method A, which causes method A to be JIT-compiled again.","pos":[1812,1922]},{"content":"In this scenario, the first JIT compilation of method A is halted.","pos":[1923,1989]},{"content":"However, both attempts to JIT-compile method A are reported with JIT-compilation events.","pos":[1990,2078]},{"content":"If the profiler is going to replace Microsoft intermediate language (MSIL) code for method A by calling the <bpt id=\"p1\">[</bpt>ICorProfilerInfo::SetILFunctionBody<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilfunctionbody-method.md)</ept> method, it must do so for both <ph id=\"ph1\">`JITCompilationStarted`</ph> events, but it may use the same MSIL block for both.","pos":[2079,2429],"source":" If the profiler is going to replace Microsoft intermediate language (MSIL) code for method A by calling the [ICorProfilerInfo::SetILFunctionBody](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilfunctionbody-method.md) method, it must do so for both `JITCompilationStarted` events, but it may use the same MSIL block for both."},{"content":"Profilers must support the sequence of JIT callbacks in cases where two threads are simultaneously making callbacks.","pos":[2436,2552]},{"content":"For example, thread A calls <ph id=\"ph1\">`JITCompilationStarted`</ph>.","pos":[2553,2605],"source":" For example, thread A calls `JITCompilationStarted`."},{"content":"However, before thread A calls <ph id=\"ph1\">`JITCompilationFinished`</ph>, thread B calls <bpt id=\"p1\">[</bpt>ICorProfilerCallback::ExceptionSearchFunctionEnter<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionsearchfunctionenter-method.md)</ept> with the function ID from thread A's <ph id=\"ph2\">`JITCompilationStarted`</ph> callback.","pos":[2606,2913],"source":" However, before thread A calls `JITCompilationFinished`, thread B calls [ICorProfilerCallback::ExceptionSearchFunctionEnter](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-exceptionsearchfunctionenter-method.md) with the function ID from thread A's `JITCompilationStarted` callback."},{"content":"It might appear that the function ID should not yet be valid because a call to <ph id=\"ph1\">`JITCompilationFinished`</ph> had not yet been received by the profiler.","pos":[2914,3060],"source":" It might appear that the function ID should not yet be valid because a call to `JITCompilationFinished` had not yet been received by the profiler."},{"content":"However, in a case like this one, the function ID is valid.","pos":[3061,3120]},{"pos":[3129,3141],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3145,3249],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3256,3290],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[3297,3322],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3329,3437],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[3446,3454],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3458,3576],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerCallback Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)</ept>","source":"[ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)"},{"pos":[3579,3716],"content":"<bpt id=\"p1\">[</bpt>JITCompilationFinished Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitcompilationfinished-method.md)</ept>","source":"[JITCompilationFinished Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitcompilationfinished-method.md)"}]}