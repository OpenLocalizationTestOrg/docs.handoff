{"content":"---\ntitle: \"|= operator - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"|=_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"OR assignment operator (|=) [C#]\"\n  - \"|= operator (OR assignment) [C#]\"\nms.assetid: 8315b8cf-dd15-402f-92f0-c7db931696ca\n---\n# |= operator (C# Reference)\n\nThe OR assignment operator.\n\n## Remarks\n\nAn expression using the `|=` assignment operator, such as\n\n```csharp\nx |= y\n```\n\nis equivalent to\n\n```csharp\nx = x | y\n```\n\nexcept that `x` is only evaluated once. The [&#124; operator](or-operator.md) performs a bitwise logical OR operation on integral operands and logical OR on bool operands.\n\nThe `|=` operator cannot be overloaded directly, but user-defined types can overload the [&#124; operator](or-operator.md) (see [operator](../keywords/operator.md)).\n\n## Example\n\n[!code-csharp[csRefOperators#10](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefOperators/CS/csrefOperators.cs#10)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# operators](index.md)","nodes":[{"pos":[4,265],"embed":true,"restype":"x-metadata","content":"title: \"|= operator - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"|=_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"OR assignment operator (|=) [C#]\"\n  - \"|= operator (OR assignment) [C#]\"\nms.assetid: 8315b8cf-dd15-402f-92f0-c7db931696ca","nodes":[{"content":"|= operator - C# Reference","nodes":[{"pos":[0,26],"content":"|= operator - C# Reference","nodes":[{"content":"|= operator - C# Reference","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[272,298],"content":"|= operator (C# Reference)","linkify":"|= operator (C# Reference)","nodes":[{"content":"|= operator (C# Reference)","pos":[0,26]}]},{"content":"The OR assignment operator.","pos":[300,327]},{"pos":[332,339],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[341,398],"content":"An expression using the <ph id=\"ph1\">`|=`</ph> assignment operator, such as","source":"An expression using the `|=` assignment operator, such as"},{"content":"is equivalent to","pos":[422,438]},{"content":"except that <ph id=\"ph1\">`x`</ph> is only evaluated once.","pos":[465,504],"source":"except that `x` is only evaluated once."},{"content":"The <bpt id=\"p1\">[</bpt>&amp;#124; operator<ept id=\"p1\">](or-operator.md)</ept> performs a bitwise logical OR operation on integral operands and logical OR on bool operands.","pos":[505,636],"source":" The [&#124; operator](or-operator.md) performs a bitwise logical OR operation on integral operands and logical OR on bool operands."},{"pos":[638,803],"content":"The <ph id=\"ph1\">`|=`</ph> operator cannot be overloaded directly, but user-defined types can overload the <bpt id=\"p1\">[</bpt>&amp;#124; operator<ept id=\"p1\">](or-operator.md)</ept> (see <bpt id=\"p2\">[</bpt>operator<ept id=\"p2\">](../keywords/operator.md)</ept>).","source":"The `|=` operator cannot be overloaded directly, but user-defined types can overload the [&#124; operator](or-operator.md) (see [operator](../keywords/operator.md))."},{"pos":[808,815],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[942,950],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[954,981],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[984,1040],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1043,1067],"content":"<bpt id=\"p1\">[</bpt>C# operators<ept id=\"p1\">](index.md)</ept>","source":"[C# operators](index.md)"}]}