{"content":"---\ntitle: \"ISymUnmanagedAsyncMethodPropertiesWriter Interface | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: caa71820-8058-4b6a-93a2-25ee757d92d3\ncaps.latest.revision: 6\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ISymUnmanagedAsyncMethodPropertiesWriter Interface\nAllows you to define optional async method information for each method symbol. Always use with an opened method; that is, between calls to the [OpenMethod Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-openmethod-method.md) and the [CloseMethod Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-closemethod-method.md).  \n  \n## Syntax  \n  \n```idl  \n[object,uuid(FC073774-1739-4232-BD56-A027294BEC15),pointer_default(unique)]interface ISymUnmanagedAsyncMethodPropertiesWriter : IUnknown  \n```  \n  \n## Methods  \n This interface contains the following methods:  \n  \n|Method|Description|  \n|------------|-----------------|  \n|[DefineAsyncStepInfo Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedasyncmethodpropertieswriter-defineasyncstepinfo-method.md)|Define a group of async await operations in the current method.<br /><br /> Each yield offset matches an await's return instruction, identifying a potential yield. Each `breakpointMethod`/`breakpointOffset` pair identifies where the asynchronous operation will resume; it may be in a different method.|  \n|[DefineCatchHandlerILOffset Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedasyncmethodpropertieswriter-definecatchhandleriloffset-method.md)|Sets the IL offset for the compiler-generated catch handler that wraps an async method.<br /><br /> The IL offset of the generated catch is used by the debugger to handle the catch as if it were non-user code, even though it may occur in a user code method. In particular, it is used in response to a **CatchHandlerFound** exception event.|  \n|[DefineKickoffMethod Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedasyncmethodpropertieswriter-definekickoffmethod-method.md)|Sets the starting method that initiates the async operation.|  \n  \n## Requirements  \n **Header:** CorSym.idl, CorSym.h  \n  \n## See Also  \n [Diagnostics Symbol Store Interfaces](../../../../docs/framework/unmanaged-api/diagnostics/diagnostics-symbol-store-interfaces.md)","nodes":[{"pos":[12,79],"content":"ISymUnmanagedAsyncMethodPropertiesWriter Interface | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ISymUnmanagedAsyncMethodPropertiesWriter Interface | Microsoft Docs","pos":[0,67]}]},{"pos":[406,456],"content":"ISymUnmanagedAsyncMethodPropertiesWriter Interface","linkify":"ISymUnmanagedAsyncMethodPropertiesWriter Interface","nodes":[{"content":"ISymUnmanagedAsyncMethodPropertiesWriter Interface","pos":[0,50]}]},{"content":"Allows you to define optional async method information for each method symbol.","pos":[457,535]},{"content":"Always use with an opened method; that is, between calls to the <bpt id=\"p1\">[</bpt>OpenMethod Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-openmethod-method.md)</ept> and the <bpt id=\"p2\">[</bpt>CloseMethod Method<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-closemethod-method.md)</ept>.","pos":[536,840],"source":" Always use with an opened method; that is, between calls to the [OpenMethod Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-openmethod-method.md) and the [CloseMethod Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-closemethod-method.md)."},{"pos":[849,855],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1021,1028],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"This interface contains the following methods:","pos":[1032,1078]},{"content":"Method","pos":[1085,1091]},{"content":"Description","pos":[1092,1103]},{"pos":[1143,1296],"content":"<bpt id=\"p1\">[</bpt>DefineAsyncStepInfo Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedasyncmethodpropertieswriter-defineasyncstepinfo-method.md)</ept>","source":"[DefineAsyncStepInfo Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedasyncmethodpropertieswriter-defineasyncstepinfo-method.md)"},{"content":"Define a group of async await operations in the current method.","pos":[1297,1360]},{"content":"Each yield offset matches an await's return instruction, identifying a potential yield.","pos":[1373,1460]},{"content":"Each <ph id=\"ph1\">`breakpointMethod`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`breakpointOffset`</ph> pair identifies where the asynchronous operation will resume; it may be in a different method.","pos":[1461,1598],"source":" Each `breakpointMethod`/`breakpointOffset` pair identifies where the asynchronous operation will resume; it may be in a different method."},{"pos":[1603,1770],"content":"<bpt id=\"p1\">[</bpt>DefineCatchHandlerILOffset Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedasyncmethodpropertieswriter-definecatchhandleriloffset-method.md)</ept>","source":"[DefineCatchHandlerILOffset Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedasyncmethodpropertieswriter-definecatchhandleriloffset-method.md)"},{"content":"Sets the IL offset for the compiler-generated catch handler that wraps an async method.","pos":[1771,1858]},{"content":"The IL offset of the generated catch is used by the debugger to handle the catch as if it were non-user code, even though it may occur in a user code method.","pos":[1871,2028]},{"content":"In particular, it is used in response to a <bpt id=\"p1\">**</bpt>CatchHandlerFound<ept id=\"p1\">**</ept> exception event.","pos":[2029,2110],"source":" In particular, it is used in response to a **CatchHandlerFound** exception event."},{"pos":[2115,2268],"content":"<bpt id=\"p1\">[</bpt>DefineKickoffMethod Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedasyncmethodpropertieswriter-definekickoffmethod-method.md)</ept>","source":"[DefineKickoffMethod Method](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedasyncmethodpropertieswriter-definekickoffmethod-method.md)"},{"content":"Sets the starting method that initiates the async operation.","pos":[2269,2329]},{"pos":[2339,2351],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2355,2387],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl, CorSym.h","source":"**Header:** CorSym.idl, CorSym.h"},{"pos":[2396,2404],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2408,2538],"content":"<bpt id=\"p1\">[</bpt>Diagnostics Symbol Store Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/diagnostics-symbol-store-interfaces.md)</ept>","source":"[Diagnostics Symbol Store Interfaces](../../../../docs/framework/unmanaged-api/diagnostics/diagnostics-symbol-store-interfaces.md)"}]}