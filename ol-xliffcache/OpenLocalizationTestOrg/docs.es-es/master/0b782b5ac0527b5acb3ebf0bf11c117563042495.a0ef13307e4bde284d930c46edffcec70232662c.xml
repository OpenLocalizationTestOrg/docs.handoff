{"content":"---\ntitle: \"303 - UserDefinedInformationEventOccured\"\nms.date: \"03/30/2017\"\nms.assetid: 5ed5acaf-3755-4417-92c4-4ebc8e854ca1\n---\n# 303 - UserDefinedInformationEventOccured\n## Properties  \n  \n|||  \n|-|-|  \n|ID|303|  \n|Keywords|Troubleshooting, HealthMonitoring, UserEvents, ServiceModel, EndToEndMonitoring|  \n|Level|Information|  \n|Channel|Microsoft-Windows-Application Server-Applications/Analytic|  \n  \n## Description  \n This event is emitted from user code. Developers can emit this event when a custom-defined informational event occurs in their service. This can be done using the <xref:System.Diagnostics.Eventing> APIs. Additionally, there is a WCF sample that wraps that API and demonstrates how to properly emit this event.  \n  \n## Message  \n Name:'%1', Reference:'%2', Payload:%3  \n  \n## Details  \n  \n|Data Item Name|Data Item Type|Description|  \n|--------------------|--------------------|-----------------|  \n|Name|`xs:string`|The user-defined name of the event|  \n|HostReference|`xs:string`|For Web hosted services, this field uniquely identifies the service in the Web hierarchy. Its format is defined as 'Web Site Name Application Virtual Path&#124;Service Virtual Path&#124;ServiceName'. Example: 'Default Web Site/CalculatorApplication&#124;/CalculatorService.svc&#124;CalculatorService'.|  \n|Payload|`xs:string`|The user-defined payload of the event.|\n","nodes":[{"pos":[4,124],"embed":true,"restype":"x-metadata","content":"title: \"303 - UserDefinedInformationEventOccured\"\nms.date: \"03/30/2017\"\nms.assetid: 5ed5acaf-3755-4417-92c4-4ebc8e854ca1","nodes":[{"content":"303 - UserDefinedInformationEventOccured","nodes":[{"pos":[0,40],"content":"303 - UserDefinedInformationEventOccured","nodes":[{"content":"303 - UserDefinedInformationEventOccured","pos":[0,40]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[131,171],"content":"303 - UserDefinedInformationEventOccured","linkify":"303 - UserDefinedInformationEventOccured","nodes":[{"content":"303 - UserDefinedInformationEventOccured","pos":[0,40]}]},{"pos":[175,185],"content":"Properties","linkify":"Properties","nodes":[{"content":"Properties","pos":[0,10]}]},{"content":"ID","pos":[206,208]},{"content":"303","pos":[209,212]},{"content":"Keywords","pos":[217,225]},{"content":"Troubleshooting, HealthMonitoring, UserEvents, ServiceModel, EndToEndMonitoring","pos":[226,305]},{"content":"Level","pos":[310,315]},{"content":"Information","pos":[316,327]},{"content":"Channel","pos":[332,339]},{"content":"Microsoft-Windows-Application Server-Applications/Analytic","pos":[340,398]},{"pos":[408,419],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"content":"This event is emitted from user code.","pos":[423,460]},{"content":"Developers can emit this event when a custom-defined informational event occurs in their service.","pos":[461,558]},{"content":"This can be done using the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Eventing&gt;</ph> APIs.","pos":[559,626],"source":" This can be done using the <xref:System.Diagnostics.Eventing> APIs."},{"content":"Additionally, there is a WCF sample that wraps that API and demonstrates how to properly emit this event.","pos":[627,732]},{"pos":[741,748],"content":"Message","linkify":"Message","nodes":[{"content":"Message","pos":[0,7]}]},{"content":"Name:'%1', Reference:'%2', Payload:%3","pos":[752,789]},{"pos":[798,805],"content":"Details","linkify":"Details","nodes":[{"content":"Details","pos":[0,7]}]},{"content":"Data Item Name","pos":[812,826]},{"content":"Data Item Type","pos":[827,841]},{"content":"Description","pos":[842,853]},{"content":"Name","pos":[922,926]},{"content":"The user-defined name of the event","pos":[939,973]},{"content":"HostReference","pos":[978,991]},{"content":"For Web hosted services, this field uniquely identifies the service in the Web hierarchy.","pos":[1004,1093]},{"content":"Its format is defined as 'Web Site Name Application Virtual Path&amp;#124;Service Virtual Path&amp;#124;ServiceName'.","pos":[1094,1203],"source":" Its format is defined as 'Web Site Name Application Virtual Path&#124;Service Virtual Path&#124;ServiceName'."},{"content":"Example: 'Default Web Site/CalculatorApplication&amp;#124;/CalculatorService.svc&amp;#124;CalculatorService'.","pos":[1204,1305],"source":" Example: 'Default Web Site/CalculatorApplication&#124;/CalculatorService.svc&#124;CalculatorService'."},{"content":"Payload","pos":[1310,1317]},{"content":"The user-defined payload of the event.","pos":[1330,1368]}]}