{"content":"---\ntitle: \"Adding Online and Offline Status | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 05e5f51d-81b6-4c17-b364-9dda447a5fce\ncaps.latest.revision: 5\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Adding Online and Offline Status\nIn many cases, it is important for an application to monitor specific details about the status of a Peer Channel connection. You can obtain this information by calling the `GetProperty` method on an implementation of the <xref:System.ServiceModel.IOnlineStatus> interface. An object with an implementation of this interface can monitor connection status or register for event handlers, such as `OnOnline` and `OnOffline`, and react immediately as changes to online status occur.  \n  \n In the Peer Channel infrastructure, a client is considered to be online if it is connected to at least one other peer and offline otherwise. This can be particularly useful in both debugging a developing applications or displaying detailed information to the end user.  \n  \n> [!NOTE]\n>  An online event handler should first ensure that the node is open before sending any messages.  \n  \n## See Also  \n [Building a Peer Channel Application](../../../../docs/framework/wcf/feature-details/building-a-peer-channel-application.md)","nodes":[{"pos":[12,61],"content":"Adding Online and Offline Status | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Adding Online and Offline Status | Microsoft Docs","pos":[0,49]}]},{"pos":[359,391],"content":"Adding Online and Offline Status","linkify":"Adding Online and Offline Status","nodes":[{"content":"Adding Online and Offline Status","pos":[0,32]}]},{"content":"In many cases, it is important for an application to monitor specific details about the status of a Peer Channel connection.","pos":[392,516]},{"content":"You can obtain this information by calling the <ph id=\"ph1\">`GetProperty`</ph> method on an implementation of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.IOnlineStatus&gt;</ph> interface.","pos":[517,664],"source":" You can obtain this information by calling the `GetProperty` method on an implementation of the <xref:System.ServiceModel.IOnlineStatus> interface."},{"content":"An object with an implementation of this interface can monitor connection status or register for event handlers, such as <ph id=\"ph1\">`OnOnline`</ph> and <ph id=\"ph2\">`OnOffline`</ph>, and react immediately as changes to online status occur.","pos":[665,870],"source":" An object with an implementation of this interface can monitor connection status or register for event handlers, such as `OnOnline` and `OnOffline`, and react immediately as changes to online status occur."},{"content":"In the Peer Channel infrastructure, a client is considered to be online if it is connected to at least one other peer and offline otherwise.","pos":[877,1017]},{"content":"This can be particularly useful in both debugging a developing applications or displaying detailed information to the end user.","pos":[1018,1145]},{"pos":[1153,1258],"content":"[!NOTE]\n An online event handler should first ensure that the node is open before sending any messages.","leadings":["","> "],"nodes":[{"content":"An online event handler should first ensure that the node is open before sending any messages.","pos":[9,103]}]},{"pos":[1267,1275],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1279,1403],"content":"<bpt id=\"p1\">[</bpt>Building a Peer Channel Application<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/building-a-peer-channel-application.md)</ept>","source":"[Building a Peer Channel Application](../../../../docs/framework/wcf/feature-details/building-a-peer-channel-application.md)"}]}