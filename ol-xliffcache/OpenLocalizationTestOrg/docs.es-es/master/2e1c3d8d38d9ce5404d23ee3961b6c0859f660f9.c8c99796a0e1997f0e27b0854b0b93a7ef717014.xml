{"content":"---\ntitle: \"How to: Obtain the Value of a Pointer Variable (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"pointer expressions [C#], indirection\"\n  - \"pointers [C#], indirection\"\n  - \"variables [C#], pointers\"\n  - \"pointers [C#], * operator\"\nms.assetid: 460a813a-4995-44c1-9de2-213b91dc7668\ncaps.latest.revision: 17\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Obtain the Value of a Pointer Variable (C# Programming Guide)\nUse the pointer indirection operator to obtain the variable at the location pointed to by a pointer. The expression takes the following form, where `p` is a pointer type:  \n  \n```  \n*p;  \n```  \n  \n You cannot use the unary indirection operator on an expression of any type other than the pointer type. Also, you cannot apply it to a [void](../../../csharp/language-reference/keywords/void.md) pointer.  \n  \n When you apply the indirection operator to a [null](../../../csharp/language-reference/keywords/null.md) pointer, the result depends on the implementation.  \n  \n## Example  \n In the following example, a variable of the type `char` is accessed by using pointers of different types. Note that the address of `theChar` will vary from run to run, because the physical address allocated to a variable can change.  \n  \n [!code-cs[csProgGuidePointers#5](../../../csharp/programming-guide/unsafe-code-pointers/codesnippet/CSharp/how-to-obtain-the-value-of-a-pointer-variable_1.cs)]  \n  \n [!code-cs[csProgGuidePointers#6](../../../csharp/programming-guide/unsafe-code-pointers/codesnippet/CSharp/how-to-obtain-the-value-of-a-pointer-variable_2.cs)]  \n  \n **Value of theChar = Z**   \n**Address of theChar = 12F718**  \n**Value of pChar = Z**   \n**Value of pInt = 90**    \n## See Also  \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Pointer Expressions](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md)   \n [Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)   \n [Types](../../../csharp/language-reference/keywords/types.md)   \n [unsafe](../../../csharp/language-reference/keywords/unsafe.md)   \n [fixed Statement](../../../csharp/language-reference/keywords/fixed-statement.md)   \n [stackalloc](../../../csharp/language-reference/keywords/stackalloc.md)","nodes":[{"pos":[12,98],"content":"How to: Obtain the Value of a Pointer Variable (C# Programming Guide) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Obtain the Value of a Pointer Variable (C# Programming Guide) | Microsoft Docs","pos":[0,86]}]},{"pos":[688,757],"content":"How to: Obtain the Value of a Pointer Variable (C# Programming Guide)","linkify":"How to: Obtain the Value of a Pointer Variable (C# Programming Guide)","nodes":[{"content":"How to: Obtain the Value of a Pointer Variable (C# Programming Guide)","pos":[0,69]}]},{"content":"Use the pointer indirection operator to obtain the variable at the location pointed to by a pointer.","pos":[758,858]},{"content":"The expression takes the following form, where <ph id=\"ph1\">`p`</ph> is a pointer type:","pos":[859,928],"source":" The expression takes the following form, where `p` is a pointer type:"},{"content":"You cannot use the unary indirection operator on an expression of any type other than the pointer type.","pos":[956,1059]},{"content":"Also, you cannot apply it to a <bpt id=\"p1\">[</bpt>void<ept id=\"p1\">](../../../csharp/language-reference/keywords/void.md)</ept> pointer.","pos":[1060,1159],"source":" Also, you cannot apply it to a [void](../../../csharp/language-reference/keywords/void.md) pointer."},{"pos":[1166,1321],"content":"When you apply the indirection operator to a <bpt id=\"p1\">[</bpt>null<ept id=\"p1\">](../../../csharp/language-reference/keywords/null.md)</ept> pointer, the result depends on the implementation.","source":"When you apply the indirection operator to a [null](../../../csharp/language-reference/keywords/null.md) pointer, the result depends on the implementation."},{"pos":[1330,1337],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In the following example, a variable of the type <ph id=\"ph1\">`char`</ph> is accessed by using pointers of different types.","pos":[1341,1446],"source":"In the following example, a variable of the type `char` is accessed by using pointers of different types."},{"content":"Note that the address of <ph id=\"ph1\">`theChar`</ph> will vary from run to run, because the physical address allocated to a variable can change.","pos":[1447,1573],"source":" Note that the address of `theChar` will vary from run to run, because the physical address allocated to a variable can change."},{"pos":[1580,1739],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuidePointers#5<ept id=\"p2\">](../../../csharp/programming-guide/unsafe-code-pointers/codesnippet/CSharp/how-to-obtain-the-value-of-a-pointer-variable_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuidePointers#5](../../../csharp/programming-guide/unsafe-code-pointers/codesnippet/CSharp/how-to-obtain-the-value-of-a-pointer-variable_1.cs)]"},{"pos":[1746,1905],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuidePointers#6<ept id=\"p2\">](../../../csharp/programming-guide/unsafe-code-pointers/codesnippet/CSharp/how-to-obtain-the-value-of-a-pointer-variable_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuidePointers#6](../../../csharp/programming-guide/unsafe-code-pointers/codesnippet/CSharp/how-to-obtain-the-value-of-a-pointer-variable_2.cs)]"},{"content":"<bpt id=\"p1\">**</bpt>Value of theChar = Z<ept id=\"p1\">**</ept><ph id=\"ph1\"> </ph>","pos":[1912,1937],"source":"**Value of theChar = Z** "},{"content":"<bpt id=\"p1\">**</bpt>Address of theChar = 12F718<ept id=\"p1\">**</ept>","pos":[1940,1971],"source":"**Address of theChar = 12F718**"},{"content":"<bpt id=\"p1\">**</bpt>Value of pChar = Z<ept id=\"p1\">**</ept><ph id=\"ph1\"> </ph>","pos":[1974,1997],"source":"**Value of pChar = Z** "},{"content":"<bpt id=\"p1\">**</bpt>Value of pInt = 90<ept id=\"p1\">**</ept>","pos":[2000,2022],"source":"**Value of pInt = 90**"},{"pos":[2030,2038],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2042,2109],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Pointer Expressions<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md)</ept><ph id=\"ph1\"> </ph>","pos":[2112,2214],"source":" [Pointer Expressions](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Pointer types<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2217,2307],"source":" [Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2310,2373],"source":" [Types](../../../csharp/language-reference/keywords/types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>unsafe<ept id=\"p1\">](../../../csharp/language-reference/keywords/unsafe.md)</ept><ph id=\"ph1\"> </ph>","pos":[2376,2441],"source":" [unsafe](../../../csharp/language-reference/keywords/unsafe.md) "},{"content":"<bpt id=\"p1\"> [</bpt>fixed Statement<ept id=\"p1\">](../../../csharp/language-reference/keywords/fixed-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2444,2527],"source":" [fixed Statement](../../../csharp/language-reference/keywords/fixed-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>stackalloc<ept id=\"p1\">](../../../csharp/language-reference/keywords/stackalloc.md)</ept>","pos":[2530,2602],"source":" [stackalloc](../../../csharp/language-reference/keywords/stackalloc.md)"}]}