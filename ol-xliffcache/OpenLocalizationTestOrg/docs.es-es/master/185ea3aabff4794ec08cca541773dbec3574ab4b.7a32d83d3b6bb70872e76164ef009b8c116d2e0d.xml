{"content":"---\ntitle: \"| operator - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"|_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"bitwise OR operator [C#]\"\n  - \"| operator [C#]\"\n  - \"binary operator (|) [C#]\"\nms.assetid: 82d6bb78-54c8-40bf-b679-531180ddaf70\n---\n# | operator (C# Reference)\n\nBinary `|` operators are predefined for the integral types and `bool`. For integral types, `|` computes the bitwise OR of its operands. For `bool` operands, `|` computes the logical OR of its operands; that is, the result is `false` if and only if both its operands are `false`.\n\n## Remarks\n\nThe binary `|` operator evaluates both operands regardless of the first one's value, in contrast to the [conditional-OR operator](conditional-or-operator.md) `||`.\n\nUser-defined types can overload the `|` operator (see [operator](../keywords/operator.md)).\n\n## Example\n\n [!code-csharp[csRefOperators#31](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefOperators/CS/csrefOperators.cs#31)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# operators](index.md)","nodes":[{"pos":[4,269],"embed":true,"restype":"x-metadata","content":"title: \"| operator - C# Reference\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"|_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"bitwise OR operator [C#]\"\n  - \"| operator [C#]\"\n  - \"binary operator (|) [C#]\"\nms.assetid: 82d6bb78-54c8-40bf-b679-531180ddaf70","nodes":[{"content":"| operator - C# Reference","nodes":[{"pos":[0,25],"content":"| operator - C# Reference","nodes":[{"content":"| operator - C# Reference","pos":[0,25]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[276,301],"content":"| operator (C# Reference)","linkify":"| operator (C# Reference)","nodes":[{"content":"| operator (C# Reference)","pos":[0,25]}]},{"content":"Binary <ph id=\"ph1\">`|`</ph> operators are predefined for the integral types and <ph id=\"ph2\">`bool`</ph>.","pos":[303,373],"source":"Binary `|` operators are predefined for the integral types and `bool`."},{"content":"For integral types, <ph id=\"ph1\">`|`</ph> computes the bitwise OR of its operands.","pos":[374,438],"source":" For integral types, `|` computes the bitwise OR of its operands."},{"content":"For <ph id=\"ph1\">`bool`</ph> operands, <ph id=\"ph2\">`|`</ph> computes the logical OR of its operands; that is, the result is <ph id=\"ph3\">`false`</ph> if and only if both its operands are <ph id=\"ph4\">`false`</ph>.","pos":[439,581],"source":" For `bool` operands, `|` computes the logical OR of its operands; that is, the result is `false` if and only if both its operands are `false`."},{"pos":[586,593],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[595,758],"content":"The binary <ph id=\"ph1\">`|`</ph> operator evaluates both operands regardless of the first one's value, in contrast to the <bpt id=\"p1\">[</bpt>conditional-OR operator<ept id=\"p1\">](conditional-or-operator.md)</ept> <ph id=\"ph2\">`||`</ph>.","source":"The binary `|` operator evaluates both operands regardless of the first one's value, in contrast to the [conditional-OR operator](conditional-or-operator.md) `||`."},{"pos":[760,851],"content":"User-defined types can overload the <ph id=\"ph1\">`|`</ph> operator (see <bpt id=\"p1\">[</bpt>operator<ept id=\"p1\">](../keywords/operator.md)</ept>).","source":"User-defined types can overload the `|` operator (see [operator](../keywords/operator.md))."},{"pos":[856,863],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[991,999],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1003,1030],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1033,1089],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1092,1116],"content":"<bpt id=\"p1\">[</bpt>C# operators<ept id=\"p1\">](index.md)</ept>","source":"[C# operators](index.md)"}]}