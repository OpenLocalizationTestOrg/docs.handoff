{"content":"---\ntitle: \"How To: Build Claims-Aware ASP.NET Web Forms Application Using WIF\"\nms.date: \"03/30/2017\"\nms.assetid: efb264dd-f47b-49a9-85ee-9f45d4425765\nauthor: \"BrucePerlerMS\"\n---\n# How To: Build Claims-Aware ASP.NET Web Forms Application Using WIF\n## Applies To  \n  \n-   Microsoft® Windows® Identity Foundation (WIF)  \n  \n-   ASP.NET® Web Forms  \n  \n## Summary  \n This How-To provides detailed step-by-step procedures for creating simple claims-aware ASP.NET Web Forms application. It also provides instructions for how to test the simple claims-aware ASP.NET Web Forms application for successful implementation of federated authentication. This How-To does not have detailed instructions for creating a Security Token Service (STS), and assumes you have already configured an STS.  \n  \n## Contents  \n  \n-   Objectives  \n  \n-   Summary of Steps  \n  \n-   Step 1 – Create a Simple ASP.NET Web Forms Application  \n  \n-   Step 2 – Configure ASP.NET Web Forms Application for Claims-Based Authentication  \n  \n-   Step 3 – Test Your Solution  \n  \n## Objectives  \n  \n-   Configure ASP.NET Web Forms application for claims-based authentication  \n  \n-   Test successful claims-aware ASP.NET Web Forms application  \n  \n## Summary of Steps  \n  \n-   Step 1 – Create Simple ASP.NET Web Forms Application  \n  \n-   Step 2 – Configure ASP.NET Web Forms Application for Federated Authentication  \n  \n-   Step 3 – Test Your Solution  \n  \n## Step 1 – Create a Simple ASP.NET Web Forms Application  \n In this step, you will create a new ASP.NET Web Forms application.  \n  \n#### To create a simple ASP.NET application  \n  \n1.  Start Visual Studio and click **File**, **New**, and then **Project**.  \n  \n2.  In the **New Project** window, click **ASP.NET Web Forms Application**.  \n  \n3.  In **Name**, enter `TestApp` and press **OK**.  \n  \n## Step 2 – Configure ASP.NET Web Forms Application for Claims-Based Authentication  \n In this step you will add configuration entries to the *Web.config* configuration file of your ASP.NET Web Forms application to make it claims-aware.  \n  \n#### To configure ASP.NET application for claims-based authentication  \n  \n1.  Add the following configuration section entries to the *Web.config* configuration file immediately after the **\\<configuration>** opening element:  \n  \n    ```xml  \n    <configSections>  \n      <section name=\"system.identityModel\" type=\"System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\" />  \n      <section name=\"system.identityModel.services\" type=\"System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\" />  \n    </configSections>  \n    ```  \n  \n2.  Add a **\\<location>** element that enables access to the application’s federation metadata:  \n  \n    ```xml  \n    <location path=\"FederationMetadata\">  \n      <system.web>  \n        <authorization>  \n          <allow users=\"*\" />  \n        </authorization>  \n      </system.web>  \n    </location>  \n    ```  \n  \n3.  Add the following configuration entries within the **\\<system.web>** elements to deny users, disable native authentication, and enable WIF to manage authentication.  \n  \n    ```xml  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n    <authentication mode=\"None\" />  \n    ```  \n  \n4.  Add a **\\<system.webServer>** element that defines the modules for federated authentication. Note that the *PublicKeyToken* attribute must be the same as the *PublicKeyToken* attribute for the **\\<configSections>** entries added earlier:  \n  \n    ```xml  \n    <system.webServer>  \n      <modules>  \n        <add name=\"WSFederationAuthenticationModule\" type=\"System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" preCondition=\"managedHandler\" />  \n        <add name=\"SessionAuthenticationModule\" type=\"System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" preCondition=\"managedHandler\" />  \n      </modules>  \n    </system.webServer>  \n    ```  \n  \n5.  Add the following Windows Identity Foundation related configuration entries and ensure that your ASP.NET application’s URL and port number match the values in the **\\<audienceUris>** entry, **realm** attribute of the **\\<wsFederation>** element, and the **reply** attribute of the **\\<wsFederation>** element. Also ensure that the **issuer** value fits your Security Token Service (STS) URL.  \n  \n    ```xml  \n    <system.identityModel>  \n        <identityConfiguration>  \n            <audienceUris>  \n                <add value=\"http://localhost:28503/\" />  \n            </audienceUris>  \n            <issuerNameRegistry type=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\">  \n                <trustedIssuers>  \n                    <add thumbprint=\"1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234\" name=\"YourSTSName\" />  \n                </trustedIssuers>   \n            </issuerNameRegistry>  \n            <certificateValidation certificateValidationMode=\"None\" />  \n        </identityConfiguration>  \n    </system.identityModel>  \n    <system.identityModel.services>  \n        <federationConfiguration>  \n            <cookieHandler requireSsl=\"true\" />  \n            <wsFederation passiveRedirectEnabled=\"true\" issuer=\"http://localhost:13922/wsFederationSTS/Issue\" realm=\"http://localhost:28503/\" reply=\"http://localhost:28503/\" requireHttps=\"true\" />  \n        </federationConfiguration>  \n    </system.identityModel.services>  \n    ```  \n  \n6.  Add reference to the <xref:System.IdentityModel> assembly.  \n  \n7.  Compile the solution to make sure there are no errors.  \n  \n## Step 3 – Test Your Solution  \n In this step you will test your ASP.NET Web Forms application configured for claims-based authentication. To perform a basic test, you will add code that displays claims in the token issued by the Security Token Service (STS).  \n  \n#### To test your ASP.NET Web Form application for claims-based authentication  \n  \n1.  Open the **Default.aspx** file under the **TestApp** project and replace its existing markup with the following markup:  \n  \n    ```  \n    %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"Default.aspx.cs\" Inherits=\"_Default\" %>  \n  \n    <!DOCTYPE html>  \n  \n    <html>  \n    <head id=\"Head1\" runat=\"server\">  \n        <title></title>  \n    </head>  \n    <body>  \n        <h1><asp:label ID=\"signedIn\" runat=\"server\" /></h1>  \n        <asp:label ID=\"claimType\" runat=\"server\" />  \n        <asp:label ID=\"claimValue\" runat=\"server\" />  \n        <asp:label ID=\"claimValueType\" runat=\"server\" />  \n        <asp:label ID=\"claimSubjectName\" runat=\"server\" />  \n        <asp:label ID=\"claimIssuer\" runat=\"server\" />  \n    </body>  \n    </html>  \n    ```  \n  \n2.  Save **Default.aspx**, and then open its code behind file named **Default.aspx.cs**.  \n  \n    > [!NOTE]\n    >  **Default.aspx.cs** may be hidden beneath **Default.aspx** in Solution Explorer. If **Default.aspx.cs** is not visible, expand **Default.aspx** by clicking on the triangle next to it.  \n  \n3.  Replace the existing code in the **Page_Load** method of **Default.aspx.cs** with the following code:  \n  \n    ```csharp  \n    using System;  \n    using System.IdentityModel;  \n    using System.Security.Claims;  \n    using System.Threading;  \n    using System.Web.UI;  \n  \n    namespace TestApp  \n    {  \n        public partial class _Default : System.Web.UI.Page  \n        {  \n            protected void Page_Load(object sender, EventArgs e)  \n            {  \n                ClaimsPrincipal claimsPrincipal = Thread.CurrentPrincipal as ClaimsPrincipal;  \n  \n                if (claimsPrincipal != null)  \n                {  \n                    signedIn.Text = \"You are signed in.\";  \n  \n                    foreach (Claim claim in claimsPrincipal.Claims)  \n                    {  \n                        claimType.Text = claim.Type;  \n                        claimValue.Text = claim.Value;  \n                        claimValueType.Text = claim.ValueType;  \n                        claimSubjectName.Text = claim.Subject.Name;  \n                        claimIssuer.Text = claim.Issuer;  \n                    }  \n                }  \n                else  \n                {  \n                    signedIn.Text = \"You are not signed in.\";  \n                }  \n            }  \n        }  \n    }  \n    ```  \n  \n4.  Save **Default.aspx.cs**, and build the solution.  \n  \n5.  Run the solution by pressing the **F5** key.  \n  \n6.  You should be presented with the page that displays the claims in the token that was issued to you by the Security Token Service.\n","nodes":[{"pos":[4,174],"embed":true,"restype":"x-metadata","content":"title: \"How To: Build Claims-Aware ASP.NET Web Forms Application Using WIF\"\nms.date: \"03/30/2017\"\nms.assetid: efb264dd-f47b-49a9-85ee-9f45d4425765\nauthor: \"BrucePerlerMS\"","nodes":[{"content":"How To: Build Claims-Aware ASP.NET Web Forms Application Using WIF","nodes":[{"pos":[0,66],"content":"How To: Build Claims-Aware ASP.NET Web Forms Application Using WIF","nodes":[{"content":"How To: Build Claims-Aware ASP.NET Web Forms Application Using WIF","pos":[0,66]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[181,247],"content":"How To: Build Claims-Aware ASP.NET Web Forms Application Using WIF","linkify":"How To: Build Claims-Aware ASP.NET Web Forms Application Using WIF","nodes":[{"content":"How To: Build Claims-Aware ASP.NET Web Forms Application Using WIF","pos":[0,66]}]},{"pos":[251,261],"content":"Applies To","linkify":"Applies To","nodes":[{"content":"Applies To","pos":[0,10]}]},{"content":"Microsoft® Windows® Identity Foundation (WIF)","pos":[271,316]},{"content":"ASP.NET® Web Forms","pos":[326,344]},{"pos":[353,360],"content":"Summary","linkify":"Summary","nodes":[{"content":"Summary","pos":[0,7]}]},{"content":"This How-To provides detailed step-by-step procedures for creating simple claims-aware ASP.NET Web Forms application.","pos":[364,481]},{"content":"It also provides instructions for how to test the simple claims-aware ASP.NET Web Forms application for successful implementation of federated authentication.","pos":[482,640]},{"content":"This How-To does not have detailed instructions for creating a Security Token Service (STS), and assumes you have already configured an STS.","pos":[641,781]},{"pos":[790,798],"content":"Contents","linkify":"Contents","nodes":[{"content":"Contents","pos":[0,8]}]},{"content":"Objectives","pos":[808,818]},{"content":"Summary of Steps","pos":[828,844]},{"content":"Step 1 – Create a Simple ASP.NET Web Forms Application","pos":[854,908]},{"content":"Step 2 – Configure ASP.NET Web Forms Application for Claims-Based Authentication","pos":[918,998]},{"content":"Step 3 – Test Your Solution","pos":[1008,1035]},{"pos":[1044,1054],"content":"Objectives","linkify":"Objectives","nodes":[{"content":"Objectives","pos":[0,10]}]},{"content":"Configure ASP.NET Web Forms application for claims-based authentication","pos":[1064,1135]},{"content":"Test successful claims-aware ASP.NET Web Forms application","pos":[1145,1203]},{"pos":[1212,1228],"content":"Summary of Steps","linkify":"Summary of Steps","nodes":[{"content":"Summary of Steps","pos":[0,16]}]},{"content":"Step 1 – Create Simple ASP.NET Web Forms Application","pos":[1238,1290]},{"content":"Step 2 – Configure ASP.NET Web Forms Application for Federated Authentication","pos":[1300,1377]},{"content":"Step 3 – Test Your Solution","pos":[1387,1414]},{"pos":[1423,1477],"content":"Step 1 – Create a Simple ASP.NET Web Forms Application","linkify":"Step 1 – Create a Simple ASP.NET Web Forms Application","nodes":[{"content":"Step 1 – Create a Simple ASP.NET Web Forms Application","pos":[0,54]}]},{"content":"In this step, you will create a new ASP.NET Web Forms application.","pos":[1481,1547]},{"pos":[1558,1596],"content":"To create a simple ASP.NET application","linkify":"To create a simple ASP.NET application","nodes":[{"content":"To create a simple ASP.NET application","pos":[0,38]}]},{"pos":[1606,1676],"content":"Start Visual Studio and click <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, and then <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","source":"Start Visual Studio and click **File**, **New**, and then **Project**."},{"pos":[1686,1757],"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> window, click <bpt id=\"p2\">**</bpt>ASP.NET Web Forms Application<ept id=\"p2\">**</ept>.","source":"In the **New Project** window, click **ASP.NET Web Forms Application**."},{"pos":[1767,1813],"content":"In <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>, enter <ph id=\"ph1\">`TestApp`</ph> and press <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","source":"In **Name**, enter `TestApp` and press **OK**."},{"pos":[1822,1902],"content":"Step 2 – Configure ASP.NET Web Forms Application for Claims-Based Authentication","linkify":"Step 2 – Configure ASP.NET Web Forms Application for Claims-Based Authentication","nodes":[{"content":"Step 2 – Configure ASP.NET Web Forms Application for Claims-Based Authentication","pos":[0,80]}]},{"pos":[1906,2055],"content":"In this step you will add configuration entries to the <bpt id=\"p1\">*</bpt>Web.config<ept id=\"p1\">*</ept> configuration file of your ASP.NET Web Forms application to make it claims-aware.","source":"In this step you will add configuration entries to the *Web.config* configuration file of your ASP.NET Web Forms application to make it claims-aware."},{"pos":[2066,2130],"content":"To configure ASP.NET application for claims-based authentication","linkify":"To configure ASP.NET application for claims-based authentication","nodes":[{"content":"To configure ASP.NET application for claims-based authentication","pos":[0,64]}]},{"pos":[2140,2286],"content":"Add the following configuration section entries to the <bpt id=\"p1\">*</bpt>Web.config<ept id=\"p1\">*</ept> configuration file immediately after the <bpt id=\"p2\">**</bpt><ph id=\"ph1\">\\&lt;</ph>configuration&gt;<ept id=\"p2\">**</ept> opening element:","source":"Add the following configuration section entries to the *Web.config* configuration file immediately after the **\\<configuration>** opening element:"},{"pos":[2816,2907],"content":"Add a <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>location&gt;<ept id=\"p1\">**</ept> element that enables access to the application’s federation metadata:","source":"Add a **\\<location>** element that enables access to the application’s federation metadata:"},{"pos":[3132,3296],"content":"Add the following configuration entries within the <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>system.web&gt;<ept id=\"p1\">**</ept> elements to deny users, disable native authentication, and enable WIF to manage authentication.","source":"Add the following configuration entries within the **\\<system.web>** elements to deny users, disable native authentication, and enable WIF to manage authentication."},{"content":"Add a <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>system.webServer&gt;<ept id=\"p1\">**</ept> element that defines the modules for federated authentication.","pos":[3441,3533],"source":"Add a **\\<system.webServer>** element that defines the modules for federated authentication."},{"content":"Note that the <bpt id=\"p1\">*</bpt>PublicKeyToken<ept id=\"p1\">*</ept> attribute must be the same as the <bpt id=\"p2\">*</bpt>PublicKeyToken<ept id=\"p2\">*</ept> attribute for the <bpt id=\"p3\">**</bpt><ph id=\"ph1\">\\&lt;</ph>configSections&gt;<ept id=\"p3\">**</ept> entries added earlier:","pos":[3534,3678],"source":" Note that the *PublicKeyToken* attribute must be the same as the *PublicKeyToken* attribute for the **\\<configSections>** entries added earlier:"},{"content":"Add the following Windows Identity Foundation related configuration entries and ensure that your ASP.NET application’s URL and port number match the values in the <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>audienceUris&gt;<ept id=\"p1\">**</ept> entry, <bpt id=\"p2\">**</bpt>realm<ept id=\"p2\">**</ept> attribute of the <bpt id=\"p3\">**</bpt><ph id=\"ph2\">\\&lt;</ph>wsFederation&gt;<ept id=\"p3\">**</ept> element, and the <bpt id=\"p4\">**</bpt>reply<ept id=\"p4\">**</ept> attribute of the <bpt id=\"p5\">**</bpt><ph id=\"ph3\">\\&lt;</ph>wsFederation&gt;<ept id=\"p5\">**</ept> element.","pos":[4304,4613],"source":"Add the following Windows Identity Foundation related configuration entries and ensure that your ASP.NET application’s URL and port number match the values in the **\\<audienceUris>** entry, **realm** attribute of the **\\<wsFederation>** element, and the **reply** attribute of the **\\<wsFederation>** element."},{"content":"Also ensure that the <bpt id=\"p1\">**</bpt>issuer<ept id=\"p1\">**</ept> value fits your Security Token Service (STS) URL.","pos":[4614,4695],"source":" Also ensure that the **issuer** value fits your Security Token Service (STS) URL."},{"pos":[5855,5913],"content":"Add reference to the <ph id=\"ph1\">&lt;xref:System.IdentityModel&gt;</ph> assembly.","source":"Add reference to the <xref:System.IdentityModel> assembly."},{"content":"Compile the solution to make sure there are no errors.","pos":[5923,5977]},{"pos":[5986,6013],"content":"Step 3 – Test Your Solution","linkify":"Step 3 – Test Your Solution","nodes":[{"content":"Step 3 – Test Your Solution","pos":[0,27]}]},{"content":"In this step you will test your ASP.NET Web Forms application configured for claims-based authentication.","pos":[6017,6122]},{"content":"To perform a basic test, you will add code that displays claims in the token issued by the Security Token Service (STS).","pos":[6123,6243]},{"pos":[6254,6327],"content":"To test your ASP.NET Web Form application for claims-based authentication","linkify":"To test your ASP.NET Web Form application for claims-based authentication","nodes":[{"content":"To test your ASP.NET Web Form application for claims-based authentication","pos":[0,73]}]},{"pos":[6337,6456],"content":"Open the <bpt id=\"p1\">**</bpt>Default.aspx<ept id=\"p1\">**</ept> file under the <bpt id=\"p2\">**</bpt>TestApp<ept id=\"p2\">**</ept> project and replace its existing markup with the following markup:","source":"Open the **Default.aspx** file under the **TestApp** project and replace its existing markup with the following markup:"},{"pos":[7098,7182],"content":"Save <bpt id=\"p1\">**</bpt>Default.aspx<ept id=\"p1\">**</ept>, and then open its code behind file named <bpt id=\"p2\">**</bpt>Default.aspx.cs<ept id=\"p2\">**</ept>.","source":"Save **Default.aspx**, and then open its code behind file named **Default.aspx.cs**."},{"pos":[7194,7392],"content":"[!NOTE]\n**Default.aspx.cs** may be hidden beneath **Default.aspx** in Solution Explorer. If **Default.aspx.cs** is not visible, expand **Default.aspx** by clicking on the triangle next to it.","leadings":["","    >  "],"nodes":[{"content":"**Default.aspx.cs** may be hidden beneath **Default.aspx** in Solution Explorer. If **Default.aspx.cs** is not visible, expand **Default.aspx** by clicking on the triangle next to it.","pos":[8,191],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Default.aspx.cs<ept id=\"p1\">**</ept> may be hidden beneath <bpt id=\"p2\">**</bpt>Default.aspx<ept id=\"p2\">**</ept> in Solution Explorer.","pos":[0,80],"source":"**Default.aspx.cs** may be hidden beneath **Default.aspx** in Solution Explorer."},{"content":"If <bpt id=\"p1\">**</bpt>Default.aspx.cs<ept id=\"p1\">**</ept> is not visible, expand <bpt id=\"p2\">**</bpt>Default.aspx<ept id=\"p2\">**</ept> by clicking on the triangle next to it.","pos":[81,183],"source":" If **Default.aspx.cs** is not visible, expand **Default.aspx** by clicking on the triangle next to it."}]}]},{"pos":[7402,7503],"content":"Replace the existing code in the <bpt id=\"p1\">**</bpt>Page_Load<ept id=\"p1\">**</ept> method of <bpt id=\"p2\">**</bpt>Default.aspx.cs<ept id=\"p2\">**</ept> with the following code:","source":"Replace the existing code in the **Page_Load** method of **Default.aspx.cs** with the following code:"},{"pos":[8716,8765],"content":"Save <bpt id=\"p1\">**</bpt>Default.aspx.cs<ept id=\"p1\">**</ept>, and build the solution.","source":"Save **Default.aspx.cs**, and build the solution."},{"pos":[8775,8819],"content":"Run the solution by pressing the <bpt id=\"p1\">**</bpt>F5<ept id=\"p1\">**</ept> key.","source":"Run the solution by pressing the **F5** key."},{"content":"You should be presented with the page that displays the claims in the token that was issued to you by the Security Token Service.","pos":[8829,8958]}]}