{"content":"---\ntitle: \"How to: Find a Union of Two Location Paths (XPath-LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: c82c09b4-cb0a-47ec-8cc3-a124144c2788\n---\n# How to: Find a Union of Two Location Paths (XPath-LINQ to XML) (Visual Basic)\nXPath allows you to find the union of the results of two XPath location paths.  \n  \n The XPath expression is:  \n  \n `//Category|//Price`  \n  \n You can achieve the same results by using the <xref:System.Linq.Enumerable.Concat%2A> standard query operator.  \n  \n## Example  \n This example finds all of the `Category` elements and all of the `Price` elements, and concatenates them into a single collection. Note that the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] query calls <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> to order the results. The results of the XPath expression evaluation are also in document order.  \n  \n This example uses the following XML document: [Sample XML File: Numerical Data (LINQ to XML)](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-numerical-data-linq-to-xml.md).  \n  \n```vb  \nDim data As XDocument = XDocument.Load(\"Data.xml\")  \n  \n' LINQ to XML query  \nDim list1 As IEnumerable(Of XElement) = _  \n    data...<Category>.Concat(data...<Price>).InDocumentOrder()  \n  \n' XPath expression  \nDim list2 As IEnumerable(Of XElement) = _  \n    data.XPathSelectElements(\"//Category|//Price\")  \n  \nIf list1.Count() = list2.Count() And _  \n        list1.Intersect(list2).Count() = list1.Count() Then  \n    Console.WriteLine(\"Results are identical\")  \nElse  \n    Console.WriteLine(\"Results differ\")  \nEnd If  \nFor Each el As XElement In list1  \n    Console.WriteLine(el)  \nNext  \n```  \n  \n This example produces the following output:  \n  \n```  \nResults are identical  \n<Category>A</Category>  \n<Price>24.50</Price>  \n<Category>B</Category>  \n<Price>89.99</Price>  \n<Category>A</Category>  \n<Price>4.95</Price>  \n<Category>A</Category>  \n<Price>66.00</Price>  \n<Category>B</Category>  \n<Price>.99</Price>  \n<Category>A</Category>  \n<Price>29.00</Price>  \n<Category>B</Category>  \n<Price>6.99</Price>  \n```  \n  \n## See also\n\n- [LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)\n","nodes":[{"pos":[4,159],"embed":true,"restype":"x-metadata","content":"title: \"How to: Find a Union of Two Location Paths (XPath-LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: c82c09b4-cb0a-47ec-8cc3-a124144c2788","nodes":[{"content":"How to: Find a Union of Two Location Paths (XPath-LINQ to XML) (Visual Basic)","nodes":[{"pos":[0,77],"content":"How to: Find a Union of Two Location Paths (XPath-LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Find a Union of Two Location Paths (XPath-LINQ to XML) (Visual Basic)","pos":[0,77]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[166,243],"content":"How to: Find a Union of Two Location Paths (XPath-LINQ to XML) (Visual Basic)","linkify":"How to: Find a Union of Two Location Paths (XPath-LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Find a Union of Two Location Paths (XPath-LINQ to XML) (Visual Basic)","pos":[0,77]}]},{"content":"XPath allows you to find the union of the results of two XPath location paths.","pos":[244,322]},{"content":"The XPath expression is:","pos":[329,353]},{"pos":[387,497],"content":"You can achieve the same results by using the <ph id=\"ph1\">&lt;xref:System.Linq.Enumerable.Concat%2A&gt;</ph> standard query operator.","source":"You can achieve the same results by using the <xref:System.Linq.Enumerable.Concat%2A> standard query operator."},{"pos":[506,513],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example finds all of the <ph id=\"ph1\">`Category`</ph> elements and all of the <ph id=\"ph2\">`Price`</ph> elements, and concatenates them into a single collection.","pos":[517,647],"source":"This example finds all of the `Category` elements and all of the `Price` elements, and concatenates them into a single collection."},{"content":"Note that the <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> query calls <ph id=\"ph2\">&lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt;</ph> to order the results.","pos":[648,802],"source":" Note that the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] query calls <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> to order the results."},{"content":"The results of the XPath expression evaluation are also in document order.","pos":[803,877]},{"pos":[884,1082],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Numerical Data (LINQ to XML)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-numerical-data-linq-to-xml.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Numerical Data (LINQ to XML)](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-numerical-data-linq-to-xml.md)."},{"content":"This example produces the following output:","pos":[1697,1740]},{"pos":[2120,2128],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2132,2265],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML for XPath Users (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept>","source":"[LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)"}]}