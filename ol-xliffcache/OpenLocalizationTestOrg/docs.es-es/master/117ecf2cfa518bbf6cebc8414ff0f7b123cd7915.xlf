<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">117ecf2cfa518bbf6cebc8414ff0f7b123cd7915</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\distributed-transactions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ccc9175c910deca43a889b95270d48c94d631a5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bbe70577a7cdd6d4eb4cd765f6831b4e3ac1382</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Distributed Transactions | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Distributed Transactions</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A transaction is a set of related tasks that either succeeds (commit) or fails (abort) as a unit, among other things.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>distributed transaction<ept id="p1">*</ept> is a transaction that affects several resources.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For a distributed transaction to commit, all participants must guarantee that any change to data will be permanent.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Changes must persist despite system crashes or other unforeseen events.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If even a single participant fails to make this guarantee, the entire transaction fails, and any changes to data within the scope of the transaction are rolled back.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An exception will be thrown if you attempt to commit or roll back a transaction if a <ph id="ph1">`DataReader`</ph> is started while the transaction is active.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Working with System.Transactions</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, distributed transactions are managed through the API in the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> API will delegate distributed transaction handling to a transaction monitor such as the Microsoft Distributed Transaction Coordinator (MS DTC) when multiple persistent resource managers are involved.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Transaction Fundamentals<ept id="p1">](http://msdn.microsoft.com/en-us/2a476b63-b94f-443f-992d-53943fdf4e5d)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>ADO.NET 2.0 introduced support for enlisting in a distributed transaction using the <ph id="ph1">`EnlistTransaction`</ph> method, which enlists a connection in a <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In previous versions of ADO.NET, explicit enlistment in distributed transactions was performed using the <ph id="ph1">`EnlistDistributedTransaction`</ph> method of a connection to enlist a connection in a <ph id="ph2">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> instance, which is supported for backwards compatibility.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information on Enterprise Services transactions, see <bpt id="p1">[</bpt>Interoperability with Enterprise Services and COM+ Transactions<ept id="p1">](http://msdn.microsoft.com/en-us/2e93b3c6-4d48-4b9b-82b2-7d5908a2c970)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When using a <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> transaction with the .NET Framework Provider for SQL Server against a SQL Server database, a lightweight <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> will automatically be used.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The transaction can then be promoted to a full distributed transaction on an as-needed basis.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>System.Transactions Integration with SQL Server<ept id="p1">](../../../../docs/framework/data/adonet/system-transactions-integration-with-sql-server.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The maximum number of distributed transactions that an Oracle database can participate in at one time is set to 10 by default.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>After the 10th transaction when connected to an Oracle database, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Oracle does not support <ph id="ph1">`DDL`</ph> inside of a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Automatically Enlisting in a Distributed Transaction</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Automatic enlistment is the default (and preferred) way of integrating ADO.NET connections with <ph id="ph1">`System.Transactions`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A connection object will automatically enlist in an existing distributed transaction if it determines that a transaction is active, which, in <ph id="ph1">`System.Transaction`</ph> terms, means that <ph id="ph2">`Transaction.Current`</ph> is not null.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Automatic transaction enlistment occurs when the connection is opened.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It will not happen after that even if a command is executed inside of a transaction scope.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can disable auto-enlistment in existing transactions by specifying <ph id="ph1">`Enlist=false`</ph> as a connection string parameter for a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName&gt;</ph>, or <ph id="ph3">`OLE DB Services=-7`</ph> as a connection string parameter for an <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information on Oracle and ODBC connection string parameters, see <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Manually Enlisting in a Distributed Transaction</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If auto-enlistment is disabled or you need to enlist a transaction that was started after the connection was opened, you can enlist in an existing distributed transaction using the <ph id="ph1">`EnlistTransaction`</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DbConnection&gt;</ph> object for the provider you are working with.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Enlisting in an existing distributed transaction ensures that, if the transaction is committed or rolled back, modifications made by the code at the data source will be committed or rolled back as well.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Enlisting in distributed transactions is particularly applicable when pooling business objects.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If a business object is pooled with an open connection, automatic transaction enlistment only occurs when that connection is opened.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If multiple transactions are performed using the pooled business object, the open connection for that object will not automatically enlist in newly initiated transactions.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this case, you can disable automatic transaction enlistment for the connection and enlist the connection in transactions using <ph id="ph1">`EnlistTransaction`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`EnlistTransaction`</ph> takes a single argument of type <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> that is a reference to the existing transaction.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>After calling the connection's <ph id="ph1">`EnlistTransaction`</ph> method, all modifications made at the data source using the connection are included in the transaction.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Passing a null value unenlists the connection from its current distributed transaction enlistment.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Note that the connection must be opened before calling <ph id="ph1">`EnlistTransaction`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Once a connection is explicitly enlisted on a transaction, it cannot be un-enlisted or enlisted in another transaction until the first transaction finishes.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `EnlistTransaction`</ph> throws an exception if the connection has already begun a transaction using the connection's <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.BeginTransaction%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, if the transaction is a local transaction started at the data source (for example, executing the BEGIN TRANSACTION statement explicitly using a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>), <ph id="ph2">`EnlistTransaction`</ph> will roll back the local transaction and enlist in the existing distributed transaction as requested.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You will not receive notice that the local transaction was rolled back, and must manage any local transactions not started using <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you are using the .NET Framework Data Provider for SQL Server (<ph id="ph1">`SqlClient`</ph>) with SQL Server, an attempt to enlist will throw an exception.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>All other cases will go undetected.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Promotable Transactions in SQL Server</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>SQL Server supports promotable transactions in which a local lightweight transaction can be automatically promoted to a distributed transaction only if it is required.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A promotable transaction does not invoke the added overhead of a distributed transaction unless the added overhead is required.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information and a code sample, see <bpt id="p1">[</bpt>System.Transactions Integration with SQL Server<ept id="p1">](../../../../docs/framework/data/adonet/system-transactions-integration-with-sql-server.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Configuring Distributed Transactions</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You may need to enable the MS DTC over the network in order to use distributed transactions.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If have the Windows Firewall enabled, you must allow the MS DTC service to use the network or open the MS DTC port.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Transactions and Concurrency<ept id="p1">](../../../../docs/framework/data/adonet/transactions-and-concurrency.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>System.Transactions Integration with SQL Server<ept id="p1">](../../../../docs/framework/data/adonet/system-transactions-integration-with-sql-server.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>