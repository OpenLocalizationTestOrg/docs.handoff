{"content":"---\ntitle: \"How to: Split a File Into Many Files by Using Groups (LINQ) (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: 8179b91c-d778-4e57-884f-77fe5a8e4e40\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Split a File Into Many Files by Using Groups (LINQ) (C#)\nThis example shows one way to merge the contents of two files and then create a set of new files that organize the data in a new way.  \n  \n### To create the data files  \n  \n1.  Copy these names into a text file that is named names1.txt and save it in your project folder:  \n  \n    ```  \n    Bankov, Peter  \n    Holm, Michael  \n    Garcia, Hugo  \n    Potra, Cristina  \n    Noriega, Fabricio  \n    Aw, Kam Foo  \n    Beebe, Ann  \n    Toyoshima, Tim  \n    Guy, Wey Yuan  \n    Garcia, Debra  \n    ```  \n  \n2.  Copy these names into a text file that is named names2.txt and save it in your project folder: Note that the two files have some names in common.  \n  \n    ```  \n    Liu, Jinghao  \n    Bankov, Peter  \n    Holm, Michael  \n    Garcia, Hugo  \n    Beebe, Ann  \n    Gilchrist, Beth  \n    Myrcha, Jacek  \n    Giakoumakis, Leo  \n    McLin, Nkenge  \n    El Yassir, Mehdi  \n    ```  \n  \n## Example  \n  \n```csharp  \nclass SplitWithGroups  \n{  \n    static void Main()  \n    {  \n        string[] fileA = System.IO.File.ReadAllLines(@\"../../../names1.txt\");  \n        string[] fileB = System.IO.File.ReadAllLines(@\"../../../names2.txt\");  \n  \n        // Concatenate and remove duplicate names based on  \n        // default string comparer  \n        var mergeQuery = fileA.Union(fileB);  \n  \n        // Group the names by the first letter in the last name.  \n        var groupQuery = from name in mergeQuery  \n                         let n = name.Split(',')  \n                         group name by n[0][0] into g  \n                         orderby g.Key  \n                         select g;  \n  \n        // Create a new file for each group that was created  \n        // Note that nested foreach loops are required to access  \n        // individual items with each group.  \n        foreach (var g in groupQuery)  \n        {  \n            // Create the new file name.  \n            string fileName = @\"../../../testFile_\" + g.Key + \".txt\";  \n  \n            // Output to display.  \n            Console.WriteLine(g.Key);  \n  \n            // Write file.  \n            using (System.IO.StreamWriter sw = new System.IO.StreamWriter(fileName))  \n            {  \n                foreach (var item in g)  \n                {  \n                    sw.WriteLine(item);  \n                    // Output to console for example purposes.  \n                    Console.WriteLine(\"   {0}\", item);  \n                }  \n            }  \n        }  \n        // Keep console window open in debug mode.  \n        Console.WriteLine(\"Files have been written. Press any key to exit\");  \n        Console.ReadKey();  \n    }  \n}  \n/* Output:   \n    A  \n       Aw, Kam Foo  \n    B  \n       Bankov, Peter  \n       Beebe, Ann  \n    E  \n       El Yassir, Mehdi  \n    G  \n       Garcia, Hugo  \n       Guy, Wey Yuan  \n       Garcia, Debra  \n       Gilchrist, Beth  \n       Giakoumakis, Leo  \n    H  \n       Holm, Michael  \n    L  \n       Liu, Jinghao  \n    M  \n       Myrcha, Jacek  \n       McLin, Nkenge  \n    N  \n       Noriega, Fabricio  \n    P  \n       Potra, Cristina  \n    T  \n       Toyoshima, Tim  \n */  \n```  \n  \n The program writes a separate file for each group in the same folder as the data files.  \n  \n## Compiling the Code  \n Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and `using` directives for the System.Linq and System.IO namespaces.  \n  \n## See Also  \n [LINQ and Strings (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-strings.md)   \n [LINQ and File Directories (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)","nodes":[{"pos":[12,93],"content":"How to: Split a File Into Many Files by Using Groups (LINQ) (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Split a File Into Many Files by Using Groups (LINQ) (C#) | Microsoft Docs","pos":[0,81]}]},{"pos":[452,516],"content":"How to: Split a File Into Many Files by Using Groups (LINQ) (C#)","linkify":"How to: Split a File Into Many Files by Using Groups (LINQ) (C#)","nodes":[{"content":"How to: Split a File Into Many Files by Using Groups (LINQ) (C#)","pos":[0,64]}]},{"content":"This example shows one way to merge the contents of two files and then create a set of new files that organize the data in a new way.","pos":[517,650]},{"pos":[660,684],"content":"To create the data files","linkify":"To create the data files","nodes":[{"content":"To create the data files","pos":[0,24]}]},{"content":"Copy these names into a text file that is named names1.txt and save it in your project folder:","pos":[694,788]},{"content":"Copy these names into a text file that is named names2.txt and save it in your project folder: Note that the two files have some names in common.","pos":[1022,1167]},{"pos":[1402,1409],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The program writes a separate file for each group in the same folder as the data files.","pos":[3596,3683]},{"pos":[3692,3710],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[3714,3891],"content":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and <ph id=\"ph1\">`using`</ph> directives for the System.Linq and System.IO namespaces.","source":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and `using` directives for the System.Linq and System.IO namespaces."},{"pos":[3900,3908],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>LINQ and Strings (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-and-strings.md)</ept><ph id=\"ph1\"> </ph>","pos":[3912,4008],"source":"[LINQ and Strings (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-strings.md) "},{"content":"<bpt id=\"p1\"> [</bpt>LINQ and File Directories (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)</ept>","pos":[4011,4125],"source":" [LINQ and File Directories (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)"}]}