{"content":"---\ntitle: \"How to: Convert an Object to Another Type in Visual Basic | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"objects [Visual Basic], converting\"\nms.assetid: 60cb5fc7-7ba4-4ab5-9c24-480fa12ddcdc\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Convert an Object to Another Type in Visual Basic\nYou convert an `Object` variable to another data type by using a conversion keyword such as [CType Function](../../../../visual-basic/language-reference/functions/ctype-function.md).  \n  \n## Example  \n The following example converts an `Object` variable to an `Integer` and a `String`.  \n  \n```  \nPublic Sub objectConversion(ByVal anObject As Object)  \n    Dim anInteger As Integer  \n    Dim aString As String  \n    anInteger = CType(anObject, Integer)  \n    aString = CType(anObject, String)  \nEnd Sub  \n```  \n  \n If you know that the contents of an `Object` variable are of a particular data type, it is better to convert the variable to that data type. If you continue to use the `Object` variable, you incur either *boxing* and *unboxing* (for a value type) or *late binding* (for a reference type). These operations all take extra execution time and make your performance slower.  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   A reference to the <xref:System?displayProperty=fullName> namespace.  \n  \n## See Also  \n <xref:System.Object>   \n [Type Conversions in Visual Basic](../../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)   \n [Widening and Narrowing Conversions](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)   \n [Implicit and Explicit Conversions](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)   \n [Conversions Between Strings and Other Types](../../../../visual-basic/programming-guide/language-features/data-types/conversions-between-strings-and-other-types.md)   \n [Array Conversions](../../../../visual-basic/programming-guide/language-features/data-types/array-conversions.md)   \n [Structures](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)   \n [Data Types](../../../../visual-basic/language-reference/data-types/data-type-summary.md)   \n [Type Conversion Functions](../../../../visual-basic/language-reference/functions/type-conversion-functions.md)","nodes":[{"pos":[12,86],"content":"How to: Convert an Object to Another Type in Visual Basic | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Convert an Object to Another Type in Visual Basic | Microsoft Docs","pos":[0,74]}]},{"pos":[622,679],"content":"How to: Convert an Object to Another Type in Visual Basic","linkify":"How to: Convert an Object to Another Type in Visual Basic","nodes":[{"content":"How to: Convert an Object to Another Type in Visual Basic","pos":[0,57]}]},{"pos":[680,862],"content":"You convert an <ph id=\"ph1\">`Object`</ph> variable to another data type by using a conversion keyword such as <bpt id=\"p1\">[</bpt>CType Function<ept id=\"p1\">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept>.","source":"You convert an `Object` variable to another data type by using a conversion keyword such as [CType Function](../../../../visual-basic/language-reference/functions/ctype-function.md)."},{"pos":[871,878],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[882,965],"content":"The following example converts an <ph id=\"ph1\">`Object`</ph> variable to an <ph id=\"ph2\">`Integer`</ph> and a <ph id=\"ph3\">`String`</ph>.","source":"The following example converts an `Object` variable to an `Integer` and a `String`."},{"content":"If you know that the contents of an <ph id=\"ph1\">`Object`</ph> variable are of a particular data type, it is better to convert the variable to that data type.","pos":[1195,1335],"source":"If you know that the contents of an `Object` variable are of a particular data type, it is better to convert the variable to that data type."},{"content":"If you continue to use the <ph id=\"ph1\">`Object`</ph> variable, you incur either <bpt id=\"p1\">*</bpt>boxing<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>unboxing<ept id=\"p2\">*</ept> (for a value type) or <bpt id=\"p3\">*</bpt>late binding<ept id=\"p3\">*</ept> (for a reference type).","pos":[1336,1483],"source":" If you continue to use the `Object` variable, you incur either *boxing* and *unboxing* (for a value type) or *late binding* (for a reference type)."},{"content":"These operations all take extra execution time and make your performance slower.","pos":[1484,1564]},{"pos":[1573,1591],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[1595,1617]},{"content":"A reference to the <ph id=\"ph1\">&lt;xref:System?displayProperty=fullName&gt;</ph> namespace.","pos":[1627,1695],"source":"A reference to the <xref:System?displayProperty=fullName> namespace."},{"pos":[1704,1712],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>Type Conversions in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)</ept><ph id=\"ph1\"> </ph>","pos":[1740,1869],"source":" [Type Conversions in Visual Basic](../../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Widening and Narrowing Conversions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)</ept><ph id=\"ph1\"> </ph>","pos":[1872,2021],"source":" [Widening and Narrowing Conversions](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Implicit and Explicit Conversions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept><ph id=\"ph1\"> </ph>","pos":[2024,2171],"source":" [Implicit and Explicit Conversions](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Conversions Between Strings and Other Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/conversions-between-strings-and-other-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2174,2341],"source":" [Conversions Between Strings and Other Types](../../../../visual-basic/programming-guide/language-features/data-types/conversions-between-strings-and-other-types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Array Conversions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/array-conversions.md)</ept><ph id=\"ph1\"> </ph>","pos":[2344,2459],"source":" [Array Conversions](../../../../visual-basic/programming-guide/language-features/data-types/array-conversions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Structures<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[2462,2563],"source":" [Structures](../../../../visual-basic/programming-guide/language-features/data-types/structures.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Data Types<ept id=\"p1\">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id=\"ph1\"> </ph>","pos":[2566,2657],"source":" [Data Types](../../../../visual-basic/language-reference/data-types/data-type-summary.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Type Conversion Functions<ept id=\"p1\">](../../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept>","pos":[2660,2772],"source":" [Type Conversion Functions](../../../../visual-basic/language-reference/functions/type-conversion-functions.md)"}]}