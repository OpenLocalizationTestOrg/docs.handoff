{"content":"---\ntitle: \"How to: Determine Whether Two Objects Are Related (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"inheritance, Visual Basic objects\"\n  - \"objects [Visual Basic], inheritance\"\n  - \"object variables, determining relation\"\nms.assetid: da002e3f-6616-4bad-a229-f842d06652bb\ncaps.latest.revision: 7\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Determine Whether Two Objects Are Related (Visual Basic)\nYou can compare two objects to determine the relationship, if any, between the classes from which they are created. The <xref:System.Type.IsInstanceOfType%2A> method of the <xref:System.Type?displayProperty=fullName> class returns `True` if the specified class inherits from the current class, or if the current type is an interface supported by the specified class.  \n  \n### To determine if one object inherits from another object's class or interface  \n  \n1.  On the object you think might be of the base type, invoke the <xref:System.Object.GetType%2A> method.  \n  \n2.  On the <xref:System.Type?displayProperty=fullName> object returned by <xref:System.Object.GetType%2A>, invoke the <xref:System.Type.IsInstanceOfType%2A> method.  \n  \n3.  In the argument list for <xref:System.Type.IsInstanceOfType%2A>, specify the object you think might be of the derived type.  \n  \n     <xref:System.Type.IsInstanceOfType%2A> returns `True` if its argument type inherits from the <xref:System.Type?displayProperty=fullName> object type.  \n  \n## Example  \n The following example determines whether one object represents a class derived from another object's class.  \n  \n```  \nPublic Class baseClass  \nEnd Class  \nPublic Class derivedClass : Inherits baseClass  \nEnd Class  \nPublic Class testTheseClasses  \n    Public Sub seeIfRelated()  \n        Dim baseObj As Object = New baseClass()  \n        Dim derivedObj As Object = New derivedClass()  \n        Dim related As Boolean  \n        related = baseObj.GetType().IsInstanceOfType(derivedObj)  \n        MsgBox(CStr(related))  \n    End Sub  \nEnd Class  \n```  \n  \n Note the unexpected placement of the two object variables in the call to <xref:System.Type.IsInstanceOfType%2A>. The supposed base type is used to generate the <xref:System.Type?displayProperty=fullName> class, and the supposed derived type is passed as an argument to the <xref:System.Type.IsInstanceOfType%2A> method.  \n  \n## See Also  \n <xref:System.Object.GetType%2A>   \n <xref:System.Type?displayProperty=fullName>   \n <xref:System.Type.IsInstanceOfType%2A>   \n [Object Data Type](../../../../visual-basic/language-reference/data-types/object-data-type.md)   \n [Object Variables](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)   \n [Object Variable Values](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md)   \n [How to: Determine Whether Two Objects Are Identical](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-identical.md)","nodes":[{"pos":[4,724],"embed":true,"restype":"x-metadata","content":"title: \"How to: Determine Whether Two Objects Are Related (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"inheritance, Visual Basic objects\"\n  - \"objects [Visual Basic], inheritance\"\n  - \"object variables, determining relation\"\nms.assetid: da002e3f-6616-4bad-a229-f842d06652bb\ncaps.latest.revision: 7\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"How to: Determine Whether Two Objects Are Related (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,81],"content":"How to: Determine Whether Two Objects Are Related (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Determine Whether Two Objects Are Related (Visual Basic) | Microsoft Docs","pos":[0,81]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[731,795],"content":"How to: Determine Whether Two Objects Are Related (Visual Basic)","linkify":"How to: Determine Whether Two Objects Are Related (Visual Basic)","nodes":[{"content":"How to: Determine Whether Two Objects Are Related (Visual Basic)","pos":[0,64]}]},{"content":"You can compare two objects to determine the relationship, if any, between the classes from which they are created.","pos":[796,911]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Type?displayProperty=fullName&gt;</ph> class returns <ph id=\"ph3\">`True`</ph> if the specified class inherits from the current class, or if the current type is an interface supported by the specified class.","pos":[912,1162],"source":" The <xref:System.Type.IsInstanceOfType%2A> method of the <xref:System.Type?displayProperty=fullName> class returns `True` if the specified class inherits from the current class, or if the current type is an interface supported by the specified class."},{"pos":[1172,1248],"content":"To determine if one object inherits from another object's class or interface","linkify":"To determine if one object inherits from another object's class or interface","nodes":[{"content":"To determine if one object inherits from another object's class or interface","pos":[0,76]}]},{"pos":[1258,1359],"content":"On the object you think might be of the base type, invoke the <ph id=\"ph1\">&lt;xref:System.Object.GetType%2A&gt;</ph> method.","source":"On the object you think might be of the base type, invoke the <xref:System.Object.GetType%2A> method."},{"pos":[1369,1529],"content":"On the <ph id=\"ph1\">&lt;xref:System.Type?displayProperty=fullName&gt;</ph> object returned by <ph id=\"ph2\">&lt;xref:System.Object.GetType%2A&gt;</ph>, invoke the <ph id=\"ph3\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph> method.","source":"On the <xref:System.Type?displayProperty=fullName> object returned by <xref:System.Object.GetType%2A>, invoke the <xref:System.Type.IsInstanceOfType%2A> method."},{"pos":[1539,1662],"content":"In the argument list for <ph id=\"ph1\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph>, specify the object you think might be of the derived type.","source":"In the argument list for <xref:System.Type.IsInstanceOfType%2A>, specify the object you think might be of the derived type."},{"pos":[1673,1822],"content":"<ph id=\"ph1\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph> returns <ph id=\"ph2\">`True`</ph> if its argument type inherits from the <ph id=\"ph3\">&lt;xref:System.Type?displayProperty=fullName&gt;</ph> object type.","source":"<xref:System.Type.IsInstanceOfType%2A> returns `True` if its argument type inherits from the <xref:System.Type?displayProperty=fullName> object type."},{"pos":[1831,1838],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example determines whether one object represents a class derived from another object's class.","pos":[1842,1949]},{"content":"Note the unexpected placement of the two object variables in the call to <ph id=\"ph1\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph>.","pos":[2397,2509],"source":"Note the unexpected placement of the two object variables in the call to <xref:System.Type.IsInstanceOfType%2A>."},{"content":"The supposed base type is used to generate the <ph id=\"ph1\">&lt;xref:System.Type?displayProperty=fullName&gt;</ph> class, and the supposed derived type is passed as an argument to the <ph id=\"ph2\">&lt;xref:System.Type.IsInstanceOfType%2A&gt;</ph> method.","pos":[2510,2716],"source":" The supposed base type is used to generate the <xref:System.Type?displayProperty=fullName> class, and the supposed derived type is passed as an argument to the <xref:System.Type.IsInstanceOfType%2A> method."},{"pos":[2725,2733],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Object Data Type<ept id=\"p1\">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept><ph id=\"ph1\"> </ph>","pos":[2864,2959],"source":"[Object Data Type](../../../../visual-basic/language-reference/data-types/object-data-type.md) "},{"content":"<bpt id=\"p1\">[</bpt>Object Variables<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)</ept><ph id=\"ph1\"> </ph>","pos":[2963,3074],"source":"[Object Variables](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md) "},{"content":"<bpt id=\"p1\">[</bpt>Object Variable Values<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md)</ept><ph id=\"ph1\"> </ph>","pos":[3078,3201],"source":"[Object Variable Values](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Determine Whether Two Objects Are Identical<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-identical.md)</ept>","pos":[3205,3384],"source":"[How to: Determine Whether Two Objects Are Identical](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-identical.md)"}]}