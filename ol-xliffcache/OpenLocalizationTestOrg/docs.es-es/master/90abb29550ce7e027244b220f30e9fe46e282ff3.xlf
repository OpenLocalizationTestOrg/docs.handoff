<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-declare-faults-in-service-contracts.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90abb29550ce7e027244b220f30e9fe46e282ff3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\how-to-declare-faults-in-service-contracts.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c1761ccb0f2712bd76eb8837c83e8eb716ff526</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">398f088cea53747d0ba0f2039b57dc4d9131a3dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Declare Faults in Service Contracts</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Declare Faults in Service Contracts</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In managed code, exceptions are thrown when error conditions occur.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In Windows Communication Foundation (WCF) applications, however, service contracts specify what error information is returned to clients by declaring SOAP faults in the service contract.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For an overview of the relationship between exceptions and faults, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](../../../docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Create a service contract that specifies a SOAP fault</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create a service contract that contains at least one operation.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Define a Service Contract<ept id="p1">](../../../docs/framework/wcf/how-to-define-a-wcf-service-contract.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Select an operation that can specify an error condition about which clients can expect to be notified.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To decide which error conditions justify returning SOAP faults to clients, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](../../../docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Apply a <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> to the selected operation and pass a serializable fault type to the constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For details about creating and using serializable types, see <bpt id="p1">[</bpt>Specifying Data Transfer in Service Contracts<ept id="p1">](../../../docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example shows how to specify that the <ph id="ph1">`SampleMethod`</ph> operation can result in a <ph id="ph2">`GreetingFault`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Repeat steps 2 and 3 for all operations in the contract that communicate error conditions to clients.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Implementing an Operation to Return a Specified SOAP Fault</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Once an operation has specified that a specific SOAP fault can be returned (such as in the preceding procedure) to communicate an error condition to a calling application, the next step is to implement that specification.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Throw the specified SOAP fault in the operation</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>-specified error condition occurs in an operation, throw a new <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601?displayProperty=nameWithType&gt;</ph> where the specified SOAP fault is the type parameter.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following example shows how to throw the <ph id="ph1">`GreetingFault`</ph> in the <ph id="ph2">`SampleMethod`</ph> shown in the preceding procedure and in the following Code section.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following code example shows an implementation of a single operation that specifies a <ph id="ph1">`GreetingFault`</ph> for the <ph id="ph2">`SampleMethod`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>