{"content":"---\ntitle: \"Parameter types of &#39;&lt;operator&gt;&#39; must be &#39;&lt;typename&gt;&#39; to be used in a &#39;For&#39; statement | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"BC33040\"\n  - \"vbc33040\"\nhelpviewer_keywords: \n  - \"BC33040\"\nms.assetid: bffbb812-0d69-47e4-96c5-01882722ccdb\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Parameter types of &#39;&lt;operator&gt;&#39; must be &#39;&lt;typename&gt;&#39; to be used in a &#39;For&#39; statement\nA `For` loop specifies a counter variable of a type that does not define the `>=` or `<=` operator with parameters of its own type.  \n  \n The counter variable must be of a type that supports greater-than-or-equal (`>=`) and less-than-or-equal (`<=`) operators that compare their containing type. This means both of the operands must be of the type of the counter variable.  \n  \n If you use a numeric data type for the counter variable, the `>=` and `<=` operators are supported on the containing type. If you use a user-defined class or structure, you must define both operators with operands of the type of your class or structure.  \n  \n **Error ID:** BC33040  \n  \n## To correct this error  \n  \n1.  Make sure the spelling of the counter-variable data type is correct.  \n  \n2.  If you are using a user-defined class or structure for the counter variable, define `>=` and `<=` operators that compare that class or structure.  \n  \n## See Also  \n [For...Next Statement](../../visual-basic/language-reference/statements/for-next-statement.md)   \n [Operator Procedures](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)   \n [Operator Statement](../../visual-basic/language-reference/statements/operator-statement.md)   \n [How to: Define an Operator](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)   \n [How to: Define a Conversion Operator](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)","nodes":[{"pos":[12,149],"content":"Parameter types of &#39;&lt;operator&gt;&#39; must be &#39;&lt;typename&gt;&#39; to be used in a &#39;For&#39; statement | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Parameter types of &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>operator<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; must be &amp;#39;<ph id=\"ph3\">&amp;lt;</ph>typename<ph id=\"ph4\">&amp;gt;</ph>&amp;#39; to be used in a &amp;#39;For&amp;#39; statement | Microsoft Docs","pos":[0,137],"source":"Parameter types of &#39;&lt;operator&gt;&#39; must be &#39;&lt;typename&gt;&#39; to be used in a &#39;For&#39; statement | Microsoft Docs"}]},{"pos":[666,786],"content":"Parameter types of &#39;&lt;operator&gt;&#39; must be &#39;&lt;typename&gt;&#39; to be used in a &#39;For&#39; statement","linkify":"Parameter types of &#39;&lt;operator&gt;&#39; must be &#39;&lt;typename&gt;&#39; to be used in a &#39;For&#39; statement","nodes":[{"content":"Parameter types of &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>operator<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; must be &amp;#39;<ph id=\"ph3\">&amp;lt;</ph>typename<ph id=\"ph4\">&amp;gt;</ph>&amp;#39; to be used in a &amp;#39;For&amp;#39; statement","pos":[0,120],"source":"Parameter types of &#39;&lt;operator&gt;&#39; must be &#39;&lt;typename&gt;&#39; to be used in a &#39;For&#39; statement"}]},{"pos":[787,918],"content":"A <ph id=\"ph1\">`For`</ph> loop specifies a counter variable of a type that does not define the <ph id=\"ph2\">`&gt;=`</ph> or <ph id=\"ph3\">`&lt;=`</ph> operator with parameters of its own type.","source":"A `For` loop specifies a counter variable of a type that does not define the `>=` or `<=` operator with parameters of its own type."},{"content":"The counter variable must be of a type that supports greater-than-or-equal (<ph id=\"ph1\">`&gt;=`</ph>) and less-than-or-equal (<ph id=\"ph2\">`&lt;=`</ph>) operators that compare their containing type.","pos":[925,1082],"source":"The counter variable must be of a type that supports greater-than-or-equal (`>=`) and less-than-or-equal (`<=`) operators that compare their containing type."},{"content":"This means both of the operands must be of the type of the counter variable.","pos":[1083,1159]},{"content":"If you use a numeric data type for the counter variable, the <ph id=\"ph1\">`&gt;=`</ph> and <ph id=\"ph2\">`&lt;=`</ph> operators are supported on the containing type.","pos":[1166,1288],"source":"If you use a numeric data type for the counter variable, the `>=` and `<=` operators are supported on the containing type."},{"content":"If you use a user-defined class or structure, you must define both operators with operands of the type of your class or structure.","pos":[1289,1419]},{"pos":[1426,1447],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC33040","source":"**Error ID:** BC33040"},{"pos":[1456,1477],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Make sure the spelling of the counter-variable data type is correct.","pos":[1487,1555]},{"pos":[1565,1710],"content":"If you are using a user-defined class or structure for the counter variable, define <ph id=\"ph1\">`&gt;=`</ph> and <ph id=\"ph2\">`&lt;=`</ph> operators that compare that class or structure.","source":"If you are using a user-defined class or structure for the counter variable, define `>=` and `<=` operators that compare that class or structure."},{"pos":[1719,1727],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>For...Next Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/for-next-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[1731,1826],"source":"[For...Next Statement](../../visual-basic/language-reference/statements/for-next-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Operator Procedures<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept><ph id=\"ph1\"> </ph>","pos":[1829,1942],"source":" [Operator Procedures](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Operator Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/operator-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[1945,2039],"source":" [Operator Statement](../../visual-basic/language-reference/statements/operator-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Define an Operator<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)</ept><ph id=\"ph1\"> </ph>","pos":[2042,2168],"source":" [How to: Define an Operator](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Define a Conversion Operator<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept>","pos":[2171,2316],"source":" [How to: Define a Conversion Operator](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)"}]}