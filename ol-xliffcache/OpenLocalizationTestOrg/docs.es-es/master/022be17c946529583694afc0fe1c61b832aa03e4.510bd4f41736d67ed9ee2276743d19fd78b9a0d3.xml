{"content":"---\ntitle: \"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"DataGrid [WPF], displaying data from SQL Server\"\n  - \"controls [WPF], DataGrid\"\nms.assetid: 6810b048-0a23-4f86-bfa5-97f92b3cfab4\n---\n# Walkthrough: Display data from a SQL Server database in a DataGrid control\n\nIn this walkthrough, you retrieve data from a SQL Server database and display that data in a <xref:System.Windows.Controls.DataGrid> control. You use the ADO.NET Entity Framework to create the entity classes that represent the data, and use LINQ to write a query that retrieves the specified data from an entity class.\n\n## Prerequisites\n\nYou need the following components to complete this walkthrough:\n\n-   Visual Studio.\n\n-   Access to a running instance of SQL Server or SQL Server Express that has the AdventureWorks sample database attached to it. You can download the AdventureWorks database from the [GitHub](https://github.com/Microsoft/sql-server-samples/releases).\n\n## Create entity classes\n\n1.  Create a new WPF Application project in Visual Basic or C#, and name it `DataGridSQLExample`.\n\n2.  In Solution Explorer, right-click your project, point to **Add**, and then select **New Item**.\n\n     The Add New Item dialog box appears.\n\n3.  In the Installed Templates pane, select **Data** and in the list of templates, select **ADO.NET Entity Data Model**.\n\n     ![ADO.NET Entity Data Model item template](../../wcf/feature-details/./media/ado-net-entity-data-model-item-template.png)\n\n4.  Name the file `AdventureWorksModel.edmx` and then click **Add**.\n\n     The Entity Data Model Wizard appears.\n\n5.  In the Choose Model Contents screen, select **EF Designer from database** and then click **Next**.\n\n6.  In the Choose Your Data Connection screen, provide the connection to your AdventureWorksLT2008 database. For more information, see [Choose Your Data Connection Dialog Box](https://go.microsoft.com/fwlink/?LinkId=160190).\n\n    Make sure that the name is `AdventureWorksLT2008Entities` and that the **Save entity connection settings in App.Config as** check box is selected, and then click **Next**.\n\n7.  In the Choose Your Database Objects screen, expand the Tables node, and select the **Product** and **ProductCategory** tables.\n\n     You can generate entity classes for all of the tables; however, in this example you only retrieve data from those two tables.\n\n     ![Select Product and ProductCategory from tables](./media/datagrid-sql-ef-step4.png \"DataGrid_SQL_EF_Step4\")\n\n8. Click **Finish**.\n\n     The Product and ProductCategory entities are displayed in the Entity Designer.\n\n     ![Product and ProductCategory entity models](./media/datagrid-sql-ef-step5.png \"DataGrid_SQL_EF_Step5\")\n\n## Retrieve and present the data\n\n1.  Open the MainWindow.xaml file.\n\n2.  Set the <xref:System.Windows.FrameworkElement.Width%2A> property on the <xref:System.Windows.Window> to 450.\n\n3.  In the XAML editor, add the following <xref:System.Windows.Controls.DataGrid> tag between the `<Grid>` and `</Grid>` tags to add a <xref:System.Windows.Controls.DataGrid> named `dataGrid1`.\n\n     [!code-xaml[DataGrid_SQL_EF_Walkthrough#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/CS/MainWindow.xaml#3)]\n\n     ![Window with DataGrid](./media/datagrid-sql-ef-step6.png \"DataGrid_SQL_EF_Step6\")\n\n4.  Select the <xref:System.Windows.Window>.\n\n5.  Using the Properties window or XAML editor, create an event handler for the <xref:System.Windows.Window> named `Window_Loaded` for the <xref:System.Windows.FrameworkElement.Loaded> event. For more information, see [How to: Create a Simple Event Handler](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb675300(v=vs.100)).\n\n     The following shows the XAML for MainWindow.xaml.\n\n    > [!NOTE]\n    > If you are using Visual Basic, in the first line of MainWindow.xaml, replace `x:Class=\"DataGridSQLExample.MainWindow\"` with `x:Class=\"MainWindow\"`.\n\n     [!code-xaml[DataGrid_SQL_EF_Walkthrough#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/CS/MainWindow.xaml#1)]\n\n6.  Open the code-behind file (MainWindow.xaml.vb or MainWindow.xaml.cs) for the <xref:System.Windows.Window>.\n\n7.  Add the following code to retrieve only specific values from the joined tables and set the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property of the <xref:System.Windows.Controls.DataGrid> to the results of the query.\n\n     [!code-csharp[DataGrid_SQL_EF_Walkthrough#2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/CS/MainWindow.xaml.cs#2)]\n     [!code-vb[DataGrid_SQL_EF_Walkthrough#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/VB/MainWindow.xaml.vb#2)]\n\n8.  Run the example.\n\n     You should see a <xref:System.Windows.Controls.DataGrid> that displays data.\n\n     ![DataGrid with data from SQL database](./media/datagrid-sql-ef-step7.png \"DataGrid_SQL_EF_Step7\")\n\n## See also\n\n- <xref:System.Windows.Controls.DataGrid>\n- [How Do I: Get Started with Entity Framework in WPF Applications?](https://go.microsoft.com/fwlink/?LinkId=159868)","nodes":[{"pos":[4,297],"embed":true,"restype":"x-metadata","content":"title: \"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"DataGrid [WPF], displaying data from SQL Server\"\n  - \"controls [WPF], DataGrid\"\nms.assetid: 6810b048-0a23-4f86-bfa5-97f92b3cfab4","nodes":[{"content":"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control","nodes":[{"pos":[0,74],"content":"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control","nodes":[{"content":"Walkthrough: Display Data from a SQL Server Database in a DataGrid Control","pos":[0,74]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[304,378],"content":"Walkthrough: Display data from a SQL Server database in a DataGrid control","linkify":"Walkthrough: Display data from a SQL Server database in a DataGrid control","nodes":[{"content":"Walkthrough: Display data from a SQL Server database in a DataGrid control","pos":[0,74]}]},{"content":"In this walkthrough, you retrieve data from a SQL Server database and display that data in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> control.","pos":[380,521],"source":"In this walkthrough, you retrieve data from a SQL Server database and display that data in a <xref:System.Windows.Controls.DataGrid> control."},{"content":"You use the ADO.NET Entity Framework to create the entity classes that represent the data, and use LINQ to write a query that retrieves the specified data from an entity class.","pos":[522,698]},{"pos":[703,716],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"You need the following components to complete this walkthrough:","pos":[718,781]},{"content":"Visual Studio.","pos":[787,801]},{"content":"Access to a running instance of SQL Server or SQL Server Express that has the AdventureWorks sample database attached to it.","pos":[807,931]},{"content":"You can download the AdventureWorks database from the <bpt id=\"p1\">[</bpt>GitHub<ept id=\"p1\">](https://github.com/Microsoft/sql-server-samples/releases)</ept>.","pos":[932,1053],"source":" You can download the AdventureWorks database from the [GitHub](https://github.com/Microsoft/sql-server-samples/releases)."},{"pos":[1058,1079],"content":"Create entity classes","linkify":"Create entity classes","nodes":[{"content":"Create entity classes","pos":[0,21]}]},{"pos":[1085,1178],"content":"Create a new WPF Application project in Visual Basic or C#, and name it <ph id=\"ph1\">`DataGridSQLExample`</ph>.","source":"Create a new WPF Application project in Visual Basic or C#, and name it `DataGridSQLExample`."},{"pos":[1184,1279],"content":"In Solution Explorer, right-click your project, point to <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>, and then select <bpt id=\"p2\">**</bpt>New Item<ept id=\"p2\">**</ept>.","source":"In Solution Explorer, right-click your project, point to **Add**, and then select **New Item**."},{"content":"The Add New Item dialog box appears.","pos":[1286,1322]},{"pos":[1328,1444],"content":"In the Installed Templates pane, select <bpt id=\"p1\">**</bpt>Data<ept id=\"p1\">**</ept> and in the list of templates, select <bpt id=\"p2\">**</bpt>ADO.NET Entity Data Model<ept id=\"p2\">**</ept>.","source":"In the Installed Templates pane, select **Data** and in the list of templates, select **ADO.NET Entity Data Model**."},{"content":"ADO.NET Entity Data Model item template","pos":[1453,1492]},{"pos":[1578,1642],"content":"Name the file <ph id=\"ph1\">`AdventureWorksModel.edmx`</ph> and then click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.","source":"Name the file `AdventureWorksModel.edmx` and then click **Add**."},{"content":"The Entity Data Model Wizard appears.","pos":[1649,1686]},{"pos":[1692,1790],"content":"In the Choose Model Contents screen, select <bpt id=\"p1\">**</bpt>EF Designer from database<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>Next<ept id=\"p2\">**</ept>.","source":"In the Choose Model Contents screen, select **EF Designer from database** and then click **Next**."},{"content":"In the Choose Your Data Connection screen, provide the connection to your AdventureWorksLT2008 database.","pos":[1796,1900]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Choose Your Data Connection Dialog Box<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=160190)</ept>.","pos":[1901,2016],"source":" For more information, see [Choose Your Data Connection Dialog Box](https://go.microsoft.com/fwlink/?LinkId=160190)."},{"pos":[2022,2193],"content":"Make sure that the name is <ph id=\"ph1\">`AdventureWorksLT2008Entities`</ph> and that the <bpt id=\"p1\">**</bpt>Save entity connection settings in App.Config as<ept id=\"p1\">**</ept> check box is selected, and then click <bpt id=\"p2\">**</bpt>Next<ept id=\"p2\">**</ept>.","source":"Make sure that the name is `AdventureWorksLT2008Entities` and that the **Save entity connection settings in App.Config as** check box is selected, and then click **Next**."},{"pos":[2199,2325],"content":"In the Choose Your Database Objects screen, expand the Tables node, and select the <bpt id=\"p1\">**</bpt>Product<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>ProductCategory<ept id=\"p2\">**</ept> tables.","source":"In the Choose Your Database Objects screen, expand the Tables node, and select the **Product** and **ProductCategory** tables."},{"content":"You can generate entity classes for all of the tables; however, in this example you only retrieve data from those two tables.","pos":[2332,2457]},{"pos":[2464,2572],"content":"<bpt id=\"p1\">![</bpt>Select Product and ProductCategory from tables<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/datagrid-sql-ef-step4.png \"</bpt>DataGrid_SQL_EF_Step4<ept id=\"p2\">\")</ept>","source":"![Select Product and ProductCategory from tables](./media/datagrid-sql-ef-step4.png \"DataGrid_SQL_EF_Step4\")"},{"pos":[2577,2594],"content":"Click <bpt id=\"p1\">**</bpt>Finish<ept id=\"p1\">**</ept>.","source":"Click **Finish**."},{"content":"The Product and ProductCategory entities are displayed in the Entity Designer.","pos":[2601,2679]},{"pos":[2686,2789],"content":"<bpt id=\"p1\">![</bpt>Product and ProductCategory entity models<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/datagrid-sql-ef-step5.png \"</bpt>DataGrid_SQL_EF_Step5<ept id=\"p2\">\")</ept>","source":"![Product and ProductCategory entity models](./media/datagrid-sql-ef-step5.png \"DataGrid_SQL_EF_Step5\")"},{"pos":[2794,2823],"content":"Retrieve and present the data","linkify":"Retrieve and present the data","nodes":[{"content":"Retrieve and present the data","pos":[0,29]}]},{"content":"Open the MainWindow.xaml file.","pos":[2829,2859]},{"pos":[2865,2973],"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> property on the <ph id=\"ph2\">&lt;xref:System.Windows.Window&gt;</ph> to 450.","source":"Set the <xref:System.Windows.FrameworkElement.Width%2A> property on the <xref:System.Windows.Window> to 450."},{"pos":[2979,3168],"content":"In the XAML editor, add the following <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> tag between the <ph id=\"ph2\">`&lt;Grid&gt;`</ph> and <ph id=\"ph3\">`&lt;/Grid&gt;`</ph> tags to add a <ph id=\"ph4\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> named <ph id=\"ph5\">`dataGrid1`</ph>.","source":"In the XAML editor, add the following <xref:System.Windows.Controls.DataGrid> tag between the `<Grid>` and `</Grid>` tags to add a <xref:System.Windows.Controls.DataGrid> named `dataGrid1`."},{"pos":[3317,3399],"content":"<bpt id=\"p1\">![</bpt>Window with DataGrid<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/datagrid-sql-ef-step6.png \"</bpt>DataGrid_SQL_EF_Step6<ept id=\"p2\">\")</ept>","source":"![Window with DataGrid](./media/datagrid-sql-ef-step6.png \"DataGrid_SQL_EF_Step6\")"},{"pos":[3405,3445],"content":"Select the <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph>.","source":"Select the <xref:System.Windows.Window>."},{"content":"Using the Properties window or XAML editor, create an event handler for the <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> named <ph id=\"ph2\">`Window_Loaded`</ph> for the <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event.","pos":[3451,3638],"source":"Using the Properties window or XAML editor, create an event handler for the <xref:System.Windows.Window> named `Window_Loaded` for the <xref:System.Windows.FrameworkElement.Loaded> event."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Create a Simple Event Handler<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb675300(v=vs.100))</ept>.","pos":[3639,3802],"source":" For more information, see [How to: Create a Simple Event Handler](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb675300(v=vs.100))."},{"content":"The following shows the XAML for MainWindow.xaml.","pos":[3809,3858]},{"pos":[3866,4027],"content":"[!NOTE]\nIf you are using Visual Basic, in the first line of MainWindow.xaml, replace `x:Class=\"DataGridSQLExample.MainWindow\"` with `x:Class=\"MainWindow\"`.","leadings":["","    > "],"nodes":[{"content":"If you are using Visual Basic, in the first line of MainWindow.xaml, replace <ph id=\"ph1\">`x:Class=\"DataGridSQLExample.MainWindow\"`</ph> with <ph id=\"ph2\">`x:Class=\"MainWindow\"`</ph>.","pos":[8,155],"source":"If you are using Visual Basic, in the first line of MainWindow.xaml, replace `x:Class=\"DataGridSQLExample.MainWindow\"` with `x:Class=\"MainWindow\"`."}]},{"pos":[4175,4281],"content":"Open the code-behind file (MainWindow.xaml.vb or MainWindow.xaml.cs) for the <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph>.","source":"Open the code-behind file (MainWindow.xaml.vb or MainWindow.xaml.cs) for the <xref:System.Windows.Window>."},{"pos":[4287,4521],"content":"Add the following code to retrieve only specific values from the joined tables and set the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> to the results of the query.","source":"Add the following code to retrieve only specific values from the joined tables and set the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property of the <xref:System.Windows.Controls.DataGrid> to the results of the query."},{"pos":[4528,4815],"content":"[!code-csharp[DataGrid_SQL_EF_Walkthrough#2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/CS/MainWindow.xaml.cs#2)]\n [!code-vb[DataGrid_SQL_EF_Walkthrough#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataGrid_SQL_EF_Walkthrough/VB/MainWindow.xaml.vb#2)]","leadings":["","    "],"nodes":[]},{"content":"Run the example.","pos":[4821,4837]},{"pos":[4844,4920],"content":"You should see a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> that displays data.","source":"You should see a <xref:System.Windows.Controls.DataGrid> that displays data."},{"pos":[4927,5025],"content":"<bpt id=\"p1\">![</bpt>DataGrid with data from SQL database<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/datagrid-sql-ef-step7.png \"</bpt>DataGrid_SQL_EF_Step7<ept id=\"p2\">\")</ept>","source":"![DataGrid with data from SQL database](./media/datagrid-sql-ef-step7.png \"DataGrid_SQL_EF_Step7\")"},{"pos":[5030,5038],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5084,5198],"content":"<bpt id=\"p1\">[</bpt>How Do I: Get Started with Entity Framework in WPF Applications?<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=159868)</ept>","source":"[How Do I: Get Started with Entity Framework in WPF Applications?](https://go.microsoft.com/fwlink/?LinkId=159868)"}]}