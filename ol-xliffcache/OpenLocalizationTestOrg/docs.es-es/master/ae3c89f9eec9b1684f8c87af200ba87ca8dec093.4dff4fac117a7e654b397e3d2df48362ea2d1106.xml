{"content":"---\ntitle: \"Untyped Request-Reply\"\nms.date: \"03/30/2017\"\nms.assetid: 0bf0f9d9-7caf-4d3d-8c9e-2d468cca16a5\n---\n# Untyped Request/Reply\nThis sample demonstrates how to define operation contracts that use the Message class.  \n  \n> [!NOTE]\n>  The setup procedure and build instructions for this sample are located at the end of this topic.  \n  \n This sample is based on the [Getting Started](../../../../docs/framework/wcf/samples/getting-started-sample.md). The service contract defines one operation that takes in a message type as an argument and returns a message. The operation collects all required data to compute the sum from the message body and then sends the sum as body in the return message.  \n  \n```csharp\n[OperationContract(Action = CalculatorService.RequestAction, ReplyAction = CalculatorService.ReplyAction)]  \nMessage ComputeSum(Message request);  \n```  \n  \n On the service, the operation retrieves the array of integers passed in the input message and then computes the sum. To send a response message, the sample creates a new message with the appropriate message version and Action and adds the computed sum as its body. The following sample code demonstrates this.  \n  \n```csharp\npublic Message ComputeSum(Message request)  \n{  \n    //The body of the message contains a list of numbers which will be   \n    //read as a int[] using GetBody<T>  \n    int result = 0;  \n  \n    int[] inputs = request.GetBody<int[]>();  \n    foreach (int i in inputs)  \n    {  \n        result += i;  \n    }  \n  \n    Message response = Message.CreateMessage(request.Version,   \n                                      ReplyAction, result);  \n    return response;  \n}  \n```  \n  \n The client uses code that is generated by [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) to create a proxy to the remote service. To send a request message, the client must have the message version, which depends on the underlying channel. Thus, it creates a new <xref:System.ServiceModel.OperationContextScope> scoped to the proxy channel it created, which creates an <xref:System.ServiceModel.OperationContext> with the correct message version populated in its `OutgoingMessageHeaders.MessageVersion` property. The client passes an input array as the body to the request message and then invokes the `ComputeSum` on the proxy. The client then retrieves the sum of the inputs it passed by accessing the `GetBody<T>` method on the reply message. The following sample code demonstrates this.  \n  \n```csharp\nusing (new OperationContextScope(client.InnerChannel))  \n{  \n    // Call the Sum service operation.  \n    int[] values = { 1, 2, 3, 4, 5 };  \n    Message request = Message.CreateMessage(  \n        OperationContext.Current.OutgoingMessageHeaders.MessageVersion,   \n        RequestAction, values);  \n    Message reply = client.ComputeSum(request);  \n    int response = reply.GetBody<int>();  \n  \n    Console.WriteLine(\"Sum of numbers passed (1,2,3,4,5) = {0}\",   \n                                                       response);  \n}  \n```  \n  \n This sample is a Web-hosted sample and so only the client executable must be run. The following is the sample output on the client.  \n  \n```console  \nPrompt>Client.exe  \nSum of numbers passed (1,2,3,4,5) = 15  \n  \nPress <ENTER> to terminate client.  \n```  \n  \n This sample is a Web-hosted sample and so check the link provided in step 3 to see how to build and run the sample.  \n  \n### To set up, build, and run the sample  \n  \n1.  Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md).  \n  \n2.  To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md).  \n  \n3.  To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md).  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Basic\\Contract\\Message\\Untyped`  \n","nodes":[{"pos":[4,105],"embed":true,"restype":"x-metadata","content":"title: \"Untyped Request-Reply\"\nms.date: \"03/30/2017\"\nms.assetid: 0bf0f9d9-7caf-4d3d-8c9e-2d468cca16a5","nodes":[{"content":"Untyped Request-Reply","nodes":[{"pos":[0,21],"content":"Untyped Request-Reply","nodes":[{"content":"Untyped Request-Reply","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[112,133],"content":"Untyped Request/Reply","linkify":"Untyped Request/Reply","nodes":[{"content":"Untyped Request/Reply","pos":[0,21]}]},{"content":"This sample demonstrates how to define operation contracts that use the Message class.","pos":[134,220]},{"pos":[228,335],"content":"[!NOTE]\n The setup procedure and build instructions for this sample are located at the end of this topic.","leadings":["","> "],"nodes":[{"content":"The setup procedure and build instructions for this sample are located at the end of this topic.","pos":[9,105]}]},{"content":"This sample is based on the <bpt id=\"p1\">[</bpt>Getting Started<ept id=\"p1\">](../../../../docs/framework/wcf/samples/getting-started-sample.md)</ept>.","pos":[342,454],"source":"This sample is based on the [Getting Started](../../../../docs/framework/wcf/samples/getting-started-sample.md)."},{"content":"The service contract defines one operation that takes in a message type as an argument and returns a message.","pos":[455,564]},{"content":"The operation collects all required data to compute the sum from the message body and then sends the sum as body in the return message.","pos":[565,700]},{"content":"On the service, the operation retrieves the array of integers passed in the input message and then computes the sum.","pos":[874,990]},{"content":"To send a response message, the sample creates a new message with the appropriate message version and Action and adds the computed sum as its body.","pos":[991,1138]},{"content":"The following sample code demonstrates this.","pos":[1139,1183]},{"content":"The client uses code that is generated by <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> to create a proxy to the remote service.","pos":[1673,1888],"source":"The client uses code that is generated by [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) to create a proxy to the remote service."},{"content":"To send a request message, the client must have the message version, which depends on the underlying channel.","pos":[1889,1998]},{"content":"Thus, it creates a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> scoped to the proxy channel it created, which creates an <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> with the correct message version populated in its <ph id=\"ph3\">`OutgoingMessageHeaders.MessageVersion`</ph> property.","pos":[1999,2271],"source":" Thus, it creates a new <xref:System.ServiceModel.OperationContextScope> scoped to the proxy channel it created, which creates an <xref:System.ServiceModel.OperationContext> with the correct message version populated in its `OutgoingMessageHeaders.MessageVersion` property."},{"content":"The client passes an input array as the body to the request message and then invokes the <ph id=\"ph1\">`ComputeSum`</ph> on the proxy.","pos":[2272,2387],"source":" The client passes an input array as the body to the request message and then invokes the `ComputeSum` on the proxy."},{"content":"The client then retrieves the sum of the inputs it passed by accessing the <ph id=\"ph1\">`GetBody&lt;T&gt;`</ph> method on the reply message.","pos":[2388,2504],"source":" The client then retrieves the sum of the inputs it passed by accessing the `GetBody<T>` method on the reply message."},{"content":"The following sample code demonstrates this.","pos":[2505,2549]},{"content":"This sample is a Web-hosted sample and so only the client executable must be run.","pos":[3109,3190]},{"content":"The following is the sample output on the client.","pos":[3191,3240]},{"content":"This sample is a Web-hosted sample and so check the link provided in step 3 to see how to build and run the sample.","pos":[3370,3485]},{"pos":[3495,3531],"content":"To set up, build, and run the sample","linkify":"To set up, build, and run the sample","nodes":[{"content":"To set up, build, and run the sample","pos":[0,36]}]},{"pos":[3541,3740],"content":"Ensure that you have performed the <bpt id=\"p1\">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)</ept>.","source":"Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)."},{"pos":[3750,3959],"content":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in <bpt id=\"p1\">[</bpt>Building the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.","source":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md)."},{"pos":[3969,4177],"content":"To run the sample in a single- or cross-machine configuration, follow the instructions in <bpt id=\"p1\">[</bpt>Running the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/running-the-samples.md)</ept>.","source":"To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md)."},{"pos":[4185,4317],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":"The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[14,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[0,53]},{"content":"Check for the following (default) directory before continuing.","pos":[54,116]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all Windows Communication Foundation (WCF) and <ph id=\"ph1\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[4371,4681],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[4682,4732]}]}