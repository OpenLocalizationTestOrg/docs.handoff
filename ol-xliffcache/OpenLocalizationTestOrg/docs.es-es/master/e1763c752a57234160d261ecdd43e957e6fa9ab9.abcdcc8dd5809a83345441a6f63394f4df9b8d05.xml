{"content":"---\ntitle: \"How to: Find Elements with a Specific Attribute (XPath-LINQ to XML) (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 4bb38d2c-bc7c-4196-8909-aaf41fb86b28\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\n---\n# How to: Find Elements with a Specific Attribute (XPath-LINQ to XML) (Visual Basic)\nSometimes you want to find all elements that have a specific attribute. You are not concerned about the contents of the attribute. Instead, you want to select based on the existence of the attribute.  \n  \n The XPath expression is:  \n  \n `./*[@Select]`  \n  \n## Example  \n The following code selects just the elements that have the `Select` attribute.  \n  \n```vb  \nDim doc As XElement = _   \n    <Root>  \n        <Child1>1</Child1>  \n        <Child2 Select='true'>2</Child2>  \n        <Child3>3</Child3>  \n        <Child4 Select='true'>4</Child4>  \n        <Child5>5</Child5>  \n    </Root>  \n  \n' LINQ to XML query  \nDim list1 As IEnumerable(Of XElement) = _  \n    From el In doc.Elements() _  \n    Where el.@Select <> Nothing _  \n    Select el  \n  \n' XPath expression  \nDim list2 As IEnumerable(Of XElement) = DirectCast(doc.XPathEvaluate _  \n    (\"./*[@Select]\"), IEnumerable).Cast(Of XElement)()  \n  \nIf list1.Count() = list2.Count() And _  \n    list1.Intersect(list2).Count() = list1.Count() Then  \n    Console.WriteLine(\"Results are identical\")  \nElse  \n    Console.WriteLine(\"Results differ\")  \nEnd If  \n  \nFor Each el As XElement In list1  \n    Console.WriteLine(el)  \nNext  \n  \n```  \n  \n This example produces the following output:  \n  \n```  \nResults are identical  \n<Child2 Select=\"true\">2</Child2>  \n<Child4 Select=\"true\">4</Child4>  \n```  \n  \n## See Also  \n [LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)","nodes":[{"pos":[12,111],"content":"How to: Find Elements with a Specific Attribute (XPath-LINQ to XML) (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Find Elements with a Specific Attribute (XPath-LINQ to XML) (Visual Basic) | Microsoft Docs","pos":[0,99]}]},{"pos":[418,500],"content":"How to: Find Elements with a Specific Attribute (XPath-LINQ to XML) (Visual Basic)","linkify":"How to: Find Elements with a Specific Attribute (XPath-LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Find Elements with a Specific Attribute (XPath-LINQ to XML) (Visual Basic)","pos":[0,82]}]},{"content":"Sometimes you want to find all elements that have a specific attribute.","pos":[501,572]},{"content":"You are not concerned about the contents of the attribute.","pos":[573,631]},{"content":"Instead, you want to select based on the existence of the attribute.","pos":[632,700]},{"content":"The XPath expression is:","pos":[707,731]},{"pos":[761,768],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[772,850],"content":"The following code selects just the elements that have the <ph id=\"ph1\">`Select`</ph> attribute.","source":"The following code selects just the elements that have the `Select` attribute."},{"content":"This example produces the following output:","pos":[1695,1738]},{"pos":[1856,1864],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1868,2001],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML for XPath Users (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept>","source":"[LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)"}]}