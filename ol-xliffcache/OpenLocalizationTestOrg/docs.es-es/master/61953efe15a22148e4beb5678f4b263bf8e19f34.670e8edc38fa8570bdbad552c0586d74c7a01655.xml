{"content":"---\ntitle: \"How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 53caa336-ab83-4181-b0f6-5c87c5f9e4ee\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\n---\n# How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (Visual Basic)\nThe following example shows how LINQ can be used with reflection to retrieve specific metadata about methods that match a specified search criterion. In this case, the query will find the names of all the methods in the assembly that return enumerable types such as arrays.  \n  \n## Example  \n  \n```vb  \nImports System.Reflection  \nImports System.IO  \nImports System.Linq  \nModule Module1  \n  \n    Sub Main()  \n        Dim asmbly As Assembly =   \n            Assembly.Load(\"System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken= b77a5c561934e089\")  \n  \n        Dim pubTypesQuery = From type In asmbly.GetTypes()   \n                            Where type.IsPublic   \n                            From method In type.GetMethods()   \n                            Where method.ReturnType.IsArray = True   \n                            Let name = method.ToString()   \n                            Let typeName = type.ToString()   \n                            Group name By typeName Into methodNames = Group  \n  \n        Console.WriteLine(\"Getting ready to iterate\")  \n        For Each item In pubTypesQuery  \n            Console.WriteLine(item.methodNames)  \n  \n            For Each type In item.methodNames  \n                Console.WriteLine(\" \" & type)  \n            Next  \n        Next  \n        Console.ReadKey()  \n    End Sub  \n  \nEnd Module  \n```  \n  \n The example uses the <xref:System.Reflection.Assembly.GetTypes%2A> method to return an array of types in the specified assembly. The [Where Clause](../../../../visual-basic/language-reference/queries/where-clause.md) filter is applied so that only public types are returned. For each public type, a subquery is generated by using the <xref:System.Reflection.MethodInfo> array that is returned from the <xref:System.Type.GetMethods%2A> call. These results are filtered to return only those methods whose return type is an array or else a type that implements <xref:System.Collections.Generic.IEnumerable%601>. Finally, these results are grouped by using the type name as a key.  \n  \n## Compiling the Code  \n Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a `Imports` statement for the System.Linq namespace.  \n  \n## See Also  \n [LINQ to Objects (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-objects.md)","nodes":[{"pos":[12,107],"content":"How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Query An Assembly&amp;#39;s Metadata with Reflection (LINQ) (Visual Basic) | Microsoft Docs","pos":[0,95],"source":"How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (Visual Basic) | Microsoft Docs"}]},{"pos":[414,492],"content":"How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (Visual Basic)","linkify":"How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (Visual Basic)","nodes":[{"content":"How to: Query An Assembly&amp;#39;s Metadata with Reflection (LINQ) (Visual Basic)","pos":[0,78],"source":"How to: Query An Assembly&#39;s Metadata with Reflection (LINQ) (Visual Basic)"}]},{"content":"The following example shows how LINQ can be used with reflection to retrieve specific metadata about methods that match a specified search criterion.","pos":[493,642]},{"content":"In this case, the query will find the names of all the methods in the assembly that return enumerable types such as arrays.","pos":[643,766]},{"pos":[775,782],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The example uses the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.GetTypes%2A&gt;</ph> method to return an array of types in the specified assembly.","pos":[1851,1979],"source":"The example uses the <xref:System.Reflection.Assembly.GetTypes%2A> method to return an array of types in the specified assembly."},{"content":"The <bpt id=\"p1\">[</bpt>Where Clause<ept id=\"p1\">](../../../../visual-basic/language-reference/queries/where-clause.md)</ept> filter is applied so that only public types are returned.","pos":[1980,2125],"source":" The [Where Clause](../../../../visual-basic/language-reference/queries/where-clause.md) filter is applied so that only public types are returned."},{"content":"For each public type, a subquery is generated by using the <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo&gt;</ph> array that is returned from the <ph id=\"ph2\">&lt;xref:System.Type.GetMethods%2A&gt;</ph> call.","pos":[2126,2291],"source":" For each public type, a subquery is generated by using the <xref:System.Reflection.MethodInfo> array that is returned from the <xref:System.Type.GetMethods%2A> call."},{"content":"These results are filtered to return only those methods whose return type is an array or else a type that implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.","pos":[2292,2459],"source":" These results are filtered to return only those methods whose return type is an array or else a type that implements <xref:System.Collections.Generic.IEnumerable%601>."},{"content":"Finally, these results are grouped by using the type name as a key.","pos":[2460,2527]},{"pos":[2536,2554],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[2558,2721],"content":"Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a <ph id=\"ph1\">`Imports`</ph> statement for the System.Linq namespace.","source":"Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a `Imports` statement for the System.Linq namespace."},{"pos":[2730,2738],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2742,2851],"content":"<bpt id=\"p1\">[</bpt>LINQ to Objects (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-objects.md)</ept>","source":"[LINQ to Objects (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-objects.md)"}]}