<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">867224b85bc8c6333a12c7197d129580c7fe4214</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\deployment\how-to-debug-clr-activation-issues.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff1947281abf167633851a2522c514fcc972ce2f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad8da53eda9e82ff27eff48c209b8b3b2505ad21</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Debug CLR Activation Issues | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Debug CLR Activation Issues</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If you encounter problems in getting your application to run with the correct version of the common language runtime (CLR), you can view and debug CLR activation logs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These logs can be very useful in determining the root cause of an activation issue, when your application either loads a different CLR version than expected or doesn't load the CLR at all.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>.NET Framework Initialization Errors: Managing the User Experience<ept id="p1">](../../../docs/framework/deployment/initialization-errors-managing-the-user-experience.md)</ept> discusses the experience when no CLR is found for an application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>CLR activation logging can be enabled system-wide by using an HKEY_LOCAL_MACHINE registry key or a system environment variable.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The log will be generated until the registry entry or the environment variable is removed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use a user or process-local environment variable to enable logging with a different scope and duration.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CLR activation logs shouldn't be confused with <bpt id="p1">[</bpt>assembly binding logs<ept id="p1">](../../../docs/framework/tools/fuslogvw-exe-assembly-binding-log-viewer.md)</ept>, which are entirely different.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To enable CLR activation logging</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Using the registry</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the Registry Editor, navigate to HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft<ph id="ph1">\\</ph>.NETFramework (on a 32-bit computer) or HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft<ph id="ph2">\\</ph>.NETFramework folder (on a 64-bit computer).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Add a string value named <ph id="ph1">`CLRLoadLogDir`</ph>, and set it to the full path of an existing directory where you'd like to store CLR activation logs.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Activation logging remains enabled until you remove the string value.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Using an environment variable</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`COMPLUS_CLRLoadLogDir`</ph> environment variable to a string that represents the full path of an existing directory where you'd like to store CLR activation logs.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>How you set the environment variable determines its scope:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you set it at the system level, activation logging is enabled for all .NET Framework applications on that computer until the environment variable is removed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you set it at the user level, activation logging is enabled only for the current user account.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Logging continues until the environment variable is removed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you set it from within the process before loading the CLR, activation logging is enabled until the process terminates.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you set it at a command prompt before you run an application, activation logging is enabled for any application that is run from that command prompt.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to store activation logs in the c:\clrloadlogs directory with process-level scope, open a Command Prompt window and type the following before you run the application:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CLR activation logs provide a large amount of data about CLR activation and the use of the CLR hosting APIs.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Most of this data is used internally by Microsoft, but some of the data can also be useful to developers, as described in this article.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The log reflects the order in which the CLR hosting APIs were called.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It also includes useful data about the set of installed runtimes detected on the computer.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The CLR activation log format is not itself documented, but can be used to aid developers who need to resolve CLR activation issues.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You cannot open an activation log until the process that uses the CLR has terminated.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CLR activation logs are not localized; they are always generated in the English language.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the following example of an activation log, the most useful information is highlighted and described after the log.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CLR Loading log<ept id="p1">**</ept> provides the path to the executable that started the process that loaded managed code.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Note that this could be a native host.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Installed Runtime<ept id="p1">**</ept> is the set of CLR versions installed on the computer that are candidates for the activation request.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>built with version<ept id="p1">**</ept> is the version of the CLR that was used to build the binary that was provided to a method such as <bpt id="p2">[</bpt>ICLRMetaHostPolicy::GetRequestedRuntime<ept id="p2">](../../../docs/framework/unmanaged-api/hosting/iclrmetahostpolicy-getrequestedruntime-method.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>feature-on-demand installation<ept id="p1">**</ept> refers to enabling the .NET Framework 3.5 on Windows 8.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>.NET Framework Initialization Errors: Managing the User Experience<ept id="p1">](../../../docs/framework/deployment/initialization-errors-managing-the-user-experience.md)</ept> for more information about this scenario.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Deployment<ept id="p1">](../../../docs/framework/deployment/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Configure an App to Support .NET Framework 4 or 4.5<ept id="p1">](../../../docs/framework/migration-guide/how-to-configure-an-app-to-support-net-framework-4-or-4-5.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>