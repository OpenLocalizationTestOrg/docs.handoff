<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c49aac5d42d3705f1eb6666f2b081f4ae0def922</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\usage-of-serialization-binder.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04752d3938ef923fa66b6b073fb42e6df78ed241</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d27bee0e8145c9394911d229679354cacf86de4b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Usage of Serialization Binder | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Usage of Serialization Binder</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample shows how to use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> to change the version of a generic type when it is serialized.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Demonstrates</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Discussion</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This sample shows how two entities that are targeting different versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> can communicate using the binary formatter and the serialization binder.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The development of this sample has been done using .NET Remoting.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The sample consists of a server targeting <ph id="ph1">[!INCLUDE[netfx40_long](../../../../includes/netfx40-long-md.md)]</ph>, which implements a contract with generic types, and two different clients, one targeting <ph id="ph2">[!INCLUDE[dnprdnlong](../../../../includes/dnprdnlong-md.md)]</ph> and another targeting <ph id="ph3">[!INCLUDE[netfx40_short](../../../../includes/netfx40-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The server attaches a <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> to the binary formatter to be able to change the version of the types accordingly on serialization, so both clients can deserialize those types properly.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To set up, build and run the sample</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To execute the client, right-click the solution, SBGenericsVTS (6 projects) and then select <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Common Properties<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Startup Project<ept id="p2">**</ept>, then select <bpt id="p3">**</bpt>Multiple Startup Projects<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Server<ept id="p1">**</ept> first, then <bpt id="p2">**</bpt>Client20<ept id="p2">**</ept> and then <bpt id="p3">**</bpt>Client40<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> action to these three projects and leave the rest set to <bpt id="p2">**</bpt>None<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> and then press F5 to run the sample.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>