{"content":"---\ntitle: \"How to: Get the Offset of a Visual\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"getting offset values from visual objects [WPF]\"\n  - \"offset values [WPF], retrieving from visual objects [WPF]\"\n  - \"visual objects [WPF], retrieving offset values from\"\n  - \"retrieving offset values from visual objects [WPF]\"\nms.assetid: 889a1dd6-1b11-445a-b351-fbb04c53ee34\n---\n# How to: Get the Offset of a Visual\nThese examples show how to retrieve the offset value of a visual object that is relative to its parent, or any ancestor or descendant.  \n  \n## Example  \n The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is defined with <xref:System.Windows.FrameworkElement.Margin%2A> value of 4.  \n  \n [!code-xaml[VisualSnippets#VisualSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet1)]  \n  \n The following code example shows how to use the <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A> method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock>. The offset values are contained within the returned <xref:System.Windows.Vector> value.  \n  \n [!code-csharp[VisualSnippets#VisualSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet2)]\n [!code-vb[VisualSnippets#VisualSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet2)]  \n  \n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> value. In this case, <xref:System.Windows.Vector.X%2A> is 4, and <xref:System.Windows.Vector.Y%2A> is 4.  \n  \n The returned offset value is relative to the parent of the <xref:System.Windows.Media.Visual>. If you want to return an offset value that is not relative to the parent of a <xref:System.Windows.Media.Visual>, use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method.  \n  \n## Getting the Offset Relative to an Ancestor  \n The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is nested within two <xref:System.Windows.Controls.StackPanel> objects.  \n  \n [!code-xaml[VisualSnippets#VisualSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window2.xaml#visualsnippet7)]  \n  \n The following illustration shows the results of the markup.  \n  \n ![Offset values of objects](./media/visualoffset-01.png \"VisualOffset_01\")  \nTextBlock nested within two StackPanels  \n  \n The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock> relative to the containing <xref:System.Windows.Window>. The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.  \n  \n [!code-csharp[VisualSnippets#VisualSnippet5](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet5)]\n [!code-vb[VisualSnippets#VisualSnippet5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet5)]  \n  \n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects within the containing <xref:System.Windows.Window>. In this case, <xref:System.Windows.Vector.X%2A> is 28 (16 + 8 + 4), and <xref:System.Windows.Vector.Y%2A> is 28.  \n  \n The returned offset value is relative to the ancestor of the <xref:System.Windows.Media.Visual>. If you want to return an offset value that is relative to the descendant of a <xref:System.Windows.Media.Visual>, use the <xref:System.Windows.Media.Visual.TransformToDescendant%2A> method.  \n  \n## Getting the Offset Relative to a Descendant  \n The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.  \n  \n [!code-xaml[VisualSnippets#VisualSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet4)]  \n  \n The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToDescendant%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>. The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.  \n  \n [!code-csharp[VisualSnippets#VisualSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet9)]\n [!code-vb[VisualSnippets#VisualSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet9)]  \n  \n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects. In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4. The offset values are negative values, since the parent object is negatively offset relative to its child object.  \n  \n## See also\n\n- <xref:System.Windows.Media.Visual>\n- <xref:System.Windows.Media.VisualTreeHelper>\n- [WPF Graphics Rendering Overview](wpf-graphics-rendering-overview.md)\n","nodes":[{"pos":[4,407],"embed":true,"restype":"x-metadata","content":"title: \"How to: Get the Offset of a Visual\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"getting offset values from visual objects [WPF]\"\n  - \"offset values [WPF], retrieving from visual objects [WPF]\"\n  - \"visual objects [WPF], retrieving offset values from\"\n  - \"retrieving offset values from visual objects [WPF]\"\nms.assetid: 889a1dd6-1b11-445a-b351-fbb04c53ee34","nodes":[{"content":"How to: Get the Offset of a Visual","nodes":[{"pos":[0,34],"content":"How to: Get the Offset of a Visual","nodes":[{"content":"How to: Get the Offset of a Visual","pos":[0,34]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[414,448],"content":"How to: Get the Offset of a Visual","linkify":"How to: Get the Offset of a Visual","nodes":[{"content":"How to: Get the Offset of a Visual","pos":[0,34]}]},{"content":"These examples show how to retrieve the offset value of a visual object that is relative to its parent, or any ancestor or descendant.","pos":[449,583]},{"pos":[592,599],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[603,762],"content":"The following markup example shows a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> that is defined with <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> value of 4.","source":"The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is defined with <xref:System.Windows.FrameworkElement.Margin%2A> value of 4."},{"content":"The following code example shows how to use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A&gt;</ph> method to retrieve the offset of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.","pos":[912,1096],"source":"The following code example shows how to use the <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A> method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock>."},{"content":"The offset values are contained within the returned <ph id=\"ph1\">&lt;xref:System.Windows.Vector&gt;</ph> value.","pos":[1097,1184],"source":" The offset values are contained within the returned <xref:System.Windows.Vector> value."},{"content":"The offset takes into account the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> value.","pos":[1488,1577],"source":"The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> value."},{"content":"In this case, <ph id=\"ph1\">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> is 4, and <ph id=\"ph2\">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> is 4.","pos":[1578,1675],"source":" In this case, <xref:System.Windows.Vector.X%2A> is 4, and <xref:System.Windows.Vector.Y%2A> is 4."},{"content":"The returned offset value is relative to the parent of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph>.","pos":[1682,1776],"source":"The returned offset value is relative to the parent of the <xref:System.Windows.Media.Visual>."},{"content":"If you want to return an offset value that is not relative to the parent of a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph>, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> method.","pos":[1777,1964],"source":" If you want to return an offset value that is not relative to the parent of a <xref:System.Windows.Media.Visual>, use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method."},{"pos":[1973,2015],"content":"Getting the Offset Relative to an Ancestor","linkify":"Getting the Offset Relative to an Ancestor","nodes":[{"content":"Getting the Offset Relative to an Ancestor","pos":[0,42]}]},{"pos":[2019,2173],"content":"The following markup example shows a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> that is nested within two <ph id=\"ph2\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> objects.","source":"The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is nested within two <xref:System.Windows.Controls.StackPanel> objects."},{"content":"The following illustration shows the results of the markup.","pos":[2323,2382]},{"content":"<bpt id=\"p1\">![</bpt>Offset values of objects<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/visualoffset-01.png \"</bpt>VisualOffset_01<ept id=\"p2\">\")</ept>","pos":[2389,2463],"source":"![Offset values of objects](./media/visualoffset-01.png \"VisualOffset_01\")"},{"content":"TextBlock nested within two StackPanels","pos":[2466,2505]},{"content":"The following code example shows how to use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> method to retrieve the offset of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> relative to the containing <ph id=\"ph3\">&lt;xref:System.Windows.Window&gt;</ph>.","pos":[2512,2752],"source":"The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock> relative to the containing <xref:System.Windows.Window>."},{"content":"The offset values are contained within the returned <ph id=\"ph1\">&lt;xref:System.Windows.Media.GeneralTransform&gt;</ph> value.","pos":[2753,2856],"source":" The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value."},{"content":"The offset takes into account the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> values for all objects within the containing <ph id=\"ph2\">&lt;xref:System.Windows.Window&gt;</ph>.","pos":[3160,3317],"source":"The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects within the containing <xref:System.Windows.Window>."},{"content":"In this case, <ph id=\"ph1\">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> is 28 (16 + 8 + 4), and <ph id=\"ph2\">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> is 28.","pos":[3318,3430],"source":" In this case, <xref:System.Windows.Vector.X%2A> is 28 (16 + 8 + 4), and <xref:System.Windows.Vector.Y%2A> is 28."},{"content":"The returned offset value is relative to the ancestor of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph>.","pos":[3437,3533],"source":"The returned offset value is relative to the ancestor of the <xref:System.Windows.Media.Visual>."},{"content":"If you want to return an offset value that is relative to the descendant of a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph>, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt;</ph> method.","pos":[3534,3723],"source":" If you want to return an offset value that is relative to the descendant of a <xref:System.Windows.Media.Visual>, use the <xref:System.Windows.Media.Visual.TransformToDescendant%2A> method."},{"pos":[3732,3775],"content":"Getting the Offset Relative to a Descendant","linkify":"Getting the Offset Relative to a Descendant","nodes":[{"content":"Getting the Offset Relative to a Descendant","pos":[0,43]}]},{"pos":[3779,3933],"content":"The following markup example shows a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> that is contained within a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> object.","source":"The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object."},{"content":"The following code example shows how to use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt;</ph> method to retrieve the offset of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> relative to its child <ph id=\"ph3\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.","pos":[4083,4333],"source":"The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToDescendant%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>."},{"content":"The offset values are contained within the returned <ph id=\"ph1\">&lt;xref:System.Windows.Media.GeneralTransform&gt;</ph> value.","pos":[4334,4437],"source":" The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value."},{"content":"The offset takes into account the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> values for all objects.","pos":[4741,4847],"source":"The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects."},{"content":"In this case, <ph id=\"ph1\">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> is -4, and <ph id=\"ph2\">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> is -4.","pos":[4848,4947],"source":" In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4."},{"content":"The offset values are negative values, since the parent object is negatively offset relative to its child object.","pos":[4948,5061]},{"pos":[5070,5078],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5166,5235],"content":"<bpt id=\"p1\">[</bpt>WPF Graphics Rendering Overview<ept id=\"p1\">](wpf-graphics-rendering-overview.md)</ept>","source":"[WPF Graphics Rendering Overview](wpf-graphics-rendering-overview.md)"}]}