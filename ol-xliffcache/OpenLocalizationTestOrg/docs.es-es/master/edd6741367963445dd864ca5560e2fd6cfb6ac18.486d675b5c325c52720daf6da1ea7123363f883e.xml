{"content":"---\ntitle: \"How to: Draw Shapes with the OvalShape and RectangleShape Controls (Visual Studio) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"OvalShape control\"\n  - \"shapes, drawing\"\n  - \"RectangleShape control\"\nms.assetid: 0275b4c6-7a13-46c8-90f3-61db308c6b5d\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Draw Shapes with the OvalShape and RectangleShape Controls (Visual Studio)\nYou can use the <xref:Microsoft.VisualBasic.PowerPacks.OvalShape> control to draw circles or ovals on a form or container, both at design time and at run time. You can use the <xref:Microsoft.VisualBasic.PowerPacks.RectangleShape> control to draw squares, rectangles, or rectangles with rounded corners on a form or container. You can also use this control to draw shapes both at design time and at run time.  \n  \n You can customize the appearance of a shape by changing the width, color, and style of the border. The background of a shape is transparent by default; you can customize the background to display a solid color, a pattern, a gradient fill (transitioning from one color to another), or an image.  \n  \n### To draw a simple shape at design time  \n  \n1.  Drag the <xref:Microsoft.VisualBasic.PowerPacks.OvalShape> or <xref:Microsoft.VisualBasic.PowerPacks.RectangleShape> control from the **Visual Basic PowerPacks** tab (to install, see [Visual Basic Power Packs Controls](../../../visual-basic/developing-apps/windows-forms/power-packs-controls.md))in the **Toolbox** to a form or container control.  \n  \n2.  Drag the sizing and move handles to size and position the shape.  \n  \n     You can also size and position the shape by changing the `Size` and `Position` properties in the **Properties** window.  \n  \n     To create a rectangle with rounded corners, select the `CornerRadius` property in the **Properties** window and set it to a value that is greater than 0.  \n  \n3.  In the **Properties** window, optionally set additional properties to change the appearance of the shape.  \n  \n### To draw a simple shape at run time  \n  \n1.  On the **Project** menu, click **Add Reference**.  \n  \n2.  In the **Add Reference** dialog box, select **Microsoft.VisualBasic.PowerPacks.VS**, and then click **OK**.  \n  \n3.  In the **Code Editor**, add an `Imports` or `using` statement at the top of the module:  \n  \n```vb  \nImports Microsoft.VisualBasic.PowerPacks  \n```  \n  \n```csharp  \nusing Microsoft.VisualBasic.PowerPacks;  \n```  \n  \n4.  Add the following code in an `Event` procedure:  \n  \n     [!code-cs[VbPowerpacksShape#1](../../../visual-basic/developing-apps/windows-forms/codesnippet/CSharp/how-to-draw-shapes-with-the-ovalshape-and-rectangleshape-controls_1.cs)]\n     [!code-vb[VbPowerpacksShape#1](../../../visual-basic/developing-apps/windows-forms/codesnippet/VisualBasic/how-to-draw-shapes-with-the-ovalshape-and-rectangleshape-controls_1.vb)]  \n  \n## Customizing Shapes  \n When you use the default settings, the <xref:Microsoft.VisualBasic.PowerPacks.OvalShape> and <xref:Microsoft.VisualBasic.PowerPacks.RectangleShape> controls are displayed with a solid black border that is one pixel wide and a transparent background. You can change the width, style, and color of the border by setting properties. Additional properties enable you to change the background of a shape to a solid color, a pattern, a gradient fill, or an image.  \n  \n Before you change the background of a shape, you should know how several of the properties interact.  \n  \n-   The <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackColor%2A> property setting has no effect unless the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackStyle%2A> property is set to <xref:Microsoft.VisualBasic.PowerPacks.BackStyle>.  \n  \n-   If the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillStyle%2A> property is set to <xref:Microsoft.VisualBasic.PowerPacks.FillStyle>, the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillColor%2A> overrides the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackColor%2A>.  \n  \n-   If the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillStyle%2A> property is set to a pattern value such as <xref:Microsoft.VisualBasic.PowerPacks.FillStyle> or <xref:Microsoft.VisualBasic.PowerPacks.FillStyle>, the pattern will be displayed in the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillColor%2A>. The background will be displayed in the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackColor%2A>, provided that the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackStyle%2A> property is set to <xref:Microsoft.VisualBasic.PowerPacks.BackStyle>.  \n  \n-   In order to display a gradient fill, the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillStyle%2A> property must be set to <xref:Microsoft.VisualBasic.PowerPacks.FillStyle> and the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillGradientStyle%2A> property must be set to a value other than <xref:Microsoft.VisualBasic.PowerPacks.FillGradientStyle>.  \n  \n-   Setting the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackgroundImage%2A> property to an image overrides all other background settings.  \n  \n#### To draw a circle that has a custom border  \n  \n1.  Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control.  \n  \n2.  In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values.  \n  \n3.  Set the `BorderColor` property to the color that you want.  \n  \n4.  Set the `BorderStyle` property to any value other than `Solid`.  \n  \n5.  Set the `BorderWidth` to the size that you want, in pixels.  \n  \n#### To draw a circle that has a solid fill  \n  \n1.  Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control.  \n  \n2.  In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values.  \n  \n3.  Set the `BackColor` property to the color that you want.  \n  \n4.  Set the `BackStyle` property to `Opaque`.  \n  \n#### To draw a circle that has a patterned fill  \n  \n1.  Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control.  \n  \n2.  In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values.  \n  \n3.  Set the `BackColor` property to the color that you want for the background.  \n  \n4.  Set the `BackStyle` property to `Opaque`.  \n  \n5.  Set the `FillColor` property to the color that you want for the pattern.  \n  \n6.  Set the `FillStyle` property to any value other than `Transparent` or `Solid`.  \n  \n#### To draw a circle that has a gradient fill  \n  \n1.  Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control.  \n  \n2.  In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values.  \n  \n3.  Set the `FillColor` property to the color that you want for the starting color.  \n  \n4.  Set the `FillGradientColor` property to the color that you want for the ending color.  \n  \n5.  Set the `FillGradientStyle` property to a value other than `None`.  \n  \n#### To draw a circle that is filled with an image  \n  \n1.  Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control.  \n  \n2.  In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values.  \n  \n3.  Select the `BackgroundImage` property and click the **ellipsis** button (...).  \n  \n4.  In the **Select Resource** dialog box, select an image to display. If no image resources are listed, click **Import** to browse to the location of an image.  \n  \n5.  Click **OK** to insert the image.  \n  \n## See Also  \n <xref:Microsoft.VisualBasic.PowerPacks.OvalShape>   \n <xref:Microsoft.VisualBasic.PowerPacks.RectangleShape>   \n [Introduction to the Line and Shape Controls](../../../visual-basic/developing-apps/windows-forms/introduction-to-the-line-and-shape-controls-visual-studio.md)   \n [How to: Draw Lines with the LineShape Control](../../../visual-basic/developing-apps/windows-forms/how-to-draw-lines-with-the-lineshape-control-visual-studio.md)","nodes":[{"pos":[4,646],"embed":true,"restype":"x-metadata","content":"title: \"How to: Draw Shapes with the OvalShape and RectangleShape Controls (Visual Studio) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"OvalShape control\"\n  - \"shapes, drawing\"\n  - \"RectangleShape control\"\nms.assetid: 0275b4c6-7a13-46c8-90f3-61db308c6b5d\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"How to: Draw Shapes with the OvalShape and RectangleShape Controls (Visual Studio) | Microsoft Docs","nodes":[{"pos":[0,99],"content":"How to: Draw Shapes with the OvalShape and RectangleShape Controls (Visual Studio) | Microsoft Docs","nodes":[{"content":"How to: Draw Shapes with the OvalShape and RectangleShape Controls (Visual Studio) | Microsoft Docs","pos":[0,99]}]}],"path":["title"]}],"yml":true},{"pos":[653,735],"content":"How to: Draw Shapes with the OvalShape and RectangleShape Controls (Visual Studio)","linkify":"How to: Draw Shapes with the OvalShape and RectangleShape Controls (Visual Studio)","nodes":[{"content":"How to: Draw Shapes with the OvalShape and RectangleShape Controls (Visual Studio)","pos":[0,82]}]},{"content":"You can use the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.OvalShape&gt;</ph> control to draw circles or ovals on a form or container, both at design time and at run time.","pos":[736,895],"source":"You can use the <xref:Microsoft.VisualBasic.PowerPacks.OvalShape> control to draw circles or ovals on a form or container, both at design time and at run time."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.RectangleShape&gt;</ph> control to draw squares, rectangles, or rectangles with rounded corners on a form or container.","pos":[896,1062],"source":" You can use the <xref:Microsoft.VisualBasic.PowerPacks.RectangleShape> control to draw squares, rectangles, or rectangles with rounded corners on a form or container."},{"content":"You can also use this control to draw shapes both at design time and at run time.","pos":[1063,1144]},{"content":"You can customize the appearance of a shape by changing the width, color, and style of the border.","pos":[1151,1249]},{"content":"The background of a shape is transparent by default; you can customize the background to display a solid color, a pattern, a gradient fill (transitioning from one color to another), or an image.","pos":[1250,1444]},{"pos":[1454,1491],"content":"To draw a simple shape at design time","linkify":"To draw a simple shape at design time","nodes":[{"content":"To draw a simple shape at design time","pos":[0,37]}]},{"pos":[1501,1847],"content":"Drag the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.OvalShape&gt;</ph> or <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.PowerPacks.RectangleShape&gt;</ph> control from the <bpt id=\"p1\">**</bpt>Visual Basic PowerPacks<ept id=\"p1\">**</ept> tab (to install, see <bpt id=\"p2\">[</bpt>Visual Basic Power Packs Controls<ept id=\"p2\">](../../../visual-basic/developing-apps/windows-forms/power-packs-controls.md)</ept>)in the <bpt id=\"p3\">**</bpt>Toolbox<ept id=\"p3\">**</ept> to a form or container control.","source":"Drag the <xref:Microsoft.VisualBasic.PowerPacks.OvalShape> or <xref:Microsoft.VisualBasic.PowerPacks.RectangleShape> control from the **Visual Basic PowerPacks** tab (to install, see [Visual Basic Power Packs Controls](../../../visual-basic/developing-apps/windows-forms/power-packs-controls.md))in the **Toolbox** to a form or container control."},{"content":"Drag the sizing and move handles to size and position the shape.","pos":[1857,1921]},{"pos":[1932,2051],"content":"You can also size and position the shape by changing the <ph id=\"ph1\">`Size`</ph> and <ph id=\"ph2\">`Position`</ph> properties in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window.","source":"You can also size and position the shape by changing the `Size` and `Position` properties in the **Properties** window."},{"pos":[2062,2215],"content":"To create a rectangle with rounded corners, select the <ph id=\"ph1\">`CornerRadius`</ph> property in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window and set it to a value that is greater than 0.","source":"To create a rectangle with rounded corners, select the `CornerRadius` property in the **Properties** window and set it to a value that is greater than 0."},{"pos":[2225,2330],"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, optionally set additional properties to change the appearance of the shape.","source":"In the **Properties** window, optionally set additional properties to change the appearance of the shape."},{"pos":[2340,2374],"content":"To draw a simple shape at run time","linkify":"To draw a simple shape at run time","nodes":[{"content":"To draw a simple shape at run time","pos":[0,34]}]},{"pos":[2384,2433],"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Add Reference<ept id=\"p2\">**</ept>.","source":"On the **Project** menu, click **Add Reference**."},{"pos":[2443,2550],"content":"In the <bpt id=\"p1\">**</bpt>Add Reference<ept id=\"p1\">**</ept> dialog box, select <bpt id=\"p2\">**</bpt>Microsoft.VisualBasic.PowerPacks.VS<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>OK<ept id=\"p3\">**</ept>.","source":"In the **Add Reference** dialog box, select **Microsoft.VisualBasic.PowerPacks.VS**, and then click **OK**."},{"pos":[2560,2647],"content":"In the <bpt id=\"p1\">**</bpt>Code Editor<ept id=\"p1\">**</ept>, add an <ph id=\"ph1\">`Imports`</ph> or <ph id=\"ph2\">`using`</ph> statement at the top of the module:","source":"In the **Code Editor**, add an `Imports` or `using` statement at the top of the module:"},{"pos":[2780,2827],"content":"Add the following code in an <ph id=\"ph1\">`Event`</ph> procedure:","source":"Add the following code in an `Event` procedure:"},{"pos":[2838,3197],"content":"[!code-cs[VbPowerpacksShape#1](../../../visual-basic/developing-apps/windows-forms/codesnippet/CSharp/how-to-draw-shapes-with-the-ovalshape-and-rectangleshape-controls_1.cs)]\n [!code-vb[VbPowerpacksShape#1](../../../visual-basic/developing-apps/windows-forms/codesnippet/VisualBasic/how-to-draw-shapes-with-the-ovalshape-and-rectangleshape-controls_1.vb)]","leadings":["","    "],"nodes":[]},{"pos":[3206,3224],"content":"Customizing Shapes","linkify":"Customizing Shapes","nodes":[{"content":"Customizing Shapes","pos":[0,18]}]},{"content":"When you use the default settings, the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.OvalShape&gt;</ph> and <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.PowerPacks.RectangleShape&gt;</ph> controls are displayed with a solid black border that is one pixel wide and a transparent background.","pos":[3228,3477],"source":"When you use the default settings, the <xref:Microsoft.VisualBasic.PowerPacks.OvalShape> and <xref:Microsoft.VisualBasic.PowerPacks.RectangleShape> controls are displayed with a solid black border that is one pixel wide and a transparent background."},{"content":"You can change the width, style, and color of the border by setting properties.","pos":[3478,3557]},{"content":"Additional properties enable you to change the background of a shape to a solid color, a pattern, a gradient fill, or an image.","pos":[3558,3685]},{"content":"Before you change the background of a shape, you should know how several of the properties interact.","pos":[3692,3792]},{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackColor%2A&gt;</ph> property setting has no effect unless the <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackStyle%2A&gt;</ph> property is set to <ph id=\"ph3\">&lt;xref:Microsoft.VisualBasic.PowerPacks.BackStyle&gt;</ph>.","pos":[3802,4047],"source":"The <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackColor%2A> property setting has no effect unless the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackStyle%2A> property is set to <xref:Microsoft.VisualBasic.PowerPacks.BackStyle>."},{"content":"If the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillStyle%2A&gt;</ph> property is set to <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.PowerPacks.FillStyle&gt;</ph>, the <ph id=\"ph3\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillColor%2A&gt;</ph> overrides the <ph id=\"ph4\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackColor%2A&gt;</ph>.","pos":[4057,4347],"source":"If the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillStyle%2A> property is set to <xref:Microsoft.VisualBasic.PowerPacks.FillStyle>, the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillColor%2A> overrides the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackColor%2A>."},{"content":"If the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillStyle%2A&gt;</ph> property is set to a pattern value such as <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.PowerPacks.FillStyle&gt;</ph> or <ph id=\"ph3\">&lt;xref:Microsoft.VisualBasic.PowerPacks.FillStyle&gt;</ph>, the pattern will be displayed in the <ph id=\"ph4\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillColor%2A&gt;</ph>.","pos":[4357,4678],"source":"If the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillStyle%2A> property is set to a pattern value such as <xref:Microsoft.VisualBasic.PowerPacks.FillStyle> or <xref:Microsoft.VisualBasic.PowerPacks.FillStyle>, the pattern will be displayed in the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillColor%2A>."},{"content":"The background will be displayed in the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackColor%2A&gt;</ph>, provided that the <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackStyle%2A&gt;</ph> property is set to <ph id=\"ph3\">&lt;xref:Microsoft.VisualBasic.PowerPacks.BackStyle&gt;</ph>.","pos":[4679,4937],"source":" The background will be displayed in the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackColor%2A>, provided that the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackStyle%2A> property is set to <xref:Microsoft.VisualBasic.PowerPacks.BackStyle>."},{"content":"In order to display a gradient fill, the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillStyle%2A&gt;</ph> property must be set to <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.PowerPacks.FillStyle&gt;</ph> and the <ph id=\"ph3\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillGradientStyle%2A&gt;</ph> property must be set to a value other than <ph id=\"ph4\">&lt;xref:Microsoft.VisualBasic.PowerPacks.FillGradientStyle&gt;</ph>.","pos":[4947,5309],"source":"In order to display a gradient fill, the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillStyle%2A> property must be set to <xref:Microsoft.VisualBasic.PowerPacks.FillStyle> and the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.FillGradientStyle%2A> property must be set to a value other than <xref:Microsoft.VisualBasic.PowerPacks.FillGradientStyle>."},{"content":"Setting the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackgroundImage%2A&gt;</ph> property to an image overrides all other background settings.","pos":[5319,5463],"source":"Setting the <xref:Microsoft.VisualBasic.PowerPacks.SimpleShape.BackgroundImage%2A> property to an image overrides all other background settings."},{"pos":[5474,5515],"content":"To draw a circle that has a custom border","linkify":"To draw a circle that has a custom border","nodes":[{"content":"To draw a circle that has a custom border","pos":[0,41]}]},{"pos":[5525,5645],"content":"Drag the <ph id=\"ph1\">`OvalShape`</ph> control from the <bpt id=\"p1\">**</bpt>Visual Basic PowerPacks<ept id=\"p1\">**</ept> tab in the <bpt id=\"p2\">**</bpt>Toolbox<ept id=\"p2\">**</ept> to a form or container control.","source":"Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control."},{"pos":[5655,5750],"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, in the <ph id=\"ph1\">`Size`</ph> property, set <ph id=\"ph2\">`Height`</ph> and <ph id=\"ph3\">`Width`</ph> to equal values.","source":"In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values."},{"pos":[5760,5818],"content":"Set the <ph id=\"ph1\">`BorderColor`</ph> property to the color that you want.","source":"Set the `BorderColor` property to the color that you want."},{"pos":[5828,5891],"content":"Set the <ph id=\"ph1\">`BorderStyle`</ph> property to any value other than <ph id=\"ph2\">`Solid`</ph>.","source":"Set the `BorderStyle` property to any value other than `Solid`."},{"pos":[5901,5960],"content":"Set the <ph id=\"ph1\">`BorderWidth`</ph> to the size that you want, in pixels.","source":"Set the `BorderWidth` to the size that you want, in pixels."},{"pos":[5971,6009],"content":"To draw a circle that has a solid fill","linkify":"To draw a circle that has a solid fill","nodes":[{"content":"To draw a circle that has a solid fill","pos":[0,38]}]},{"pos":[6019,6139],"content":"Drag the <ph id=\"ph1\">`OvalShape`</ph> control from the <bpt id=\"p1\">**</bpt>Visual Basic PowerPacks<ept id=\"p1\">**</ept> tab in the <bpt id=\"p2\">**</bpt>Toolbox<ept id=\"p2\">**</ept> to a form or container control.","source":"Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control."},{"pos":[6149,6244],"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, in the <ph id=\"ph1\">`Size`</ph> property, set <ph id=\"ph2\">`Height`</ph> and <ph id=\"ph3\">`Width`</ph> to equal values.","source":"In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values."},{"pos":[6254,6310],"content":"Set the <ph id=\"ph1\">`BackColor`</ph> property to the color that you want.","source":"Set the `BackColor` property to the color that you want."},{"pos":[6320,6361],"content":"Set the <ph id=\"ph1\">`BackStyle`</ph> property to <ph id=\"ph2\">`Opaque`</ph>.","source":"Set the `BackStyle` property to `Opaque`."},{"pos":[6372,6414],"content":"To draw a circle that has a patterned fill","linkify":"To draw a circle that has a patterned fill","nodes":[{"content":"To draw a circle that has a patterned fill","pos":[0,42]}]},{"pos":[6424,6544],"content":"Drag the <ph id=\"ph1\">`OvalShape`</ph> control from the <bpt id=\"p1\">**</bpt>Visual Basic PowerPacks<ept id=\"p1\">**</ept> tab in the <bpt id=\"p2\">**</bpt>Toolbox<ept id=\"p2\">**</ept> to a form or container control.","source":"Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control."},{"pos":[6554,6649],"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, in the <ph id=\"ph1\">`Size`</ph> property, set <ph id=\"ph2\">`Height`</ph> and <ph id=\"ph3\">`Width`</ph> to equal values.","source":"In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values."},{"pos":[6659,6734],"content":"Set the <ph id=\"ph1\">`BackColor`</ph> property to the color that you want for the background.","source":"Set the `BackColor` property to the color that you want for the background."},{"pos":[6744,6785],"content":"Set the <ph id=\"ph1\">`BackStyle`</ph> property to <ph id=\"ph2\">`Opaque`</ph>.","source":"Set the `BackStyle` property to `Opaque`."},{"pos":[6795,6867],"content":"Set the <ph id=\"ph1\">`FillColor`</ph> property to the color that you want for the pattern.","source":"Set the `FillColor` property to the color that you want for the pattern."},{"pos":[6877,6955],"content":"Set the <ph id=\"ph1\">`FillStyle`</ph> property to any value other than <ph id=\"ph2\">`Transparent`</ph> or <ph id=\"ph3\">`Solid`</ph>.","source":"Set the `FillStyle` property to any value other than `Transparent` or `Solid`."},{"pos":[6966,7007],"content":"To draw a circle that has a gradient fill","linkify":"To draw a circle that has a gradient fill","nodes":[{"content":"To draw a circle that has a gradient fill","pos":[0,41]}]},{"pos":[7017,7137],"content":"Drag the <ph id=\"ph1\">`OvalShape`</ph> control from the <bpt id=\"p1\">**</bpt>Visual Basic PowerPacks<ept id=\"p1\">**</ept> tab in the <bpt id=\"p2\">**</bpt>Toolbox<ept id=\"p2\">**</ept> to a form or container control.","source":"Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control."},{"pos":[7147,7242],"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, in the <ph id=\"ph1\">`Size`</ph> property, set <ph id=\"ph2\">`Height`</ph> and <ph id=\"ph3\">`Width`</ph> to equal values.","source":"In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values."},{"pos":[7252,7331],"content":"Set the <ph id=\"ph1\">`FillColor`</ph> property to the color that you want for the starting color.","source":"Set the `FillColor` property to the color that you want for the starting color."},{"pos":[7341,7426],"content":"Set the <ph id=\"ph1\">`FillGradientColor`</ph> property to the color that you want for the ending color.","source":"Set the `FillGradientColor` property to the color that you want for the ending color."},{"pos":[7436,7502],"content":"Set the <ph id=\"ph1\">`FillGradientStyle`</ph> property to a value other than <ph id=\"ph2\">`None`</ph>.","source":"Set the `FillGradientStyle` property to a value other than `None`."},{"pos":[7513,7558],"content":"To draw a circle that is filled with an image","linkify":"To draw a circle that is filled with an image","nodes":[{"content":"To draw a circle that is filled with an image","pos":[0,45]}]},{"pos":[7568,7688],"content":"Drag the <ph id=\"ph1\">`OvalShape`</ph> control from the <bpt id=\"p1\">**</bpt>Visual Basic PowerPacks<ept id=\"p1\">**</ept> tab in the <bpt id=\"p2\">**</bpt>Toolbox<ept id=\"p2\">**</ept> to a form or container control.","source":"Drag the `OvalShape` control from the **Visual Basic PowerPacks** tab in the **Toolbox** to a form or container control."},{"pos":[7698,7793],"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, in the <ph id=\"ph1\">`Size`</ph> property, set <ph id=\"ph2\">`Height`</ph> and <ph id=\"ph3\">`Width`</ph> to equal values.","source":"In the **Properties** window, in the `Size` property, set `Height` and `Width` to equal values."},{"pos":[7803,7881],"content":"Select the <ph id=\"ph1\">`BackgroundImage`</ph> property and click the <bpt id=\"p1\">**</bpt>ellipsis<ept id=\"p1\">**</ept> button (...).","source":"Select the `BackgroundImage` property and click the **ellipsis** button (...)."},{"content":"In the <bpt id=\"p1\">**</bpt>Select Resource<ept id=\"p1\">**</ept> dialog box, select an image to display.","pos":[7891,7957],"source":"In the **Select Resource** dialog box, select an image to display."},{"content":"If no image resources are listed, click <bpt id=\"p1\">**</bpt>Import<ept id=\"p1\">**</ept> to browse to the location of an image.","pos":[7958,8047],"source":" If no image resources are listed, click **Import** to browse to the location of an image."},{"pos":[8057,8090],"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to insert the image.","source":"Click **OK** to insert the image."},{"pos":[8099,8107],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.OvalShape&gt;</ph>","pos":[8111,8160],"source":"<xref:Microsoft.VisualBasic.PowerPacks.OvalShape> "},{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.PowerPacks.RectangleShape&gt;</ph>","pos":[8165,8219],"source":"<xref:Microsoft.VisualBasic.PowerPacks.RectangleShape> "},{"content":"<bpt id=\"p1\">[</bpt>Introduction to the Line and Shape Controls<ept id=\"p1\">](../../../visual-basic/developing-apps/windows-forms/introduction-to-the-line-and-shape-controls-visual-studio.md)</ept><ph id=\"ph1\"> </ph>","pos":[8224,8384],"source":"[Introduction to the Line and Shape Controls](../../../visual-basic/developing-apps/windows-forms/introduction-to-the-line-and-shape-controls-visual-studio.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Draw Lines with the LineShape Control<ept id=\"p1\">](../../../visual-basic/developing-apps/windows-forms/how-to-draw-lines-with-the-lineshape-control-visual-studio.md)</ept>","pos":[8388,8550],"source":"[How to: Draw Lines with the LineShape Control](../../../visual-basic/developing-apps/windows-forms/how-to-draw-lines-with-the-lineshape-control-visual-studio.md)"}]}