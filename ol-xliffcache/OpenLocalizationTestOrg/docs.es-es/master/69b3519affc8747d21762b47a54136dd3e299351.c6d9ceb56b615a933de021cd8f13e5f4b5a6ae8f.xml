{"content":"---\ntitle: \"The Ink Threading Model | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"application user interface thread\"\n  - \"stylus plug-in\"\n  - \"ink threading model\"\n  - \"ink, rendering\"\n  - \"pen thread\"\n  - \"threading model\"\n  - \"rendering ink\"\n  - \"dynamic rendering thread\"\n  - \"ink collection plug-in\"\n  - \"plug-ins, for ink\"\nms.assetid: c85fcad1-cb50-4431-847c-ac4145a35c89\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# The Ink Threading Model\nOne of the benefits of ink on a Tablet PC is that it feels a lot like writing with a regular pen and paper.  To accomplish this, the tablet pen collects input data at a much higher rate than a mouse does and renders the ink as the user writes.  The application's user interface (UI) thread is not sufficient for collecting pen data and rendering ink, because it can become blocked.  To solve this, a [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] application uses two additional threads when a user writes ink.  \n  \n The following list describes the threads that take part in collecting and rendering digital ink:  \n  \n-   Pen thread - the thread that takes input from the stylus.  (In reality, this is a thread pool, but this topic refers to it as a pen thread.)  \n  \n-   Application user interface thread - the thread that controls the user interface of the application.  \n  \n-   Dynamic rendering thread - the thread that renders the ink while the user draws a stroke. The dynamic rendering thread is different than the thread that renders other UI elements for the application, as mentioned in Window Presentation Foundation [Threading Model](../../../../docs/framework/wpf/advanced/threading-model.md).  \n  \n The inking model is the same whether the application uses the <xref:System.Windows.Controls.InkCanvas> or a custom control similar to the one in [Creating an Ink Input Control](../../../../docs/framework/wpf/advanced/creating-an-ink-input-control.md).  Although this topic discusses threading in terms of the <xref:System.Windows.Controls.InkCanvas>, the same concepts apply when you create a custom control.  \n  \n## Threading Overview  \n The following diagram illustrates the threading model when a user draws a stroke:  \n  \n ![Threading model while drawing a stroke.](../../../../docs/framework/wpf/advanced/media/inkthreading-drawingink.png \"InkThreading_DrawingInk\")  \n  \n1.  Actions occurring while the user draws the stroke  \n  \n    1.  When the user draws a stroke, the stylus points come in on the pen thread.  Stylus plug-ins, including the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>, accept the stylus points on the pen thread and have the chance to modify them before the <xref:System.Windows.Controls.InkCanvas> receives them.  \n  \n    2.  The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> renders the stylus points on the dynamic rendering thread. This happens at the same time as the previous step.  \n  \n    3.  The <xref:System.Windows.Controls.InkCanvas> receives the stylus points on the UI thread.  \n  \n2.  Actions occurring after the user ends the stroke  \n  \n    1.  When the user finishes drawing the stroke, the <xref:System.Windows.Controls.InkCanvas> creates a <xref:System.Windows.Ink.Stroke> object and adds it to the <xref:System.Windows.Controls.InkPresenter>, which statically renders it.  \n  \n    2.  The UI thread alerts the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> that the stroke is statically rendered, so the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> removes its visual representation of the stroke.  \n  \n## Ink collection and Stylus Plug-ins  \n Each <xref:System.Windows.UIElement> has a <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection>.  The <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> objects in the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> receive and can modify the stylus points on the pen thread. The <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> objects receive the stylus points according to their order in the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection>.  \n  \n The following diagram illustrates the hypothetical situation where the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection of a <xref:System.Windows.UIElement> contains `stylusPlugin1`, a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>, and `stylusPlugin2`, in that order.  \n  \n ![Order of Stylus Plugins affect output.](../../../../docs/framework/wpf/advanced/media/inkthreading-pluginorder.png \"InkThreading_PluginOrder\")  \n  \n In the previous diagram, the following behavior takes place:  \n  \n1.  `StylusPlugin1` modifies the values for x and y.  \n  \n2.  <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> receives the modified stylus points and renders them on the dynamic rendering thread.  \n  \n3.  `StylusPlugin2` receives the modified stylus points and further modifies the values for x and y.  \n  \n4.  The application collects the stylus points, and, when the user finishes the stroke, statically renders the stroke.  \n  \n Suppose that `stylusPlugin1` restricts the stylus points to a rectangle and `stylusPlugin2` translates the stylus points to the right.  In the previous scenario, the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> receives the restricted stylus points, but not the translated stylus points.  When the user draws the stroke, the stroke is rendered within the bounds of the rectangle, but the stroke doesn't appear to be translated until the user lifts the pen.  \n  \n### Performing operations with a Stylus Plug-in on the UI thread  \n Because accurate hit-testing cannot be performed on the pen thread, some elements might occasionally receive stylus input intended for other elements. If you need to make sure the input was routed correctly before performing an operation, subscribe to and perform the operation in the <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDownProcessed%2A>, <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMoveProcessed%2A>, or <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUpProcessed%2A> method. These methods are invoked by the application thread after accurate hit-testing has been performed. To subscribe to these methods, call the <xref:System.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed%2A> method in the method that occurs on the pen thread.  \n  \n The following diagram illustrates the relationship between the pen thread and UI thread with respect to the stylus events of a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn>.  \n  \n ![Ink Threading Models &#40;UI and Pen&#41;](../../../../docs/framework/wpf/advanced/media/inkthreading-plugincallbacks.png \"InkThreading_PluginCallbacks\")  \n  \n## Rendering Ink  \n As the user draws a stroke, <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> renders the ink on a separate thread so the ink appears to \"flow\" from the pen even when the UI thread is busy.  The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> builds a visual tree on the dynamic rendering thread as it collects stylus points.  When the user finishes the stroke, the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> asks to be notified when the application does the next rendering pass.  After the application completes the next rendering pass, the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> cleans up its visual tree.  The following diagram illustrates this process.  \n  \n ![Ink threading diagram](../../../../docs/framework/wpf/advanced/media/inkthreading-visualtree.png \"InkThreading_VisualTree\")  \n  \n1.  The user begins the stroke.  \n  \n    1.  The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> creates the visual tree.  \n  \n2.  The user is drawing the stroke.  \n  \n    1.  The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> builds the visual tree.  \n  \n3.  The user ends the stroke.  \n  \n    1.  The <xref:System.Windows.Controls.InkPresenter> adds the stroke to its visual tree.  \n  \n    2.  The Media Integration Layer (MIL) statically renders the strokes.  \n  \n    3.  The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> cleans up the visuals.","nodes":[{"pos":[12,52],"content":"The Ink Threading Model | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"The Ink Threading Model | Microsoft Docs","pos":[0,40]}]},{"pos":[632,655],"content":"The Ink Threading Model","linkify":"The Ink Threading Model","nodes":[{"content":"The Ink Threading Model","pos":[0,23]}]},{"content":"One of the benefits of ink on a Tablet PC is that it feels a lot like writing with a regular pen and paper.","pos":[656,763]},{"content":"To accomplish this, the tablet pen collects input data at a much higher rate than a mouse does and renders the ink as the user writes.","pos":[765,899]},{"content":"The application's user interface (UI) thread is not sufficient for collecting pen data and rendering ink, because it can become blocked.","pos":[901,1037]},{"content":"To solve this, a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application uses two additional threads when a user writes ink.","pos":[1039,1201],"source":"  To solve this, a [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] application uses two additional threads when a user writes ink."},{"content":"The following list describes the threads that take part in collecting and rendering digital ink:","pos":[1208,1304]},{"content":"Pen thread - the thread that takes input from the stylus.","pos":[1314,1371]},{"content":"(In reality, this is a thread pool, but this topic refers to it as a pen thread.)","pos":[1373,1454]},{"content":"Application user interface thread - the thread that controls the user interface of the application.","pos":[1464,1563]},{"content":"Dynamic rendering thread - the thread that renders the ink while the user draws a stroke.","pos":[1573,1662]},{"content":"The dynamic rendering thread is different than the thread that renders other UI elements for the application, as mentioned in Window Presentation Foundation <bpt id=\"p1\">[</bpt>Threading Model<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/threading-model.md)</ept>.","pos":[1663,1898],"source":" The dynamic rendering thread is different than the thread that renders other UI elements for the application, as mentioned in Window Presentation Foundation [Threading Model](../../../../docs/framework/wpf/advanced/threading-model.md)."},{"content":"The inking model is the same whether the application uses the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> or a custom control similar to the one in <bpt id=\"p1\">[</bpt>Creating an Ink Input Control<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/creating-an-ink-input-control.md)</ept>.","pos":[1905,2156],"source":"The inking model is the same whether the application uses the <xref:System.Windows.Controls.InkCanvas> or a custom control similar to the one in [Creating an Ink Input Control](../../../../docs/framework/wpf/advanced/creating-an-ink-input-control.md)."},{"content":"Although this topic discusses threading in terms of the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>, the same concepts apply when you create a custom control.","pos":[2158,2313],"source":"  Although this topic discusses threading in terms of the <xref:System.Windows.Controls.InkCanvas>, the same concepts apply when you create a custom control."},{"pos":[2322,2340],"content":"Threading Overview","linkify":"Threading Overview","nodes":[{"content":"Threading Overview","pos":[0,18]}]},{"content":"The following diagram illustrates the threading model when a user draws a stroke:","pos":[2344,2425]},{"pos":[2432,2575],"content":"<bpt id=\"p1\">![</bpt>Threading model while drawing a stroke.<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/advanced/media/inkthreading-drawingink.png \"</bpt>InkThreading_DrawingInk<ept id=\"p2\">\")</ept>","source":"![Threading model while drawing a stroke.](../../../../docs/framework/wpf/advanced/media/inkthreading-drawingink.png \"InkThreading_DrawingInk\")"},{"content":"Actions occurring while the user draws the stroke","pos":[2585,2634]},{"content":"When the user draws a stroke, the stylus points come in on the pen thread.","pos":[2648,2722]},{"content":"Stylus plug-ins, including the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph>, accept the stylus points on the pen thread and have the chance to modify them before the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> receives them.","pos":[2724,2958],"source":"  Stylus plug-ins, including the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>, accept the stylus points on the pen thread and have the chance to modify them before the <xref:System.Windows.Controls.InkCanvas> receives them."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> renders the stylus points on the dynamic rendering thread.","pos":[2972,3092],"source":"The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> renders the stylus points on the dynamic rendering thread."},{"content":"This happens at the same time as the previous step.","pos":[3093,3144]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> receives the stylus points on the UI thread.","pos":[3158,3247],"source":"The <xref:System.Windows.Controls.InkCanvas> receives the stylus points on the UI thread."},{"content":"Actions occurring after the user ends the stroke","pos":[3257,3305]},{"content":"When the user finishes drawing the stroke, the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> creates a <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object and adds it to the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph>, which statically renders it.","pos":[3319,3549],"source":"When the user finishes drawing the stroke, the <xref:System.Windows.Controls.InkCanvas> creates a <xref:System.Windows.Ink.Stroke> object and adds it to the <xref:System.Windows.Controls.InkPresenter>, which statically renders it."},{"content":"The UI thread alerts the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> that the stroke is statically rendered, so the <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> removes its visual representation of the stroke.","pos":[3563,3799],"source":"The UI thread alerts the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> that the stroke is statically rendered, so the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> removes its visual representation of the stroke."},{"pos":[3808,3842],"content":"Ink collection and Stylus Plug-ins","linkify":"Ink collection and Stylus Plug-ins","nodes":[{"content":"Ink collection and Stylus Plug-ins","pos":[0,34]}]},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt;</ph>.","pos":[3846,3954],"source":"Each <xref:System.Windows.UIElement> has a <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> objects in the <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt;</ph> receive and can modify the stylus points on the pen thread.","pos":[3956,4154],"source":"  The <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> objects in the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> receive and can modify the stylus points on the pen thread."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph> objects receive the stylus points according to their order in the <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt;</ph>.","pos":[4155,4345],"source":" The <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn> objects receive the stylus points according to their order in the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection>."},{"pos":[4352,4642],"content":"The following diagram illustrates the hypothetical situation where the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> collection of a <ph id=\"ph2\">&lt;xref:System.Windows.UIElement&gt;</ph> contains <ph id=\"ph3\">`stylusPlugin1`</ph>, a <ph id=\"ph4\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph>, and <ph id=\"ph5\">`stylusPlugin2`</ph>, in that order.","source":"The following diagram illustrates the hypothetical situation where the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection of a <xref:System.Windows.UIElement> contains `stylusPlugin1`, a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>, and `stylusPlugin2`, in that order."},{"pos":[4649,4793],"content":"<bpt id=\"p1\">![</bpt>Order of Stylus Plugins affect output.<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/advanced/media/inkthreading-pluginorder.png \"</bpt>InkThreading_PluginOrder<ept id=\"p2\">\")</ept>","source":"![Order of Stylus Plugins affect output.](../../../../docs/framework/wpf/advanced/media/inkthreading-pluginorder.png \"InkThreading_PluginOrder\")"},{"content":"In the previous diagram, the following behavior takes place:","pos":[4800,4860]},{"pos":[4870,4918],"content":"<ph id=\"ph1\">`StylusPlugin1`</ph> modifies the values for x and y.","source":"`StylusPlugin1` modifies the values for x and y."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> receives the modified stylus points and renders them on the dynamic rendering thread.","pos":[4928,5071],"source":"<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> receives the modified stylus points and renders them on the dynamic rendering thread."},{"pos":[5081,5177],"content":"<ph id=\"ph1\">`StylusPlugin2`</ph> receives the modified stylus points and further modifies the values for x and y.","source":"`StylusPlugin2` receives the modified stylus points and further modifies the values for x and y."},{"content":"The application collects the stylus points, and, when the user finishes the stroke, statically renders the stroke.","pos":[5187,5301]},{"content":"Suppose that <ph id=\"ph1\">`stylusPlugin1`</ph> restricts the stylus points to a rectangle and <ph id=\"ph2\">`stylusPlugin2`</ph> translates the stylus points to the right.","pos":[5308,5442],"source":"Suppose that `stylusPlugin1` restricts the stylus points to a rectangle and `stylusPlugin2` translates the stylus points to the right."},{"content":"In the previous scenario, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> receives the restricted stylus points, but not the translated stylus points.","pos":[5444,5608],"source":"  In the previous scenario, the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> receives the restricted stylus points, but not the translated stylus points."},{"content":"When the user draws the stroke, the stroke is rendered within the bounds of the rectangle, but the stroke doesn't appear to be translated until the user lifts the pen.","pos":[5610,5777]},{"pos":[5787,5847],"content":"Performing operations with a Stylus Plug-in on the UI thread","linkify":"Performing operations with a Stylus Plug-in on the UI thread","nodes":[{"content":"Performing operations with a Stylus Plug-in on the UI thread","pos":[0,60]}]},{"content":"Because accurate hit-testing cannot be performed on the pen thread, some elements might occasionally receive stylus input intended for other elements.","pos":[5851,6001]},{"content":"If you need to make sure the input was routed correctly before performing an operation, subscribe to and perform the operation in the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDownProcessed%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMoveProcessed%2A&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUpProcessed%2A&gt;</ph> method.","pos":[6002,6386],"source":" If you need to make sure the input was routed correctly before performing an operation, subscribe to and perform the operation in the <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDownProcessed%2A>, <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMoveProcessed%2A>, or <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUpProcessed%2A> method."},{"content":"These methods are invoked by the application thread after accurate hit-testing has been performed.","pos":[6387,6485]},{"content":"To subscribe to these methods, call the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed%2A&gt;</ph> method in the method that occurs on the pen thread.","pos":[6486,6657],"source":" To subscribe to these methods, call the <xref:System.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed%2A> method in the method that occurs on the pen thread."},{"content":"The following diagram illustrates the relationship between the pen thread and UI thread with respect to the stylus events of a <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugIn&gt;</ph>.","pos":[6664,6846],"source":"The following diagram illustrates the relationship between the pen thread and UI thread with respect to the stylus events of a <xref:System.Windows.Input.StylusPlugIns.StylusPlugIn>."},{"pos":[6853,7008],"content":"<bpt id=\"p1\">![</bpt>Ink Threading Models &amp;#40;UI and Pen&amp;#41;<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/advanced/media/inkthreading-plugincallbacks.png \"</bpt>InkThreading_PluginCallbacks<ept id=\"p2\">\")</ept>","source":"![Ink Threading Models &#40;UI and Pen&#41;](../../../../docs/framework/wpf/advanced/media/inkthreading-plugincallbacks.png \"InkThreading_PluginCallbacks\")"},{"pos":[7017,7030],"content":"Rendering Ink","linkify":"Rendering Ink","nodes":[{"content":"Rendering Ink","pos":[0,13]}]},{"content":"As the user draws a stroke, <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> renders the ink on a separate thread so the ink appears to \"flow\" from the pen even when the UI thread is busy.","pos":[7034,7231],"source":"As the user draws a stroke, <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> renders the ink on a separate thread so the ink appears to \"flow\" from the pen even when the UI thread is busy."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> builds a visual tree on the dynamic rendering thread as it collects stylus points.","pos":[7233,7377],"source":"  The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> builds a visual tree on the dynamic rendering thread as it collects stylus points."},{"content":"When the user finishes the stroke, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> asks to be notified when the application does the next rendering pass.","pos":[7379,7546],"source":"  When the user finishes the stroke, the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> asks to be notified when the application does the next rendering pass."},{"content":"After the application completes the next rendering pass, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> cleans up its visual tree.","pos":[7548,7693],"source":"  After the application completes the next rendering pass, the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> cleans up its visual tree."},{"content":"The following diagram illustrates this process.","pos":[7695,7742]},{"pos":[7749,7874],"content":"<bpt id=\"p1\">![</bpt>Ink threading diagram<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/wpf/advanced/media/inkthreading-visualtree.png \"</bpt>InkThreading_VisualTree<ept id=\"p2\">\")</ept>","source":"![Ink threading diagram](../../../../docs/framework/wpf/advanced/media/inkthreading-visualtree.png \"InkThreading_VisualTree\")"},{"content":"The user begins the stroke.","pos":[7884,7911]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> creates the visual tree.","pos":[7925,8011],"source":"The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> creates the visual tree."},{"content":"The user is drawing the stroke.","pos":[8021,8052]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> builds the visual tree.","pos":[8066,8151],"source":"The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> builds the visual tree."},{"content":"The user ends the stroke.","pos":[8161,8186]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> adds the stroke to its visual tree.","pos":[8200,8283],"source":"The <xref:System.Windows.Controls.InkPresenter> adds the stroke to its visual tree."},{"content":"The Media Integration Layer (MIL) statically renders the strokes.","pos":[8297,8362]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> cleans up the visuals.","pos":[8376,8460],"source":"The <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> cleans up the visuals."}]}