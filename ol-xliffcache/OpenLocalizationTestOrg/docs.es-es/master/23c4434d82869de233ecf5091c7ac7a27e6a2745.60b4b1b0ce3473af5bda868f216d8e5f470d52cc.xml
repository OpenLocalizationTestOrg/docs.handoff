{"content":"---\ntitle: \"ICorProfilerInfo4::GetReJITIDs Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerInfo4.GetReJITIDs\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo4::GetReJITIDs\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetReJITIDs method, ICorProfilerInfo4 interface [.NET Framework profiling]\"\n  - \"ICorProfilerInfo4::GetReJITIDs method [.NET Framework profiling]\"\nms.assetid: 634ac28c-a5b7-4fc3-af84-256c24ca8177\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 8\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ICorProfilerInfo4::GetReJITIDs Method\nReturns an array of IDs that identify all JIT-recompiled versions of the specified function that are still allocated. This includes JIT-recompiled versions of functions that have been subsequently reverted but not yet freed (for example, when the application domain that contains the reverted function is still in use).  \n  \n## Syntax  \n  \n```  \nHRESULT GetReJITIDs (  \n     [in]  FunctionID          functionId,  \n     [in]  ULONG               cReJitIds,  \n     [out] ULONG *             pcReJitIds,  \n     [out, size_is(cReJitIds), length_is(*pcReJitIds)]   ReJITID        reJitIds[]);  \n```  \n  \n#### Parameters  \n `functionId`  \n [in] The `FunctionID` of the function instance for which to enumerate versions.  \n  \n `cReJitIds`  \n [in] The number of JIT-recompiled IDs allocated in the `reJitIds` array.  \n  \n `pcReJitIds`  \n [out] The actual number of JIT-recompiled IDs.  \n  \n `reJitIds`  \n [out] A caller-allocated array that will contain the JIT-recompiled IDs for the specified function.  \n  \n## Remarks  \n `GetReJITIDs` enumerates the active JIT-recompiled IDs for a given function instance. It follows the same usage pattern as other `ICorProfilerInfo` functions that accept caller-allocated buffers.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]  \n  \n## See Also  \n [ICorProfilerInfo4 Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo4-interface.md)   \n [Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)   \n [Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)","nodes":[{"pos":[4,736],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerInfo4::GetReJITIDs Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerInfo4.GetReJITIDs\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo4::GetReJITIDs\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetReJITIDs method, ICorProfilerInfo4 interface [.NET Framework profiling]\"\n  - \"ICorProfilerInfo4::GetReJITIDs method [.NET Framework profiling]\"\nms.assetid: 634ac28c-a5b7-4fc3-af84-256c24ca8177\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 8\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"ICorProfilerInfo4::GetReJITIDs Method | Microsoft Docs","nodes":[{"pos":[0,54],"content":"ICorProfilerInfo4::GetReJITIDs Method | Microsoft Docs","nodes":[{"content":"ICorProfilerInfo4::GetReJITIDs Method | Microsoft Docs","pos":[0,54]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[743,780],"content":"ICorProfilerInfo4::GetReJITIDs Method","linkify":"ICorProfilerInfo4::GetReJITIDs Method","nodes":[{"content":"ICorProfilerInfo4::GetReJITIDs Method","pos":[0,37]}]},{"content":"Returns an array of IDs that identify all JIT-recompiled versions of the specified function that are still allocated.","pos":[781,898]},{"content":"This includes JIT-recompiled versions of functions that have been subsequently reverted but not yet freed (for example, when the application domain that contains the reverted function is still in use).","pos":[899,1100]},{"pos":[1109,1115],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1386,1396],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The <ph id=\"ph1\">`FunctionID`</ph> of the function instance for which to enumerate versions.","pos":[1416,1495],"source":"[in] The `FunctionID` of the function instance for which to enumerate versions."},{"content":"[in] The number of JIT-recompiled IDs allocated in the <ph id=\"ph1\">`reJitIds`</ph> array.","pos":[1517,1589],"source":"[in] The number of JIT-recompiled IDs allocated in the `reJitIds` array."},{"content":"[out] The actual number of JIT-recompiled IDs.","pos":[1612,1658]},{"content":"[out] A caller-allocated array that will contain the JIT-recompiled IDs for the specified function.","pos":[1679,1778]},{"pos":[1787,1794],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`GetReJITIDs`</ph> enumerates the active JIT-recompiled IDs for a given function instance.","pos":[1798,1883],"source":"`GetReJITIDs` enumerates the active JIT-recompiled IDs for a given function instance."},{"content":"It follows the same usage pattern as other <ph id=\"ph1\">`ICorProfilerInfo`</ph> functions that accept caller-allocated buffers.","pos":[1884,1993],"source":" It follows the same usage pattern as other `ICorProfilerInfo` functions that accept caller-allocated buffers."},{"pos":[2002,2014],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2018,2122],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2129,2163],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[2170,2195],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2202,2230],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept>","source":"**.NET Framework Versions:**"},{"pos":[2319,2327],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorProfilerInfo4 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo4-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2331,2444],"source":"[ICorProfilerInfo4 Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo4-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>Profiling Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept><ph id=\"ph1\"> </ph>","pos":[2448,2547],"source":"[Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md) "},{"content":"<bpt id=\"p1\">[</bpt>Profiling<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept>","pos":[2551,2623],"source":"[Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)"}]}