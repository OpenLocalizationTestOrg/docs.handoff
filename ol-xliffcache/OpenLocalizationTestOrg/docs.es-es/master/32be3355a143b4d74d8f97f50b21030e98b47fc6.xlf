<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32be3355a143b4d74d8f97f50b21030e98b47fc6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\advanced\how-to-obtain-font-metrics.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c7375c48f9b5e524818a6b252512d0414680156</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6b150b89d4e817fd8f2f25e18fbc7e397b2e50f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Obtain Font Metrics | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Obtain Font Metrics</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.FontFamily&gt;</ph> class provides the following methods that retrieve various metrics for a particular family/style combination:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Drawing.FontFamily.GetEmHeight%2A&gt;</ph>(FontStyle)</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Drawing.FontFamily.GetCellAscent%2A&gt;</ph>(FontStyle)</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Drawing.FontFamily.GetCellDescent%2A&gt;</ph>(FontStyle)</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Drawing.FontFamily.GetLineSpacing%2A&gt;</ph>(FontStyle)</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The numbers returned by these methods are in font design units, so they are independent of the size and units of a particular <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following illustration shows the various metrics.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Fonts Text<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/winforms/advanced/media/fontstext7a.png "</bpt>fontstext7A<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example displays the metrics for the regular style of the Arial font family.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The code also creates a <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> object (based on the Arial family) with size 16 pixels and displays the metrics (in pixels) for that particular <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following illustration shows the output of the example code.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Fonts Text<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/winforms/advanced/media/csfontstext8.png "</bpt>csFontsText8<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note the first two lines of output in the preceding illustration.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> object returns a size of 16, and the <ph id="ph2">&lt;xref:System.Drawing.FontFamily&gt;</ph> object returns an em height of 2,048.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These two numbers (16 and 2,048) are the key to converting between font design units and the units (in this case pixels) of the <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, you can convert the ascent from design units to pixels as follows:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Fonts Text<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/winforms/advanced/media/fontstext9.png "</bpt>FontsText9<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following code positions text vertically by setting the <ph id="ph1">&lt;xref:System.Drawing.PointF.Y%2A&gt;</ph> data member of a <ph id="ph2">&lt;xref:System.Drawing.PointF&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The y-coordinate is increased by <ph id="ph1">`font.Height`</ph> for each new line of text.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Font.Height%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> object returns the line spacing (in pixels) for that particular <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this example, the number returned by <ph id="ph1">&lt;xref:System.Drawing.Font.Height%2A&gt;</ph> is 19.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that this is the same as the number (rounded up to an integer) obtained by converting the line-spacing metric to pixels.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Note that the em height (also called size or em size) is not the sum of the ascent and the descent.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The sum of the ascent and the descent is called the cell height.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The cell height minus the internal leading is equal to the em height.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The cell height plus the external leading is equal to the line spacing.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Drawing.FontsAndText#71<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsAndText/CS/Class1.cs#71)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Drawing.FontsAndText#71<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsAndText/VB/Class1.vb#71)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The preceding example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, which is a parameter of <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventHandler&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Graphics and Drawing in Windows Forms<ept id="p1">](../../../../docs/framework/winforms/advanced/graphics-and-drawing-in-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Fonts and Text<ept id="p1">](../../../../docs/framework/winforms/advanced/using-fonts-and-text.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>