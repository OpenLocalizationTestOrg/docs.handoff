{"content":"---\ntitle: \"How to: Create a Control That Has an Access Key and Text Wrapping | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"access keys, control for\"\n  - \"controls, text wrapping\"\n  - \"wrapping text\"\n  - \"keys, control for\"\n  - \"controls, access keys\"\n  - \"text wrapping\"\nms.assetid: 205099d9-2551-4302-a25e-a15af9f67e04\ncaps.latest.revision: 22\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Create a Control That Has an Access Key and Text Wrapping\nThis example shows how to create a control that has an access key and supports text wrapping. The example uses a <xref:System.Windows.Controls.Label> control to illustrate these concepts.  \n  \n## Example  \n **Add Text Wrapping to Your Label**  \n  \n The <xref:System.Windows.Controls.Label> control does not support text wrapping. If you need a label that wraps across multiple lines, you can nest another element that does support text wrapping and put the element inside the label. The following example shows how to use a <xref:System.Windows.Controls.TextBlock> to make a label that wraps several lines of text.  \n  \n [!code-xml[LabelSnippet#5](../../../../samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#5)]  \n  \n **Add an Access Key and Text Wrapping to Your Label**  \n  \n If you need a <xref:System.Windows.Controls.Label> that has an access key (mnemonic), use the <xref:System.Windows.Controls.AccessText> element that is inside the <xref:System.Windows.Controls.Label>.  \n  \n Controls such as <xref:System.Windows.Controls.Label>, <xref:System.Windows.Controls.Button>, <xref:System.Windows.Controls.RadioButton>, <xref:System.Windows.Controls.CheckBox>, <xref:System.Windows.Controls.MenuItem>, <xref:System.Windows.Controls.TabItem>, <xref:System.Windows.Controls.Expander>, and <xref:System.Windows.Controls.GroupBox> have default control templates. These templates contain a <xref:System.Windows.Controls.ContentPresenter>. One of the properties that you can set on the <xref:System.Windows.Controls.ContentPresenter> is <xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKey%2A>=\"true\", which you can use to specify an access key for the control.  \n  \n The following example shows how to create a <xref:System.Windows.Controls.Label> that has an access key and supports text wrapping. To enable text wrapping, the example sets the <xref:System.Windows.Controls.AccessText.TextWrapping%2A> property and uses an underline character to specify the access key. (The character that immediately follows the underline character is the access key.)  \n  \n [!code-xml[LabelSnippet#4](../../../../samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)]  \n  \n## See Also  \n [How to: Set the Target Property of a Label](http://msdn.microsoft.com/en-us/b24c6977-ebcb-4855-a9bb-3fd4435af8f8)","nodes":[{"pos":[12,94],"content":"How to: Create a Control That Has an Access Key and Text Wrapping | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Create a Control That Has an Access Key and Text Wrapping | Microsoft Docs","pos":[0,82]}]},{"pos":[577,642],"content":"How to: Create a Control That Has an Access Key and Text Wrapping","linkify":"How to: Create a Control That Has an Access Key and Text Wrapping","nodes":[{"content":"How to: Create a Control That Has an Access Key and Text Wrapping","pos":[0,65]}]},{"content":"This example shows how to create a control that has an access key and supports text wrapping.","pos":[643,736]},{"content":"The example uses a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> control to illustrate these concepts.","pos":[737,830],"source":" The example uses a <xref:System.Windows.Controls.Label> control to illustrate these concepts."},{"pos":[839,846],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[850,885],"content":"<bpt id=\"p1\">**</bpt>Add Text Wrapping to Your Label<ept id=\"p1\">**</ept>","source":"**Add Text Wrapping to Your Label**"},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> control does not support text wrapping.","pos":[892,972],"source":"The <xref:System.Windows.Controls.Label> control does not support text wrapping."},{"content":"If you need a label that wraps across multiple lines, you can nest another element that does support text wrapping and put the element inside the label.","pos":[973,1125]},{"content":"The following example shows how to use a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> to make a label that wraps several lines of text.","pos":[1126,1257],"source":" The following example shows how to use a <xref:System.Windows.Controls.TextBlock> to make a label that wraps several lines of text."},{"pos":[1264,1373],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>LabelSnippet#5<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#5)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[LabelSnippet#5](../../../../samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#5)]"},{"pos":[1380,1433],"content":"<bpt id=\"p1\">**</bpt>Add an Access Key and Text Wrapping to Your Label<ept id=\"p1\">**</ept>","source":"**Add an Access Key and Text Wrapping to Your Label**"},{"content":"If you need a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> that has an access key (mnemonic), use the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> element that is inside the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Label&gt;</ph>.","pos":[1440,1640],"source":"If you need a <xref:System.Windows.Controls.Label> that has an access key (mnemonic), use the <xref:System.Windows.Controls.AccessText> element that is inside the <xref:System.Windows.Controls.Label>."},{"content":"Controls such as <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Controls.TabItem&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Controls.Expander&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.Windows.Controls.GroupBox&gt;</ph> have default control templates.","pos":[1647,2023],"source":"Controls such as <xref:System.Windows.Controls.Label>, <xref:System.Windows.Controls.Button>, <xref:System.Windows.Controls.RadioButton>, <xref:System.Windows.Controls.CheckBox>, <xref:System.Windows.Controls.MenuItem>, <xref:System.Windows.Controls.TabItem>, <xref:System.Windows.Controls.Expander>, and <xref:System.Windows.Controls.GroupBox> have default control templates."},{"content":"These templates contain a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ContentPresenter&gt;</ph>.","pos":[2024,2098],"source":" These templates contain a <xref:System.Windows.Controls.ContentPresenter>."},{"content":"One of the properties that you can set on the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ContentPresenter&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKey%2A&gt;</ph>=\"true\", which you can use to specify an access key for the control.","pos":[2099,2334],"source":" One of the properties that you can set on the <xref:System.Windows.Controls.ContentPresenter> is <xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKey%2A>=\"true\", which you can use to specify an access key for the control."},{"content":"The following example shows how to create a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> that has an access key and supports text wrapping.","pos":[2341,2472],"source":"The following example shows how to create a <xref:System.Windows.Controls.Label> that has an access key and supports text wrapping."},{"content":"To enable text wrapping, the example sets the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.AccessText.TextWrapping%2A&gt;</ph> property and uses an underline character to specify the access key.","pos":[2473,2644],"source":" To enable text wrapping, the example sets the <xref:System.Windows.Controls.AccessText.TextWrapping%2A> property and uses an underline character to specify the access key."},{"content":"(The character that immediately follows the underline character is the access key.)","pos":[2645,2728]},{"pos":[2735,2844],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>LabelSnippet#4<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[LabelSnippet#4](../../../../samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)]"},{"pos":[2853,2861],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2865,2979],"content":"<bpt id=\"p1\">[</bpt>How to: Set the Target Property of a Label<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b24c6977-ebcb-4855-a9bb-3fd4435af8f8)</ept>","source":"[How to: Set the Target Property of a Label](http://msdn.microsoft.com/en-us/b24c6977-ebcb-4855-a9bb-3fd4435af8f8)"}]}