{"content":"---\ntitle: \"XML Value Property (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.XmlPropertyExtensionValue\"\nhelpviewer_keywords: \n  - \"Value property [Visual Basic]\"\n  - \"Visual Basic code, accessing XML\"\n  - \"XML axis [Visual Basic], Value\"\n  - \"XML Value property [Visual Basic]\"\nms.assetid: 7ddd057a-a195-4e9b-ad8b-2ee0e615a20f\n---\n# XML Value Property (Visual Basic)\nProvides access to the value of the first element of a collection of <xref:System.Xml.Linq.XElement> objects.  \n  \n## Syntax  \n  \n```  \nobject.Value  \n```  \n  \n## Parts  \n  \n|Term|Definition|  \n|---|---|  \n|`object`|Required. Collection of <xref:System.Xml.Linq.XElement> objects.|  \n  \n## Return Value  \n A `String` that contains the value of the first element of the collection, or `Nothing` if the collection is empty.  \n  \n## Remarks  \n The <xref:System.Xml.Linq.XElement.Value%2A> property makes it easy to access the value of the first element in a collection of <xref:System.Xml.Linq.XElement> objects. This property first checks whether the collection contains at least one object. If the collection is empty, this property returns `Nothing`. Otherwise, this property returns the value of the <xref:System.Xml.Linq.XElement.Value%2A> property of the first element in the collection.  \n  \n> [!NOTE]\n>  When you access the value of an XML attribute using the '\\@' identifier, the attribute value is returned as a `String` and you do not need to explicitly specify the <xref:System.Xml.Linq.XAttribute.Value%2A> property.  \n  \n To access other elements in a collection, you can use the XML extension indexer property. For more information, see [Extension Indexer Property](../../../visual-basic/language-reference/xml-axis/extension-indexer-property.md).  \n  \n## Inheritance  \n Most users will not have to implement <xref:System.Collections.Generic.IEnumerable%601>, and can therefore ignore this section.  \n  \n The <xref:System.Xml.Linq.XElement.Value%2A> property is an extension property for types that implement `IEnumerable(Of XElement)`. The binding of this extension property is like the binding of extension methods: if a type implements one of the interfaces and defines a property that has the name \"Value\", that property has precedence over the extension property. In other words, this <xref:System.Xml.Linq.XElement.Value%2A> property can be overridden by defining a new property in a class that implements `IEnumerable(Of XElement)`.  \n  \n## Example  \n The following example shows how to use the <xref:System.Xml.Linq.XElement.Value%2A> property to access the first node in a collection of <xref:System.Xml.Linq.XElement> objects. The example uses the child axis property to get the collection of all child nodes named `phone` that are in the `contact` object.  \n  \n [!code-vb[VbXMLSamples#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbXMLSamples/VB/XMLSamples7.vb#15)]  \n  \n This code displays the following text:  \n  \n `Phone number: 206-555-0144`  \n  \n## Example  \n The following example shows how to get the value of an XML attribute from a collection of <xref:System.Xml.Linq.XAttribute> objects. The example uses the attribute axis property to display the value of the `type` attribute for all of the `phone` elements.  \n  \n [!code-vb[VbXMLSamples#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbXMLSamples/VB/XMLSamples7.vb#16)]  \n  \n This code displays the following text:  \n  \n `home`  \n  \n `work`  \n  \n## See also\n\n- <xref:System.Xml.Linq.XElement>\n- <xref:System.Collections.Generic.IEnumerable%601>\n- [XML Axis Properties](../../../visual-basic/language-reference/xml-axis/index.md)\n- [XML Literals](../../../visual-basic/language-reference/xml-literals/index.md)\n- [Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)\n- [Extension Methods](../../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)\n- [Extension Indexer Property](../../../visual-basic/language-reference/xml-axis/extension-indexer-property.md)\n- [XML Child Axis Property](../../../visual-basic/language-reference/xml-axis/xml-child-axis-property.md)\n- [XML Attribute Axis Property](../../../visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md)\n","nodes":[{"pos":[4,338],"embed":true,"restype":"x-metadata","content":"title: \"XML Value Property (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.XmlPropertyExtensionValue\"\nhelpviewer_keywords: \n  - \"Value property [Visual Basic]\"\n  - \"Visual Basic code, accessing XML\"\n  - \"XML axis [Visual Basic], Value\"\n  - \"XML Value property [Visual Basic]\"\nms.assetid: 7ddd057a-a195-4e9b-ad8b-2ee0e615a20f","nodes":[{"content":"XML Value Property (Visual Basic)","nodes":[{"pos":[0,33],"content":"XML Value Property (Visual Basic)","nodes":[{"content":"XML Value Property (Visual Basic)","pos":[0,33]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[345,378],"content":"XML Value Property (Visual Basic)","linkify":"XML Value Property (Visual Basic)","nodes":[{"content":"XML Value Property (Visual Basic)","pos":[0,33]}]},{"pos":[379,488],"content":"Provides access to the value of the first element of a collection of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.","source":"Provides access to the value of the first element of a collection of <xref:System.Xml.Linq.XElement> objects."},{"pos":[497,503],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[542,547],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Term","pos":[554,558]},{"content":"Definition","pos":[559,569]},{"content":"Required.","pos":[595,604]},{"content":"Collection of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.","pos":[605,659],"source":" Collection of <xref:System.Xml.Linq.XElement> objects."},{"pos":[669,681],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[685,800],"content":"A <ph id=\"ph1\">`String`</ph> that contains the value of the first element of the collection, or <ph id=\"ph2\">`Nothing`</ph> if the collection is empty.","source":"A `String` that contains the value of the first element of the collection, or `Nothing` if the collection is empty."},{"pos":[809,816],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Value%2A&gt;</ph> property makes it easy to access the value of the first element in a collection of <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.","pos":[820,988],"source":"The <xref:System.Xml.Linq.XElement.Value%2A> property makes it easy to access the value of the first element in a collection of <xref:System.Xml.Linq.XElement> objects."},{"content":"This property first checks whether the collection contains at least one object.","pos":[989,1068]},{"content":"If the collection is empty, this property returns <ph id=\"ph1\">`Nothing`</ph>.","pos":[1069,1129],"source":" If the collection is empty, this property returns `Nothing`."},{"content":"Otherwise, this property returns the value of the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Value%2A&gt;</ph> property of the first element in the collection.","pos":[1130,1269],"source":" Otherwise, this property returns the value of the <xref:System.Xml.Linq.XElement.Value%2A> property of the first element in the collection."},{"pos":[1277,1505],"content":"[!NOTE]\n When you access the value of an XML attribute using the '\\@' identifier, the attribute value is returned as a `String` and you do not need to explicitly specify the <xref:System.Xml.Linq.XAttribute.Value%2A> property.","leadings":["","> "],"nodes":[{"content":"When you access the value of an XML attribute using the '<ph id=\"ph1\">\\@</ph>' identifier, the attribute value is returned as a <ph id=\"ph2\">`String`</ph> and you do not need to explicitly specify the <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XAttribute.Value%2A&gt;</ph> property.","pos":[9,226],"source":"When you access the value of an XML attribute using the '\\@' identifier, the attribute value is returned as a `String` and you do not need to explicitly specify the <xref:System.Xml.Linq.XAttribute.Value%2A> property."}]},{"content":"To access other elements in a collection, you can use the XML extension indexer property.","pos":[1512,1601]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Extension Indexer Property<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/extension-indexer-property.md)</ept>.","pos":[1602,1738],"source":" For more information, see [Extension Indexer Property](../../../visual-basic/language-reference/xml-axis/extension-indexer-property.md)."},{"pos":[1747,1758],"content":"Inheritance","linkify":"Inheritance","nodes":[{"content":"Inheritance","pos":[0,11]}]},{"pos":[1762,1889],"content":"Most users will not have to implement <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, and can therefore ignore this section.","source":"Most users will not have to implement <xref:System.Collections.Generic.IEnumerable%601>, and can therefore ignore this section."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Value%2A&gt;</ph> property is an extension property for types that implement <ph id=\"ph2\">`IEnumerable(Of XElement)`</ph>.","pos":[1896,2027],"source":"The <xref:System.Xml.Linq.XElement.Value%2A> property is an extension property for types that implement `IEnumerable(Of XElement)`."},{"content":"The binding of this extension property is like the binding of extension methods: if a type implements one of the interfaces and defines a property that has the name \"Value\", that property has precedence over the extension property.","pos":[2028,2259]},{"content":"In other words, this <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Value%2A&gt;</ph> property can be overridden by defining a new property in a class that implements <ph id=\"ph2\">`IEnumerable(Of XElement)`</ph>.","pos":[2260,2430],"source":" In other words, this <xref:System.Xml.Linq.XElement.Value%2A> property can be overridden by defining a new property in a class that implements `IEnumerable(Of XElement)`."},{"pos":[2439,2446],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to use the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Value%2A&gt;</ph> property to access the first node in a collection of <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.","pos":[2450,2627],"source":"The following example shows how to use the <xref:System.Xml.Linq.XElement.Value%2A> property to access the first node in a collection of <xref:System.Xml.Linq.XElement> objects."},{"content":"The example uses the child axis property to get the collection of all child nodes named <ph id=\"ph1\">`phone`</ph> that are in the <ph id=\"ph2\">`contact`</ph> object.","pos":[2628,2757],"source":" The example uses the child axis property to get the collection of all child nodes named `phone` that are in the `contact` object."},{"content":"This code displays the following text:","pos":[2885,2923]},{"pos":[2967,2974],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to get the value of an XML attribute from a collection of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects.","pos":[2978,3110],"source":"The following example shows how to get the value of an XML attribute from a collection of <xref:System.Xml.Linq.XAttribute> objects."},{"content":"The example uses the attribute axis property to display the value of the <ph id=\"ph1\">`type`</ph> attribute for all of the <ph id=\"ph2\">`phone`</ph> elements.","pos":[3111,3233],"source":" The example uses the attribute axis property to display the value of the `type` attribute for all of the `phone` elements."},{"content":"This code displays the following text:","pos":[3361,3399]},{"pos":[3434,3442],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3532,3613],"content":"<bpt id=\"p1\">[</bpt>XML Axis Properties<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/index.md)</ept>","source":"[XML Axis Properties](../../../visual-basic/language-reference/xml-axis/index.md)"},{"pos":[3616,3694],"content":"<bpt id=\"p1\">[</bpt>XML Literals<ept id=\"p1\">](../../../visual-basic/language-reference/xml-literals/index.md)</ept>","source":"[XML Literals](../../../visual-basic/language-reference/xml-literals/index.md)"},{"pos":[3697,3806],"content":"<bpt id=\"p1\">[</bpt>Creating XML in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept>","source":"[Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)"},{"pos":[3809,3919],"content":"<bpt id=\"p1\">[</bpt>Extension Methods<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)</ept>","source":"[Extension Methods](../../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)"},{"pos":[3922,4031],"content":"<bpt id=\"p1\">[</bpt>Extension Indexer Property<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/extension-indexer-property.md)</ept>","source":"[Extension Indexer Property](../../../visual-basic/language-reference/xml-axis/extension-indexer-property.md)"},{"pos":[4034,4137],"content":"<bpt id=\"p1\">[</bpt>XML Child Axis Property<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/xml-child-axis-property.md)</ept>","source":"[XML Child Axis Property](../../../visual-basic/language-reference/xml-axis/xml-child-axis-property.md)"},{"pos":[4140,4251],"content":"<bpt id=\"p1\">[</bpt>XML Attribute Axis Property<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md)</ept>","source":"[XML Attribute Axis Property](../../../visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md)"}]}