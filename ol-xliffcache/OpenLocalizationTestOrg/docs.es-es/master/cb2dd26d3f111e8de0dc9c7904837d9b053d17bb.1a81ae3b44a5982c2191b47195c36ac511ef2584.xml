{"content":"---\ntitle: Transport Layer Security (TLS) best practices with the .NET Framework\ndescription: Describes best practices using Transport Layer Security (TLS) with the .NET Framework\nms.date: 10/22/2018\nhelpviewer_keywords: \n  - \"sending data, Internet security\"\n  - \"protocols, Internet security\"\n  - \"Network security\"\n  - \"network resources, Internet security\"\n  - \"receiving data, Internet security\"\n  - \"authentication [.NET Framework], Internet security\"\n  - \"Internet, security\"\n  - \"security [.NET Framework], Internet\"\n  - \"permissions [.NET Framework], Internet\"\n---\n# Transport Layer Security (TLS) best practices with the .NET Framework\n\nThe Transport Layer Security (TLS) protocol is an industry standard designed to help protect the privacy of information communicated over the Internet. [TLS 1.2](https://tools.ietf.org/html/rfc5246) is a standard that provides security improvements over previous versions. TLS 1.2 will eventually be replaced by the newest released standard [TLS 1.3](https://tools.ietf.org/html/rfc8446) which is faster and has improved security. This article presents recommendations to secure .NET Framework applications that use the TLS protocol.\n\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\n\nThis document targets developers who are:\n\n- Directly using the <xref:System.Net> APIs (for example, <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> and <xref:System.Net.Security.SslStream?displayProperty=nameWithType>).\n- Directly using WCF clients and services using the <xref:System.ServiceModel?displayProperty=nameWithType> namespace.\n- Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](#azure-cloud-services) section.\n\nWe recommend that you:\n\n- Target .NET Framework 4.7 or later versions on your apps. Target .NET Framework 4.7.1 or later versions on your WCF apps.\n- Do not specify the TLS version. Configure your code to let the OS decide on the TLS version.\n- Perform a thorough code audit to verify you're not specifying a TLS or SSL version.\n\nWhen your app lets the OS choose the TLS version:\n\n- It automatically takes advantage of new protocols added in the future, such as TLS 1.3.\n- The OS blocks protocols that are discovered not to be secure.\n\nThe section [Audit your code and make code changes](#audit-your-code-and-make-code-changes) covers auditing and updating your code.\n\nThis article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on. When an app explicitly sets a security protocol and version, it opts out of any other alternative, and opts out of .NET Framework and OS default behavior. If you want your app to be able to negotiate a TLS 1.2 connection, explicitly setting to a lower TLS version prevents a TLS 1.2 connection.\n\nIf you can't avoid hardcoding a protocol version, we strongly recommend that you specify TLS 1.2. For guidance on identifying and removing TLS 1.0 dependencies, download the [Solving the TLS 1.0 Problem](https://www.microsoft.com/download/details.aspx?id=55266) whitepaper.\n\nWCF Supports TLS1.0, 1.1 and 1.2 as the default in .NET Framework 4.7. Starting with .NET Framework 4.7.1, WCF defaults to the operating system configured version. If an application is explicitly configured with `SslProtocols.None`, WCF uses the operating system default setting when using the NetTcp transport.\n\nYou can ask questions about this document in the GitHub issue [Transport Layer Security (TLS) best practices with the .NET Framework](https://github.com/dotnet/docs/issues/4675).\n\n## Audit your code and make code changes\n\nFor ASP.NET applications, inspect the `<system.web><httpRuntime targetFramework>` element of _web.config_ to verify you're using the intended version of the .NET Framework.\n\nFor Windows Forms and other applications, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework).\n\nUse the following sections to verify you're not using a specific TLS or SSL version.\n\n## If your app targets .NET Framework 4.7 or later versions\n\nThe following sections show how to verify you're not using a specific TLS or SSL version.\n\n### For HTTP networking\n\n<xref:System.Net.ServicePointManager>, using .NET Framework 4.7 and later versions, defaults to the OS choosing the best security protocol and version. To get the default OS best choice, if possible, don't set a value for the <xref:System.Net.ServicePointManager.SecurityProtocol> property. Otherwise, set it to <xref:System.Net.SecurityProtocolType.SystemDefault>.\n\nThe remainder of this article is not relevant when targeting .NET Framework 4.7 or later versions for HTTP networking.\n\n### For TCP sockets networking\n\n<xref:System.Net.Security.SslStream>, using .NET Framework 4.7 and later versions, defaults to the OS choosing the best security protocol and version. To get the default OS best choice, if possible, don't use the method overloads of <xref:System.Net.Security.SslStream> that take an explicit <xref:System.Security.Authentication.SslProtocols> parameter. Otherwise, pass <xref:System.Security.Authentication.SslProtocols.None?displayProperty=nameWithType>. We recommend that you don't use <xref:System.Security.Authentication.SslProtocols.Default>; setting `SslProtocols.Default` forces the use of SSL 3.0 /TLS 1.0 and prevents TLS 1.2.\n\nDon't set a value for the <xref:System.Net.ServicePointManager.SecurityProtocol> property (for HTTP networking).\n\nDon't use the method overloads of <xref:System.Net.Security.SslStream> that take an explicit <xref:System.Security.Authentication.SslProtocols> parameter (for TCP sockets networking). When you retarget your app to .NET Framework 4.7 or later versions, you'll be following the best practices recommendation.\n\nThe remainder of this topic is not relevant when targeting .NET Framework 4.7 or later versions for TCP sockets networking.\n\n<a name=\"wcf-tcp-cert\"></a>\n\n### For WCF TCP transport using transport security with certificate credentials\n\nWCF uses the same networking stack as the rest of the .NET Framework.\n\nIf you are targeting 4.7.1, WCF is configured to allow the OS to choose the best security protocol by default unless explicitly configured:\n\n- In your application configuration file.\n- **Or**, in your application in the source code.\n\nBy default, .NET Framework 4.7 and later versions is configured to use TLS 1.2 and allows connections using TLS 1.1 or TLS 1.0. Configure WCF to allow the OS to choose the best security protocol by configuring your binding to use <xref:System.Security.Authentication.SslProtocols.None?displayProperty=nameWithType>. This can be set on <xref:System.ServiceModel.TcpTransportSecurity.SslProtocols>. `SslProtocols.None` can be accessed from <xref:System.ServiceModel.NetTcpSecurity.Transport>. `NetTcpSecurity.Transport` can be accessed from <xref:System.ServiceModel.NetTcpBinding.Security>.\n\nIf you're using a custom binding:\n\n- Configure WCF to allow the OS to choose the best security protocol by setting <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols> to use <xref:System.Security.Authentication.SslProtocols.None?displayProperty=nameWithType>.\n- **Or** configure the protocol used with the configuration path `system.serviceModel/bindings/customBinding/binding/sslStreamSecurity:sslProtocols`.\n\nIf you're **not** using a custom binding **and** you're setting your WCF binding using configuration, set the protocol used with the configuration path `system.serviceModel/bindings/netTcpBinding/binding/security/transport:sslProtocols`.\n\n### For WCF Message Security with certificate credentials\n\n.NET Framework 4.7 and later versions by default uses the protocol specified in the <xref:System.Net.ServicePointManager.SecurityProtocol> property. When the [AppContextSwitch](../configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) `Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols` is set to `true`, WCF chooses the best protocol, up to TLS 1.0.\n\n## If your app targets a .NET Framework version earlier than 4.7\n\nAudit your code to verify you're not setting a specific TLS or SSL version using the following sections:\n\n### For .NET Framework 4.6 - 4.6.2 and not WCF\n\nSet the `DontEnableSystemDefaultTlsVersions` `AppContext` switch to `false`. See [Configuring security via AppContext switches](#configuring-security-via-appcontext-switches).\n\n### For WCF using .NET Framework 4.6 - 4.6.2 using TCP transport security with Certificate Credentials\n\nYou must install the latest OS patches. See [Security updates](#security-updates).\n\nThe WCF framework automatically chooses the highest protocol available up to TLS 1.2 unless you explicitly configure a protocol version. For more information, see the preceding section [For WCF TCP transport using transport security with certificate credentials](#wcf-tcp-cert).\n\n### For .NET Framework 3.5 - 4.5.2 and not WCF\n\nWe recommend you upgrade your app to .NET Framework 4.7 or later versions. If you cannot upgrade, take the following steps. At some point in the future, your application may fail until you upgrade to .NET Framework 4.7 or later versions.\n\nSet the [SchUseStrongCrypto](#schusestrongcrypto) and [SystemDefaultTlsVersions](#systemdefaulttlsversions) registry keys to 1. See [Configuring security via the Windows Registry](#configuring-security-via-the-windows-registry). The .NET Framework version 3.5 supports the `SchUseStrongCrypto` flag only when an explicit TLS value is passed.\n\nIf you are running on .NET Framework 3.5, you need to install a hot patch so that TLS 1.2 can be specified by your program:\n\n| [KB3154518](https://support.microsoft.com/kb/3154518) | Reliability Rollup HR-1605 - Support for TLS System Default Versions included in the .NET Framework 3.5.1 on Windows 7 SP1 and Server 2008 R2 SP1 |\n| --- | --- |\n| [KB3154519](https://support.microsoft.com/kb/3154519) | Reliability Rollup HR-1605 - Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows Server 2012 |\n| [KB3154520](https://support.microsoft.com/kb/3154520) | Reliability Rollup HR-1605 -Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows 8.1 and Windows Server 2012 R2 |\n| [KB3156421](https://support.microsoft.com/kb/3156421) | 1605 Hotfix rollup 3154521 for the .NET Framework 4.5.2 and 4.5.1 on Windows |\n\n### For WCF using .NET Framework 3.5 - 4.5.2 using TCP transport security with Certificate Credentials\n\nThese versions of the WCF framework are hardcoded to use values SSL 3.0 and TLS 1.0. These values cannot be changed. You must update and retarget to NET Framework 4.6 or later versions to use TLS 1.1 and 1.2.\n\n## If your app targets .NET Framework 3.5\n\nIf you must explicitly set a security protocol instead of letting the .NET framework or the OS pick the security protocol, add `SecurityProtocolTypeExtensions` and `SslProtocolsExtension` enumerations to your code. `SecurityProtocolTypeExtensions` and `SslProtocolsExtension` include values for `Tls12`, `Tls11`, and the `SystemDefault` value. See [Support for TLS System Default Versions included in .NET Framework 3.5 on Windows 8.1 and Windows Server 2012 R2](https://support.microsoft.com/help/3154520/support-for-tls-system-default-versions-included-in-the--net-framework).\n\n<a name=\"configuring-security-via-appcontext-switches\"></a>\n\n## Configuring security via AppContext switches (for .NET Framework 4.6 or later versions)\n\nThe [AppContext](../configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) switches described in this section are relevant if your app targets, or runs on, .NET Framework 4.6 or later versions. Whether by default, or by setting them explicitly, the switches should be `false` if possible. If you want to configure security via one or both switches, then don't specify a security protocol value in your code; doing so would override the switch(es).\n\nThe switches have the same effect whether you're doing HTTP networking (<xref:System.Net.ServicePointManager>) or TCP sockets networking (<xref:System.Net.Security.SslStream>).\n\n### Switch.System.Net.DontEnableSchUseStrongCrypto\n\nA value of `false` for `Switch.System.Net.DontEnableSchUseStrongCrypto` causes your app to use strong cryptography. A value of `false` for `DontEnableSchUseStrongCrypto` uses more secure network protocols (TLS 1.2, TLS 1.1, and TLS 1.0) and blocks protocols that are not secure. For more info, see [The SCH_USE_STRONG_CRYPTO flag](#the-sch_use_strong_crypto-flag). A value of `true` disables strong cryptography for your app.\n\nIf your app targets .NET Framework 4.6 or later versions, this switch defaults to `false`. That's a secure default, which we recommend. If your app runs on .NET Framework 4.6, but targets an earlier version, the switch defaults to `true`. In that case, you should explicitly set it to `false`.\n\n`DontEnableSchUseStrongCrypto` should only have a value of `true` if you need to connect to legacy services that don't support strong cryptography and can't be upgraded.\n\n### Switch.System.Net.DontEnableSystemDefaultTlsVersions\n\nA value of `false` for `Switch.System.Net.DontEnableSystemDefaultTlsVersions` causes your app to allow the operating system to choose the protocol. A value of `true` causes your app to use protocols picked by the .NET Framework.\n\nIf your app targets .NET Framework 4.7 or later versions, this switch defaults to `false`. That's a secure default that we recommend. If your app runs on .NET Framework 4.7 or later versions, but targets an earlier version, the switch defaults to `true`. In that case, you should explicitly set it to `false`.\n\n### Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols\n\nA value of `false` for `Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols` causes your application to use the value defined in `ServicePointManager.SecurityProtocols` for message security using certificate credentials. A value of `true` uses the highest protocol available, up to TLS1.0\n\nFor applications targeting .NET Framework 4.7 and later versions, this value defaults to `false`. For applications targeting .NET Framework 4.6.2 and earlier, this value defaults to `true`.\n\n### Switch.System.ServiceModel.DontEnableSystemDefaultTlsVersions\n\nA value of `false` for `Switch.System.ServiceModel.DontEnableSystemDefaultTlsVersions` sets the default configuration to allow the operating system to choose the protocol. A value of `true` sets the default to the highest protocol available, up to TLS1.2.\n\nFor applications targeting .NET Framework 4.7.1 and later versions, this value defaults to `false`. For applications targeting .NET Framework 4.7 and earlier, this value defaults to `true`.\n\nFor more information about TLS protocols, see [Mitigation: TLS Protocols](../migration-guide/mitigation-tls-protocols.md). For more information about `AppContext` switches, see [`<AppContextSwitchOverrides> Element`](../configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md).\n\n## Configuring security via the Windows Registry\n\n> [!WARNING]\n> Setting registry keys affects all applications on the system. Use this option only if you are in full control of the machine and can control changes to the registry.\n\nIf setting one or both `AppContext` switches isn't an option, you can control the security protocols that your app uses with the Windows Registry keys described in this section. You might not be able to use one or both the `AppContext` switches if your app runs on .NET Framework 4.5.2 or earlier versions, or if you can't edit the configuration file. If you want to configure security with the registry, don't specify a security protocol value in your code; doing so overrides the registry setting.\n\nThe names of the registry keys are similar to the names of the corresponding `AppContext` switches but without a `DontEnable` prepended to the name. For example, the `AppContext` switch `DontEnableSchUseStrongCrypto` is the registry key called [SchUseStrongCrypto](#schusestrongcrypto).\n\nThese keys are available in all .NET Framework versions for which there's a recent security patch. See [Security updates](#security-updates).\n\nAll of the registry keys described below have the same effect whether you're doing HTTP networking (<xref:System.Net.ServicePointManager>) or TCP sockets networking (<xref:System.Net.Security.SslStream>).\n\n### SchUseStrongCrypto\n\nThe `HKEY_LOCAL_MACHINE\\SOFTWARE\\[Wow6432Node\\]Microsoft\\.NETFramework\\<VERSION>: SchUseStrongCrypto` registry key has a value of type DWORD. A value of 1 causes your app to use strong cryptography. The strong cryptography uses more secure network protocols (TLS 1.2, TLS 1.1, and TLS 1.0) and blocks protocols that are not secure. A value of 0 disables strong cryptography. For more information, see [The SCH_USE_STRONG_CRYPTO flag](#the-sch_use_strong_crypto-flag).\n\nIf your app targets .NET Framework 4.6 or later versions, this key defaults to a value of 1. That's a secure default that we recommend. If your app runs on .NET Framework 4.6, but targets an earlier version, then the key defaults to 0. In that case, you should explicitly set its value to 1.\n\nThis key should only have a value of 0 if you need to connect to legacy services that don't support strong cryptography and can't be upgraded.\n\n### SystemDefaultTlsVersions\n\nThe `HKEY_LOCAL_MACHINE\\SOFTWARE\\[Wow6432Node\\]Microsoft\\.NETFramework\\<VERSION>: SystemDefaultTlsVersions` registry key has a value of type DWORD. A value of 1 causes your app to allow the operating system to choose the protocol. A value of 0 causes your app to use protocols picked by the .NET Framework.\n\n`<VERSION>` must be v4.0.30319 (for .NET Framework 4 and above) or v2.0.50727 (for .NET Framework 3.5).\n\nIf your app targets .NET Framework 4.7 or later versions, this key defaults to a value of 1. That's a secure default that we recommend. If your app runs on .NET Framework 4.7 or later versions, but targets an earlier version, the key defaults to 0. In that case, you should explicitly set its value to 1.\n\nFor more info, see [Cumulative Update for Windows 10 Version 1511 and Windows Server 2016 Technical Preview 4: May 10, 2016](https://support.microsoft.com/help/3156421/cumulative-update-for-windows-10-version-1511-and-windows-server-2016).\n\nFor more information with .NET framework 3.5.1, see [Support for TLS System Default Versions included in .NET Framework 3.5.1 on Windows 7 SP1 and Server 2008 R2 SP1](https://support.microsoft.com/help/3154518/support-for-tls-system-default-versions-included-in-the--net-framework).\n\nThe following _.REG_ file sets the registry keys and their variants to their most safe values:\n\n```\nWindows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v2.0.50727]\n\"SystemDefaultTlsVersions\"=dword:00000001\n\"SchUseStrongCrypto\"=dword:00000001\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319]\n\"SystemDefaultTlsVersions\"=dword:00000001\n\"SchUseStrongCrypto\"=dword:00000001\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\v2.0.50727]\n\"SystemDefaultTlsVersions\"=dword:00000001\n\"SchUseStrongCrypto\"=dword:00000001\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319]\n\"SystemDefaultTlsVersions\"=dword:00000001\n\"SchUseStrongCrypto\"=dword:00000001\n```\n\n## Configuring Schannel protocols in the Windows Registry\n\nYou can use the registry for fine-grained control over the protocols that your client and/or server app negotiates. Your app's networking goes through Schannel (which is another name for [Secure Channel](/windows/desktop/SecAuthN/secure-channel). By configuring `Schannel`, you can configure your app's behavior.\n\nStart with the `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols` registry key. Under that key you can create any subkeys in the set `SSL 2.0`, `SSL 3.0`, `TLS 1.0`, `TLS 1.1`, and `TLS 1.2`. Under each of those subkeys, you can create subkeys `Client` and/or `Server`. Under `Client` and `Server`, you can create DWORD values `DisabledByDefault` (0 or 1) and `Enabled` (0 or 0xFFFFFFFF).\n\n## <a name=\"the-sch_use_strong_crypto-flag\"></a>The SCH_USE_STRONG_CRYPTO flag\n\nWhen it's enabled (by default, by an `AppContext` switch, or by the Windows Registry), the .NET Framework uses the `SCH_USE_STRONG_CRYPTO` flag when your app requests a TLS security protocol. The `SCH_USE_STRONG_CRYPTO` flag can be enabled by default, with the `AppContext` switch, or with the Registry. The OS passes the flag to `Schannel`to instruct it to disable known weak cryptographic algorithms, cipher suites, and TLS/SSL protocol versions that may be otherwise enabled for better interoperability. For more information, see:\n\n- [Secure Channel](/windows/desktop/SecAuthN/secure-channel)\n- [SCHANNEL_CRED structure](/windows/desktop/api/schannel/ns-schannel-_schannel_cred)\n\nThe `SCH_USE_STRONG_CRYPTO` flag is also passed to `Schannel` when you explicitly use the `Tls` (TLS 1.0), `Tls11`, or `Tls12` enumerated values of <xref:System.Net.SecurityProtocolType> or <xref:System.Security.Authentication.SslProtocols>.\n\n## Security updates\n\nThe best practices in this article depend on recent security updates being installed. These updates include the ability to use advanced .NET Framework 4.7 and later features. Recent security updates are important if your app runs on .NET Framework 4.7 and later versions (even if it targets an earlier version).\n\nTo update the .NET Framework to allow the operating system to choose the best version of TLS to use, you must install at least:\n\n- The [.NET Framework August 2017 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-august-2017-preview-of-quality-rollup/).\n- **Or** the [.NET Framework September 2017 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2017-security-and-quality-rollup/).\n\nSee also:\n\n- [.NET Framework Versions and Dependencies](../migration-guide/versions-and-dependencies.md)\n- [How to: Determine Which .NET Framework Versions Are Installed](../migration-guide/how-to-determine-which-versions-are-installed.md).\n\n## Support for TLS 1.2\n\nFor your app to negotiate TLS 1.2, the OS and the .NET Framework version both need to support TLS 1.2.\n\n**Operating system requirements to support TLS 1.2**\n\nTo enable or re-enable TLS 1.2 and/or TLS 1.1 on a system that supports them, see [Transport Layer Security (TLS) registry settings](/windows-server/security/tls/tls-registry-settings).\n\n| **OS** | **TLS 1.2 support** |\n| --- | --- |\n| Windows 10<br>Windows Server 2016 | Supported, and enabled by default. |\n| Windows 8.1<br>Windows Server 2012 R2 | Supported, and enabled by default. |\n| Windows 8.0<br>Windows Server 2012 | Supported, and enabled by default. |\n| Windows 7 SP1<br>Windows Server 2008 R2 SP1 | Supported, but not enabled by default. See the [Transport Layer Security (TLS) registry settings](/windows-server/security/tls/tls-registry-settings) web page for details on how to enable TLS 1.2. |\n| Windows Server 2008 | Support for TLS 1.2 and TLS 1.1 requires an update. See [Update to add support for TLS 1.1 and TLS 1.2 in Windows Server 2008 SP2](https://support.microsoft.com/help/4019276/update-to-add-support-for-tls-1-1-and-tls-1-2-in-windows-server-2008-s). |\n| Windows Vista | Not supported. |\n\nFor information about which TLS/SSL protocols are enabled by default on each version of Windows, see [Protocols in TLS/SSL (Schannel SSP)](/windows/desktop/SecAuthN/protocols-in-tls-ssl--schannel-ssp-).\n\n**Requirements to support TLS 1.2 with .NET Framework 3.5**\n\nThis table shows the OS update you'll need to support TLS 1.2 with .NET Framework 3.5. We recommend you apply all OS updates.\n\n| **OS** | **Minimum update needed to support TLS 1.2 with .NET Framework 3.5** |\n| --- | --- |\n| Windows 10<br>Windows Server 2016 | [Cumulative Update for Windows 10 Version 1511 and Windows Server 2016 Technical Preview 4: May 10, 2016](https://support.microsoft.com/help/3156421/cumulative-update-for-windows-10-version-1511-and-windows-server-2016) |\n| Windows 8.1<br>Windows Server 2012 R2 | [Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows 8.1 and Windows Server 2012 R2](https://support.microsoft.com/help/3154520/support-for-tls-system-default-versions-included-in-the--net-framework) |\n| Windows 8.0<br>Windows Server 2012 | [Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows Server 2012](https://support.microsoft.com/help/3154519/support-for-tls-system-default-versions-included-in-the--net-framework) |\n| Windows 7 SP1<br>Windows Server 2008 R2 SP1 | [Support for TLS System Default Versions included in the .NET Framework 3.5.1 on Windows 7 SP1 and Server 2008 R2 SP1](https://support.microsoft.com/help/3154518/support-for-tls-system-default-versions-included-in-the--net-framework) |\n| Windows Server 2008 | [Support for TLS System Default Versions included in the .NET Framework 2.0 SP2 on Windows Vista SP2 and Server 2008 SP2](https://support.microsoft.com/help/3154517/support-for-tls-system-default-versions-included-in-the--net-framework) |\n| Windows Vista | Not supported |\n\n## Azure Cloud Services\n\nIf you are using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application, there are some considerations that you need to take into account to support TLS 1.2.\n\n### .NET Framework 4.7 is not installed on Azure Guest OS by default\n\nThe latest version installed in the latest Azure Guest OS Family 5 release (Windows Server 2016) is 4.6.2. To see which versions of .NET Framework are installed on each Azure Guest OS, see the [Azure Guest OS releases and SDK compatibility matrix](https://docs.microsoft.com/azure/cloud-services/cloud-services-guestos-update-matrix).\n\nIf your app targets a .NET Framework version that is not available on the Azure Guest OS version, then you need to install it yourself. See [Install .NET on Azure Cloud Service Roles](https://docs.microsoft.com/azure/cloud-services/cloud-services-dotnet-install-dotnet). If the framework installation requires a restart, the service roles might also restart before entering the Ready state.\n\n### Azure Guest OS registry settings\n\nThe Azure Guest OS Family 5 image for [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) already has the `SchUseStrongCrypto` registry key set to a value of 1. For more information, see [SchUseStrongCrypto](#schusestrongcrypto).\n\nSet the [SystemDefaultTlsVersions](#systemdefaulttlsversions) registry key to 1. See [Configuring security via the Windows Registry](#configuring-security-via-the-windows-registry).\n","nodes":[{"pos":[4,569],"embed":true,"restype":"x-metadata","content":"title: Transport Layer Security (TLS) best practices with the .NET Framework\ndescription: Describes best practices using Transport Layer Security (TLS) with the .NET Framework\nms.date: 10/22/2018\nhelpviewer_keywords: \n  - \"sending data, Internet security\"\n  - \"protocols, Internet security\"\n  - \"Network security\"\n  - \"network resources, Internet security\"\n  - \"receiving data, Internet security\"\n  - \"authentication [.NET Framework], Internet security\"\n  - \"Internet, security\"\n  - \"security [.NET Framework], Internet\"\n  - \"permissions [.NET Framework], Internet\"","nodes":[{"content":"Transport Layer Security (TLS) best practices with the .NET Framework","nodes":[{"pos":[0,69],"content":"Transport Layer Security (TLS) best practices with the .NET Framework","nodes":[{"content":"Transport Layer Security (TLS) best practices with the .NET Framework","pos":[0,69]}]}],"path":["title"],"nosxs":false},{"content":"Describes best practices using Transport Layer Security (TLS) with the .NET Framework","nodes":[{"pos":[0,85],"content":"Describes best practices using Transport Layer Security (TLS) with the .NET Framework","nodes":[{"content":"Describes best practices using Transport Layer Security (TLS) with the .NET Framework","pos":[0,85]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[576,645],"content":"Transport Layer Security (TLS) best practices with the .NET Framework","linkify":"Transport Layer Security (TLS) best practices with the .NET Framework","nodes":[{"content":"Transport Layer Security (TLS) best practices with the .NET Framework","pos":[0,69]}]},{"content":"The Transport Layer Security (TLS) protocol is an industry standard designed to help protect the privacy of information communicated over the Internet.","pos":[647,798]},{"content":"<bpt id=\"p1\">[</bpt>TLS 1.2<ept id=\"p1\">](https://tools.ietf.org/html/rfc5246)</ept> is a standard that provides security improvements over previous versions.","pos":[799,919],"source":"[TLS 1.2](https://tools.ietf.org/html/rfc5246) is a standard that provides security improvements over previous versions."},{"content":"TLS 1.2 will eventually be replaced by the newest released standard <bpt id=\"p1\">[</bpt>TLS 1.3<ept id=\"p1\">](https://tools.ietf.org/html/rfc8446)</ept> which is faster and has improved security.","pos":[920,1077],"source":" TLS 1.2 will eventually be replaced by the newest released standard [TLS 1.3](https://tools.ietf.org/html/rfc8446) which is faster and has improved security."},{"content":"This article presents recommendations to secure .NET Framework applications that use the TLS protocol.","pos":[1078,1180]},{"content":"To ensure .NET Framework applications remain secure, the TLS version should <bpt id=\"p1\">**</bpt>not<ept id=\"p1\">**</ept> be hardcoded.","pos":[1182,1279],"source":"To ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded."},{"content":".NET Framework applications should use the TLS version the operating system (OS) supports.","pos":[1280,1370]},{"content":"This document targets developers who are:","pos":[1372,1413]},{"pos":[1417,1607],"content":"Directly using the <ph id=\"ph1\">&lt;xref:System.Net&gt;</ph> APIs (for example, <ph id=\"ph2\">&lt;xref:System.Net.Http.HttpClient?displayProperty=nameWithType&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream?displayProperty=nameWithType&gt;</ph>).","source":"Directly using the <xref:System.Net> APIs (for example, <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> and <xref:System.Net.Security.SslStream?displayProperty=nameWithType>)."},{"pos":[1610,1726],"content":"Directly using WCF clients and services using the <ph id=\"ph1\">&lt;xref:System.ServiceModel?displayProperty=nameWithType&gt;</ph> namespace.","source":"Directly using WCF clients and services using the <xref:System.ServiceModel?displayProperty=nameWithType> namespace."},{"content":"Using <bpt id=\"p1\">[</bpt>Azure Cloud Services<ept id=\"p1\">](https://azure.microsoft.com/services/cloud-services/)</ept> Web and Worker roles to host and run your application.","pos":[1729,1866],"source":"Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application."},{"content":"See the <bpt id=\"p1\">[</bpt>Azure Cloud Services<ept id=\"p1\">](#azure-cloud-services)</ept> section.","pos":[1867,1929],"source":" See the [Azure Cloud Services](#azure-cloud-services) section."},{"content":"We recommend that you:","pos":[1931,1953]},{"content":"Target .NET Framework 4.7 or later versions on your apps.","pos":[1957,2014]},{"content":"Target .NET Framework 4.7.1 or later versions on your WCF apps.","pos":[2015,2078]},{"content":"Do not specify the TLS version.","pos":[2081,2112]},{"content":"Configure your code to let the OS decide on the TLS version.","pos":[2113,2173]},{"content":"Perform a thorough code audit to verify you're not specifying a TLS or SSL version.","pos":[2176,2259]},{"content":"When your app lets the OS choose the TLS version:","pos":[2261,2310]},{"content":"It automatically takes advantage of new protocols added in the future, such as TLS 1.3.","pos":[2314,2401]},{"content":"The OS blocks protocols that are discovered not to be secure.","pos":[2404,2465]},{"pos":[2467,2598],"content":"The section <bpt id=\"p1\">[</bpt>Audit your code and make code changes<ept id=\"p1\">](#audit-your-code-and-make-code-changes)</ept> covers auditing and updating your code.","source":"The section [Audit your code and make code changes](#audit-your-code-and-make-code-changes) covers auditing and updating your code."},{"content":"This article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.","pos":[2600,2741]},{"content":"When an app explicitly sets a security protocol and version, it opts out of any other alternative, and opts out of .NET Framework and OS default behavior.","pos":[2742,2896]},{"content":"If you want your app to be able to negotiate a TLS 1.2 connection, explicitly setting to a lower TLS version prevents a TLS 1.2 connection.","pos":[2897,3036]},{"content":"If you can't avoid hardcoding a protocol version, we strongly recommend that you specify TLS 1.2.","pos":[3038,3135]},{"content":"For guidance on identifying and removing TLS 1.0 dependencies, download the <bpt id=\"p1\">[</bpt>Solving the TLS 1.0 Problem<ept id=\"p1\">](https://www.microsoft.com/download/details.aspx?id=55266)</ept> whitepaper.","pos":[3136,3311],"source":" For guidance on identifying and removing TLS 1.0 dependencies, download the [Solving the TLS 1.0 Problem](https://www.microsoft.com/download/details.aspx?id=55266) whitepaper."},{"content":"WCF Supports TLS1.0, 1.1 and 1.2 as the default in .NET Framework 4.7.","pos":[3313,3383]},{"content":"Starting with .NET Framework 4.7.1, WCF defaults to the operating system configured version.","pos":[3384,3476]},{"content":"If an application is explicitly configured with <ph id=\"ph1\">`SslProtocols.None`</ph>, WCF uses the operating system default setting when using the NetTcp transport.","pos":[3477,3624],"source":" If an application is explicitly configured with `SslProtocols.None`, WCF uses the operating system default setting when using the NetTcp transport."},{"pos":[3626,3804],"content":"You can ask questions about this document in the GitHub issue <bpt id=\"p1\">[</bpt>Transport Layer Security (TLS) best practices with the .NET Framework<ept id=\"p1\">](https://github.com/dotnet/docs/issues/4675)</ept>.","source":"You can ask questions about this document in the GitHub issue [Transport Layer Security (TLS) best practices with the .NET Framework](https://github.com/dotnet/docs/issues/4675)."},{"pos":[3809,3846],"content":"Audit your code and make code changes","linkify":"Audit your code and make code changes","nodes":[{"content":"Audit your code and make code changes","pos":[0,37]}]},{"pos":[3848,4020],"content":"For ASP.NET applications, inspect the <ph id=\"ph1\">`&lt;system.web&gt;&lt;httpRuntime targetFramework&gt;`</ph> element of <bpt id=\"p1\">_</bpt>web.config<ept id=\"p1\">_</ept> to verify you're using the intended version of the .NET Framework.","source":"For ASP.NET applications, inspect the `<system.web><httpRuntime targetFramework>` element of _web.config_ to verify you're using the intended version of the .NET Framework."},{"pos":[4022,4184],"content":"For Windows Forms and other applications, see <bpt id=\"p1\">[</bpt>How to: Target a Version of the .NET Framework<ept id=\"p1\">](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework)</ept>.","source":"For Windows Forms and other applications, see [How to: Target a Version of the .NET Framework](/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework)."},{"content":"Use the following sections to verify you're not using a specific TLS or SSL version.","pos":[4186,4270]},{"pos":[4275,4331],"content":"If your app targets .NET Framework 4.7 or later versions","linkify":"If your app targets .NET Framework 4.7 or later versions","nodes":[{"content":"If your app targets .NET Framework 4.7 or later versions","pos":[0,56]}]},{"content":"The following sections show how to verify you're not using a specific TLS or SSL version.","pos":[4333,4422]},{"pos":[4428,4447],"content":"For HTTP networking","linkify":"For HTTP networking","nodes":[{"content":"For HTTP networking","pos":[0,19]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager&gt;</ph>, using .NET Framework 4.7 and later versions, defaults to the OS choosing the best security protocol and version.","pos":[4449,4600],"source":"<xref:System.Net.ServicePointManager>, using .NET Framework 4.7 and later versions, defaults to the OS choosing the best security protocol and version."},{"content":"To get the default OS best choice, if possible, don't set a value for the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.SecurityProtocol&gt;</ph> property.","pos":[4601,4739],"source":" To get the default OS best choice, if possible, don't set a value for the <xref:System.Net.ServicePointManager.SecurityProtocol> property."},{"content":"Otherwise, set it to <ph id=\"ph1\">&lt;xref:System.Net.SecurityProtocolType.SystemDefault&gt;</ph>.","pos":[4740,4814],"source":" Otherwise, set it to <xref:System.Net.SecurityProtocolType.SystemDefault>."},{"content":"The remainder of this article is not relevant when targeting .NET Framework 4.7 or later versions for HTTP networking.","pos":[4816,4934]},{"pos":[4940,4966],"content":"For TCP sockets networking","linkify":"For TCP sockets networking","nodes":[{"content":"For TCP sockets networking","pos":[0,26]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph>, using .NET Framework 4.7 and later versions, defaults to the OS choosing the best security protocol and version.","pos":[4968,5118],"source":"<xref:System.Net.Security.SslStream>, using .NET Framework 4.7 and later versions, defaults to the OS choosing the best security protocol and version."},{"content":"To get the default OS best choice, if possible, don't use the method overloads of <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> that take an explicit <ph id=\"ph2\">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph> parameter.","pos":[5119,5321],"source":" To get the default OS best choice, if possible, don't use the method overloads of <xref:System.Net.Security.SslStream> that take an explicit <xref:System.Security.Authentication.SslProtocols> parameter."},{"content":"Otherwise, pass <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.None?displayProperty=nameWithType&gt;</ph>.","pos":[5322,5423],"source":" Otherwise, pass <xref:System.Security.Authentication.SslProtocols.None?displayProperty=nameWithType>."},{"content":"We recommend that you don't use <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>; setting <ph id=\"ph2\">`SslProtocols.Default`</ph> forces the use of SSL 3.0 /TLS 1.0 and prevents TLS 1.2.","pos":[5424,5603],"source":" We recommend that you don't use <xref:System.Security.Authentication.SslProtocols.Default>; setting `SslProtocols.Default` forces the use of SSL 3.0 /TLS 1.0 and prevents TLS 1.2."},{"pos":[5605,5717],"content":"Don't set a value for the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.SecurityProtocol&gt;</ph> property (for HTTP networking).","source":"Don't set a value for the <xref:System.Net.ServicePointManager.SecurityProtocol> property (for HTTP networking)."},{"content":"Don't use the method overloads of <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> that take an explicit <ph id=\"ph2\">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph> parameter (for TCP sockets networking).","pos":[5719,5902],"source":"Don't use the method overloads of <xref:System.Net.Security.SslStream> that take an explicit <xref:System.Security.Authentication.SslProtocols> parameter (for TCP sockets networking)."},{"content":"When you retarget your app to .NET Framework 4.7 or later versions, you'll be following the best practices recommendation.","pos":[5903,6025]},{"content":"The remainder of this topic is not relevant when targeting .NET Framework 4.7 or later versions for TCP sockets networking.","pos":[6027,6150]},{"pos":[6185,6260],"content":"For WCF TCP transport using transport security with certificate credentials","linkify":"For WCF TCP transport using transport security with certificate credentials","nodes":[{"content":"For WCF TCP transport using transport security with certificate credentials","pos":[0,75]}]},{"content":"WCF uses the same networking stack as the rest of the .NET Framework.","pos":[6262,6331]},{"content":"If you are targeting 4.7.1, WCF is configured to allow the OS to choose the best security protocol by default unless explicitly configured:","pos":[6333,6472]},{"content":"In your application configuration file.","pos":[6476,6515]},{"pos":[6518,6565],"content":"<bpt id=\"p1\">**</bpt>Or<ept id=\"p1\">**</ept>, in your application in the source code.","source":"**Or**, in your application in the source code."},{"content":"By default, .NET Framework 4.7 and later versions is configured to use TLS 1.2 and allows connections using TLS 1.1 or TLS 1.0.","pos":[6567,6694]},{"content":"Configure WCF to allow the OS to choose the best security protocol by configuring your binding to use <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.None?displayProperty=nameWithType&gt;</ph>.","pos":[6695,6882],"source":" Configure WCF to allow the OS to choose the best security protocol by configuring your binding to use <xref:System.Security.Authentication.SslProtocols.None?displayProperty=nameWithType>."},{"content":"This can be set on <ph id=\"ph1\">&lt;xref:System.ServiceModel.TcpTransportSecurity.SslProtocols&gt;</ph>.","pos":[6883,6963],"source":" This can be set on <xref:System.ServiceModel.TcpTransportSecurity.SslProtocols>."},{"content":"<ph id=\"ph1\">`SslProtocols.None`</ph> can be accessed from <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetTcpSecurity.Transport&gt;</ph>.","pos":[6964,7057],"source":"`SslProtocols.None` can be accessed from <xref:System.ServiceModel.NetTcpSecurity.Transport>."},{"content":"<ph id=\"ph1\">`NetTcpSecurity.Transport`</ph> can be accessed from <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetTcpBinding.Security&gt;</ph>.","pos":[7058,7156],"source":"`NetTcpSecurity.Transport` can be accessed from <xref:System.ServiceModel.NetTcpBinding.Security>."},{"content":"If you're using a custom binding:","pos":[7158,7191]},{"pos":[7195,7446],"content":"Configure WCF to allow the OS to choose the best security protocol by setting <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols&gt;</ph> to use <ph id=\"ph2\">&lt;xref:System.Security.Authentication.SslProtocols.None?displayProperty=nameWithType&gt;</ph>.","source":"Configure WCF to allow the OS to choose the best security protocol by setting <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols> to use <xref:System.Security.Authentication.SslProtocols.None?displayProperty=nameWithType>."},{"pos":[7449,7596],"content":"<bpt id=\"p1\">**</bpt>Or<ept id=\"p1\">**</ept> configure the protocol used with the configuration path <ph id=\"ph1\">`system.serviceModel/bindings/customBinding/binding/sslStreamSecurity:sslProtocols`</ph>.","source":"**Or** configure the protocol used with the configuration path `system.serviceModel/bindings/customBinding/binding/sslStreamSecurity:sslProtocols`."},{"pos":[7598,7835],"content":"If you're <bpt id=\"p1\">**</bpt>not<ept id=\"p1\">**</ept> using a custom binding <bpt id=\"p2\">**</bpt>and<ept id=\"p2\">**</ept> you're setting your WCF binding using configuration, set the protocol used with the configuration path <ph id=\"ph1\">`system.serviceModel/bindings/netTcpBinding/binding/security/transport:sslProtocols`</ph>.","source":"If you're **not** using a custom binding **and** you're setting your WCF binding using configuration, set the protocol used with the configuration path `system.serviceModel/bindings/netTcpBinding/binding/security/transport:sslProtocols`."},{"pos":[7841,7894],"content":"For WCF Message Security with certificate credentials","linkify":"For WCF Message Security with certificate credentials","nodes":[{"content":"For WCF Message Security with certificate credentials","pos":[0,53]}]},{"content":".NET Framework 4.7 and later versions by default uses the protocol specified in the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.SecurityProtocol&gt;</ph> property.","pos":[7896,8044],"source":".NET Framework 4.7 and later versions by default uses the protocol specified in the <xref:System.Net.ServicePointManager.SecurityProtocol> property."},{"content":"When the <bpt id=\"p1\">[</bpt>AppContextSwitch<ept id=\"p1\">](../configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> <ph id=\"ph1\">`Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols`</ph> is set to <ph id=\"ph2\">`true`</ph>, WCF chooses the best protocol, up to TLS 1.0.","pos":[8045,8290],"source":" When the [AppContextSwitch](../configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) `Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols` is set to `true`, WCF chooses the best protocol, up to TLS 1.0."},{"pos":[8295,8356],"content":"If your app targets a .NET Framework version earlier than 4.7","linkify":"If your app targets a .NET Framework version earlier than 4.7","nodes":[{"content":"If your app targets a .NET Framework version earlier than 4.7","pos":[0,61]}]},{"content":"Audit your code to verify you're not setting a specific TLS or SSL version using the following sections:","pos":[8358,8462]},{"pos":[8468,8510],"content":"For .NET Framework 4.6 - 4.6.2 and not WCF","linkify":"For .NET Framework 4.6 - 4.6.2 and not WCF","nodes":[{"content":"For .NET Framework 4.6 - 4.6.2 and not WCF","pos":[0,42]}]},{"content":"Set the <ph id=\"ph1\">`DontEnableSystemDefaultTlsVersions`</ph> <ph id=\"ph2\">`AppContext`</ph> switch to <ph id=\"ph3\">`false`</ph>.","pos":[8512,8588],"source":"Set the `DontEnableSystemDefaultTlsVersions` `AppContext` switch to `false`."},{"content":"See <bpt id=\"p1\">[</bpt>Configuring security via AppContext switches<ept id=\"p1\">](#configuring-security-via-appcontext-switches)</ept>.","pos":[8589,8687],"source":" See [Configuring security via AppContext switches](#configuring-security-via-appcontext-switches)."},{"pos":[8693,8791],"content":"For WCF using .NET Framework 4.6 - 4.6.2 using TCP transport security with Certificate Credentials","linkify":"For WCF using .NET Framework 4.6 - 4.6.2 using TCP transport security with Certificate Credentials","nodes":[{"content":"For WCF using .NET Framework 4.6 - 4.6.2 using TCP transport security with Certificate Credentials","pos":[0,98]}]},{"content":"You must install the latest OS patches.","pos":[8793,8832]},{"content":"See <bpt id=\"p1\">[</bpt>Security updates<ept id=\"p1\">](#security-updates)</ept>.","pos":[8833,8875],"source":" See [Security updates](#security-updates)."},{"content":"The WCF framework automatically chooses the highest protocol available up to TLS 1.2 unless you explicitly configure a protocol version.","pos":[8877,9013]},{"content":"For more information, see the preceding section <bpt id=\"p1\">[</bpt>For WCF TCP transport using transport security with certificate credentials<ept id=\"p1\">](#wcf-tcp-cert)</ept>.","pos":[9014,9155],"source":" For more information, see the preceding section [For WCF TCP transport using transport security with certificate credentials](#wcf-tcp-cert)."},{"pos":[9161,9203],"content":"For .NET Framework 3.5 - 4.5.2 and not WCF","linkify":"For .NET Framework 3.5 - 4.5.2 and not WCF","nodes":[{"content":"For .NET Framework 3.5 - 4.5.2 and not WCF","pos":[0,42]}]},{"content":"We recommend you upgrade your app to .NET Framework 4.7 or later versions.","pos":[9205,9279]},{"content":"If you cannot upgrade, take the following steps.","pos":[9280,9328]},{"content":"At some point in the future, your application may fail until you upgrade to .NET Framework 4.7 or later versions.","pos":[9329,9442]},{"content":"Set the <bpt id=\"p1\">[</bpt>SchUseStrongCrypto<ept id=\"p1\">](#schusestrongcrypto)</ept> and <bpt id=\"p2\">[</bpt>SystemDefaultTlsVersions<ept id=\"p2\">](#systemdefaulttlsversions)</ept> registry keys to 1.","pos":[9444,9571],"source":"Set the [SchUseStrongCrypto](#schusestrongcrypto) and [SystemDefaultTlsVersions](#systemdefaulttlsversions) registry keys to 1."},{"content":"See <bpt id=\"p1\">[</bpt>Configuring security via the Windows Registry<ept id=\"p1\">](#configuring-security-via-the-windows-registry)</ept>.","pos":[9572,9672],"source":" See [Configuring security via the Windows Registry](#configuring-security-via-the-windows-registry)."},{"content":"The .NET Framework version 3.5 supports the <ph id=\"ph1\">`SchUseStrongCrypto`</ph> flag only when an explicit TLS value is passed.","pos":[9673,9785],"source":" The .NET Framework version 3.5 supports the `SchUseStrongCrypto` flag only when an explicit TLS value is passed."},{"content":"If you are running on .NET Framework 3.5, you need to install a hot patch so that TLS 1.2 can be specified by your program:","pos":[9787,9910]},{"pos":[9914,9967],"content":"<bpt id=\"p1\">[</bpt>KB3154518<ept id=\"p1\">](https://support.microsoft.com/kb/3154518)</ept>","source":"[KB3154518](https://support.microsoft.com/kb/3154518)"},{"content":"Reliability Rollup HR-1605 - Support for TLS System Default Versions included in the .NET Framework 3.5.1 on Windows 7 SP1 and Server 2008 R2 SP1","pos":[9970,10115]},{"pos":[10134,10187],"content":"<bpt id=\"p1\">[</bpt>KB3154519<ept id=\"p1\">](https://support.microsoft.com/kb/3154519)</ept>","source":"[KB3154519](https://support.microsoft.com/kb/3154519)"},{"content":"Reliability Rollup HR-1605 - Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows Server 2012","pos":[10190,10316]},{"pos":[10321,10374],"content":"<bpt id=\"p1\">[</bpt>KB3154520<ept id=\"p1\">](https://support.microsoft.com/kb/3154520)</ept>","source":"[KB3154520](https://support.microsoft.com/kb/3154520)"},{"content":"Reliability Rollup HR-1605 -Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows 8.1 and Windows Server 2012 R2","pos":[10377,10521]},{"pos":[10526,10579],"content":"<bpt id=\"p1\">[</bpt>KB3156421<ept id=\"p1\">](https://support.microsoft.com/kb/3156421)</ept>","source":"[KB3156421](https://support.microsoft.com/kb/3156421)"},{"content":"1605 Hotfix rollup 3154521 for the .NET Framework 4.5.2 and 4.5.1 on Windows","pos":[10582,10658]},{"pos":[10666,10764],"content":"For WCF using .NET Framework 3.5 - 4.5.2 using TCP transport security with Certificate Credentials","linkify":"For WCF using .NET Framework 3.5 - 4.5.2 using TCP transport security with Certificate Credentials","nodes":[{"content":"For WCF using .NET Framework 3.5 - 4.5.2 using TCP transport security with Certificate Credentials","pos":[0,98]}]},{"content":"These versions of the WCF framework are hardcoded to use values SSL 3.0 and TLS 1.0.","pos":[10766,10850]},{"content":"These values cannot be changed.","pos":[10851,10882]},{"content":"You must update and retarget to NET Framework 4.6 or later versions to use TLS 1.1 and 1.2.","pos":[10883,10974]},{"pos":[10979,11017],"content":"If your app targets .NET Framework 3.5","linkify":"If your app targets .NET Framework 3.5","nodes":[{"content":"If your app targets .NET Framework 3.5","pos":[0,38]}]},{"content":"If you must explicitly set a security protocol instead of letting the .NET framework or the OS pick the security protocol, add <ph id=\"ph1\">`SecurityProtocolTypeExtensions`</ph> and <ph id=\"ph2\">`SslProtocolsExtension`</ph> enumerations to your code.","pos":[11019,11233],"source":"If you must explicitly set a security protocol instead of letting the .NET framework or the OS pick the security protocol, add `SecurityProtocolTypeExtensions` and `SslProtocolsExtension` enumerations to your code."},{"content":"<ph id=\"ph1\">`SecurityProtocolTypeExtensions`</ph> and <ph id=\"ph2\">`SslProtocolsExtension`</ph> include values for <ph id=\"ph3\">`Tls12`</ph>, <ph id=\"ph4\">`Tls11`</ph>, and the <ph id=\"ph5\">`SystemDefault`</ph> value.","pos":[11234,11362],"source":"`SecurityProtocolTypeExtensions` and `SslProtocolsExtension` include values for `Tls12`, `Tls11`, and the `SystemDefault` value."},{"content":"See <bpt id=\"p1\">[</bpt>Support for TLS System Default Versions included in .NET Framework 3.5 on Windows 8.1 and Windows Server 2012 R2<ept id=\"p1\">](https://support.microsoft.com/help/3154520/support-for-tls-system-default-versions-included-in-the--net-framework)</ept>.","pos":[11363,11597],"source":" See [Support for TLS System Default Versions included in .NET Framework 3.5 on Windows 8.1 and Windows Server 2012 R2](https://support.microsoft.com/help/3154520/support-for-tls-system-default-versions-included-in-the--net-framework)."},{"pos":[11663,11750],"content":"Configuring security via AppContext switches (for .NET Framework 4.6 or later versions)","linkify":"Configuring security via AppContext switches (for .NET Framework 4.6 or later versions)","nodes":[{"content":"Configuring security via AppContext switches (for .NET Framework 4.6 or later versions)","pos":[0,87]}]},{"content":"The <bpt id=\"p1\">[</bpt>AppContext<ept id=\"p1\">](../configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept> switches described in this section are relevant if your app targets, or runs on, .NET Framework 4.6 or later versions.","pos":[11752,11963],"source":"The [AppContext](../configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md) switches described in this section are relevant if your app targets, or runs on, .NET Framework 4.6 or later versions."},{"content":"Whether by default, or by setting them explicitly, the switches should be <ph id=\"ph1\">`false`</ph> if possible.","pos":[11964,12058],"source":" Whether by default, or by setting them explicitly, the switches should be `false` if possible."},{"content":"If you want to configure security via one or both switches, then don't specify a security protocol value in your code; doing so would override the switch(es).","pos":[12059,12217]},{"pos":[12219,12395],"content":"The switches have the same effect whether you're doing HTTP networking (<ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager&gt;</ph>) or TCP sockets networking (<ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph>).","source":"The switches have the same effect whether you're doing HTTP networking (<xref:System.Net.ServicePointManager>) or TCP sockets networking (<xref:System.Net.Security.SslStream>)."},{"pos":[12401,12447],"content":"Switch.System.Net.DontEnableSchUseStrongCrypto","linkify":"Switch.System.Net.DontEnableSchUseStrongCrypto","nodes":[{"content":"Switch.System.Net.DontEnableSchUseStrongCrypto","pos":[0,46]}]},{"content":"A value of <ph id=\"ph1\">`false`</ph> for <ph id=\"ph2\">`Switch.System.Net.DontEnableSchUseStrongCrypto`</ph> causes your app to use strong cryptography.","pos":[12449,12564],"source":"A value of `false` for `Switch.System.Net.DontEnableSchUseStrongCrypto` causes your app to use strong cryptography."},{"content":"A value of <ph id=\"ph1\">`false`</ph> for <ph id=\"ph2\">`DontEnableSchUseStrongCrypto`</ph> uses more secure network protocols (TLS 1.2, TLS 1.1, and TLS 1.0) and blocks protocols that are not secure.","pos":[12565,12727],"source":" A value of `false` for `DontEnableSchUseStrongCrypto` uses more secure network protocols (TLS 1.2, TLS 1.1, and TLS 1.0) and blocks protocols that are not secure."},{"content":"For more info, see <bpt id=\"p1\">[</bpt>The SCH_USE_STRONG_CRYPTO flag<ept id=\"p1\">](#the-sch_use_strong_crypto-flag)</ept>.","pos":[12728,12813],"source":" For more info, see [The SCH_USE_STRONG_CRYPTO flag](#the-sch_use_strong_crypto-flag)."},{"content":"A value of <ph id=\"ph1\">`true`</ph> disables strong cryptography for your app.","pos":[12814,12874],"source":" A value of `true` disables strong cryptography for your app."},{"content":"If your app targets .NET Framework 4.6 or later versions, this switch defaults to <ph id=\"ph1\">`false`</ph>.","pos":[12876,12966],"source":"If your app targets .NET Framework 4.6 or later versions, this switch defaults to `false`."},{"content":"That's a secure default, which we recommend.","pos":[12967,13011]},{"content":"If your app runs on .NET Framework 4.6, but targets an earlier version, the switch defaults to <ph id=\"ph1\">`true`</ph>.","pos":[13012,13114],"source":" If your app runs on .NET Framework 4.6, but targets an earlier version, the switch defaults to `true`."},{"content":"In that case, you should explicitly set it to <ph id=\"ph1\">`false`</ph>.","pos":[13115,13169],"source":" In that case, you should explicitly set it to `false`."},{"pos":[13171,13340],"content":"<ph id=\"ph1\">`DontEnableSchUseStrongCrypto`</ph> should only have a value of <ph id=\"ph2\">`true`</ph> if you need to connect to legacy services that don't support strong cryptography and can't be upgraded.","source":"`DontEnableSchUseStrongCrypto` should only have a value of `true` if you need to connect to legacy services that don't support strong cryptography and can't be upgraded."},{"pos":[13346,13398],"content":"Switch.System.Net.DontEnableSystemDefaultTlsVersions","linkify":"Switch.System.Net.DontEnableSystemDefaultTlsVersions","nodes":[{"content":"Switch.System.Net.DontEnableSystemDefaultTlsVersions","pos":[0,52]}]},{"content":"A value of <ph id=\"ph1\">`false`</ph> for <ph id=\"ph2\">`Switch.System.Net.DontEnableSystemDefaultTlsVersions`</ph> causes your app to allow the operating system to choose the protocol.","pos":[13400,13547],"source":"A value of `false` for `Switch.System.Net.DontEnableSystemDefaultTlsVersions` causes your app to allow the operating system to choose the protocol."},{"content":"A value of <ph id=\"ph1\">`true`</ph> causes your app to use protocols picked by the .NET Framework.","pos":[13548,13628],"source":" A value of `true` causes your app to use protocols picked by the .NET Framework."},{"content":"If your app targets .NET Framework 4.7 or later versions, this switch defaults to <ph id=\"ph1\">`false`</ph>.","pos":[13630,13720],"source":"If your app targets .NET Framework 4.7 or later versions, this switch defaults to `false`."},{"content":"That's a secure default that we recommend.","pos":[13721,13763]},{"content":"If your app runs on .NET Framework 4.7 or later versions, but targets an earlier version, the switch defaults to <ph id=\"ph1\">`true`</ph>.","pos":[13764,13884],"source":" If your app runs on .NET Framework 4.7 or later versions, but targets an earlier version, the switch defaults to `true`."},{"content":"In that case, you should explicitly set it to <ph id=\"ph1\">`false`</ph>.","pos":[13885,13939],"source":" In that case, you should explicitly set it to `false`."},{"pos":[13945,14020],"content":"Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols","linkify":"Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols","nodes":[{"content":"Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols","pos":[0,75]}]},{"content":"A value of <ph id=\"ph1\">`false`</ph> for <ph id=\"ph2\">`Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols`</ph> causes your application to use the value defined in <ph id=\"ph3\">`ServicePointManager.SecurityProtocols`</ph> for message security using certificate credentials.","pos":[14022,14266],"source":"A value of `false` for `Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols` causes your application to use the value defined in `ServicePointManager.SecurityProtocols` for message security using certificate credentials."},{"content":"A value of <ph id=\"ph1\">`true`</ph> uses the highest protocol available, up to TLS1.0","pos":[14267,14334],"source":" A value of `true` uses the highest protocol available, up to TLS1.0"},{"content":"For applications targeting .NET Framework 4.7 and later versions, this value defaults to <ph id=\"ph1\">`false`</ph>.","pos":[14336,14433],"source":"For applications targeting .NET Framework 4.7 and later versions, this value defaults to `false`."},{"content":"For applications targeting .NET Framework 4.6.2 and earlier, this value defaults to <ph id=\"ph1\">`true`</ph>.","pos":[14434,14525],"source":" For applications targeting .NET Framework 4.6.2 and earlier, this value defaults to `true`."},{"pos":[14531,14592],"content":"Switch.System.ServiceModel.DontEnableSystemDefaultTlsVersions","linkify":"Switch.System.ServiceModel.DontEnableSystemDefaultTlsVersions","nodes":[{"content":"Switch.System.ServiceModel.DontEnableSystemDefaultTlsVersions","pos":[0,61]}]},{"content":"A value of <ph id=\"ph1\">`false`</ph> for <ph id=\"ph2\">`Switch.System.ServiceModel.DontEnableSystemDefaultTlsVersions`</ph> sets the default configuration to allow the operating system to choose the protocol.","pos":[14594,14765],"source":"A value of `false` for `Switch.System.ServiceModel.DontEnableSystemDefaultTlsVersions` sets the default configuration to allow the operating system to choose the protocol."},{"content":"A value of <ph id=\"ph1\">`true`</ph> sets the default to the highest protocol available, up to TLS1.2.","pos":[14766,14849],"source":" A value of `true` sets the default to the highest protocol available, up to TLS1.2."},{"content":"For applications targeting .NET Framework 4.7.1 and later versions, this value defaults to <ph id=\"ph1\">`false`</ph>.","pos":[14851,14950],"source":"For applications targeting .NET Framework 4.7.1 and later versions, this value defaults to `false`."},{"content":"For applications targeting .NET Framework 4.7 and earlier, this value defaults to <ph id=\"ph1\">`true`</ph>.","pos":[14951,15040],"source":" For applications targeting .NET Framework 4.7 and earlier, this value defaults to `true`."},{"content":"For more information about TLS protocols, see <bpt id=\"p1\">[</bpt>Mitigation: TLS Protocols<ept id=\"p1\">](../migration-guide/mitigation-tls-protocols.md)</ept>.","pos":[15042,15164],"source":"For more information about TLS protocols, see [Mitigation: TLS Protocols](../migration-guide/mitigation-tls-protocols.md)."},{"content":"For more information about <ph id=\"ph1\">`AppContext`</ph> switches, see <bpt id=\"p1\">[</bpt><ph id=\"ph2\">`&lt;AppContextSwitchOverrides&gt; Element`</ph><ept id=\"p1\">](../configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)</ept>.","pos":[15165,15335],"source":" For more information about `AppContext` switches, see [`<AppContextSwitchOverrides> Element`](../configure-apps/file-schema/runtime/appcontextswitchoverrides-element.md)."},{"pos":[15340,15385],"content":"Configuring security via the Windows Registry","linkify":"Configuring security via the Windows Registry","nodes":[{"content":"Configuring security via the Windows Registry","pos":[0,45]}]},{"pos":[15389,15567],"content":"[!WARNING]\nSetting registry keys affects all applications on the system. Use this option only if you are in full control of the machine and can control changes to the registry.","leadings":["","> "],"nodes":[{"content":"Setting registry keys affects all applications on the system. Use this option only if you are in full control of the machine and can control changes to the registry.","pos":[11,176],"nodes":[{"content":"Setting registry keys affects all applications on the system.","pos":[0,61]},{"content":"Use this option only if you are in full control of the machine and can control changes to the registry.","pos":[62,165]}]}]},{"content":"If setting one or both <ph id=\"ph1\">`AppContext`</ph> switches isn't an option, you can control the security protocols that your app uses with the Windows Registry keys described in this section.","pos":[15569,15746],"source":"If setting one or both `AppContext` switches isn't an option, you can control the security protocols that your app uses with the Windows Registry keys described in this section."},{"content":"You might not be able to use one or both the <ph id=\"ph1\">`AppContext`</ph> switches if your app runs on .NET Framework 4.5.2 or earlier versions, or if you can't edit the configuration file.","pos":[15747,15920],"source":" You might not be able to use one or both the `AppContext` switches if your app runs on .NET Framework 4.5.2 or earlier versions, or if you can't edit the configuration file."},{"content":"If you want to configure security with the registry, don't specify a security protocol value in your code; doing so overrides the registry setting.","pos":[15921,16068]},{"content":"The names of the registry keys are similar to the names of the corresponding <ph id=\"ph1\">`AppContext`</ph> switches but without a <ph id=\"ph2\">`DontEnable`</ph> prepended to the name.","pos":[16070,16218],"source":"The names of the registry keys are similar to the names of the corresponding `AppContext` switches but without a `DontEnable` prepended to the name."},{"content":"For example, the <ph id=\"ph1\">`AppContext`</ph> switch <ph id=\"ph2\">`DontEnableSchUseStrongCrypto`</ph> is the registry key called <bpt id=\"p1\">[</bpt>SchUseStrongCrypto<ept id=\"p1\">](#schusestrongcrypto)</ept>.","pos":[16219,16356],"source":" For example, the `AppContext` switch `DontEnableSchUseStrongCrypto` is the registry key called [SchUseStrongCrypto](#schusestrongcrypto)."},{"content":"These keys are available in all .NET Framework versions for which there's a recent security patch.","pos":[16358,16456]},{"content":"See <bpt id=\"p1\">[</bpt>Security updates<ept id=\"p1\">](#security-updates)</ept>.","pos":[16457,16499],"source":" See [Security updates](#security-updates)."},{"pos":[16501,16705],"content":"All of the registry keys described below have the same effect whether you're doing HTTP networking (<ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager&gt;</ph>) or TCP sockets networking (<ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph>).","source":"All of the registry keys described below have the same effect whether you're doing HTTP networking (<xref:System.Net.ServicePointManager>) or TCP sockets networking (<xref:System.Net.Security.SslStream>)."},{"pos":[16711,16729],"content":"SchUseStrongCrypto","linkify":"SchUseStrongCrypto","nodes":[{"content":"SchUseStrongCrypto","pos":[0,18]}]},{"content":"The <ph id=\"ph1\">`HKEY_LOCAL_MACHINE\\SOFTWARE\\[Wow6432Node\\]Microsoft\\.NETFramework\\&lt;VERSION&gt;: SchUseStrongCrypto`</ph> registry key has a value of type DWORD.","pos":[16731,16872],"source":"The `HKEY_LOCAL_MACHINE\\SOFTWARE\\[Wow6432Node\\]Microsoft\\.NETFramework\\<VERSION>: SchUseStrongCrypto` registry key has a value of type DWORD."},{"content":"A value of 1 causes your app to use strong cryptography.","pos":[16873,16929]},{"content":"The strong cryptography uses more secure network protocols (TLS 1.2, TLS 1.1, and TLS 1.0) and blocks protocols that are not secure.","pos":[16930,17062]},{"content":"A value of 0 disables strong cryptography.","pos":[17063,17105]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>The SCH_USE_STRONG_CRYPTO flag<ept id=\"p1\">](#the-sch_use_strong_crypto-flag)</ept>.","pos":[17106,17198],"source":" For more information, see [The SCH_USE_STRONG_CRYPTO flag](#the-sch_use_strong_crypto-flag)."},{"content":"If your app targets .NET Framework 4.6 or later versions, this key defaults to a value of 1.","pos":[17200,17292]},{"content":"That's a secure default that we recommend.","pos":[17293,17335]},{"content":"If your app runs on .NET Framework 4.6, but targets an earlier version, then the key defaults to 0.","pos":[17336,17435]},{"content":"In that case, you should explicitly set its value to 1.","pos":[17436,17491]},{"content":"This key should only have a value of 0 if you need to connect to legacy services that don't support strong cryptography and can't be upgraded.","pos":[17493,17635]},{"pos":[17641,17665],"content":"SystemDefaultTlsVersions","linkify":"SystemDefaultTlsVersions","nodes":[{"content":"SystemDefaultTlsVersions","pos":[0,24]}]},{"content":"The <ph id=\"ph1\">`HKEY_LOCAL_MACHINE\\SOFTWARE\\[Wow6432Node\\]Microsoft\\.NETFramework\\&lt;VERSION&gt;: SystemDefaultTlsVersions`</ph> registry key has a value of type DWORD.","pos":[17667,17814],"source":"The `HKEY_LOCAL_MACHINE\\SOFTWARE\\[Wow6432Node\\]Microsoft\\.NETFramework\\<VERSION>: SystemDefaultTlsVersions` registry key has a value of type DWORD."},{"content":"A value of 1 causes your app to allow the operating system to choose the protocol.","pos":[17815,17897]},{"content":"A value of 0 causes your app to use protocols picked by the .NET Framework.","pos":[17898,17973]},{"pos":[17975,18078],"content":"<ph id=\"ph1\">`&lt;VERSION&gt;`</ph> must be v4.0.30319 (for .NET Framework 4 and above) or v2.0.50727 (for .NET Framework 3.5).","source":"`<VERSION>` must be v4.0.30319 (for .NET Framework 4 and above) or v2.0.50727 (for .NET Framework 3.5)."},{"content":"If your app targets .NET Framework 4.7 or later versions, this key defaults to a value of 1.","pos":[18080,18172]},{"content":"That's a secure default that we recommend.","pos":[18173,18215]},{"content":"If your app runs on .NET Framework 4.7 or later versions, but targets an earlier version, the key defaults to 0.","pos":[18216,18328]},{"content":"In that case, you should explicitly set its value to 1.","pos":[18329,18384]},{"pos":[18386,18625],"content":"For more info, see <bpt id=\"p1\">[</bpt>Cumulative Update for Windows 10 Version 1511 and Windows Server 2016 Technical Preview 4: May 10, 2016<ept id=\"p1\">](https://support.microsoft.com/help/3156421/cumulative-update-for-windows-10-version-1511-and-windows-server-2016)</ept>.","source":"For more info, see [Cumulative Update for Windows 10 Version 1511 and Windows Server 2016 Technical Preview 4: May 10, 2016](https://support.microsoft.com/help/3156421/cumulative-update-for-windows-10-version-1511-and-windows-server-2016)."},{"pos":[18627,18909],"content":"For more information with .NET framework 3.5.1, see <bpt id=\"p1\">[</bpt>Support for TLS System Default Versions included in .NET Framework 3.5.1 on Windows 7 SP1 and Server 2008 R2 SP1<ept id=\"p1\">](https://support.microsoft.com/help/3154518/support-for-tls-system-default-versions-included-in-the--net-framework)</ept>.","source":"For more information with .NET framework 3.5.1, see [Support for TLS System Default Versions included in .NET Framework 3.5.1 on Windows 7 SP1 and Server 2008 R2 SP1](https://support.microsoft.com/help/3154518/support-for-tls-system-default-versions-included-in-the--net-framework)."},{"pos":[18911,19005],"content":"The following <bpt id=\"p1\">_</bpt>.REG<ept id=\"p1\">_</ept> file sets the registry keys and their variants to their most safe values:","source":"The following _.REG_ file sets the registry keys and their variants to their most safe values:"},{"pos":[19656,19710],"content":"Configuring Schannel protocols in the Windows Registry","linkify":"Configuring Schannel protocols in the Windows Registry","nodes":[{"content":"Configuring Schannel protocols in the Windows Registry","pos":[0,54]}]},{"content":"You can use the registry for fine-grained control over the protocols that your client and/or server app negotiates.","pos":[19712,19827]},{"content":"Your app's networking goes through Schannel (which is another name for <bpt id=\"p1\">[</bpt>Secure Channel<ept id=\"p1\">](/windows/desktop/SecAuthN/secure-channel)</ept>.","pos":[19828,19958],"source":" Your app's networking goes through Schannel (which is another name for [Secure Channel](/windows/desktop/SecAuthN/secure-channel)."},{"content":"By configuring <ph id=\"ph1\">`Schannel`</ph>, you can configure your app's behavior.","pos":[19959,20024],"source":" By configuring `Schannel`, you can configure your app's behavior."},{"content":"Start with the <ph id=\"ph1\">`HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols`</ph> registry key.","pos":[20026,20145],"source":"Start with the `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols` registry key."},{"content":"Under that key you can create any subkeys in the set <ph id=\"ph1\">`SSL 2.0`</ph>, <ph id=\"ph2\">`SSL 3.0`</ph>, <ph id=\"ph3\">`TLS 1.0`</ph>, <ph id=\"ph4\">`TLS 1.1`</ph>, and <ph id=\"ph5\">`TLS 1.2`</ph>.","pos":[20146,20257],"source":" Under that key you can create any subkeys in the set `SSL 2.0`, `SSL 3.0`, `TLS 1.0`, `TLS 1.1`, and `TLS 1.2`."},{"content":"Under each of those subkeys, you can create subkeys <ph id=\"ph1\">`Client`</ph> and/or <ph id=\"ph2\">`Server`</ph>.","pos":[20258,20335],"source":" Under each of those subkeys, you can create subkeys `Client` and/or `Server`."},{"content":"Under <ph id=\"ph1\">`Client`</ph> and <ph id=\"ph2\">`Server`</ph>, you can create DWORD values <ph id=\"ph3\">`DisabledByDefault`</ph> (0 or 1) and <ph id=\"ph4\">`Enabled`</ph> (0 or 0xFFFFFFFF).","pos":[20336,20454],"source":" Under `Client` and `Server`, you can create DWORD values `DisabledByDefault` (0 or 1) and `Enabled` (0 or 0xFFFFFFFF)."},{"pos":[20459,20534],"content":"<bpt id=\"p1\">&lt;a name=\"the-sch_use_strong_crypto-flag\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>The SCH_USE_STRONG_CRYPTO flag","linkify":"<a name=\"the-sch_use_strong_crypto-flag\"></a>The SCH_USE_STRONG_CRYPTO flag","source":"<a name=\"the-sch_use_strong_crypto-flag\"></a>The SCH_USE_STRONG_CRYPTO flag"},{"content":"When it's enabled (by default, by an <ph id=\"ph1\">`AppContext`</ph> switch, or by the Windows Registry), the .NET Framework uses the <ph id=\"ph2\">`SCH_USE_STRONG_CRYPTO`</ph> flag when your app requests a TLS security protocol.","pos":[20536,20727],"source":"When it's enabled (by default, by an `AppContext` switch, or by the Windows Registry), the .NET Framework uses the `SCH_USE_STRONG_CRYPTO` flag when your app requests a TLS security protocol."},{"content":"The <ph id=\"ph1\">`SCH_USE_STRONG_CRYPTO`</ph> flag can be enabled by default, with the <ph id=\"ph2\">`AppContext`</ph> switch, or with the Registry.","pos":[20728,20839],"source":" The `SCH_USE_STRONG_CRYPTO` flag can be enabled by default, with the `AppContext` switch, or with the Registry."},{"content":"The OS passes the flag to <ph id=\"ph1\">`Schannel`</ph>to instruct it to disable known weak cryptographic algorithms, cipher suites, and TLS/SSL protocol versions that may be otherwise enabled for better interoperability.","pos":[20840,21042],"source":" The OS passes the flag to `Schannel`to instruct it to disable known weak cryptographic algorithms, cipher suites, and TLS/SSL protocol versions that may be otherwise enabled for better interoperability."},{"content":"For more information, see:","pos":[21043,21069]},{"pos":[21073,21131],"content":"<bpt id=\"p1\">[</bpt>Secure Channel<ept id=\"p1\">](/windows/desktop/SecAuthN/secure-channel)</ept>","source":"[Secure Channel](/windows/desktop/SecAuthN/secure-channel)"},{"pos":[21134,21217],"content":"<bpt id=\"p1\">[</bpt>SCHANNEL_CRED structure<ept id=\"p1\">](/windows/desktop/api/schannel/ns-schannel-_schannel_cred)</ept>","source":"[SCHANNEL_CRED structure](/windows/desktop/api/schannel/ns-schannel-_schannel_cred)"},{"pos":[21219,21460],"content":"The <ph id=\"ph1\">`SCH_USE_STRONG_CRYPTO`</ph> flag is also passed to <ph id=\"ph2\">`Schannel`</ph> when you explicitly use the <ph id=\"ph3\">`Tls`</ph> (TLS 1.0), <ph id=\"ph4\">`Tls11`</ph>, or <ph id=\"ph5\">`Tls12`</ph> enumerated values of <ph id=\"ph6\">&lt;xref:System.Net.SecurityProtocolType&gt;</ph> or <ph id=\"ph7\">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph>.","source":"The `SCH_USE_STRONG_CRYPTO` flag is also passed to `Schannel` when you explicitly use the `Tls` (TLS 1.0), `Tls11`, or `Tls12` enumerated values of <xref:System.Net.SecurityProtocolType> or <xref:System.Security.Authentication.SslProtocols>."},{"pos":[21465,21481],"content":"Security updates","linkify":"Security updates","nodes":[{"content":"Security updates","pos":[0,16]}]},{"content":"The best practices in this article depend on recent security updates being installed.","pos":[21483,21568]},{"content":"These updates include the ability to use advanced .NET Framework 4.7 and later features.","pos":[21569,21657]},{"content":"Recent security updates are important if your app runs on .NET Framework 4.7 and later versions (even if it targets an earlier version).","pos":[21658,21794]},{"content":"To update the .NET Framework to allow the operating system to choose the best version of TLS to use, you must install at least:","pos":[21796,21923]},{"pos":[21927,22078],"content":"The <bpt id=\"p1\">[</bpt>.NET Framework August 2017 Preview of Quality Rollup<ept id=\"p1\">](https://devblogs.microsoft.com/dotnet/net-framework-august-2017-preview-of-quality-rollup/)</ept>.","source":"The [.NET Framework August 2017 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-august-2017-preview-of-quality-rollup/)."},{"pos":[22081,22249],"content":"<bpt id=\"p1\">**</bpt>Or<ept id=\"p1\">**</ept> the <bpt id=\"p2\">[</bpt>.NET Framework September 2017 Security and Quality Rollup<ept id=\"p2\">](https://devblogs.microsoft.com/dotnet/net-framework-september-2017-security-and-quality-rollup/)</ept>.","source":"**Or** the [.NET Framework September 2017 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2017-security-and-quality-rollup/)."},{"content":"See also:","pos":[22251,22260]},{"pos":[22264,22355],"content":"<bpt id=\"p1\">[</bpt>.NET Framework Versions and Dependencies<ept id=\"p1\">](../migration-guide/versions-and-dependencies.md)</ept>","source":"[.NET Framework Versions and Dependencies](../migration-guide/versions-and-dependencies.md)"},{"pos":[22358,22491],"content":"<bpt id=\"p1\">[</bpt>How to: Determine Which .NET Framework Versions Are Installed<ept id=\"p1\">](../migration-guide/how-to-determine-which-versions-are-installed.md)</ept>.","source":"[How to: Determine Which .NET Framework Versions Are Installed](../migration-guide/how-to-determine-which-versions-are-installed.md)."},{"pos":[22496,22515],"content":"Support for TLS 1.2","linkify":"Support for TLS 1.2","nodes":[{"content":"Support for TLS 1.2","pos":[0,19]}]},{"content":"For your app to negotiate TLS 1.2, the OS and the .NET Framework version both need to support TLS 1.2.","pos":[22517,22619]},{"pos":[22621,22673],"content":"<bpt id=\"p1\">**</bpt>Operating system requirements to support TLS 1.2<ept id=\"p1\">**</ept>","source":"**Operating system requirements to support TLS 1.2**"},{"pos":[22675,22860],"content":"To enable or re-enable TLS 1.2 and/or TLS 1.1 on a system that supports them, see <bpt id=\"p1\">[</bpt>Transport Layer Security (TLS) registry settings<ept id=\"p1\">](/windows-server/security/tls/tls-registry-settings)</ept>.","source":"To enable or re-enable TLS 1.2 and/or TLS 1.1 on a system that supports them, see [Transport Layer Security (TLS) registry settings](/windows-server/security/tls/tls-registry-settings)."},{"pos":[22864,22870],"content":"<bpt id=\"p1\">**</bpt>OS<ept id=\"p1\">**</ept>","source":"**OS**"},{"pos":[22873,22892],"content":"<bpt id=\"p1\">**</bpt>TLS 1.2 support<ept id=\"p1\">**</ept>","source":"**TLS 1.2 support**"},{"content":"Windows 10","pos":[22911,22921]},{"content":"Windows Server 2016","pos":[22925,22944]},{"content":"Supported, and enabled by default.","pos":[22947,22981]},{"content":"Windows 8.1","pos":[22986,22997]},{"content":"Windows Server 2012 R2","pos":[23001,23023]},{"content":"Supported, and enabled by default.","pos":[23026,23060]},{"content":"Windows 8.0","pos":[23065,23076]},{"content":"Windows Server 2012","pos":[23080,23099]},{"content":"Supported, and enabled by default.","pos":[23102,23136]},{"content":"Windows 7 SP1","pos":[23141,23154]},{"content":"Windows Server 2008 R2 SP1","pos":[23158,23184]},{"content":"Supported, but not enabled by default.","pos":[23187,23225]},{"content":"See the <bpt id=\"p1\">[</bpt>Transport Layer Security (TLS) registry settings<ept id=\"p1\">](/windows-server/security/tls/tls-registry-settings)</ept> web page for details on how to enable TLS 1.2.","pos":[23226,23383],"source":" See the [Transport Layer Security (TLS) registry settings](/windows-server/security/tls/tls-registry-settings) web page for details on how to enable TLS 1.2."},{"content":"Windows Server 2008","pos":[23388,23407]},{"content":"Support for TLS 1.2 and TLS 1.1 requires an update.","pos":[23410,23461]},{"content":"See <bpt id=\"p1\">[</bpt>Update to add support for TLS 1.1 and TLS 1.2 in Windows Server 2008 SP2<ept id=\"p1\">](https://support.microsoft.com/help/4019276/update-to-add-support-for-tls-1-1-and-tls-1-2-in-windows-server-2008-s)</ept>.","pos":[23462,23656],"source":" See [Update to add support for TLS 1.1 and TLS 1.2 in Windows Server 2008 SP2](https://support.microsoft.com/help/4019276/update-to-add-support-for-tls-1-1-and-tls-1-2-in-windows-server-2008-s)."},{"content":"Windows Vista","pos":[23661,23674]},{"content":"Not supported.","pos":[23677,23691]},{"pos":[23695,23897],"content":"For information about which TLS/SSL protocols are enabled by default on each version of Windows, see <bpt id=\"p1\">[</bpt>Protocols in TLS/SSL (Schannel SSP)<ept id=\"p1\">](/windows/desktop/SecAuthN/protocols-in-tls-ssl--schannel-ssp-)</ept>.","source":"For information about which TLS/SSL protocols are enabled by default on each version of Windows, see [Protocols in TLS/SSL (Schannel SSP)](/windows/desktop/SecAuthN/protocols-in-tls-ssl--schannel-ssp-)."},{"pos":[23899,23958],"content":"<bpt id=\"p1\">**</bpt>Requirements to support TLS 1.2 with .NET Framework 3.5<ept id=\"p1\">**</ept>","source":"**Requirements to support TLS 1.2 with .NET Framework 3.5**"},{"content":"This table shows the OS update you'll need to support TLS 1.2 with .NET Framework 3.5.","pos":[23960,24046]},{"content":"We recommend you apply all OS updates.","pos":[24047,24085]},{"pos":[24089,24095],"content":"<bpt id=\"p1\">**</bpt>OS<ept id=\"p1\">**</ept>","source":"**OS**"},{"pos":[24098,24166],"content":"<bpt id=\"p1\">**</bpt>Minimum update needed to support TLS 1.2 with .NET Framework 3.5<ept id=\"p1\">**</ept>","source":"**Minimum update needed to support TLS 1.2 with .NET Framework 3.5**"},{"content":"Windows 10","pos":[24185,24195]},{"content":"Windows Server 2016","pos":[24199,24218]},{"pos":[24221,24440],"content":"<bpt id=\"p1\">[</bpt>Cumulative Update for Windows 10 Version 1511 and Windows Server 2016 Technical Preview 4: May 10, 2016<ept id=\"p1\">](https://support.microsoft.com/help/3156421/cumulative-update-for-windows-10-version-1511-and-windows-server-2016)</ept>","source":"[Cumulative Update for Windows 10 Version 1511 and Windows Server 2016 Technical Preview 4: May 10, 2016](https://support.microsoft.com/help/3156421/cumulative-update-for-windows-10-version-1511-and-windows-server-2016)"},{"content":"Windows 8.1","pos":[24445,24456]},{"content":"Windows Server 2012 R2","pos":[24460,24482]},{"pos":[24485,24718],"content":"<bpt id=\"p1\">[</bpt>Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows 8.1 and Windows Server 2012 R2<ept id=\"p1\">](https://support.microsoft.com/help/3154520/support-for-tls-system-default-versions-included-in-the--net-framework)</ept>","source":"[Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows 8.1 and Windows Server 2012 R2](https://support.microsoft.com/help/3154520/support-for-tls-system-default-versions-included-in-the--net-framework)"},{"content":"Windows 8.0","pos":[24723,24734]},{"content":"Windows Server 2012","pos":[24738,24757]},{"pos":[24760,24974],"content":"<bpt id=\"p1\">[</bpt>Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows Server 2012<ept id=\"p1\">](https://support.microsoft.com/help/3154519/support-for-tls-system-default-versions-included-in-the--net-framework)</ept>","source":"[Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows Server 2012](https://support.microsoft.com/help/3154519/support-for-tls-system-default-versions-included-in-the--net-framework)"},{"content":"Windows 7 SP1","pos":[24979,24992]},{"content":"Windows Server 2008 R2 SP1","pos":[24996,25022]},{"pos":[25025,25258],"content":"<bpt id=\"p1\">[</bpt>Support for TLS System Default Versions included in the .NET Framework 3.5.1 on Windows 7 SP1 and Server 2008 R2 SP1<ept id=\"p1\">](https://support.microsoft.com/help/3154518/support-for-tls-system-default-versions-included-in-the--net-framework)</ept>","source":"[Support for TLS System Default Versions included in the .NET Framework 3.5.1 on Windows 7 SP1 and Server 2008 R2 SP1](https://support.microsoft.com/help/3154518/support-for-tls-system-default-versions-included-in-the--net-framework)"},{"content":"Windows Server 2008","pos":[25263,25282]},{"pos":[25285,25521],"content":"<bpt id=\"p1\">[</bpt>Support for TLS System Default Versions included in the .NET Framework 2.0 SP2 on Windows Vista SP2 and Server 2008 SP2<ept id=\"p1\">](https://support.microsoft.com/help/3154517/support-for-tls-system-default-versions-included-in-the--net-framework)</ept>","source":"[Support for TLS System Default Versions included in the .NET Framework 2.0 SP2 on Windows Vista SP2 and Server 2008 SP2](https://support.microsoft.com/help/3154517/support-for-tls-system-default-versions-included-in-the--net-framework)"},{"content":"Windows Vista","pos":[25526,25539]},{"content":"Not supported","pos":[25542,25555]},{"pos":[25562,25582],"content":"Azure Cloud Services","linkify":"Azure Cloud Services","nodes":[{"content":"Azure Cloud Services","pos":[0,20]}]},{"pos":[25584,25817],"content":"If you are using <bpt id=\"p1\">[</bpt>Azure Cloud Services<ept id=\"p1\">](https://azure.microsoft.com/services/cloud-services/)</ept> Web and Worker roles to host and run your application, there are some considerations that you need to take into account to support TLS 1.2.","source":"If you are using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application, there are some considerations that you need to take into account to support TLS 1.2."},{"pos":[25823,25887],"content":".NET Framework 4.7 is not installed on Azure Guest OS by default","linkify":".NET Framework 4.7 is not installed on Azure Guest OS by default","nodes":[{"content":".NET Framework 4.7 is not installed on Azure Guest OS by default","pos":[0,64]}]},{"content":"The latest version installed in the latest Azure Guest OS Family 5 release (Windows Server 2016) is 4.6.2.","pos":[25889,25995]},{"content":"To see which versions of .NET Framework are installed on each Azure Guest OS, see the <bpt id=\"p1\">[</bpt>Azure Guest OS releases and SDK compatibility matrix<ept id=\"p1\">](https://docs.microsoft.com/azure/cloud-services/cloud-services-guestos-update-matrix)</ept>.","pos":[25996,26223],"source":" To see which versions of .NET Framework are installed on each Azure Guest OS, see the [Azure Guest OS releases and SDK compatibility matrix](https://docs.microsoft.com/azure/cloud-services/cloud-services-guestos-update-matrix)."},{"content":"If your app targets a .NET Framework version that is not available on the Azure Guest OS version, then you need to install it yourself.","pos":[26225,26360]},{"content":"See <bpt id=\"p1\">[</bpt>Install .NET on Azure Cloud Service Roles<ept id=\"p1\">](https://docs.microsoft.com/azure/cloud-services/cloud-services-dotnet-install-dotnet)</ept>.","pos":[26361,26495],"source":" See [Install .NET on Azure Cloud Service Roles](https://docs.microsoft.com/azure/cloud-services/cloud-services-dotnet-install-dotnet)."},{"content":"If the framework installation requires a restart, the service roles might also restart before entering the Ready state.","pos":[26496,26615]},{"pos":[26621,26653],"content":"Azure Guest OS registry settings","linkify":"Azure Guest OS registry settings","nodes":[{"content":"Azure Guest OS registry settings","pos":[0,32]}]},{"content":"The Azure Guest OS Family 5 image for <bpt id=\"p1\">[</bpt>Azure Cloud Services<ept id=\"p1\">](https://azure.microsoft.com/services/cloud-services/)</ept> already has the <ph id=\"ph1\">`SchUseStrongCrypto`</ph> registry key set to a value of 1.","pos":[26655,26840],"source":"The Azure Guest OS Family 5 image for [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) already has the `SchUseStrongCrypto` registry key set to a value of 1."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>SchUseStrongCrypto<ept id=\"p1\">](#schusestrongcrypto)</ept>.","pos":[26841,26909],"source":" For more information, see [SchUseStrongCrypto](#schusestrongcrypto)."},{"content":"Set the <bpt id=\"p1\">[</bpt>SystemDefaultTlsVersions<ept id=\"p1\">](#systemdefaulttlsversions)</ept> registry key to 1.","pos":[26911,26991],"source":"Set the [SystemDefaultTlsVersions](#systemdefaulttlsversions) registry key to 1."},{"content":"See <bpt id=\"p1\">[</bpt>Configuring security via the Windows Registry<ept id=\"p1\">](#configuring-security-via-the-windows-registry)</ept>.","pos":[26992,27092],"source":" See [Configuring security via the Windows Registry](#configuring-security-via-the-windows-registry)."}]}