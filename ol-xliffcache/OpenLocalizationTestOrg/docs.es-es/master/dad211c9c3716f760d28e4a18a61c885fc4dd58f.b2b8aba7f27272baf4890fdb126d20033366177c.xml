{"content":"---\ntitle: \"How to: Find Sibling Nodes (XPath-LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 73082738-2113-4438-8545-98d5df0927cb\n---\n# How to: Find Sibling Nodes (XPath-LINQ to XML) (Visual Basic)\nYou might want to find all siblings of a node that have a specific name. The resulting collection might include the context node if the context node also has the specific name.  \n  \n The XPath expression is:  \n  \n `../Book`  \n  \n## Example  \n This example first finds a `Book` element, and then finds all sibling elements named `Book`. The resulting collection includes the context node.  \n  \n This example uses the following XML document: [Sample XML File: Books (LINQ to XML)](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-books-linq-to-xml.md).  \n  \n```vb  \nDim books As XDocument = XDocument.Load(\"Books.xml\")  \nDim book As XElement = books.Root.<Book>.Skip(1).First()  \n  \n' LINQ to XML query  \nDim list1 As IEnumerable(Of XElement) = book.Parent.<Book>  \n  \n' XPath expression  \nDim list2 As IEnumerable(Of XElement) = book.XPathSelectElements(\"../Book\")  \n  \nIf list1.Count() = list2.Count() And _  \n        list1.Intersect(list2).Count() = list1.Count() Then  \n    Console.WriteLine(\"Results are identical\")  \nElse  \n    Console.WriteLine(\"Results differ\")  \nEnd If  \nFor Each el As XElement In list1  \n    Console.WriteLine(el)  \nNext  \n```  \n  \n This example produces the following output:  \n  \n```  \nResults are identical  \n<Book id=\"bk101\">  \n  <Author>Garghentini, Davide</Author>  \n  <Title>XML Developer's Guide</Title>  \n  <Genre>Computer</Genre>  \n  <Price>44.95</Price>  \n  <PublishDate>2000-10-01</PublishDate>  \n  <Description>An in-depth look at creating applications   \n      with XML.</Description>  \n</Book>  \n<Book id=\"bk102\">  \n  <Author>Garcia, Debra</Author>  \n  <Title>Midnight Rain</Title>  \n  <Genre>Fantasy</Genre>  \n  <Price>5.95</Price>  \n  <PublishDate>2000-12-16</PublishDate>  \n  <Description>A former architect battles corporate zombies,   \n      an evil sorceress, and her own childhood to become queen   \n      of the world.</Description>  \n</Book>  \n```  \n  \n## See also\n\n- [LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)\n","nodes":[{"pos":[4,143],"embed":true,"restype":"x-metadata","content":"title: \"How to: Find Sibling Nodes (XPath-LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 73082738-2113-4438-8545-98d5df0927cb","nodes":[{"content":"How to: Find Sibling Nodes (XPath-LINQ to XML) (Visual Basic)","nodes":[{"pos":[0,61],"content":"How to: Find Sibling Nodes (XPath-LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Find Sibling Nodes (XPath-LINQ to XML) (Visual Basic)","pos":[0,61]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[150,211],"content":"How to: Find Sibling Nodes (XPath-LINQ to XML) (Visual Basic)","linkify":"How to: Find Sibling Nodes (XPath-LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Find Sibling Nodes (XPath-LINQ to XML) (Visual Basic)","pos":[0,61]}]},{"content":"You might want to find all siblings of a node that have a specific name.","pos":[212,284]},{"content":"The resulting collection might include the context node if the context node also has the specific name.","pos":[285,388]},{"content":"The XPath expression is:","pos":[395,419]},{"pos":[444,451],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example first finds a <ph id=\"ph1\">`Book`</ph> element, and then finds all sibling elements named <ph id=\"ph2\">`Book`</ph>.","pos":[455,547],"source":"This example first finds a `Book` element, and then finds all sibling elements named `Book`."},{"content":"The resulting collection includes the context node.","pos":[548,599]},{"pos":[606,786],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Books (LINQ to XML)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-books-linq-to-xml.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Books (LINQ to XML)](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-books-linq-to-xml.md)."},{"content":"This example produces the following output:","pos":[1395,1438]},{"pos":[2142,2150],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2154,2287],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML for XPath Users (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept>","source":"[LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)"}]}