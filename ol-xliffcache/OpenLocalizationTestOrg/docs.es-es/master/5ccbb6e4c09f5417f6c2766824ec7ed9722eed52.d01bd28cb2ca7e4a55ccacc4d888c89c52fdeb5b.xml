{"content":"---\ntitle: \"How to: Run an Operation in the Background\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"background tasks\"\n  - \"forms [Windows Forms], multithreading\"\n  - \"forms [Windows Forms], background operations\"\n  - \"background threads\"\n  - \"BackgroundWorker class [Windows Forms], examples\"\n  - \"threading [Windows Forms], background operations\"\n  - \"background operations\"\nms.assetid: 5b56e2aa-dc05-444f-930c-2d7b23f9ad5b\n---\n# How to: Run an Operation in the Background\nIf you have an operation that will take a long time to complete, and you do not want to cause delays in your user interface, you can use the <xref:System.ComponentModel.BackgroundWorker> class to run the operation on another thread.  \n  \n The following code example shows how to run a time-consuming operation in the background. The form has **Start** and **Cancel** buttons. Click the **Start** button to run an asynchronous operation. Click the **Cancel** button to stop a running asynchronous operation. The outcome of each operation is displayed in a <xref:System.Windows.Forms.MessageBox>.  \n  \n There is extensive support for this task in Visual Studio.  \n  \n Also see [Walkthrough: Running an Operation in the Background](walkthrough-running-an-operation-in-the-background.md).  \n  \n## Example  \n [!code-csharp[System.ComponentModel.BackgroundWorker.Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.Example/CS/Form1.cs#1)]\n [!code-vb[System.ComponentModel.BackgroundWorker.Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.Example/VB/Form1.vb#1)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Drawing and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project.  \n  \n## See also\n\n- <xref:System.ComponentModel.BackgroundWorker>\n- <xref:System.ComponentModel.DoWorkEventArgs>\n- [How to: Implement a Form That Uses a Background Operation](how-to-implement-a-form-that-uses-a-background-operation.md)\n- [BackgroundWorker Component](backgroundworker-component.md)\n","nodes":[{"pos":[4,463],"embed":true,"restype":"x-metadata","content":"title: \"How to: Run an Operation in the Background\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"background tasks\"\n  - \"forms [Windows Forms], multithreading\"\n  - \"forms [Windows Forms], background operations\"\n  - \"background threads\"\n  - \"BackgroundWorker class [Windows Forms], examples\"\n  - \"threading [Windows Forms], background operations\"\n  - \"background operations\"\nms.assetid: 5b56e2aa-dc05-444f-930c-2d7b23f9ad5b","nodes":[{"content":"How to: Run an Operation in the Background","nodes":[{"pos":[0,42],"content":"How to: Run an Operation in the Background","nodes":[{"content":"How to: Run an Operation in the Background","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[470,512],"content":"How to: Run an Operation in the Background","linkify":"How to: Run an Operation in the Background","nodes":[{"content":"How to: Run an Operation in the Background","pos":[0,42]}]},{"pos":[513,745],"content":"If you have an operation that will take a long time to complete, and you do not want to cause delays in your user interface, you can use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> class to run the operation on another thread.","source":"If you have an operation that will take a long time to complete, and you do not want to cause delays in your user interface, you can use the <xref:System.ComponentModel.BackgroundWorker> class to run the operation on another thread."},{"content":"The following code example shows how to run a time-consuming operation in the background.","pos":[752,841]},{"content":"The form has <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept> buttons.","pos":[842,888],"source":" The form has **Start** and **Cancel** buttons."},{"content":"Click the <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> button to run an asynchronous operation.","pos":[889,949],"source":" Click the **Start** button to run an asynchronous operation."},{"content":"Click the <bpt id=\"p1\">**</bpt>Cancel<ept id=\"p1\">**</ept> button to stop a running asynchronous operation.","pos":[950,1019],"source":" Click the **Cancel** button to stop a running asynchronous operation."},{"content":"The outcome of each operation is displayed in a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.","pos":[1020,1107],"source":" The outcome of each operation is displayed in a <xref:System.Windows.Forms.MessageBox>."},{"content":"There is extensive support for this task in Visual Studio.","pos":[1114,1172]},{"pos":[1179,1297],"content":"Also see <bpt id=\"p1\">[</bpt>Walkthrough: Running an Operation in the Background<ept id=\"p1\">](walkthrough-running-an-operation-in-the-background.md)</ept>.","source":"Also see [Walkthrough: Running an Operation in the Background](walkthrough-running-an-operation-in-the-background.md)."},{"pos":[1306,1313],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1675,1693],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[1697,1719]},{"content":"References to the System, System.Drawing and System.Windows.Forms assemblies.","pos":[1729,1806]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[1813,2167],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[2168,2256]},{"pos":[2265,2273],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2372,2492],"content":"<bpt id=\"p1\">[</bpt>How to: Implement a Form That Uses a Background Operation<ept id=\"p1\">](how-to-implement-a-form-that-uses-a-background-operation.md)</ept>","source":"[How to: Implement a Form That Uses a Background Operation](how-to-implement-a-form-that-uses-a-background-operation.md)"},{"pos":[2495,2554],"content":"<bpt id=\"p1\">[</bpt>BackgroundWorker Component<ept id=\"p1\">](backgroundworker-component.md)</ept>","source":"[BackgroundWorker Component](backgroundworker-component.md)"}]}