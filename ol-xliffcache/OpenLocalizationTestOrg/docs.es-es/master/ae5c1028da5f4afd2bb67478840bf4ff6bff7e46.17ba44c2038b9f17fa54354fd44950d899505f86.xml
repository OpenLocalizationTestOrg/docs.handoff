{"content":"---\ntitle: \"How to: Add to or Remove from a Collection of Controls at Run Time | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"run time, removing controls\"\n  - \"controls [Windows Forms], adding using collections\"\n  - \"controls collections\"\n  - \"collections, adding items\"\n  - \"run time, adding controls\"\n  - \"controls [Windows Forms], removing using collections\"\nms.assetid: 771bf895-3d5f-469b-a324-3528f343657e\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Add to or Remove from a Collection of Controls at Run Time\nCommon tasks in application development are adding controls to and removing controls from any container control on your forms (such as the <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox> control, or even the form itself). At design time, controls can be dragged directly onto a panel or group box. At run time, these controls maintain a `Controls` collection, which keeps track of what controls are placed on them.  \n  \n> [!NOTE]\n>  The following code example applies to any control that maintains a collection of controls within it.  \n  \n### To add a control to a collection programmatically  \n  \n1.  Create an instance of the control to be added.  \n  \n2.  Set properties of the new control.  \n  \n3.  Add the control to the `Controls` collection of the parent control.  \n  \n     The following code example shows how to create an instance of the <xref:System.Windows.Forms.Button> control. It requires a form with a <xref:System.Windows.Forms.Panel> control and that the event-handling method for the button being created, `NewPanelButton_Click`, already exists.  \n  \n    ```vb  \n    Public NewPanelButton As New Button()  \n  \n    Public Sub AddNewControl()  \n       ' The Add method will accept as a parameter any object that derives  \n       ' from the Control class. In this case, it is a Button control.  \n       Panel1.Controls.Add(NewPanelButton)  \n       ' The event handler indicated for the Click event in the code   \n       ' below is used as an example. Substite the appropriate event  \n       ' handler for your application.  \n       AddHandler NewPanelButton.Click, AddressOf NewPanelButton_Click  \n    End Sub  \n  \n    ```  \n  \n    ```csharp  \n    public Button newPanelButton = new Button();  \n  \n    public void addNewControl()  \n    {   \n       // The Add method will accept as a parameter any object that derives  \n       // from the Control class. In this case, it is a Button control.  \n       panel1.Controls.Add(newPanelButton);  \n       // The event handler indicated for the Click event in the code   \n       // below is used as an example. Substite the appropriate event  \n       // handler for your application.  \n       this.newPanelButton.Click += new System.EventHandler(this. NewPanelButton_Click);  \n    }  \n    ```  \n  \n### To remove controls from a collection programmatically  \n  \n1.  Remove the event handler from the event. In [!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)], use the [RemoveHandler Statement](~/docs/visual-basic/language-reference/statements/removehandler-statement.md) keyword; in [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)], use the [-= Operator (C# Reference)](~/docs/csharp/language-reference/operators/subtraction-assignment-operator.md).  \n  \n2.  Use the `Remove` method to delete the desired control from the panel's `Controls` collection.  \n  \n3.  Call the <xref:System.Windows.Forms.Control.Dispose%2A> method to release all the resources used by the control.  \n  \n    ```vb  \n    Public Sub RemoveControl()  \n    ' NOTE: The code below uses the instance of   \n    ' the button (NewPanelButton) from the previous example.  \n       If Panel1.Controls.Contains(NewPanelButton) Then  \n          RemoveHandler NewPanelButton.Click, AddressOf _   \n             NewPanelButton_Click  \n          Panel1.Controls.Remove(NewPanelButton)  \n          NewPanelButton.Dispose()  \n       End If  \n    End Sub  \n  \n    ```  \n  \n    ```csharp  \n    private void removeControl(object sender, System.EventArgs e)  \n    {  \n    // NOTE: The code below uses the instance of   \n    // the button (newPanelButton) from the previous example.  \n       if(panel1.Controls.Contains(newPanelButton))  \n       {  \n          this.newPanelButton.Click -= new System.EventHandler(this.   \n             NewPanelButton_Click);  \n          panel1.Controls.Remove(newPanelButton);  \n          newPanelButton.Dispose();  \n       }  \n    }  \n    ```  \n  \n## See Also  \n <xref:System.Windows.Forms.Panel>   \n [Panel Control](../../../../docs/framework/winforms/controls/panel-control-windows-forms.md)","nodes":[{"pos":[4,689],"nodes":[{"content":"How to: Add to or Remove from a Collection of Controls at Run Time | Microsoft Docs","nodes":[{"pos":[0,83],"content":"How to: Add to or Remove from a Collection of Controls at Run Time | Microsoft Docs","nodes":[{"content":"How to: Add to or Remove from a Collection of Controls at Run Time | Microsoft Docs","pos":[0,83]}]}],"pos":[6,92],"yaml":true}],"content":"title: \"How to: Add to or Remove from a Collection of Controls at Run Time | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"run time, removing controls\"\n  - \"controls [Windows Forms], adding using collections\"\n  - \"controls collections\"\n  - \"collections, adding items\"\n  - \"run time, adding controls\"\n  - \"controls [Windows Forms], removing using collections\"\nms.assetid: 771bf895-3d5f-469b-a324-3528f343657e\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","yamlblock":true},{"pos":[696,762],"content":"How to: Add to or Remove from a Collection of Controls at Run Time","linkify":"How to: Add to or Remove from a Collection of Controls at Run Time","nodes":[{"content":"How to: Add to or Remove from a Collection of Controls at Run Time","pos":[0,66]}]},{"content":"Common tasks in application development are adding controls to and removing controls from any container control on your forms (such as the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, or even the form itself).","pos":[763,1010],"source":"Common tasks in application development are adding controls to and removing controls from any container control on your forms (such as the <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox> control, or even the form itself)."},{"content":"At design time, controls can be dragged directly onto a panel or group box.","pos":[1011,1086]},{"content":"At run time, these controls maintain a <ph id=\"ph1\">`Controls`</ph> collection, which keeps track of what controls are placed on them.","pos":[1087,1203],"source":" At run time, these controls maintain a `Controls` collection, which keeps track of what controls are placed on them."},{"pos":[1211,1322],"content":"[!NOTE]\n The following code example applies to any control that maintains a collection of controls within it.","leadings":["","> "],"nodes":[{"content":"The following code example applies to any control that maintains a collection of controls within it.","pos":[9,109]}]},{"pos":[1332,1381],"content":"To add a control to a collection programmatically","linkify":"To add a control to a collection programmatically","nodes":[{"content":"To add a control to a collection programmatically","pos":[0,49]}]},{"content":"Create an instance of the control to be added.","pos":[1391,1437]},{"content":"Set properties of the new control.","pos":[1447,1481]},{"pos":[1491,1558],"content":"Add the control to the <ph id=\"ph1\">`Controls`</ph> collection of the parent control.","source":"Add the control to the `Controls` collection of the parent control."},{"content":"The following code example shows how to create an instance of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.","pos":[1569,1678],"source":"The following code example shows how to create an instance of the <xref:System.Windows.Forms.Button> control."},{"content":"It requires a form with a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control and that the event-handling method for the button being created, <ph id=\"ph2\">`NewPanelButton_Click`</ph>, already exists.","pos":[1679,1851],"source":" It requires a form with a <xref:System.Windows.Forms.Panel> control and that the event-handling method for the button being created, `NewPanelButton_Click`, already exists."},{"pos":[3045,3098],"content":"To remove controls from a collection programmatically","linkify":"To remove controls from a collection programmatically","nodes":[{"content":"To remove controls from a collection programmatically","pos":[0,53]}]},{"content":"Remove the event handler from the event.","pos":[3108,3148]},{"content":"In <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)]</ph>, use the <bpt id=\"p1\">[</bpt>RemoveHandler Statement<ept id=\"p1\">](~/docs/visual-basic/language-reference/statements/removehandler-statement.md)</ept> keyword; in <ph id=\"ph2\">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph>, use the <bpt id=\"p2\">[</bpt>-= Operator (C# Reference)<ept id=\"p2\">](~/docs/csharp/language-reference/operators/subtraction-assignment-operator.md)</ept>.","pos":[3149,3502],"source":" In [!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)], use the [RemoveHandler Statement](~/docs/visual-basic/language-reference/statements/removehandler-statement.md) keyword; in [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)], use the [-= Operator (C# Reference)](~/docs/csharp/language-reference/operators/subtraction-assignment-operator.md)."},{"pos":[3512,3605],"content":"Use the <ph id=\"ph1\">`Remove`</ph> method to delete the desired control from the panel's <ph id=\"ph2\">`Controls`</ph> collection.","source":"Use the `Remove` method to delete the desired control from the panel's `Controls` collection."},{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method to release all the resources used by the control.","pos":[3615,3727],"source":"Call the <xref:System.Windows.Forms.Control.Dispose%2A> method to release all the resources used by the control."},{"pos":[4689,4697],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Panel&gt;</ph>","pos":[4701,4734],"source":"<xref:System.Windows.Forms.Panel> "},{"content":"<bpt id=\"p1\">[</bpt>Panel Control<ept id=\"p1\">](../../../../docs/framework/winforms/controls/panel-control-windows-forms.md)</ept>","pos":[4739,4831],"source":"[Panel Control](../../../../docs/framework/winforms/controls/panel-control-windows-forms.md)"}]}