{"content":"---\ntitle: \"<transport> of <netHttpBinding>\"\nms.date: \"03/30/2017\"\nms.assetid: 3b180006-1661-43bf-a699-96fd3da469af\n---\n# \\<transport> of \\<netHttpBinding>\nDefines properties that control authentication parameters for the HTTP transport.  \n  \n\\<system.serviceModel>  \n\\<bindings>  \n\\<netHttpBinding>  \n\\<binding>  \n\\<security>  \n\\<transport>  \n  \n## Syntax  \n  \n```xml  \n<netHttpBinding>\n  <binding>\n    <security mode=\"None|Transport|Message|TransportWithMessageCredential|TransportCredentialOnly\">\n      <transport clientCredentialType=\"None|Basic|Digest|Ntlm|Windows\"\n                 proxyCredentialType=\"None|Basic|Digest|Ntlm|Windows\"\n                 realm=\"string\">\n        <extendedProtectionPolicy policyEnforcement=\"Never|WhenSupported|Always\"\n                                  protectionScenario=\"TransportSelected|TrustedProxy\">\n          <customServiceNames>\n          </customServiceNames>\n        </extendedProtectionPolicy>\n      </transport>\n    </security>\n  </binding>\n</netHttpBinding>\n```  \n  \n## Attributes and Elements  \n The following sections describe attributes, child elements, and parent elements.  \n  \n### Attributes  \n  \n|Attribute|Description|  \n|---------------|-----------------|  \n|clientCredentialType|-   Specifies the type of credential to be used when performing client authentication using HTTP authentication.  The default is `None`. This attribute is of type <xref:System.ServiceModel.HttpClientCredentialType>.|  \n|proxyCredentialType|-   Specifies the type of credential to be used when performing client authentication from within a domain using a proxy over HTTP. This attribute is applicable only when the `mode` attribute of the parent `security` element is `Transport` or `TransportCredentialsOnly`. This attribute is of type <xref:System.ServiceModel.HttpProxyCredentialType>.|  \n|realm|A string that specifies the realm that is used by the HTTP authentication scheme for digest or basic authentication. The default is an empty string.|  \n|policyEnforcement|This enumeration specifies when the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> should be enforced.<br /><br /> 1.  Never – The policy is never enforced (Extended Protection is disabled).<br />2.  WhenSupported – The policy is enforced only if the client supports Extended Protection.<br />3.  Always – The policy is always enforced. Clients which don’t support Extended Protection will fail to authenticate.|  \n|protectionScenario|This enumeration specifies the protection scenario enforced by the policy.|  \n  \n## clientCredentialType Attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|None|Messages are not secured during transfer.|  \n|Basic|Specifies basic authentication.|  \n|Digest|Specifies digest authentication.|  \n|Ntlm|Specifies NTLM authentication when possible, and if Windows authentication fails.|  \n|Windows|Specifies Windows integrated authentication.|  \n  \n## proxyCredentialType Attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|None|-   Messages are not secured during transfer.|  \n|Basic|Specifies basic authentication as defined by RFC 2617 – HTTP Authentication: Basic and Digest Authentication.|  \n|Digest|Specifies digest authentication as defined by RFC 2617 – HTTP Authentication: Basic and Digest Authentication.|  \n|Ntlm|Specifies NTLM authentication when possible, and if Windows authentication fails.|  \n|Windows|Specifies Windows integrated authentication.|  \n|Certificate|Performs client authentication using a certificate. This option works only if the `Mode` attribute of the parent `security` element is set to Transport, and will not work if it is set to TransportCredentialOnly.|  \n  \n### Child Elements  \n None  \n  \n### Parent Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|[\\<security>](../../../../../docs/framework/configure-apps/file-schema/wcf/security-of-nethttpbinding.md)|Defines the security capabilities for the [\\<netHttpBinding>](../../../../../docs/framework/configure-apps/file-schema/wcf/nethttpbinding.md).|  \n  \n## Example  \n The following example demonstrates the use of SSL transport security with the basic binding. By default, the basic binding supports HTTP communication.  \n  \n```xml  \n<system.serviceModel>\n  <services>\n    <service type=\"Microsoft.ServiceModel.Samples.CalculatorService\"\n             behaviorConfiguration=\"CalculatorServiceBehavior\">\n      <endpoint address=\"\"\n                binding=\"netHttpBinding\"\n                bindingConfiguration=\"Binding1\"\n                contract=\"Microsoft.ServiceModel.Samples.ICalculator\" />\n    </service>\n  </services>\n  <bindings>\n    <netHttpBinding>\n      <!-- Configure basicHttpBinding with Transport security -->\n      <!-- mode and clientCredentialType set to None. -->\n      <binding name=\"Binding1\">\n        <security mode=\"Transport\">\n          <transport clientCredentialType=\"None\"\n                     proxyCredentialType=\"None\">\n            <extendedProtectionPolicy policyEnforcement=\"WhenSupported\"\n                                      protectionScenario=\"TransportSelected\">\n              <customServiceNames>\n              </customServiceNames>\n            </extendedProtectionPolicy>\n          </transport>\n        </security>\n      </binding>\n    </netHttpBinding>\n  </bindings>\n</system.serviceModel>\n```  \n  \n## See also\n\n- <xref:System.ServiceModel.BasicHttpSecurityMode.Transport>\n- <xref:System.ServiceModel.Configuration.HttpTransportSecurityElement>\n- <xref:System.ServiceModel.HttpTransportSecurity>\n- [Securing Services and Clients](../../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)\n- [Bindings](../../../../../docs/framework/wcf/bindings.md)\n- [Configuring System-Provided Bindings](../../../../../docs/framework/wcf/feature-details/configuring-system-provided-bindings.md)\n- [Using Bindings to Configure Services and Clients](../../../../../docs/framework/wcf/using-bindings-to-configure-services-and-clients.md)\n- [\\<binding>](../../../../../docs/framework/misc/binding.md)\n","nodes":[{"pos":[4,115],"embed":true,"restype":"x-metadata","content":"title: \"<transport> of <netHttpBinding>\"\nms.date: \"03/30/2017\"\nms.assetid: 3b180006-1661-43bf-a699-96fd3da469af","nodes":[{"content":"<transport> of <netHttpBinding>","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;transport&gt;</ph> of <ph id=\"ph2\">&lt;netHttpBinding&gt;</ph>","source":"<transport> of <netHttpBinding>"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[122,155],"content":"\\<transport> of \\<netHttpBinding>","linkify":"\\<transport> of \\<netHttpBinding>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>transport&gt; of <ph id=\"ph2\">\\&lt;</ph>netHttpBinding&gt;","pos":[0,33],"source":"\\<transport> of \\<netHttpBinding>"}]},{"content":"Defines properties that control authentication parameters for the HTTP transport.","pos":[156,237]},{"content":"<ph id=\"ph1\">\\&lt;</ph>system.serviceModel&gt;","pos":[243,265],"source":"\\<system.serviceModel>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>bindings&gt;","pos":[268,279],"source":"\\<bindings>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>netHttpBinding&gt;","pos":[282,299],"source":"\\<netHttpBinding>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>binding&gt;","pos":[302,312],"source":"\\<binding>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>security&gt;","pos":[315,326],"source":"\\<security>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>transport&gt;","pos":[329,341],"source":"\\<transport>"},{"pos":[350,356],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1019,1042],"content":"Attributes and Elements","linkify":"Attributes and Elements","nodes":[{"content":"Attributes and Elements","pos":[0,23]}]},{"content":"The following sections describe attributes, child elements, and parent elements.","pos":[1046,1126]},{"pos":[1136,1146],"content":"Attributes","linkify":"Attributes","nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"Attribute","pos":[1153,1162]},{"content":"Description","pos":[1163,1174]},{"content":"clientCredentialType","pos":[1217,1237]},{"content":"-   Specifies the type of credential to be used when performing client authentication using HTTP authentication.","pos":[1238,1350]},{"content":"The default is <ph id=\"ph1\">`None`</ph>.","pos":[1352,1374],"source":"  The default is `None`."},{"content":"This attribute is of type <ph id=\"ph1\">&lt;xref:System.ServiceModel.HttpClientCredentialType&gt;</ph>.","pos":[1375,1453],"source":" This attribute is of type <xref:System.ServiceModel.HttpClientCredentialType>."},{"content":"proxyCredentialType","pos":[1458,1477]},{"content":"-   Specifies the type of credential to be used when performing client authentication from within a domain using a proxy over HTTP.","pos":[1478,1609]},{"content":"This attribute is applicable only when the <ph id=\"ph1\">`mode`</ph> attribute of the parent <ph id=\"ph2\">`security`</ph> element is <ph id=\"ph3\">`Transport`</ph> or <ph id=\"ph4\">`TransportCredentialsOnly`</ph>.","pos":[1610,1748],"source":" This attribute is applicable only when the `mode` attribute of the parent `security` element is `Transport` or `TransportCredentialsOnly`."},{"content":"This attribute is of type <ph id=\"ph1\">&lt;xref:System.ServiceModel.HttpProxyCredentialType&gt;</ph>.","pos":[1749,1826],"source":" This attribute is of type <xref:System.ServiceModel.HttpProxyCredentialType>."},{"content":"realm","pos":[1831,1836]},{"content":"A string that specifies the realm that is used by the HTTP authentication scheme for digest or basic authentication.","pos":[1837,1953]},{"content":"The default is an empty string.","pos":[1954,1985]},{"content":"policyEnforcement","pos":[1990,2007]},{"content":"This enumeration specifies when the <ph id=\"ph1\">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph> should be enforced.","pos":[2008,2145],"source":"This enumeration specifies when the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> should be enforced."},{"content":"1.  Never – The policy is never enforced (Extended Protection is disabled).","pos":[2158,2233]},{"content":"2.  WhenSupported – The policy is enforced only if the client supports Extended Protection.","pos":[2239,2330]},{"content":"3.  Always – The policy is always enforced.","pos":[2336,2379]},{"content":"Clients which don’t support Extended Protection will fail to authenticate.","pos":[2380,2454]},{"content":"protectionScenario","pos":[2459,2477]},{"content":"This enumeration specifies the protection scenario enforced by the policy.","pos":[2478,2552]},{"pos":[2562,2592],"content":"clientCredentialType Attribute","linkify":"clientCredentialType Attribute","nodes":[{"content":"clientCredentialType Attribute","pos":[0,30]}]},{"content":"Value","pos":[2599,2604]},{"content":"Description","pos":[2605,2616]},{"content":"None","pos":[2655,2659]},{"content":"Messages are not secured during transfer.","pos":[2660,2701]},{"content":"Basic","pos":[2706,2711]},{"content":"Specifies basic authentication.","pos":[2712,2743]},{"content":"Digest","pos":[2748,2754]},{"content":"Specifies digest authentication.","pos":[2755,2787]},{"content":"Ntlm","pos":[2792,2796]},{"content":"Specifies NTLM authentication when possible, and if Windows authentication fails.","pos":[2797,2878]},{"content":"Windows","pos":[2883,2890]},{"content":"Specifies Windows integrated authentication.","pos":[2891,2935]},{"pos":[2945,2974],"content":"proxyCredentialType Attribute","linkify":"proxyCredentialType Attribute","nodes":[{"content":"proxyCredentialType Attribute","pos":[0,29]}]},{"content":"Value","pos":[2981,2986]},{"content":"Description","pos":[2987,2998]},{"content":"None","pos":[3037,3041]},{"content":"-   Messages are not secured during transfer.","pos":[3042,3087]},{"content":"Basic","pos":[3092,3097]},{"content":"Specifies basic authentication as defined by RFC 2617 – HTTP Authentication: Basic and Digest Authentication.","pos":[3098,3207]},{"content":"Digest","pos":[3212,3218]},{"content":"Specifies digest authentication as defined by RFC 2617 – HTTP Authentication: Basic and Digest Authentication.","pos":[3219,3329]},{"content":"Ntlm","pos":[3334,3338]},{"content":"Specifies NTLM authentication when possible, and if Windows authentication fails.","pos":[3339,3420]},{"content":"Windows","pos":[3425,3432]},{"content":"Specifies Windows integrated authentication.","pos":[3433,3477]},{"content":"Certificate","pos":[3482,3493]},{"content":"Performs client authentication using a certificate.","pos":[3494,3545]},{"content":"This option works only if the <ph id=\"ph1\">`Mode`</ph> attribute of the parent <ph id=\"ph2\">`security`</ph> element is set to Transport, and will not work if it is set to TransportCredentialOnly.","pos":[3546,3705],"source":" This option works only if the `Mode` attribute of the parent `security` element is set to Transport, and will not work if it is set to TransportCredentialOnly."},{"pos":[3716,3730],"content":"Child Elements","linkify":"Child Elements","nodes":[{"content":"Child Elements","pos":[0,14]}]},{"content":"None","pos":[3734,3738]},{"pos":[3748,3763],"content":"Parent Elements","linkify":"Parent Elements","nodes":[{"content":"Parent Elements","pos":[0,15]}]},{"content":"Element","pos":[3770,3777]},{"content":"Description","pos":[3778,3789]},{"pos":[3830,3935],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>security&gt;<ept id=\"p1\">](../../../../../docs/framework/configure-apps/file-schema/wcf/security-of-nethttpbinding.md)</ept>","source":"[\\<security>](../../../../../docs/framework/configure-apps/file-schema/wcf/security-of-nethttpbinding.md)"},{"pos":[3936,4078],"content":"Defines the security capabilities for the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>netHttpBinding&gt;<ept id=\"p1\">](../../../../../docs/framework/configure-apps/file-schema/wcf/nethttpbinding.md)</ept>.","source":"Defines the security capabilities for the [\\<netHttpBinding>](../../../../../docs/framework/configure-apps/file-schema/wcf/nethttpbinding.md)."},{"pos":[4088,4095],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates the use of SSL transport security with the basic binding.","pos":[4099,4191]},{"content":"By default, the basic binding supports HTTP communication.","pos":[4192,4250]},{"pos":[5367,5375],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5563,5678],"content":"<bpt id=\"p1\">[</bpt>Securing Services and Clients<ept id=\"p1\">](../../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)</ept>","source":"[Securing Services and Clients](../../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)"},{"pos":[5681,5738],"content":"<bpt id=\"p1\">[</bpt>Bindings<ept id=\"p1\">](../../../../../docs/framework/wcf/bindings.md)</ept>","source":"[Bindings](../../../../../docs/framework/wcf/bindings.md)"},{"pos":[5741,5870],"content":"<bpt id=\"p1\">[</bpt>Configuring System-Provided Bindings<ept id=\"p1\">](../../../../../docs/framework/wcf/feature-details/configuring-system-provided-bindings.md)</ept>","source":"[Configuring System-Provided Bindings](../../../../../docs/framework/wcf/feature-details/configuring-system-provided-bindings.md)"},{"pos":[5873,6010],"content":"<bpt id=\"p1\">[</bpt>Using Bindings to Configure Services and Clients<ept id=\"p1\">](../../../../../docs/framework/wcf/using-bindings-to-configure-services-and-clients.md)</ept>","source":"[Using Bindings to Configure Services and Clients](../../../../../docs/framework/wcf/using-bindings-to-configure-services-and-clients.md)"},{"pos":[6013,6072],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>binding&gt;<ept id=\"p1\">](../../../../../docs/framework/misc/binding.md)</ept>","source":"[\\<binding>](../../../../../docs/framework/misc/binding.md)"}]}