{"content":"---\ntitle: \"ImportFileEx2 Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IALink2.ImportFileEx2\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ImportFileEx2\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ImportFileEx2 method\"\nms.assetid: 02c789fd-16fc-48c6-9619-56e87e2a37ca\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 7\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ImportFileEx2 Method\nImports assemblies and unbound modules. This method is like [ImportFile Method](../../../../docs/framework/unmanaged-api/alink/importfile-method.md), but works even if the file being imported does not exist on disk.  \n  \n## Syntax  \n  \n```  \nHRESULT ImportFileEx2(  \n    LPCWSTR pszFilename,  \n    LPCWSTR pszTargetName,  \n    IMetaDataAssemblyImport* pAssemblyScopeIn,  \n    BOOL fSmartImport,  \n    DWORD dwOpenFlags,  \n    mdToken* pImportToken,  \n    IMetaDataAssemblyImport** ppAssemblyScope,  \n    DWORD* pdwCountOfScopes  \n) PURE;  \n```  \n  \n#### Parameters  \n `pszFilename`  \n Name of file to be imported.  \n  \n `pszTargetName`  \n Optional name of target file.  \n  \n `pAssemblyScopeIn`  \n Optional import scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface.  \n  \n `fSmartImport`  \n If TRUE, ImportTypes is used, otherwise importing must be performed manually.  \n  \n `dwOpenFlags`  \n Flags to be passed along to [OpenScope Method](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md).  \n  \n `pImportToken`  \n Receives unique ID for the assembly or file.  \n  \n `ppAssemblyScope`  \n Receives assembly import scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface. Can be NULL if the file is not an assembly.  \n  \n `pdwCountOfScopes`  \n Receives the number of files and/or scopes imported.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h.  \n  \n## See Also  \n [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)   \n [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)   \n [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)","nodes":[{"pos":[12,49],"content":"ImportFileEx2 Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ImportFileEx2 Method | Microsoft Docs","pos":[0,37]}]},{"pos":[573,593],"content":"ImportFileEx2 Method","linkify":"ImportFileEx2 Method","nodes":[{"content":"ImportFileEx2 Method","pos":[0,20]}]},{"content":"Imports assemblies and unbound modules.","pos":[594,633]},{"content":"This method is like <bpt id=\"p1\">[</bpt>ImportFile Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/importfile-method.md)</ept>, but works even if the file being imported does not exist on disk.","pos":[634,809],"source":" This method is like [ImportFile Method](../../../../docs/framework/unmanaged-api/alink/importfile-method.md), but works even if the file being imported does not exist on disk."},{"pos":[818,824],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1148,1158],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Name of file to be imported.","pos":[1179,1207]},{"content":"Optional name of target file.","pos":[1233,1262]},{"content":"Optional import scope <bpt id=\"p1\">[</bpt>IMetaDataAssemblyImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)</ept> interface.","pos":[1291,1447],"source":" Optional import scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface."},{"content":"If TRUE, ImportTypes is used, otherwise importing must be performed manually.","pos":[1472,1549]},{"content":"Flags to be passed along to <bpt id=\"p1\">[</bpt>OpenScope Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md)</ept>.","pos":[1573,1710],"source":" Flags to be passed along to [OpenScope Method](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md)."},{"content":"Receives unique ID for the assembly or file.","pos":[1735,1779]},{"content":"Receives assembly import scope <bpt id=\"p1\">[</bpt>IMetaDataAssemblyImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)</ept> interface.","pos":[1807,1972],"source":" Receives assembly import scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface."},{"content":"Can be NULL if the file is not an assembly.","pos":[1973,2016]},{"content":"Receives the number of files and/or scopes imported.","pos":[2045,2097]},{"pos":[2106,2118],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[2122,2158]},{"pos":[2167,2179],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h.","pos":[2183,2200]},{"pos":[2209,2217],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2221,2310],"source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2313,2401],"source":" [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","pos":[2404,2473],"source":" [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}