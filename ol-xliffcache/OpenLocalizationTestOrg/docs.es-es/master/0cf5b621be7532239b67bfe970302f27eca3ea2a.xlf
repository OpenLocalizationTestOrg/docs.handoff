<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-convert-between-dotnet-streams-and-winrt-streams.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0cf5b621be7532239b67bfe970302f27eca3ea2a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\io\how-to-convert-between-dotnet-streams-and-winrt-streams.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c07eaebcfe41dc6b387b3f81911c74bd979f22d1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d56591da09df276cefee6ce6d8e48a5fbef3b3a0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Convert between .NET Framework and Windows Runtime streams (Windows only)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Convert between .NET Framework and Windows Runtime streams (Windows only)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The .NET Framework for UWP apps is a subset of the full .NET Framework.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because of security and other requirements for UWP apps, you can't use the full set of .NET Framework APIs to open and read files.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET for UWP apps overview<ept id="p1">](https://docs.microsoft.com/previous-versions/windows/apps/br230302(v=vs.140))</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, you may want to use .NET Framework APIs for other stream manipulation operations.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To manipulate these streams, you can convert between a .NET Framework stream type such as <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>, and a Windows Runtime stream such as <ph id="ph3">&lt;xref:Windows.Storage.Streams.IInputStream&gt;</ph>, <ph id="ph4">&lt;xref:Windows.Storage.Streams.IOutputStream&gt;</ph>, or <ph id="ph5">&lt;xref:Windows.Storage.Streams.IRandomAccessStream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions?displayProperty=nameWithType&gt;</ph> class contains methods that make these conversions easy.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, underlying differences between .NET Framework and Windows Runtime streams affect the results of using these methods, as described in the following sections:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Convert from a Windows Runtime to a .NET Framework stream</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To convert from a Windows Runtime stream to a .NET Framework stream, use one of the following <ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions?displayProperty=nameWithType&gt;</ph> methods:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStream%2A?displayProperty=nameWithType&gt;</ph> converts a random-access stream in the Windows Runtime to a managed stream in .NET for UWP apps.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A?displayProperty=nameWithType&gt;</ph> converts an output stream in the Windows Runtime to a managed stream in .NET for UWP apps.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A?displayProperty=nameWithType&gt;</ph> converts an input stream in the Windows Runtime to a managed stream in .NET for UWP apps.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Windows Runtime offers stream types that support reading only, writing only, or reading and writing.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These capabilities are maintained when you convert a Windows Runtime stream to a .NET Framework stream.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Furthermore, if you convert a Windows Runtime stream to a .NET Framework stream and back, you get the original Windows Runtime instance back.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Itâ€™s best practice to use the conversion method that matches the capabilities of the Windows Runtime stream you want to convert.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>However, since <ph id="ph1">&lt;xref:Windows.Storage.Streams.IRandomAccessStream&gt;</ph> is readable and writeable (it implements both <ph id="ph2">&lt;xref:Windows.Storage.Streams.IOutputStream&gt;</ph> and <ph id="ph3">&lt;xref:Windows.Storage.Streams.IInputStream&gt;</ph>), the conversion methods maintain the capabilities of the original stream.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, using <ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A?displayProperty=nameWithType&gt;</ph> to convert an <ph id="ph2">&lt;xref:Windows.Storage.Streams.IRandomAccessStream&gt;</ph> doesn't limit the converted .NET Framework stream to being readable.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It's also writable.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example: Convert Windows Runtime random-access to .NET Framework stream</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To convert from a Windows Runtime random-access stream to a .NET Framework stream, use the <ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following code example prompts you to select a file, opens it with Windows Runtime APIs, and then converts it to a .NET Framework stream.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It reads the stream and outputs it to a text block.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You would typically manipulate the stream with .NET Framework APIs before outputting the results.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To run this example, create a UWP XAML app that contains a text block named <ph id="ph1">`TextBlock1`</ph> and a button named  <ph id="ph2">`Button1`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Associate the button click event with the <ph id="ph1">`button1_Click`</ph> method shown in the example.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Convert from a .NET Framework to a Windows Runtime stream</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To convert from a .NET Framework stream to a Windows Runtime stream, use one of the following <ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions?displayProperty=nameWithType&gt;</ph> methods:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A?displayProperty=nameWithType&gt;</ph> converts a managed stream in .NET for UWP apps to an input stream in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A?displayProperty=nameWithType&gt;</ph> converts a managed stream in .NET for UWP apps to an output stream in the Windows Runtime.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AsRandomAccessStream<ept id="p1">](../../../docs/standard/cross-platform/windowsruntimestreamextensions-asrandomaccessstream-method.md)</ept> converts a managed stream in .NET for UWP apps to a random-access stream that the Windows Runtime can use for reading or writing.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you convert a .NET Framework stream to a Windows Runtime stream, the capabilities of the converted stream depend on the original stream.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, if the original stream supports both reading and writing, and you call <ph id="ph1">&lt;xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A?displayProperty=nameWithType&gt;</ph> to convert the stream, the returned type is an <ph id="ph2">`IRandomAccessStream`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`IRandomAccessStream`</ph> implements <ph id="ph2">`IInputStream`</ph> and <ph id="ph3">`IOutputStream`</ph>, and supports reading and writing.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>.NET Framework streams don't support cloning, even after conversion.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you convert a .NET Framework stream to a Windows Runtime stream and call <ph id="ph1">&lt;xref:Windows.Storage.Streams.InMemoryRandomAccessStream.GetInputStreamAt%2A&gt;</ph> or <ph id="ph2">&lt;xref:Windows.Storage.Streams.IRandomAccessStream.GetOutputStreamAt%2A&gt;</ph>, which call <ph id="ph3">&lt;xref:Windows.Storage.Streams.RandomAccessStreamOverStream.CloneStream%2A&gt;</ph>, or if you call <ph id="ph4">&lt;xref:Windows.Storage.Streams.RandomAccessStreamOverStream.CloneStream%2A&gt;</ph> directly, an exception occurs.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example: Convert .NET Framework to Windows Runtime random-access stream</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To convert from a .NET Framework stream to a Windows Runtime random-access stream, use the <bpt id="p1">[</bpt>AsRandomAccessStream<ept id="p1">](../../../docs/standard/cross-platform/windowsruntimestreamextensions-asrandomaccessstream-method.md)</ept> method, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Make sure that the .NET Framework stream you are using supports seeking, or copy it to a stream that does.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A?displayProperty=nameWithType&gt;</ph> property to determine this.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To run this example, create a UWP XAML app that targets the .NET Framework 4.5.1 and contains a text block named <ph id="ph1">`TextBlock2`</ph> and a button named <ph id="ph2">`Button2`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Associate the button click event with the <ph id="ph1">`button2_Click`</ph> method shown in the example.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Quickstart: Read and write a file (Windows)<ept id="p1">](https://docs.microsoft.com/previous-versions/windows/apps/hh464978(v=win.10))</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET for Windows Store apps overview<ept id="p1">](https://docs.microsoft.com/previous-versions/windows/apps/br230302(v=vs.140))</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET for Windows Store apps APIs<ept id="p1">](https://docs.microsoft.com/previous-versions/br230232(v=vs.120))</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>