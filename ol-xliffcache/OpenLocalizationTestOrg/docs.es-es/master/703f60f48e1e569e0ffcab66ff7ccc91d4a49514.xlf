<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="implicit-numeric-conversions-table.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">703f60f48e1e569e0ffcab66ff7ccc91d4a49514</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\keywords\implicit-numeric-conversions-table.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65ea028a8f1aa66aae16fa426e9cbc4ce327950d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9d5aa82ea0192f6fefa54e106471d7654f798f6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Implicit numeric conversions table - C# Reference</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implicit numeric conversions table (C# Reference)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following table shows the predefined implicit conversions between .NET numeric types.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>From</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>sbyte<ept id="p1">](sbyte.md)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`short`</ph>, <ph id="ph2">`int`</ph>, <ph id="ph3">`long`</ph>, <ph id="ph4">`float`</ph>, <ph id="ph5">`double`</ph>, or <ph id="ph6">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>byte<ept id="p1">](byte.md)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`short`</ph>, <ph id="ph2">`ushort`</ph>, <ph id="ph3">`int`</ph>, <ph id="ph4">`uint`</ph>, <ph id="ph5">`long`</ph>, <ph id="ph6">`ulong`</ph>, <ph id="ph7">`float`</ph>, <ph id="ph8">`double`</ph>, or <ph id="ph9">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>char<ept id="p1">](char.md)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ushort`</ph>, <ph id="ph2">`int`</ph>, <ph id="ph3">`uint`</ph>, <ph id="ph4">`long`</ph>, <ph id="ph5">`ulong`</ph>, <ph id="ph6">`float`</ph>, <ph id="ph7">`double`</ph>, or <ph id="ph8">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>short<ept id="p1">](short.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`int`</ph>, <ph id="ph2">`long`</ph>, <ph id="ph3">`float`</ph>, <ph id="ph4">`double`</ph>, or <ph id="ph5">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ushort<ept id="p1">](ushort.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`int`</ph>, <ph id="ph2">`uint`</ph>, <ph id="ph3">`long`</ph>, <ph id="ph4">`ulong`</ph>, <ph id="ph5">`float`</ph>, <ph id="ph6">`double`</ph>, or <ph id="ph7">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>int<ept id="p1">](int.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`long`</ph>, <ph id="ph2">`float`</ph>, <ph id="ph3">`double`</ph>, or <ph id="ph4">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>uint<ept id="p1">](uint.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`long`</ph>, <ph id="ph2">`ulong`</ph>, <ph id="ph3">`float`</ph>, <ph id="ph4">`double`</ph>, or <ph id="ph5">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>long<ept id="p1">](long.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`float`</ph>, <ph id="ph2">`double`</ph>, or <ph id="ph3">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ulong<ept id="p1">](ulong.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`float`</ph>, <ph id="ph2">`double`</ph>, or <ph id="ph3">`decimal`</ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>float<ept id="p1">](float.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Any <bpt id="p1">[</bpt>integral type<ept id="p1">](integral-types-table.md)</ept> is implicitly convertible to any <bpt id="p2">[</bpt>floating-point type<ept id="p2">](floating-point-types-table.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Precision but not magnitude might be lost in the conversions from <ph id="ph1">`int`</ph>, <ph id="ph2">`uint`</ph>, <ph id="ph3">`long`</ph>, or <ph id="ph4">`ulong`</ph> to <ph id="ph5">`float`</ph> and from <ph id="ph6">`long`</ph> or <ph id="ph7">`ulong`</ph> to <ph id="ph8">`double`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>There are no implicit conversions to the <ph id="ph1">`char`</ph>, <ph id="ph2">`byte`</ph>, and <ph id="ph3">`sbyte`</ph> types.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>There are no implicit conversions from the <ph id="ph1">`double`</ph> and <ph id="ph2">`decimal`</ph> types.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>There are no implicit conversions between the <ph id="ph1">`decimal`</ph> type and the <ph id="ph2">`float`</ph> or <ph id="ph3">`double`</ph> types.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A value of a constant expression of type <ph id="ph1">`int`</ph> (for example, a value represented by an integral literal) can be converted to <ph id="ph2">`sbyte`</ph>, <ph id="ph3">`byte`</ph>, <ph id="ph4">`short`</ph>, <ph id="ph5">`ushort`</ph>, <ph id="ph6">`uint`</ph>, or <ph id="ph7">`ulong`</ph>, provided it's within the range of the destination type:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information about implicit conversions, see the <bpt id="p1">[</bpt>Implicit conversions<ept id="p1">](~/_csharplang/spec/conversions.md#implicit-conversions)</ept> section of the <bpt id="p2">[</bpt>C# language specification<ept id="p2">](../language-specification/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../index.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../programming-guide/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Integral types table<ept id="p1">](integral-types-table.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Floating-point types table<ept id="p1">](floating-point-types-table.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Built-in types table<ept id="p1">](built-in-types-table.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Explicit numeric conversions table<ept id="p1">](explicit-numeric-conversions-table.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Casting and type conversions<ept id="p1">](../../programming-guide/types/casting-and-type-conversions.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>