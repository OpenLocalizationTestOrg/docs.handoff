{"content":"---\ntitle: \"typeof (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"typeof\"\n  - \"typeof_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"typeof keyword [C#]\"\nms.assetid: 0c08d880-515e-46bb-8cd2-48b8dd62c08d\ncaps.latest.revision: 21\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# typeof (C# Reference)\nUsed to obtain the `System.Type` object for a type. A `typeof` expression takes the following form:  \n  \n```  \nSystem.Type type = typeof(int);  \n```  \n  \n## Remarks  \n To obtain the run-time type of an expression, you can use the .NET Framework method <xref:System.Object.GetType%2A>, as in the following example:  \n  \n```  \nint i = 0;  \nSystem.Type type = i.GetType();  \n```  \n  \n The `typeof` operator cannot be overloaded.  \n  \n The `typeof` operator can also be used on open generic types. Types with more than one type parameter must have the appropriate number of commas in the specification. The following example shows how to determine whether the return type of a method is a generic <xref:System.Collections.Generic.IEnumerable%601>. Assume that method is an instance of a MethodInfo type:  \n  \n```  \nstring s = method.ReturnType.GetInterface  \n    (typeof(System.Collections.Generic.IEnumerable<>).FullName);  \n```  \n  \n## Example  \n [!code-cs[csrefKeywordsOperator#12](../../../csharp/language-reference/keywords/codesnippet/CSharp/typeof_1.cs)]  \n  \n## Example  \n This sample uses the <xref:System.Object.GetType%2A> method to determine the type that is used to contain the result of a numeric calculation. This depends on the storage requirements of the resulting number.  \n  \n [!code-cs[csrefKeywordsOperator#13](../../../csharp/language-reference/keywords/codesnippet/CSharp/typeof_2.cs)]  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](../../../csharp/language-reference/keywords/includes/csharplangspec_md.md)]  \n  \n## See Also  \n <xref:System.Type?displayProperty=fullName>   \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Keywords](../../../csharp/language-reference/keywords/index.md)   \n [is](../../../csharp/language-reference/keywords/is.md)   \n [Operator Keywords](../../../csharp/language-reference/keywords/operator-keywords.md)","nodes":[{"pos":[4,568],"nodes":[{"content":"typeof (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,38],"content":"typeof (C# Reference) | Microsoft Docs","nodes":[{"content":"typeof (C# Reference) | Microsoft Docs","pos":[0,38]}]}],"pos":[6,47],"yaml":true}],"content":"title: \"typeof (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"typeof\"\n  - \"typeof_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"typeof keyword [C#]\"\nms.assetid: 0c08d880-515e-46bb-8cd2-48b8dd62c08d\ncaps.latest.revision: 21\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[575,596],"content":"typeof (C# Reference)","linkify":"typeof (C# Reference)","nodes":[{"content":"typeof (C# Reference)","pos":[0,21]}]},{"content":"Used to obtain the <ph id=\"ph1\">`System.Type`</ph> object for a type.","pos":[597,648],"source":"Used to obtain the `System.Type` object for a type."},{"content":"A <ph id=\"ph1\">`typeof`</ph> expression takes the following form:","pos":[649,696],"source":" A `typeof` expression takes the following form:"},{"pos":[754,761],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"To obtain the run-time type of an expression, you can use the .NET Framework method <ph id=\"ph1\">&lt;xref:System.Object.GetType%2A&gt;</ph>, as in the following example:","pos":[765,910],"source":"To obtain the run-time type of an expression, you can use the .NET Framework method <xref:System.Object.GetType%2A>, as in the following example:"},{"pos":[979,1022],"content":"The <ph id=\"ph1\">`typeof`</ph> operator cannot be overloaded.","source":"The `typeof` operator cannot be overloaded."},{"content":"The <ph id=\"ph1\">`typeof`</ph> operator can also be used on open generic types.","pos":[1029,1090],"source":"The `typeof` operator can also be used on open generic types."},{"content":"Types with more than one type parameter must have the appropriate number of commas in the specification.","pos":[1091,1195]},{"content":"The following example shows how to determine whether the return type of a method is a generic <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.","pos":[1196,1340],"source":" The following example shows how to determine whether the return type of a method is a generic <xref:System.Collections.Generic.IEnumerable%601>."},{"content":"Assume that method is an instance of a MethodInfo type:","pos":[1341,1396]},{"pos":[1531,1538],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1542,1654],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csrefKeywordsOperator#12<ept id=\"p2\">](../../../csharp/language-reference/keywords/codesnippet/CSharp/typeof_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csrefKeywordsOperator#12](../../../csharp/language-reference/keywords/codesnippet/CSharp/typeof_1.cs)]"},{"pos":[1663,1670],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This sample uses the <ph id=\"ph1\">&lt;xref:System.Object.GetType%2A&gt;</ph> method to determine the type that is used to contain the result of a numeric calculation.","pos":[1674,1816],"source":"This sample uses the <xref:System.Object.GetType%2A> method to determine the type that is used to contain the result of a numeric calculation."},{"content":"This depends on the storage requirements of the resulting number.","pos":[1817,1882]},{"pos":[1889,2001],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csrefKeywordsOperator#13<ept id=\"p2\">](../../../csharp/language-reference/keywords/codesnippet/CSharp/typeof_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csrefKeywordsOperator#13](../../../csharp/language-reference/keywords/codesnippet/CSharp/typeof_2.cs)]"},{"pos":[2010,2035],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[2149,2157],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Type?displayProperty=fullName&gt;</ph>","pos":[2161,2204],"source":"<xref:System.Type?displayProperty=fullName> "},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2209,2269],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2273,2340],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2344,2412],"source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>is<ept id=\"p1\">](../../../csharp/language-reference/keywords/is.md)</ept><ph id=\"ph1\"> </ph>","pos":[2416,2472],"source":"[is](../../../csharp/language-reference/keywords/is.md) "},{"content":"<bpt id=\"p1\">[</bpt>Operator Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/operator-keywords.md)</ept>","pos":[2476,2561],"source":"[Operator Keywords](../../../csharp/language-reference/keywords/operator-keywords.md)"}]}