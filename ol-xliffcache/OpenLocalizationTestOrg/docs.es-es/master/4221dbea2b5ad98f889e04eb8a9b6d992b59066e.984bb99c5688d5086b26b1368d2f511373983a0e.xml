{"content":"---\ntitle: BeginEnumeration function (Unmanaged API Reference)\ndescription: The BeginEnumeration function resets an enumerator to the beginning of the enumeration\nms.date: \"11/06/2017\"\napi_name: \n  - \"BeginEnumeration\"\napi_location: \n  - \"WMINet_Utils.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"BeginEnumeration\"\nhelpviewer_keywords: \n  - \"BeginEnumeration function [.NET WMI and performance counters]\"\ntopic_type: \n  - \"Reference\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# BeginEnumeration function\nResets an enumerator back to the beginning of the enumeration.  \n\n[!INCLUDE[internalonly-unmanaged](../../../../includes/internalonly-unmanaged.md)]\n  \n## Syntax  \n  \n```  \nHRESULT BeginEnumeration (\n   [in] int               vFunc, \n   [in] IWbemClassObject* ptr, \n   [in] LONG              lEnumFlags\n); \n```  \n\n## Parameters\n\n`vFunc`\\\n[in] This parameter is unused.\n\n`ptr`\\\n[in] A pointer to an [IWbemClassObject](/windows/desktop/api/wbemcli/nn-wbemcli-iwbemclassobject) instance.\n\n`lEnumFlags`\\\n[in] A bitwise combination of the flags or values described in the [Remarks](#remarks) section that controls the properties included in the enumeration.\n\n## Return value\n\nThe following values returned by this function are defined in the *WbemCli.h* header file, or you can define them as constants in your code:\n\n|Constant  |Value  |Description  |\n|---------|---------|---------|\n|`WBEM_E_INVALID_PARAMETER` | 0x80041008 | The combination of flags in `lEnumFlags` is invalid, or an invalid argument was specified. |\n|`WBEM_E_UNEXPECTED` | 0x8004101d | A second call to `BeginEnumeration` was made without an intervening call to [`EndEnumeration`](endenumeration.md). |\n|`WBEM_E_OUT_OF_MEMORY` | 0x80041006 | Not enough memory is available to begin a new enumeration. |\n|`WBEM_S_NO_ERROR` | 0 | The function call was successful.  |\n  \n## Remarks\n\nThis function wraps a call to the [IWbemClassObject::BeginEnumeration](/windows/desktop/api/wbemcli/nn-wbemcli-iwbemclassobject) method.\n\nThe flags that can be passed as the `lEnumFlags` argument are defined in the *WbemCli.h* header file, or you can define them as constants in your code.  You can combine one flag from each group with any flag from any other group. However, flags from the same group are mutually exclusive. \n\n**Group 1**\n\n|Constant  |Value  |Description  |\n|---------|---------|---------|\n|`WBEM_FLAG_KEYS_ONLY` | 0x4 | Include properties that constitute the key only. |\n|`WBEM_FLAG_REFS_ONLY` | 0x8 | Include properties that are object references only. |\n\n**Group 2**\n\nConstant  |Value  |Description  |\n|---------|---------|---------|\n|`WBEM_FLAG_SYSTEM_ONLY` | 0x30 | Limit the enumeration to system properties only. |\n|`WBEM_FLAG_NONSYSTEM_ONLY` | 0x40 | Include local and propagated properties but exclude system properties from the enumeration. |\n\nFor classes:\n\nConstant  |Value  |Description  |\n|---------|---------|---------|\n|`WBEM_FLAG_CLASS_OVERRIDES_ONLY` | 0x100 | Limit the enumeration to properties overridden in the class definition. |\n|`WBEM_FLAG_CLASS_LOCAL_AND_OVERRIDES` | 0x100 | Limit the enumeration to properties overridden in the current class definition and to new properties defined in the class. |\n| `WBEM_MASK_CLASS_CONDITION` | 0x300 | A mask (rather than a flag) to apply against a `lEnumFlags` value to check if either `WBEM_FLAG_CLASS_OVERRIDES_ONLY` or `WBEM_FLAG_CLASS_LOCAL_AND_OVERRIDES` is set. |\n| `WBEM_FLAG_LOCAL_ONLY` | 0x10 | Limit the enumeration to properties that are defined or modified in the class itself. |\n| `WBEM_FLAG_PROPAGATED_ONLY` |  0x20 | Limit the enumeration to properties that are inherited from base classes. |\n\nFor instances:\n\nConstant  |Value  |Description  |\n|---------|---------|---------|\n| `WBEM_FLAG_LOCAL_ONLY` | 0x10 | Limit the enumeration to properties that are defined or modified in the class itself. |\n| `WBEM_FLAG_PROPAGATED_ONLY` |  0x20 | Limit the enumeration to properties that are inherited from base classes. |\n\n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** WMINet_Utils.idl  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v472plus](../../../../includes/net-current-v472plus.md)]  \n  \n## See also\n\n- [WMI and Performance Counters (Unmanaged API Reference)](index.md)","nodes":[{"pos":[4,479],"embed":true,"restype":"x-metadata","content":"title: BeginEnumeration function (Unmanaged API Reference)\ndescription: The BeginEnumeration function resets an enumerator to the beginning of the enumeration\nms.date: \"11/06/2017\"\napi_name: \n  - \"BeginEnumeration\"\napi_location: \n  - \"WMINet_Utils.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"BeginEnumeration\"\nhelpviewer_keywords: \n  - \"BeginEnumeration function [.NET WMI and performance counters]\"\ntopic_type: \n  - \"Reference\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"BeginEnumeration function (Unmanaged API Reference)","nodes":[{"pos":[0,51],"content":"BeginEnumeration function (Unmanaged API Reference)","nodes":[{"content":"BeginEnumeration function (Unmanaged API Reference)","pos":[0,51]}]}],"path":["title"],"nosxs":false},{"content":"The BeginEnumeration function resets an enumerator to the beginning of the enumeration","nodes":[{"pos":[0,86],"content":"The BeginEnumeration function resets an enumerator to the beginning of the enumeration","nodes":[{"content":"The BeginEnumeration function resets an enumerator to the beginning of the enumeration","pos":[0,86]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[486,511],"content":"BeginEnumeration function","linkify":"BeginEnumeration function","nodes":[{"content":"BeginEnumeration function","pos":[0,25]}]},{"content":"Resets an enumerator back to the beginning of the enumeration.","pos":[512,574]},{"pos":[667,673],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[829,839],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] This parameter is unused.","pos":[850,880]},{"content":"[in] A pointer to an <bpt id=\"p1\">[</bpt>IWbemClassObject<ept id=\"p1\">](/windows/desktop/api/wbemcli/nn-wbemcli-iwbemclassobject)</ept> instance.","pos":[889,996],"source":"[in] A pointer to an [IWbemClassObject](/windows/desktop/api/wbemcli/nn-wbemcli-iwbemclassobject) instance."},{"content":"[in] A bitwise combination of the flags or values described in the <bpt id=\"p1\">[</bpt>Remarks<ept id=\"p1\">](#remarks)</ept> section that controls the properties included in the enumeration.","pos":[1012,1164],"source":"[in] A bitwise combination of the flags or values described in the [Remarks](#remarks) section that controls the properties included in the enumeration."},{"pos":[1169,1181],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1183,1323],"content":"The following values returned by this function are defined in the <bpt id=\"p1\">*</bpt>WbemCli.h<ept id=\"p1\">*</ept> header file, or you can define them as constants in your code:","source":"The following values returned by this function are defined in the *WbemCli.h* header file, or you can define them as constants in your code:"},{"content":"Constant","pos":[1326,1334]},{"content":"Value","pos":[1337,1342]},{"content":"Description","pos":[1345,1356]},{"content":"0x80041008","pos":[1422,1432]},{"pos":[1435,1525],"content":"The combination of flags in <ph id=\"ph1\">`lEnumFlags`</ph> is invalid, or an invalid argument was specified.","source":"The combination of flags in `lEnumFlags` is invalid, or an invalid argument was specified."},{"content":"0x8004101d","pos":[1551,1561]},{"pos":[1564,1678],"content":"A second call to <ph id=\"ph1\">`BeginEnumeration`</ph> was made without an intervening call to <bpt id=\"p1\">[</bpt><ph id=\"ph2\">`EndEnumeration`</ph><ept id=\"p1\">](endenumeration.md)</ept>.","source":"A second call to `BeginEnumeration` was made without an intervening call to [`EndEnumeration`](endenumeration.md)."},{"content":"0x80041006","pos":[1707,1717]},{"content":"Not enough memory is available to begin a new enumeration.","pos":[1720,1778]},{"content":"0","pos":[1802,1803]},{"content":"The function call was successful.","pos":[1806,1839]},{"pos":[1849,1856],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1858,1994],"content":"This function wraps a call to the <bpt id=\"p1\">[</bpt>IWbemClassObject::BeginEnumeration<ept id=\"p1\">](/windows/desktop/api/wbemcli/nn-wbemcli-iwbemclassobject)</ept> method.","source":"This function wraps a call to the [IWbemClassObject::BeginEnumeration](/windows/desktop/api/wbemcli/nn-wbemcli-iwbemclassobject) method."},{"content":"The flags that can be passed as the <ph id=\"ph1\">`lEnumFlags`</ph> argument are defined in the <bpt id=\"p1\">*</bpt>WbemCli.h<ept id=\"p1\">*</ept> header file, or you can define them as constants in your code.","pos":[1996,2147],"source":"The flags that can be passed as the `lEnumFlags` argument are defined in the *WbemCli.h* header file, or you can define them as constants in your code."},{"content":"You can combine one flag from each group with any flag from any other group.","pos":[2149,2225]},{"content":"However, flags from the same group are mutually exclusive.","pos":[2226,2284]},{"pos":[2287,2298],"content":"<bpt id=\"p1\">**</bpt>Group 1<ept id=\"p1\">**</ept>","source":"**Group 1**"},{"content":"Constant","pos":[2301,2309]},{"content":"Value","pos":[2312,2317]},{"content":"Description","pos":[2320,2331]},{"content":"0x4","pos":[2392,2395]},{"content":"Include properties that constitute the key only.","pos":[2398,2446]},{"content":"0x8","pos":[2474,2477]},{"content":"Include properties that are object references only.","pos":[2480,2531]},{"pos":[2535,2546],"content":"<bpt id=\"p1\">**</bpt>Group 2<ept id=\"p1\">**</ept>","source":"**Group 2**"},{"content":"Constant","pos":[2548,2556]},{"content":"Value","pos":[2559,2564]},{"content":"Description","pos":[2567,2578]},{"content":"0x30","pos":[2641,2645]},{"content":"Limit the enumeration to system properties only.","pos":[2648,2696]},{"content":"0x40","pos":[2729,2733]},{"content":"Include local and propagated properties but exclude system properties from the enumeration.","pos":[2736,2827]},{"content":"For classes:","pos":[2831,2843]},{"content":"Constant","pos":[2845,2853]},{"content":"Value","pos":[2856,2861]},{"content":"Description","pos":[2864,2875]},{"content":"0x100","pos":[2947,2952]},{"content":"Limit the enumeration to properties overridden in the class definition.","pos":[2955,3026]},{"content":"0x100","pos":[3070,3075]},{"content":"Limit the enumeration to properties overridden in the current class definition and to new properties defined in the class.","pos":[3078,3200]},{"content":"0x300","pos":[3235,3240]},{"pos":[3243,3409],"content":"A mask (rather than a flag) to apply against a <ph id=\"ph1\">`lEnumFlags`</ph> value to check if either <ph id=\"ph2\">`WBEM_FLAG_CLASS_OVERRIDES_ONLY`</ph> or <ph id=\"ph3\">`WBEM_FLAG_CLASS_LOCAL_AND_OVERRIDES`</ph> is set.","source":"A mask (rather than a flag) to apply against a `lEnumFlags` value to check if either `WBEM_FLAG_CLASS_OVERRIDES_ONLY` or `WBEM_FLAG_CLASS_LOCAL_AND_OVERRIDES` is set."},{"content":"0x10","pos":[3439,3443]},{"content":"Limit the enumeration to properties that are defined or modified in the class itself.","pos":[3446,3531]},{"content":"0x20","pos":[3567,3571]},{"content":"Limit the enumeration to properties that are inherited from base classes.","pos":[3574,3647]},{"content":"For instances:","pos":[3651,3665]},{"content":"Constant","pos":[3667,3675]},{"content":"Value","pos":[3678,3683]},{"content":"Description","pos":[3686,3697]},{"content":"0x10","pos":[3760,3764]},{"content":"Limit the enumeration to properties that are defined or modified in the class itself.","pos":[3767,3852]},{"content":"0x20","pos":[3888,3892]},{"content":"Limit the enumeration to properties that are inherited from base classes.","pos":[3895,3968]},{"pos":[3975,3987],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3991,4095],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[4102,4130],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> WMINet_Utils.idl","source":"**Header:** WMINet_Utils.idl"},{"pos":[4137,4244],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v472plus](../../../../includes/net-current-v472plus.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v472plus](../../../../includes/net-current-v472plus.md)]"},{"pos":[4253,4261],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4265,4331],"content":"<bpt id=\"p1\">[</bpt>WMI and Performance Counters (Unmanaged API Reference)<ept id=\"p1\">](index.md)</ept>","source":"[WMI and Performance Counters (Unmanaged API Reference)](index.md)"}]}