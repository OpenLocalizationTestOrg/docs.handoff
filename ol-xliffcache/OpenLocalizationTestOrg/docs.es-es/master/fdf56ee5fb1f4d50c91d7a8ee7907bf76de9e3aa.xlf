<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fdf56ee5fb1f4d50c91d7a8ee7907bf76de9e3aa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\asynchronous-programming-patterns\toc.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">p1-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c0d662a3cd39e8021563bc1efa257193c82dbf0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f951095e16098d181664f4f81c90ecb5d1b2b93</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Asynchronous Programming Patterns<ept id="p1">](index.md)</ept></source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Task-based Asynchronous Pattern (TAP)<ept id="p1">](task-based-asynchronous-pattern-tap.md)</ept></source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implementing the Task-based Asynchronous Pattern<ept id="p1">](implementing-the-task-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Consuming the Task-based Asynchronous Pattern<ept id="p1">](consuming-the-task-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interop with Other Asynchronous Patterns and Types<ept id="p1">](interop-with-other-asynchronous-patterns-and-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Event-based Asynchronous Pattern (EAP)<ept id="p1">](event-based-asynchronous-pattern-eap.md)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Multithreaded Programming with the Event-based Asynchronous Pattern<ept id="p1">](multithreaded-programming-with-the-event-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](event-based-asynchronous-pattern-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implementing the Event-based Asynchronous Pattern<ept id="p1">](implementing-the-event-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Best Practices for Implementing the Event-based Asynchronous Pattern<ept id="p1">](best-practices-for-implementing-the-event-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Deciding When to Implement the Event-based Asynchronous Pattern<ept id="p1">](deciding-when-to-implement-the-event-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Implementing a Component That Supports the Event-based Asynchronous Pattern<ept id="p1">](component-that-supports-the-event-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Implement a Component That Supports the Event-based Asynchronous Pattern<ept id="p1">](component-that-supports-the-event-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Implement a Client of the Event-based Asynchronous Pattern<ept id="p1">](how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Use Components That Support the Event-based Asynchronous Pattern<ept id="p1">](how-to-use-components-that-support-the-event-based-asynchronous-pattern.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Asynchronous Programming Model (APM)<ept id="p1">](asynchronous-programming-model-apm.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Calling Asynchronous Methods Using IAsyncResult<ept id="p1">](calling-asynchronous-methods-using-iasyncresult.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Blocking Application Execution Using an AsyncWaitHandle<ept id="p1">](blocking-application-execution-using-an-asyncwaithandle.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Blocking Application Execution by Ending an Async Operation<ept id="p1">](blocking-application-execution-by-ending-an-async-operation.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Polling for the Status of an Asynchronous Operation<ept id="p1">](polling-for-the-status-of-an-asynchronous-operation.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using an AsyncCallback Delegate to End an Asynchronous Operation<ept id="p1">](using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using an AsyncCallback Delegate and State Object<ept id="p1">](using-an-asynccallback-delegate-and-state-object.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Asynchronous Programming Using Delegates<ept id="p1">](asynchronous-programming-using-delegates.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](calling-synchronous-methods-asynchronously.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>