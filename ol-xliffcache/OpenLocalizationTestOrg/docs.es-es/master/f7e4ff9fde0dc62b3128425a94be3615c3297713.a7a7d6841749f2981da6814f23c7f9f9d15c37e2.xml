{"content":"---\ntitle: \"Using an AsyncCallback Delegate and State Object | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"asynchronous programming, delegates\"\n  - \"AsyncCallback delegate, samples\"\n  - \"asynchronous programming, state objects\"\n  - \"IAsyncResult interface, samples\"\nms.assetid: e3e5475d-c5e9-43f0-928e-d18df8ca1f1d\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# Using an AsyncCallback Delegate and State Object\nWhen you use an <xref:System.AsyncCallback> delegate to process the results of the asynchronous operation in a separate thread, you can use a state object to pass information between the callbacks and to retrieve a final result. This topic demonstrates that practice by expanding the example in [Using an AsyncCallback Delegate to End an Asynchronous Operation](../../../docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md).  \n  \n## Example  \n The following code example demonstrates using asynchronous methods in the <xref:System.Net.Dns> class to retrieve Domain Name System (DNS) information for user-specified computers. This example defines and uses the `HostRequest` class to store state information. A `HostRequest` object gets created for each computer name entered by the user. This object is passed to the <xref:System.Net.Dns.BeginGetHostByName%2A> method. The `ProcessDnsInformation` method is called each time a request completes. The `HostRequest` object is retrieved using the <xref:System.IAsyncResult.AsyncState%2A> property. The `ProcessDnsInformation` method uses the `HostRequest` object to store the <xref:System.Net.IPHostEntry> returned by the request or a <xref:System.Net.Sockets.SocketException> thrown by the request. When all requests are complete, the application iterates over the `HostRequest` objects and displays the DNS information or <xref:System.Net.Sockets.SocketException> error message.  \n  \n [!code-csharp[AsyncDesignPattern#5](../../../samples/snippets/csharp/VS_Snippets_CLR/AsyncDesignPattern/CS/AsyncDelegateWithStateObject.cs#5)]\n [!code-vb[AsyncDesignPattern#5](../../../samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDesignPattern/VB/AsyncDelegateWithStateObject.vb#5)]  \n  \n## See Also  \n [Event-based Asynchronous Pattern (EAP)](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)   \n [Event-based Asynchronous Pattern Overview](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)   \n [Using an AsyncCallback Delegate to End an Asynchronous Operation](../../../docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md)","nodes":[{"pos":[4,548],"embed":true,"restype":"x-metadata","content":"title: \"Using an AsyncCallback Delegate and State Object | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"asynchronous programming, delegates\"\n  - \"AsyncCallback delegate, samples\"\n  - \"asynchronous programming, state objects\"\n  - \"IAsyncResult interface, samples\"\nms.assetid: e3e5475d-c5e9-43f0-928e-d18df8ca1f1d\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"Using an AsyncCallback Delegate and State Object | Microsoft Docs","nodes":[{"pos":[0,65],"content":"Using an AsyncCallback Delegate and State Object | Microsoft Docs","nodes":[{"content":"Using an AsyncCallback Delegate and State Object | Microsoft Docs","pos":[0,65]}]}],"path":["title"]}],"yml":true},{"pos":[555,603],"content":"Using an AsyncCallback Delegate and State Object","linkify":"Using an AsyncCallback Delegate and State Object","nodes":[{"content":"Using an AsyncCallback Delegate and State Object","pos":[0,48]}]},{"content":"When you use an <ph id=\"ph1\">&lt;xref:System.AsyncCallback&gt;</ph> delegate to process the results of the asynchronous operation in a separate thread, you can use a state object to pass information between the callbacks and to retrieve a final result.","pos":[604,832],"source":"When you use an <xref:System.AsyncCallback> delegate to process the results of the asynchronous operation in a separate thread, you can use a state object to pass information between the callbacks and to retrieve a final result."},{"content":"This topic demonstrates that practice by expanding the example in <bpt id=\"p1\">[</bpt>Using an AsyncCallback Delegate to End an Asynchronous Operation<ept id=\"p1\">](../../../docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md)</ept>.","pos":[833,1092],"source":" This topic demonstrates that practice by expanding the example in [Using an AsyncCallback Delegate to End an Asynchronous Operation](../../../docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md)."},{"pos":[1101,1108],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates using asynchronous methods in the <ph id=\"ph1\">&lt;xref:System.Net.Dns&gt;</ph> class to retrieve Domain Name System (DNS) information for user-specified computers.","pos":[1112,1292],"source":"The following code example demonstrates using asynchronous methods in the <xref:System.Net.Dns> class to retrieve Domain Name System (DNS) information for user-specified computers."},{"content":"This example defines and uses the <ph id=\"ph1\">`HostRequest`</ph> class to store state information.","pos":[1293,1374],"source":" This example defines and uses the `HostRequest` class to store state information."},{"content":"A <ph id=\"ph1\">`HostRequest`</ph> object gets created for each computer name entered by the user.","pos":[1375,1454],"source":" A `HostRequest` object gets created for each computer name entered by the user."},{"content":"This object is passed to the <ph id=\"ph1\">&lt;xref:System.Net.Dns.BeginGetHostByName%2A&gt;</ph> method.","pos":[1455,1535],"source":" This object is passed to the <xref:System.Net.Dns.BeginGetHostByName%2A> method."},{"content":"The <ph id=\"ph1\">`ProcessDnsInformation`</ph> method is called each time a request completes.","pos":[1536,1611],"source":" The `ProcessDnsInformation` method is called each time a request completes."},{"content":"The <ph id=\"ph1\">`HostRequest`</ph> object is retrieved using the <ph id=\"ph2\">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.","pos":[1612,1710],"source":" The `HostRequest` object is retrieved using the <xref:System.IAsyncResult.AsyncState%2A> property."},{"content":"The <ph id=\"ph1\">`ProcessDnsInformation`</ph> method uses the <ph id=\"ph2\">`HostRequest`</ph> object to store the <ph id=\"ph3\">&lt;xref:System.Net.IPHostEntry&gt;</ph> returned by the request or a <ph id=\"ph4\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> thrown by the request.","pos":[1711,1912],"source":" The `ProcessDnsInformation` method uses the `HostRequest` object to store the <xref:System.Net.IPHostEntry> returned by the request or a <xref:System.Net.Sockets.SocketException> thrown by the request."},{"content":"When all requests are complete, the application iterates over the <ph id=\"ph1\">`HostRequest`</ph> objects and displays the DNS information or <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> error message.","pos":[1913,2093],"source":" When all requests are complete, the application iterates over the `HostRequest` objects and displays the DNS information or <xref:System.Net.Sockets.SocketException> error message."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>AsyncDesignPattern#5<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/AsyncDesignPattern/CS/AsyncDelegateWithStateObject.cs#5)</ept><ept id=\"p1\">]</ept>","pos":[2100,2242],"source":"[!code-csharp[AsyncDesignPattern#5](../../../samples/snippets/csharp/VS_Snippets_CLR/AsyncDesignPattern/CS/AsyncDelegateWithStateObject.cs#5)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>AsyncDesignPattern#5<ept id=\"p2\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDesignPattern/VB/AsyncDelegateWithStateObject.vb#5)</ept><ept id=\"p1\">]</ept>","pos":[2244,2387],"source":"[!code-vb[AsyncDesignPattern#5](../../../samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDesignPattern/VB/AsyncDelegateWithStateObject.vb#5)]"},{"pos":[2396,2404],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Event-based Asynchronous Pattern (EAP)<ept id=\"p1\">](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)</ept><ph id=\"ph1\"> </ph>","pos":[2408,2547],"source":"[Event-based Asynchronous Pattern (EAP)](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md) "},{"content":"<bpt id=\"p1\">[</bpt>Event-based Asynchronous Pattern Overview<ept id=\"p1\">](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[2551,2698],"source":"[Event-based Asynchronous Pattern Overview](../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Using an AsyncCallback Delegate to End an Asynchronous Operation<ept id=\"p1\">](../../../docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md)</ept>","pos":[2702,2894],"source":"[Using an AsyncCallback Delegate to End an Asynchronous Operation](../../../docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md)"}]}