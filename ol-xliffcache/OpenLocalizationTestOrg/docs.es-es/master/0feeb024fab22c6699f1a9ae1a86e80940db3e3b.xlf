<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0feeb024fab22c6699f1a9ae1a86e80940db3e3b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\controls\wpf-content-model.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be2b9a589ccdfa276b6d88f30b0bf0fc06e05ec1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a284f78cb74ef73697eb47e871cd03fcf1ecb0d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WPF Content Model | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WPF Content Model</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> is a presentation platform that provides many controls and control-like types whose primary purpose is to display different types of content.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To determine which control to use or which control to derive from, you should understand the kinds of objects a particular control can best display.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic summarizes the content model for <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control and control-like types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The content model describes what content can be used in a control.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic also lists the content properties for each content model.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A content property is a property that is used to store the content of the object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Classes That Contain Arbitrary Content</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Some controls can contain an object of any type, such as a string, a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object, or a <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> that is a container for additional items.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> can contain an image and some text; or a <ph id="ph2">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> can contain the value of <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> has four classes that can contain arbitrary content.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following table lists the classes, which inherit from <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Class that contains arbitrary content</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Content</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A single arbitrary object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A header and a single item, both of which are arbitrary objects.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A collection of arbitrary objects.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A header and a collection of items, all of which are arbitrary objects.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Controls that inherit from these classes can contain the same type of content and treat the content in the same way.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following illustration shows one control from each content model that contains an image and some text.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Button, GroupBox, Listbax, TreeViewItem<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/controls/media/controlcontentmodelimagetextinto.PNG "</bpt>ControlContentModelImageTextInto<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Controls That Contain a Single Arbitrary Object</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> class contains a single piece of arbitrary content.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Its content property is <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following controls inherit from <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> and use its content model:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following illustration shows four buttons whose <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> is set to a string, a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object, a <ph id="ph3">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, and a <ph id="ph4">&lt;xref:System.Windows.Controls.Panel&gt;</ph> that contains an <ph id="ph5">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph> and a <ph id="ph6">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Four buttons<ept id="p1">](../../../../docs/framework/wpf/controls/media/controlcontentmodelbuttons.PNG "ControlContentModelButtons")</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Four buttons that have different types of content</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For an example of how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> property, see <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Controls That Contain a Header and a Single Arbitrary Object</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.HeaderedContentControl&gt;</ph> class inherits from <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> and displays content with a header.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It inherits the content property, <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph>, from <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> and defines the <ph id="ph3">&lt;xref:System.Windows.Controls.HeaderedContentControl.Header%2A&gt;</ph> property that is of type <ph id="ph4">&lt;xref:System.Object&gt;</ph>; therefore, both can be an arbitrary object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following controls inherit from <ph id="ph1">&lt;xref:System.Windows.Controls.HeaderedContentControl&gt;</ph> and use its content model:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following illustration shows two <ph id="ph1">&lt;xref:System.Windows.Controls.TabItem&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref:System.Windows.Controls.TabItem&gt;</ph> has <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> objects as the <ph id="ph3">&lt;xref:System.Windows.Controls.HeaderedContentControl.Header%2A&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.HeaderedContentControl.Header%2A&gt;</ph> is set to a <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> that contains an <ph id="ph3">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph> and a <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> is set to a <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> that contains a <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> and a <ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref:System.Windows.Controls.TabItem&gt;</ph> has a string in the <ph id="ph2">&lt;xref:System.Windows.Controls.HeaderedContentControl.Header%2A&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> in the <ph id="ph4">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>TabControl<ept id="p1">](../../../../docs/framework/wpf/controls/media/controlcontentmodelteabitem.PNG "ControlContentModelTeabItem")</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>TabControl that uses different types in the Header property</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For an example of how to create <ph id="ph1">&lt;xref:System.Windows.Controls.TabItem&gt;</ph> objects, see <ph id="ph2">&lt;xref:System.Windows.Controls.HeaderedContentControl&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Controls That Contain a Collection of Arbitrary Objects</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> class inherits from <ph id="ph2">&lt;xref:System.Windows.Controls.Control&gt;</ph> and can contain multiple items, such as strings, objects, or other elements.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Its content properties are <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> is typically used to populate the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> with a data collection.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you do not want to use a collection to populate the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, you can add items by using the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following controls inherit from <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and use its content model:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following illustration shows a <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> that contains these types of items:</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A string.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> that contains an <ph id="ph2">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>ListBox with four types of content<ept id="p1">](../../../../docs/framework/wpf/controls/media/controlcontentmodellistbox2.PNG "ControlContentModelListBox2")</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>ListBox that contains multiple types of objects</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Controls That Contain a Header and a Collection of Arbitrary Objects</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph> class inherits from <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and can contain multiple items, such as strings, objects, or other elements, and a header.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It inherits the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> content properties, <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;</ph>, and it defines the <ph id="ph4">&lt;xref:System.Windows.Controls.HeaderedItemsControl.Header%2A&gt;</ph> property that can be an arbitrary object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following controls inherit from <ph id="ph1">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph> and use its content model:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Classes That Contain a Collection of UIElement Objects</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> class positions and arranges child <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Its content property is <ph id="ph1">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following classes inherit from the <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> class and use its content model:</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Panels Overview<ept id="p1">](../../../../docs/framework/wpf/controls/panels-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Classes That Affect the Appearance of a UIElement</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Decorator&gt;</ph> class applies visual effects onto or around a single child <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Its content property is <ph id="ph1">&lt;xref:System.Windows.Controls.Decorator.Child%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following classes inherit from <ph id="ph1">&lt;xref:System.Windows.Controls.Decorator&gt;</ph> and use its content model:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following illustration shows a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> that has (is decorated with) a <ph id="ph2">&lt;xref:System.Windows.Controls.Border&gt;</ph> around it.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>TextBox with black border<ept id="p1">](../../../../docs/framework/wpf/controls/media/layout-border-around-textbox.png "Layout_Border_around_TextBox")</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>TextBlock that has a Border</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Classes That Provide Visual Feedback About a UIElement</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.Adorner&gt;</ph> class provides visual cues to a user.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For example, use an <ph id="ph1">&lt;xref:System.Windows.Documents.Adorner&gt;</ph> to add functional handles to elements or provide state information about a control.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.Adorner&gt;</ph> class provides a framework so that you can create your own adorners.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> does not provide any implemented adorners.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Adorners Overview<ept id="p1">](../../../../docs/framework/wpf/controls/adorners-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Classes That Enable Users to Enter Text</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>WPF provides three primary controls that enable users to enter text.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Each control displays the text differently.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following table lists these three text-related controls, their capabilities when they display text, and their properties that contain the control's text.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Control</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Text is displayed as</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Content property</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Plain text</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Formatted text</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Hidden text (characters are masked)</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Classes That Display Your Text</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Several classes can be used to display plain or formatted text.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> to display small amounts of text.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If you want to display large amounts of text, use the <ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.FlowDocumentPageViewer&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> has two content properties: <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.Inlines%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>When you want to display text that uses consistent formatting, the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> property is often your best choice.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If you plan to use different formatting throughout the text, use the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock.Inlines%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock.Inlines%2A&gt;</ph> property is a collection of <ph id="ph2">&lt;xref:System.Windows.Documents.Inline&gt;</ph> objects, which specify how to format text.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following table lists the content property for <ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.FlowDocumentPageViewer&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Control</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Content property</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Content property type</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Windows.Documents.IDocumentPaginatorSource&gt;</ph> interface; therefore, all three classes can take a <ph id="ph3">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> as content.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Classes That Format Your Text</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> and its related classes allow you to format text.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> objects contain and format text in <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The two primary types of <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> objects are <ph id="ph2">&lt;xref:System.Windows.Documents.Block&gt;</ph> elements and <ph id="ph3">&lt;xref:System.Windows.Documents.Inline&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Documents.Block&gt;</ph> element represents a block of text, such as a paragraph or list.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Documents.Inline&gt;</ph> element represents a portion of text in a block.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Many <ph id="ph1">&lt;xref:System.Windows.Documents.Inline&gt;</ph> classes specify formatting for the text to which they are applied.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> has its own content model.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>TextElement Content Model Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/textelement-content-model-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Advanced<ept id="p1">](../../../../docs/framework/wpf/advanced/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>