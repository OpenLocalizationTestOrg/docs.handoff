<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="relativesource-markupextension.md" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">324059c70989191a33dd838edbfef4414e6d283b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\relativesource-markupextension.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be3e87d1c5e63966ffe35d56360a4af8e5f387d3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78e6954efba63ea333cff9dfa85621d49f8dc1d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>RelativeSource MarkupExtension | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>RelativeSource MarkupExtension</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies properties of a <ph id="ph1">&lt;xref:System.Windows.Data.RelativeSource&gt;</ph> binding source, to be used within a <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](../../../../docs/framework/wpf/advanced/binding-markup-extension.md)</ept>, or when setting the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> element established in XAML.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XAML Attribute Usage</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>XAML Attribute Usage (nested within Binding extension)</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XAML Object Element Usage</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>XAML Values</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>One of the following:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   The string token <ph id="ph1">`Self`</ph>; corresponds to a <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource&gt;</ph> as created with its <ph id="ph3">&lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Windows.Data.RelativeSourceMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   The string token <ph id="ph1">`TemplatedParent`</ph>; corresponds to a <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource&gt;</ph> as created with its <ph id="ph3">&lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Windows.Data.RelativeSourceMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   The string token <ph id="ph1">`PreviousData`</ph>; corresponds to a <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource&gt;</ph> as created with its <ph id="ph3">&lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Windows.Data.RelativeSourceMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   See below for information on <ph id="ph1">`FindAncestor`</ph> mode.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The string token <ph id="ph1">`FindAncestor`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Using this token enters a mode whereby a <ph id="ph1">`RelativeSource`</ph> specifies an ancestor type and optionally an ancestor level.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This corresponds to a <ph id="ph1">&lt;xref:System.Windows.Data.RelativeSource&gt;</ph> as created with its <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Windows.Data.RelativeSourceMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Required for <ph id="ph1">`FindAncestor`</ph> mode.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name of a type, which fills the <ph id="ph1">&lt;xref:System.Windows.Data.RelativeSource.AncestorType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optional for <ph id="ph1">`FindAncestor`</ph> mode.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An ancestor level (evaluated towards the parent direction in the logical tree).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`{RelativeSource TemplatedParent}`</ph> binding usages are a key technique that addresses a larger concept of the separation of a control's UI and a control's logic.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This enables binding from within the template definition to the templated parent (the run time object instance where the template is applied).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For this case, the <bpt id="p1">[</bpt>TemplateBinding Markup Extension<ept id="p1">](../../../../docs/framework/wpf/advanced/templatebinding-markup-extension.md)</ept> is in fact a shorthand for the following binding expression: <ph id="ph1">`{Binding RelativeSource={RelativeSource TemplatedParent}}`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TemplateBinding`</ph> or <ph id="ph2">`{RelativeSource TemplatedParent}`</ph> usages are both only relevant within the XAML that defines a template.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>TemplateBinding Markup Extension<ept id="p1">](../../../../docs/framework/wpf/advanced/templatebinding-markup-extension.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`{RelativeSource FindAncestor}`</ph> is mainly used in control templates or predictable self-contained UI compositions, for cases where a control is always expected to be in a visual tree of a certain ancestor type.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, items of an items control might use <ph id="ph1">`FindAncestor`</ph> usages to bind to properties of their items control parent ancestor.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Or, elements that are part of control composition in a template can use <ph id="ph1">`FindAncestor`</ph> bindings to the parent elements in that same composition structure.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the object element syntax for <ph id="ph1">`FindAncestor`</ph> mode shown in the XAML Syntax sections, the second object element syntax is used specifically for <ph id="ph2">`FindAncestor`</ph> mode.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FindAncestor`</ph> mode requires an <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource.AncestorType%2A&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You must set <ph id="ph1">&lt;xref:System.Windows.Data.RelativeSource.AncestorType%2A&gt;</ph> as an attribute using an <bpt id="p1">[</bpt>x:Type Markup Extension<ept id="p1">](../../../../docs/framework/xaml-services/x-type-markup-extension.md)</ept> reference to the type of ancestor to look for.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.RelativeSource.AncestorType%2A&gt;</ph> value is used when the binding request is processed at run-time.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`FindAncestor`</ph> mode, the optional property <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource.AncestorLevel%2A&gt;</ph> can help disambiguate the ancestor lookup in cases where there is possibly more than one ancestor of that type existing in the element tree.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information on how to use the <ph id="ph1">`FindAncestor`</ph> mode, see <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`{RelativeSource Self}`</ph> is useful for scenarios where one property of an instance should depend on the value of another property of the same instance, and no general dependency property relationship (such as coercion) already exists between those two properties.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Although it is rare that two properties exist on an object such that the values are literally identical (and are identically typed), you can also apply a <ph id="ph1">`Converter`</ph> parameter to a binding that has <ph id="ph2">`{RelativeSource Self}`</ph>, and use the converter to convert between source and target types.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Another scenario for <ph id="ph1">`{RelativeSource Self}`</ph> is as part of a <ph id="ph2">&lt;xref:System.Windows.MultiDataTrigger&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the following XAML defines a <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> element such that no matter what value is entered for <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> is always a square: <ph id="ph4">`&lt;Rectangle Width="200" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}" .../&gt;`</ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`{RelativeSource PreviousData}`</ph> is useful either in data templates, or in cases where bindings are using a collection as the data source.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`{RelativeSource PreviousData}`</ph> to highlight relationships between adjacent data items in the collection.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A related technique is to establish a <ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> between the current and previous items in the data source, and use a converter on that binding to determine the difference between the two items and their properties.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the following example, the first <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> in the items template displays the current number.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> binding is a <ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> that nominally has two <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> consistuents: the current record, and a binding that deliberately uses the previous data record by using <ph id="ph4">`{RelativeSource PreviousData}`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Then, a converter on the <ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> calculates the difference and returns it to the binding.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Describing data binding as a concept is not covered here, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> XAML processor implementation, the handling for this markup extension is defined by the <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`RelativeSource`</ph> is a markup extension.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>All markup extensions in XAML use the <ph id="ph1">`{`</ph> and <ph id="ph2">`}`</ph> characters in their attribute syntax, which is the convention by which a XAML processor recognizes that a markup extension must process the attribute.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](../../../../docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Overview (WPF)<ept id="p1">](../../../../docs/framework/wpf/advanced/xaml-overview-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](../../../../docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Binding Declarations Overview<ept id="p1">](../../../../docs/framework/wpf/data/binding-declarations-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>x:Type Markup Extension<ept id="p1">](../../../../docs/framework/xaml-services/x-type-markup-extension.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>