{"content":"---\ntitle: \"SqlMetal.exe (Code Generation Tool)\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"SQLMetal [LINQ to SQL]\"\n  - \"code generation tool\"\n  - \"SQLMetal.exe\"\n  - \"LINQ to SQL, serialization\"\n  - \"LINQ to SQL, DBML files\"\n  - \"LINQ to SQL, SQLMetal\"\nms.assetid: 819e5a96-7646-4fdb-b14b-fe31221b0614\n---\n# SqlMetal.exe (Code Generation Tool)\nThe SqlMetal command-line tool generates code and mapping for the [!INCLUDE[vbtecdlinq](../../../includes/vbtecdlinq-md.md)] component of the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]. By applying options that appear later in this topic, you can instruct SqlMetal to perform several different actions that include the following:  \n  \n-   From a database, generate source code and mapping attributes or a mapping file.  \n  \n-   From a database, generate an intermediate database markup language (.dbml) file for customization.  \n  \n-   From a .dbml file, generate code and mapping attributes or a mapping file.  \n  \n This tool is automatically installed with Visual Studio. By default, the file is located at `drive`:\\Program Files\\Microsoft SDKs\\Windows\\v`n.nn`\\bin. If you do not install Visual Studio, you can also get the SQLMetal file by downloading the [Windows SDK](https://go.microsoft.com/fwlink/?LinkId=142225).  \n  \n> [!NOTE]\n>  Developers who use Visual Studio can also use the [!INCLUDE[vs_ordesigner_long](../../../includes/vs-ordesigner-long-md.md)] to generate entity classes. The command-line approach scales well for large databases. Because SqlMetal is a command-line tool, you can use it in a build process.  \n  \n To run the tool, use the Developer Command Prompt for Visual Studio (or the Visual Studio Command Prompt in Windows 7). For more information, see [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md).At the command prompt, type the following:  \n  \n## Syntax  \n  \n```  \nsqlmetal [options] [<input file>]  \n```  \n  \n## Options  \n To view the most current option list, type `sqlmetal /?` at a command prompt from the installed location.  \n  \n **Connection Options**  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**/server:** *\\<name>*|Specifies database server name.|  \n|**/database:** *\\<name>*|Specifies database catalog on server.|  \n|**/user:** *\\<name>*|Specifies logon user id. Default value: Use Windows authentication.|  \n|**/password:** *\\<password>*|Specifies logon password. Default value: Use Windows authentication.|  \n|**/conn:** *\\<connection string>*|Specifies database connection string. Cannot be used with **/server**, **/database**, **/user**, or **/password** options.<br /><br /> Do not include the file name in the connection string. Instead, add the file name to the command line as the input file. For example, the following line specifies \"c:\\northwnd.mdf\" as the input file: **sqlmetal /code:\"c:\\northwind.cs\" /language:csharp \"c:\\northwnd.mdf\"**.|  \n|**/timeout:** *\\<seconds>*|Specifies time-out value when SqlMetal accesses the database. Default value: 0 (that is, no time limit).|  \n  \n **Extraction options**  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**/views**|Extracts database views.|  \n|**/functions**|Extracts database functions.|  \n|**/sprocs**|Extracts stored procedures.|  \n  \n **Output options**  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**/dbml** *[:file]*|Sends output as .dbml. Cannot be used with **/map** option.|  \n|**/code** *[:file]*|Sends output as source code. Cannot be used with **/dbml** option.|  \n|**/map** *[:file]*|Generates an XML mapping file instead of attributes. Cannot be used with **/dbml** option.|  \n  \n **Miscellaneous**  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**/language:** *\\<language>*|Specifies source code language.<br /><br /> Valid *\\<language>*: vb, csharp.<br /><br /> Default value: Derived from extension on code file name.|  \n|**/namespace:** *\\<name>*|Specifies namespace of the generated code. Default value: no namespace.|  \n|**/context:** *\\<type>*|Specifies name of data context class. Default value: Derived from database name.|  \n|**/entitybase:** *\\<type>*|Specifies the base class of the entity classes in the generated code. Default value: Entities have no base class.|  \n|**/pluralize**|Automatically pluralizes or singularizes class and member names.<br /><br /> This option is available only in the U.S. English version.|  \n|**/serialization:** *\\<option>*|Generates serializable classes.<br /><br /> Valid *\\<option>*: None, Unidirectional. Default value: None.<br /><br /> For more information, see [Serialization](../../../docs/framework/data/adonet/sql/linq/serialization.md).|  \n  \n **Input File**  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**\\<input file>**|Specifies a SQL Server Express .mdf file, a [!INCLUDE[ssEW](../../../includes/ssew-md.md)] .sdf file, or a .dbml intermediate file.|  \n  \n## Remarks  \n SqlMetal functionality actually involves two steps:  \n  \n-   Extracting the metadata of the database into a .dbml file.  \n  \n-   Generating a code output file.  \n  \n     By using the appropriate command-line options, you can produce Visual Basic or C# source code, or you can produce an XML mapping file.  \n  \n To extract the metadata from an .mdf file, you must specify the name of the .mdf file after all other options.  \n  \n If no **/server** is specified, **localhost/sqlexpress** is assumed.  \n  \n [!INCLUDE[sqprsqext](../../../includes/sqprsqext-md.md)] throws an exception if one or more of the following conditions are true:  \n  \n-   SqlMetal tries to extract a stored procedure that calls itself.  \n  \n-   The nesting level of a stored procedure, function, or view exceeds 32.  \n  \n     SqlMetal catches this exception and reports it as a warning.  \n  \n To specify an input file name, add the name to the command line as the input file. Including the file name in the connection string (using the **/conn** option) is not supported.  \n  \n## Examples  \n Generate a .dbml file that includes extracted SQL metadata:  \n  \n **sqlmetal /server:myserver /database:northwind /dbml:mymeta.dbml**  \n  \n Generate a .dbml file that includes extracted SQL metadata from an .mdf file by using SQL Server Express:  \n  \n **sqlmetal /dbml:mymeta.dbml mydbfile.mdf**  \n  \n Generate a .dbml file that includes extracted SQL metadata from SQL Server Express:  \n  \n **sqlmetal /server:.\\sqlexpress /dbml:mymeta.dbml /database:northwind**  \n  \n Generate source code from a .dbml metadata file:  \n  \n **sqlmetal /namespace:nwind /code:nwind.cs /language:csharp mymetal.dbml**  \n  \n Generate source code from SQL metadata directly:  \n  \n **sqlmetal /server:myserver /database:northwind /namespace:nwind /code:nwind.cs /language:csharp**  \n  \n> [!NOTE]\n>  When you use the **/pluralize** option with the Northwind sample database, note the following behavior. When SqlMetal makes row-type names for tables, the table names are singular. When it makes <xref:System.Data.Linq.DataContext> properties for tables, the table names are plural. Coincidentally, the tables in the Northwind sample database are already plural. Therefore, you do not see that part working. Although it is common practice to name database tables singular, it is also a common practice in .NET to name collections plural.  \n  \n## See also\n\n- [How to: Generate the Object Model in Visual Basic or C#](../../../docs/framework/data/adonet/sql/linq/how-to-generate-the-object-model-in-visual-basic-or-csharp.md)\n- [Code Generation in LINQ to SQL](../../../docs/framework/data/adonet/sql/linq/code-generation-in-linq-to-sql.md)\n- [External Mapping](../../../docs/framework/data/adonet/sql/linq/external-mapping.md)\n","nodes":[{"pos":[4,307],"embed":true,"restype":"x-metadata","content":"title: \"SqlMetal.exe (Code Generation Tool)\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"SQLMetal [LINQ to SQL]\"\n  - \"code generation tool\"\n  - \"SQLMetal.exe\"\n  - \"LINQ to SQL, serialization\"\n  - \"LINQ to SQL, DBML files\"\n  - \"LINQ to SQL, SQLMetal\"\nms.assetid: 819e5a96-7646-4fdb-b14b-fe31221b0614","nodes":[{"content":"SqlMetal.exe (Code Generation Tool)","nodes":[{"pos":[0,35],"content":"SqlMetal.exe (Code Generation Tool)","nodes":[{"content":"SqlMetal.exe (Code Generation Tool)","pos":[0,35]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[314,349],"content":"SqlMetal.exe (Code Generation Tool)","linkify":"SqlMetal.exe (Code Generation Tool)","nodes":[{"content":"SqlMetal.exe (Code Generation Tool)","pos":[0,35]}]},{"content":"The SqlMetal command-line tool generates code and mapping for the <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../includes/vbtecdlinq-md.md)]</ph> component of the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>.","pos":[350,553],"source":"The SqlMetal command-line tool generates code and mapping for the [!INCLUDE[vbtecdlinq](../../../includes/vbtecdlinq-md.md)] component of the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]."},{"content":"By applying options that appear later in this topic, you can instruct SqlMetal to perform several different actions that include the following:","pos":[554,697]},{"content":"From a database, generate source code and mapping attributes or a mapping file.","pos":[707,786]},{"content":"From a database, generate an intermediate database markup language (.dbml) file for customization.","pos":[796,894]},{"content":"From a .dbml file, generate code and mapping attributes or a mapping file.","pos":[904,978]},{"content":"This tool is automatically installed with Visual Studio.","pos":[985,1041]},{"content":"By default, the file is located at <ph id=\"ph1\">`drive`</ph>:\\Program Files\\Microsoft SDKs\\Windows\\v<ph id=\"ph2\">`n.nn`</ph>\\bin.","pos":[1042,1135],"source":" By default, the file is located at `drive`:\\Program Files\\Microsoft SDKs\\Windows\\v`n.nn`\\bin."},{"content":"If you do not install Visual Studio, you can also get the SQLMetal file by downloading the <bpt id=\"p1\">[</bpt>Windows SDK<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=142225)</ept>.","pos":[1136,1289],"source":" If you do not install Visual Studio, you can also get the SQLMetal file by downloading the [Windows SDK](https://go.microsoft.com/fwlink/?LinkId=142225)."},{"pos":[1297,1595],"content":"[!NOTE]\n Developers who use Visual Studio can also use the [!INCLUDE[vs_ordesigner_long](../../../includes/vs-ordesigner-long-md.md)] to generate entity classes. The command-line approach scales well for large databases. Because SqlMetal is a command-line tool, you can use it in a build process.","leadings":["","> "],"nodes":[{"content":"Developers who use Visual Studio can also use the [!INCLUDE[vs_ordesigner_long](../../../includes/vs-ordesigner-long-md.md)] to generate entity classes. The command-line approach scales well for large databases. Because SqlMetal is a command-line tool, you can use it in a build process.","pos":[9,296],"nodes":[{"content":"Developers who use Visual Studio can also use the <ph id=\"ph1\">[!INCLUDE[vs_ordesigner_long](../../../includes/vs-ordesigner-long-md.md)]</ph> to generate entity classes.","pos":[0,152],"source":"Developers who use Visual Studio can also use the [!INCLUDE[vs_ordesigner_long](../../../includes/vs-ordesigner-long-md.md)] to generate entity classes."},{"content":"The command-line approach scales well for large databases.","pos":[153,211]},{"content":"Because SqlMetal is a command-line tool, you can use it in a build process.","pos":[212,287]}]}]},{"content":"To run the tool, use the Developer Command Prompt for Visual Studio (or the Visual Studio Command Prompt in Windows 7).","pos":[1602,1721]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Command Prompts<ept id=\"p1\">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>.At the command prompt, type the following:","pos":[1722,1874],"source":" For more information, see [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md).At the command prompt, type the following:"},{"pos":[1883,1889],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1949,1956],"content":"Options","linkify":"Options","nodes":[{"content":"Options","pos":[0,7]}]},{"pos":[1960,2065],"content":"To view the most current option list, type <ph id=\"ph1\">`sqlmetal /?`</ph> at a command prompt from the installed location.","source":"To view the most current option list, type `sqlmetal /?` at a command prompt from the installed location."},{"pos":[2072,2094],"content":"<bpt id=\"p1\">**</bpt>Connection Options<ept id=\"p1\">**</ept>","source":"**Connection Options**"},{"content":"Option","pos":[2101,2107]},{"content":"Description","pos":[2108,2119]},{"pos":[2159,2181],"content":"<bpt id=\"p1\">**</bpt>/server:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>name&gt;<ept id=\"p2\">*</ept>","source":"**/server:** *\\<name>*"},{"content":"Specifies database server name.","pos":[2182,2213]},{"pos":[2218,2242],"content":"<bpt id=\"p1\">**</bpt>/database:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>name&gt;<ept id=\"p2\">*</ept>","source":"**/database:** *\\<name>*"},{"content":"Specifies database catalog on server.","pos":[2243,2280]},{"pos":[2285,2305],"content":"<bpt id=\"p1\">**</bpt>/user:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>name&gt;<ept id=\"p2\">*</ept>","source":"**/user:** *\\<name>*"},{"content":"Specifies logon user id. Default value: Use Windows authentication.","pos":[2306,2373]},{"pos":[2378,2406],"content":"<bpt id=\"p1\">**</bpt>/password:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>password&gt;<ept id=\"p2\">*</ept>","source":"**/password:** *\\<password>*"},{"content":"Specifies logon password.","pos":[2407,2432]},{"content":"Default value: Use Windows authentication.","pos":[2433,2475]},{"pos":[2480,2513],"content":"<bpt id=\"p1\">**</bpt>/conn:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>connection string&gt;<ept id=\"p2\">*</ept>","source":"**/conn:** *\\<connection string>*"},{"content":"Specifies database connection string.","pos":[2514,2551]},{"content":"Cannot be used with <bpt id=\"p1\">**</bpt>/server<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/database<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>/user<ept id=\"p3\">**</ept>, or <bpt id=\"p4\">**</bpt>/password<ept id=\"p4\">**</ept> options.","pos":[2552,2636],"source":" Cannot be used with **/server**, **/database**, **/user**, or **/password** options."},{"content":"Do not include the file name in the connection string.","pos":[2649,2703]},{"content":"Instead, add the file name to the command line as the input file.","pos":[2704,2769]},{"content":"For example, the following line specifies \"c:\\northwnd.mdf\" as the input file: <bpt id=\"p1\">**</bpt>sqlmetal /code:\"c:\\northwind.cs\" /language:csharp \"c:\\northwnd.mdf\"<ept id=\"p1\">**</ept>.","pos":[2770,2921],"source":" For example, the following line specifies \"c:\\northwnd.mdf\" as the input file: **sqlmetal /code:\"c:\\northwind.cs\" /language:csharp \"c:\\northwnd.mdf\"**."},{"pos":[2926,2952],"content":"<bpt id=\"p1\">**</bpt>/timeout:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>seconds&gt;<ept id=\"p2\">*</ept>","source":"**/timeout:** *\\<seconds>*"},{"content":"Specifies time-out value when SqlMetal accesses the database.","pos":[2953,3014]},{"content":"Default value: 0 (that is, no time limit).","pos":[3015,3057]},{"pos":[3065,3087],"content":"<bpt id=\"p1\">**</bpt>Extraction options<ept id=\"p1\">**</ept>","source":"**Extraction options**"},{"content":"Option","pos":[3094,3100]},{"content":"Description","pos":[3101,3112]},{"pos":[3152,3162],"content":"<bpt id=\"p1\">**</bpt>/views<ept id=\"p1\">**</ept>","source":"**/views**"},{"content":"Extracts database views.","pos":[3163,3187]},{"pos":[3192,3206],"content":"<bpt id=\"p1\">**</bpt>/functions<ept id=\"p1\">**</ept>","source":"**/functions**"},{"content":"Extracts database functions.","pos":[3207,3235]},{"pos":[3240,3251],"content":"<bpt id=\"p1\">**</bpt>/sprocs<ept id=\"p1\">**</ept>","source":"**/sprocs**"},{"content":"Extracts stored procedures.","pos":[3252,3279]},{"pos":[3287,3305],"content":"<bpt id=\"p1\">**</bpt>Output options<ept id=\"p1\">**</ept>","source":"**Output options**"},{"content":"Option","pos":[3312,3318]},{"content":"Description","pos":[3319,3330]},{"pos":[3370,3389],"content":"<bpt id=\"p1\">**</bpt>/dbml<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>[:file]<ept id=\"p2\">*</ept>","source":"**/dbml** *[:file]*"},{"content":"Sends output as .dbml.","pos":[3390,3412]},{"content":"Cannot be used with <bpt id=\"p1\">**</bpt>/map<ept id=\"p1\">**</ept> option.","pos":[3413,3449],"source":" Cannot be used with **/map** option."},{"pos":[3454,3473],"content":"<bpt id=\"p1\">**</bpt>/code<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>[:file]<ept id=\"p2\">*</ept>","source":"**/code** *[:file]*"},{"content":"Sends output as source code.","pos":[3474,3502]},{"content":"Cannot be used with <bpt id=\"p1\">**</bpt>/dbml<ept id=\"p1\">**</ept> option.","pos":[3503,3540],"source":" Cannot be used with **/dbml** option."},{"pos":[3545,3563],"content":"<bpt id=\"p1\">**</bpt>/map<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>[:file]<ept id=\"p2\">*</ept>","source":"**/map** *[:file]*"},{"content":"Generates an XML mapping file instead of attributes.","pos":[3564,3616]},{"content":"Cannot be used with <bpt id=\"p1\">**</bpt>/dbml<ept id=\"p1\">**</ept> option.","pos":[3617,3654],"source":" Cannot be used with **/dbml** option."},{"pos":[3662,3679],"content":"<bpt id=\"p1\">**</bpt>Miscellaneous<ept id=\"p1\">**</ept>","source":"**Miscellaneous**"},{"content":"Option","pos":[3686,3692]},{"content":"Description","pos":[3693,3704]},{"pos":[3744,3772],"content":"<bpt id=\"p1\">**</bpt>/language:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>language&gt;<ept id=\"p2\">*</ept>","source":"**/language:** *\\<language>*"},{"content":"Specifies source code language.","pos":[3773,3804]},{"content":"Valid <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\&lt;</ph>language&gt;<ept id=\"p1\">*</ept>: vb, csharp.","pos":[3817,3849],"source":"Valid *\\<language>*: vb, csharp."},{"content":"Default value: Derived from extension on code file name.","pos":[3862,3918]},{"pos":[3923,3948],"content":"<bpt id=\"p1\">**</bpt>/namespace:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>name&gt;<ept id=\"p2\">*</ept>","source":"**/namespace:** *\\<name>*"},{"content":"Specifies namespace of the generated code.","pos":[3949,3991]},{"content":"Default value: no namespace.","pos":[3992,4020]},{"pos":[4025,4048],"content":"<bpt id=\"p1\">**</bpt>/context:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>type&gt;<ept id=\"p2\">*</ept>","source":"**/context:** *\\<type>*"},{"content":"Specifies name of data context class.","pos":[4049,4086]},{"content":"Default value: Derived from database name.","pos":[4087,4129]},{"pos":[4134,4160],"content":"<bpt id=\"p1\">**</bpt>/entitybase:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>type&gt;<ept id=\"p2\">*</ept>","source":"**/entitybase:** *\\<type>*"},{"content":"Specifies the base class of the entity classes in the generated code.","pos":[4161,4230]},{"content":"Default value: Entities have no base class.","pos":[4231,4274]},{"pos":[4279,4293],"content":"<bpt id=\"p1\">**</bpt>/pluralize<ept id=\"p1\">**</ept>","source":"**/pluralize**"},{"content":"Automatically pluralizes or singularizes class and member names.","pos":[4294,4358]},{"content":"This option is available only in the U.S. English version.","pos":[4371,4429]},{"pos":[4434,4465],"content":"<bpt id=\"p1\">**</bpt>/serialization:<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\&lt;</ph>option&gt;<ept id=\"p2\">*</ept>","source":"**/serialization:** *\\<option>*"},{"content":"Generates serializable classes.","pos":[4466,4497]},{"content":"Valid <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\&lt;</ph>option&gt;<ept id=\"p1\">*</ept>: None, Unidirectional.","pos":[4510,4550],"source":"Valid *\\<option>*: None, Unidirectional."},{"content":"Default value: None.","pos":[4551,4571]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Serialization<ept id=\"p1\">](../../../docs/framework/data/adonet/sql/linq/serialization.md)</ept>.","pos":[4584,4689],"source":"For more information, see [Serialization](../../../docs/framework/data/adonet/sql/linq/serialization.md)."},{"pos":[4697,4711],"content":"<bpt id=\"p1\">**</bpt>Input File<ept id=\"p1\">**</ept>","source":"**Input File**"},{"content":"Option","pos":[4718,4724]},{"content":"Description","pos":[4725,4736]},{"pos":[4776,4793],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>input file&gt;<ept id=\"p1\">**</ept>","source":"**\\<input file>**"},{"pos":[4794,4925],"content":"Specifies a SQL Server Express .mdf file, a <ph id=\"ph1\">[!INCLUDE[ssEW](../../../includes/ssew-md.md)]</ph> .sdf file, or a .dbml intermediate file.","source":"Specifies a SQL Server Express .mdf file, a [!INCLUDE[ssEW](../../../includes/ssew-md.md)] .sdf file, or a .dbml intermediate file."},{"pos":[4935,4942],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"SqlMetal functionality actually involves two steps:","pos":[4946,4997]},{"content":"Extracting the metadata of the database into a .dbml file.","pos":[5007,5065]},{"content":"Generating a code output file.","pos":[5075,5105]},{"content":"By using the appropriate command-line options, you can produce Visual Basic or C# source code, or you can produce an XML mapping file.","pos":[5116,5250]},{"content":"To extract the metadata from an .mdf file, you must specify the name of the .mdf file after all other options.","pos":[5257,5367]},{"pos":[5374,5442],"content":"If no <bpt id=\"p1\">**</bpt>/server<ept id=\"p1\">**</ept> is specified, <bpt id=\"p2\">**</bpt>localhost/sqlexpress<ept id=\"p2\">**</ept> is assumed.","source":"If no **/server** is specified, **localhost/sqlexpress** is assumed."},{"pos":[5449,5578],"content":"<ph id=\"ph1\">[!INCLUDE[sqprsqext](../../../includes/sqprsqext-md.md)]</ph> throws an exception if one or more of the following conditions are true:","source":"[!INCLUDE[sqprsqext](../../../includes/sqprsqext-md.md)] throws an exception if one or more of the following conditions are true:"},{"content":"SqlMetal tries to extract a stored procedure that calls itself.","pos":[5588,5651]},{"content":"The nesting level of a stored procedure, function, or view exceeds 32.","pos":[5661,5731]},{"content":"SqlMetal catches this exception and reports it as a warning.","pos":[5742,5802]},{"content":"To specify an input file name, add the name to the command line as the input file.","pos":[5809,5891]},{"content":"Including the file name in the connection string (using the <bpt id=\"p1\">**</bpt>/conn<ept id=\"p1\">**</ept> option) is not supported.","pos":[5892,5987],"source":" Including the file name in the connection string (using the **/conn** option) is not supported."},{"pos":[5996,6004],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"Generate a .dbml file that includes extracted SQL metadata:","pos":[6008,6067]},{"pos":[6074,6141],"content":"<bpt id=\"p1\">**</bpt>sqlmetal /server:myserver /database:northwind /dbml:mymeta.dbml<ept id=\"p1\">**</ept>","source":"**sqlmetal /server:myserver /database:northwind /dbml:mymeta.dbml**"},{"content":"Generate a .dbml file that includes extracted SQL metadata from an .mdf file by using SQL Server Express:","pos":[6148,6253]},{"pos":[6260,6303],"content":"<bpt id=\"p1\">**</bpt>sqlmetal /dbml:mymeta.dbml mydbfile.mdf<ept id=\"p1\">**</ept>","source":"**sqlmetal /dbml:mymeta.dbml mydbfile.mdf**"},{"content":"Generate a .dbml file that includes extracted SQL metadata from SQL Server Express:","pos":[6310,6393]},{"pos":[6400,6471],"content":"<bpt id=\"p1\">**</bpt>sqlmetal /server:.\\sqlexpress /dbml:mymeta.dbml /database:northwind<ept id=\"p1\">**</ept>","source":"**sqlmetal /server:.\\sqlexpress /dbml:mymeta.dbml /database:northwind**"},{"content":"Generate source code from a .dbml metadata file:","pos":[6478,6526]},{"pos":[6533,6607],"content":"<bpt id=\"p1\">**</bpt>sqlmetal /namespace:nwind /code:nwind.cs /language:csharp mymetal.dbml<ept id=\"p1\">**</ept>","source":"**sqlmetal /namespace:nwind /code:nwind.cs /language:csharp mymetal.dbml**"},{"content":"Generate source code from SQL metadata directly:","pos":[6614,6662]},{"pos":[6669,6767],"content":"<bpt id=\"p1\">**</bpt>sqlmetal /server:myserver /database:northwind /namespace:nwind /code:nwind.cs /language:csharp<ept id=\"p1\">**</ept>","source":"**sqlmetal /server:myserver /database:northwind /namespace:nwind /code:nwind.cs /language:csharp**"},{"pos":[6775,7322],"content":"[!NOTE]\n When you use the **/pluralize** option with the Northwind sample database, note the following behavior. When SqlMetal makes row-type names for tables, the table names are singular. When it makes <xref:System.Data.Linq.DataContext> properties for tables, the table names are plural. Coincidentally, the tables in the Northwind sample database are already plural. Therefore, you do not see that part working. Although it is common practice to name database tables singular, it is also a common practice in .NET to name collections plural.","leadings":["","> "],"nodes":[{"content":"When you use the **/pluralize** option with the Northwind sample database, note the following behavior. When SqlMetal makes row-type names for tables, the table names are singular. When it makes <xref:System.Data.Linq.DataContext> properties for tables, the table names are plural. Coincidentally, the tables in the Northwind sample database are already plural. Therefore, you do not see that part working. Although it is common practice to name database tables singular, it is also a common practice in .NET to name collections plural.","pos":[9,545],"nodes":[{"content":"When you use the <bpt id=\"p1\">**</bpt>/pluralize<ept id=\"p1\">**</ept> option with the Northwind sample database, note the following behavior.","pos":[0,103],"source":"When you use the **/pluralize** option with the Northwind sample database, note the following behavior."},{"content":"When SqlMetal makes row-type names for tables, the table names are singular.","pos":[104,180]},{"content":"When it makes <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> properties for tables, the table names are plural.","pos":[181,281],"source":" When it makes <xref:System.Data.Linq.DataContext> properties for tables, the table names are plural."},{"content":"Coincidentally, the tables in the Northwind sample database are already plural.","pos":[282,361]},{"content":"Therefore, you do not see that part working.","pos":[362,406]},{"content":"Although it is common practice to name database tables singular, it is also a common practice in .NET to name collections plural.","pos":[407,536]}]}]},{"pos":[7331,7339],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[7343,7508],"content":"<bpt id=\"p1\">[</bpt>How to: Generate the Object Model in Visual Basic or C#<ept id=\"p1\">](../../../docs/framework/data/adonet/sql/linq/how-to-generate-the-object-model-in-visual-basic-or-csharp.md)</ept>","source":"[How to: Generate the Object Model in Visual Basic or C#](../../../docs/framework/data/adonet/sql/linq/how-to-generate-the-object-model-in-visual-basic-or-csharp.md)"},{"pos":[7511,7623],"content":"<bpt id=\"p1\">[</bpt>Code Generation in LINQ to SQL<ept id=\"p1\">](../../../docs/framework/data/adonet/sql/linq/code-generation-in-linq-to-sql.md)</ept>","source":"[Code Generation in LINQ to SQL](../../../docs/framework/data/adonet/sql/linq/code-generation-in-linq-to-sql.md)"},{"pos":[7626,7710],"content":"<bpt id=\"p1\">[</bpt>External Mapping<ept id=\"p1\">](../../../docs/framework/data/adonet/sql/linq/external-mapping.md)</ept>","source":"[External Mapping](../../../docs/framework/data/adonet/sql/linq/external-mapping.md)"}]}