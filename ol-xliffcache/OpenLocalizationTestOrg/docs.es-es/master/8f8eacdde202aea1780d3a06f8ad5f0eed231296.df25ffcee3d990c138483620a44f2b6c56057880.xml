{"content":"---\ntitle: \"COR_HEAPOBJECT Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"COR_HEAPOBJECT\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_HEAPOBJECT\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COR_HEAPOBJECT structure [.NET Framework debugging]\"\nms.assetid: a92fdf95-492b-49ae-a741-2186e5c1d7c5\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 6\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# COR_HEAPOBJECT Structure\nProvides information about an object on the managed heap.  \n  \n## Syntax  \n  \n```  \ntypedef struct _COR_HEAPOBJECT {  \n    CORDB_ADDRESS address;    \n    ULONG64 size;             \n    COR_TYPEID type;          \n} COR_HEAPOBJECT;  \n```  \n  \n## Members  \n  \n|Member|Description|  \n|------------|-----------------|  \n|`address`|The address of the object in memory.|  \n|`size`|The total size of the object, in bytes.|  \n|`type`|A [COR_TYPEID](../../../../docs/framework/unmanaged-api/debugging/cor-typeid-structure.md) token that represents the type of the object.|  \n  \n## Remarks  \n `COR_HEAPOBJECT` instances can be retrieved by enumerating an [ICorDebugHeapEnum](../../../../docs/framework/unmanaged-api/debugging/icordebugheapenum-interface.md) interface object that is populated by calling the [ICorDebugProcess5::EnumerateHeap](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-enumerateheap-method.md) method.  \n  \n A `COR_HEAPOBJECT` instance provides information either about a live object on the managed heap, or about an object that is not rooted by any object but has not yet been collected by the garbage collector.  \n  \n For better performance, the `COR_HEAPOBJECT.address` field is a `CORDB_ADDRESS` value rather than the ICorDebugValue interface value used in much of the debugging API. To obtain an ICorDebugValue object for a given object address, you can pass the `CORDB_ADDRESS` value to the [ICorDebugProcess5::GetObject](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getobject-method.md) method.  \n  \n For better performance, the `COR_HEAPOBJECT.type` field is a `COR_TYPEID` value rather than the ICorDebugType interface value used in much of the debugging API. To obtain an ICorDebugType object for a given type ID, you can pass the `COR_TYPEID` value to the [ICorDebugProcess5::GetTypeForTypeID](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-gettypefortypeid-method.md) method.  \n  \n The `COR_HEAPOBJECT` structure includes a reference-counted COM interface. If you retrieve a `COR_HEAPOBJECT` instance from the enumerator by calling the [ICorDebugHeapEnum::Next](../../../../docs/framework/unmanaged-api/debugging/icordebugheapenum-next-method.md) method, you must subsequently release the reference.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]  \n  \n## See Also  \n [Debugging Structures](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)   \n [Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)","nodes":[{"pos":[4,601],"nodes":[{"content":"COR_HEAPOBJECT Structure | Microsoft Docs","nodes":[{"pos":[0,41],"content":"COR_HEAPOBJECT Structure | Microsoft Docs","nodes":[{"content":"COR_HEAPOBJECT Structure | Microsoft Docs","pos":[0,41]}]}],"pos":[6,50],"yaml":true}],"content":"title: \"COR_HEAPOBJECT Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"COR_HEAPOBJECT\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_HEAPOBJECT\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COR_HEAPOBJECT structure [.NET Framework debugging]\"\nms.assetid: a92fdf95-492b-49ae-a741-2186e5c1d7c5\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 6\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[608,632],"content":"COR_HEAPOBJECT Structure","linkify":"COR_HEAPOBJECT Structure","nodes":[{"content":"COR_HEAPOBJECT Structure","pos":[0,24]}]},{"content":"Provides information about an object on the managed heap.","pos":[633,690]},{"pos":[699,705],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[877,884],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Member","pos":[891,897]},{"content":"Description","pos":[898,909]},{"content":"The address of the object in memory.","pos":[959,995]},{"content":"The total size of the object, in bytes.","pos":[1007,1046]},{"pos":[1058,1194],"content":"A <bpt id=\"p1\">[</bpt>COR_TYPEID<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/cor-typeid-structure.md)</ept> token that represents the type of the object.","source":"A [COR_TYPEID](../../../../docs/framework/unmanaged-api/debugging/cor-typeid-structure.md) token that represents the type of the object."},{"pos":[1204,1211],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1215,1566],"content":"<ph id=\"ph1\">`COR_HEAPOBJECT`</ph> instances can be retrieved by enumerating an <bpt id=\"p1\">[</bpt>ICorDebugHeapEnum<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugheapenum-interface.md)</ept> interface object that is populated by calling the <bpt id=\"p2\">[</bpt>ICorDebugProcess5::EnumerateHeap<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-enumerateheap-method.md)</ept> method.","source":"`COR_HEAPOBJECT` instances can be retrieved by enumerating an [ICorDebugHeapEnum](../../../../docs/framework/unmanaged-api/debugging/icordebugheapenum-interface.md) interface object that is populated by calling the [ICorDebugProcess5::EnumerateHeap](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-enumerateheap-method.md) method."},{"pos":[1573,1778],"content":"A <ph id=\"ph1\">`COR_HEAPOBJECT`</ph> instance provides information either about a live object on the managed heap, or about an object that is not rooted by any object but has not yet been collected by the garbage collector.","source":"A `COR_HEAPOBJECT` instance provides information either about a live object on the managed heap, or about an object that is not rooted by any object but has not yet been collected by the garbage collector."},{"content":"For better performance, the <ph id=\"ph1\">`COR_HEAPOBJECT.address`</ph> field is a <ph id=\"ph2\">`CORDB_ADDRESS`</ph> value rather than the ICorDebugValue interface value used in much of the debugging API.","pos":[1785,1952],"source":"For better performance, the `COR_HEAPOBJECT.address` field is a `CORDB_ADDRESS` value rather than the ICorDebugValue interface value used in much of the debugging API."},{"content":"To obtain an ICorDebugValue object for a given object address, you can pass the <ph id=\"ph1\">`CORDB_ADDRESS`</ph> value to the <bpt id=\"p1\">[</bpt>ICorDebugProcess5::GetObject<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getobject-method.md)</ept> method.","pos":[1953,2190],"source":" To obtain an ICorDebugValue object for a given object address, you can pass the `CORDB_ADDRESS` value to the [ICorDebugProcess5::GetObject](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getobject-method.md) method."},{"content":"For better performance, the <ph id=\"ph1\">`COR_HEAPOBJECT.type`</ph> field is a <ph id=\"ph2\">`COR_TYPEID`</ph> value rather than the ICorDebugType interface value used in much of the debugging API.","pos":[2197,2357],"source":"For better performance, the `COR_HEAPOBJECT.type` field is a `COR_TYPEID` value rather than the ICorDebugType interface value used in much of the debugging API."},{"content":"To obtain an ICorDebugType object for a given type ID, you can pass the <ph id=\"ph1\">`COR_TYPEID`</ph> value to the <bpt id=\"p1\">[</bpt>ICorDebugProcess5::GetTypeForTypeID<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-gettypefortypeid-method.md)</ept> method.","pos":[2358,2598],"source":" To obtain an ICorDebugType object for a given type ID, you can pass the `COR_TYPEID` value to the [ICorDebugProcess5::GetTypeForTypeID](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-gettypefortypeid-method.md) method."},{"content":"The <ph id=\"ph1\">`COR_HEAPOBJECT`</ph> structure includes a reference-counted COM interface.","pos":[2605,2679],"source":"The `COR_HEAPOBJECT` structure includes a reference-counted COM interface."},{"content":"If you retrieve a <ph id=\"ph1\">`COR_HEAPOBJECT`</ph> instance from the enumerator by calling the <bpt id=\"p1\">[</bpt>ICorDebugHeapEnum::Next<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugheapenum-next-method.md)</ept> method, you must subsequently release the reference.","pos":[2680,2922],"source":" If you retrieve a `COR_HEAPOBJECT` instance from the enumerator by calling the [ICorDebugHeapEnum::Next](../../../../docs/framework/unmanaged-api/debugging/icordebugheapenum-next-method.md) method, you must subsequently release the reference."},{"pos":[2931,2943],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2947,3051],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3058,3094],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[3101,3126],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3133,3241],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]"},{"pos":[3250,3258],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Debugging Structures<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[3262,3361],"source":"[Debugging Structures](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md) "},{"content":"<bpt id=\"p1\">[</bpt>Debugging<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/index.md)</ept>","pos":[3365,3437],"source":"[Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)"}]}