{"content":"---\ntitle: \"CorDebugEHClause Structure\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"cpp\"\napi_name: \n  - \"CorDebugEHClause\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nms.assetid: 0e350a1b-6997-46d0-bfc5-962a5011ef43\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# CorDebugEHClause Structure\n[Supported in the .NET Framework 4.5.2 and later versions]  \n  \n Represents an exception handling (EH) clause for a given piece of intermediate language (IL) code.  \n  \n## Syntax  \n  \n```cpp\ntypedef struct _CorDebugEHClause {  \n   ULONG32 Flags;  \n   ULONG32 TryOffset;  \n   ULONG32 TryLength;  \n   ULONG32 HandlerOffset;  \n   ULONG32 HandlerLength;  \n   ULONG32 ClassToken;  \n   ULONG32 FilterOffset;  \n} CorDebugEHClause;  \n```  \n  \n## Members  \n  \n|Member|Description|  \n|------------|-----------------|  \n|`Flags`|A bit field that describes the exception information in the EH clause. For more information, see the Remarks section.|  \n|`TryOffset`|The offset, in bytes, of the `try` block from the start of the method body.|  \n|`TryLength`|The length, in bytes, of the `try` block.|  \n|`HandlerOffset`|The location of the handler for this `try` block.|  \n|`HandlerLength`|The size of the handler code in bytes.|  \n|`ClassToken`|The metadata token for a type-based exception handler.|  \n|`FilterOffset`|The offset, in bytes, from the start of the method body for a filter-based exception handler.|  \n  \n## Remarks  \n An array of `CoreDebugEHClause` values is returned by the [GetEHClauses](../../../../docs/framework/unmanaged-api/debugging/icordebugilcode-getehclauses-method.md) method.  \n  \n The EH clause information is defined by the CLI specification. For more information, see [Standard ECMA-355: Common Language Infrastructure (CLI), 6th Edition](https://www.ecma-international.org/publications/standards/Ecma-335.htm).  \n  \n The `flags` field can contain the following flags. Note that they are not defined in CorDebug.idl or CorDebug.h.  \n  \n|Flag|Value|Description|  \n|----------|-----------|-----------------|  \n|`COR_ILEXCEPTION_CLAUSE_EXCEPTION`|0x00000000|A typed exception clause.|  \n|`COR_ILEXCEPTION_CLAUSE_FILTER`|0x00000001|An exception filter and handler clause.|  \n|`COR_ILEXCEPTION_CLAUSE_FINALLY`|0x00000002|A `finally` clause.|  \n|`COR_ILEXCEPTION_CLAUSE_FAULT`|0x00000004|A fault clause (a `finally` clause that is called only when an exception is thrown).|  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v452plus](../../../../includes/net-current-v452plus-md.md)]  \n  \n## See also\n\n- [GetEHClauses Method](../../../../docs/framework/unmanaged-api/debugging/icordebugilcode-getehclauses-method.md)\n- [Debugging Structures](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)\n","nodes":[{"pos":[4,287],"embed":true,"restype":"x-metadata","content":"title: \"CorDebugEHClause Structure\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"cpp\"\napi_name: \n  - \"CorDebugEHClause\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nms.assetid: 0e350a1b-6997-46d0-bfc5-962a5011ef43\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"CorDebugEHClause Structure","nodes":[{"pos":[0,26],"content":"CorDebugEHClause Structure","nodes":[{"content":"CorDebugEHClause Structure","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[294,320],"content":"CorDebugEHClause Structure","linkify":"CorDebugEHClause Structure","nodes":[{"content":"CorDebugEHClause Structure","pos":[0,26]}]},{"content":"[Supported in the .NET Framework 4.5.2 and later versions]","pos":[321,379]},{"content":"Represents an exception handling (EH) clause for a given piece of intermediate language (IL) code.","pos":[386,484]},{"pos":[493,499],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[759,766],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Member","pos":[773,779]},{"content":"Description","pos":[780,791]},{"content":"A bit field that describes the exception information in the EH clause.","pos":[839,909]},{"content":"For more information, see the Remarks section.","pos":[910,956]},{"pos":[973,1048],"content":"The offset, in bytes, of the <ph id=\"ph1\">`try`</ph> block from the start of the method body.","source":"The offset, in bytes, of the `try` block from the start of the method body."},{"pos":[1065,1106],"content":"The length, in bytes, of the <ph id=\"ph1\">`try`</ph> block.","source":"The length, in bytes, of the `try` block."},{"pos":[1127,1176],"content":"The location of the handler for this <ph id=\"ph1\">`try`</ph> block.","source":"The location of the handler for this `try` block."},{"content":"The size of the handler code in bytes.","pos":[1197,1235]},{"content":"The metadata token for a type-based exception handler.","pos":[1253,1307]},{"content":"The offset, in bytes, from the start of the method body for a filter-based exception handler.","pos":[1327,1420]},{"pos":[1430,1437],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1441,1612],"content":"An array of <ph id=\"ph1\">`CoreDebugEHClause`</ph> values is returned by the <bpt id=\"p1\">[</bpt>GetEHClauses<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugilcode-getehclauses-method.md)</ept> method.","source":"An array of `CoreDebugEHClause` values is returned by the [GetEHClauses](../../../../docs/framework/unmanaged-api/debugging/icordebugilcode-getehclauses-method.md) method."},{"content":"The EH clause information is defined by the CLI specification.","pos":[1619,1681]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard ECMA-355: Common Language Infrastructure (CLI), 6th Edition<ept id=\"p1\">](https://www.ecma-international.org/publications/standards/Ecma-335.htm)</ept>.","pos":[1682,1851],"source":" For more information, see [Standard ECMA-355: Common Language Infrastructure (CLI), 6th Edition](https://www.ecma-international.org/publications/standards/Ecma-335.htm)."},{"content":"The <ph id=\"ph1\">`flags`</ph> field can contain the following flags.","pos":[1858,1908],"source":"The `flags` field can contain the following flags."},{"content":"Note that they are not defined in CorDebug.idl or CorDebug.h.","pos":[1909,1970]},{"content":"Flag","pos":[1977,1981]},{"content":"Value","pos":[1982,1987]},{"content":"Description","pos":[1988,1999]},{"content":"0x00000000","pos":[2084,2094]},{"content":"A typed exception clause.","pos":[2095,2120]},{"content":"0x00000001","pos":[2157,2167]},{"content":"An exception filter and handler clause.","pos":[2168,2207]},{"content":"0x00000002","pos":[2245,2255]},{"pos":[2256,2275],"content":"A <ph id=\"ph1\">`finally`</ph> clause.","source":"A `finally` clause."},{"content":"0x00000004","pos":[2311,2321]},{"pos":[2322,2406],"content":"A fault clause (a <ph id=\"ph1\">`finally`</ph> clause that is called only when an exception is thrown).","source":"A fault clause (a `finally` clause that is called only when an exception is thrown)."},{"pos":[2416,2428],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2432,2536],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2543,2579],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2586,2611],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2618,2728],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v452plus](../../../../includes/net-current-v452plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v452plus](../../../../includes/net-current-v452plus-md.md)]"},{"pos":[2737,2745],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2749,2861],"content":"<bpt id=\"p1\">[</bpt>GetEHClauses Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugilcode-getehclauses-method.md)</ept>","source":"[GetEHClauses Method](../../../../docs/framework/unmanaged-api/debugging/icordebugilcode-getehclauses-method.md)"},{"pos":[2864,2962],"content":"<bpt id=\"p1\">[</bpt>Debugging Structures<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)</ept>","source":"[Debugging Structures](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)"}]}