{"content":"---\ntitle: \"How to: Read and Write to a Newly Created Data File | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"streams, reading and writing data\"\n  - \"BinaryReader class, examples\"\n  - \"I/O [.NET Framework], reading data\"\n  - \"I/O [.NET Framework], writing data\"\n  - \"BinaryWriter class, examples\"\nms.assetid: e209d949-31e8-44ea-8e38-87f9093f3093\ncaps.latest.revision: 16\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# How to: Read and Write to a Newly Created Data File\nThe <xref:System.IO.BinaryWriter> and <xref:System.IO.BinaryReader?displayProperty=fullName> classes are used for writing and reading data rather than character strings. The following example demonstrates how to write data to, and read data from, a new, empty file stream called `Test.data`. After creating the data file in the current directory, the associated <xref:System.IO.BinaryWriter> and <xref:System.IO.BinaryReader> objects are created, and the <xref:System.IO.BinaryWriter> object is used to write the integers 0 through 10 to `Test.data`, which leaves the file pointer at the end of the file. After setting the file pointer back to the origin, the <xref:System.IO.BinaryReader> object reads out the specified content.  \n  \n## Example  \n [!code-cpp[System.IO.BinaryReaderWriter#7](../../../samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CPP/source6.cpp#7)]\n [!code-csharp[System.IO.BinaryReaderWriter#7](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source6.cs#7)]\n [!code-vb[System.IO.BinaryReaderWriter#7](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source6.vb#7)]  \n  \n## Robust Programming  \n If `Test.data` already exists in the current directory, an <xref:System.IO.IOException> exception is thrown. Use the file mode option <xref:System.IO.FileMode?displayProperty=fullName> when you initialize the file stream to always create a new file without throwing an  exception.  \n  \n## See Also  \n <xref:System.IO.BinaryReader>   \n <xref:System.IO.BinaryWriter>   \n <xref:System.IO.FileStream>   \n <xref:System.IO.FileStream.Seek%2A?displayProperty=fullName>   \n <xref:System.IO.SeekOrigin>   \n [How to: Enumerate Directories and Files](../../../docs/standard/io/how-to-enumerate-directories-and-files.md)   \n [How to: Open and Append to a Log File](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md)   \n [How to: Read Text from a File](../../../docs/standard/io/how-to-read-text-from-a-file.md)   \n [How to: Write Text to a File](../../../docs/standard/io/how-to-write-text-to-a-file.md)   \n [How to: Read Characters from a String](../../../docs/standard/io/how-to-read-characters-from-a-string.md)   \n [How to: Write Characters to a String](../../../docs/standard/io/how-to-write-characters-to-a-string.md)   \n [File and Stream I-O](../../../docs/standard/io/index.md)\n","nodes":[{"pos":[4,576],"embed":true,"restype":"x-metadata","content":"title: \"How to: Read and Write to a Newly Created Data File | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"streams, reading and writing data\"\n  - \"BinaryReader class, examples\"\n  - \"I/O [.NET Framework], reading data\"\n  - \"I/O [.NET Framework], writing data\"\n  - \"BinaryWriter class, examples\"\nms.assetid: e209d949-31e8-44ea-8e38-87f9093f3093\ncaps.latest.revision: 16\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"How to: Read and Write to a Newly Created Data File | Microsoft Docs","nodes":[{"pos":[0,68],"content":"How to: Read and Write to a Newly Created Data File | Microsoft Docs","nodes":[{"content":"How to: Read and Write to a Newly Created Data File | Microsoft Docs","pos":[0,68]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[583,634],"content":"How to: Read and Write to a Newly Created Data File","linkify":"How to: Read and Write to a Newly Created Data File","nodes":[{"content":"How to: Read and Write to a Newly Created Data File","pos":[0,51]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader?displayProperty=fullName&gt;</ph> classes are used for writing and reading data rather than character strings.","pos":[635,804],"source":"The <xref:System.IO.BinaryWriter> and <xref:System.IO.BinaryReader?displayProperty=fullName> classes are used for writing and reading data rather than character strings."},{"content":"The following example demonstrates how to write data to, and read data from, a new, empty file stream called <ph id=\"ph1\">`Test.data`</ph>.","pos":[805,926],"source":" The following example demonstrates how to write data to, and read data from, a new, empty file stream called `Test.data`."},{"content":"After creating the data file in the current directory, the associated <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader&gt;</ph> objects are created, and the <ph id=\"ph3\">&lt;xref:System.IO.BinaryWriter&gt;</ph> object is used to write the integers 0 through 10 to <ph id=\"ph4\">`Test.data`</ph>, which leaves the file pointer at the end of the file.","pos":[927,1239],"source":" After creating the data file in the current directory, the associated <xref:System.IO.BinaryWriter> and <xref:System.IO.BinaryReader> objects are created, and the <xref:System.IO.BinaryWriter> object is used to write the integers 0 through 10 to `Test.data`, which leaves the file pointer at the end of the file."},{"content":"After setting the file pointer back to the origin, the <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> object reads out the specified content.","pos":[1240,1364],"source":" After setting the file pointer back to the origin, the <xref:System.IO.BinaryReader> object reads out the specified content."},{"pos":[1373,1380],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1838,1856],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"If <ph id=\"ph1\">`Test.data`</ph> already exists in the current directory, an <ph id=\"ph2\">&lt;xref:System.IO.IOException&gt;</ph> exception is thrown.","pos":[1860,1968],"source":"If `Test.data` already exists in the current directory, an <xref:System.IO.IOException> exception is thrown."},{"content":"Use the file mode option <ph id=\"ph1\">&lt;xref:System.IO.FileMode?displayProperty=fullName&gt;</ph> when you initialize the file stream to always create a new file without throwing an  exception.","pos":[1969,2140],"source":" Use the file mode option <xref:System.IO.FileMode?displayProperty=fullName> when you initialize the file stream to always create a new file without throwing an  exception."},{"pos":[2149,2157],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>How to: Enumerate Directories and Files<ept id=\"p1\">](../../../docs/standard/io/how-to-enumerate-directories-and-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[2358,2469],"source":"[How to: Enumerate Directories and Files](../../../docs/standard/io/how-to-enumerate-directories-and-files.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Open and Append to a Log File<ept id=\"p1\">](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept><ph id=\"ph1\"> </ph>","pos":[2473,2580],"source":"[How to: Open and Append to a Log File](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Read Text from a File<ept id=\"p1\">](../../../docs/standard/io/how-to-read-text-from-a-file.md)</ept><ph id=\"ph1\"> </ph>","pos":[2584,2675],"source":"[How to: Read Text from a File](../../../docs/standard/io/how-to-read-text-from-a-file.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](../../../docs/standard/io/how-to-write-text-to-a-file.md)</ept><ph id=\"ph1\"> </ph>","pos":[2679,2768],"source":"[How to: Write Text to a File](../../../docs/standard/io/how-to-write-text-to-a-file.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Read Characters from a String<ept id=\"p1\">](../../../docs/standard/io/how-to-read-characters-from-a-string.md)</ept><ph id=\"ph1\"> </ph>","pos":[2772,2879],"source":"[How to: Read Characters from a String](../../../docs/standard/io/how-to-read-characters-from-a-string.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Write Characters to a String<ept id=\"p1\">](../../../docs/standard/io/how-to-write-characters-to-a-string.md)</ept><ph id=\"ph1\"> </ph>","pos":[2883,2988],"source":"[How to: Write Characters to a String](../../../docs/standard/io/how-to-write-characters-to-a-string.md) "},{"content":"<bpt id=\"p1\">[</bpt>File and Stream I-O<ept id=\"p1\">](../../../docs/standard/io/index.md)</ept>","pos":[2992,3049],"source":"[File and Stream I-O](../../../docs/standard/io/index.md)"}]}