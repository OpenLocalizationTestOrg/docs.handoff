<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-exchange-queued-messages-with-wcf-endpoints.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98cb62c0d3f82a90ee96797a34600473dbe4dc11</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-exchange-queued-messages-with-wcf-endpoints.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">363f462db496757f03ae799ffff54616c956b75d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e4f3f3157b591a59ab078737e774662b0c6bdb1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Exchange Queued Messages with WCF Endpoints</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Exchange Queued Messages with WCF Endpoints</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Queues ensure that reliable messaging can occur between a client and a Windows Communication Foundation (WCF) service, even if the service is not available at the time of communication.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following procedures show how to ensure durable communication between a client and a service by using the standard queued binding when implementing the WCF service.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This section explains how to use <ph id="ph1">&lt;xref:System.ServiceModel.NetMsmqBinding&gt;</ph> for queued communication between a WCF client and a WCF service.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To use queuing in a WCF service</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Define a service contract using an interface marked with the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Mark the operations in the interface that are part of the service contract with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> and specify them as one-way because no response to the method is returned.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following code provides an example service contract and its operation definition.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When the service contract passes user-defined types, you must define data contracts for those types.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following code shows two data contracts, <ph id="ph1">`PurchaseOrder`</ph> and <ph id="ph2">`PurchaseOrderLineItem`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These two types define data that is sent to the service.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>(Note that the classes that define this data contract also define a number of methods.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These methods are not considered part of the data contract.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Only those members that are declared with the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> attribute are part of the data contract.)</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Implement the methods of the service contract defined in the interface in a class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Notice the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> placed on the <ph id="ph2">`SubmitPurchaseOrder`</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This specifies that this operation must be called within a transaction and that the transaction automatically completes when the method completes.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Create a transactional queue using <ph id="ph1">&lt;xref:System.Messaging&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can choose to create the queue using Microsoft Message Queuing (MSMQ) Microsoft Management Console (MMC) instead.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If so, make sure you create a transactional queue.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Define a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> in configuration that specifies the service address and uses the standard <ph id="ph2">&lt;xref:System.ServiceModel.NetMsmqBinding&gt;</ph> binding.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information about using WCF configuration, see <bpt id="p1">[</bpt>Configuring WCF services<ept id="p1">](../configuring-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Create a host for the <ph id="ph1">`OrderProcessing`</ph> service using <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> that reads messages from the queue and processes them.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Open the service host to make the service available.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Display a message that tells the user to press any key to terminate the service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`ReadLine`</ph> to wait for the key to be pressed and then close the service.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To create a client for the queued service</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example shows how to run the hosting application and use the Svcutil.exe tool to create the WCF client.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Define a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> in configuration that specifies the address and uses the standard <ph id="ph2">&lt;xref:System.ServiceModel.NetMsmqBinding&gt;</ph> binding, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Create a transaction scope to write to the transactional queue, call the <ph id="ph1">`SubmitPurchaseOrder`</ph> operation and close the WCF client, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following examples show the service code, hosting application, App.config file, and client code included for this example.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Transacted MSMQ Binding<ept id="p1">](../../../../docs/framework/wcf/samples/transacted-msmq-binding.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Queuing in WCF<ept id="p1">](../../../../docs/framework/wcf/feature-details/queuing-in-wcf.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Exchange Messages with WCF Endpoints and Message Queuing Applications<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-exchange-messages-with-wcf-endpoints-and-message-queuing-applications.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Communication Foundation to Message Queuing<ept id="p1">](../../../../docs/framework/wcf/samples/wcf-to-message-queuing.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Installing Message Queuing (MSMQ)<ept id="p1">](../../../../docs/framework/wcf/samples/installing-message-queuing-msmq.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Message Queuing to Windows Communication Foundation<ept id="p1">](../../../../docs/framework/wcf/samples/message-queuing-to-wcf.md)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Message Security over Message Queuing<ept id="p1">](../../../../docs/framework/wcf/samples/message-security-over-message-queuing.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>