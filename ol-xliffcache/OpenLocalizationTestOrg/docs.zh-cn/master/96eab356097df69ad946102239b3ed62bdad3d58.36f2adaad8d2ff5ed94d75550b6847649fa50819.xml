{"content":"---\ntitle: \"Securing Clients | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"clients [WCF], security considerations\"\nms.assetid: 44c8578c-9a5b-4acd-8168-1c30a027c4c5\ncaps.latest.revision: 22\nauthor: \"BrucePerlerMS\"\nms.author: \"bruceper\"\nmanager: \"mbaldwin\"\n---\n# Securing Clients\nIn [!INCLUDE[indigo1](../../../includes/indigo1-md.md)], the service dictates the security requirements for clients. That is, the service specifies what security mode to use, and whether or not the client must provide a credential. The process of securing a client, therefore, is simple: use the metadata obtained from the service (if it is published) and build a client. The metadata specifies how to configure the client. If the service requires that the client supply a credential, then you must obtain a credential that fits the requirement. This topic discusses the process in further detail. [!INCLUDE[crabout](../../../includes/crabout-md.md)] creating a secure service, see [Securing Services](../../../docs/framework/wcf/securing-services.md).  \n  \n## The Service Specifies Security  \n By default, [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] bindings have security features enabled. (The exception is the <xref:System.ServiceModel.BasicHttpBinding>.) Therefore, if the service was created using [!INCLUDE[indigo2](../../../includes/indigo2-md.md)], there is a greater chance that it will implement security to ensure authentication, confidentiality, and integrity. In that case, the metadata the service provides will indicate what it requires to establish a secure communication channel. If the service metadata does not include any security requirements, there is no way to impose a security scheme, such as Secure Sockets Layer (SSL) over HTTP, on a service. If, however, the service requires the client to supply a credential, then the client developer, deployer, or administrator must supply the actual credential that the client will use to authenticate itself to the service.  \n  \n## Obtaining Metadata  \n When creating a client, the first step is to obtain the metadata for the service that the client will communicate with. This can be done in two ways. First, if the service publishes a metadata exchange (MEX) endpoint or makes its metadata available over HTTP or HTTPS, you can download the metadata using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md), which generates both code files for a client as well as a configuration file. ([!INCLUDE[crabout](../../../includes/crabout-md.md)] using the tool, see [Accessing Services Using a WCF Client](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md).) If the service does not publish a MEX endpoint and also does not make its metadata available over HTTP or HTTPS, you must contact the service creator for documentation that describes the security requirements and the metadata.  \n  \n> [!IMPORTANT]\n>  It is recommended that the metadata come from a trusted source and that it not be tampered with. Metadata retrieved using the HTTP protocol is sent in clear text and can be tampered with. If the service uses the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> and <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> properties, use the URL the service creator supplied to download the data using the HTTPS protocol.  \n  \n## Validating Security  \n Metadata sources can be divided into two broad categories: trust sources and untrusted sources. If you trust a source and have downloaded the client code and other metadata from that source's secure MEX endpoint, then you can build the client, supply it with the right credentials, and run it with no other concerns.  \n  \n However, if you elect to download a client and metadata from a source that you know little about, be sure to validate the security measures the code uses. For example, you must not simply create a client that sends your personal or financial information to a service unless the service demands confidentiality and integrity (at the very least). You should trust the owner of the service to the extent that you are willing to disclose such information because such information will be visible to him or her.  \n  \n As a rule, therefore, when using code and metadata from an untrusted source, check the code and metadata to ensure that it meets the security level that you require.  \n  \n## Setting a Client Credential  \n Setting a client credential on a client consists of two steps:  \n  \n1.  Determine the *client credential type* the service requires. This is accomplished by one of two methods. First, if you have documentation from the service creator, it should specify the client credential type (if any) the service requires. Second, if you have only a configuration file generated by the Svcutil.exe tool, you can examine the individual bindings to determine what credential type is required.  \n  \n2.  Specify an actual client credential. The actual client credential is called a *client credential value* to distinguish it from the type. For example, if the client credential type specifies a certificate, you must supply an X.509 certificate that is issued by a certification authority the service trusts.  \n  \n### Determining the Client Credential Type  \n If you have the configuration file the Svcutil.exe tool generated, examine the [\\<bindings>](../../../docs/framework/configure-apps/file-schema/wcf/bindings.md) section to determine what client credential type is required. Within the section are binding elements that specify the security requirements. Specifically, examine the \\<security> Element of each binding. That element includes the `mode` attribute, which you can set to one of three possible values (`Message`, `Transport`, or `TransportWithMessageCredential`). The value of the attribute determines the mode, and the mode determines which of the child elements is significant.  \n  \n The `<security>` element can contain either a `<transport>` or `<message>` element, or both. The significant element is the one that matches the security mode. For example, the following code specifies that the security mode is `\"Message\"`, and the client credential type for the `<message>` element is `\"Certificate\"`. In this case, the `<transport>` element can be ignored. However, the `<message>` element specifies that an X.509 certificate must be supplied.  \n  \n```  \n<wsHttpBinding>  \n    <binding name=\"WSHttpBinding_ICalculator\">  \n       <security mode=\"Message\">  \n           <transport clientCredentialType=\"Windows\"   \n                      realm=\"\" />  \n           <message clientCredentialType=\"Certificate\"   \n                    negotiateServiceCredential=\"true\"  \n                    algorithmSuite=\"Default\"   \n                    establishSecurityContext=\"true\" />  \n       </security>  \n    </binding>  \n</wsHttpBinding>  \n```  \n  \n Note that if the `clientCredentialType` attribute is set to `\"Windows\"`, as shown in the following example, you do not need to supply an actual credential value. This is because the Windows integrated security provides the actual credential (a Kerberos token) of the person who is running the client.  \n  \n```  \n<security mode=\"Message\">  \n    <transport clientCredentialType=\"Windows \"   \n        realm=\"\" />  \n</security>  \n```  \n  \n### Setting the Client Credential Value  \n If it is determined that the client must supply a credential, use the appropriate method to configure the client. For example, to set a client certificate, use the <xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate%2A> method.  \n  \n A common form of credential is the X.509 certificate. You can supply the credential in two ways:  \n  \n-   By programming it in your client code (using the `SetCertificate` method).  \n  \n By adding a [\\<behaviors>](../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md) section of the configuration file for the client and using the `clientCredentials` element (shown below).  \n  \n#### Setting a \\<clientCredentials> Value in Code  \n To set a [\\<clientCredentials>](../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md) value in code, you must access the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property of the <xref:System.ServiceModel.ClientBase%601> class. The property returns a <xref:System.ServiceModel.Description.ClientCredentials> object that allows access to various credential types, as shown in the following table.  \n  \n|ClientCredential Property|Description|Notes|  \n|-------------------------------|-----------------|-----------|  \n|<xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A>|Returns an <xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential>|Represents an X.509 certificate provided by the client to authenticate itself to the service.|  \n|<xref:System.ServiceModel.Description.ClientCredentials.HttpDigest%2A>|Returns an <xref:System.ServiceModel.Security.HttpDigestClientCredential>|Represents an HTTP digest credential. The credential is a hash of the user name and password.|  \n|<xref:System.ServiceModel.Description.ClientCredentials.IssuedToken%2A>|Returns an <xref:System.ServiceModel.Security.IssuedTokenClientCredential>|Represents a custom security token issued by a Security Token Service, commonly used in federation scenarios.|  \n|<xref:System.ServiceModel.Description.ClientCredentials.Peer%2A>|Returns a <xref:System.ServiceModel.Security.PeerCredential>|Represents a Peer credential for participation in a Peer mesh on a Windows domain.|  \n|<xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>|Returns an <xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential>|Represents an X.509 certificate provided by the service in an out-of-band negotiation.|  \n|<xref:System.ServiceModel.Description.ClientCredentials.UserName%2A>|Returns a <xref:System.ServiceModel.Security.UserNamePasswordClientCredential>|Represents a user name and password pair.|  \n|<xref:System.ServiceModel.Description.ClientCredentials.Windows%2A>|Returns a <xref:System.ServiceModel.Security.WindowsClientCredential>|Represents a Windows client credential (a Kerberos credential). The properties of the class are read-only.|  \n  \n#### Setting a \\<clientCredentials> Value in Configuration  \n Credential values are specified by using an endpoint behavior as child elements of the [\\<clientCredentials>](../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md) element. The element used depends on the client credential type. For example, the following example shows the configuration to set an X.509 certificate using the <[\\<clientCertificate>](../../../docs/framework/configure-apps/file-schema/wcf/clientcertificate-of-clientcredentials-element.md).  \n  \n```  \n<configuration>  \n  <system.serviceModel>  \n    <behaviors>  \n      <endpointBehaviors>  \n        <behavior name=\"myEndpointBehavior\">  \n          <clientCredentials>  \n            <clientCertificate findvalue=\"myMachineName\"   \n            storeLocation=\"Current\" X509FindType=\"FindBySubjectName\" />  \n          </clientCredentials>  \n        </behavior>              \n    </behaviors>  \n  </system.serviceModel>  \n</configuration>  \n```  \n  \n To set the client credential in configuration, add an [\\<endpointBehaviors>](../../../docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md) element to the configuration file. Additionally, the added behavior element must be linked to the service's endpoint using the `behaviorConfiguration` attribute of the [\\<endpoint>](http://msdn.microsoft.com/en-us/13aa23b7-2f08-4add-8dbf-a99f8127c017) element as shown in the following example. The value of the `behaviorConfiguration` attribute must match the value of the behavior `name` attribute.  \n  \n `<configuration>`  \n  \n `<system.serviceModel>`  \n  \n `<client>`  \n  \n `<endpoint address=\"http://localhost/servicemodelsamples/service.svc\"`  \n  \n `binding=\"wsHttpBinding\"`  \n  \n `bindingConfiguration=\"Binding1\"`  \n  \n `behaviorConfiguration=\"myEndpointBehavior\"`  \n  \n `contract=\"Microsoft.ServiceModel.Samples.ICalculator\" />`  \n  \n `</client>`  \n  \n `</system.serviceModel>`  \n  \n `</configuration>`  \n  \n> [!NOTE]\n>  Some of the client credential values cannot be set using application configuration files, for example, user name and password, or Windows user and password values. Such credential values can be specified only in code.  \n  \n [!INCLUDE[crabout](../../../includes/crabout-md.md)] setting the client credential, see [How to: Specify Client Credential Values](../../../docs/framework/wcf/how-to-specify-client-credential-values.md).  \n  \n> [!NOTE]\n>  `ClientCredentialType` is ignored when `SecurityMode` is set to `\"TransportWithMessageCredential\",` as shown in the following sample configuration.  \n  \n```  \n<wsHttpBinding>  \n    <binding name=\"PingBinding\">  \n        <security mode=\"TransportWithMessageCredential\"  >  \n           <message  clientCredentialType=\"UserName\"   \n               establishSecurityContext=\"false\"    \n               negotiateServiceCredential=\"false\" />  \n           <transport clientCredentialType=\"Certificate\"  />  \n         </security>  \n    </binding>  \n</wsHttpBinding>  \n```  \n  \n## See Also  \n <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A>   \n <xref:System.ServiceModel.ClientBase%601>   \n <xref:System.ServiceModel.Description.ClientCredentials>   \n <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A>   \n <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A>   \n [\\<bindings>](../../../docs/framework/configure-apps/file-schema/wcf/bindings.md)   \n [Configuration Editor Tool (SvcConfigEditor.exe)](../../../docs/framework/wcf/configuration-editor-tool-svcconfigeditor-exe.md)   \n [Securing Services](../../../docs/framework/wcf/securing-services.md)   \n [Accessing Services Using a WCF Client](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md)   \n [How to: Specify Client Credential Values](../../../docs/framework/wcf/how-to-specify-client-credential-values.md)   \n [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)   \n [How to: Specify the Client Credential Type](../../../docs/framework/wcf/how-to-specify-the-client-credential-type.md)","nodes":[{"pos":[4,415],"nodes":[{"content":"Securing Clients | Microsoft Docs","nodes":[{"pos":[0,33],"content":"Securing Clients | Microsoft Docs","nodes":[{"content":"Securing Clients | Microsoft Docs","pos":[0,33]}]}],"pos":[6,42],"yaml":true}],"content":"title: \"Securing Clients | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"clients [WCF], security considerations\"\nms.assetid: 44c8578c-9a5b-4acd-8168-1c30a027c4c5\ncaps.latest.revision: 22\nauthor: \"BrucePerlerMS\"\nms.author: \"bruceper\"\nmanager: \"mbaldwin\"","yamlblock":true},{"pos":[422,438],"content":"Securing Clients","linkify":"Securing Clients","nodes":[{"content":"Securing Clients","pos":[0,16]}]},{"content":"In <ph id=\"ph1\">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph>, the service dictates the security requirements for clients.","pos":[439,555],"source":"In [!INCLUDE[indigo1](../../../includes/indigo1-md.md)], the service dictates the security requirements for clients."},{"content":"That is, the service specifies what security mode to use, and whether or not the client must provide a credential.","pos":[556,670]},{"content":"The process of securing a client, therefore, is simple: use the metadata obtained from the service (if it is published) and build a client.","pos":[671,810]},{"content":"The metadata specifies how to configure the client.","pos":[811,862]},{"content":"If the service requires that the client supply a credential, then you must obtain a credential that fits the requirement.","pos":[863,984]},{"content":"This topic discusses the process in further detail.","pos":[985,1036]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> creating a secure service, see <bpt id=\"p1\">[</bpt>Securing Services<ept id=\"p1\">](../../../docs/framework/wcf/securing-services.md)</ept>.","pos":[1037,1191],"source":"[!INCLUDE[crabout](../../../includes/crabout-md.md)] creating a secure service, see [Securing Services](../../../docs/framework/wcf/securing-services.md)."},{"pos":[1200,1230],"content":"The Service Specifies Security","linkify":"The Service Specifies Security","nodes":[{"content":"The Service Specifies Security","pos":[0,30]}]},{"content":"By default, <ph id=\"ph1\">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> bindings have security features enabled.","pos":[1234,1339],"source":"By default, [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] bindings have security features enabled."},{"content":"(The exception is the <ph id=\"ph1\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.) Therefore, if the service was created using <ph id=\"ph2\">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph>, there is a greater chance that it will implement security to ensure authentication, confidentiality, and integrity.","pos":[1340,1621],"source":" (The exception is the <xref:System.ServiceModel.BasicHttpBinding>.) Therefore, if the service was created using [!INCLUDE[indigo2](../../../includes/indigo2-md.md)], there is a greater chance that it will implement security to ensure authentication, confidentiality, and integrity."},{"content":"In that case, the metadata the service provides will indicate what it requires to establish a secure communication channel.","pos":[1622,1745]},{"content":"If the service metadata does not include any security requirements, there is no way to impose a security scheme, such as Secure Sockets Layer (SSL) over HTTP, on a service.","pos":[1746,1918]},{"content":"If, however, the service requires the client to supply a credential, then the client developer, deployer, or administrator must supply the actual credential that the client will use to authenticate itself to the service.","pos":[1919,2139]},{"pos":[2148,2166],"content":"Obtaining Metadata","linkify":"Obtaining Metadata","nodes":[{"content":"Obtaining Metadata","pos":[0,18]}]},{"content":"When creating a client, the first step is to obtain the metadata for the service that the client will communicate with.","pos":[2170,2289]},{"content":"This can be done in two ways.","pos":[2290,2319]},{"content":"First, if the service publishes a metadata exchange (MEX) endpoint or makes its metadata available over HTTP or HTTPS, you can download the metadata using the <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>, which generates both code files for a client as well as a configuration file.","pos":[2320,2687],"source":" First, if the service publishes a metadata exchange (MEX) endpoint or makes its metadata available over HTTP or HTTPS, you can download the metadata using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md), which generates both code files for a client as well as a configuration file."},{"content":"(<ph id=\"ph1\">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> using the tool, see <bpt id=\"p1\">[</bpt>Accessing Services Using a WCF Client<ept id=\"p1\">](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept>.) If the service does not publish a MEX endpoint and also does not make its metadata available over HTTP or HTTPS, you must contact the service creator for documentation that describes the security requirements and the metadata.","pos":[2688,3100],"source":" ([!INCLUDE[crabout](../../../includes/crabout-md.md)] using the tool, see [Accessing Services Using a WCF Client](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md).) If the service does not publish a MEX endpoint and also does not make its metadata available over HTTP or HTTPS, you must contact the service creator for documentation that describes the security requirements and the metadata."},{"pos":[3108,3599],"content":"[!IMPORTANT]\n It is recommended that the metadata come from a trusted source and that it not be tampered with. Metadata retrieved using the HTTP protocol is sent in clear text and can be tampered with. If the service uses the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> and <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> properties, use the URL the service creator supplied to download the data using the HTTPS protocol.","leadings":["","> "],"nodes":[{"content":"It is recommended that the metadata come from a trusted source and that it not be tampered with. Metadata retrieved using the HTTP protocol is sent in clear text and can be tampered with. If the service uses the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> and <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> properties, use the URL the service creator supplied to download the data using the HTTPS protocol.","pos":[14,489],"nodes":[{"content":"It is recommended that the metadata come from a trusted source and that it not be tampered with.","pos":[0,96]},{"content":"Metadata retrieved using the HTTP protocol is sent in clear text and can be tampered with.","pos":[97,187]},{"content":"If the service uses the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A&gt;</ph> properties, use the URL the service creator supplied to download the data using the HTTPS protocol.","pos":[188,475],"source":" If the service uses the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> and <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> properties, use the URL the service creator supplied to download the data using the HTTPS protocol."}]}]},{"pos":[3608,3627],"content":"Validating Security","linkify":"Validating Security","nodes":[{"content":"Validating Security","pos":[0,19]}]},{"content":"Metadata sources can be divided into two broad categories: trust sources and untrusted sources.","pos":[3631,3726]},{"content":"If you trust a source and have downloaded the client code and other metadata from that source's secure MEX endpoint, then you can build the client, supply it with the right credentials, and run it with no other concerns.","pos":[3727,3947]},{"content":"However, if you elect to download a client and metadata from a source that you know little about, be sure to validate the security measures the code uses.","pos":[3954,4108]},{"content":"For example, you must not simply create a client that sends your personal or financial information to a service unless the service demands confidentiality and integrity (at the very least).","pos":[4109,4298]},{"content":"You should trust the owner of the service to the extent that you are willing to disclose such information because such information will be visible to him or her.","pos":[4299,4460]},{"content":"As a rule, therefore, when using code and metadata from an untrusted source, check the code and metadata to ensure that it meets the security level that you require.","pos":[4467,4632]},{"pos":[4641,4668],"content":"Setting a Client Credential","linkify":"Setting a Client Credential","nodes":[{"content":"Setting a Client Credential","pos":[0,27]}]},{"content":"Setting a client credential on a client consists of two steps:","pos":[4672,4734]},{"content":"Determine the <bpt id=\"p1\">*</bpt>client credential type<ept id=\"p1\">*</ept> the service requires.","pos":[4744,4804],"source":"Determine the *client credential type* the service requires."},{"content":"This is accomplished by one of two methods.","pos":[4805,4848]},{"content":"First, if you have documentation from the service creator, it should specify the client credential type (if any) the service requires.","pos":[4849,4983]},{"content":"Second, if you have only a configuration file generated by the Svcutil.exe tool, you can examine the individual bindings to determine what credential type is required.","pos":[4984,5151]},{"content":"Specify an actual client credential.","pos":[5161,5197]},{"content":"The actual client credential is called a <bpt id=\"p1\">*</bpt>client credential value<ept id=\"p1\">*</ept> to distinguish it from the type.","pos":[5198,5297],"source":" The actual client credential is called a *client credential value* to distinguish it from the type."},{"content":"For example, if the client credential type specifies a certificate, you must supply an X.509 certificate that is issued by a certification authority the service trusts.","pos":[5298,5466]},{"pos":[5476,5514],"content":"Determining the Client Credential Type","linkify":"Determining the Client Credential Type","nodes":[{"content":"Determining the Client Credential Type","pos":[0,38]}]},{"content":"If you have the configuration file the Svcutil.exe tool generated, examine the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>bindings&gt;<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/wcf/bindings.md)</ept> section to determine what client credential type is required.","pos":[5518,5740],"source":"If you have the configuration file the Svcutil.exe tool generated, examine the [\\<bindings>](../../../docs/framework/configure-apps/file-schema/wcf/bindings.md) section to determine what client credential type is required."},{"content":"Within the section are binding elements that specify the security requirements.","pos":[5741,5820]},{"content":"Specifically, examine the <ph id=\"ph1\">\\&lt;</ph>security&gt; Element of each binding.","pos":[5821,5883],"source":" Specifically, examine the \\<security> Element of each binding."},{"content":"That element includes the <ph id=\"ph1\">`mode`</ph> attribute, which you can set to one of three possible values (<ph id=\"ph2\">`Message`</ph>, <ph id=\"ph3\">`Transport`</ph>, or <ph id=\"ph4\">`TransportWithMessageCredential`</ph>).","pos":[5884,6040],"source":" That element includes the `mode` attribute, which you can set to one of three possible values (`Message`, `Transport`, or `TransportWithMessageCredential`)."},{"content":"The value of the attribute determines the mode, and the mode determines which of the child elements is significant.","pos":[6041,6156]},{"content":"The <ph id=\"ph1\">`&lt;security&gt;`</ph> element can contain either a <ph id=\"ph2\">`&lt;transport&gt;`</ph> or <ph id=\"ph3\">`&lt;message&gt;`</ph> element, or both.","pos":[6163,6255],"source":"The `<security>` element can contain either a `<transport>` or `<message>` element, or both."},{"content":"The significant element is the one that matches the security mode.","pos":[6256,6322]},{"content":"For example, the following code specifies that the security mode is <ph id=\"ph1\">`\"Message\"`</ph>, and the client credential type for the <ph id=\"ph2\">`&lt;message&gt;`</ph> element is <ph id=\"ph3\">`\"Certificate\"`</ph>.","pos":[6323,6482],"source":" For example, the following code specifies that the security mode is `\"Message\"`, and the client credential type for the `<message>` element is `\"Certificate\"`."},{"content":"In this case, the <ph id=\"ph1\">`&lt;transport&gt;`</ph> element can be ignored.","pos":[6483,6538],"source":" In this case, the `<transport>` element can be ignored."},{"content":"However, the <ph id=\"ph1\">`&lt;message&gt;`</ph> element specifies that an X.509 certificate must be supplied.","pos":[6539,6625],"source":" However, the `<message>` element specifies that an X.509 certificate must be supplied."},{"content":"Note that if the <ph id=\"ph1\">`clientCredentialType`</ph> attribute is set to <ph id=\"ph2\">`\"Windows\"`</ph>, as shown in the following example, you do not need to supply an actual credential value.","pos":[7117,7278],"source":"Note that if the `clientCredentialType` attribute is set to `\"Windows\"`, as shown in the following example, you do not need to supply an actual credential value."},{"content":"This is because the Windows integrated security provides the actual credential (a Kerberos token) of the person who is running the client.","pos":[7279,7417]},{"pos":[7556,7591],"content":"Setting the Client Credential Value","linkify":"Setting the Client Credential Value","nodes":[{"content":"Setting the Client Credential Value","pos":[0,35]}]},{"content":"If it is determined that the client must supply a credential, use the appropriate method to configure the client.","pos":[7595,7708]},{"content":"For example, to set a client certificate, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate%2A&gt;</ph> method.","pos":[7709,7861],"source":" For example, to set a client certificate, use the <xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate%2A> method."},{"content":"A common form of credential is the X.509 certificate.","pos":[7868,7921]},{"content":"You can supply the credential in two ways:","pos":[7922,7964]},{"pos":[7974,8048],"content":"By programming it in your client code (using the <ph id=\"ph1\">`SetCertificate`</ph> method).","source":"By programming it in your client code (using the `SetCertificate` method)."},{"pos":[8055,8256],"content":"By adding a <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>behaviors&gt;<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md)</ept> section of the configuration file for the client and using the <ph id=\"ph2\">`clientCredentials`</ph> element (shown below).","source":"By adding a [\\<behaviors>](../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md) section of the configuration file for the client and using the `clientCredentials` element (shown below)."},{"pos":[8267,8311],"content":"Setting a \\<clientCredentials> Value in Code","linkify":"Setting a \\<clientCredentials> Value in Code","nodes":[{"content":"Setting a <ph id=\"ph1\">\\&lt;</ph>clientCredentials&gt; Value in Code","pos":[0,44],"source":"Setting a \\<clientCredentials> Value in Code"}]},{"content":"To set a <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>clientCredentials&gt;<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md)</ept> value in code, you must access the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class.","pos":[8315,8586],"source":"To set a [\\<clientCredentials>](../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md) value in code, you must access the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property of the <xref:System.ServiceModel.ClientBase%601> class."},{"content":"The property returns a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object that allows access to various credential types, as shown in the following table.","pos":[8587,8754],"source":" The property returns a <xref:System.ServiceModel.Description.ClientCredentials> object that allows access to various credential types, as shown in the following table."},{"content":"ClientCredential Property","pos":[8761,8786]},{"content":"Description","pos":[8787,8798]},{"content":"Notes","pos":[8799,8804]},{"content":"Returns an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential&gt;</ph>","pos":[8953,9040],"source":"Returns an <xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential>"},{"content":"Represents an X.509 certificate provided by the client to authenticate itself to the service.","pos":[9041,9134]},{"content":"Returns an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.HttpDigestClientCredential&gt;</ph>","pos":[9210,9283],"source":"Returns an <xref:System.ServiceModel.Security.HttpDigestClientCredential>"},{"content":"Represents an HTTP digest credential.","pos":[9284,9321]},{"content":"The credential is a hash of the user name and password.","pos":[9322,9377]},{"content":"Returns an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.IssuedTokenClientCredential&gt;</ph>","pos":[9454,9528],"source":"Returns an <xref:System.ServiceModel.Security.IssuedTokenClientCredential>"},{"content":"Represents a custom security token issued by a Security Token Service, commonly used in federation scenarios.","pos":[9529,9638]},{"content":"Returns a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.PeerCredential&gt;</ph>","pos":[9708,9768],"source":"Returns a <xref:System.ServiceModel.Security.PeerCredential>"},{"content":"Represents a Peer credential for participation in a Peer mesh on a Windows domain.","pos":[9769,9851]},{"content":"Returns an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential&gt;</ph>","pos":[9935,10022],"source":"Returns an <xref:System.ServiceModel.Security.X509CertificateRecipientClientCredential>"},{"content":"Represents an X.509 certificate provided by the service in an out-of-band negotiation.","pos":[10023,10109]},{"content":"Returns a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.UserNamePasswordClientCredential&gt;</ph>","pos":[10183,10261],"source":"Returns a <xref:System.ServiceModel.Security.UserNamePasswordClientCredential>"},{"content":"Represents a user name and password pair.","pos":[10262,10303]},{"content":"Returns a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.WindowsClientCredential&gt;</ph>","pos":[10376,10445],"source":"Returns a <xref:System.ServiceModel.Security.WindowsClientCredential>"},{"content":"Represents a Windows client credential (a Kerberos credential).","pos":[10446,10509]},{"content":"The properties of the class are read-only.","pos":[10510,10552]},{"pos":[10564,10617],"content":"Setting a \\<clientCredentials> Value in Configuration","linkify":"Setting a \\<clientCredentials> Value in Configuration","nodes":[{"content":"Setting a <ph id=\"ph1\">\\&lt;</ph>clientCredentials&gt; Value in Configuration","pos":[0,53],"source":"Setting a \\<clientCredentials> Value in Configuration"}]},{"content":"Credential values are specified by using an endpoint behavior as child elements of the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>clientCredentials&gt;<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md)</ept> element.","pos":[10621,10816],"source":"Credential values are specified by using an endpoint behavior as child elements of the [\\<clientCredentials>](../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md) element."},{"content":"The element used depends on the client credential type.","pos":[10817,10872]},{"content":"For example, the following example shows the configuration to set an X.509 certificate using the &lt;<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>clientCertificate&gt;<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/wcf/clientcertificate-of-clientcredentials-element.md)</ept>.","pos":[10873,11100],"source":" For example, the following example shows the configuration to set an X.509 certificate using the <[\\<clientCertificate>](../../../docs/framework/configure-apps/file-schema/wcf/clientcertificate-of-clientcredentials-element.md)."},{"content":"To set the client credential in configuration, add an <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>endpointBehaviors&gt;<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md)</ept> element to the configuration file.","pos":[11557,11745],"source":"To set the client credential in configuration, add an [\\<endpointBehaviors>](../../../docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md) element to the configuration file."},{"content":"Additionally, the added behavior element must be linked to the service's endpoint using the <ph id=\"ph1\">`behaviorConfiguration`</ph> attribute of the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&lt;</ph>endpoint&gt;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept> element as shown in the following example.","pos":[11746,12005],"source":" Additionally, the added behavior element must be linked to the service's endpoint using the `behaviorConfiguration` attribute of the [\\<endpoint>](http://msdn.microsoft.com/en-us/13aa23b7-2f08-4add-8dbf-a99f8127c017) element as shown in the following example."},{"content":"The value of the <ph id=\"ph1\">`behaviorConfiguration`</ph> attribute must match the value of the behavior <ph id=\"ph2\">`name`</ph> attribute.","pos":[12006,12111],"source":" The value of the `behaviorConfiguration` attribute must match the value of the behavior `name` attribute."},{"pos":[12529,12757],"content":"[!NOTE]\n Some of the client credential values cannot be set using application configuration files, for example, user name and password, or Windows user and password values. Such credential values can be specified only in code.","leadings":["","> "],"nodes":[{"content":"Some of the client credential values cannot be set using application configuration files, for example, user name and password, or Windows user and password values. Such credential values can be specified only in code.","pos":[9,226],"nodes":[{"content":"Some of the client credential values cannot be set using application configuration files, for example, user name and password, or Windows user and password values.","pos":[0,163]},{"content":"Such credential values can be specified only in code.","pos":[164,217]}]}]},{"pos":[12764,12967],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> setting the client credential, see <bpt id=\"p1\">[</bpt>How to: Specify Client Credential Values<ept id=\"p1\">](../../../docs/framework/wcf/how-to-specify-client-credential-values.md)</ept>.","source":"[!INCLUDE[crabout](../../../includes/crabout-md.md)] setting the client credential, see [How to: Specify Client Credential Values](../../../docs/framework/wcf/how-to-specify-client-credential-values.md)."},{"pos":[12975,13133],"content":"[!NOTE]\n `ClientCredentialType` is ignored when `SecurityMode` is set to `\"TransportWithMessageCredential\",` as shown in the following sample configuration.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">`ClientCredentialType`</ph> is ignored when <ph id=\"ph2\">`SecurityMode`</ph> is set to <ph id=\"ph3\">`\"TransportWithMessageCredential\",`</ph> as shown in the following sample configuration.","pos":[9,156],"source":"`ClientCredentialType` is ignored when `SecurityMode` is set to `\"TransportWithMessageCredential\",` as shown in the following sample configuration."}]},{"pos":[13556,13564],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph>","pos":[13568,13630],"source":"<xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> "},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph>","pos":[13635,13676],"source":"<xref:System.ServiceModel.ClientBase%601> "},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph>","pos":[13681,13737],"source":"<xref:System.ServiceModel.Description.ClientCredentials> "},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A&gt;</ph>","pos":[13742,13823],"source":"<xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> "},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A&gt;</ph>","pos":[13828,13905],"source":"<xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> "},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>bindings&gt;<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/wcf/bindings.md)</ept><ph id=\"ph2\"> </ph>","pos":[13910,13992],"source":"[\\<bindings>](../../../docs/framework/configure-apps/file-schema/wcf/bindings.md) "},{"content":"<bpt id=\"p1\">[</bpt>Configuration Editor Tool (SvcConfigEditor.exe)<ept id=\"p1\">](../../../docs/framework/wcf/configuration-editor-tool-svcconfigeditor-exe.md)</ept><ph id=\"ph1\"> </ph>","pos":[13996,14124],"source":"[Configuration Editor Tool (SvcConfigEditor.exe)](../../../docs/framework/wcf/configuration-editor-tool-svcconfigeditor-exe.md) "},{"content":"<bpt id=\"p1\">[</bpt>Securing Services<ept id=\"p1\">](../../../docs/framework/wcf/securing-services.md)</ept><ph id=\"ph1\"> </ph>","pos":[14128,14198],"source":"[Securing Services](../../../docs/framework/wcf/securing-services.md) "},{"content":"<bpt id=\"p1\">[</bpt>Accessing Services Using a WCF Client<ept id=\"p1\">](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept><ph id=\"ph1\"> </ph>","pos":[14202,14312],"source":"[Accessing Services Using a WCF Client](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Specify Client Credential Values<ept id=\"p1\">](../../../docs/framework/wcf/how-to-specify-client-credential-values.md)</ept><ph id=\"ph1\"> </ph>","pos":[14316,14431],"source":"[How to: Specify Client Credential Values](../../../docs/framework/wcf/how-to-specify-client-credential-values.md) "},{"content":"<bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept><ph id=\"ph1\"> </ph>","pos":[14435,14565],"source":"[ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Specify the Client Credential Type<ept id=\"p1\">](../../../docs/framework/wcf/how-to-specify-the-client-credential-type.md)</ept>","pos":[14569,14687],"source":"[How to: Specify the Client Credential Type](../../../docs/framework/wcf/how-to-specify-the-client-credential-type.md)"}]}