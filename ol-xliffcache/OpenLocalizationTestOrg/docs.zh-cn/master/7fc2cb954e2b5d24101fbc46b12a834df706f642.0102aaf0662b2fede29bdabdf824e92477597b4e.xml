{"content":"---\ntitle: \"No accessible method &#39;&lt;procedurename&gt;&#39; has a  signature compatible with delegate &#39;&lt;delegatename&gt;&#39;:&lt;suberrorlist&gt; | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"bc30950\"\n  - \"vbc30950\"\nhelpviewer_keywords: \n  - \"BC30950\"\nms.assetid: c1938099-2c03-491e-b599-d0c43bf94baf\ncaps.latest.revision: 7\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# No accessible method &#39;&lt;procedurename&gt;&#39; has a  signature compatible with delegate &#39;&lt;delegatename&gt;&#39;:&lt;suberrorlist&gt;\nAn assignment statement assigns the address of a procedure to a delegate variable, but the compiler cannot find a version of the procedure with a matching signature.  \n  \n When code uses the address of a procedure, the compiler tries to find a version of that procedure with a parameter list that matches that of the delegate. If the procedure is defined in several overloaded versions, the compiler tries to find a single version with a matching signature. For more information, see [Overload Resolution](../../visual-basic/programming-guide/language-features/procedures/overload-resolution.md).  \n  \n If the compiler cannot find any version of the procedure with a matching signature, it generates this error. This can happen, for example, if either the procedure or the delegate is generic and a type argument is passed to it that gives it a signature that does not match the other signature.  \n  \n **Error ID:** BC30950  \n  \n## To correct this error  \n  \n1.  Redefine either the procedure or the delegate so that they have matching parameter lists.  \n  \n     -or-  \n  \n     Define a new delegate with a parameter list matching that of the procedure, or define a new procedure with a parameter list matching that of the delegate.  \n  \n2.  If either the procedure or the delegate is generic, then pass it a type argument that causes its signature to match the other signature.  \n  \n## See Also  \n [AddressOf Operator](../../visual-basic/language-reference/operators/addressof-operator.md)   \n [Delegate Statement](../../visual-basic/language-reference/statements/delegate-statement.md)   \n [NOT IN BUILD: Delegates and the AddressOf Operator](http://msdn.microsoft.com/en-us/7b2ed932-8598-4355-b2f7-5cedb23ee86f)   \n [Overload Resolution](../../visual-basic/programming-guide/language-features/procedures/overload-resolution.md)   \n [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)","nodes":[{"pos":[12,175],"content":"No accessible method &#39;&lt;procedurename&gt;&#39; has a  signature compatible with delegate &#39;&lt;delegatename&gt;&#39;:&lt;suberrorlist&gt; | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"No accessible method &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>procedurename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; has a  signature compatible with delegate &amp;#39;<ph id=\"ph3\">&amp;lt;</ph>delegatename<ph id=\"ph4\">&amp;gt;</ph>&amp;#39;:<ph id=\"ph5\">&amp;lt;</ph>suberrorlist<ph id=\"ph6\">&amp;gt;</ph> | Microsoft Docs","pos":[0,163],"source":"No accessible method &#39;&lt;procedurename&gt;&#39; has a  signature compatible with delegate &#39;&lt;delegatename&gt;&#39;:&lt;suberrorlist&gt; | Microsoft Docs"}]},{"pos":[691,837],"content":"No accessible method &#39;&lt;procedurename&gt;&#39; has a  signature compatible with delegate &#39;&lt;delegatename&gt;&#39;:&lt;suberrorlist&gt;","linkify":"No accessible method &#39;&lt;procedurename&gt;&#39; has a  signature compatible with delegate &#39;&lt;delegatename&gt;&#39;:&lt;suberrorlist&gt;","nodes":[{"content":"No accessible method &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>procedurename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; has a  signature compatible with delegate &amp;#39;<ph id=\"ph3\">&amp;lt;</ph>delegatename<ph id=\"ph4\">&amp;gt;</ph>&amp;#39;:<ph id=\"ph5\">&amp;lt;</ph>suberrorlist<ph id=\"ph6\">&amp;gt;</ph>","pos":[0,146],"source":"No accessible method &#39;&lt;procedurename&gt;&#39; has a  signature compatible with delegate &#39;&lt;delegatename&gt;&#39;:&lt;suberrorlist&gt;"}]},{"content":"An assignment statement assigns the address of a procedure to a delegate variable, but the compiler cannot find a version of the procedure with a matching signature.","pos":[838,1003]},{"content":"When code uses the address of a procedure, the compiler tries to find a version of that procedure with a parameter list that matches that of the delegate.","pos":[1010,1164]},{"content":"If the procedure is defined in several overloaded versions, the compiler tries to find a single version with a matching signature.","pos":[1165,1295]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overload Resolution<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/overload-resolution.md)</ept>.","pos":[1296,1434],"source":" For more information, see [Overload Resolution](../../visual-basic/programming-guide/language-features/procedures/overload-resolution.md)."},{"content":"If the compiler cannot find any version of the procedure with a matching signature, it generates this error.","pos":[1441,1549]},{"content":"This can happen, for example, if either the procedure or the delegate is generic and a type argument is passed to it that gives it a signature that does not match the other signature.","pos":[1550,1733]},{"pos":[1740,1761],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC30950","source":"**Error ID:** BC30950"},{"pos":[1770,1791],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Redefine either the procedure or the delegate so that they have matching parameter lists.","pos":[1801,1890]},{"content":"-or-","pos":[1901,1905]},{"content":"Define a new delegate with a parameter list matching that of the procedure, or define a new procedure with a parameter list matching that of the delegate.","pos":[1916,2070]},{"content":"If either the procedure or the delegate is generic, then pass it a type argument that causes its signature to match the other signature.","pos":[2080,2216]},{"pos":[2225,2233],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>AddressOf Operator<ept id=\"p1\">](../../visual-basic/language-reference/operators/addressof-operator.md)</ept><ph id=\"ph1\"> </ph>","pos":[2237,2329],"source":"[AddressOf Operator](../../visual-basic/language-reference/operators/addressof-operator.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Delegate Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2332,2426],"source":" [Delegate Statement](../../visual-basic/language-reference/statements/delegate-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>NOT IN BUILD: Delegates and the AddressOf Operator<ept id=\"p1\">](http://msdn.microsoft.com/en-us/7b2ed932-8598-4355-b2f7-5cedb23ee86f)</ept><ph id=\"ph1\"> </ph>","pos":[2429,2553],"source":" [NOT IN BUILD: Delegates and the AddressOf Operator](http://msdn.microsoft.com/en-us/7b2ed932-8598-4355-b2f7-5cedb23ee86f) "},{"content":"<bpt id=\"p1\"> [</bpt>Overload Resolution<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/overload-resolution.md)</ept><ph id=\"ph1\"> </ph>","pos":[2556,2669],"source":" [Overload Resolution](../../visual-basic/programming-guide/language-features/procedures/overload-resolution.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","pos":[2672,2788],"source":" [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"}]}