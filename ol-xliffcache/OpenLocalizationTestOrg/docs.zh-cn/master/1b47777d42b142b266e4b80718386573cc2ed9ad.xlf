<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b47777d42b142b266e4b80718386573cc2ed9ad</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\if-then-else-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb8ca6d8cc1a9d77cbef3a311190a8e2503393d2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8565062bd465754367d89cd1b39db90c2128351</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>If...Then...Else Statement (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>If...Then...Else Statement (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Conditionally executes a group of statements, depending on the value of an expression.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Expression.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Must evaluate to <ph id="ph1">`True`</ph> or <ph id="ph2">`False`</ph>, or to a data type that is implicitly convertible to <ph id="ph3">`Boolean`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the expression is a <bpt id="p1">[</bpt>Nullable<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)</ept><ph id="ph1">`Boolean`</ph> variable that evaluates to <bpt id="p2">[</bpt>Nothing<ept id="p2">](../../../visual-basic/language-reference/nothing.md)</ept>, the condition is treated as if the expression is not <ph id="ph2">`True`</ph>, and the <ph id="ph3">`Else`</ph> block is executed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Required in the single-line syntax; optional in the multiple-line syntax.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>One or more statements following <ph id="ph1">`If`</ph>...<ph id="ph2">`Then`</ph> that are executed if <ph id="ph3">`condition`</ph> evaluates to <ph id="ph4">`True`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Required if <ph id="ph1">`ElseIf`</ph> is present.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Expression.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Must evaluate to <ph id="ph1">`True`</ph> or <ph id="ph2">`False`</ph>, or to a data type that is implicitly convertible to <ph id="ph3">`Boolean`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>One or more statements following <ph id="ph1">`ElseIf`</ph>...<ph id="ph2">`Then`</ph> that are executed if <ph id="ph3">`elseifcondition`</ph> evaluates to <ph id="ph4">`True`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>One or more statements that are executed if no previous <ph id="ph1">`condition`</ph> or <ph id="ph2">`elseifcondition`</ph> expression evaluates to <ph id="ph3">`True`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`If`</ph>...<ph id="ph2">`Then`</ph>...<ph id="ph3">`Else`</ph> block.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Multiple-Line Syntax</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When an <ph id="ph1">`If`</ph>...<ph id="ph2">`Then`</ph>...<ph id="ph3">`Else`</ph> statement is encountered, <ph id="ph4">`condition`</ph> is tested.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`condition`</ph> is <ph id="ph2">`True`</ph>, the statements following <ph id="ph3">`Then`</ph> are executed.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`condition`</ph> is <ph id="ph2">`False`</ph>, each <ph id="ph3">`ElseIf`</ph> statement (if there are any) is evaluated in order.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">`True``elseifcondition`</ph> is found, the statements immediately following the associated <ph id="ph2">`ElseIf`</ph> are executed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">`elseifcondition`</ph> evaluates to <ph id="ph2">`True`</ph>, or if there are no <ph id="ph3">`ElseIf`</ph> statements, the statements following <ph id="ph4">`Else`</ph> are executed.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>After executing the statements following <ph id="ph1">`Then`</ph>, <ph id="ph2">`ElseIf`</ph>, or <ph id="ph3">`Else`</ph>, execution continues with the statement following <ph id="ph4">`End If`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ElseIf`</ph> and <ph id="ph2">`Else`</ph> clauses are both optional.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can have as many <ph id="ph1">`ElseIf`</ph> clauses as you want in an <ph id="ph2">`If`</ph>...<ph id="ph3">`Then`</ph>...<ph id="ph4">`Else`</ph> statement, but no <ph id="ph5">`ElseIf`</ph> clause can appear after an <ph id="ph6">`Else`</ph> clause.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`If`</ph>...<ph id="ph2">`Then`</ph>...<ph id="ph3">`Else`</ph> statements can be nested within each other.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the multiple-line syntax, the <ph id="ph1">`If`</ph> statement must be the only statement on the first line.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ElseIf`</ph>, <ph id="ph2">`Else`</ph>, and <ph id="ph3">`End If`</ph> statements can be preceded only by a line label.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`If`</ph>...<ph id="ph2">`Then`</ph>...<ph id="ph3">`Else`</ph> block must end with an <ph id="ph4">`End If`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Select...Case Statement<ept id="p1">](../../../visual-basic/language-reference/statements/select-case-statement.md)</ept> might be more useful when you evaluate a single expression that has several possible values.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Single-Line Syntax</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can use the single-line syntax for short, simple tests.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>However, the multiple-line syntax provides more structure and flexibility and is usually easier to read, maintain, and debug.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>What follows the <ph id="ph1">`Then`</ph> keyword is examined to determine whether a statement is a single-line <ph id="ph2">`If`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If anything other than a comment appears after <ph id="ph1">`Then`</ph> on the same line, the statement is treated as a single-line <ph id="ph2">`If`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Then`</ph> is absent, it must be the start of a multiple-line <ph id="ph2">`If`</ph>...<ph id="ph3">`Then`</ph>...<ph id="ph4">`Else`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the single-line syntax, you can have multiple statements executed as the result of an <ph id="ph1">`If`</ph>...<ph id="ph2">`Then`</ph> decision.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>All statements must be on the same line and be separated by colons.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the multiple-line syntax of the <ph id="ph1">`If`</ph>...<ph id="ph2">`Then`</ph>...<ph id="ph3">`Else`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#101<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/if-then-else-statement_1.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example contains nested <ph id="ph1">`If`</ph>...<ph id="ph2">`Then`</ph>...<ph id="ph3">`Else`</ph> statements.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#102<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/if-then-else-statement_2.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the single-line syntax.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#103<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/if-then-else-statement_3.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>#If...Then...#Else Directives<ept id="p1">](../../../visual-basic/language-reference/directives/if-then-else-directives.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Select...Case Statement<ept id="p1">](../../../visual-basic/language-reference/statements/select-case-statement.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Nested Control Structures<ept id="p1">](../../../visual-basic/programming-guide/language-features/control-flow/nested-control-structures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Decision Structures<ept id="p1">](../../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Logical and Bitwise Operators in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/logical-and-bitwise-operators.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>If Operator<ept id="p1">](../../../visual-basic/language-reference/operators/if-operator.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>