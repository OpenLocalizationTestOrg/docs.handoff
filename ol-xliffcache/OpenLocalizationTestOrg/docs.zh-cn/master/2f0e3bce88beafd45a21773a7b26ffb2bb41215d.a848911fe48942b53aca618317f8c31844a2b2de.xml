{"content":"---\ntitle: \"How to: Access Command-Line Arguments Using foreach (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"command-line arguments [C#]\"\nms.assetid: 89c3e335-3f5b-4e24-8c5a-b8036561fe8a\ncaps.latest.revision: 15\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Access Command-Line Arguments Using foreach (C# Programming Guide)\nAnother approach to iterating over the array is to use the [foreach](../../../csharp/language-reference/keywords/foreach-in.md) statement as shown in this example. The `foreach` statement can be used to iterate over an array, a .NET Framework collection class, or any class or struct that implements the <xref:System.Collections.IEnumerable> interface.  \n  \n> [!NOTE]\n>  When running an application in Visual Studio, you can specify command-line arguments in the [Debug Page, Project Designer](https://docs.microsoft.com/visualstudio/ide/reference/debug-page-project-designer).  \n  \n## Example  \n This example demonstrates how to print out the command line arguments using `foreach`.  \n  \n [!code-cs[csProgGuideMain#10](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/how-to-access-command-line-arguments-using-foreach_1.cs)]  \n  \n [!code-cs[csProgGuideMain#11](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/how-to-access-command-line-arguments-using-foreach_2.cs)]  \n  \n## See Also  \n <xref:System.Array>   \n <xref:System.Collections>   \n [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [foreach, in](../../../csharp/language-reference/keywords/foreach-in.md)   \n [Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md)   \n [How to: Display Command Line Arguments](../../../csharp/programming-guide/main-and-command-args/how-to-display-command-line-arguments.md)   \n [Main() Return Values](../../../csharp/programming-guide/main-and-command-args/main-return-values.md)","nodes":[{"pos":[4,580],"nodes":[{"content":"How to: Access Command-Line Arguments Using foreach (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,91],"content":"How to: Access Command-Line Arguments Using foreach (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"How to: Access Command-Line Arguments Using foreach (C# Programming Guide) | Microsoft Docs","pos":[0,91]}]}],"pos":[6,100],"yaml":true}],"content":"title: \"How to: Access Command-Line Arguments Using foreach (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"command-line arguments [C#]\"\nms.assetid: 89c3e335-3f5b-4e24-8c5a-b8036561fe8a\ncaps.latest.revision: 15\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[587,661],"content":"How to: Access Command-Line Arguments Using foreach (C# Programming Guide)","linkify":"How to: Access Command-Line Arguments Using foreach (C# Programming Guide)","nodes":[{"content":"How to: Access Command-Line Arguments Using foreach (C# Programming Guide)","pos":[0,74]}]},{"content":"Another approach to iterating over the array is to use the <bpt id=\"p1\">[</bpt>foreach<ept id=\"p1\">](../../../csharp/language-reference/keywords/foreach-in.md)</ept> statement as shown in this example.","pos":[662,825],"source":"Another approach to iterating over the array is to use the [foreach](../../../csharp/language-reference/keywords/foreach-in.md) statement as shown in this example."},{"content":"The <ph id=\"ph1\">`foreach`</ph> statement can be used to iterate over an array, a .NET Framework collection class, or any class or struct that implements the <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.","pos":[826,1014],"source":" The `foreach` statement can be used to iterate over an array, a .NET Framework collection class, or any class or struct that implements the <xref:System.Collections.IEnumerable> interface."},{"pos":[1022,1239],"content":"[!NOTE]\n When running an application in Visual Studio, you can specify command-line arguments in the [Debug Page, Project Designer](https://docs.microsoft.com/visualstudio/ide/reference/debug-page-project-designer).","leadings":["","> "],"nodes":[{"content":"When running an application in Visual Studio, you can specify command-line arguments in the <bpt id=\"p1\">[</bpt>Debug Page, Project Designer<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/ide/reference/debug-page-project-designer)</ept>.","pos":[9,215],"source":"When running an application in Visual Studio, you can specify command-line arguments in the [Debug Page, Project Designer](https://docs.microsoft.com/visualstudio/ide/reference/debug-page-project-designer)."}]},{"pos":[1248,1255],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1259,1345],"content":"This example demonstrates how to print out the command line arguments using <ph id=\"ph1\">`foreach`</ph>.","source":"This example demonstrates how to print out the command line arguments using `foreach`."},{"pos":[1352,1509],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideMain#10<ept id=\"p2\">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/how-to-access-command-line-arguments-using-foreach_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideMain#10](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/how-to-access-command-line-arguments-using-foreach_1.cs)]"},{"pos":[1516,1673],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideMain#11<ept id=\"p2\">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/how-to-access-command-line-arguments-using-foreach_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideMain#11](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/how-to-access-command-line-arguments-using-foreach_2.cs)]"},{"pos":[1682,1690],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Array&gt;</ph>","pos":[1694,1713],"source":"<xref:System.Array> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections&gt;</ph>","pos":[1718,1743],"source":"<xref:System.Collections> "},{"content":"<bpt id=\"p1\">[</bpt>Command-line Building With csc.exe<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept><ph id=\"ph1\"> </ph>","pos":[1748,1876],"source":"[Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1880,1947],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>foreach, in<ept id=\"p1\">](../../../csharp/language-reference/keywords/foreach-in.md)</ept><ph id=\"ph1\"> </ph>","pos":[1951,2024],"source":"[foreach, in](../../../csharp/language-reference/keywords/foreach-in.md) "},{"content":"<bpt id=\"p1\">[</bpt>Main() and Command-Line Arguments<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2028,2130],"source":"[Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Display Command Line Arguments<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/how-to-display-command-line-arguments.md)</ept><ph id=\"ph1\"> </ph>","pos":[2134,2273],"source":"[How to: Display Command Line Arguments](../../../csharp/programming-guide/main-and-command-args/how-to-display-command-line-arguments.md) "},{"content":"<bpt id=\"p1\">[</bpt>Main() Return Values<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/main-return-values.md)</ept>","pos":[2277,2378],"source":"[Main() Return Values](../../../csharp/programming-guide/main-and-command-args/main-return-values.md)"}]}