{"content":"---\ntitle: \"How to: Bind to a Collection and Display Information Based on Selection\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"data collections [WPF], selecting data for views\"\n  - \"data binding [WPF], creating views of data collections\"\n  - \"data binding [WPF], selecting data for views\"\n  - \"data binding [WPF], binding to collections\"\nms.assetid: 952a7d76-dd29-49e5-86f5-32c4530e70eb\n---\n# How to: Bind to a Collection and Display Information Based on Selection\nIn a simple master-detail scenario, you have a data-bound <xref:System.Windows.Controls.ItemsControl> such as a <xref:System.Windows.Controls.ListBox>. Based on user selection, you display more information about the selected item. This example shows how to implement this scenario.  \n  \n## Example  \n In this example, `People` is an <xref:System.Collections.ObjectModel.ObservableCollection%601> of `Person` classes. This `Person` class contains three properties: `FirstName`, `LastName`, and `HomeTown`, all of type `string`.  \n  \n [!code-xaml[CollectionBinding#Source](~/samples/snippets/csharp/VS_Snippets_Wpf/CollectionBinding/CSharp/Window1.xaml#source)]  \n[!code-xaml[CollectionBinding#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/CollectionBinding/CSharp/Window1.xaml#ui)]  \n  \n The <xref:System.Windows.Controls.ContentControl> uses the following <xref:System.Windows.DataTemplate> that defines how the information of a `Person` is presented:  \n  \n [!code-xaml[CollectionBinding#DetailTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/CollectionBinding/CSharp/Window1.xaml#detailtemplate)]  \n  \n The following is a screenshot of what the example produces. The <xref:System.Windows.Controls.ContentControl> shows the other properties of the person selected.  \n  \n ![Binding to a collection](./media/databinding-collectionbindingsample.png \"DataBinding_CollectionBindingSample\")  \n  \n The two things to notice in this example are:  \n  \n1.  The <xref:System.Windows.Controls.ListBox> and the <xref:System.Windows.Controls.ContentControl> bind to the same source. The <xref:System.Windows.Data.Binding.Path%2A> properties of both bindings are not specified because both controls are binding to the entire collection object.  \n  \n2.  You must set the <xref:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem%2A> property to `true` for this to work. Setting this property ensures that the selected item is always set as the <xref:System.Windows.Controls.ItemCollection.CurrentItem%2A>. Alternatively, if the <xref:System.Windows.Controls.ListBox> gets it data from a <xref:System.Windows.Data.CollectionViewSource>, it synchronizes selection and currency automatically.  \n  \n Note that the `Person` class overrides the `ToString` method the following way. By default, the <xref:System.Windows.Controls.ListBox> calls `ToString` and displays a string representation of each object in the bound collection. That is why each `Person` appears as a first name in the <xref:System.Windows.Controls.ListBox>.  \n  \n [!code-csharp[CollectionBinding#ToString](~/samples/snippets/csharp/VS_Snippets_Wpf/CollectionBinding/CSharp/Data.cs#tostring)]\n [!code-vb[CollectionBinding#ToString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CollectionBinding/VisualBasic/Person.vb#tostring)]  \n  \n## See also\n\n- [Use the Master-Detail Pattern with Hierarchical Data](how-to-use-the-master-detail-pattern-with-hierarchical-data.md)\n- [Use the Master-Detail Pattern with Hierarchical XML Data](how-to-use-the-master-detail-pattern-with-hierarchical-xml-data.md)\n- [Data Binding Overview](data-binding-overview.md)\n- [Data Templating Overview](data-templating-overview.md)\n- [How-to Topics](data-binding-how-to-topics.md)\n","nodes":[{"pos":[4,427],"embed":true,"restype":"x-metadata","content":"title: \"How to: Bind to a Collection and Display Information Based on Selection\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"data collections [WPF], selecting data for views\"\n  - \"data binding [WPF], creating views of data collections\"\n  - \"data binding [WPF], selecting data for views\"\n  - \"data binding [WPF], binding to collections\"\nms.assetid: 952a7d76-dd29-49e5-86f5-32c4530e70eb","nodes":[{"content":"How to: Bind to a Collection and Display Information Based on Selection","nodes":[{"pos":[0,71],"content":"How to: Bind to a Collection and Display Information Based on Selection","nodes":[{"content":"How to: Bind to a Collection and Display Information Based on Selection","pos":[0,71]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[434,505],"content":"How to: Bind to a Collection and Display Information Based on Selection","linkify":"How to: Bind to a Collection and Display Information Based on Selection","nodes":[{"content":"How to: Bind to a Collection and Display Information Based on Selection","pos":[0,71]}]},{"content":"In a simple master-detail scenario, you have a data-bound <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> such as a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.","pos":[506,657],"source":"In a simple master-detail scenario, you have a data-bound <xref:System.Windows.Controls.ItemsControl> such as a <xref:System.Windows.Controls.ListBox>."},{"content":"Based on user selection, you display more information about the selected item.","pos":[658,736]},{"content":"This example shows how to implement this scenario.","pos":[737,787]},{"pos":[796,803],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In this example, <ph id=\"ph1\">`People`</ph> is an <ph id=\"ph2\">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> of <ph id=\"ph3\">`Person`</ph> classes.","pos":[807,922],"source":"In this example, `People` is an <xref:System.Collections.ObjectModel.ObservableCollection%601> of `Person` classes."},{"content":"This <ph id=\"ph1\">`Person`</ph> class contains three properties: <ph id=\"ph2\">`FirstName`</ph>, <ph id=\"ph3\">`LastName`</ph>, and <ph id=\"ph4\">`HomeTown`</ph>, all of type <ph id=\"ph5\">`string`</ph>.","pos":[923,1032],"source":" This `Person` class contains three properties: `FirstName`, `LastName`, and `HomeTown`, all of type `string`."},{"pos":[1293,1457],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> uses the following <ph id=\"ph2\">&lt;xref:System.Windows.DataTemplate&gt;</ph> that defines how the information of a <ph id=\"ph3\">`Person`</ph> is presented:","source":"The <xref:System.Windows.Controls.ContentControl> uses the following <xref:System.Windows.DataTemplate> that defines how the information of a `Person` is presented:"},{"content":"The following is a screenshot of what the example produces.","pos":[1613,1672]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> shows the other properties of the person selected.","pos":[1673,1773],"source":" The <xref:System.Windows.Controls.ContentControl> shows the other properties of the person selected."},{"pos":[1780,1893],"content":"<bpt id=\"p1\">![</bpt>Binding to a collection<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/databinding-collectionbindingsample.png \"</bpt>DataBinding_CollectionBindingSample<ept id=\"p2\">\")</ept>","source":"![Binding to a collection](./media/databinding-collectionbindingsample.png \"DataBinding_CollectionBindingSample\")"},{"content":"The two things to notice in this example are:","pos":[1900,1945]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> bind to the same source.","pos":[1955,2076],"source":"The <xref:System.Windows.Controls.ListBox> and the <xref:System.Windows.Controls.ContentControl> bind to the same source."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> properties of both bindings are not specified because both controls are binding to the entire collection object.","pos":[2077,2236],"source":" The <xref:System.Windows.Data.Binding.Path%2A> properties of both bindings are not specified because both controls are binding to the entire collection object."},{"content":"You must set the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> for this to work.","pos":[2246,2383],"source":"You must set the <xref:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem%2A> property to `true` for this to work."},{"content":"Setting this property ensures that the selected item is always set as the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ItemCollection.CurrentItem%2A&gt;</ph>.","pos":[2384,2519],"source":" Setting this property ensures that the selected item is always set as the <xref:System.Windows.Controls.ItemCollection.CurrentItem%2A>."},{"content":"Alternatively, if the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> gets it data from a <ph id=\"ph2\">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph>, it synchronizes selection and currency automatically.","pos":[2520,2703],"source":" Alternatively, if the <xref:System.Windows.Controls.ListBox> gets it data from a <xref:System.Windows.Data.CollectionViewSource>, it synchronizes selection and currency automatically."},{"content":"Note that the <ph id=\"ph1\">`Person`</ph> class overrides the <ph id=\"ph2\">`ToString`</ph> method the following way.","pos":[2710,2789],"source":"Note that the `Person` class overrides the `ToString` method the following way."},{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> calls <ph id=\"ph2\">`ToString`</ph> and displays a string representation of each object in the bound collection.","pos":[2790,2938],"source":" By default, the <xref:System.Windows.Controls.ListBox> calls `ToString` and displays a string representation of each object in the bound collection."},{"content":"That is why each <ph id=\"ph1\">`Person`</ph> appears as a first name in the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.","pos":[2939,3035],"source":" That is why each `Person` appears as a first name in the <xref:System.Windows.Controls.ListBox>."},{"pos":[3042,3306],"content":"[!code-csharp[CollectionBinding#ToString](~/samples/snippets/csharp/VS_Snippets_Wpf/CollectionBinding/CSharp/Data.cs#tostring)]\n[!code-vb[CollectionBinding#ToString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CollectionBinding/VisualBasic/Person.vb#tostring)]","leadings":[""," "],"nodes":[]},{"pos":[3315,3323],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3327,3445],"content":"<bpt id=\"p1\">[</bpt>Use the Master-Detail Pattern with Hierarchical Data<ept id=\"p1\">](how-to-use-the-master-detail-pattern-with-hierarchical-data.md)</ept>","source":"[Use the Master-Detail Pattern with Hierarchical Data](how-to-use-the-master-detail-pattern-with-hierarchical-data.md)"},{"pos":[3448,3574],"content":"<bpt id=\"p1\">[</bpt>Use the Master-Detail Pattern with Hierarchical XML Data<ept id=\"p1\">](how-to-use-the-master-detail-pattern-with-hierarchical-xml-data.md)</ept>","source":"[Use the Master-Detail Pattern with Hierarchical XML Data](how-to-use-the-master-detail-pattern-with-hierarchical-xml-data.md)"},{"pos":[3577,3626],"content":"<bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](data-binding-overview.md)</ept>","source":"[Data Binding Overview](data-binding-overview.md)"},{"pos":[3629,3684],"content":"<bpt id=\"p1\">[</bpt>Data Templating Overview<ept id=\"p1\">](data-templating-overview.md)</ept>","source":"[Data Templating Overview](data-templating-overview.md)"},{"pos":[3687,3733],"content":"<bpt id=\"p1\">[</bpt>How-to Topics<ept id=\"p1\">](data-binding-how-to-topics.md)</ept>","source":"[How-to Topics](data-binding-how-to-topics.md)"}]}