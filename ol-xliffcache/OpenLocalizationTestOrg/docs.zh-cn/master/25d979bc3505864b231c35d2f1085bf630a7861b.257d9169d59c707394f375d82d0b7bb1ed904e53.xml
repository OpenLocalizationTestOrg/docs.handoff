{"content":"---\ntitle: \"Customizing Insert, Update, and Delete Operations | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 07eef055-8f6c-414d-850e-d323ff946cd0\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Customizing Insert, Update, and Delete Operations\nBy default, [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] generates dynamic SQL to implement insert, read, update, and delete operations. In practice, however, you typically customize your application to suit your business needs.  \n  \n> [!NOTE]\n>  If you are using [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)], you can use the [!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)] to customize insert, update, and delete actions.  \n  \n This section of topics describes the techniques that [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] provides for customizing insert, read, update, and delete operations in your application.  \n  \n## In This Section  \n [Customizing Operations: Overview](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-overview.md)  \n Describes the various techniques [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] provides for customizing insert, read, update, and delete operations.  \n  \n [Insert, Update, and Delete Operations](../../../../../../docs/framework/data/adonet/sql/linq/insert-update-and-delete-operations.md)  \n Describes the [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] default processes for manipulating database data.  \n  \n [Responsibilities of the Developer In Overriding Default Behavior](../../../../../../docs/framework/data/adonet/sql/linq/responsibilities-of-the-developer-in-overriding-default-behavior.md)  \n Describes the role of the developer in implementing requirements not enforced by [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)].  \n  \n [Adding Business Logic By Using Partial Methods](../../../../../../docs/framework/data/adonet/sql/linq/adding-business-logic-by-using-partial-methods.md)  \n Describes how to use partial methods to override autogenerated methods.","nodes":[{"pos":[12,78],"content":"Customizing Insert, Update, and Delete Operations | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Customizing Insert, Update, and Delete Operations | Microsoft Docs","pos":[0,66]}]},{"pos":[387,436],"content":"Customizing Insert, Update, and Delete Operations","linkify":"Customizing Insert, Update, and Delete Operations","nodes":[{"content":"Customizing Insert, Update, and Delete Operations","pos":[0,49]}]},{"content":"By default, <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> generates dynamic SQL to implement insert, read, update, and delete operations.","pos":[437,596],"source":"By default, [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] generates dynamic SQL to implement insert, read, update, and delete operations."},{"content":"In practice, however, you typically customize your application to suit your business needs.","pos":[597,688]},{"pos":[696,953],"content":"[!NOTE]\n If you are using [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)], you can use the [!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)] to customize insert, update, and delete actions.","leadings":["","> "],"nodes":[{"content":"If you are using <ph id=\"ph1\">[!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)]</ph>, you can use the <ph id=\"ph2\">[!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)]</ph> to customize insert, update, and delete actions.","pos":[9,255],"source":" If you are using [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)], you can use the [!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)] to customize insert, update, and delete actions."}]},{"pos":[960,1170],"content":"This section of topics describes the techniques that <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> provides for customizing insert, read, update, and delete operations in your application.","source":"This section of topics describes the techniques that [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] provides for customizing insert, read, update, and delete operations in your application."},{"pos":[1179,1194],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Customizing Operations: Overview<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-overview.md)</ept>","pos":[1198,1322],"source":"[Customizing Operations: Overview](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-overview.md)"},{"content":"Describes the various techniques <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> provides for customizing insert, read, update, and delete operations.","pos":[1326,1496],"source":" Describes the various techniques [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] provides for customizing insert, read, update, and delete operations."},{"content":"<bpt id=\"p1\">[</bpt>Insert, Update, and Delete Operations<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/insert-update-and-delete-operations.md)</ept>","pos":[1503,1636],"source":"[Insert, Update, and Delete Operations](../../../../../../docs/framework/data/adonet/sql/linq/insert-update-and-delete-operations.md)"},{"content":"Describes the <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> default processes for manipulating database data.","pos":[1640,1771],"source":" Describes the [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] default processes for manipulating database data."},{"content":"<bpt id=\"p1\">[</bpt>Responsibilities of the Developer In Overriding Default Behavior<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/responsibilities-of-the-developer-in-overriding-default-behavior.md)</ept>","pos":[1778,1967],"source":"[Responsibilities of the Developer In Overriding Default Behavior](../../../../../../docs/framework/data/adonet/sql/linq/responsibilities-of-the-developer-in-overriding-default-behavior.md)"},{"content":"Describes the role of the developer in implementing requirements not enforced by <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>.","pos":[1971,2120],"source":" Describes the role of the developer in implementing requirements not enforced by [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]."},{"content":"<bpt id=\"p1\">[</bpt>Adding Business Logic By Using Partial Methods<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/adding-business-logic-by-using-partial-methods.md)</ept>","pos":[2127,2280],"source":"[Adding Business Logic By Using Partial Methods](../../../../../../docs/framework/data/adonet/sql/linq/adding-business-logic-by-using-partial-methods.md)"},{"content":"Describes how to use partial methods to override autogenerated methods.","pos":[2284,2355]}]}