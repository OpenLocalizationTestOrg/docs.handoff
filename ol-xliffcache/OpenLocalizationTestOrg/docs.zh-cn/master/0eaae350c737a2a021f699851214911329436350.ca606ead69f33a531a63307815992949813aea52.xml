{"content":"---\ntitle: \"&lt;MethodInstantiation&gt; Element (.NET Native) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: a3355d78-2a88-4109-8521-830d7cae260a\ncaps.latest.revision: 17\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# &lt;MethodInstantiation&gt; Element (.NET Native)\nApplies runtime reflection policy to a constructed generic method.  \n  \n## Syntax  \n  \n```xml  \n  \n<MethodInstantiation Name=\"method_name\"  \n                     Signature=\"method_signature\"  \n                     Arguments=\"method_arguments\"  \n                     Browse=\"policy_type\"  \n                     Dynamic=\"policy_type\" />  \n  \n```  \n  \n## Attributes and Elements  \n The following sections describe attributes, child elements, and parent elements.  \n  \n### Attributes  \n  \n|Attribute|Attribute type|Description|  \n|---------------|--------------------|-----------------|  \n|`Name`|General|Required attribute. Specifies the method name.|  \n|`Signature`|General|Optional attribute. Specifies named parameters of the method. Multiple named parameters are separated by commas. The `Signature` attribute is used to differentiate overloaded methods.|  \n|`Arguments`|General|Required attribute. Specifies the generic type arguments. If multiple arguments are present, they are separated by commas.|  \n|`Browse`|Reflection|Optional attribute. Controls querying for information about or enumerating a method but does not enable any dynamic invocation at run time.|  \n|`Dynamic`|Reflection|Optional attribute. Controls runtime access to a constructor or method to enable dynamic programming. This policy ensures that a member can be invoked dynamically at run time.|  \n  \n## Name attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*method_name*|The method name. The type of the method is defined by the parent [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element.|  \n  \n## Signature attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*method_signature*|Specifies the named parameters of the method. If multiple parameters are present, they are separated by commas.|  \n  \n## Arguments attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*method_arguments*|Specifies the generic type arguments. If multiple arguments are present, they are separated by commas. Each argument must consist of the fully qualified type name.|  \n  \n## All other attributes  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*policy_setting*|The setting to apply to this policy type for the method. Possible values are `Auto`, `Excluded`, `Included`, and `Required`. For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md).|  \n  \n### Child Elements  \n None.  \n  \n### Parent Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|[\\<Type>](../../../docs/framework/net-native/type-element-net-native.md)|Applies reflection policy to a type and all its members.|  \n|[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)|Applies reflection policy to a constructed generic type and all its members.|  \n  \n## Remarks  \n The `<MethodInstantiation>` element overrides the runtime reflection policy of its corresponding open generic method.  \n  \n## See Also  \n [Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)   \n [Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md)   \n [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)   \n [\\<Method> Element](../../../docs/framework/net-native/method-element-net-native.md)","nodes":[{"pos":[12,78],"content":"&lt;MethodInstantiation&gt; Element (.NET Native) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>MethodInstantiation<ph id=\"ph2\">&amp;gt;</ph> Element (.NET Native) | Microsoft Docs","pos":[0,66],"source":"&lt;MethodInstantiation&gt; Element (.NET Native) | Microsoft Docs"}]},{"pos":[382,431],"content":"&lt;MethodInstantiation&gt; Element (.NET Native)","linkify":"&lt;MethodInstantiation&gt; Element (.NET Native)","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>MethodInstantiation<ph id=\"ph2\">&amp;gt;</ph> Element (.NET Native)","pos":[0,49],"source":"&lt;MethodInstantiation&gt; Element (.NET Native)"}]},{"content":"Applies runtime reflection policy to a constructed generic method.","pos":[432,498]},{"pos":[507,513],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[784,807],"content":"Attributes and Elements","linkify":"Attributes and Elements","nodes":[{"content":"Attributes and Elements","pos":[0,23]}]},{"content":"The following sections describe attributes, child elements, and parent elements.","pos":[811,891]},{"pos":[901,911],"content":"Attributes","linkify":"Attributes","nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"Attribute","pos":[918,927]},{"content":"Attribute type","pos":[928,942]},{"content":"Description","pos":[943,954]},{"content":"General","pos":[1025,1032]},{"content":"Required attribute.","pos":[1033,1052]},{"content":"Specifies the method name.","pos":[1053,1079]},{"content":"General","pos":[1096,1103]},{"content":"Optional attribute.","pos":[1104,1123]},{"content":"Specifies named parameters of the method.","pos":[1124,1165]},{"content":"Multiple named parameters are separated by commas.","pos":[1166,1216]},{"content":"The <ph id=\"ph1\">`Signature`</ph> attribute is used to differentiate overloaded methods.","pos":[1217,1287],"source":" The `Signature` attribute is used to differentiate overloaded methods."},{"content":"General","pos":[1304,1311]},{"content":"Required attribute.","pos":[1312,1331]},{"content":"Specifies the generic type arguments.","pos":[1332,1369]},{"content":"If multiple arguments are present, they are separated by commas.","pos":[1370,1434]},{"content":"Reflection","pos":[1448,1458]},{"content":"Optional attribute.","pos":[1459,1478]},{"content":"Controls querying for information about or enumerating a method but does not enable any dynamic invocation at run time.","pos":[1479,1598]},{"content":"Reflection","pos":[1613,1623]},{"content":"Optional attribute.","pos":[1624,1643]},{"content":"Controls runtime access to a constructor or method to enable dynamic programming.","pos":[1644,1725]},{"content":"This policy ensures that a member can be invoked dynamically at run time.","pos":[1726,1799]},{"pos":[1809,1823],"content":"Name attribute","linkify":"Name attribute","nodes":[{"content":"Name attribute","pos":[0,14]}]},{"content":"Value","pos":[1830,1835]},{"content":"Description","pos":[1836,1847]},{"pos":[1886,1899],"content":"<bpt id=\"p1\">*</bpt>method_name<ept id=\"p1\">*</ept>","source":"*method_name*"},{"content":"The method name.","pos":[1900,1916]},{"content":"The type of the method is defined by the parent <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept> or <bpt id=\"p2\">[</bpt><ph id=\"ph2\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p2\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept> element.","pos":[1917,2148],"source":" The type of the method is defined by the parent [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element."},{"pos":[2158,2177],"content":"Signature attribute","linkify":"Signature attribute","nodes":[{"content":"Signature attribute","pos":[0,19]}]},{"content":"Value","pos":[2184,2189]},{"content":"Description","pos":[2190,2201]},{"pos":[2240,2258],"content":"<bpt id=\"p1\">*</bpt>method_signature<ept id=\"p1\">*</ept>","source":"*method_signature*"},{"content":"Specifies the named parameters of the method.","pos":[2259,2304]},{"content":"If multiple parameters are present, they are separated by commas.","pos":[2305,2370]},{"pos":[2380,2399],"content":"Arguments attribute","linkify":"Arguments attribute","nodes":[{"content":"Arguments attribute","pos":[0,19]}]},{"content":"Value","pos":[2406,2411]},{"content":"Description","pos":[2412,2423]},{"pos":[2462,2480],"content":"<bpt id=\"p1\">*</bpt>method_arguments<ept id=\"p1\">*</ept>","source":"*method_arguments*"},{"content":"Specifies the generic type arguments.","pos":[2481,2518]},{"content":"If multiple arguments are present, they are separated by commas.","pos":[2519,2583]},{"content":"Each argument must consist of the fully qualified type name.","pos":[2584,2644]},{"pos":[2654,2674],"content":"All other attributes","linkify":"All other attributes","nodes":[{"content":"All other attributes","pos":[0,20]}]},{"content":"Value","pos":[2681,2686]},{"content":"Description","pos":[2687,2698]},{"pos":[2737,2753],"content":"<bpt id=\"p1\">*</bpt>policy_setting<ept id=\"p1\">*</ept>","source":"*policy_setting*"},{"content":"The setting to apply to this policy type for the method.","pos":[2754,2810]},{"content":"Possible values are <ph id=\"ph1\">`Auto`</ph>, <ph id=\"ph2\">`Excluded`</ph>, <ph id=\"ph3\">`Included`</ph>, and <ph id=\"ph4\">`Required`</ph>.","pos":[2811,2878],"source":" Possible values are `Auto`, `Excluded`, `Included`, and `Required`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>.","pos":[2879,3014],"source":" For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)."},{"pos":[3025,3039],"content":"Child Elements","linkify":"Child Elements","nodes":[{"content":"Child Elements","pos":[0,14]}]},{"content":"None.","pos":[3043,3048]},{"pos":[3058,3073],"content":"Parent Elements","linkify":"Parent Elements","nodes":[{"content":"Parent Elements","pos":[0,15]}]},{"content":"Element","pos":[3080,3087]},{"content":"Description","pos":[3088,3099]},{"pos":[3140,3212],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept>","source":"[\\<Type>](../../../docs/framework/net-native/type-element-net-native.md)"},{"content":"Applies reflection policy to a type and all its members.","pos":[3213,3269]},{"pos":[3274,3372],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p1\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept>","source":"[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)"},{"content":"Applies reflection policy to a constructed generic type and all its members.","pos":[3373,3449]},{"pos":[3459,3466],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3470,3587],"content":"The <ph id=\"ph1\">`&lt;MethodInstantiation&gt;`</ph> element overrides the runtime reflection policy of its corresponding open generic method.","source":"The `<MethodInstantiation>` element overrides the runtime reflection policy of its corresponding open generic method."},{"pos":[3596,3604],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Runtime Directives (rd.xml) Configuration File Reference<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[3608,3761],"source":"[Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Runtime Directive Elements<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-elements.md)</ept><ph id=\"ph1\"> </ph>","pos":[3764,3860],"source":" [Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept><ph id=\"ph1\"> </ph>","pos":[3863,3973],"source":" [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md) "},{"content":"<bpt id=\"p1\"> [</bpt><ph id=\"ph1\">\\&lt;</ph>Method&gt; Element<ept id=\"p1\">](../../../docs/framework/net-native/method-element-net-native.md)</ept>","pos":[3976,4061],"source":" [\\<Method> Element](../../../docs/framework/net-native/method-element-net-native.md)"}]}