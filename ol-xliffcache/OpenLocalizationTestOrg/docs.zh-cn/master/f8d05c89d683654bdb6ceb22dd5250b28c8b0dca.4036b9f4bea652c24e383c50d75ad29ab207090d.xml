{"content":"---\ntitle: \"Walkthrough: Styling WPF Content | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"WPF Designer, styling WPF content\"\n  - \"interoperability [WDF]\"\n  - \"styles, WPF content\"\nms.assetid: e574aac7-7ea4-4cdb-8034-bab541f000df\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Walkthrough: Styling WPF Content\nThis walkthrough show you how to apply styling to a Windows Presentation Foundation (WPF) control hosted on a Windows Form.  \n  \n In this walkthrough, you perform the following tasks:  \n  \n-   Create the project.  \n  \n-   Create the WPF control type.  \n  \n-   Apply a style to the WPF control.  \n  \n> [!NOTE]\n>  The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3).  \n  \n## Prerequisites  \n You need the following components to complete this walkthrough:  \n  \n-   [!INCLUDE[vs_dev11_long](../../../../includes/vs-dev11-long-md.md)].  \n  \n## Creating the Project  \n The first step is to create the Windows Forms project.  \n  \n> [!NOTE]\n>  When hosting WPF content, only C# and Visual Basic projects are supported.  \n  \n#### To create the project  \n  \n-   Create a new Windows Forms Application project in Visual Basic or Visual C# named `StylingWpfContent`.  \n  \n## Creating the WPF Control Types  \n After you add a WPF control type to the project, you can host it in an <xref:System.Windows.Forms.Integration.ElementHost> control.  \n  \n#### To create WPF control types  \n  \n1.  Add a new WPF <xref:System.Windows.Controls.UserControl> project to the solution. Use the default name for the control type, `UserControl1.xaml`. For more information, see [Walkthrough: Creating New WPF Content on Windows Forms at Design Time](../../../../docs/framework/winforms/advanced/walkthrough-creating-new-wpf-content-on-windows-forms-at-design-time.md).  \n  \n2.  In Design view, make sure that `UserControl1` is selected. For more information, see [How to: Select and Move Elements on the Design Surface](http://msdn.microsoft.com/en-us/54cb70b6-b35b-46e4-a0cc-65189399c474).  \n  \n3.  In the **Properties** window, set the value of the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties to `200`.  \n  \n4.  Add a <xref:System.Windows.Controls.Button?displayProperty=fullName> control to the <xref:System.Windows.Controls.UserControl> and set the value of the <xref:System.Windows.Controls.ContentControl.Content%2A> property to **Cancel**.  \n  \n5.  Add a second <xref:System.Windows.Controls.Button?displayProperty=fullName> control to the <xref:System.Windows.Controls.UserControl> and set the value of the <xref:System.Windows.Controls.ContentControl.Content%2A> property to **OK**.  \n  \n6.  Build the project.  \n  \n## Applying a Style to a WPF Control  \n You can apply different styling to a WPF control to change its appearance and behavior.  \n  \n#### To apply a style to a WPF control  \n  \n1.  Open `Form1` in the Windows Forms Designer.  \n  \n2.  In the **Toolbox**, double-click `UserControl1` to create an instance of `UserControl1` on the form.  \n  \n     An instance of `UserControl1` is hosted in a new <xref:System.Windows.Forms.Integration.ElementHost> control named `elementHost1`.  \n  \n3.  In the smart tag panel for `elementHost1`, click **Edit Hosted Content** from the drop-down list.  \n  \n     `UserControl1` opens in the [!INCLUDE[wpfdesigner_current_short](../../../../includes/wpfdesigner-current-short-md.md)].  \n  \n4.  In XAML view, insert the following XAML after the `<UserControl>` opening tag.  \n  \n     This XAML creates a gradient with a contrasting gradient border. When the control is clicked, the gradients are changed to generate a pressed button look. For more information, see [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md).  \n  \n```xaml  \n<UserControl.Resources>  \n    <LinearGradientBrush x:Key=\"NormalBrush\" EndPoint=\"0,1\" StartPoint=\"0,0\">  \n        <GradientStop Color=\"#FFF\" Offset=\"0.0\"/>  \n        <GradientStop Color=\"#CCC\" Offset=\"1.0\"/>  \n    </LinearGradientBrush>  \n    <LinearGradientBrush x:Key=\"PressedBrush\" EndPoint=\"0,1\" StartPoint=\"0,0\">  \n        <GradientStop Color=\"#BBB\" Offset=\"0.0\"/>  \n        <GradientStop Color=\"#EEE\" Offset=\"0.1\"/>  \n        <GradientStop Color=\"#EEE\" Offset=\"0.9\"/>  \n        <GradientStop Color=\"#FFF\" Offset=\"1.0\"/>  \n    </LinearGradientBrush>  \n    <LinearGradientBrush x:Key=\"NormalBorderBrush\" EndPoint=\"0,1\" StartPoint=\"0,0\">  \n        <GradientStop Color=\"#CCC\" Offset=\"0.0\"/>  \n        <GradientStop Color=\"#444\" Offset=\"1.0\"/>  \n    </LinearGradientBrush>  \n    <LinearGradientBrush x:Key=\"BorderBrush\" EndPoint=\"0,1\" StartPoint=\"0,0\">  \n        <GradientStop Color=\"#CCC\" Offset=\"0.0\"/>  \n        <GradientStop Color=\"#444\" Offset=\"1.0\"/>  \n    </LinearGradientBrush>  \n    <LinearGradientBrush x:Key=\"PressedBorderBrush\" EndPoint=\"0,1\" StartPoint=\"0,0\">  \n        <GradientStop Color=\"#444\" Offset=\"0.0\"/>  \n        <GradientStop Color=\"#888\" Offset=\"1.0\"/>  \n    </LinearGradientBrush>  \n  \n    <Style x:Key=\"SimpleButton\" TargetType=\"{x:Type Button}\" BasedOn=\"{x:Null}\">  \n        <Setter Property=\"Background\" Value=\"{StaticResource NormalBrush}\"/>  \n        <Setter Property=\"BorderBrush\" Value=\"{StaticResource NormalBorderBrush}\"/>  \n        <Setter Property=\"Template\">  \n            <Setter.Value>  \n                <ControlTemplate TargetType=\"{x:Type Button}\">  \n                    <Grid x:Name=\"Grid\">  \n                        <Border x:Name=\"Border\" Background=\"{TemplateBinding Background}\" BorderBrush=\"{TemplateBinding BorderBrush}\" BorderThickness=\"{TemplateBinding BorderThickness}\" Padding=\"{TemplateBinding Padding}\"/>  \n                        <ContentPresenter HorizontalAlignment=\"{TemplateBinding HorizontalContentAlignment}\" Margin=\"{TemplateBinding Padding}\" VerticalAlignment=\"{TemplateBinding VerticalContentAlignment}\" RecognizesAccessKey=\"True\"/>  \n                    </Grid>  \n                    <ControlTemplate.Triggers>  \n                        <Trigger Property=\"IsPressed\" Value=\"true\">  \n                            <Setter Property=\"Background\" Value=\"{StaticResource PressedBrush}\" TargetName=\"Border\"/>  \n                            <Setter Property=\"BorderBrush\" Value=\"{StaticResource PressedBorderBrush}\" TargetName=\"Border\"/>  \n                        </Trigger>  \n                    </ControlTemplate.Triggers>  \n                </ControlTemplate>  \n            </Setter.Value>  \n        </Setter>  \n    </Style>  \n</UserControl.Resources>  \n```  \n  \n1.  Apply the `SimpleButton` style defined in the previous step to the Cancel button by inserting the following XAML in the `<Button>` tag of the Cancel button.  \n  \n    ```  \n    Style=\"{StaticResource SimpleButton}  \n    ```  \n  \n     Your button declaration will resemble the following XAML.  \n  \n```xaml  \n<Button Height=\"23\" Margin=\"41,52,98,0\" Name=\"button1\" VerticalAlignment=\"Top\"  \n                Style=\"{StaticResource SimpleButton}\">Cancel</Button>  \n```  \n  \n1.  Build the project.  \n  \n2.  Open `Form1` in the Windows Forms Designer.  \n  \n3.  The new style is applied to the button control.  \n  \n4.  From the **Debug** menu, select **Start Debugging** to run the application.  \n  \n5.  Click the OK and Cancel buttons and view the differences.  \n  \n## See Also  \n <xref:System.Windows.Forms.Integration.ElementHost>   \n <xref:System.Windows.Forms.Integration.WindowsFormsHost>   \n [Migration and Interoperability](../../../../docs/framework/wpf/advanced/migration-and-interoperability.md)   \n [Using WPF Controls](../../../../docs/framework/winforms/advanced/using-wpf-controls.md)   \n [WPF Designer](http://msdn.microsoft.com/en-us/c6c65214-8411-4e16-b254-163ed4099c26)   \n [XAML Overview (WPF)](../../../../docs/framework/wpf/advanced/xaml-overview-wpf.md)   \n [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md)","nodes":[{"pos":[4,509],"embed":true,"restype":"x-metadata","content":"title: \"Walkthrough: Styling WPF Content | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"WPF Designer, styling WPF content\"\n  - \"interoperability [WDF]\"\n  - \"styles, WPF content\"\nms.assetid: e574aac7-7ea4-4cdb-8034-bab541f000df\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"Walkthrough: Styling WPF Content | Microsoft Docs","nodes":[{"pos":[0,49],"content":"Walkthrough: Styling WPF Content | Microsoft Docs","nodes":[{"content":"Walkthrough: Styling WPF Content | Microsoft Docs","pos":[0,49]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[516,548],"content":"Walkthrough: Styling WPF Content","linkify":"Walkthrough: Styling WPF Content","nodes":[{"content":"Walkthrough: Styling WPF Content","pos":[0,32]}]},{"content":"This walkthrough show you how to apply styling to a Windows Presentation Foundation (WPF) control hosted on a Windows Form.","pos":[549,672]},{"content":"In this walkthrough, you perform the following tasks:","pos":[679,732]},{"content":"Create the project.","pos":[742,761]},{"content":"Create the WPF control type.","pos":[771,799]},{"content":"Apply a style to the WPF control.","pos":[809,842]},{"pos":[850,1226],"content":"[!NOTE]\n The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3).","leadings":["","> "],"nodes":[{"content":"The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3).","pos":[9,374],"nodes":[{"content":"The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition.","pos":[0,130]},{"content":"To change your settings, choose <bpt id=\"p1\">**</bpt>Import and Export Settings<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> menu.","pos":[131,216],"source":" To change your settings, choose **Import and Export Settings** on the **Tools** menu."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Customizing Development Settings in Visual Studio<ept id=\"p1\">](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)</ept>.","pos":[217,365],"source":" For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)."}]}]},{"pos":[1235,1248],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"You need the following components to complete this walkthrough:","pos":[1252,1315]},{"pos":[1392,1393],"content":"."},{"pos":[1402,1422],"content":"Creating the Project","linkify":"Creating the Project","nodes":[{"content":"Creating the Project","pos":[0,20]}]},{"content":"The first step is to create the Windows Forms project.","pos":[1426,1480]},{"pos":[1488,1573],"content":"[!NOTE]\n When hosting WPF content, only C# and Visual Basic projects are supported.","leadings":["","> "],"nodes":[{"content":"When hosting WPF content, only C# and Visual Basic projects are supported.","pos":[9,83]}]},{"pos":[1584,1605],"content":"To create the project","linkify":"To create the project","nodes":[{"content":"To create the project","pos":[0,21]}]},{"pos":[1615,1717],"content":"Create a new Windows Forms Application project in Visual Basic or Visual C# named <ph id=\"ph1\">`StylingWpfContent`</ph>.","source":"Create a new Windows Forms Application project in Visual Basic or Visual C# named `StylingWpfContent`."},{"pos":[1726,1756],"content":"Creating the WPF Control Types","linkify":"Creating the WPF Control Types","nodes":[{"content":"Creating the WPF Control Types","pos":[0,30]}]},{"content":"After you add a WPF control type to the project, you can host it in an <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control.","pos":[1760,1891],"source":"After you add a WPF control type to the project, you can host it in an <xref:System.Windows.Forms.Integration.ElementHost> control."},{"pos":[1902,1929],"content":"To create WPF control types","linkify":"To create WPF control types","nodes":[{"content":"To create WPF control types","pos":[0,27]}]},{"content":"Add a new WPF <ph id=\"ph1\">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> project to the solution.","pos":[1939,2020],"source":"Add a new WPF <xref:System.Windows.Controls.UserControl> project to the solution."},{"content":"Use the default name for the control type, <ph id=\"ph1\">`UserControl1.xaml`</ph>.","pos":[2021,2084],"source":" Use the default name for the control type, `UserControl1.xaml`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating New WPF Content on Windows Forms at Design Time<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/walkthrough-creating-new-wpf-content-on-windows-forms-at-design-time.md)</ept>.","pos":[2085,2301],"source":" For more information, see [Walkthrough: Creating New WPF Content on Windows Forms at Design Time](../../../../docs/framework/winforms/advanced/walkthrough-creating-new-wpf-content-on-windows-forms-at-design-time.md)."},{"content":"In Design view, make sure that <ph id=\"ph1\">`UserControl1`</ph> is selected.","pos":[2311,2369],"source":"In Design view, make sure that `UserControl1` is selected."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Select and Move Elements on the Design Surface<ept id=\"p1\">](http://msdn.microsoft.com/en-us/54cb70b6-b35b-46e4-a0cc-65189399c474)</ept>.","pos":[2370,2523],"source":" For more information, see [How to: Select and Move Elements on the Design Surface](http://msdn.microsoft.com/en-us/54cb70b6-b35b-46e4-a0cc-65189399c474)."},{"pos":[2533,2705],"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, set the value of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> properties to <ph id=\"ph3\">`200`</ph>.","source":"In the **Properties** window, set the value of the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties to `200`."},{"pos":[2715,2947],"content":"Add a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button?displayProperty=fullName&gt;</ph> control to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> and set the value of the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> property to <bpt id=\"p1\">**</bpt>Cancel<ept id=\"p1\">**</ept>.","source":"Add a <xref:System.Windows.Controls.Button?displayProperty=fullName> control to the <xref:System.Windows.Controls.UserControl> and set the value of the <xref:System.Windows.Controls.ContentControl.Content%2A> property to **Cancel**."},{"pos":[2957,3192],"content":"Add a second <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button?displayProperty=fullName&gt;</ph> control to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> and set the value of the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> property to <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","source":"Add a second <xref:System.Windows.Controls.Button?displayProperty=fullName> control to the <xref:System.Windows.Controls.UserControl> and set the value of the <xref:System.Windows.Controls.ContentControl.Content%2A> property to **OK**."},{"content":"Build the project.","pos":[3202,3220]},{"pos":[3229,3262],"content":"Applying a Style to a WPF Control","linkify":"Applying a Style to a WPF Control","nodes":[{"content":"Applying a Style to a WPF Control","pos":[0,33]}]},{"content":"You can apply different styling to a WPF control to change its appearance and behavior.","pos":[3266,3353]},{"pos":[3364,3397],"content":"To apply a style to a WPF control","linkify":"To apply a style to a WPF control","nodes":[{"content":"To apply a style to a WPF control","pos":[0,33]}]},{"pos":[3407,3450],"content":"Open <ph id=\"ph1\">`Form1`</ph> in the Windows Forms Designer.","source":"Open `Form1` in the Windows Forms Designer."},{"pos":[3460,3560],"content":"In the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept>, double-click <ph id=\"ph1\">`UserControl1`</ph> to create an instance of <ph id=\"ph2\">`UserControl1`</ph> on the form.","source":"In the **Toolbox**, double-click `UserControl1` to create an instance of `UserControl1` on the form."},{"pos":[3571,3701],"content":"An instance of <ph id=\"ph1\">`UserControl1`</ph> is hosted in a new <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control named <ph id=\"ph3\">`elementHost1`</ph>.","source":"An instance of `UserControl1` is hosted in a new <xref:System.Windows.Forms.Integration.ElementHost> control named `elementHost1`."},{"pos":[3711,3808],"content":"In the smart tag panel for <ph id=\"ph1\">`elementHost1`</ph>, click <bpt id=\"p1\">**</bpt>Edit Hosted Content<ept id=\"p1\">**</ept> from the drop-down list.","source":"In the smart tag panel for `elementHost1`, click **Edit Hosted Content** from the drop-down list."},{"pos":[3819,3939],"content":"<ph id=\"ph1\">`UserControl1`</ph> opens in the <ph id=\"ph2\">[!INCLUDE[wpfdesigner_current_short](../../../../includes/wpfdesigner-current-short-md.md)]</ph>.","source":"`UserControl1` opens in the [!INCLUDE[wpfdesigner_current_short](../../../../includes/wpfdesigner-current-short-md.md)]."},{"pos":[3949,4027],"content":"In XAML view, insert the following XAML after the <ph id=\"ph1\">`&lt;UserControl&gt;`</ph> opening tag.","source":"In XAML view, insert the following XAML after the `<UserControl>` opening tag."},{"content":"This XAML creates a gradient with a contrasting gradient border.","pos":[4038,4102]},{"content":"When the control is clicked, the gradients are changed to generate a pressed button look.","pos":[4103,4192]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept>.","pos":[4193,4311],"source":" For more information, see [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md)."},{"pos":[7052,7208],"content":"Apply the <ph id=\"ph1\">`SimpleButton`</ph> style defined in the previous step to the Cancel button by inserting the following XAML in the <ph id=\"ph2\">`&lt;Button&gt;`</ph> tag of the Cancel button.","source":"Apply the `SimpleButton` style defined in the previous step to the Cancel button by inserting the following XAML in the `<Button>` tag of the Cancel button."},{"content":"Your button declaration will resemble the following XAML.","pos":[7285,7342]},{"content":"Build the project.","pos":[7524,7542]},{"pos":[7552,7595],"content":"Open <ph id=\"ph1\">`Form1`</ph> in the Windows Forms Designer.","source":"Open `Form1` in the Windows Forms Designer."},{"content":"The new style is applied to the button control.","pos":[7605,7652]},{"pos":[7662,7737],"content":"From the <bpt id=\"p1\">**</bpt>Debug<ept id=\"p1\">**</ept> menu, select <bpt id=\"p2\">**</bpt>Start Debugging<ept id=\"p2\">**</ept> to run the application.","source":"From the **Debug** menu, select **Start Debugging** to run the application."},{"content":"Click the OK and Cancel buttons and view the differences.","pos":[7747,7804]},{"pos":[7813,7821],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph>","pos":[7825,7876],"source":"<xref:System.Windows.Forms.Integration.ElementHost> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph>","pos":[7881,7937],"source":"<xref:System.Windows.Forms.Integration.WindowsFormsHost> "},{"content":"<bpt id=\"p1\">[</bpt>Migration and Interoperability<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/migration-and-interoperability.md)</ept><ph id=\"ph1\"> </ph>","pos":[7942,8050],"source":"[Migration and Interoperability](../../../../docs/framework/wpf/advanced/migration-and-interoperability.md) "},{"content":"<bpt id=\"p1\">[</bpt>Using WPF Controls<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/using-wpf-controls.md)</ept><ph id=\"ph1\"> </ph>","pos":[8054,8143],"source":"[Using WPF Controls](../../../../docs/framework/winforms/advanced/using-wpf-controls.md) "},{"content":"<bpt id=\"p1\">[</bpt>WPF Designer<ept id=\"p1\">](http://msdn.microsoft.com/en-us/c6c65214-8411-4e16-b254-163ed4099c26)</ept><ph id=\"ph1\"> </ph>","pos":[8147,8232],"source":"[WPF Designer](http://msdn.microsoft.com/en-us/c6c65214-8411-4e16-b254-163ed4099c26) "},{"content":"<bpt id=\"p1\">[</bpt>XAML Overview (WPF)<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/xaml-overview-wpf.md)</ept><ph id=\"ph1\"> </ph>","pos":[8236,8320],"source":"[XAML Overview (WPF)](../../../../docs/framework/wpf/advanced/xaml-overview-wpf.md) "},{"content":"<bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept>","pos":[8324,8415],"source":"[Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md)"}]}