{"content":"---\ntitle: \"x:Member Directive | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 4d8394ef-644c-4331-b6c5-be855d392980\ncaps.latest.revision: 5\nauthor: \"wadepickett\"\nms.author: \"wpickett\"\nmanager: \"wpickett\"\n---\n# x:Member Directive\nDeclares a XAML member in markup.  \n  \n## XAML Object Element Usage  \n  \n```  \n  \n<object x:Class=\"className\">  \n  <x:Members>  \n    <x:Member Name=\"propertyName\"/>  \n    additionalMembers  \n  </x:Members>  \n</object>  \n```  \n  \n## XAML Values  \n  \n|||  \n|-|-|  \n|`className`|Name of the backing class or partial class for the XAML production.|  \n|`memberName`|Member name of the property being defined.|  \n  \n## Remarks  \n In the .NET Framework XAML Services implementation, . `x:Member` does not have a direct type backing, but is supported by the <xref:System.Windows.Markup.MemberDefinition> class. In a XAML node stream, an `x:Member` element is represented as a member named `Member`, from the XAML language XAML namespace. The member `Member` holds attributes as declared by markup.  \n  \n The meaning of `Name` and `Type` are not assigned at the .NET Framework XAML Services level. They are stored in the initial XAML node stream as string values, to be interpreted later under the rules that might be imposed by specific frameworks. The meaning might align to a XAML name and XAML type meaning, or might only be valid in a backing type system, depending on the implementation.  \n  \n To support a practical usage of `x:Members` as a means to specify member definitions in markup, the members must be associated with a class that can be modified. The intended model is that `x:Members` exists as a member of a type that specifies an `x:Class`. However, the mechanism for associating types and members or for producing dynamic member definitions is not supported at the .NET Framework XAML Services level. This is left to individual frameworks that have application models that support member definitions from XAML. Typically, MSBUILD build actions that markup-compile the XAML and either integrate it with code-behind or produce pure from-XAML assemblies are needed to support that feature.  \n  \n## x:Property for Windows Workflow Foundation  \n For Windows Workflow Foundation, `x:Property` defines the members of a custom activity composed entirely in XAML, or XAML –defined dynamic members for an activity designer with code-behind. `x:Class` must also be specified on the root element of the XAML production. This is not a requirement at the .NET Framework XAML Services level, but becomes a requirement when the XAML production is loaded by the MSBUILD build actions that support custom activities and Windows Workflow Foundation XAML in general. Windows Workflow Foundation does not use the pure XAML type name as its intended value for the `x:Property` `Type` attribute, and instead uses a convention that is not documented here. For more information, see [Dynamic Activity Creation](http://msdn.microsoft.com/library/dd807392.aspx).","nodes":[{"pos":[12,47],"content":"x:Member Directive | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"x:Member Directive | Microsoft Docs","pos":[0,35]}]},{"pos":[354,372],"content":"x:Member Directive","linkify":"x:Member Directive","nodes":[{"content":"x:Member Directive","pos":[0,18]}]},{"content":"Declares a XAML member in markup.","pos":[373,406]},{"pos":[415,440],"content":"XAML Object Element Usage","linkify":"XAML Object Element Usage","nodes":[{"content":"XAML Object Element Usage","pos":[0,25]}]},{"pos":[605,616],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"content":"Name of the backing class or partial class for the XAML production.","pos":[649,716]},{"content":"Member name of the property being defined.","pos":[734,776]},{"pos":[786,793],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"In the .NET Framework XAML Services implementation, .","pos":[797,850]},{"content":"<ph id=\"ph1\">`x:Member`</ph> does not have a direct type backing, but is supported by the <ph id=\"ph2\">&lt;xref:System.Windows.Markup.MemberDefinition&gt;</ph> class.","pos":[851,975],"source":"`x:Member` does not have a direct type backing, but is supported by the <xref:System.Windows.Markup.MemberDefinition> class."},{"content":"In a XAML node stream, an <ph id=\"ph1\">`x:Member`</ph> element is represented as a member named <ph id=\"ph2\">`Member`</ph>, from the XAML language XAML namespace.","pos":[976,1102],"source":" In a XAML node stream, an `x:Member` element is represented as a member named `Member`, from the XAML language XAML namespace."},{"content":"The member <ph id=\"ph1\">`Member`</ph> holds attributes as declared by markup.","pos":[1103,1162],"source":" The member `Member` holds attributes as declared by markup."},{"content":"The meaning of <ph id=\"ph1\">`Name`</ph> and <ph id=\"ph2\">`Type`</ph> are not assigned at the .NET Framework XAML Services level.","pos":[1169,1261],"source":"The meaning of `Name` and `Type` are not assigned at the .NET Framework XAML Services level."},{"content":"They are stored in the initial XAML node stream as string values, to be interpreted later under the rules that might be imposed by specific frameworks.","pos":[1262,1413]},{"content":"The meaning might align to a XAML name and XAML type meaning, or might only be valid in a backing type system, depending on the implementation.","pos":[1414,1557]},{"content":"To support a practical usage of <ph id=\"ph1\">`x:Members`</ph> as a means to specify member definitions in markup, the members must be associated with a class that can be modified.","pos":[1564,1725],"source":"To support a practical usage of `x:Members` as a means to specify member definitions in markup, the members must be associated with a class that can be modified."},{"content":"The intended model is that <ph id=\"ph1\">`x:Members`</ph> exists as a member of a type that specifies an <ph id=\"ph2\">`x:Class`</ph>.","pos":[1726,1822],"source":" The intended model is that `x:Members` exists as a member of a type that specifies an `x:Class`."},{"content":"However, the mechanism for associating types and members or for producing dynamic member definitions is not supported at the .NET Framework XAML Services level.","pos":[1823,1983]},{"content":"This is left to individual frameworks that have application models that support member definitions from XAML.","pos":[1984,2093]},{"content":"Typically, MSBUILD build actions that markup-compile the XAML and either integrate it with code-behind or produce pure from-XAML assemblies are needed to support that feature.","pos":[2094,2269]},{"pos":[2278,2320],"content":"x:Property for Windows Workflow Foundation","linkify":"x:Property for Windows Workflow Foundation","nodes":[{"content":"x:Property for Windows Workflow Foundation","pos":[0,42]}]},{"content":"For Windows Workflow Foundation, <ph id=\"ph1\">`x:Property`</ph> defines the members of a custom activity composed entirely in XAML, or XAML –defined dynamic members for an activity designer with code-behind.","pos":[2324,2513],"source":"For Windows Workflow Foundation, `x:Property` defines the members of a custom activity composed entirely in XAML, or XAML –defined dynamic members for an activity designer with code-behind."},{"content":"<ph id=\"ph1\">`x:Class`</ph> must also be specified on the root element of the XAML production.","pos":[2514,2590],"source":"`x:Class` must also be specified on the root element of the XAML production."},{"content":"This is not a requirement at the .NET Framework XAML Services level, but becomes a requirement when the XAML production is loaded by the MSBUILD build actions that support custom activities and Windows Workflow Foundation XAML in general.","pos":[2591,2829]},{"content":"Windows Workflow Foundation does not use the pure XAML type name as its intended value for the <ph id=\"ph1\">`x:Property`</ph> <ph id=\"ph2\">`Type`</ph> attribute, and instead uses a convention that is not documented here.","pos":[2830,3014],"source":" Windows Workflow Foundation does not use the pure XAML type name as its intended value for the `x:Property` `Type` attribute, and instead uses a convention that is not documented here."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Dynamic Activity Creation<ept id=\"p1\">](http://msdn.microsoft.com/library/dd807392.aspx)</ept>.","pos":[3015,3118],"source":" For more information, see [Dynamic Activity Creation](http://msdn.microsoft.com/library/dd807392.aspx)."}]}