{"content":"---\ntitle: \"Shadows (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.Shadows\"\n  - \"shadows\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"shadowing\"\n  - \"duplicate names\"\n  - \"scope, shadowing\"\n  - \"Shadows keyword\"\n  - \"names, shadowing\"\nms.assetid: 6bf687cd-0544-4797-b51b-911125ec57c6\ncaps.latest.revision: 16\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Shadows (Visual Basic)\nSpecifies that a declared programming element redeclares and hides an identically named element, or set of overloaded elements, in a base class.  \n  \n## Remarks  \n The main purpose of shadowing (which is also known as *hiding by name*) is to preserve the definition of your class members. The base class might undergo a change that creates an element with the same name as one you have already defined. If this happens, the `Shadows` modifier forces references through your class to be resolved to the member you defined, instead of to the new base class element.  \n  \n Both shadowing and overriding redefine an inherited element, but there are significant differences between the two approaches. For more information, see [Shadowing in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md).  \n  \n## Rules  \n  \n-   **Declaration Context.** You can use `Shadows` only at class level. This means the declaration context for a `Shadows` element must be a class, and cannot be a source file, namespace, interface, module, structure, or procedure.  \n  \n     You can declare only one shadowing element in a single declaration statement.  \n  \n-   **Combined Modifiers.** You cannot specify `Shadows` together with `Overloads`, `Overrides`, or `Static` in the same declaration.  \n  \n-   **Element Types.** You can shadow any kind of declared element with any other kind. If you shadow a property or procedure with another property or procedure, the parameters and the return type do not have to match those in the base class property or procedure.  \n  \n-   **Accessing.** The shadowed element in the base class is normally unavailable from within the derived class that shadows it. However, the following considerations apply.  \n  \n    -   If the shadowing element is not accessible from the code referring to it, the reference is resolved to the shadowed element. For example, if a `Private` element shadows a base class element, code that does not have permission to access the `Private` element accesses the base class element instead.  \n  \n    -   If you shadow an element, you can still access the shadowed element through an object declared with the type of the base class. You can also access it through `MyBase`.  \n  \n The `Shadows` modifier can be used in these contexts:  \n  \n [Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)  \n  \n [Const Statement](../../../visual-basic/language-reference/statements/const-statement.md)  \n  \n [Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)  \n  \n [Delegate Statement](../../../visual-basic/language-reference/statements/delegate-statement.md)  \n  \n [Dim Statement](../../../visual-basic/language-reference/statements/dim-statement.md)  \n  \n [Enum Statement](../../../visual-basic/language-reference/statements/enum-statement.md)  \n  \n [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)  \n  \n [Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)  \n  \n [Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md)  \n  \n [Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)  \n  \n [Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md)  \n  \n [Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)  \n  \n## See Also  \n [Shared](../../../visual-basic/language-reference/modifiers/shared.md)   \n [Static](../../../visual-basic/language-reference/modifiers/static.md)   \n [Private](../../../visual-basic/language-reference/modifiers/private.md)   \n [Me, My, MyBase, and MyClass](../../../visual-basic/programming-guide/program-structure/me-my-mybase-and-myclass.md)   \n [Inheritance Basics](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)   \n [MustOverride](../../../visual-basic/language-reference/modifiers/mustoverride.md)   \n [NotOverridable](../../../visual-basic/language-reference/modifiers/notoverridable.md)   \n [Overloads](../../../visual-basic/language-reference/modifiers/overloads.md)   \n [Overridable](../../../visual-basic/language-reference/modifiers/overridable.md)   \n [Overrides](../../../visual-basic/language-reference/modifiers/overrides.md)   \n [Shadowing in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)","nodes":[{"pos":[12,51],"content":"Shadows (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Shadows (Visual Basic) | Microsoft Docs","pos":[0,39]}]},{"pos":[669,691],"content":"Shadows (Visual Basic)","linkify":"Shadows (Visual Basic)","nodes":[{"content":"Shadows (Visual Basic)","pos":[0,22]}]},{"content":"Specifies that a declared programming element redeclares and hides an identically named element, or set of overloaded elements, in a base class.","pos":[692,836]},{"pos":[845,852],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The main purpose of shadowing (which is also known as <bpt id=\"p1\">*</bpt>hiding by name<ept id=\"p1\">*</ept>) is to preserve the definition of your class members.","pos":[856,980],"source":"The main purpose of shadowing (which is also known as *hiding by name*) is to preserve the definition of your class members."},{"content":"The base class might undergo a change that creates an element with the same name as one you have already defined.","pos":[981,1094]},{"content":"If this happens, the <ph id=\"ph1\">`Shadows`</ph> modifier forces references through your class to be resolved to the member you defined, instead of to the new base class element.","pos":[1095,1255],"source":" If this happens, the `Shadows` modifier forces references through your class to be resolved to the member you defined, instead of to the new base class element."},{"content":"Both shadowing and overriding redefine an inherited element, but there are significant differences between the two approaches.","pos":[1262,1388]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Shadowing in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)</ept>.","pos":[1389,1533],"source":" For more information, see [Shadowing in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)."},{"pos":[1542,1547],"content":"Rules","linkify":"Rules","nodes":[{"content":"Rules","pos":[0,5]}]},{"content":"<bpt id=\"p1\">**</bpt>Declaration Context.<ept id=\"p1\">**</ept>","pos":[1557,1581],"source":"**Declaration Context.**"},{"content":"You can use <ph id=\"ph1\">`Shadows`</ph> only at class level.","pos":[1582,1624],"source":" You can use `Shadows` only at class level."},{"content":"This means the declaration context for a <ph id=\"ph1\">`Shadows`</ph> element must be a class, and cannot be a source file, namespace, interface, module, structure, or procedure.","pos":[1625,1784],"source":" This means the declaration context for a `Shadows` element must be a class, and cannot be a source file, namespace, interface, module, structure, or procedure."},{"content":"You can declare only one shadowing element in a single declaration statement.","pos":[1795,1872]},{"content":"<bpt id=\"p1\">**</bpt>Combined Modifiers.<ept id=\"p1\">**</ept>","pos":[1882,1905],"source":"**Combined Modifiers.**"},{"content":"You cannot specify <ph id=\"ph1\">`Shadows`</ph> together with <ph id=\"ph2\">`Overloads`</ph>, <ph id=\"ph3\">`Overrides`</ph>, or <ph id=\"ph4\">`Static`</ph> in the same declaration.","pos":[1906,2011],"source":" You cannot specify `Shadows` together with `Overloads`, `Overrides`, or `Static` in the same declaration."},{"content":"<bpt id=\"p1\">**</bpt>Element Types.<ept id=\"p1\">**</ept>","pos":[2021,2039],"source":"**Element Types.**"},{"content":"You can shadow any kind of declared element with any other kind.","pos":[2040,2104]},{"content":"If you shadow a property or procedure with another property or procedure, the parameters and the return type do not have to match those in the base class property or procedure.","pos":[2105,2281]},{"content":"<bpt id=\"p1\">**</bpt>Accessing.<ept id=\"p1\">**</ept>","pos":[2291,2305],"source":"**Accessing.**"},{"content":"The shadowed element in the base class is normally unavailable from within the derived class that shadows it.","pos":[2306,2415]},{"content":"However, the following considerations apply.","pos":[2416,2460]},{"content":"If the shadowing element is not accessible from the code referring to it, the reference is resolved to the shadowed element.","pos":[2474,2598]},{"content":"For example, if a <ph id=\"ph1\">`Private`</ph> element shadows a base class element, code that does not have permission to access the <ph id=\"ph2\">`Private`</ph> element accesses the base class element instead.","pos":[2599,2772],"source":" For example, if a `Private` element shadows a base class element, code that does not have permission to access the `Private` element accesses the base class element instead."},{"content":"If you shadow an element, you can still access the shadowed element through an object declared with the type of the base class.","pos":[2786,2913]},{"content":"You can also access it through <ph id=\"ph1\">`MyBase`</ph>.","pos":[2914,2954],"source":" You can also access it through `MyBase`."},{"pos":[2961,3014],"content":"The <ph id=\"ph1\">`Shadows`</ph> modifier can be used in these contexts:","source":"The `Shadows` modifier can be used in these contexts:"},{"pos":[3021,3110],"content":"<bpt id=\"p1\">[</bpt>Class Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/class-statement.md)</ept>","source":"[Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)"},{"pos":[3117,3206],"content":"<bpt id=\"p1\">[</bpt>Const Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/const-statement.md)</ept>","source":"[Const Statement](../../../visual-basic/language-reference/statements/const-statement.md)"},{"pos":[3213,3306],"content":"<bpt id=\"p1\">[</bpt>Declare Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept>","source":"[Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)"},{"pos":[3313,3408],"content":"<bpt id=\"p1\">[</bpt>Delegate Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept>","source":"[Delegate Statement](../../../visual-basic/language-reference/statements/delegate-statement.md)"},{"pos":[3415,3500],"content":"<bpt id=\"p1\">[</bpt>Dim Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/dim-statement.md)</ept>","source":"[Dim Statement](../../../visual-basic/language-reference/statements/dim-statement.md)"},{"pos":[3507,3594],"content":"<bpt id=\"p1\">[</bpt>Enum Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/enum-statement.md)</ept>","source":"[Enum Statement](../../../visual-basic/language-reference/statements/enum-statement.md)"},{"pos":[3601,3690],"content":"<bpt id=\"p1\">[</bpt>Event Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>","source":"[Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)"},{"pos":[3697,3792],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[3799,3896],"content":"<bpt id=\"p1\">[</bpt>Interface Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/interface-statement.md)</ept>","source":"[Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md)"},{"pos":[3903,3998],"content":"<bpt id=\"p1\">[</bpt>Property Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/property-statement.md)</ept>","source":"[Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)"},{"pos":[4005,4102],"content":"<bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept>","source":"[Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md)"},{"pos":[4109,4194],"content":"<bpt id=\"p1\">[</bpt>Sub Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept>","source":"[Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)"},{"pos":[4203,4211],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Shared<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/shared.md)</ept><ph id=\"ph1\"> </ph>","pos":[4215,4286],"source":"[Shared](../../../visual-basic/language-reference/modifiers/shared.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Static<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/static.md)</ept><ph id=\"ph1\"> </ph>","pos":[4289,4361],"source":" [Static](../../../visual-basic/language-reference/modifiers/static.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Private<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/private.md)</ept><ph id=\"ph1\"> </ph>","pos":[4364,4438],"source":" [Private](../../../visual-basic/language-reference/modifiers/private.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Me, My, MyBase, and MyClass<ept id=\"p1\">](../../../visual-basic/programming-guide/program-structure/me-my-mybase-and-myclass.md)</ept><ph id=\"ph1\"> </ph>","pos":[4441,4559],"source":" [Me, My, MyBase, and MyClass](../../../visual-basic/programming-guide/program-structure/me-my-mybase-and-myclass.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Inheritance Basics<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept><ph id=\"ph1\"> </ph>","pos":[4562,4685],"source":" [Inheritance Basics](../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md) "},{"content":"<bpt id=\"p1\"> [</bpt>MustOverride<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/mustoverride.md)</ept><ph id=\"ph1\"> </ph>","pos":[4688,4772],"source":" [MustOverride](../../../visual-basic/language-reference/modifiers/mustoverride.md) "},{"content":"<bpt id=\"p1\"> [</bpt>NotOverridable<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/notoverridable.md)</ept><ph id=\"ph1\"> </ph>","pos":[4775,4863],"source":" [NotOverridable](../../../visual-basic/language-reference/modifiers/notoverridable.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Overloads<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/overloads.md)</ept><ph id=\"ph1\"> </ph>","pos":[4866,4944],"source":" [Overloads](../../../visual-basic/language-reference/modifiers/overloads.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Overridable<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/overridable.md)</ept><ph id=\"ph1\"> </ph>","pos":[4947,5029],"source":" [Overridable](../../../visual-basic/language-reference/modifiers/overridable.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Overrides<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/overrides.md)</ept><ph id=\"ph1\"> </ph>","pos":[5032,5110],"source":" [Overrides](../../../visual-basic/language-reference/modifiers/overrides.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Shadowing in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)</ept>","pos":[5113,5231],"source":" [Shadowing in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)"}]}