{"content":"---\ntitle: \"ISymUnmanagedBinder3::GetReaderFromCallback Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ISymUnmanagedBinder3.GetReaderFromCallback\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedBinder3::GetReaderFromCallback\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetReaderFromCallback method [.NET Framework debugging]\"\n  - \"ISymUnmanagedBinder3::GetReaderFromCallback method [.NET Framework debugging]\"\nms.assetid: 4ef83bd2-3d8e-499e-8a12-d9d6fd6ced30\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ISymUnmanagedBinder3::GetReaderFromCallback Method\nAllows the user to implement or supply via callback either an `IID_IDiaReadExeAtRVACallback` or `IID_IDiaReadExeAtOffsetCallback` to obtain the debug directory information from memory.  \n  \n## Syntax  \n  \n```  \nHRESULT GetReaderFromCallback(  \n    [in]  IUnknown     *importer,  \n    [in]  const WCHAR  *fileName,  \n    [in]  const WCHAR  *searchPath,  \n    [in]  ULONG32      searchPolicy,  \n    [in]  IUnknown     *callback,  \n    [out,retval] ISymUnmanagedReader  **pRetVal);  \n```  \n  \n#### Parameters  \n `importer`  \n [in] A pointer to the metadata import interface.  \n  \n `fileName`  \n [in] A pointer to the file name.  \n  \n `searchPath`  \n [in] A pointer to the search path.  \n  \n `searchPolicy`  \n [in] A value of the [CorSymSearchPolicyAttributes](../../../../docs/framework/unmanaged-api/diagnostics/corsymsearchpolicyattributes-enumeration.md) enumeration that specifies the policy to be used when doing a search for a symbol reader.  \n  \n `callback`  \n [in] A pointer to the callback function.  \n  \n `pRetVal`  \n [out] A pointer that is set to the returned [ISymUnmanagedReader](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader-interface.md) interface.  \n  \n## Return Value  \n S_OK if the method succeeds; otherwise, E_FAIL or some other error code.  \n  \n## Requirements  \n **Header:** CorSym.idl  \n  \n## See Also  \n [ISymUnmanagedBinder3 Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedbinder3-interface.md)","nodes":[{"pos":[12,79],"content":"ISymUnmanagedBinder3::GetReaderFromCallback Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ISymUnmanagedBinder3::GetReaderFromCallback Method | Microsoft Docs","pos":[0,67]}]},{"pos":[781,831],"content":"ISymUnmanagedBinder3::GetReaderFromCallback Method","linkify":"ISymUnmanagedBinder3::GetReaderFromCallback Method","nodes":[{"content":"ISymUnmanagedBinder3::GetReaderFromCallback Method","pos":[0,50]}]},{"pos":[832,1016],"content":"Allows the user to implement or supply via callback either an <ph id=\"ph1\">`IID_IDiaReadExeAtRVACallback`</ph> or <ph id=\"ph2\">`IID_IDiaReadExeAtOffsetCallback`</ph> to obtain the debug directory information from memory.","source":"Allows the user to implement or supply via callback either an `IID_IDiaReadExeAtRVACallback` or `IID_IDiaReadExeAtOffsetCallback` to obtain the debug directory information from memory."},{"pos":[1025,1031],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1327,1337],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer to the metadata import interface.","pos":[1355,1403]},{"content":"[in] A pointer to the file name.","pos":[1424,1456]},{"content":"[in] A pointer to the search path.","pos":[1479,1513]},{"content":"[in] A value of the <bpt id=\"p1\">[</bpt>CorSymSearchPolicyAttributes<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/corsymsearchpolicyattributes-enumeration.md)</ept> enumeration that specifies the policy to be used when doing a search for a symbol reader.","pos":[1538,1776],"source":" [in] A value of the [CorSymSearchPolicyAttributes](../../../../docs/framework/unmanaged-api/diagnostics/corsymsearchpolicyattributes-enumeration.md) enumeration that specifies the policy to be used when doing a search for a symbol reader."},{"content":"[in] A pointer to the callback function.","pos":[1797,1837]},{"content":"[out] A pointer that is set to the returned <bpt id=\"p1\">[</bpt>ISymUnmanagedReader<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader-interface.md)</ept> interface.","pos":[1857,2020],"source":" [out] A pointer that is set to the returned [ISymUnmanagedReader](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader-interface.md) interface."},{"pos":[2029,2041],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the method succeeds; otherwise, E_FAIL or some other error code.","pos":[2045,2117]},{"pos":[2126,2138],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2142,2164],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl","source":"**Header:** CorSym.idl"},{"pos":[2173,2181],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2185,2305],"content":"<bpt id=\"p1\">[</bpt>ISymUnmanagedBinder3 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedbinder3-interface.md)</ept>","source":"[ISymUnmanagedBinder3 Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedbinder3-interface.md)"}]}