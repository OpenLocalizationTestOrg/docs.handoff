{"content":"---\ntitle: \"Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc42036\"\n  - \"bc42036\"\nhelpviewer_keywords: \n  - \"BC42036\"\nms.assetid: f11e9c9f-aa66-4eb1-8f49-abf713bef885\n---\n# Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur\nA `Select`...`Case` construction uses one or more expressions of the [Object Data Type](../../visual-basic/language-reference/data-types/object-data-type.md).  \n  \n When a variable or expression evaluates to `Object`, the compiler must perform *late binding*, which causes extra operations at run time. It also exposes your application to potential run-time errors. For example, if you assign a <xref:System.Windows.Forms.Form> to an `Object` variable and then try to compare it with a number, the runtime throws an <xref:System.InvalidCastException> because Visual Basic cannot convert a <xref:System.Windows.Forms.Form> object to a numeric value.  \n  \n The expressions in a `Select`...`Case` construction should all be of the same data type or of closely related data types that can be converted to each other. This is because each `Case` statement compares at least one value against the test expression on which the `Select`...`Case` construction is based.  \n  \n By default, this message is a warning. For information on hiding warnings or treating warnings as errors, see [Configuring Warnings in Visual Basic](/visualstudio/ide/configuring-warnings-in-visual-basic).  \n  \n **Error ID:** BC42036  \n  \n## To correct this error  \n  \n-   If possible, arrange all the expressions to evaluate to data types for which comparison operators are defined.  \n  \n## See also\n\n- [Select...Case Statement](../../visual-basic/language-reference/statements/select-case-statement.md)\n- [Arithmetic Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)\n- [Comparison Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)\n","nodes":[{"pos":[4,264],"embed":true,"restype":"x-metadata","content":"title: \"Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc42036\"\n  - \"bc42036\"\nhelpviewer_keywords: \n  - \"BC42036\"\nms.assetid: f11e9c9f-aa66-4eb1-8f49-abf713bef885","nodes":[{"content":"Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur","nodes":[{"pos":[0,103],"content":"Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur","nodes":[{"content":"Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur","pos":[0,103]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[271,374],"content":"Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur","linkify":"Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur","nodes":[{"content":"Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur","pos":[0,103]}]},{"pos":[375,533],"content":"A <ph id=\"ph1\">`Select`</ph>...<ph id=\"ph2\">`Case`</ph> construction uses one or more expressions of the <bpt id=\"p1\">[</bpt>Object Data Type<ept id=\"p1\">](../../visual-basic/language-reference/data-types/object-data-type.md)</ept>.","source":"A `Select`...`Case` construction uses one or more expressions of the [Object Data Type](../../visual-basic/language-reference/data-types/object-data-type.md)."},{"content":"When a variable or expression evaluates to <ph id=\"ph1\">`Object`</ph>, the compiler must perform <bpt id=\"p1\">*</bpt>late binding<ept id=\"p1\">*</ept>, which causes extra operations at run time.","pos":[540,677],"source":"When a variable or expression evaluates to `Object`, the compiler must perform *late binding*, which causes extra operations at run time."},{"content":"It also exposes your application to potential run-time errors.","pos":[678,740]},{"content":"For example, if you assign a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> to an <ph id=\"ph2\">`Object`</ph> variable and then try to compare it with a number, the runtime throws an <ph id=\"ph3\">&lt;xref:System.InvalidCastException&gt;</ph> because Visual Basic cannot convert a <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form&gt;</ph> object to a numeric value.","pos":[741,1023],"source":" For example, if you assign a <xref:System.Windows.Forms.Form> to an `Object` variable and then try to compare it with a number, the runtime throws an <xref:System.InvalidCastException> because Visual Basic cannot convert a <xref:System.Windows.Forms.Form> object to a numeric value."},{"content":"The expressions in a <ph id=\"ph1\">`Select`</ph>...<ph id=\"ph2\">`Case`</ph> construction should all be of the same data type or of closely related data types that can be converted to each other.","pos":[1030,1187],"source":"The expressions in a `Select`...`Case` construction should all be of the same data type or of closely related data types that can be converted to each other."},{"content":"This is because each <ph id=\"ph1\">`Case`</ph> statement compares at least one value against the test expression on which the <ph id=\"ph2\">`Select`</ph>...<ph id=\"ph3\">`Case`</ph> construction is based.","pos":[1188,1335],"source":" This is because each `Case` statement compares at least one value against the test expression on which the `Select`...`Case` construction is based."},{"content":"By default, this message is a warning.","pos":[1342,1380]},{"content":"For information on hiding warnings or treating warnings as errors, see <bpt id=\"p1\">[</bpt>Configuring Warnings in Visual Basic<ept id=\"p1\">](/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.","pos":[1381,1547],"source":" For information on hiding warnings or treating warnings as errors, see [Configuring Warnings in Visual Basic](/visualstudio/ide/configuring-warnings-in-visual-basic)."},{"pos":[1554,1575],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC42036","source":"**Error ID:** BC42036"},{"pos":[1584,1605],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If possible, arrange all the expressions to evaluate to data types for which comparison operators are defined.","pos":[1615,1725]},{"pos":[1734,1742],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1746,1846],"content":"<bpt id=\"p1\">[</bpt>Select...Case Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/select-case-statement.md)</ept>","source":"[Select...Case Statement](../../visual-basic/language-reference/statements/select-case-statement.md)"},{"pos":[1849,1993],"content":"<bpt id=\"p1\">[</bpt>Arithmetic Operators in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)</ept>","source":"[Arithmetic Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)"},{"pos":[1996,2140],"content":"<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>","source":"[Comparison Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)"}]}