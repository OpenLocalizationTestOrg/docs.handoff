{"content":"---\ntitle: \"Arrays as Objects - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"arrays [C#], as objects\"\nms.assetid: f76d4403-bd0a-42a0-9bc8-694c55b2c926\n---\n# Arrays as Objects (C# Programming Guide)\n\nIn C#, arrays are actually objects, and not just addressable regions of contiguous memory as in C and C++. <xref:System.Array> is the abstract base type of all array types. You can use the properties, and other class members, that <xref:System.Array> has. An example of this would be using the <xref:System.Array.Length%2A> property to get the length of an array. The following code assigns the length of the `numbers` array, which is `5`, to a variable called `lengthOfNumbers`:  \n  \n [!code-csharp[csProgGuideArrays#3](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#3)]  \n  \n The <xref:System.Array> class provides many other useful methods and properties for sorting, searching, and copying arrays.  \n  \n## Example\n\n This example uses the <xref:System.Array.Rank%2A> property to display the number of dimensions of an array.  \n  \n [!code-csharp[csProgGuideArrays#2](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#2)]  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Arrays](../../../csharp/programming-guide/arrays/index.md)\n- [Single-Dimensional Arrays](../../../csharp/programming-guide/arrays/single-dimensional-arrays.md)\n- [Multidimensional Arrays](../../../csharp/programming-guide/arrays/multidimensional-arrays.md)\n- [Jagged Arrays](../../../csharp/programming-guide/arrays/jagged-arrays.md)\n","nodes":[{"pos":[4,194],"embed":true,"restype":"x-metadata","content":"title: \"Arrays as Objects - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"arrays [C#], as objects\"\nms.assetid: f76d4403-bd0a-42a0-9bc8-694c55b2c926","nodes":[{"content":"Arrays as Objects - C# Programming Guide","nodes":[{"pos":[0,40],"content":"Arrays as Objects - C# Programming Guide","nodes":[{"content":"Arrays as Objects - C# Programming Guide","pos":[0,40]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[201,241],"content":"Arrays as Objects (C# Programming Guide)","linkify":"Arrays as Objects (C# Programming Guide)","nodes":[{"content":"Arrays as Objects (C# Programming Guide)","pos":[0,40]}]},{"content":"In C#, arrays are actually objects, and not just addressable regions of contiguous memory as in C and C++.","pos":[243,349]},{"content":"<ph id=\"ph1\">&lt;xref:System.Array&gt;</ph> is the abstract base type of all array types.","pos":[350,415],"source":"<xref:System.Array> is the abstract base type of all array types."},{"content":"You can use the properties, and other class members, that <ph id=\"ph1\">&lt;xref:System.Array&gt;</ph> has.","pos":[416,498],"source":" You can use the properties, and other class members, that <xref:System.Array> has."},{"content":"An example of this would be using the <ph id=\"ph1\">&lt;xref:System.Array.Length%2A&gt;</ph> property to get the length of an array.","pos":[499,606],"source":" An example of this would be using the <xref:System.Array.Length%2A> property to get the length of an array."},{"content":"The following code assigns the length of the <ph id=\"ph1\">`numbers`</ph> array, which is <ph id=\"ph2\">`5`</ph>, to a variable called <ph id=\"ph3\">`lengthOfNumbers`</ph>:","pos":[607,722],"source":" The following code assigns the length of the `numbers` array, which is `5`, to a variable called `lengthOfNumbers`:"},{"pos":[852,975],"content":"The <ph id=\"ph1\">&lt;xref:System.Array&gt;</ph> class provides many other useful methods and properties for sorting, searching, and copying arrays.","source":"The <xref:System.Array> class provides many other useful methods and properties for sorting, searching, and copying arrays."},{"pos":[984,991],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[994,1101],"content":"This example uses the <ph id=\"ph1\">&lt;xref:System.Array.Rank%2A&gt;</ph> property to display the number of dimensions of an array.","source":"This example uses the <xref:System.Array.Rank%2A> property to display the number of dimensions of an array."},{"pos":[1233,1241],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1245,1311],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[1314,1373],"content":"<bpt id=\"p1\">[</bpt>Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/index.md)</ept>","source":"[Arrays](../../../csharp/programming-guide/arrays/index.md)"},{"pos":[1376,1474],"content":"<bpt id=\"p1\">[</bpt>Single-Dimensional Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/single-dimensional-arrays.md)</ept>","source":"[Single-Dimensional Arrays](../../../csharp/programming-guide/arrays/single-dimensional-arrays.md)"},{"pos":[1477,1571],"content":"<bpt id=\"p1\">[</bpt>Multidimensional Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/multidimensional-arrays.md)</ept>","source":"[Multidimensional Arrays](../../../csharp/programming-guide/arrays/multidimensional-arrays.md)"},{"pos":[1574,1648],"content":"<bpt id=\"p1\">[</bpt>Jagged Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/jagged-arrays.md)</ept>","source":"[Jagged Arrays](../../../csharp/programming-guide/arrays/jagged-arrays.md)"}]}