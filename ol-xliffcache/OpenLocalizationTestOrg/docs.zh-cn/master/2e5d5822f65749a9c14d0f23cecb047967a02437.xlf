<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-display-milliseconds-in-date-and-time-values.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e5d5822f65749a9c14d0f23cecb047967a02437</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\how-to-display-milliseconds-in-date-and-time-values.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d5e723d1d82815466c49527b133730486c414ae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba84b03fff2f6b48fc26a0e43b94619c6a397526</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Display Milliseconds in Date and Time Values | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Display Milliseconds in Date and Time Values</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The default date and time formatting methods, such as <ph id="ph1">&lt;xref:System.DateTime.ToString?displayProperty=fullName&gt;</ph>, include the hours, minutes, and seconds of a time value but exclude its milliseconds component.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic shows how to include a date and time's millisecond component in formatted date and time strings.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To display the millisecond component of a DateTime value</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you are working with the string representation of a date, convert it to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> or a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value by using the static <ph id="ph3">&lt;xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id="ph4">&lt;xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To extract the string representation of a time's millisecond component, call the date and time value's <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method, and pass the <ph id="ph3">`fff`</ph> or <ph id="ph4">`FFF`</ph> custom format pattern either alone or with other custom format specifiers as the <ph id="ph5">`format`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The example displays the millisecond component of a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> and a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> value to the console, both alone and included in a longer date and time string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fff`</ph> format pattern includes any trailing zeros in the millisecond value.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FFF`</ph> format pattern suppresses them.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The difference is illustrated in the following example.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A problem with defining a complete custom format specifier that includes the millisecond component of a date and time is that it defines a hard-coded format that may not correspond to the arrangement of time elements in the application's current culture.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A better alternative is to retrieve one of the date and time display patterns defined by the current culture's <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object and modify it to include milliseconds.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The example also illustrates this approach.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It retrieves the current culture's full date and time pattern from the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A?displayProperty=fullName&gt;</ph> property, and then inserts the custom pattern <ph id="ph2">`.ffff`</ph> after its seconds pattern.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Note that the example uses a regular expression to perform this operation in a single method call.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use a custom format specifier to display a fractional part of seconds other than milliseconds.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`f`</ph> or <ph id="ph2">`F`</ph> custom format specifier displays tenths of a second, the <ph id="ph3">`ff`</ph> or <ph id="ph4">`FF`</ph> custom format specifier displays hundredths of a second, and the <ph id="ph5">`ffff`</ph> or <ph id="ph6">`FFFF`</ph> custom format specifier displays ten thousandths of a second.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Fractional parts of a millisecond are truncated instead of rounded in the returned string.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These format specifiers are used in the following example.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It is possible to display very small fractional units of a second, such as ten thousandths of a second or hundred-thousandths of a second.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, these values may not be meaningful.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The precision of date and time values depends on the resolution of the system clock.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>On Windows NT 3.5 and later, and <ph id="ph1">[!INCLUDE[windowsver](../../../includes/windowsver-md.md)]</ph> operating systems, the clock's resolution is approximately 10-15 milliseconds.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Compile the code at the command line using csc.exe or vb.exe.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To compile the code in <ph id="ph1">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph>, put it in a console application project template.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom Date and Time Format Strings<ept id="p1">](../../../docs/standard/base-types/custom-date-and-time-format-strings.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>