<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="enumerateclrs-function.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7532218728aead72186b5156da87db6d3bc0a8c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\debugging\enumerateclrs-function.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9e0c5292946b02aedebd15cf3c10645452c8f31</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c1ca27aceffe34ea31594ea8dcf53d8ecf64435</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>EnumerateCLRs Function</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>EnumerateCLRs Function</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides a mechanism for enumerating the CLRs in a process.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in] Process identifier of the process from which loaded CLRs will be enumerated.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[out] Pointer to an array containing event handles that are used to continue a CLR startup.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Each handle in the array is not guaranteed to be valid.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If valid, the handle is to be used as the continue-startup event for the corresponding runtime located in the same index of <ph id="ph1">`ppStringArrayOut`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>[out] Pointer to an array of strings that specify full paths to CLRs loaded in the process.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>[out] Pointer to a DWORD that contains the length of the equally sized <ph id="ph1">`ppHandleArrayOut`</ph> and <ph id="ph2">`pdwArrayLengthOut`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The number of CLRs in the process was successfully determined, and the corresponding handle and path arrays were properly filled.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>E_INVALIDARG</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Either <ph id="ph1">`ppHandleArrayOut`</ph> or <ph id="ph2">`ppStringArrayOut`</ph> is null, or <ph id="ph3">`pdwArrayLengthOut`</ph> is null.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>E_OUTOFMEMORY</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The function is unable to allocate enough memory for the handle and path arrays.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>E_FAIL (or other E_ return codes)</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Unable to enumerate loaded CLRs.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For a target process that is identified by <ph id="ph1">`debuggeePID`</ph>, the function returns an array of paths, <ph id="ph2">`ppStringArrayOut`</ph>, to CLRs loaded in the process; an array of event handles, <ph id="ph3">`ppHandleArrayOut`</ph>, which may contain a continue-startup event for the CLR at the same index; and the size of the arrays, <ph id="ph4">`pdwArrayLengthOut`</ph>, which specifies the number of CLRs that are loaded.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>On the Windows operating system, <ph id="ph1">`debuggeePID`</ph> maps to an OS process identifier.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The memory for <ph id="ph1">`ppHandleArrayOut`</ph> and <ph id="ph2">`ppStringArrayOut`</ph> are allocated by this function.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To free the memory allocated, you must call <bpt id="p1">[</bpt>CloseCLREnumeration Function<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/closeclrenumeration-function.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This function can be called with both array parameters set to null in order to return the count of CLRs in the target process.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>From this count, a caller can infer the size of the buffer that will be created: <ph id="ph1">`(sizeof(HANDLE) * count) + (sizeof(LPWSTR) * count) + (sizeof(WCHAR*) * count * MAX_PATH)`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> dbgshim.h</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> dbgshim.dll</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> 3.5 SP1</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>