{"content":"---\ntitle: \"Anonymous type member name can be inferred only from a simple or qualified name with no arguments | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc36556\"\n  - \"bc36556\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"BC36556\"\nms.assetid: e3ba1f33-3a71-4f03-9b04-ed5ec17de17c\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Anonymous type member name can be inferred only from a simple or qualified name with no arguments\nYou cannot infer an anonymous type member name from a complex expression.  \n  \n```vb  \nDim numbers() As Integer = {1, 2, 3, 4, 5}  \n' Not valid.  \n' Dim instanceName1 = New With {numbers(3)}  \n```  \n  \n For more information about sources from which anonymous types can and cannot infer member names and types, see [How to: Infer Property Names and Types in Anonymous Type Declarations](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-infer-property-names-and-types-in-anonymous-type-declarations.md).  \n  \n **Error ID:** BC36556  \n  \n## To correct this error  \n  \n-   Assign the expression to a member name, as shown in the following code:  \n  \n    ```  \n    Dim instanceName2 = New With {.number = numbers(3)}  \n    ```  \n  \n## See Also  \n [Anonymous Types](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)   \n [How to: Infer Property Names and Types in Anonymous Type Declarations](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-infer-property-names-and-types-in-anonymous-type-declarations.md)","nodes":[{"pos":[4,642],"nodes":[{"content":"Anonymous type member name can be inferred only from a simple or qualified name with no arguments | Microsoft Docs","nodes":[{"pos":[0,114],"content":"Anonymous type member name can be inferred only from a simple or qualified name with no arguments | Microsoft Docs","nodes":[{"content":"Anonymous type member name can be inferred only from a simple or qualified name with no arguments | Microsoft Docs","pos":[0,114]}]}],"pos":[6,123],"yaml":true}],"content":"title: \"Anonymous type member name can be inferred only from a simple or qualified name with no arguments | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc36556\"\n  - \"bc36556\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"BC36556\"\nms.assetid: e3ba1f33-3a71-4f03-9b04-ed5ec17de17c\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[649,746],"content":"Anonymous type member name can be inferred only from a simple or qualified name with no arguments","linkify":"Anonymous type member name can be inferred only from a simple or qualified name with no arguments","nodes":[{"content":"Anonymous type member name can be inferred only from a simple or qualified name with no arguments","pos":[0,97]}]},{"content":"You cannot infer an anonymous type member name from a complex expression.","pos":[747,820]},{"pos":[950,1284],"content":"For more information about sources from which anonymous types can and cannot infer member names and types, see <bpt id=\"p1\">[</bpt>How to: Infer Property Names and Types in Anonymous Type Declarations<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-infer-property-names-and-types-in-anonymous-type-declarations.md)</ept>.","source":"For more information about sources from which anonymous types can and cannot infer member names and types, see [How to: Infer Property Names and Types in Anonymous Type Declarations](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-infer-property-names-and-types-in-anonymous-type-declarations.md)."},{"pos":[1291,1312],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36556","source":"**Error ID:** BC36556"},{"pos":[1321,1342],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Assign the expression to a member name, as shown in the following code:","pos":[1352,1423]},{"pos":[1513,1521],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Anonymous Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[1525,1641],"source":"[Anonymous Types](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Infer Property Names and Types in Anonymous Type Declarations<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-infer-property-names-and-types-in-anonymous-type-declarations.md)</ept>","pos":[1645,1867],"source":"[How to: Infer Property Names and Types in Anonymous Type Declarations](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-infer-property-names-and-types-in-anonymous-type-declarations.md)"}]}