{"content":"---\ntitle: \"How to: Hit Test in a Viewport3D\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"3-D visuals [WPF], hit-testing for\"\n  - \"hit tests [WPF], for 3-D visuals\"\n  - \"Viewport3D [WPF]\"\nms.assetid: 42bfbd99-c7c6-43f1-940b-90448faa412e\n---\n# How to: Hit Test in a Viewport3D\nThis example shows how to hit test for 3D Visuals in a <xref:System.Windows.Controls.Viewport3D>.  \n  \n Because <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> returns 2D and 3D information, it is possible to iterate through the test results to read only 3D results.  \n  \n [!code-csharp[HitTest3D#HitTest3D3DN4](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/Window1.xaml.cs#hittest3d3dn4)]\n [!code-vb[HitTest3D#HitTest3D3DN4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTest3D/visualbasic/window1.xaml.vb#hittest3d3dn4)]  \n  \n The <xref:System.Windows.Media.HitTestResultBehavior> in the following code determines how the hit test results are processed.  `UpdateResultInfo` and `UpdateMaterial` are locally defined methods.  \n  \n [!code-csharp[HitTest3D#HitTest3D3DN5](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/Window1.xaml.cs#hittest3d3dn5)]\n [!code-vb[HitTest3D#HitTest3D3DN5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTest3D/visualbasic/window1.xaml.vb#hittest3d3dn5)]  \n  \n## See also\n\n- [3-D Hit Testing Sample](https://go.microsoft.com/fwlink/?LinkID=159959)\n","nodes":[{"pos":[4,275],"embed":true,"restype":"x-metadata","content":"title: \"How to: Hit Test in a Viewport3D\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"3-D visuals [WPF], hit-testing for\"\n  - \"hit tests [WPF], for 3-D visuals\"\n  - \"Viewport3D [WPF]\"\nms.assetid: 42bfbd99-c7c6-43f1-940b-90448faa412e","nodes":[{"content":"How to: Hit Test in a Viewport3D","nodes":[{"pos":[0,32],"content":"How to: Hit Test in a Viewport3D","nodes":[{"content":"How to: Hit Test in a Viewport3D","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[282,314],"content":"How to: Hit Test in a Viewport3D","linkify":"How to: Hit Test in a Viewport3D","nodes":[{"content":"How to: Hit Test in a Viewport3D","pos":[0,32]}]},{"pos":[315,412],"content":"This example shows how to hit test for 3D Visuals in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Viewport3D&gt;</ph>.","source":"This example shows how to hit test for 3D Visuals in a <xref:System.Windows.Controls.Viewport3D>."},{"pos":[419,589],"content":"Because <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> returns 2D and 3D information, it is possible to iterate through the test results to read only 3D results.","source":"Because <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> returns 2D and 3D information, it is possible to iterate through the test results to read only 3D results."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.HitTestResultBehavior&gt;</ph> in the following code determines how the hit test results are processed.","pos":[869,995],"source":"The <xref:System.Windows.Media.HitTestResultBehavior> in the following code determines how the hit test results are processed."},{"content":"<ph id=\"ph1\">`UpdateResultInfo`</ph> and <ph id=\"ph2\">`UpdateMaterial`</ph> are locally defined methods.","pos":[997,1065],"source":"`UpdateResultInfo` and `UpdateMaterial` are locally defined methods."},{"pos":[1347,1355],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1359,1431],"content":"<bpt id=\"p1\">[</bpt>3-D Hit Testing Sample<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=159959)</ept>","source":"[3-D Hit Testing Sample](https://go.microsoft.com/fwlink/?LinkID=159959)"}]}