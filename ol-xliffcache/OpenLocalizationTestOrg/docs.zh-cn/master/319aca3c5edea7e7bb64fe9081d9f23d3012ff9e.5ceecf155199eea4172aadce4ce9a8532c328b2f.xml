{"content":"> [!NOTE]\n> Starting with .NET Core 2.0, you don't have to run [`dotnet restore`](~/docs/core/tools/dotnet-restore.md) because it's run implicitly by all commands, such as `dotnet build` and `dotnet run`, that require a restore to occur. It's still a valid command in certain scenarios where doing an explicit restore makes sense, such as [continuous integration builds in Azure DevOps Services](/azure/devops/build-release/apps/aspnet/build-aspnet-core) or in build systems that need to explicitly control the time at which the restore occurs.\n>\n> This command also supports the `dotnet restore` options when passed in the long form (for example, `--source`). Short form options, such as `-s`, are not supported.","nodes":[{"pos":[2,544],"content":"[!NOTE]\nStarting with .NET Core 2.0, you don't have to run [`dotnet restore`](~/docs/core/tools/dotnet-restore.md) because it's run implicitly by all commands, such as `dotnet build` and `dotnet run`, that require a restore to occur. It's still a valid command in certain scenarios where doing an explicit restore makes sense, such as [continuous integration builds in Azure DevOps Services](/azure/devops/build-release/apps/aspnet/build-aspnet-core) or in build systems that need to explicitly control the time at which the restore occurs.","leadings":["","> "],"nodes":[{"content":"Starting with .NET Core 2.0, you don't have to run [`dotnet restore`](~/docs/core/tools/dotnet-restore.md) because it's run implicitly by all commands, such as `dotnet build` and `dotnet run`, that require a restore to occur. It's still a valid command in certain scenarios where doing an explicit restore makes sense, such as [continuous integration builds in Azure DevOps Services](/azure/devops/build-release/apps/aspnet/build-aspnet-core) or in build systems that need to explicitly control the time at which the restore occurs.","pos":[8,540],"nodes":[{"content":"Starting with .NET Core 2.0, you don't have to run <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`dotnet restore`</ph><ept id=\"p1\">](~/docs/core/tools/dotnet-restore.md)</ept> because it's run implicitly by all commands, such as <ph id=\"ph2\">`dotnet build`</ph> and <ph id=\"ph3\">`dotnet run`</ph>, that require a restore to occur.","pos":[0,225],"source":"Starting with .NET Core 2.0, you don't have to run [`dotnet restore`](~/docs/core/tools/dotnet-restore.md) because it's run implicitly by all commands, such as `dotnet build` and `dotnet run`, that require a restore to occur."},{"content":"It's still a valid command in certain scenarios where doing an explicit restore makes sense, such as <bpt id=\"p1\">[</bpt>continuous integration builds in Azure DevOps Services<ept id=\"p1\">](/azure/devops/build-release/apps/aspnet/build-aspnet-core)</ept> or in build systems that need to explicitly control the time at which the restore occurs.","pos":[226,532],"source":" It's still a valid command in certain scenarios where doing an explicit restore makes sense, such as [continuous integration builds in Azure DevOps Services](/azure/devops/build-release/apps/aspnet/build-aspnet-core) or in build systems that need to explicitly control the time at which the restore occurs."}]}]},{"content":"This command also supports the <ph id=\"ph1\">`dotnet restore`</ph> options when passed in the long form (for example, <ph id=\"ph2\">`--source`</ph>).","pos":[549,660],"source":"This command also supports the `dotnet restore` options when passed in the long form (for example, `--source`)."},{"content":"Short form options, such as <ph id=\"ph1\">`-s`</ph>, are not supported.","pos":[661,713],"source":" Short form options, such as `-s`, are not supported."}]}