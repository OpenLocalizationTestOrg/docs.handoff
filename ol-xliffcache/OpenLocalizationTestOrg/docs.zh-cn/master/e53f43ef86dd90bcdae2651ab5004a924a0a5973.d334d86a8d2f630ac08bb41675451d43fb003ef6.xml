{"content":"---\ntitle: \"Skip Clause (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.QuerySkip\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"queries [Visual Basic], Skip\"\n  - \"Skip statement\"\n  - \"Skip clause\"\nms.assetid: f00eb172-3907-4c43-9745-d8546ab86234\ncaps.latest.revision: 17\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Skip Clause (Visual Basic)\nBypasses a specified number of elements in a collection and then returns the remaining elements.  \n  \n## Syntax  \n  \n```  \nSkip count  \n```  \n  \n## Parts  \n `count`  \n Required. A value or an expression that evaluates to the number of elements of the sequence to skip.  \n  \n## Remarks  \n The `Skip` clause causes a query to bypass elements at the beginning of a results list and return the remaining elements. The number of elements to skip is identified by the `count` parameter.  \n  \n You can use the `Skip` clause with the `Take` clause to return a range of data from any segment of a query. To do this, pass the index of the first element of the range to the `Skip` clause and the size of the range to the `Take` clause.  \n  \n When you use the `Skip` clause in a query, you may also need to ensure that the results are returned in an order that will enable the `Skip` clause to bypass the intended results. For more information about ordering query results, see [Order By Clause](../../../visual-basic/language-reference/queries/order-by-clause.md).  \n  \n You can use the `SkipWhile` clause to specify that only certain elements are ignored, depending on a supplied condition.  \n  \n## Example  \n The following code example uses the `Skip` clause together with the `Take` clause to return data from a query in pages. The `GetCustomers` function uses the `Skip` clause to bypass the customers in the list until the supplied starting index value, and uses the `Take` clause to return a page of customers starting from that index value.  \n  \n [!code-vb[VbSimpleQuerySamples#1](../../../visual-basic/language-reference/queries/codesnippet/VisualBasic/skip-clause_1.vb)]  \n  \n## See Also  \n [Introduction to LINQ in Visual Basic](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)   \n [Queries](../../../visual-basic/language-reference/queries/queries.md)   \n [Select Clause](../../../visual-basic/language-reference/queries/select-clause.md)   \n [From Clause](../../../visual-basic/language-reference/queries/from-clause.md)   \n [Order By Clause](../../../visual-basic/language-reference/queries/order-by-clause.md)   \n [Skip While Clause](../../../visual-basic/language-reference/queries/skip-while-clause.md)   \n [Take Clause](../../../visual-basic/language-reference/queries/take-clause.md)","nodes":[{"pos":[4,663],"embed":true,"restype":"x-metadata","content":"title: \"Skip Clause (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.QuerySkip\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"queries [Visual Basic], Skip\"\n  - \"Skip statement\"\n  - \"Skip clause\"\nms.assetid: f00eb172-3907-4c43-9745-d8546ab86234\ncaps.latest.revision: 17\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","nodes":[{"content":"Skip Clause (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,43],"content":"Skip Clause (Visual Basic) | Microsoft Docs","nodes":[{"content":"Skip Clause (Visual Basic) | Microsoft Docs","pos":[0,43]}]}],"path":["title"]}],"yml":true},{"pos":[670,696],"content":"Skip Clause (Visual Basic)","linkify":"Skip Clause (Visual Basic)","nodes":[{"content":"Skip Clause (Visual Basic)","pos":[0,26]}]},{"content":"Bypasses a specified number of elements in a collection and then returns the remaining elements.","pos":[697,793]},{"pos":[802,808],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[845,850],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Required.","pos":[865,874]},{"content":"A value or an expression that evaluates to the number of elements of the sequence to skip.","pos":[875,965]},{"pos":[974,981],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`Skip`</ph> clause causes a query to bypass elements at the beginning of a results list and return the remaining elements.","pos":[985,1106],"source":"The `Skip` clause causes a query to bypass elements at the beginning of a results list and return the remaining elements."},{"content":"The number of elements to skip is identified by the <ph id=\"ph1\">`count`</ph> parameter.","pos":[1107,1177],"source":" The number of elements to skip is identified by the `count` parameter."},{"content":"You can use the <ph id=\"ph1\">`Skip`</ph> clause with the <ph id=\"ph2\">`Take`</ph> clause to return a range of data from any segment of a query.","pos":[1184,1291],"source":"You can use the `Skip` clause with the `Take` clause to return a range of data from any segment of a query."},{"content":"To do this, pass the index of the first element of the range to the <ph id=\"ph1\">`Skip`</ph> clause and the size of the range to the <ph id=\"ph2\">`Take`</ph> clause.","pos":[1292,1421],"source":" To do this, pass the index of the first element of the range to the `Skip` clause and the size of the range to the `Take` clause."},{"content":"When you use the <ph id=\"ph1\">`Skip`</ph> clause in a query, you may also need to ensure that the results are returned in an order that will enable the <ph id=\"ph2\">`Skip`</ph> clause to bypass the intended results.","pos":[1428,1607],"source":"When you use the `Skip` clause in a query, you may also need to ensure that the results are returned in an order that will enable the `Skip` clause to bypass the intended results."},{"content":"For more information about ordering query results, see <bpt id=\"p1\">[</bpt>Order By Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/order-by-clause.md)</ept>.","pos":[1608,1750],"source":" For more information about ordering query results, see [Order By Clause](../../../visual-basic/language-reference/queries/order-by-clause.md)."},{"pos":[1757,1877],"content":"You can use the <ph id=\"ph1\">`SkipWhile`</ph> clause to specify that only certain elements are ignored, depending on a supplied condition.","source":"You can use the `SkipWhile` clause to specify that only certain elements are ignored, depending on a supplied condition."},{"pos":[1886,1893],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example uses the <ph id=\"ph1\">`Skip`</ph> clause together with the <ph id=\"ph2\">`Take`</ph> clause to return data from a query in pages.","pos":[1897,2016],"source":"The following code example uses the `Skip` clause together with the `Take` clause to return data from a query in pages."},{"content":"The <ph id=\"ph1\">`GetCustomers`</ph> function uses the <ph id=\"ph2\">`Skip`</ph> clause to bypass the customers in the list until the supplied starting index value, and uses the <ph id=\"ph3\">`Take`</ph> clause to return a page of customers starting from that index value.","pos":[2017,2233],"source":" The `GetCustomers` function uses the `Skip` clause to bypass the customers in the list until the supplied starting index value, and uses the `Take` clause to return a page of customers starting from that index value."},{"pos":[2374,2382],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Introduction to LINQ in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id=\"ph1\"> </ph>","pos":[2386,2513],"source":"[Introduction to LINQ in Visual Basic](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md) "},{"content":"<bpt id=\"p1\">[</bpt>Queries<ept id=\"p1\">](../../../visual-basic/language-reference/queries/queries.md)</ept><ph id=\"ph1\"> </ph>","pos":[2517,2588],"source":"[Queries](../../../visual-basic/language-reference/queries/queries.md) "},{"content":"<bpt id=\"p1\">[</bpt>Select Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/select-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[2592,2675],"source":"[Select Clause](../../../visual-basic/language-reference/queries/select-clause.md) "},{"content":"<bpt id=\"p1\">[</bpt>From Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/from-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[2679,2758],"source":"[From Clause](../../../visual-basic/language-reference/queries/from-clause.md) "},{"content":"<bpt id=\"p1\">[</bpt>Order By Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/order-by-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[2762,2849],"source":"[Order By Clause](../../../visual-basic/language-reference/queries/order-by-clause.md) "},{"content":"<bpt id=\"p1\">[</bpt>Skip While Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/skip-while-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[2853,2944],"source":"[Skip While Clause](../../../visual-basic/language-reference/queries/skip-while-clause.md) "},{"content":"<bpt id=\"p1\">[</bpt>Take Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/take-clause.md)</ept>","pos":[2948,3026],"source":"[Take Clause](../../../visual-basic/language-reference/queries/take-clause.md)"}]}