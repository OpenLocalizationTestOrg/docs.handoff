<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="datagrid-control-overview-windows-forms.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fdc14257d140c92cb2450fc21b44c1f95c75ba8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\datagrid-control-overview-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57249839855b81f947953b62922f4d8abf972ee4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a54c10af03a5df24f51d8edeb5ad4d633a3194ed</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>DataGrid Control Overview (Windows Forms)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>DataGrid Control Overview (Windows Forms)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control replaces and adds functionality to the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control; however, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control is retained for both backward compatibility and future use, if you choose.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Differences Between the Windows Forms DataGridView and DataGrid Controls<ept id="p1">](differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Windows Forms <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control displays data in a series of rows and columns.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The simplest case is when the grid is bound to a data source with a single table that contains no relationships.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In that case, the data appears in simple rows and columns, as in a spreadsheet.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information about binding data to other controls, see <bpt id="p1">[</bpt>Data Binding and Windows Forms<ept id="p1">](../data-binding-and-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> is bound to data with multiple related tables, and if navigation is enabled on the grid, the grid will display expanders in each row.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>With an expander, the user can move from a parent table to a child table.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Clicking a node displays the child table, and clicking a back button displays the original parent table.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this manner, the grid displays the hierarchical relationships between tables.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following screenshot shows a DataGrid bound to data with multiple tables.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A DataGrid bound to data with multiple tables<ept id="p1">]</ept><bpt id="p2">(./media/vbcontrol1.gif "</bpt>vbControl1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A DataGrid bound to data with multiple tables</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> can provide a user interface for a dataset, navigation between related tables, and rich formatting and editing capabilities.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The display and manipulation of data are separate functions: The control handles the user interface, whereas data updates are handled by the Windows Forms data-binding architecture and by <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> data providers.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Therefore, multiple controls bound to the same data source will stay in sync.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you are familiar with the DataGrid control in Visual Basic 6.0, you will find some significant differences in the Windows Forms <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the grid is bound to a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the columns and rows are automatically created, formatted, and filled.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Data Binding and Windows Forms<ept id="p1">](../data-binding-and-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Following the generation of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control, you can add, delete, rearrange, and format columns and rows depending on your needs.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Binding Data to the Control</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control to work, it should be bound to a data source using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.DataSource%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.DataMember%2A&gt;</ph> properties at design time or the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method at run time.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This binding points the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to an instantiated data-source object, such as a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control shows the results of actions that are performed on the data.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Most data-specific actions are not performed through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> , but instead through the data source.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the data in the bound dataset is updated through any mechanism, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control reflects the changes.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the data grid and its table styles and column styles have the <ph id="ph1">`ReadOnly`</ph> property set to <ph id="ph2">`false`</ph>, the data in the dataset can be updated through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Only one table can be shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> at a time.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If a parent-child relationship is defined between tables, the user can move between the related tables to select the table to be displayed in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For information about binding a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control to an <ph id="ph2">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph> data source at either design time or run time, see <bpt id="p1">[</bpt>How to: Bind the Windows Forms DataGrid Control to a Data Source<ept id="p1">](how-to-bind-the-windows-forms-datagrid-control-to-a-data-source.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Valid data sources for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> include:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If your source is a dataset, the dataset might be an object in the form or an object passed to the form by an XML Web service.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can bind to either typed or untyped datasets.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can also bind a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control to additional structures if the objects in the structure, such as the elements in an array, expose public properties.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The grid will display all the public properties of the elements in the structure.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, if you bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control to an array of customer objects, the grid will display all the public properties of those customer objects.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In some instances, this means that although you can bind to the structure, the resulting bound structure might not have practical application.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, you can bind to an array of integers, but because the <ph id="ph1">`Integer`</ph> data type does not support a public property, the grid cannot display any data.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can bind to the following structures if their elements expose public properties:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Any component that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This includes single-dimension arrays.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Any component that implements the <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Any component that implements the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information about possible data sources, see <bpt id="p1">[</bpt>Data Sources Supported by Windows Forms<ept id="p1">](../data-sources-supported-by-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Grid Display</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A common use of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control is to display a single table of data from a dataset.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>However, the control can also be used to display multiple tables, including related tables.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The display of the grid is adjusted automatically according to the data source.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following table shows what is displayed for various configurations.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Contents of data set</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>What is displayed</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Single table.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Table is displayed in a grid.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Multiple tables.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The grid can display a tree view that users can navigate to locate the table they want to display.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Multiple related tables.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The grid can display a tree view to select tables with, or you can specify that the grid display the parent table.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Records in the parent table let users navigate to related child rows.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Tables in a dataset are related using a <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>Create relationships between datasets<ept id="p1">](/visualstudio/data-tools/relationships-in-datasets)</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control is displaying a table and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.AllowSorting%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, data can be resorted by clicking the column headers.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The user can also add rows and edit cells.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The relationships between a set of tables are displayed to users by using a parent/child structure of navigation.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Parent tables are the highest level of data, and child tables are those data tables that are derived from the individual listings in the parent tables.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Expanders are displayed in each parent row that contains a child table.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Clicking an expander generates a list of Web-like links to the child tables.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When the user selects a link, the child table is displayed.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Clicking the show/hide parent rows icon (<bpt id="p1">![</bpt>show&amp;#47;hide parent rows icon<ept id="p1">]</ept><bpt id="p2">(./media/vbicon.gif "</bpt>vbIcon<ept id="p2">")</ept>) will hide the information about the parent table or cause it to reappear if the user has previously hidden it.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The user can click a back button to move back to the previously viewed table.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Columns and Rows</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> consists of a collection of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> objects that are contained in the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control's <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A table style may contain a collection of <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects that are contained in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>..</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can edit the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> properties by using collection editors accessed through the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Any <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control can be accessed through the <ph id="ph3">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;</ph> can be edited in the designer with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> collection editor, or programmatically through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control's <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid.TableStyles%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Objects included in the DataGrid control<ept id="p1">]</ept><bpt id="p2">(./media/vbcolumns1.gif "</bpt>vbColumns1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The following illustration shows the objects included in the DataGrid control.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Table styles and column styles are synchronized with <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects and <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects by setting their <ph id="ph3">`MappingName`</ph> properties to the appropriate <ph id="ph4">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> that has no column styles is added to a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control bound to a valid data source, and the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A&gt;</ph> property of that table style is set to a valid <ph id="ph4">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> property, a collection of <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> objects is created for that table style.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For each <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> found in the <ph id="ph2">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> collection of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, a corresponding <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> is added to the <ph id="ph5">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph> is accessed through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Columns can be added or deleted from the grid using the <ph id="ph1">&lt;xref:System.Windows.Forms.GridColumnStylesCollection.Add%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.GridColumnStylesCollection.Remove%2A&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add Tables and Columns to the Windows Forms DataGrid Control<ept id="p1">](how-to-add-tables-and-columns-to-the-windows-forms-datagrid-control.md)</ept> and <bpt id="p2">[</bpt>How to: Delete or Hide Columns in the Windows Forms DataGrid Control<ept id="p2">](how-to-delete-or-hide-columns-in-the-windows-forms-datagrid-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A collection of column types extends the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> class with rich formatting and editing capabilities.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>All column types inherit from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph> base class.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The class that is created depends on the <ph id="ph1">&lt;xref:System.Data.DataColumn.DataType%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> from which the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DataGridColumn&gt;</ph> is based.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For example, a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> that has its <ph id="ph2">&lt;xref:System.Data.DataColumn.DataType%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> will be associated with the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridBoolColumn&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The following table describes each of these column types.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Column Type</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Accepts and displays data as formatted or unformatted strings.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Editing capabilities are the same as they are for editing data in a simple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Accepts and displays <ph id="ph1">`true`</ph>, <ph id="ph2">`false`</ph>, and null values.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Double-clicking the right edge of a column resizes the column to display its full caption and widest entry.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Table Styles and Column Styles</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>As soon as you have established the default format of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control, you can customize the colors that will be used when certain tables are displayed within the data grid.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This is achieved by creating instances of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Table styles specify the formatting of specific tables, distinct from the default formatting of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control itself.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Each table may have only one table style defined for it at a time.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Sometimes, you will want to have a specific column look different from the rest of the columns of a particular data table.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can create a customized set of column styles by using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Column styles are related to columns in a dataset just like table styles are related to data tables.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Just as each table may only have one table style defined for it at a time, so too can each column only have one column style defined for it, in a particular table style.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This relationship is defined in the column's <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you have created a table style without column styles added to it, Visual Studio will add default column styles when the form and grid are created at run time.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>However, if you have created a table style and added any column styles to it, Visual Studio will not create any column styles.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Also, you will need to define column styles and assign them with the mapping name to have the columns that you want appear in the grid.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Because you specify which columns are included in the data grid by assigning them a column style and no column style has been assigned to the columns, you can include columns of data in the dataset that are not displayed in the grid.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>However, because the data column is included in the dataset, you can programmatically edit the data that is not displayed.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In general, create column styles and add them to the column styles collection before adding table styles to the table styles collection.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When you add an empty table style to the collection, column styles are automatically generated for you.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Consequently, an exception will be thrown if you try to add new column styles with duplicate <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A&gt;</ph> values to the column styles collection.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Sometimes, you will want to just tweak one column among many columns; for example, the dataset contains 50 columns and you only want 49 of them.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In this case, it is easier to import all 50 columns and programmatically remove one, rather than programmatically adding each of the 49 individual columns you want.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Formatting</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Formatting that can be applied to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control includes border styles, gridline styles, fonts, caption properties, data alignment, and alternating background colors between rows.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Format the Windows Forms DataGrid Control<ept id="p1">](how-to-format-the-windows-forms-datagrid-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Events</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Besides the common control events such as <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid.Scroll&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control supports events associated with editing and navigation within the grid.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCell%2A&gt;</ph> property determines which cell is selected.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.CurrentCellChanged&gt;</ph> event is raised when the user navigates to a new cell.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>When the user navigates to a new table through parent/child relations, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Navigate&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.BackButtonClick&gt;</ph> event is raised when the user clicks the back button when the user is viewing a child table, and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick&gt;</ph> event is raised when the show/hide parent rows icon is clicked.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DataGrid Control<ept id="p1">](datagrid-control-windows-forms.md)</ept></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Bind the Windows Forms DataGrid Control to a Data Source<ept id="p1">](how-to-bind-the-windows-forms-datagrid-control-to-a-data-source.md)</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Add Tables and Columns to the Windows Forms DataGrid Control<ept id="p1">](how-to-add-tables-and-columns-to-the-windows-forms-datagrid-control.md)</ept></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Delete or Hide Columns in the Windows Forms DataGrid Control<ept id="p1">](how-to-delete-or-hide-columns-in-the-windows-forms-datagrid-control.md)</ept></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Format the Windows Forms DataGrid Control<ept id="p1">](how-to-format-the-windows-forms-datagrid-control.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>