{"content":"---\ntitle: \"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: c7cb3b77-3424-4b54-9efa-4dc715948e41\n---\n# How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)\nXPath expressions can find nodes in a particular namespace. XPath expressions use namespace prefixes for specifying namespaces. To parse an XPath expression that contains namespace prefixes, you must pass an object to the XPath methods that implements <xref:System.Xml.IXmlNamespaceResolver>. This example uses <xref:System.Xml.XmlNamespaceManager>.  \n  \n The XPath expression is:  \n  \n `./aw:*`  \n  \n## Example  \n The following example reads an XML tree that contains two namespaces. It uses an <xref:System.Xml.XmlReader> to read the XML document. It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>. It uses the <xref:System.Xml.XmlNamespaceManager> when selecting elements.  \n  \n```vb  \nDim reader As XmlReader = _  \n        XmlReader.Create(\"ConsolidatedPurchaseOrders.xml\")  \nDim root As XElement = XElement.Load(reader)  \nDim nameTable As XmlNameTable = reader.NameTable  \nDim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \nnamespaceManager.AddNamespace(\"aw\", \"http://www.adventure-works.com\")  \n  \nDim list1 As IEnumerable(Of XElement) = _  \n        root.XPathSelectElements(\"./aw:*\", namespaceManager)  \nDim list2 As IEnumerable(Of XElement) = _  \n    From el In root.Elements() _  \n    Where el.Name.Namespace = \"http://www.adventure-works.com\" _  \n    Select el  \n  \nIf list1.Count() = list2.Count() And _  \n        list1.Intersect(list2).Count() = list1.Count() Then  \n    Console.WriteLine(\"Results are identical\")  \nElse  \n    Console.WriteLine(\"Results differ\")  \nEnd If  \nFor Each el As XElement In list2  \n    Console.WriteLine(el)  \nNext  \n```  \n  \n This example produces the following output:  \n  \n```  \nResults are identical  \n<aw:PurchaseOrder PONumber=\"11223\" Date=\"2000-01-15\" xmlns:aw=\"http://www.adventure-works.com\">  \n    <aw:ShippingAddress>  \n      <aw:Name>Chris Preston</aw:Name>  \n      <aw:Street>123 Main St.</aw:Street>  \n      <aw:City>Seattle</aw:City>  \n      <aw:State>WA</aw:State>  \n      <aw:Zip>98113</aw:Zip>  \n      <aw:Country>USA</aw:Country>  \n    </aw:ShippingAddress>  \n    <aw:BillingAddress>  \n      <aw:Name>Chris Preston</aw:Name>  \n      <aw:Street>123 Main St.</aw:Street>  \n      <aw:City>Seattle</aw:City>  \n      <aw:State>WA</aw:State>  \n      <aw:Zip>98113</aw:Zip>  \n      <aw:Country>USA</aw:Country>  \n    </aw:BillingAddress>  \n    <aw:DeliveryInstructions>Ship only complete order.</aw:DeliveryInstructions>  \n    <aw:Item PartNum=\"LIT-01\">  \n      <aw:ProductID>Litware Networking Card</aw:ProductID>  \n      <aw:Qty>1</aw:Qty>  \n      <aw:Price>20.99</aw:Price>  \n    </aw:Item>  \n    <aw:Item PartNum=\"LIT-25\">  \n      <aw:ProductID>Litware 17in LCD Monitor</aw:ProductID>  \n      <aw:Qty>1</aw:Qty>  \n      <aw:Price>199.99</aw:Price>  \n    </aw:Item>  \n  </aw:PurchaseOrder>  \n```  \n  \n## See also\n\n- [LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)\n","nodes":[{"pos":[4,153],"embed":true,"restype":"x-metadata","content":"title: \"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: c7cb3b77-3424-4b54-9efa-4dc715948e41","nodes":[{"content":"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)","nodes":[{"pos":[0,71],"content":"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)","pos":[0,71]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[160,231],"content":"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)","linkify":"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Find Elements in a Namespace (XPath-LINQ to XML) (Visual Basic)","pos":[0,71]}]},{"content":"XPath expressions can find nodes in a particular namespace.","pos":[232,291]},{"content":"XPath expressions use namespace prefixes for specifying namespaces.","pos":[292,359]},{"content":"To parse an XPath expression that contains namespace prefixes, you must pass an object to the XPath methods that implements <ph id=\"ph1\">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph>.","pos":[360,524],"source":" To parse an XPath expression that contains namespace prefixes, you must pass an object to the XPath methods that implements <xref:System.Xml.IXmlNamespaceResolver>."},{"content":"This example uses <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>.","pos":[525,581],"source":" This example uses <xref:System.Xml.XmlNamespaceManager>."},{"content":"The XPath expression is:","pos":[588,612]},{"pos":[636,643],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example reads an XML tree that contains two namespaces.","pos":[647,716]},{"content":"It uses an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> to read the XML document.","pos":[717,781],"source":" It uses an <xref:System.Xml.XmlReader> to read the XML document."},{"content":"It then gets an <ph id=\"ph1\">&lt;xref:System.Xml.XmlNameTable&gt;</ph> from the <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph>, and an <ph id=\"ph3\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> from the <ph id=\"ph4\">&lt;xref:System.Xml.XmlNameTable&gt;</ph>.","pos":[782,952],"source":" It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>."},{"content":"It uses the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> when selecting elements.","pos":[953,1027],"source":" It uses the <xref:System.Xml.XmlNamespaceManager> when selecting elements."},{"content":"This example produces the following output:","pos":[1950,1993]},{"pos":[3142,3150],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3154,3287],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML for XPath Users (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept>","source":"[LINQ to XML for XPath Users (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)"}]}