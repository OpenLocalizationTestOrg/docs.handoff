{"content":"---\ntitle: \"How to: Create and Bind to an ObservableCollection\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"data binding [WPF], ObservableCollection class\"\n  - \"notifications [WPF]\"\nms.assetid: 6cf7e275-df76-41c6-a611-53b889b8fd5a\n---\n# How to: Create and Bind to an ObservableCollection\nThis example shows how to create and bind to a collection that derives from the <xref:System.Collections.ObjectModel.ObservableCollection%601> class, which is a collection class that provides notifications when items get added or removed.  \n  \n## Example  \n The following example shows the implementation of a `NameList` collection:  \n  \n```csharp  \npublic class NameList : ObservableCollection<PersonName>  \n{  \n    public NameList() : base()  \n    {  \n        Add(new PersonName(\"Willa\", \"Cather\"));  \n        Add(new PersonName(\"Isak\", \"Dinesen\"));  \n        Add(new PersonName(\"Victor\", \"Hugo\"));  \n        Add(new PersonName(\"Jules\", \"Verne\"));  \n    }  \n  }  \n  \n  public class PersonName  \n  {  \n      private string firstName;  \n      private string lastName;  \n  \n      public PersonName(string first, string last)  \n      {  \n          this.firstName = first;  \n          this.lastName = last;  \n      }  \n  \n      public string FirstName  \n      {  \n          get { return firstName; }  \n          set { firstName = value; }  \n      }  \n  \n      public string LastName  \n      {  \n          get { return lastName; }  \n          set { lastName = value; }  \n      }  \n  }  \n```  \n  \n```vb  \nPublic Class NameList  \n    Inherits ObservableCollection(Of PersonName)  \n  \n    ' Methods  \n    Public Sub New()  \n        MyBase.Add(New PersonName(\"Willa\", \"Cather\"))  \n        MyBase.Add(New PersonName(\"Isak\", \"Dinesen\"))  \n        MyBase.Add(New PersonName(\"Victor\", \"Hugo\"))  \n        MyBase.Add(New PersonName(\"Jules\", \"Verne\"))  \n    End Sub  \n  \nEnd Class  \n  \nPublic Class PersonName  \n    ' Methods  \n    Public Sub New(ByVal first As String, ByVal last As String)  \n        Me._firstName = first  \n        Me._lastName = last  \n    End Sub  \n  \n    ' Properties  \n    Public Property FirstName() As String  \n        Get  \n            Return Me._firstName  \n        End Get  \n        Set(ByVal value As String)  \n            Me._firstName = value  \n        End Set  \n    End Property  \n  \n    Public Property LastName() As String  \n        Get  \n            Return Me._lastName  \n        End Get  \n        Set(ByVal value As String)  \n            Me._lastName = value  \n        End Set  \n    End Property  \n  \n    ' Fields  \n    Private _firstName As String  \n    Private _lastName As String  \nEnd Class  \n```  \n  \n You can make the collection available for binding the same way you would with other [!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)] objects, as described in [Make Data Available for Binding in XAML](how-to-make-data-available-for-binding-in-xaml.md). For example, you can instantiate the collection in [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] and specify the collection as a resource, as shown here:  \n  \n```xaml  \n<Window  \n  xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"  \n  xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"  \n  xmlns:c=\"clr-namespace:SDKSample\"  \n  x:Class=\"SDKSample.Window1\"  \n  Width=\"400\"  \n  Height=\"280\"  \n  Title=\"MultiBinding Sample\">  \n  \n  <Window.Resources>  \n    <c:NameList x:Key=\"NameListData\"/>  \n  \n...  \n  \n</Window.Resources>  \n```  \n  \n You can then bind to the collection:  \n  \n```xaml  \n<ListBox Width=\"200\"  \n         ItemsSource=\"{Binding Source={StaticResource NameListData}}\"  \n         ItemTemplate=\"{StaticResource NameItemTemplate}\"  \n         IsSynchronizedWithCurrentItem=\"True\"/>  \n```  \n  \n The definition of `NameItemTemplate` is not shown here.  \n  \n> [!NOTE]\n>  The objects in your collection must satisfy the requirements described in the [Binding Sources Overview](binding-sources-overview.md). In particular, if you are using <xref:System.Windows.Data.BindingMode.OneWay> or <xref:System.Windows.Data.BindingMode.TwoWay> (for example, you want your [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] to update when the source properties change dynamically), you must implement a suitable property changed notification mechanism such as the <xref:System.ComponentModel.INotifyPropertyChanged> interface.  \n  \n For more information, see the Binding to Collections section in the [Data Binding Overview](data-binding-overview.md).  \n  \n## See also\n\n- [Sort Data in a View](how-to-sort-data-in-a-view.md)\n- [Filter Data in a View](how-to-filter-data-in-a-view.md)\n- [Sort and Group Data Using a View in XAML](how-to-sort-and-group-data-using-a-view-in-xaml.md)\n- [Data Binding Overview](data-binding-overview.md)\n- [How-to Topics](data-binding-how-to-topics.md)\n","nodes":[{"pos":[4,269],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create and Bind to an ObservableCollection\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"data binding [WPF], ObservableCollection class\"\n  - \"notifications [WPF]\"\nms.assetid: 6cf7e275-df76-41c6-a611-53b889b8fd5a","nodes":[{"content":"How to: Create and Bind to an ObservableCollection","nodes":[{"pos":[0,50],"content":"How to: Create and Bind to an ObservableCollection","nodes":[{"content":"How to: Create and Bind to an ObservableCollection","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[276,326],"content":"How to: Create and Bind to an ObservableCollection","linkify":"How to: Create and Bind to an ObservableCollection","nodes":[{"content":"How to: Create and Bind to an ObservableCollection","pos":[0,50]}]},{"pos":[327,565],"content":"This example shows how to create and bind to a collection that derives from the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> class, which is a collection class that provides notifications when items get added or removed.","source":"This example shows how to create and bind to a collection that derives from the <xref:System.Collections.ObjectModel.ObservableCollection%601> class, which is a collection class that provides notifications when items get added or removed."},{"pos":[574,581],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[585,659],"content":"The following example shows the implementation of a <ph id=\"ph1\">`NameList`</ph> collection:","source":"The following example shows the implementation of a `NameList` collection:"},{"content":"You can make the collection available for binding the same way you would with other <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)]</ph> objects, as described in <bpt id=\"p1\">[</bpt>Make Data Available for Binding in XAML<ept id=\"p1\">](how-to-make-data-available-for-binding-in-xaml.md)</ept>.","pos":[2655,2925],"source":"You can make the collection available for binding the same way you would with other [!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)] objects, as described in [Make Data Available for Binding in XAML](how-to-make-data-available-for-binding-in-xaml.md)."},{"content":"For example, you can instantiate the collection in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> and specify the collection as a resource, as shown here:","pos":[2926,3105],"source":" For example, you can instantiate the collection in [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] and specify the collection as a resource, as shown here:"},{"content":"You can then bind to the collection:","pos":[3507,3543]},{"pos":[3774,3829],"content":"The definition of <ph id=\"ph1\">`NameItemTemplate`</ph> is not shown here.","source":"The definition of `NameItemTemplate` is not shown here."},{"pos":[3837,4408],"content":"[!NOTE]\n The objects in your collection must satisfy the requirements described in the [Binding Sources Overview](binding-sources-overview.md). In particular, if you are using <xref:System.Windows.Data.BindingMode.OneWay> or <xref:System.Windows.Data.BindingMode.TwoWay> (for example, you want your [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] to update when the source properties change dynamically), you must implement a suitable property changed notification mechanism such as the <xref:System.ComponentModel.INotifyPropertyChanged> interface.","leadings":["","> "],"nodes":[{"content":"The objects in your collection must satisfy the requirements described in the [Binding Sources Overview](binding-sources-overview.md). In particular, if you are using <xref:System.Windows.Data.BindingMode.OneWay> or <xref:System.Windows.Data.BindingMode.TwoWay> (for example, you want your [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] to update when the source properties change dynamically), you must implement a suitable property changed notification mechanism such as the <xref:System.ComponentModel.INotifyPropertyChanged> interface.","pos":[9,569],"nodes":[{"content":"The objects in your collection must satisfy the requirements described in the <bpt id=\"p1\">[</bpt>Binding Sources Overview<ept id=\"p1\">](binding-sources-overview.md)</ept>.","pos":[0,134],"source":"The objects in your collection must satisfy the requirements described in the [Binding Sources Overview](binding-sources-overview.md)."},{"content":"In particular, if you are using <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingMode.OneWay&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> (for example, you want your <ph id=\"ph3\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> to update when the source properties change dynamically), you must implement a suitable property changed notification mechanism such as the <ph id=\"ph4\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.","pos":[135,560],"source":" In particular, if you are using <xref:System.Windows.Data.BindingMode.OneWay> or <xref:System.Windows.Data.BindingMode.TwoWay> (for example, you want your [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] to update when the source properties change dynamically), you must implement a suitable property changed notification mechanism such as the <xref:System.ComponentModel.INotifyPropertyChanged> interface."}]}]},{"pos":[4415,4533],"content":"For more information, see the Binding to Collections section in the <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](data-binding-overview.md)</ept>.","source":"For more information, see the Binding to Collections section in the [Data Binding Overview](data-binding-overview.md)."},{"pos":[4542,4550],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4554,4606],"content":"<bpt id=\"p1\">[</bpt>Sort Data in a View<ept id=\"p1\">](how-to-sort-data-in-a-view.md)</ept>","source":"[Sort Data in a View](how-to-sort-data-in-a-view.md)"},{"pos":[4609,4665],"content":"<bpt id=\"p1\">[</bpt>Filter Data in a View<ept id=\"p1\">](how-to-filter-data-in-a-view.md)</ept>","source":"[Filter Data in a View](how-to-filter-data-in-a-view.md)"},{"pos":[4668,4762],"content":"<bpt id=\"p1\">[</bpt>Sort and Group Data Using a View in XAML<ept id=\"p1\">](how-to-sort-and-group-data-using-a-view-in-xaml.md)</ept>","source":"[Sort and Group Data Using a View in XAML](how-to-sort-and-group-data-using-a-view-in-xaml.md)"},{"pos":[4765,4814],"content":"<bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](data-binding-overview.md)</ept>","source":"[Data Binding Overview](data-binding-overview.md)"},{"pos":[4817,4863],"content":"<bpt id=\"p1\">[</bpt>How-to Topics<ept id=\"p1\">](data-binding-how-to-topics.md)</ept>","source":"[How-to Topics](data-binding-how-to-topics.md)"}]}