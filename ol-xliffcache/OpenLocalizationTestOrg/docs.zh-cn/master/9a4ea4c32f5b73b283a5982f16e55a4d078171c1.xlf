<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-compress-and-extract-files.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a4ea4c32f5b73b283a5982f16e55a4d078171c1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\io\how-to-compress-and-extract-files.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f37f9cf0f91e21dad317f305215d4f3baa9b6cc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2fb0cad8fd4a4c528bcaff967b26e38ac4f717b5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Compress and extract files</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Compress and extract files</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression&gt;</ph> namespace contains the following types for compressing and decompressing files and streams.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can also use these types to read and modify the contents of a compressed file.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following examples show some of the operations you can perform with compressed files.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example 1: Create and extract a .zip file</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following example shows how to create and extract a compressed <bpt id="p1">*</bpt>.zip<ept id="p1">*</ept> file by using the <ph id="ph1">&lt;xref:System.IO.Compression.ZipFile&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The example compresses the contents of a folder into a new <bpt id="p1">*</bpt>.zip<ept id="p1">*</ept> file, and then extracts the zip to a new folder.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To run the sample, create a <bpt id="p1">*</bpt>start<ept id="p1">*</ept> folder in your program folder and populate it with files to zip.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you get the build error "The name 'ZipFile' does not exist in the current context," add a reference to the <ph id="ph1">`System.IO.Compression.FileSystem`</ph> assembly to your project.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example 2: Extract specific file extensions</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The next example iterates through the contents of an existing <bpt id="p1">*</bpt>.zip<ept id="p1">*</ept> file and extracts files that have a <bpt id="p2">*</bpt>.txt<ept id="p2">*</ept> extension.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It uses the <ph id="ph1">&lt;xref:System.IO.Compression.ZipArchive&gt;</ph> class to access the zip, and the <ph id="ph2">&lt;xref:System.IO.Compression.ZipArchiveEntry&gt;</ph> class to inspect the individual entries.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The extension method <ph id="ph1">&lt;xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.IO.Compression.ZipArchiveEntry&gt;</ph> object is available in the <ph id="ph3">&lt;xref:System.IO.Compression.ZipFileExtensions?displayProperty=nameWithType&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To run the sample, place a <bpt id="p1">*</bpt>.zip<ept id="p1">*</ept> file called <bpt id="p2">*</bpt>result.zip<ept id="p2">*</ept> in your program folder.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When prompted, provide a folder name to extract to.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you get the build error "The name 'ZipFile' does not exist in the current context," add a reference to the <ph id="ph1">`System.IO.Compression.FileSystem`</ph> assembly to your project.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you get the error "The type 'ZipArchive' is defined in an assembly that is not referenced," add a reference to the <ph id="ph1">`System.IO.Compression`</ph> assembly to your project.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When unzipping files, you must look for malicious file paths, which can escape out of the directory you unzip into.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is known as a path traversal attack.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to check for malicious file paths and provides a safe way to unzip.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 3: Add a file to an existing zip</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.Compression.ZipArchive&gt;</ph> class to access an existing <bpt id="p1">*</bpt>.zip<ept id="p1">*</ept> file, and adds a file to it.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The new file gets compressed when you add it to the existing zip.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 4: Compress and decompress .gz files</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> classes to compress and decompress data.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>They use the same compression algorithm.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can decompress <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> objects that are written to a <bpt id="p1">*</bpt>.gz<ept id="p1">*</ept> file by using many common tools.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example shows how to compress and decompress a directory of files by using the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>File and stream I/O<ept id="p1">](../../../docs/standard/io/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>