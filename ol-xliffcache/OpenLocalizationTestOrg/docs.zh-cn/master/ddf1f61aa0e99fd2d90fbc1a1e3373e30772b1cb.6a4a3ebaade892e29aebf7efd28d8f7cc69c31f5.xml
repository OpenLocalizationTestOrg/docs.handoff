{"content":"---\ntitle: \"How to: Create and Initialize Trace Listeners | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"initializing trace listeners\"\n  - \"trace listeners, creating\"\n  - \"trace listeners, initializing\"\n  - \"tracing [.NET Framework], trace listeners\"\n  - \"logs, trace listeners\"\nms.assetid: 21726de1-61ee-4fdc-9dd0-3be49324d066\ncaps.latest.revision: 12\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# How to: Create and Initialize Trace Listeners\nThe <xref:System.Diagnostics.Debug?displayProperty=fullName> and <xref:System.Diagnostics.Trace?displayProperty=fullName> classes send messages to objects called listeners that receive and process these messages. One such listener, the <xref:System.Diagnostics.DefaultTraceListener?displayProperty=fullName>, is automatically created and initialized when tracing or debugging is enabled. If you want <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> output to be directed to any additional sources, you must create and initialize additional trace listeners.  \n  \n The listeners you create should reflect your application's needs. For example, if you want a text record of all trace output, create a <xref:System.Diagnostics.TextWriterTraceListener> listener, which writes all output to a new text file when it is enabled. On the other hand, if you want to view output only during application execution, create a <xref:System.Diagnostics.ConsoleTraceListener> listener, which directs all output to a console window. The <xref:System.Diagnostics.EventLogTraceListener> can direct trace output to an event log. For more information, see [Trace Listeners](../../../docs/framework/debug-trace-profile/trace-listeners.md).  \n  \n You can create trace listeners in an [application configuration file](../../../docs/framework/configure-apps/index.md) or in your code. We recommend the use of application configuration files, because they let you add, modify, or remove trace listeners without having to change your code.  \n  \n### To create and use a trace listener by using a configuration file  \n  \n1.  Declare your trace listener in your application configuration file. If the listener you are creating requires any other objects, declare them as well. The following example shows how to create a listener called `myListener` that writes to the text file `TextWriterOutput.log`.  \n  \n    ```  \n    <configuration>  \n      <system.diagnostics>  \n        <trace autoflush=\"false\" indentsize=\"4\">  \n          <listeners>  \n            <add name=\"myListener\" type=\"System.Diagnostics.TextWriterTraceListener\" initializeData=\"TextWriterOutput.log\" />  \n            <remove name=\"Default\" />  \n          </listeners>  \n        </trace>  \n      </system.diagnostics>  \n    </configuration>  \n    ```  \n  \n2.  Use the <xref:System.Diagnostics.Trace> class in your code to write a message to the trace listeners.  \n  \n    ```vb  \n    Trace.TraceInformation(\"Test message.\")  \n    ' You must close or flush the trace to empty the output buffer.  \n    Trace.Flush()  \n    ```  \n  \n    ```csharp  \n    Trace.TraceInformation(\"Test message.\");  \n    // You must close or flush the trace to empty the output buffer.  \n    Trace.Flush();  \n    ```  \n  \n### To create and use a trace listener in code  \n  \n-   Add the trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection and send trace information to the listeners.  \n  \n    ```vb  \n    Trace.Listeners.Add(New TextWriterTraceListener(\"TextWriterOutput.log\", \"myListener\"))  \n    Trace.TraceInformation(\"Test message.\")  \n    ' You must close or flush the trace to empty the output buffer.  \n    Trace.Flush()  \n    ```  \n  \n    ```csharp  \n    Trace.Listeners.Add(new TextWriterTraceListener(\"TextWriterOutput.log\", \"myListener\"));  \n    Trace.TraceInformation(\"Test message.\");  \n    // You must close or flush the trace to empty the output buffer.  \n    Trace.Flush();  \n    ```  \n  \n     - or -  \n  \n-   If you do not want your listener to receive trace output, do not add it to the <xref:System.Diagnostics.Trace.Listeners%2A> collection. You can emit output through a listener independent of the <xref:System.Diagnostics.Trace.Listeners%2A> collection by calling the listener's own output methods. The following example shows how to write a line to a listener that is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.  \n  \n    ```vb  \n    Dim myListener As New TextWriterTraceListener(\"TextWriterOutput.log\", \"myListener\")  \n    myListener.WriteLine(\"Test message.\")  \n    ' You must close or flush the trace listener to empty the output buffer.  \n    myListener.Flush()  \n    ```  \n  \n    ```csharp  \n    TextWriterTraceListener myListener = new TextWriterTraceListener(\"TextWriterOutput.log\", \"myListener\");  \n    myListener.WriteLine(\"Test message.\");  \n    // You must close or flush the trace listener to empty the output buffer.  \n    myListener.Flush();  \n    ```  \n  \n## See Also  \n [Trace Listeners](../../../docs/framework/debug-trace-profile/trace-listeners.md)   \n [Trace Switches](../../../docs/framework/debug-trace-profile/trace-switches.md)   \n [How to: Add Trace Statements to Application Code](../../../docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md)   \n [Tracing and Instrumenting Applications](../../../docs/framework/debug-trace-profile/tracing-and-instrumenting-applications.md)","nodes":[{"pos":[12,74],"content":"How to: Create and Initialize Trace Listeners | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Create and Initialize Trace Listeners | Microsoft Docs","pos":[0,62]}]},{"pos":[633,678],"content":"How to: Create and Initialize Trace Listeners","linkify":"How to: Create and Initialize Trace Listeners","nodes":[{"content":"How to: Create and Initialize Trace Listeners","pos":[0,45]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt;</ph> classes send messages to objects called listeners that receive and process these messages.","pos":[679,891],"source":"The <xref:System.Diagnostics.Debug?displayProperty=fullName> and <xref:System.Diagnostics.Trace?displayProperty=fullName> classes send messages to objects called listeners that receive and process these messages."},{"content":"One such listener, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener?displayProperty=fullName&gt;</ph>, is automatically created and initialized when tracing or debugging is enabled.","pos":[892,1066],"source":" One such listener, the <xref:System.Diagnostics.DefaultTraceListener?displayProperty=fullName>, is automatically created and initialized when tracing or debugging is enabled."},{"content":"If you want <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug&gt;</ph> output to be directed to any additional sources, you must create and initialize additional trace listeners.","pos":[1067,1253],"source":" If you want <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> output to be directed to any additional sources, you must create and initialize additional trace listeners."},{"content":"The listeners you create should reflect your application's needs.","pos":[1260,1325]},{"content":"For example, if you want a text record of all trace output, create a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> listener, which writes all output to a new text file when it is enabled.","pos":[1326,1517],"source":" For example, if you want a text record of all trace output, create a <xref:System.Diagnostics.TextWriterTraceListener> listener, which writes all output to a new text file when it is enabled."},{"content":"On the other hand, if you want to view output only during application execution, create a <ph id=\"ph1\">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> listener, which directs all output to a console window.","pos":[1518,1710],"source":" On the other hand, if you want to view output only during application execution, create a <xref:System.Diagnostics.ConsoleTraceListener> listener, which directs all output to a console window."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> can direct trace output to an event log.","pos":[1711,1803],"source":" The <xref:System.Diagnostics.EventLogTraceListener> can direct trace output to an event log."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Trace Listeners<ept id=\"p1\">](../../../docs/framework/debug-trace-profile/trace-listeners.md)</ept>.","pos":[1804,1912],"source":" For more information, see [Trace Listeners](../../../docs/framework/debug-trace-profile/trace-listeners.md)."},{"content":"You can create trace listeners in an <bpt id=\"p1\">[</bpt>application configuration file<ept id=\"p1\">](../../../docs/framework/configure-apps/index.md)</ept> or in your code.","pos":[1919,2054],"source":"You can create trace listeners in an [application configuration file](../../../docs/framework/configure-apps/index.md) or in your code."},{"content":"We recommend the use of application configuration files, because they let you add, modify, or remove trace listeners without having to change your code.","pos":[2055,2207]},{"pos":[2217,2281],"content":"To create and use a trace listener by using a configuration file","linkify":"To create and use a trace listener by using a configuration file","nodes":[{"content":"To create and use a trace listener by using a configuration file","pos":[0,64]}]},{"content":"Declare your trace listener in your application configuration file.","pos":[2291,2358]},{"content":"If the listener you are creating requires any other objects, declare them as well.","pos":[2359,2441]},{"content":"The following example shows how to create a listener called <ph id=\"ph1\">`myListener`</ph> that writes to the text file <ph id=\"ph2\">`TextWriterOutput.log`</ph>.","pos":[2442,2567],"source":" The following example shows how to create a listener called `myListener` that writes to the text file `TextWriterOutput.log`."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace&gt;</ph> class in your code to write a message to the trace listeners.","pos":[2991,3092],"source":"Use the <xref:System.Diagnostics.Trace> class in your code to write a message to the trace listeners."},{"pos":[3431,3473],"content":"To create and use a trace listener in code","linkify":"To create and use a trace listener in code","nodes":[{"content":"To create and use a trace listener in code","pos":[0,42]}]},{"content":"Add the trace listener to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection and send trace information to the listeners.","pos":[3483,3613],"source":"Add the trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection and send trace information to the listeners."},{"content":"or -","pos":[4142,4146]},{"content":"If you do not want your listener to receive trace output, do not add it to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.","pos":[4156,4291],"source":"If you do not want your listener to receive trace output, do not add it to the <xref:System.Diagnostics.Trace.Listeners%2A> collection."},{"content":"You can emit output through a listener independent of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection by calling the listener's own output methods.","pos":[4292,4451],"source":" You can emit output through a listener independent of the <xref:System.Diagnostics.Trace.Listeners%2A> collection by calling the listener's own output methods."},{"content":"The following example shows how to write a line to a listener that is not in the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.","pos":[4452,4589],"source":" The following example shows how to write a line to a listener that is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection."},{"pos":[5151,5159],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Trace Listeners<ept id=\"p1\">](../../../docs/framework/debug-trace-profile/trace-listeners.md)</ept><ph id=\"ph1\"> </ph>","pos":[5163,5245],"source":"[Trace Listeners](../../../docs/framework/debug-trace-profile/trace-listeners.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Trace Switches<ept id=\"p1\">](../../../docs/framework/debug-trace-profile/trace-switches.md)</ept><ph id=\"ph1\"> </ph>","pos":[5248,5329],"source":" [Trace Switches](../../../docs/framework/debug-trace-profile/trace-switches.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Add Trace Statements to Application Code<ept id=\"p1\">](../../../docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md)</ept><ph id=\"ph1\"> </ph>","pos":[5332,5480],"source":" [How to: Add Trace Statements to Application Code](../../../docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Tracing and Instrumenting Applications<ept id=\"p1\">](../../../docs/framework/debug-trace-profile/tracing-and-instrumenting-applications.md)</ept>","pos":[5483,5611],"source":" [Tracing and Instrumenting Applications](../../../docs/framework/debug-trace-profile/tracing-and-instrumenting-applications.md)"}]}