{"content":"---\ntitle: \"struct (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"struct_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"struct keyword [C#]\"\n  - \"structs [C#], struct keyword\"\nms.assetid: ff3dd9b7-dc93-4720-8855-ef5558f65c7c\ncaps.latest.revision: 23\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# struct (C# Reference)\nA `struct` type is a value type that is typically used to encapsulate small groups of related variables, such as the coordinates of a rectangle or the characteristics of an item in an inventory. The following example shows a simple struct declaration:  \n  \n```  \npublic struct Book  \n{  \n    public decimal price;  \n    public string title;  \n    public string author;  \n}  \n```  \n  \n## Remarks  \n Structs can also contain [constructors](../../../csharp/programming-guide/classes-and-structs/constructors.md), [constants](../../../csharp/programming-guide/classes-and-structs/constants.md), [fields](../../../csharp/programming-guide/classes-and-structs/fields.md), [methods](../../../csharp/programming-guide/classes-and-structs/methods.md), [properties](../../../csharp/programming-guide/classes-and-structs/properties.md), [indexers](../../../csharp/programming-guide/indexers/index.md), [operators](../../../csharp/programming-guide/statements-expressions-operators/operators.md), [events](../../../csharp/programming-guide/events/index.md), and [nested types](../../../csharp/programming-guide/classes-and-structs/nested-types.md), although if several such members are required, you should consider making your type a class instead.  \n  \n For examples, see [Using Structs](../../../csharp/programming-guide/classes-and-structs/using-structs.md).  \n  \n Structs can implement an interface but they cannot inherit from another struct. For that reason, struct members cannot be declared as `protected`.  \n  \n For more information, see [Structs](../../../csharp/programming-guide/classes-and-structs/structs.md).  \n  \n## Examples  \n For examples and more information, see [Using Structs](../../../csharp/programming-guide/classes-and-structs/using-structs.md).  \n  \n## C# Language Specification  \n For examples, see [Using Structs](../../../csharp/programming-guide/classes-and-structs/using-structs.md).  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Keywords](../../../csharp/language-reference/keywords/index.md)   \n [Default Values Table](../../../csharp/language-reference/keywords/default-values-table.md)   \n [Built-In Types Table](../../../csharp/language-reference/keywords/built-in-types-table.md)   \n [Types](../../../csharp/language-reference/keywords/types.md)   \n [Value Types](../../../csharp/language-reference/keywords/value-types.md)   \n [class](../../../csharp/language-reference/keywords/class.md)   \n [interface](../../../csharp/language-reference/keywords/interface.md)   \n [Classes and Structs](../../../csharp/programming-guide/classes-and-structs/index.md)","nodes":[{"pos":[12,50],"content":"struct (C# Reference) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"struct (C# Reference) | Microsoft Docs","pos":[0,38]}]},{"pos":[597,618],"content":"struct (C# Reference)","linkify":"struct (C# Reference)","nodes":[{"content":"struct (C# Reference)","pos":[0,21]}]},{"content":"A <ph id=\"ph1\">`struct`</ph> type is a value type that is typically used to encapsulate small groups of related variables, such as the coordinates of a rectangle or the characteristics of an item in an inventory.","pos":[619,813],"source":"A `struct` type is a value type that is typically used to encapsulate small groups of related variables, such as the coordinates of a rectangle or the characteristics of an item in an inventory."},{"content":"The following example shows a simple struct declaration:","pos":[814,870]},{"pos":[1006,1013],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1017,1856],"content":"Structs can also contain <bpt id=\"p1\">[</bpt>constructors<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/constructors.md)</ept>, <bpt id=\"p2\">[</bpt>constants<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/constants.md)</ept>, <bpt id=\"p3\">[</bpt>fields<ept id=\"p3\">](../../../csharp/programming-guide/classes-and-structs/fields.md)</ept>, <bpt id=\"p4\">[</bpt>methods<ept id=\"p4\">](../../../csharp/programming-guide/classes-and-structs/methods.md)</ept>, <bpt id=\"p5\">[</bpt>properties<ept id=\"p5\">](../../../csharp/programming-guide/classes-and-structs/properties.md)</ept>, <bpt id=\"p6\">[</bpt>indexers<ept id=\"p6\">](../../../csharp/programming-guide/indexers/index.md)</ept>, <bpt id=\"p7\">[</bpt>operators<ept id=\"p7\">](../../../csharp/programming-guide/statements-expressions-operators/operators.md)</ept>, <bpt id=\"p8\">[</bpt>events<ept id=\"p8\">](../../../csharp/programming-guide/events/index.md)</ept>, and <bpt id=\"p9\">[</bpt>nested types<ept id=\"p9\">](../../../csharp/programming-guide/classes-and-structs/nested-types.md)</ept>, although if several such members are required, you should consider making your type a class instead.","source":"Structs can also contain [constructors](../../../csharp/programming-guide/classes-and-structs/constructors.md), [constants](../../../csharp/programming-guide/classes-and-structs/constants.md), [fields](../../../csharp/programming-guide/classes-and-structs/fields.md), [methods](../../../csharp/programming-guide/classes-and-structs/methods.md), [properties](../../../csharp/programming-guide/classes-and-structs/properties.md), [indexers](../../../csharp/programming-guide/indexers/index.md), [operators](../../../csharp/programming-guide/statements-expressions-operators/operators.md), [events](../../../csharp/programming-guide/events/index.md), and [nested types](../../../csharp/programming-guide/classes-and-structs/nested-types.md), although if several such members are required, you should consider making your type a class instead."},{"pos":[1863,1969],"content":"For examples, see <bpt id=\"p1\">[</bpt>Using Structs<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/using-structs.md)</ept>.","source":"For examples, see [Using Structs](../../../csharp/programming-guide/classes-and-structs/using-structs.md)."},{"content":"Structs can implement an interface but they cannot inherit from another struct.","pos":[1976,2055]},{"content":"For that reason, struct members cannot be declared as <ph id=\"ph1\">`protected`</ph>.","pos":[2056,2122],"source":" For that reason, struct members cannot be declared as `protected`."},{"pos":[2129,2231],"content":"For more information, see <bpt id=\"p1\">[</bpt>Structs<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/structs.md)</ept>.","source":"For more information, see [Structs](../../../csharp/programming-guide/classes-and-structs/structs.md)."},{"pos":[2240,2248],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[2252,2379],"content":"For examples and more information, see <bpt id=\"p1\">[</bpt>Using Structs<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/using-structs.md)</ept>.","source":"For examples and more information, see [Using Structs](../../../csharp/programming-guide/classes-and-structs/using-structs.md)."},{"pos":[2388,2413],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[2417,2523],"content":"For examples, see <bpt id=\"p1\">[</bpt>Using Structs<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/using-structs.md)</ept>.","source":"For examples, see [Using Structs](../../../csharp/programming-guide/classes-and-structs/using-structs.md)."},{"pos":[2532,2540],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2544,2604],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2607,2675],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2678,2747],"source":" [C# Keywords](../../../csharp/language-reference/keywords/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Default Values Table<ept id=\"p1\">](../../../csharp/language-reference/keywords/default-values-table.md)</ept><ph id=\"ph1\"> </ph>","pos":[2750,2843],"source":" [Default Values Table](../../../csharp/language-reference/keywords/default-values-table.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Built-In Types Table<ept id=\"p1\">](../../../csharp/language-reference/keywords/built-in-types-table.md)</ept><ph id=\"ph1\"> </ph>","pos":[2846,2939],"source":" [Built-In Types Table](../../../csharp/language-reference/keywords/built-in-types-table.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2942,3005],"source":" [Types](../../../csharp/language-reference/keywords/types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Value Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/value-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[3008,3083],"source":" [Value Types](../../../csharp/language-reference/keywords/value-types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>class<ept id=\"p1\">](../../../csharp/language-reference/keywords/class.md)</ept><ph id=\"ph1\"> </ph>","pos":[3086,3149],"source":" [class](../../../csharp/language-reference/keywords/class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>interface<ept id=\"p1\">](../../../csharp/language-reference/keywords/interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3152,3223],"source":" [interface](../../../csharp/language-reference/keywords/interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Classes and Structs<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/index.md)</ept>","pos":[3226,3312],"source":" [Classes and Structs](../../../csharp/programming-guide/classes-and-structs/index.md)"}]}