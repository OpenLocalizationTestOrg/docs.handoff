{"content":"---\ntitle: \"Steps in the Serialization Process | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"binary serialization, steps\"\n  - \"serialization, steps\"\nms.assetid: 4bcbc883-2a91-418f-b968-6c86a25e9737\ncaps.latest.revision: 6\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Steps in the Serialization Process\nWhen the `Serialize` method is called on a `formatter]`, object serialization proceeds according to the following sequence of rules:  \n  \n-   A check is made to determine whether the formatter has a surrogate selector. If the formatter does, check whether the surrogate selector handles objects of the given type. If the selector handles the object type, `ISerializable.GetObjectData` is called on the surrogate selector.  \n  \n-   If there is no surrogate selector or if it does not handle the object type, a check is made to determine whether the object is marked with the `Serializable` attribute. If the object is not, a `SerializationException` is thrown.  \n  \n-   If the object is marked appropriately, check whether the object implements the `ISerializabl` interface. If the object does, `GetObjectData` is called on the object.  \n  \n-   If the object does not implement `ISerializable`, the default serialization policy is used, serializing all fields not marked as `NonSerialized`.  \n  \n## See Also  \n [Binary Serialization](../../../docs/framework/serialization/binary-serialization.md)   \n [XML and SOAP Serialization](../../../docs/framework/serialization/xml-and-soap-serialization.md)","nodes":[{"pos":[4,461],"nodes":[{"content":"Steps in the Serialization Process | Microsoft Docs","nodes":[{"pos":[0,51],"content":"Steps in the Serialization Process | Microsoft Docs","nodes":[{"content":"Steps in the Serialization Process | Microsoft Docs","pos":[0,51]}]}],"pos":[6,60],"yaml":true}],"content":"title: \"Steps in the Serialization Process | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"binary serialization, steps\"\n  - \"serialization, steps\"\nms.assetid: 4bcbc883-2a91-418f-b968-6c86a25e9737\ncaps.latest.revision: 6\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","yamlblock":true},{"pos":[468,502],"content":"Steps in the Serialization Process","linkify":"Steps in the Serialization Process","nodes":[{"content":"Steps in the Serialization Process","pos":[0,34]}]},{"pos":[503,635],"content":"When the <ph id=\"ph1\">`Serialize`</ph> method is called on a <ph id=\"ph2\">`formatter]`</ph>, object serialization proceeds according to the following sequence of rules:","source":"When the `Serialize` method is called on a `formatter]`, object serialization proceeds according to the following sequence of rules:"},{"content":"A check is made to determine whether the formatter has a surrogate selector.","pos":[645,721]},{"content":"If the formatter does, check whether the surrogate selector handles objects of the given type.","pos":[722,816]},{"content":"If the selector handles the object type, <ph id=\"ph1\">`ISerializable.GetObjectData`</ph> is called on the surrogate selector.","pos":[817,924],"source":" If the selector handles the object type, `ISerializable.GetObjectData` is called on the surrogate selector."},{"content":"If there is no surrogate selector or if it does not handle the object type, a check is made to determine whether the object is marked with the <ph id=\"ph1\">`Serializable`</ph> attribute.","pos":[934,1102],"source":"If there is no surrogate selector or if it does not handle the object type, a check is made to determine whether the object is marked with the `Serializable` attribute."},{"content":"If the object is not, a <ph id=\"ph1\">`SerializationException`</ph> is thrown.","pos":[1103,1162],"source":" If the object is not, a `SerializationException` is thrown."},{"content":"If the object is marked appropriately, check whether the object implements the <ph id=\"ph1\">`ISerializabl`</ph> interface.","pos":[1172,1276],"source":"If the object is marked appropriately, check whether the object implements the `ISerializabl` interface."},{"content":"If the object does, <ph id=\"ph1\">`GetObjectData`</ph> is called on the object.","pos":[1277,1337],"source":" If the object does, `GetObjectData` is called on the object."},{"pos":[1347,1492],"content":"If the object does not implement <ph id=\"ph1\">`ISerializable`</ph>, the default serialization policy is used, serializing all fields not marked as <ph id=\"ph2\">`NonSerialized`</ph>.","source":"If the object does not implement `ISerializable`, the default serialization policy is used, serializing all fields not marked as `NonSerialized`."},{"pos":[1501,1509],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Binary Serialization<ept id=\"p1\">](../../../docs/framework/serialization/binary-serialization.md)</ept><ph id=\"ph1\"> </ph>","pos":[1513,1599],"source":"[Binary Serialization](../../../docs/framework/serialization/binary-serialization.md) "},{"content":"<bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](../../../docs/framework/serialization/xml-and-soap-serialization.md)</ept>","pos":[1603,1700],"source":"[XML and SOAP Serialization](../../../docs/framework/serialization/xml-and-soap-serialization.md)"}]}