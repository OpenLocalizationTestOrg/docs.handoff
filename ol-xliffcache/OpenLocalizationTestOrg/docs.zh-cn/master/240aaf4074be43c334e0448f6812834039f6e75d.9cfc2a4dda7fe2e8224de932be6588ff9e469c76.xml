{"content":"---\ntitle: \"Operands of type Object used for operator '<operatorsymbol>'; use the 'Is' operator to test object identity\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc42018\"\n  - \"BC42018\"\nhelpviewer_keywords: \n  - \"BC42018\"\nms.assetid: 3fc640a7-7dab-4c14-b25d-a5794dbba59d\n---\n# Operands of type Object used for operator '\\<operatorsymbol>'; use the 'Is' operator to test object identity\nAn expression uses the `=` with one or both operands of the [Object Data Type](../../visual-basic/language-reference/data-types/object-data-type.md).  \n  \n You should use the `Is` or `IsNot` operator to determine whether two object references refer to the same object instance. See \"Comparing Objects\" in [Comparison Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md).  \n  \n When a variable or expression evaluates to `Object`, the compiler must perform *late binding*, which causes extra operations at run time. It also exposes your application to potential run-time errors. For example, if you assign a <xref:System.Windows.Forms.Form> to an `Object` variable and then try to use it with the `=` operator, the runtime throws an <xref:System.InvalidCastException> because Visual Basic cannot convert a <xref:System.Windows.Forms.Form> object to a data type suitable for value comparison. Even if both operands evaluate to type <xref:System.Windows.Forms.Form>, the operation fails because `=` is not defined for <xref:System.Windows.Forms.Form> operands.  \n  \n By default, this message is a warning. For information on hiding warnings or treating warnings as errors, see [Configuring Warnings in Visual Basic](/visualstudio/ide/configuring-warnings-in-visual-basic).  \n  \n **Error ID:** BC42018  \n  \n## To correct this error  \n  \n-   If you want to determine whether two object references refer to the same object instance, use the `Is` or `IsNot` operator.  \n  \n## See also\n\n- [Comparison Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)\n- [Is Operator](../../visual-basic/language-reference/operators/is-operator.md)\n- [How to: Determine Whether Two Objects Are Related](../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-related.md)\n- [How to: Determine Whether Two Objects Are Identical](../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-identical.md)\n","nodes":[{"pos":[4,268],"embed":true,"restype":"x-metadata","content":"title: \"Operands of type Object used for operator '<operatorsymbol>'; use the 'Is' operator to test object identity\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc42018\"\n  - \"BC42018\"\nhelpviewer_keywords: \n  - \"BC42018\"\nms.assetid: 3fc640a7-7dab-4c14-b25d-a5794dbba59d","nodes":[{"content":"Operands of type Object used for operator '<operatorsymbol>'; use the 'Is' operator to test object identity","nodes":[{"pos":[0,107],"content":"Operands of type Object used for operator '<ph id=\"ph1\">&lt;operatorsymbol&gt;</ph>'; use the 'Is' operator to test object identity","source":"Operands of type Object used for operator '<operatorsymbol>'; use the 'Is' operator to test object identity"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[275,383],"content":"Operands of type Object used for operator '\\<operatorsymbol>'; use the 'Is' operator to test object identity","linkify":"Operands of type Object used for operator '\\<operatorsymbol>'; use the 'Is' operator to test object identity","nodes":[{"content":"Operands of type Object used for operator '<ph id=\"ph1\">\\&lt;</ph>operatorsymbol&gt;'; use the 'Is' operator to test object identity","pos":[0,108],"source":"Operands of type Object used for operator '\\<operatorsymbol>'; use the 'Is' operator to test object identity"}]},{"pos":[384,533],"content":"An expression uses the <ph id=\"ph1\">`=`</ph> with one or both operands of the <bpt id=\"p1\">[</bpt>Object Data Type<ept id=\"p1\">](../../visual-basic/language-reference/data-types/object-data-type.md)</ept>.","source":"An expression uses the `=` with one or both operands of the [Object Data Type](../../visual-basic/language-reference/data-types/object-data-type.md)."},{"content":"You should use the <ph id=\"ph1\">`Is`</ph> or <ph id=\"ph2\">`IsNot`</ph> operator to determine whether two object references refer to the same object instance.","pos":[540,661],"source":"You should use the `Is` or `IsNot` operator to determine whether two object references refer to the same object instance."},{"content":"See \"Comparing Objects\" in <bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>.","pos":[662,834],"source":" See \"Comparing Objects\" in [Comparison Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)."},{"content":"When a variable or expression evaluates to <ph id=\"ph1\">`Object`</ph>, the compiler must perform <bpt id=\"p1\">*</bpt>late binding<ept id=\"p1\">*</ept>, which causes extra operations at run time.","pos":[841,978],"source":"When a variable or expression evaluates to `Object`, the compiler must perform *late binding*, which causes extra operations at run time."},{"content":"It also exposes your application to potential run-time errors.","pos":[979,1041]},{"content":"For example, if you assign a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> to an <ph id=\"ph2\">`Object`</ph> variable and then try to use it with the <ph id=\"ph3\">`=`</ph> operator, the runtime throws an <ph id=\"ph4\">&lt;xref:System.InvalidCastException&gt;</ph> because Visual Basic cannot convert a <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Form&gt;</ph> object to a data type suitable for value comparison.","pos":[1042,1354],"source":" For example, if you assign a <xref:System.Windows.Forms.Form> to an `Object` variable and then try to use it with the `=` operator, the runtime throws an <xref:System.InvalidCastException> because Visual Basic cannot convert a <xref:System.Windows.Forms.Form> object to a data type suitable for value comparison."},{"content":"Even if both operands evaluate to type <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the operation fails because <ph id=\"ph2\">`=`</ph> is not defined for <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> operands.","pos":[1355,1521],"source":" Even if both operands evaluate to type <xref:System.Windows.Forms.Form>, the operation fails because `=` is not defined for <xref:System.Windows.Forms.Form> operands."},{"content":"By default, this message is a warning.","pos":[1528,1566]},{"content":"For information on hiding warnings or treating warnings as errors, see <bpt id=\"p1\">[</bpt>Configuring Warnings in Visual Basic<ept id=\"p1\">](/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.","pos":[1567,1733],"source":" For information on hiding warnings or treating warnings as errors, see [Configuring Warnings in Visual Basic](/visualstudio/ide/configuring-warnings-in-visual-basic)."},{"pos":[1740,1761],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC42018","source":"**Error ID:** BC42018"},{"pos":[1770,1791],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1801,1924],"content":"If you want to determine whether two object references refer to the same object instance, use the <ph id=\"ph1\">`Is`</ph> or <ph id=\"ph2\">`IsNot`</ph> operator.","source":"If you want to determine whether two object references refer to the same object instance, use the `Is` or `IsNot` operator."},{"pos":[1933,1941],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1945,2089],"content":"<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>","source":"[Comparison Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)"},{"pos":[2092,2169],"content":"<bpt id=\"p1\">[</bpt>Is Operator<ept id=\"p1\">](../../visual-basic/language-reference/operators/is-operator.md)</ept>","source":"[Is Operator](../../visual-basic/language-reference/operators/is-operator.md)"},{"pos":[2172,2341],"content":"<bpt id=\"p1\">[</bpt>How to: Determine Whether Two Objects Are Related<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-related.md)</ept>","source":"[How to: Determine Whether Two Objects Are Related](../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-related.md)"},{"pos":[2344,2517],"content":"<bpt id=\"p1\">[</bpt>How to: Determine Whether Two Objects Are Identical<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-identical.md)</ept>","source":"[How to: Determine Whether Two Objects Are Identical](../../visual-basic/programming-guide/language-features/variables/how-to-determine-whether-two-objects-are-identical.md)"}]}