{"content":"---\ntitle: \"How to: Write text to a file\"\nms.date: \"01/04/2019\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"writing text to files\"\n  - \"I/O [.NET Framework], writing text to files\"\n  - \"streams, writing text to files\"\n  - \"data streams, writing text to files\"\nms.assetid: 060cbe06-2adf-4337-9e7b-961a5c840208\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# How to: Write text to a file\nThis topic shows different ways to write text to a file for a .NET app. \n\nThe following classes and methods are typically used to write text to a file:  \n  \n-   <xref:System.IO.StreamWriter> contains methods to write to a file synchronously (<xref:System.IO.StreamWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A>) or asynchronously (<xref:System.IO.StreamWriter.WriteAsync%2A> and <xref:System.IO.StreamWriter.WriteLineAsync%2A>).  \n  \n-   <xref:System.IO.File> provides static methods to write text to a file, such as <xref:System.IO.File.WriteAllLines%2A> and <xref:System.IO.File.WriteAllText%2A>, or to append text to a file, such as <xref:System.IO.File.AppendAllLines%2A>, <xref:System.IO.File.AppendAllText%2A>, and <xref:System.IO.File.AppendText%2A>.  \n  \n- <xref:System.IO.Path> is for strings that have file or directory path information. It contains the <xref:System.IO.Path.Combine%2A> method and, in .NET Core 2.1 and later, the <xref:System.IO.Path.Join%2A> and <xref:System.IO.Path.TryJoin%2A> methods, which allow concatenation of strings to build a file or directory path.\n\n> [!NOTE]\n> The following examples show only the minimum amount of code needed. A real-world app usually provides more robust error checking and exception handling.  \n  \n## Example: Synchronously write text with StreamWriter\n\nThe following example shows how to use the <xref:System.IO.StreamWriter> class to synchronously write text to a new file one line at a time. Because the <xref:System.IO.StreamWriter> object is declared and instantiated in a `using` statement, the <xref:System.IO.StreamWriter.Dispose%2A> method is invoked, which automatically flushes and closes the stream.  \n\n[!code-csharp[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/write.cs)] \n[!code-vb[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/write.vb)]  \n\n## Example: Synchronously append text with StreamWriter\n\nThe following example shows how to use the <xref:System.IO.StreamWriter> class to synchronously append text to the text file created in the first example.   \n\n[!code-csharp[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/append.cs)] \n[!code-vb[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/append.vb)]  \n\n## Example: Asynchronously write text with StreamWriter\n\nThe following example shows how to asynchronously write text to a new file using the <xref:System.IO.StreamWriter> class. To invoke the <xref:System.IO.StreamWriter.WriteAsync%2A> method, the method call must be within an `async` method. The C# example requires C# 7.1 or later, which adds support for the `async` modifier on the program entry point. \n\n[!code-csharp[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/async.cs)] \n[!code-vb[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/async.vb)]  \n\n## Example: Write and append text with the File class\n\nThe following example shows how to write text to a new file and append new lines of text to the same file using the <xref:System.IO.File> class. The <xref:System.IO.File.WriteAllText%2A> and <xref:System.IO.File.AppendAllLines%2A> methods open and close the file automatically. If the path you provide to the <xref:System.IO.File.WriteAllText%2A> method already exists, the file is overwritten.  \n\n[!code-csharp[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/file.cs)] \n[!code-vb[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/file.vb)]  \n\n## See also\n\n- <xref:System.IO.StreamWriter>\n- <xref:System.IO.Path>\n- <xref:System.IO.File.CreateText%2A?displayProperty=nameWithType>\n- [How to: Enumerate directories and files](../../../docs/standard/io/how-to-enumerate-directories-and-files.md)\n- [How to: Read and write to a newly-created data file](../../../docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)\n- [How to: Open and append to a log file](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md)\n- [How to: Read text from a file](../../../docs/standard/io/how-to-read-text-from-a-file.md)\n- [File and stream I/O](../../../docs/standard/io/index.md)","nodes":[{"pos":[4,393],"embed":true,"restype":"x-metadata","content":"title: \"How to: Write text to a file\"\nms.date: \"01/04/2019\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"writing text to files\"\n  - \"I/O [.NET Framework], writing text to files\"\n  - \"streams, writing text to files\"\n  - \"data streams, writing text to files\"\nms.assetid: 060cbe06-2adf-4337-9e7b-961a5c840208\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"How to: Write text to a file","nodes":[{"pos":[0,28],"content":"How to: Write text to a file","nodes":[{"content":"How to: Write text to a file","pos":[0,28]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[400,428],"content":"How to: Write text to a file","linkify":"How to: Write text to a file","nodes":[{"content":"How to: Write text to a file","pos":[0,28]}]},{"content":"This topic shows different ways to write text to a file for a .NET app.","pos":[429,500]},{"content":"The following classes and methods are typically used to write text to a file:","pos":[503,580]},{"pos":[590,872],"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> contains methods to write to a file synchronously (<ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.Write%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>) or asynchronously (<ph id=\"ph4\">&lt;xref:System.IO.StreamWriter.WriteAsync%2A&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A&gt;</ph>).","source":"<xref:System.IO.StreamWriter> contains methods to write to a file synchronously (<xref:System.IO.StreamWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A>) or asynchronously (<xref:System.IO.StreamWriter.WriteAsync%2A> and <xref:System.IO.StreamWriter.WriteLineAsync%2A>)."},{"pos":[882,1201],"content":"<ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> provides static methods to write text to a file, such as <ph id=\"ph2\">&lt;xref:System.IO.File.WriteAllLines%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IO.File.WriteAllText%2A&gt;</ph>, or to append text to a file, such as <ph id=\"ph4\">&lt;xref:System.IO.File.AppendAllLines%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.IO.File.AppendAllText%2A&gt;</ph>, and <ph id=\"ph6\">&lt;xref:System.IO.File.AppendText%2A&gt;</ph>.","source":"<xref:System.IO.File> provides static methods to write text to a file, such as <xref:System.IO.File.WriteAllLines%2A> and <xref:System.IO.File.WriteAllText%2A>, or to append text to a file, such as <xref:System.IO.File.AppendAllLines%2A>, <xref:System.IO.File.AppendAllText%2A>, and <xref:System.IO.File.AppendText%2A>."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Path&gt;</ph> is for strings that have file or directory path information.","pos":[1209,1291],"source":"<xref:System.IO.Path> is for strings that have file or directory path information."},{"content":"It contains the <ph id=\"ph1\">&lt;xref:System.IO.Path.Combine%2A&gt;</ph> method and, in .NET Core 2.1 and later, the <ph id=\"ph2\">&lt;xref:System.IO.Path.Join%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IO.Path.TryJoin%2A&gt;</ph> methods, which allow concatenation of strings to build a file or directory path.","pos":[1292,1532],"source":" It contains the <xref:System.IO.Path.Combine%2A> method and, in .NET Core 2.1 and later, the <xref:System.IO.Path.Join%2A> and <xref:System.IO.Path.TryJoin%2A> methods, which allow concatenation of strings to build a file or directory path."},{"pos":[1536,1698],"content":"[!NOTE]\nThe following examples show only the minimum amount of code needed. A real-world app usually provides more robust error checking and exception handling.","leadings":["","> "],"nodes":[{"content":"The following examples show only the minimum amount of code needed. A real-world app usually provides more robust error checking and exception handling.","pos":[8,160],"nodes":[{"content":"The following examples show only the minimum amount of code needed.","pos":[0,67]},{"content":"A real-world app usually provides more robust error checking and exception handling.","pos":[68,152]}]}]},{"pos":[1707,1758],"content":"Example: Synchronously write text with StreamWriter","linkify":"Example: Synchronously write text with StreamWriter","nodes":[{"content":"Example: Synchronously write text with StreamWriter","pos":[0,51]}]},{"content":"The following example shows how to use the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> class to synchronously write text to a new file one line at a time.","pos":[1760,1900],"source":"The following example shows how to use the <xref:System.IO.StreamWriter> class to synchronously write text to a new file one line at a time."},{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> object is declared and instantiated in a <ph id=\"ph2\">`using`</ph> statement, the <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter.Dispose%2A&gt;</ph> method is invoked, which automatically flushes and closes the stream.","pos":[1901,2117],"source":" Because the <xref:System.IO.StreamWriter> object is declared and instantiated in a `using` statement, the <xref:System.IO.StreamWriter.Dispose%2A> method is invoked, which automatically flushes and closes the stream."},{"pos":[2421,2473],"content":"Example: Synchronously append text with StreamWriter","linkify":"Example: Synchronously append text with StreamWriter","nodes":[{"content":"Example: Synchronously append text with StreamWriter","pos":[0,52]}]},{"pos":[2475,2629],"content":"The following example shows how to use the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> class to synchronously append text to the text file created in the first example.","source":"The following example shows how to use the <xref:System.IO.StreamWriter> class to synchronously append text to the text file created in the first example."},{"pos":[2936,2988],"content":"Example: Asynchronously write text with StreamWriter","linkify":"Example: Asynchronously write text with StreamWriter","nodes":[{"content":"Example: Asynchronously write text with StreamWriter","pos":[0,52]}]},{"content":"The following example shows how to asynchronously write text to a new file using the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> class.","pos":[2990,3111],"source":"The following example shows how to asynchronously write text to a new file using the <xref:System.IO.StreamWriter> class."},{"content":"To invoke the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.WriteAsync%2A&gt;</ph> method, the method call must be within an <ph id=\"ph2\">`async`</ph> method.","pos":[3112,3227],"source":" To invoke the <xref:System.IO.StreamWriter.WriteAsync%2A> method, the method call must be within an `async` method."},{"content":"The C# example requires C# 7.1 or later, which adds support for the <ph id=\"ph1\">`async`</ph> modifier on the program entry point.","pos":[3228,3340],"source":" The C# example requires C# 7.1 or later, which adds support for the `async` modifier on the program entry point."},{"pos":[3643,3693],"content":"Example: Write and append text with the File class","linkify":"Example: Write and append text with the File class","nodes":[{"content":"Example: Write and append text with the File class","pos":[0,50]}]},{"content":"The following example shows how to write text to a new file and append new lines of text to the same file using the <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> class.","pos":[3695,3839],"source":"The following example shows how to write text to a new file and append new lines of text to the same file using the <xref:System.IO.File> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllText%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.File.AppendAllLines%2A&gt;</ph> methods open and close the file automatically.","pos":[3840,3972],"source":" The <xref:System.IO.File.WriteAllText%2A> and <xref:System.IO.File.AppendAllLines%2A> methods open and close the file automatically."},{"content":"If the path you provide to the <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllText%2A&gt;</ph> method already exists, the file is overwritten.","pos":[3973,4089],"source":" If the path you provide to the <xref:System.IO.File.WriteAllText%2A> method already exists, the file is overwritten."},{"pos":[4391,4399],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4526,4636],"content":"<bpt id=\"p1\">[</bpt>How to: Enumerate directories and files<ept id=\"p1\">](../../../docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>","source":"[How to: Enumerate directories and files](../../../docs/standard/io/how-to-enumerate-directories-and-files.md)"},{"pos":[4639,4773],"content":"<bpt id=\"p1\">[</bpt>How to: Read and write to a newly-created data file<ept id=\"p1\">](../../../docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>","source":"[How to: Read and write to a newly-created data file](../../../docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)"},{"pos":[4776,4882],"content":"<bpt id=\"p1\">[</bpt>How to: Open and append to a log file<ept id=\"p1\">](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept>","source":"[How to: Open and append to a log file](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md)"},{"pos":[4885,4975],"content":"<bpt id=\"p1\">[</bpt>How to: Read text from a file<ept id=\"p1\">](../../../docs/standard/io/how-to-read-text-from-a-file.md)</ept>","source":"[How to: Read text from a file](../../../docs/standard/io/how-to-read-text-from-a-file.md)"},{"pos":[4978,5035],"content":"<bpt id=\"p1\">[</bpt>File and stream I/O<ept id=\"p1\">](../../../docs/standard/io/index.md)</ept>","source":"[File and stream I/O](../../../docs/standard/io/index.md)"}]}