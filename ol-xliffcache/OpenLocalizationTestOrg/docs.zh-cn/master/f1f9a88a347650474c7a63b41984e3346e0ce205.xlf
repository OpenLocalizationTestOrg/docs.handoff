<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="shadow-copy-assemblies.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1f9a88a347650474c7a63b41984e3346e0ce205</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\app-domains\shadow-copy-assemblies.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1afee50aa7a7b5c5583b396bbebe0d136cffa526</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a531b040efc7a83ce4ee607421397f4c34e5278</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Shadow Copying Assemblies</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Shadow Copying Assemblies</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Shadow copying enables assemblies that are used in an application domain to be updated without unloading the application domain.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is particularly useful for applications that must be available continuously, such as ASP.NET sites.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Shadow copying is not supported in <ph id="ph1">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> apps.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The common language runtime locks an assembly file when the assembly is loaded, so the file cannot be updated until the assembly is unloaded.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The only way to unload an assembly from an application domain is by unloading the application domain, so under normal circumstances, an assembly cannot be updated on disk until all the application domains that are using it have been unloaded.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When an application domain is configured to shadow copy files, assemblies from the application path are copied to another location and loaded from that location.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The copy is locked, but the original assembly file is unlocked and can be updated.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The only assemblies that can be shadow copied are those stored in the application directory or its subdirectories, specified by the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> properties when the application domain is configured.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Assemblies stored in the global assembly cache are not shadow copied.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This article contains the following sections:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enabling and Using Shadow Copying<ept id="p1">](#EnablingAndUsing)</ept> describes the basic use and the options that are available for shadow copying.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Startup Performance<ept id="p1">](#StartupPerformance)</ept> describes the changes that are made to shadow copying in the <ph id="ph1">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph> to improve startup performance, and how to revert to the behavior of earlier versions.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Obsolete Methods<ept id="p1">](#ObsoleteMethods)</ept> describes the changes that were made to the properties and methods that control shadow copying in the <ph id="ph1">[!INCLUDE[dnprdnlong](../../../includes/dnprdnlong-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Enabling and Using Shadow Copying</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can use the properties of the <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> class as follows to configure an application domain for shadow copying:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Enable shadow copying by setting the <ph id="ph1">&lt;xref:System.AppDomainSetup.ShadowCopyFiles%2A&gt;</ph> property to the string value <ph id="ph2">`"true"`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>By default, this setting causes all assemblies in the application path to be copied to a download cache before they are loaded.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is the same cache maintained by the common language runtime to store files downloaded from other computers, and the common language runtime automatically deletes the files when they are no longer needed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Optionally set a custom location for shadow copied files by using the <ph id="ph1">&lt;xref:System.AppDomainSetup.CachePath%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The base path for the location is formed by concatenating the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> property to the <ph id="ph2">&lt;xref:System.AppDomainSetup.CachePath%2A&gt;</ph> property as a subdirectory.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Assemblies are shadow copied to subdirectories of this path, not to the base path itself.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;</ph> property is not set, the <ph id="ph2">&lt;xref:System.AppDomainSetup.CachePath%2A&gt;</ph> property is ignored and the download cache is used.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>No exception is thrown.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you specify a custom location, you are responsible for cleaning up the directories and copied files when they are no longer needed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>They are not deleted automatically.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>There are a few reasons why you might want to set a custom location for shadow copied files.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You might want to set a custom location for shadow copied files if your application generates a large number of copies.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The download cache is limited by size, not by lifetime, so it is possible that the common language runtime will attempt to delete a file that is still in use.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Another reason to set a custom location is when users running your application do not have write access to the directory location the common language runtime uses for the download cache.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Optionally limit the assemblies that are shadow copied by using the <ph id="ph1">&lt;xref:System.AppDomainSetup.ShadowCopyDirectories%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When you enable shadow copying for an application domain, the default is to copy all assemblies in the application path — that is, in the directories specified by the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can limit the copying to selected directories by creating a string that contains only those directories you want to shadow copy, and assigning the string to the <ph id="ph1">&lt;xref:System.AppDomainSetup.ShadowCopyDirectories%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Separate the directories with semicolons.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The only assemblies that are shadow copied are the ones in the selected directories.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you don’t assign a string to the <ph id="ph1">&lt;xref:System.AppDomainSetup.ShadowCopyDirectories%2A&gt;</ph> property, or if you set this property to <ph id="ph2">`null`</ph>, all assemblies in the directories specified by the <ph id="ph3">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph> properties are shadow copied.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Directory paths must not contain semicolons, because the semicolon is the delimiter character.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>There is no escape character for semicolons.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Startup Performance</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When an application domain that uses shadow copying starts, there is a delay while assemblies in the application directory are copied to the shadow copy directory, or verified if they are already in that location.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Before the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, all assemblies were copied to a temporary directory.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Each assembly was opened to verify the assembly name, and the strong name was validated.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Each assembly was checked to see whether it had been updated more recently than the copy in the shadow copy directory.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If so, it was copied to the shadow copy directory.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Finally, the temporary copies were discarded.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, the default startup behavior is to directly compare the file date and time of each assembly in the application directory with the file date and time of the copy in the shadow copy directory.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the assembly has been updated, it is copied by using the same procedure as in earlier versions of the .NET Framework; otherwise, the copy in the shadow copy directory is loaded.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The resulting performance improvement is largest for applications in which assemblies do not change frequently and changes usually occur in a small subset of assemblies.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If a majority of assemblies in an application change frequently, the new default behavior might cause a performance regression.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can restore the startup behavior of previous versions of the .NET Framework by adding the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>shadowCopyVerifyByTimestamp&gt; element<ept id="p1">](../../../docs/framework/configure-apps/file-schema/runtime/shadowcopyverifybytimestamp-element.md)</ept> to the configuration file, with <ph id="ph2">`enabled="false"`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Obsolete Methods</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> class has several methods, such as <ph id="ph2">&lt;xref:System.AppDomain.SetShadowCopyFiles%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.AppDomain.ClearShadowCopyPath%2A&gt;</ph>, that can be used to control shadow copying on an application domain, but these have been marked obsolete in the .NET Framework version 2.0.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The recommended way to configure an application domain for shadow copying is to use the properties of the <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>shadowCopyVerifyByTimestamp&gt; Element<ept id="p1">](../../../docs/framework/configure-apps/file-schema/runtime/shadowcopyverifybytimestamp-element.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>