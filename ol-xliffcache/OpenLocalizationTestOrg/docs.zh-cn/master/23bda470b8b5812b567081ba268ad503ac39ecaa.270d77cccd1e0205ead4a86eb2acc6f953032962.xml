{"content":"---\ntitle: \"COR_HEAPINFO Structure\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"COR_HEAPINFO\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_HEAPINFO\"\nhelpviewer_keywords: \n  - \"COR_HEAPINFO structure [.NET Framework debugging]\"\nms.assetid: bfb2cd39-3e0b-4d51-ba0c-f009755c1456\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# COR_HEAPINFO Structure\nProvides general information about the garbage collection heap, including whether it is enumerable.  \n  \n## Syntax  \n  \n```  \ntypedef struct _COR_HEAPINFO {  \n    BOOL areGCStructuresValid;   \n    DWORD pointerSize;   \n    DWORD numHeaps;  \n    BOOL concurrent;   \n    CorDebugGCType gcType;   \n} COR_HEAPINFO;  \n```  \n  \n## Members  \n  \n|Member|Description|  \n|------------|-----------------|  \n|`areGCStructuresValid`|`true` if garbage collection structures are valid and the heap can be enumerated; otherwise, `false`.|  \n|`pointerSize`|The size, in bytes, of pointers on the target architecture.|  \n|`numHeaps`|The number of logical garbage collection heaps in the process.|  \n|`concurrent`|`TRUE` if concurrent (background) garbage collection is enabled; otherwise, `FALSE`.|  \n|`gcType`|A member of the [CorDebugGCType](../../../../docs/framework/unmanaged-api/debugging/cordebuggctype-enumeration.md) enumeration that indicates whether the garbage collector is running on a workstation or a server.|  \n  \n## Remarks  \n An instance of the `COR_HEAPINFO` structure is returned by calling the [ICorDebugProcess5::GetGCHeapInformation](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getgcheapinformation-method.md) method.  \n  \n Before enumerating objects on the garbage collection heap, you must always check the `areGCStructuresValid` field to ensure that the heap is in an enumerable state. For more information, see the [ICorDebugProcess5::GetGCHeapInformation](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getgcheapinformation-method.md) method.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]  \n  \n## See also\n\n- [Debugging Structures](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)\n- [Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)\n","nodes":[{"pos":[4,368],"embed":true,"restype":"x-metadata","content":"title: \"COR_HEAPINFO Structure\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"COR_HEAPINFO\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_HEAPINFO\"\nhelpviewer_keywords: \n  - \"COR_HEAPINFO structure [.NET Framework debugging]\"\nms.assetid: bfb2cd39-3e0b-4d51-ba0c-f009755c1456\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"COR_HEAPINFO Structure","nodes":[{"pos":[0,22],"content":"COR_HEAPINFO Structure","nodes":[{"content":"COR_HEAPINFO Structure","pos":[0,22]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[375,397],"content":"COR_HEAPINFO Structure","linkify":"COR_HEAPINFO Structure","nodes":[{"content":"COR_HEAPINFO Structure","pos":[0,22]}]},{"content":"Provides general information about the garbage collection heap, including whether it is enumerable.","pos":[398,497]},{"pos":[506,512],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[723,730],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Member","pos":[737,743]},{"content":"Description","pos":[744,755]},{"pos":[818,919],"content":"<ph id=\"ph1\">`true`</ph> if garbage collection structures are valid and the heap can be enumerated; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if garbage collection structures are valid and the heap can be enumerated; otherwise, `false`."},{"content":"The size, in bytes, of pointers on the target architecture.","pos":[938,997]},{"content":"The number of logical garbage collection heaps in the process.","pos":[1013,1075]},{"pos":[1093,1177],"content":"<ph id=\"ph1\">`TRUE`</ph> if concurrent (background) garbage collection is enabled; otherwise, <ph id=\"ph2\">`FALSE`</ph>.","source":"`TRUE` if concurrent (background) garbage collection is enabled; otherwise, `FALSE`."},{"pos":[1191,1403],"content":"A member of the <bpt id=\"p1\">[</bpt>CorDebugGCType<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/cordebuggctype-enumeration.md)</ept> enumeration that indicates whether the garbage collector is running on a workstation or a server.","source":"A member of the [CorDebugGCType](../../../../docs/framework/unmanaged-api/debugging/cordebuggctype-enumeration.md) enumeration that indicates whether the garbage collector is running on a workstation or a server."},{"pos":[1413,1420],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1424,1645],"content":"An instance of the <ph id=\"ph1\">`COR_HEAPINFO`</ph> structure is returned by calling the <bpt id=\"p1\">[</bpt>ICorDebugProcess5::GetGCHeapInformation<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getgcheapinformation-method.md)</ept> method.","source":"An instance of the `COR_HEAPINFO` structure is returned by calling the [ICorDebugProcess5::GetGCHeapInformation](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getgcheapinformation-method.md) method."},{"content":"Before enumerating objects on the garbage collection heap, you must always check the <ph id=\"ph1\">`areGCStructuresValid`</ph> field to ensure that the heap is in an enumerable state.","pos":[1652,1816],"source":"Before enumerating objects on the garbage collection heap, you must always check the `areGCStructuresValid` field to ensure that the heap is in an enumerable state."},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>ICorDebugProcess5::GetGCHeapInformation<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getgcheapinformation-method.md)</ept> method.","pos":[1817,1997],"source":" For more information, see the [ICorDebugProcess5::GetGCHeapInformation](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess5-getgcheapinformation-method.md) method."},{"pos":[2006,2018],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2022,2126],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2133,2169],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2176,2201],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2208,2316],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]"},{"pos":[2325,2333],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2337,2435],"content":"<bpt id=\"p1\">[</bpt>Debugging Structures<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)</ept>","source":"[Debugging Structures](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)"},{"pos":[2438,2510],"content":"<bpt id=\"p1\">[</bpt>Debugging<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/index.md)</ept>","source":"[Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)"}]}