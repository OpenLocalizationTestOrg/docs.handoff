{"content":"---\ntitle: \"Stop Statement (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.Stop\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"breakpoints, Stop statements\"\n  - \"Stop statements, syntax\"\n  - \"Stop statements\"\n  - \"execution, suspending\"\n  - \"processing, interrupting\"\n  - \"processes, interrupting\"\n  - \"execution, stopping\"\nms.assetid: c9a9fde0-d649-4662-9bef-bd0146ebc2a7\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Stop Statement (Visual Basic)\nSuspends execution.  \n  \n## Syntax  \n  \n```  \nStop  \n```  \n  \n## Remarks  \n You can place `Stop` statements anywhere in procedures to suspend execution. Using the `Stop` statement is similar to setting a breakpoint in the code.  \n  \n The `Stop` statement suspends execution, but unlike `End`, it does not close any files or clear any variables, unless it is encountered in a compiled executable (.exe) file.  \n  \n> [!NOTE]\n>  If the `Stop` statement is encountered in code that is running outside of the integrated development environment (IDE), the debugger is invoked. This is true regardless of whether the code was compiled in debug or retail mode.  \n  \n## Example  \n This example uses the `Stop` statement to suspend execution for each iteration through the `For...Next` loop.  \n  \n [!code-vb[VbVbalrStatements#56](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/stop-statement_1.vb)]  \n  \n## See Also  \n [End Statement](../../../visual-basic/language-reference/statements/end-statement.md)","nodes":[{"pos":[12,58],"content":"Stop Statement (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Stop Statement (Visual Basic) | Microsoft Docs","pos":[0,46]}]},{"pos":[769,798],"content":"Stop Statement (Visual Basic)","linkify":"Stop Statement (Visual Basic)","nodes":[{"content":"Stop Statement (Visual Basic)","pos":[0,29]}]},{"content":"Suspends execution.","pos":[799,818]},{"pos":[827,833],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[864,871],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can place <ph id=\"ph1\">`Stop`</ph> statements anywhere in procedures to suspend execution.","pos":[875,951],"source":"You can place `Stop` statements anywhere in procedures to suspend execution."},{"content":"Using the <ph id=\"ph1\">`Stop`</ph> statement is similar to setting a breakpoint in the code.","pos":[952,1026],"source":" Using the `Stop` statement is similar to setting a breakpoint in the code."},{"pos":[1033,1206],"content":"The <ph id=\"ph1\">`Stop`</ph> statement suspends execution, but unlike <ph id=\"ph2\">`End`</ph>, it does not close any files or clear any variables, unless it is encountered in a compiled executable (.exe) file.","source":"The `Stop` statement suspends execution, but unlike `End`, it does not close any files or clear any variables, unless it is encountered in a compiled executable (.exe) file."},{"pos":[1214,1451],"content":"[!NOTE]\n If the `Stop` statement is encountered in code that is running outside of the integrated development environment (IDE), the debugger is invoked. This is true regardless of whether the code was compiled in debug or retail mode.","leadings":["","> "],"nodes":[{"content":" If the `Stop` statement is encountered in code that is running outside of the integrated development environment (IDE), the debugger is invoked. This is true regardless of whether the code was compiled in debug or retail mode.","pos":[8,235],"nodes":[{"content":"If the <ph id=\"ph1\">`Stop`</ph> statement is encountered in code that is running outside of the integrated development environment (IDE), the debugger is invoked.","pos":[1,145],"source":" If the `Stop` statement is encountered in code that is running outside of the integrated development environment (IDE), the debugger is invoked."},{"content":"This is true regardless of whether the code was compiled in debug or retail mode.","pos":[146,227]}]}]},{"pos":[1460,1467],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1471,1580],"content":"This example uses the <ph id=\"ph1\">`Stop`</ph> statement to suspend execution for each iteration through the <ph id=\"ph2\">`For...Next`</ph> loop.","source":"This example uses the `Stop` statement to suspend execution for each iteration through the `For...Next` loop."},{"pos":[1587,1720],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrStatements#56<ept id=\"p2\">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/stop-statement_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrStatements#56](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/stop-statement_1.vb)]"},{"pos":[1729,1737],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1741,1826],"content":"<bpt id=\"p1\">[</bpt>End Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/end-statement.md)</ept>","source":"[End Statement](../../../visual-basic/language-reference/statements/end-statement.md)"}]}