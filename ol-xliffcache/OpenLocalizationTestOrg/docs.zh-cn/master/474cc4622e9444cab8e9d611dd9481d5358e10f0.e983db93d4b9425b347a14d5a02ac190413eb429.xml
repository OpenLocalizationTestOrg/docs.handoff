{"content":"---\ntitle: \"How to: Determine If a File Is an Assembly (C#)\"\nms.date: 07/20/2015\nms.assetid: ea5186bb-5bff-4dcb-bde9-d6ba4e2edd00\n---\n# How to: Determine If a File Is an Assembly (C#)\nA file is an assembly if and only if it is managed, and contains an assembly entry in its metadata. For more information on assemblies and metadata, see the topic [Assembly Manifest](../../../../../docs/framework/app-domains/assembly-manifest.md).  \n  \n### How to manually determine if a file is an assembly  \n  \n1.  Start the [Ildasm.exe (IL Disassembler)](../../../../framework/tools/ildasm-exe-il-disassembler.md).  \n  \n2.  Load the file you wish to test.  \n  \n3.  If **ILDASM** reports that the file is not a portable executable (PE) file, then it is not an assembly. For more information, see the topic [How to: View Assembly Contents](../../../../framework/app-domains/how-to-view-assembly-contents.md).  \n  \n### How to programmatically determine if a file is an assembly  \n  \n1.  Call the <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> method, passing the full file path and name of the file you are testing.  \n  \n2.  If a <xref:System.BadImageFormatException> exception is thrown, the file is not an assembly.  \n  \n## Example  \n This example tests a DLL to see if it is an assembly.  \n  \n```csharp\nclass TestAssembly  \n{  \n    static void Main()  \n    {  \n  \n        try  \n        {  \n            System.Reflection.AssemblyName testAssembly =  \n                System.Reflection.AssemblyName.GetAssemblyName(@\"C:\\Windows\\Microsoft.NET\\Framework\\v3.5\\System.Net.dll\");  \n  \n            System.Console.WriteLine(\"Yes, the file is an assembly.\");  \n        }  \n  \n        catch (System.IO.FileNotFoundException)  \n        {  \n            System.Console.WriteLine(\"The file cannot be found.\");  \n        }  \n  \n        catch (System.BadImageFormatException)  \n        {  \n            System.Console.WriteLine(\"The file is not an assembly.\");  \n        }  \n  \n        catch (System.IO.FileLoadException)  \n        {  \n            System.Console.WriteLine(\"The assembly has already been loaded.\");  \n        }  \n    }  \n}  \n/* Output (with .NET Framework 3.5 installed):  \n    Yes, the file is an assembly.  \n*/  \n```  \n  \n The <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> method loads the test file, and then releases it once the information is read.  \n  \n## See also\n\n- <xref:System.Reflection.AssemblyName>\n- [C# Programming Guide](../../../../csharp/programming-guide/index.md)\n- [Assemblies in .NET](../../../../standard/assembly/index.md)\n","nodes":[{"pos":[4,129],"embed":true,"restype":"x-metadata","content":"title: \"How to: Determine If a File Is an Assembly (C#)\"\nms.date: 07/20/2015\nms.assetid: ea5186bb-5bff-4dcb-bde9-d6ba4e2edd00","nodes":[{"content":"How to: Determine If a File Is an Assembly (C#)","nodes":[{"pos":[0,47],"content":"How to: Determine If a File Is an Assembly (C#)","nodes":[{"content":"How to: Determine If a File Is an Assembly (C#)","pos":[0,47]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[136,183],"content":"How to: Determine If a File Is an Assembly (C#)","linkify":"How to: Determine If a File Is an Assembly (C#)","nodes":[{"content":"How to: Determine If a File Is an Assembly (C#)","pos":[0,47]}]},{"content":"A file is an assembly if and only if it is managed, and contains an assembly entry in its metadata.","pos":[184,283]},{"content":"For more information on assemblies and metadata, see the topic <bpt id=\"p1\">[</bpt>Assembly Manifest<ept id=\"p1\">](../../../../../docs/framework/app-domains/assembly-manifest.md)</ept>.","pos":[284,431],"source":" For more information on assemblies and metadata, see the topic [Assembly Manifest](../../../../../docs/framework/app-domains/assembly-manifest.md)."},{"pos":[441,491],"content":"How to manually determine if a file is an assembly","linkify":"How to manually determine if a file is an assembly","nodes":[{"content":"How to manually determine if a file is an assembly","pos":[0,50]}]},{"pos":[501,601],"content":"Start the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](../../../../framework/tools/ildasm-exe-il-disassembler.md)</ept>.","source":"Start the [Ildasm.exe (IL Disassembler)](../../../../framework/tools/ildasm-exe-il-disassembler.md)."},{"content":"Load the file you wish to test.","pos":[611,642]},{"content":"If <bpt id=\"p1\">**</bpt>ILDASM<ept id=\"p1\">**</ept> reports that the file is not a portable executable (PE) file, then it is not an assembly.","pos":[652,755],"source":"If **ILDASM** reports that the file is not a portable executable (PE) file, then it is not an assembly."},{"content":"For more information, see the topic <bpt id=\"p1\">[</bpt>How to: View Assembly Contents<ept id=\"p1\">](../../../../framework/app-domains/how-to-view-assembly-contents.md)</ept>.","pos":[756,893],"source":" For more information, see the topic [How to: View Assembly Contents](../../../../framework/app-domains/how-to-view-assembly-contents.md)."},{"pos":[903,961],"content":"How to programmatically determine if a file is an assembly","linkify":"How to programmatically determine if a file is an assembly","nodes":[{"content":"How to programmatically determine if a file is an assembly","pos":[0,58]}]},{"pos":[971,1109],"content":"Call the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.GetAssemblyName%2A&gt;</ph> method, passing the full file path and name of the file you are testing.","source":"Call the <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> method, passing the full file path and name of the file you are testing."},{"pos":[1119,1211],"content":"If a <ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph> exception is thrown, the file is not an assembly.","source":"If a <xref:System.BadImageFormatException> exception is thrown, the file is not an assembly."},{"pos":[1220,1227],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example tests a DLL to see if it is an assembly.","pos":[1231,1284]},{"pos":[2220,2359],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.GetAssemblyName%2A&gt;</ph> method loads the test file, and then releases it once the information is read.","source":"The <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> method loads the test file, and then releases it once the information is read."},{"pos":[2368,2376],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2420,2489],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../../csharp/programming-guide/index.md)"},{"pos":[2492,2552],"content":"<bpt id=\"p1\">[</bpt>Assemblies in .NET<ept id=\"p1\">](../../../../standard/assembly/index.md)</ept>","source":"[Assemblies in .NET](../../../../standard/assembly/index.md)"}]}