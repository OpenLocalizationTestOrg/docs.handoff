<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-identify-a-nullable-type.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33169315f8bef45aba52f0696d4acac031584817</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\nullable-types\how-to-identify-a-nullable-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf420fb2783526fae9e8acacc66d8a4073505a0d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c558298c62afb4726c4968d6a0589f75f723d7b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Identify a nullable type - C# Programming Guide</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn how to determine whether a type is a nullable type or an instance is of a nullable type</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to: Identify a nullable type (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following example shows how to determine whether a <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> instance represents a closed generic nullable type, that is, the <ph id="ph2">&lt;xref:System.Nullable%601?displayProperty=nameWithType&gt;</ph> type with a specified type parameter <ph id="ph3">`T`</ph>:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>As the example shows, you use the <bpt id="p1">[</bpt>typeof<ept id="p1">](../../language-reference/keywords/typeof.md)</ept> operator to create a <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you want to determine whether an instance is of a nullable type, don't use the <ph id="ph1">&lt;xref:System.Object.GetType%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Type&gt;</ph> instance to be tested with the preceding code.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you call the <ph id="ph1">&lt;xref:System.Object.GetType%2A?displayProperty=nameWithType&gt;</ph> method on an instance of a nullable type, the instance is <bpt id="p1">[</bpt>boxed<ept id="p1">](using-nullable-types.md#boxing-and-unboxing)</ept> to <ph id="ph2">&lt;xref:System.Object&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>As boxing of a non-null instance of a nullable type is equivalent to boxing of a value of the underlying type, <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the underlying type of a nullable type:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Don't use the <bpt id="p1">[</bpt>is<ept id="p1">](../../language-reference/keywords/is.md)</ept> operator to determine whether an instance is of a nullable type.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As the following example shows, you cannot distinguish types of instances of a nullable type and its underlying type with using the <ph id="ph1">`is`</ph> operator:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the code presented in the following example to determine whether an instance is of a nullable type:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable types<ept id="p1">](index.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using nullable types<ept id="p1">](using-nullable-types.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>