{"content":"---\ntitle: \"&lt;Property&gt; Element (.NET Native) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: ad4ba56d-3bcb-4c10-ba90-1cc66e2175a1\ncaps.latest.revision: 16\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# &lt;Property&gt; Element (.NET Native)\nApplies runtime reflection policy to a property.  \n  \n## Syntax  \n  \n```xml  \n  \n<Property Name=\"property_name\"  \n          Browse=\"policy_type\"  \n          Dynamic=\"policy_type\"  \n          Serialize=\"policy_type\" />  \n  \n```  \n  \n## Attributes and Elements  \n The following sections describe attributes, child elements, and parent elements.  \n  \n### Attributes  \n  \n|Attribute|Attribute type|Description|  \n|---------------|--------------------|-----------------|  \n|`Name`|General|Required attribute. Specifies the property name.|  \n|`Browse`|Reflection|Optional attribute. Controls querying for information about or enumerating the property but does not enable any dynamic access at run time.|  \n|`Dynamic`|Reflection|Optional attribute. Controls runtime access to the property to enable dynamic programming. This policy ensures that a property can be set or retrieved dynamically at run time.|  \n|`Serialize`|Serialization|Optional attribute. Controls runtime access to a property to enable type instances to be serialized by libraries such as the Newtonsoft JSON serializer or to be used for data binding.|  \n  \n## Name attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*method_name*|The property name. The type of the property is defined by the parent [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element.|  \n  \n## All other attributes  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*policy_setting*|The setting to apply to this policy type for the property. Possible values are `Auto`, `Excluded`, `Included`, and `Required`. For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md).|  \n  \n### Child Elements  \n None.  \n  \n### Parent Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|[\\<Type>](../../../docs/framework/net-native/type-element-net-native.md)|Applies reflection policy to a type and all its members.|  \n|[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)|Applies reflection policy to a constructed generic type and all its members.|  \n  \n## Remarks  \n If a property's policy is not explicitly defined, it inherits the runtime policy of its parent element.  \n  \n## Example  \n The following example uses reflection to instantiate a `Book` object and display its property values. The original default.rd.xml file for the project appears as follows:  \n  \n```xml  \n  \n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">  \n   <Application>  \n      <Namespace Name=\"LibraryApplications\"  Browse=\"Required Public\" >  \n         <Type Name=\"Book\"   Activate=\"All\" />  \n      </Namespace>  \n   </Application>  \n</Directives>  \n  \n```  \n  \n The file applies the `All` value to the `Activate` policy for the `Book` class, which allows access to class constructors through reflection. The `Browse` policy for the `Book` class is inherited from its parent namespace. This is set to `Required Public`, which makes metadata available at runtime.  \n  \n The following is the source code for the example. The `outputBlock` variable represents a [TextBlock](http://msdn.microsoft.com/library/windows.ui.xaml.controls.textblock.aspx) control.  \n  \n [!code-csharp[ProjectN_Reflection#6](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/property1.cs#6)]  \n  \n However, compiling and executing this example throws a [MissingRuntimeArtifactException](../../../docs/framework/net-native/missingruntimeartifactexception-class-net-native.md) exception. Although we've made metadata for the `Book` type available, we've failed to make the implementations of the property getters available dynamically. We can correct this error by either in one of two ways:  \n  \n-   by defining the `Dynamic` policy for the `Book` type in its [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) element.  \n  \n-   By adding a nested [\\<Property>](../../../docs/framework/net-native/property-element-net-native.md) element for each property whose getter we'd like to invoke, as the following default.rd.xml file does.  \n  \n    ```  \n  \n    <Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">  \n       <Application>  \n          <Namespace Name=\"LibraryApplications\"  Browse=\"Required Public\" >  \n             <Type Name=\"Book\"   Activate=\"All\" >  \n                <Property Name=\"Title\" Dynamic=\"Required\" />  \n                <Property Name=\"Author\" Dynamic=\"Required\" />  \n                  <Property Name=\"ISBN\" Dynamic=\"Required\" />  \n             </Type>  \n          </Namespace>  \n       </Application>  \n    </Directives>  \n  \n    ```  \n  \n## See Also  \n [Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)   \n [Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md)   \n [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)","nodes":[{"pos":[4,364],"nodes":[{"content":"&lt;Property&gt; Element (.NET Native) | Microsoft Docs","nodes":[{"pos":[0,55],"content":"&lt;Property&gt; Element (.NET Native) | Microsoft Docs","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>Property<ph id=\"ph2\">&amp;gt;</ph> Element (.NET Native) | Microsoft Docs","pos":[0,55],"source":"&lt;Property&gt; Element (.NET Native) | Microsoft Docs"}]}],"pos":[6,64],"yaml":true}],"content":"title: \"&lt;Property&gt; Element (.NET Native) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: ad4ba56d-3bcb-4c10-ba90-1cc66e2175a1\ncaps.latest.revision: 16\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[371,409],"content":"&lt;Property&gt; Element (.NET Native)","linkify":"&lt;Property&gt; Element (.NET Native)","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>Property<ph id=\"ph2\">&amp;gt;</ph> Element (.NET Native)","pos":[0,38],"source":"&lt;Property&gt; Element (.NET Native)"}]},{"content":"Applies runtime reflection policy to a property.","pos":[410,458]},{"pos":[467,473],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[645,668],"content":"Attributes and Elements","linkify":"Attributes and Elements","nodes":[{"content":"Attributes and Elements","pos":[0,23]}]},{"content":"The following sections describe attributes, child elements, and parent elements.","pos":[672,752]},{"pos":[762,772],"content":"Attributes","linkify":"Attributes","nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"Attribute","pos":[779,788]},{"content":"Attribute type","pos":[789,803]},{"content":"Description","pos":[804,815]},{"content":"General","pos":[886,893]},{"content":"Required attribute.","pos":[894,913]},{"content":"Specifies the property name.","pos":[914,942]},{"content":"Reflection","pos":[956,966]},{"content":"Optional attribute.","pos":[967,986]},{"content":"Controls querying for information about or enumerating the property but does not enable any dynamic access at run time.","pos":[987,1106]},{"content":"Reflection","pos":[1121,1131]},{"content":"Optional attribute.","pos":[1132,1151]},{"content":"Controls runtime access to the property to enable dynamic programming.","pos":[1152,1222]},{"content":"This policy ensures that a property can be set or retrieved dynamically at run time.","pos":[1223,1307]},{"content":"Serialization","pos":[1324,1337]},{"content":"Optional attribute.","pos":[1338,1357]},{"content":"Controls runtime access to a property to enable type instances to be serialized by libraries such as the Newtonsoft JSON serializer or to be used for data binding.","pos":[1358,1521]},{"pos":[1531,1545],"content":"Name attribute","linkify":"Name attribute","nodes":[{"content":"Name attribute","pos":[0,14]}]},{"content":"Value","pos":[1552,1557]},{"content":"Description","pos":[1558,1569]},{"pos":[1608,1621],"content":"<bpt id=\"p1\">*</bpt>method_name<ept id=\"p1\">*</ept>","source":"*method_name*"},{"content":"The property name.","pos":[1622,1640]},{"content":"The type of the property is defined by the parent <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept> or <bpt id=\"p2\">[</bpt><ph id=\"ph2\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p2\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept> element.","pos":[1641,1874],"source":" The type of the property is defined by the parent [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element."},{"pos":[1884,1904],"content":"All other attributes","linkify":"All other attributes","nodes":[{"content":"All other attributes","pos":[0,20]}]},{"content":"Value","pos":[1911,1916]},{"content":"Description","pos":[1917,1928]},{"pos":[1967,1983],"content":"<bpt id=\"p1\">*</bpt>policy_setting<ept id=\"p1\">*</ept>","source":"*policy_setting*"},{"content":"The setting to apply to this policy type for the property.","pos":[1984,2042]},{"content":"Possible values are <ph id=\"ph1\">`Auto`</ph>, <ph id=\"ph2\">`Excluded`</ph>, <ph id=\"ph3\">`Included`</ph>, and <ph id=\"ph4\">`Required`</ph>.","pos":[2043,2110],"source":" Possible values are `Auto`, `Excluded`, `Included`, and `Required`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>.","pos":[2111,2246],"source":" For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)."},{"pos":[2257,2271],"content":"Child Elements","linkify":"Child Elements","nodes":[{"content":"Child Elements","pos":[0,14]}]},{"content":"None.","pos":[2275,2280]},{"pos":[2290,2305],"content":"Parent Elements","linkify":"Parent Elements","nodes":[{"content":"Parent Elements","pos":[0,15]}]},{"content":"Element","pos":[2312,2319]},{"content":"Description","pos":[2320,2331]},{"pos":[2372,2444],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept>","source":"[\\<Type>](../../../docs/framework/net-native/type-element-net-native.md)"},{"content":"Applies reflection policy to a type and all its members.","pos":[2445,2501]},{"pos":[2506,2604],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p1\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept>","source":"[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)"},{"content":"Applies reflection policy to a constructed generic type and all its members.","pos":[2605,2681]},{"pos":[2691,2698],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If a property's policy is not explicitly defined, it inherits the runtime policy of its parent element.","pos":[2702,2805]},{"pos":[2814,2821],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example uses reflection to instantiate a <ph id=\"ph1\">`Book`</ph> object and display its property values.","pos":[2825,2926],"source":"The following example uses reflection to instantiate a `Book` object and display its property values."},{"content":"The original default.rd.xml file for the project appears as follows:","pos":[2927,2995]},{"content":"The file applies the <ph id=\"ph1\">`All`</ph> value to the <ph id=\"ph2\">`Activate`</ph> policy for the <ph id=\"ph3\">`Book`</ph> class, which allows access to class constructors through reflection.","pos":[3300,3441],"source":"The file applies the `All` value to the `Activate` policy for the `Book` class, which allows access to class constructors through reflection."},{"content":"The <ph id=\"ph1\">`Browse`</ph> policy for the <ph id=\"ph2\">`Book`</ph> class is inherited from its parent namespace.","pos":[3442,3522],"source":" The `Browse` policy for the `Book` class is inherited from its parent namespace."},{"content":"This is set to <ph id=\"ph1\">`Required Public`</ph>, which makes metadata available at runtime.","pos":[3523,3599],"source":" This is set to `Required Public`, which makes metadata available at runtime."},{"content":"The following is the source code for the example.","pos":[3606,3655]},{"content":"The <ph id=\"ph1\">`outputBlock`</ph> variable represents a <bpt id=\"p1\">[</bpt>TextBlock<ept id=\"p1\">](http://msdn.microsoft.com/library/windows.ui.xaml.controls.textblock.aspx)</ept> control.","pos":[3656,3791],"source":" The `outputBlock` variable represents a [TextBlock](http://msdn.microsoft.com/library/windows.ui.xaml.controls.textblock.aspx) control."},{"pos":[3798,3923],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ProjectN_Reflection#6<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/property1.cs#6)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[ProjectN_Reflection#6](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/property1.cs#6)]"},{"content":"However, compiling and executing this example throws a <bpt id=\"p1\">[</bpt>MissingRuntimeArtifactException<ept id=\"p1\">](../../../docs/framework/net-native/missingruntimeartifactexception-class-net-native.md)</ept> exception.","pos":[3930,4117],"source":"However, compiling and executing this example throws a [MissingRuntimeArtifactException](../../../docs/framework/net-native/missingruntimeartifactexception-class-net-native.md) exception."},{"content":"Although we've made metadata for the <ph id=\"ph1\">`Book`</ph> type available, we've failed to make the implementations of the property getters available dynamically.","pos":[4118,4265],"source":" Although we've made metadata for the `Book` type available, we've failed to make the implementations of the property getters available dynamically."},{"content":"We can correct this error by either in one of two ways:","pos":[4266,4321]},{"pos":[4331,4472],"content":"by defining the <ph id=\"ph1\">`Dynamic`</ph> policy for the <ph id=\"ph2\">`Book`</ph> type in its <bpt id=\"p1\">[</bpt><ph id=\"ph3\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept> element.","source":"by defining the `Dynamic` policy for the `Book` type in its [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) element."},{"pos":[4482,4684],"content":"By adding a nested <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Property&gt;<ept id=\"p1\">](../../../docs/framework/net-native/property-element-net-native.md)</ept> element for each property whose getter we'd like to invoke, as the following default.rd.xml file does.","source":"By adding a nested [\\<Property>](../../../docs/framework/net-native/property-element-net-native.md) element for each property whose getter we'd like to invoke, as the following default.rd.xml file does."},{"pos":[5237,5245],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Runtime Directives (rd.xml) Configuration File Reference<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[5249,5402],"source":"[Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md) "},{"content":"<bpt id=\"p1\">[</bpt>Runtime Directive Elements<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-elements.md)</ept><ph id=\"ph1\"> </ph>","pos":[5406,5501],"source":"[Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md) "},{"content":"<bpt id=\"p1\">[</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>","pos":[5505,5613],"source":"[Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)"}]}