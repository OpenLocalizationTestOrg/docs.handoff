{"content":"---\ntitle: \"How to: Expose a Feed as Both Atom and RSS | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: fe374932-67f5-487d-9325-f868812b92e4\ncaps.latest.revision: 23\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Expose a Feed as Both Atom and RSS\n[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] allows you to create a service that exposes a syndication feed. This topic discusses how to create a syndication service that exposes a syndication feed using both Atom 1.0 and RSS 2.0. This service exposes one endpoint that can return either syndication format. For simplicity the service used in this sample is self hosted. In a production environment a service of this type would be hosted under IIS or WAS. [!INCLUDE[crabout](../../../../includes/crabout-md.md)] the different [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] hosting options, see [Hosting](../../../../docs/framework/wcf/feature-details/hosting.md).  \n  \n### To create a basic syndication service  \n  \n1.  Define a service contract using an interface marked with the <xref:System.ServiceModel.Web.WebGetAttribute> attribute. Each operation that is exposed as a syndication feed returns a <xref:System.ServiceModel.Syndication.SyndicationFeedFormatter> object. Note the parameters for the <xref:System.ServiceModel.Web.WebGetAttribute>. `UriTemplate` specifies the URL used to invoke this service operation. The string for this parameter contains literals and a variable in braces ({*format*}). This variable corresponds to the service operation's `format` parameter. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]<xref:System.UriTemplate>. `BodyStyle` affects how the messages that this service operation sends and receives are written. <xref:System.ServiceModel.Web.WebMessageBodyStyle> specifies that the data sent to and from this service operation are not wrapped by infrastructure-defined XML elements. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]<xref:System.ServiceModel.Web.WebMessageBodyStyle>.  \n  \n     [!code-csharp[htAtomRss#0](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#0)]\n     [!code-vb[htAtomRss#0](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#0)]  \n  \n    > [!NOTE]\n    >  Use the <xref:System.ServiceModel.ServiceKnownTypeAttribute> to specify the types that are returned by the service operations in this interface.  \n  \n2.  Implement the service contract.  \n  \n     [!code-csharp[htAtomRss#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#1)]\n     [!code-vb[htAtomRss#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#1)]  \n  \n3.  Create a <xref:System.ServiceModel.Syndication.SyndicationFeed> object and add an author, category, and description.  \n  \n     [!code-csharp[htAtomRss#2](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#2)]\n     [!code-vb[htAtomRss#2](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#2)]  \n  \n4.  Create several <xref:System.ServiceModel.Syndication.SyndicationItem> objects.  \n  \n     [!code-csharp[htAtomRss#3](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#3)]\n     [!code-vb[htAtomRss#3](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#3)]  \n  \n5.  Add the <xref:System.ServiceModel.Syndication.SyndicationItem> objects to the feed.  \n  \n     [!code-csharp[htAtomRss#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#4)]\n     [!code-vb[htAtomRss#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#4)]  \n  \n6.  Use the format parameter to return the requested format.  \n  \n     [!code-csharp[htAtomRss#5](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#5)]\n     [!code-vb[htAtomRss#5](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#5)]  \n  \n### To host the service  \n  \n1.  Create a <xref:System.ServiceModel.Web.WebServiceHost> object. The <xref:System.ServiceModel.Web.WebServiceHost> class automatically adds an endpoint at the service's base address unless one is specified in code or configuration. In this sample, no endpoints are specified so the default endpoint is exposed.  \n  \n     [!code-csharp[htAtomRss#6](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#6)]\n     [!code-vb[htAtomRss#6](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#6)]  \n  \n2.  Open the service host, load the feed from the service, display the feed, and wait for the user to press ENTER.  \n  \n     [!code-csharp[htAtomRss#8](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#8)]\n     [!code-vb[htAtomRss#8](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#8)]  \n  \n### To call GetBlog with an HTTP GET  \n  \n1.  Open Internet Explorer, type the following URL, and press ENTER. http://localhost:8000/BlogService/GetBlog  \n  \n     The URL contains the base address of the service (http://localhost:8000/BlogService), the relative address of the endpoint, and the service operation to call.  \n  \n### To call GetBlog() from code  \n  \n1.  Create an <xref:System.Xml.XmlReader> with the base address and the method you are calling.  \n  \n     [!code-csharp[htAtomRss#9](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/snippets.cs#9)]\n     [!code-vb[htAtomRss#9](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/snippets.vb#9)]  \n  \n2.  Call the static <xref:System.ServiceModel.Syndication.SyndicationFeed.Load%28System.Xml.XmlReader%29> method, passing in the <xref:System.Xml.XmlReader> you just created.  \n  \n     [!code-csharp[htAtomRss#10](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/snippets.cs#10)]\n     [!code-vb[htAtomRss#10](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/snippets.vb#10)]  \n  \n     This invokes the service operation and populates a new <xref:System.ServiceModel.Syndication.SyndicationFeed> with the formatter returned from the service operation.  \n  \n3.  Access the feed object.  \n  \n     [!code-csharp[htAtomRss#11](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/snippets.cs#11)]\n     [!code-vb[htAtomRss#11](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/snippets.vb#11)]  \n  \n## Example  \n The following is the full code listing for this example.  \n  \n [!code-csharp[htAtomRss#12](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#12)]  \n  \n## Compiling the Code  \n When compiling the preceding code, reference System.ServiceModel.dll and System.ServiceModel.Web.dll.  \n  \n## See Also  \n <xref:System.ServiceModel.WebHttpBinding>   \n <xref:System.ServiceModel.Web.WebGetAttribute>","nodes":[{"pos":[4,363],"embed":true,"restype":"x-metadata","content":"title: \"How to: Expose a Feed as Both Atom and RSS | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: fe374932-67f5-487d-9325-f868812b92e4\ncaps.latest.revision: 23\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","nodes":[{"content":"How to: Expose a Feed as Both Atom and RSS | Microsoft Docs","nodes":[{"pos":[0,59],"content":"How to: Expose a Feed as Both Atom and RSS | Microsoft Docs","nodes":[{"content":"How to: Expose a Feed as Both Atom and RSS | Microsoft Docs","pos":[0,59]}]}],"path":["title"]}],"yml":true},{"pos":[370,412],"content":"How to: Expose a Feed as Both Atom and RSS","linkify":"How to: Expose a Feed as Both Atom and RSS","nodes":[{"content":"How to: Expose a Feed as Both Atom and RSS","pos":[0,42]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> allows you to create a service that exposes a syndication feed.","pos":[413,532],"source":"[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] allows you to create a service that exposes a syndication feed."},{"content":"This topic discusses how to create a syndication service that exposes a syndication feed using both Atom 1.0 and RSS 2.0.","pos":[533,654]},{"content":"This service exposes one endpoint that can return either syndication format.","pos":[655,731]},{"content":"For simplicity the service used in this sample is self hosted.","pos":[732,794]},{"content":"In a production environment a service of this type would be hosted under IIS or WAS.","pos":[795,879]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> the different <ph id=\"ph2\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> hosting options, see <bpt id=\"p1\">[</bpt>Hosting<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/hosting.md)</ept>.","pos":[880,1096],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] the different [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] hosting options, see [Hosting](../../../../docs/framework/wcf/feature-details/hosting.md)."},{"pos":[1106,1143],"content":"To create a basic syndication service","linkify":"To create a basic syndication service","nodes":[{"content":"To create a basic syndication service","pos":[0,37]}]},{"content":"Define a service contract using an interface marked with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> attribute.","pos":[1153,1271],"source":"Define a service contract using an interface marked with the <xref:System.ServiceModel.Web.WebGetAttribute> attribute."},{"content":"Each operation that is exposed as a syndication feed returns a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeedFormatter&gt;</ph> object.","pos":[1272,1406],"source":" Each operation that is exposed as a syndication feed returns a <xref:System.ServiceModel.Syndication.SyndicationFeedFormatter> object."},{"content":"Note the parameters for the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph>.","pos":[1407,1482],"source":" Note the parameters for the <xref:System.ServiceModel.Web.WebGetAttribute>."},{"content":"<ph id=\"ph1\">`UriTemplate`</ph> specifies the URL used to invoke this service operation.","pos":[1483,1553],"source":"`UriTemplate` specifies the URL used to invoke this service operation."},{"content":"The string for this parameter contains literals and a variable in braces ({<bpt id=\"p1\">*</bpt>format<ept id=\"p1\">*</ept>}).","pos":[1554,1640],"source":" The string for this parameter contains literals and a variable in braces ({*format*})."},{"content":"This variable corresponds to the service operation's <ph id=\"ph1\">`format`</ph> parameter.","pos":[1641,1713],"source":" This variable corresponds to the service operation's `format` parameter."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><ph id=\"ph2\">&lt;xref:System.UriTemplate&gt;</ph>.","pos":[1714,1799],"source":"[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]<xref:System.UriTemplate>."},{"content":"<ph id=\"ph1\">`BodyStyle`</ph> affects how the messages that this service operation sends and receives are written.","pos":[1800,1896],"source":"`BodyStyle` affects how the messages that this service operation sends and receives are written."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.WebMessageBodyStyle&gt;</ph> specifies that the data sent to and from this service operation are not wrapped by infrastructure-defined XML elements.","pos":[1897,2067],"source":" <xref:System.ServiceModel.Web.WebMessageBodyStyle> specifies that the data sent to and from this service operation are not wrapped by infrastructure-defined XML elements."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><ph id=\"ph2\">&lt;xref:System.ServiceModel.Web.WebMessageBodyStyle&gt;</ph>.","pos":[2068,2178],"source":"[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]<xref:System.ServiceModel.Web.WebMessageBodyStyle>."},{"pos":[2189,2408],"content":"[!code-csharp[htAtomRss#0](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#0)]\n [!code-vb[htAtomRss#0](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#0)]","leadings":["","    "],"nodes":[]},{"pos":[2420,2579],"content":"[!NOTE]\nUse the <xref:System.ServiceModel.ServiceKnownTypeAttribute> to specify the types that are returned by the service operations in this interface.","leadings":["","    >  "],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceKnownTypeAttribute&gt;</ph> to specify the types that are returned by the service operations in this interface.","pos":[8,152],"source":"Use the <xref:System.ServiceModel.ServiceKnownTypeAttribute> to specify the types that are returned by the service operations in this interface."}]},{"content":"Implement the service contract.","pos":[2589,2620]},{"pos":[2631,2850],"content":"[!code-csharp[htAtomRss#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#1)]\n [!code-vb[htAtomRss#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#1)]","leadings":["","    "],"nodes":[]},{"content":"Create a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> object and add an author, category, and description.","pos":[2860,2976],"source":"Create a <xref:System.ServiceModel.Syndication.SyndicationFeed> object and add an author, category, and description."},{"pos":[2987,3206],"content":"[!code-csharp[htAtomRss#2](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#2)]\n [!code-vb[htAtomRss#2](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#2)]","leadings":["","    "],"nodes":[]},{"content":"Create several <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> objects.","pos":[3216,3294],"source":"Create several <xref:System.ServiceModel.Syndication.SyndicationItem> objects."},{"pos":[3305,3524],"content":"[!code-csharp[htAtomRss#3](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#3)]\n [!code-vb[htAtomRss#3](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#3)]","leadings":["","    "],"nodes":[]},{"content":"Add the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> objects to the feed.","pos":[3534,3617],"source":"Add the <xref:System.ServiceModel.Syndication.SyndicationItem> objects to the feed."},{"pos":[3628,3847],"content":"[!code-csharp[htAtomRss#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#4)]\n [!code-vb[htAtomRss#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#4)]","leadings":["","    "],"nodes":[]},{"content":"Use the format parameter to return the requested format.","pos":[3857,3913]},{"pos":[3924,4143],"content":"[!code-csharp[htAtomRss#5](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#5)]\n [!code-vb[htAtomRss#5](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#5)]","leadings":["","    "],"nodes":[]},{"pos":[4153,4172],"content":"To host the service","linkify":"To host the service","nodes":[{"content":"To host the service","pos":[0,19]}]},{"content":"Create a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> object.","pos":[4182,4244],"source":"Create a <xref:System.ServiceModel.Web.WebServiceHost> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> class automatically adds an endpoint at the service's base address unless one is specified in code or configuration.","pos":[4245,4411],"source":" The <xref:System.ServiceModel.Web.WebServiceHost> class automatically adds an endpoint at the service's base address unless one is specified in code or configuration."},{"content":"In this sample, no endpoints are specified so the default endpoint is exposed.","pos":[4412,4490]},{"pos":[4501,4720],"content":"[!code-csharp[htAtomRss#6](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#6)]\n [!code-vb[htAtomRss#6](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#6)]","leadings":["","    "],"nodes":[]},{"content":"Open the service host, load the feed from the service, display the feed, and wait for the user to press ENTER.","pos":[4730,4840]},{"pos":[4851,5070],"content":"[!code-csharp[htAtomRss#8](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/program.cs#8)]\n [!code-vb[htAtomRss#8](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/program.vb#8)]","leadings":["","    "],"nodes":[]},{"pos":[5080,5112],"content":"To call GetBlog with an HTTP GET","linkify":"To call GetBlog with an HTTP GET","nodes":[{"content":"To call GetBlog with an HTTP GET","pos":[0,32]}]},{"content":"Open Internet Explorer, type the following URL, and press ENTER.","pos":[5122,5186]},{"content":"http://localhost:8000/BlogService/GetBlog","pos":[5187,5228]},{"content":"The URL contains the base address of the service (http://localhost:8000/BlogService), the relative address of the endpoint, and the service operation to call.","pos":[5239,5397]},{"pos":[5407,5434],"content":"To call GetBlog() from code","linkify":"To call GetBlog() from code","nodes":[{"content":"To call GetBlog() from code","pos":[0,27]}]},{"content":"Create an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> with the base address and the method you are calling.","pos":[5444,5535],"source":"Create an <xref:System.Xml.XmlReader> with the base address and the method you are calling."},{"pos":[5546,5767],"content":"[!code-csharp[htAtomRss#9](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/snippets.cs#9)]\n [!code-vb[htAtomRss#9](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/snippets.vb#9)]","leadings":["","    "],"nodes":[]},{"content":"Call the static <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Load%28System.Xml.XmlReader%29&gt;</ph> method, passing in the <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> you just created.","pos":[5777,5947],"source":"Call the static <xref:System.ServiceModel.Syndication.SyndicationFeed.Load%28System.Xml.XmlReader%29> method, passing in the <xref:System.Xml.XmlReader> you just created."},{"pos":[5958,6183],"content":"[!code-csharp[htAtomRss#10](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/snippets.cs#10)]\n [!code-vb[htAtomRss#10](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/snippets.vb#10)]","leadings":["","    "],"nodes":[]},{"content":"This invokes the service operation and populates a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> with the formatter returned from the service operation.","pos":[6194,6359],"source":"This invokes the service operation and populates a new <xref:System.ServiceModel.Syndication.SyndicationFeed> with the formatter returned from the service operation."},{"content":"Access the feed object.","pos":[6369,6392]},{"pos":[6403,6628],"content":"[!code-csharp[htAtomRss#11](../../../../samples/snippets/csharp/VS_Snippets_CFX/htatomrss/cs/snippets.cs#11)]\n [!code-vb[htAtomRss#11](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/htatomrss/vb/snippets.vb#11)]","leadings":["","    "],"nodes":[]},{"pos":[6637,6644],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following is the full code listing for this example.","pos":[6648,6704]},{"pos":[6828,6846],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"When compiling the preceding code, reference System.ServiceModel.dll and System.ServiceModel.Web.dll.","pos":[6850,6951]},{"pos":[6960,6968],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}