<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed33648c8b926829ce93b32c3f6e2fb42925bfb0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\ui-automation\implementing-the-ui-automation-value-control-pattern.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6409f37d82a031d8b605a4ae5f9c8b54b651235</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31a4ad6b8d9c1569c5e4508cb4ba1e59d3760b99</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implementing the UI Automation Value Control Pattern | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implementing the UI Automation Value Control Pattern</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This documentation is intended for .NET Framework developers who want to use the managed <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> classes defined in the <ph id="ph2">&lt;xref:System.Windows.Automation&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For the latest information about <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>, see <bpt id="p1">[</bpt>Windows Automation API: UI Automation<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=156746)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic introduces guidelines and conventions for implementing <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>, including information on events and properties.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Links to additional references are listed at the end of the topic.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.ValuePattern&gt;</ph> control pattern is used to support controls that have an intrinsic value not spanning a range and that can be represented as a string.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This string can be editable, depending on the control and its settings.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For examples of controls that implement this pattern, see <bpt id="p1">[</bpt>Control Pattern Mapping for UI Automation Clients<ept id="p1">](../../../docs/framework/ui-automation/control-pattern-mapping-for-ui-automation-clients.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Implementation Guidelines and Conventions</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When implementing the Value control pattern, note the following guidelines and conventions:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Controls such as <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.ListItem&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.TreeItem&gt;</ph> must support <ph id="ph3">&lt;xref:System.Windows.Automation.ValuePattern&gt;</ph> if the value of any of the items is editable, regardless of the current edit mode of the control.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The parent control must also support <ph id="ph1">&lt;xref:System.Windows.Automation.ValuePattern&gt;</ph> if the child items are editable.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Editable list item.<ept id="p1">](../../../docs/framework/ui-automation/media/uia-valuepattern-editable-listitem.PNG "UIA_ValuePattern_Editable_ListItem")</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example of an Editable List Item</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Single-line edit controls support programmatic access to their contents by implementing <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, multi-line edit controls do not implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>; instead they provide access to their content by implementing <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To retrieve the textual contents of a multi-line edit control, the control must implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph> does not support setting the value of a control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> does not support the retrieval of formatting information or substring values.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph> in these scenarios.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> must be implemented by controls such as the <bpt id="p1">**</bpt>Color Picker<ept id="p1">**</ept> selection control from <ph id="ph2">[!INCLUDE[TLA#tla_word](../../../includes/tlasharptla-word-md.md)]</ph> (illustrated below), which supports string mapping between a color value (for example, "yellow") and an equivalent internal <ph id="ph3">[!INCLUDE[TLA#tla_rgb](../../../includes/tlasharptla-rgb-md.md)]</ph> structure.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Color picker with yellow highlighted.<ept id="p1">](../../../docs/framework/ui-automation/media/uia-valuepattern-colorpicker.png "UIA_ValuePattern_ColorPicker")</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example of Color Swatch String Mapping</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A control should have its <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.IsEnabledProperty&gt;</ph> set to <ph id="ph2">`true`</ph> and its <ph id="ph3">&lt;xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty&gt;</ph> set to <ph id="ph4">`false`</ph> before allowing a call to <ph id="ph5">&lt;xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Required Members for IValueProvider</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following properties and methods are required for implementing <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Required members</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Member type</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Notes</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Providers must throw the following exceptions.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Exception type</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-   If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-   If a new value cannot be converted from a string to a format the control recognizes.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-   When an attempt is made to manipulate a control that is not enabled.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UI Automation Control Patterns Overview<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-control-patterns-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Support Control Patterns in a UI Automation Provider<ept id="p1">](../../../docs/framework/ui-automation/support-control-patterns-in-a-ui-automation-provider.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>UI Automation Control Patterns for Clients<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>TextPattern Insert Text Sample<ept id="p1">](http://msdn.microsoft.com/en-us/67353f93-7ee2-42f2-ab76-5c078cf6ca16)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>UI Automation Tree Overview<ept id="p1">](../../../docs/framework/ui-automation/ui-automation-tree-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Use Caching in UI Automation<ept id="p1">](../../../docs/framework/ui-automation/use-caching-in-ui-automation.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>