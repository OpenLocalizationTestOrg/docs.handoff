{"content":"---\ntitle: \"Generic parameters used as optional parameter types must be class constrained | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc32124\"\n  - \"bc32124\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"BC32124\"\nms.assetid: 55aa8b2a-9ce3-4620-a710-2f9b0feb6143\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Generic parameters used as optional parameter types must be class constrained\nA procedure is declared with an optional parameter that uses a type parameter that is not constrained to be a reference type.  \n  \n You must always supply a default value for each optional parameter. If the parameter is of a reference type, the optional value must be `Nothing`, which is a valid value for any reference type. However, if the parameter is of a value type, that type must be an elementary data type predefined by Visual Basic. This is because a composite value type, such as a user-defined structure, has no valid default value.  \n  \n When you use a type parameter for an optional parameter, you must guarantee that it is of a reference type to avoid the possibility of a value type with no valid default value. This means you must constrain the type parameter either with the `Class` keyword or with the name of a specific class.  \n  \n **Error ID:** BC32124  \n  \n## To correct this error  \n  \n-   Constrain the type parameter to accept only a reference type, or do not use it for the optional parameter.  \n  \n## See Also  \n [Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)   \n [Type List](../../../visual-basic/language-reference/statements/type-list.md)   \n [Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)   \n [Optional Parameters](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)   \n [Structures](../../../visual-basic/programming-guide/language-features/data-types/structures.md)   \n [Nothing](../../../visual-basic/language-reference/nothing.md)","nodes":[{"pos":[4,637],"nodes":[{"content":"Generic parameters used as optional parameter types must be class constrained | Microsoft Docs","nodes":[{"pos":[0,94],"content":"Generic parameters used as optional parameter types must be class constrained | Microsoft Docs","nodes":[{"content":"Generic parameters used as optional parameter types must be class constrained | Microsoft Docs","pos":[0,94]}]}],"pos":[6,103],"yaml":true}],"content":"title: \"Generic parameters used as optional parameter types must be class constrained | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc32124\"\n  - \"bc32124\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"BC32124\"\nms.assetid: 55aa8b2a-9ce3-4620-a710-2f9b0feb6143\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[644,721],"content":"Generic parameters used as optional parameter types must be class constrained","linkify":"Generic parameters used as optional parameter types must be class constrained","nodes":[{"content":"Generic parameters used as optional parameter types must be class constrained","pos":[0,77]}]},{"content":"A procedure is declared with an optional parameter that uses a type parameter that is not constrained to be a reference type.","pos":[722,847]},{"content":"You must always supply a default value for each optional parameter.","pos":[854,921]},{"content":"If the parameter is of a reference type, the optional value must be <ph id=\"ph1\">`Nothing`</ph>, which is a valid value for any reference type.","pos":[922,1047],"source":" If the parameter is of a reference type, the optional value must be `Nothing`, which is a valid value for any reference type."},{"content":"However, if the parameter is of a value type, that type must be an elementary data type predefined by Visual Basic.","pos":[1048,1163]},{"content":"This is because a composite value type, such as a user-defined structure, has no valid default value.","pos":[1164,1265]},{"content":"When you use a type parameter for an optional parameter, you must guarantee that it is of a reference type to avoid the possibility of a value type with no valid default value.","pos":[1272,1448]},{"content":"This means you must constrain the type parameter either with the <ph id=\"ph1\">`Class`</ph> keyword or with the name of a specific class.","pos":[1449,1567],"source":" This means you must constrain the type parameter either with the `Class` keyword or with the name of a specific class."},{"pos":[1574,1595],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32124","source":"**Error ID:** BC32124"},{"pos":[1604,1625],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Constrain the type parameter to accept only a reference type, or do not use it for the optional parameter.","pos":[1635,1741]},{"pos":[1750,1758],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[1762,1881],"source":"[Generic Types in Visual Basic](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../../visual-basic/language-reference/statements/type-list.md)</ept><ph id=\"ph1\"> </ph>","pos":[1885,1963],"source":"[Type List](../../../visual-basic/language-reference/statements/type-list.md) "},{"content":"<bpt id=\"p1\">[</bpt>Class Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/class-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[1967,2057],"source":"[Class Statement](../../../visual-basic/language-reference/statements/class-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Optional Parameters<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)</ept><ph id=\"ph1\"> </ph>","pos":[2061,2176],"source":"[Optional Parameters](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md) "},{"content":"<bpt id=\"p1\">[</bpt>Structures<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[2180,2277],"source":"[Structures](../../../visual-basic/programming-guide/language-features/data-types/structures.md) "},{"content":"<bpt id=\"p1\">[</bpt>Nothing<ept id=\"p1\">](../../../visual-basic/language-reference/nothing.md)</ept>","pos":[2281,2343],"source":"[Nothing](../../../visual-basic/language-reference/nothing.md)"}]}