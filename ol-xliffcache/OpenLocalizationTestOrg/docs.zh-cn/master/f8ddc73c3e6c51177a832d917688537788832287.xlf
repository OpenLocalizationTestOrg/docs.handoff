<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8ddc73c3e6c51177a832d917688537788832287</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\entityclient-provider-for-the-entity-framework.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47ed4da4ec774c89676ad6aa3684387c72486738</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">baf5c0251e7d9cc987cc3002f5dee6637a467b6f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>EntityClient Provider for the Entity Framework | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>EntityClient Provider for the Entity Framework</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The EntityClient provider is a data provider used by Entity Framework applications to access data described in a conceptual model.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For information about conceptual models, see <bpt id="p1">[</bpt>Modeling and Mapping<ept id="p1">](../../../../../docs/framework/data/adonet/ef/modeling-and-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>EntityClient uses other .NET Framework data providers to access the data source.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, EntityClient uses the .NET Framework Data Provider for SQL Server (SqlClient) when accessing a SQL Server database.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For information about the SqlClient provider, see <bpt id="p1">[</bpt>SqlClient for the Entity Framework<ept id="p1">](../../../../../docs/framework/data/adonet/ef/sqlclient-for-the-entity-framework.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The EntityClient provider is implemented in the <ph id="ph1">&lt;xref:System.Data.EntityClient&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Managing Connections</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> builds on top of storage-specific <ph id="ph2">[!INCLUDE[vstecado](../../../../../includes/vstecado-md.md)]</ph> data providers by providing an <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> to an underlying data provider and relational database.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To construct an <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> object, you have to reference a set of metadata that contains the necessary models and mapping, and also a storage-specific data provider name and connection string.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>After the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> is in place, entities can be accessed through the classes generated from the conceptual model.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can specify a connection string in app.config file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient&gt;</ph> also includes the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This class enables developers to programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, by using properties and methods of the class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Build an EntityConnection Connection String<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating Queries</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> language is a storage-independent dialect of SQL that works directly with conceptual entity schemas and supports Entity Data Model concepts such as inheritance and relationships.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> class is used to execute an <ph id="ph2">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> command against an entity model.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When you construct <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> objects, you can specify a stored procedure name or a query text.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> works with storage-specific data providers to translate generic <ph id="ph2">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> into storage-specific queries.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information about writing <ph id="ph1">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> queries, see <bpt id="p1">[</bpt>Entity SQL Language<ept id="p1">](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> object and assigns an <ph id="ph2">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> query text to its <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityCommand.CommandText%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> query requests products ordered by the list price from the conceptual model.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following code has no knowledge of the storage model at all.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`cmd.CommandText = @"`</ph> <ph id="ph2">`SELECT VALUE p`</ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Executing Queries</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When a query is executed, it is parsed and converted into a canonical command tree.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>All subsequent processing is performed on the command tree.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command tree is the means of communication between the <ph id="ph1">&lt;xref:System.Data.EntityClient&gt;</ph> and the underlying <ph id="ph2">[!INCLUDE[dnprdnshort](../../../../../includes/dnprdnshort-md.md)]</ph> data provider, such as <ph id="ph3">&lt;xref:System.Data.SqlClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityDataReader&gt;</ph> exposes the results of executing a <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> against a conceptual model.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To execute the command that returns the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityDataReader&gt;</ph>, call <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityCommand.ExecuteReader%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityDataReader&gt;</ph> implements <ph id="ph2">&lt;xref:System.Data.IExtendedDataRecord&gt;</ph> to describe rich structured results.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Managing Transactions</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the Entity Framework, there are two ways to use transactions: automatic and explicit.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Automatic transactions use the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace, and explicit transactions use the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityTransaction&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To update data that is exposed through a conceptual model; see <bpt id="p1">[</bpt>How to: Manage Transactions in the Entity Framework<ept id="p1">](http://msdn.microsoft.com/en-us/4a55eb7f-f826-4a48-9df1-aebe2352ebef)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Build an EntityConnection Connection String<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Execute a Query that Returns PrimitiveType Results<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-primitivetype-results.md)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Execute a Query that Returns StructuralType Results<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Execute a Query that Returns RefType Results<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-reftype-results.md)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Execute a Query that Returns Complex Types<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-complex-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Execute a Query that Returns Nested Collections<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-nested-collections.md)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Execute a Parameterized Entity SQL Query Using EntityCommand<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-parameterized-entity-sql-query-using-entitycommand.md)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Execute a Parameterized Stored Procedure Using EntityCommand<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-parameterized-stored-procedure-using-entitycommand.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Execute a Polymorphic Query<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-polymorphic-query.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Navigate Relationships with the Navigate Operator<ept id="p1">](../../../../../docs/framework/data/adonet/ef/how-to-navigate-relationships-with-the-navigate-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Managing Connections and Transactions<ept id="p1">](http://msdn.microsoft.com/en-us/b6659d2a-9a45-4e98-acaa-d7a8029e5b99)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Entity Framework<ept id="p1">](../../../../../docs/framework/data/adonet/ef/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Language Reference<ept id="p1">](../../../../../docs/framework/data/adonet/ef/language-reference/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>