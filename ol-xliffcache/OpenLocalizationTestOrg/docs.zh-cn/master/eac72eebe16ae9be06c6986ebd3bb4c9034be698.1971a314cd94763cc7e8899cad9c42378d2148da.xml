{"content":"---\ntitle: \"Walkthrough: Hosting WPF Content in Win32 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"hosting WPF content in Win32 window\"\nms.assetid: 38ce284a-4303-46dd-b699-c9365b22a7dc\ncaps.latest.revision: 24\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Walkthrough: Hosting WPF Content in Win32\n[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] provides a rich environment for creating applications. However, when you have a substantial investment in              [!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)] code, it might be more effective to add              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] functionality to your application rather than rewriting your original code.              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] provides a straightforward mechanism for hosting              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a              [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window.  \n  \n This tutorial describes how to write a sample application,              [Hosting WPF Content in a Win32 Window Sample](http://go.microsoft.com/fwlink/?LinkID=160004), that hosts              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a              [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window. You can extend this sample to host any              [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window. Because it involves mixing managed and unmanaged code, the application is written in              [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)].  \n  \n \n  \n<a name=\"requirements\"></a>   \n## Requirements  \n This tutorial assumes a basic familiarity with both                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] and                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] programming. For a basic introduction to                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] programming, see                  [Getting Started](../../../../docs/framework/wpf/getting-started/index.md). For an introduction to                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] programming, you should reference any of the numerous books on the subject, in particular                  *Programming Windows* by Charles Petzold.  \n  \n Because the sample that accompanies this tutorial is implemented in                  [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)], this tutorial assumes familiarity with the use of                  [!INCLUDE[TLA#tla_cpp](../../../../includes/tlasharptla-cpp-md.md)] to program the                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)][!INCLUDE[TLA2#tla_api](../../../../includes/tla2sharptla-api-md.md)] plus an understanding of managed code programming. Familiarity with                  [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)] is helpful but not essential.  \n  \n> [!NOTE]\n>  This tutorial includes a number of code examples from the associated sample. However, for readability, it does not include the complete sample code. For the complete sample code, see                      [Hosting WPF Content in a Win32 Window Sample](http://go.microsoft.com/fwlink/?LinkID=160004).  \n  \n<a name=\"basic_procedure\"></a>   \n## The Basic Procedure  \n This section outlines the basic procedure you use to host                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window. The remaining sections explain the details of each step.  \n  \n The key to hosting                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content on a                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window is the                  <xref:System.Windows.Interop.HwndSource> class. This class wraps the                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window, allowing it to be incorporated into your                  [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)] as a child window. The following approach combines the                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] and                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] in a single application.  \n  \n1.  Implement your                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content as a managed class.  \n  \n2.  Implement a                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application with                          [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]. If you are starting with an existing application and unmanaged                          [!INCLUDE[TLA#tla_cpp](../../../../includes/tlasharptla-cpp-md.md)] code, you can usually enable it to call managed code by changing your project settings to include the                          `/clr` compiler flag.  \n  \n3.  Set the threading model to single-threaded apartment (STA).  \n  \n4.  Handle the                          [WM_CREATE](http://msdn.microsoft.com/library/ms632619.aspx)notification in your window procedure and do the following:  \n  \n    1.  Create a new                                  <xref:System.Windows.Interop.HwndSource> object with the parent window as its                                  `parent` parameter.  \n  \n    2.  Create an instance of your                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content class.  \n  \n    3.  Assign a reference to the                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content object to the                                  <xref:System.Windows.Interop.HwndSource.RootVisual%2A> property of the                                  <xref:System.Windows.Interop.HwndSource>.  \n  \n    4.  Get the HWND for the content. The                                  <xref:System.Windows.Interop.HwndSource.Handle%2A> property of the                                  <xref:System.Windows.Interop.HwndSource> object contains the window handle (HWND). To get an HWND that you can use in the unmanaged part of your application, cast                                  `Handle.ToPointer()` to an HWND.  \n  \n5.  Implement a managed class that contains a static field to hold a reference to your                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. This class allows you to get a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content from your                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] code.  \n  \n6.  Assign the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content to the static field.  \n  \n7.  Receive notifications from the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content by attaching a handler to one or more of the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] events.  \n  \n8.  Communicate with the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content by using the reference that you stored in the static field to set properties, and so on.  \n  \n> [!NOTE]\n>  You can also use                      [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] to implement your                      [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. However, you will have to compile it separately as a                      [!INCLUDE[TLA#tla_dll](../../../../includes/tlasharptla-dll-md.md)] and reference that                      [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)] from your                      [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application. The remainder of the procedure is similar to that outlined above.  \n  \n<a name=\"implementing_the_application\"></a>   \n## Implementing the Host Application  \n This section describes how to host                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a basic                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application. The content itself is implemented in                  [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)] as a managed class. For the most part, it is straightforward                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] programming. The key aspects of the content implementation are discussed in                  [Implementing the WPF Content](#implementing_the_wpf_page).  \n  \n<a name=\"autoNestedSectionsOUTLINE1\"></a>   \n-   [The Basic Application](#the_basic_application)  \n  \n-   [Hosting the WPF Content](#hosting_the_wpf_page)  \n  \n-   [Holding a Reference to the WPF Content](#holding_a_reference)  \n  \n-   [Communicating with the WPF Content](#communicating_with_the_page)  \n  \n<a name=\"the_basic_application\"></a>   \n### The Basic Application  \n The starting point for the host application was to create a                          [!INCLUDE[TLA#tla_visualstu2005](../../../../includes/tlasharptla-visualstu2005-md.md)] template.  \n  \n1.  Open                                  [!INCLUDE[TLA2#tla_visualstu2005](../../../../includes/tla2sharptla-visualstu2005-md.md)], and select                                  **New Project** from the                                  **File** menu.  \n  \n2.  Select                                  **Win32** from the list of                                  [!INCLUDE[TLA2#tla_visualcpp](../../../../includes/tla2sharptla-visualcpp-md.md)] project types. If your default language is not                                  [!INCLUDE[TLA2#tla_cpp](../../../../includes/tla2sharptla-cpp-md.md)], you will find these project types under                                  **Other Languages**.  \n  \n3.  Select a                                  **Win32 Project** template, assign a name to the project and click                                  **OK** to launch the                                  **Win32 Application Wizard**.  \n  \n4.  Accept the wizard's default settings and click                                  **Finish** to start the project.  \n  \n The template creates a basic                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application, including:  \n  \n-   An entry point for the application.  \n  \n-   A window, with an associated window procedure (WndProc).  \n  \n-   A menu with                                  **File** and                                  **Help** headings. The                                  **File** menu has an                                  **Exit** item that closes the application. The                                  **Help** menu has an                                  **About** item that launches a simple dialog box.  \n  \n Before you start writing code to host the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content, you need to make two modifications to the basic template.  \n  \n The first is to compile the project as managed code. By default, the project compiles as unmanaged code. However, because                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] is implemented in managed code, the project must be compiled accordingly.  \n  \n1.  Right-click the project name in                                  **Solution Explorer** and select                                  **Properties** from the context menu to launch the                                  **Property Pages** dialog box.  \n  \n2.  Select                                  **Configuration Properties** from the tree view in the left pane.  \n  \n3.  Select                                  **Common Language Runtime** support from the                                  **Project Defaults** list in the right pane.  \n  \n4.  Select                                  **Common Language Runtime Support (/clr)** from the drop-down list box.  \n  \n> [!NOTE]\n>  This compiler flag allows you to use managed code in your application, but your unmanaged code will still compile as before.  \n  \n [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] uses the single-threaded apartment (STA) threading model. In order to work properly with the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content code, you must set the application's threading model to STA by applying an attribute to the entry point.  \n  \n [!code-cpp[Win32HostingWPFPage#WinMain](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/Win32HostingWPFPage.cpp#winmain)]  \n  \n<a name=\"hosting_the_wpf_page\"></a>   \n### Hosting the WPF Content  \n The                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content is a simple address entry application. It consists of several                          <xref:System.Windows.Controls.TextBox> controls to take user name, address, and so on. There are also two                          <xref:System.Windows.Controls.Button> controls,                          **OK** and                          **Cancel**. When the user clicks                          **OK**, the button's                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler collects the data from the                          <xref:System.Windows.Controls.TextBox> controls, assigns it to corresponding properties, and raises a custom event,                          `OnButtonClicked`. When the user clicks                          **Cancel**, the handler simply raises                          `OnButtonClicked`. The event argument object for                          `OnButtonClicked` contains a Boolean field that indicates which button was clicked.  \n  \n The code to host the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content is implemented in a handler for the                          [WM_CREATE](http://msdn.microsoft.com/library/ms632619.aspx) notification on the host window.  \n  \n [!code-cpp[Win32HostingWPFPage#WMCreate](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/Win32HostingWPFPage.cpp#wmcreate)]  \n  \n The                          `GetHwnd` method takes size and position information plus the parent window handle and returns the window handle of the hosted                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content.  \n  \n> [!NOTE]\n>  You cannot use a                              `#using` directive for the                              `System::Windows::Interop` namespace. Doing so creates a name collision between the                              <xref:System.Windows.Interop.MSG> structure in that namespace and the MSG structure declared in winuser.h. You must instead use fully-qualified names to access the contents of that namespace.  \n  \n [!code-cpp[Win32HostingWPFPage#GetHwnd](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/Win32HostingWPFPage.cpp#gethwnd)]  \n  \n You cannot host the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content directly in your application window. Instead, you first create an                          <xref:System.Windows.Interop.HwndSource> object to wrap the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. This object is basically a window that is designed to host a                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. You host the                          <xref:System.Windows.Interop.HwndSource> object in the parent window by creating it as a child of a                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window that is part of your application. The                          <xref:System.Windows.Interop.HwndSource> constructor parameters contain much the same information that you would pass to CreateWindow when you create a                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] child window.  \n  \n You next create an instance of the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content object. In this case, the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content is implemented as a separate class,                          `WPFPage`, using                          [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]. You could also implement the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content with                          [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]. However, to do so you need to set up a separate project and build the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content as a                          [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)]. You can add a reference to that                          [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)] to your project, and use that reference to create an instance of the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content.  \n  \n You display the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in your child window by assigning a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content to the                          <xref:System.Windows.Interop.HwndSource.RootVisual%2A> property of the                            <xref:System.Windows.Interop.HwndSource>.  \n  \n The next line of code attaches an event handler,                          `WPFButtonClicked`, to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content                          `OnButtonClicked` event. This handler is called when the user clicks the                          **OK** or                          **Cancel** button. See                          [communicating_with_the_WPF content](#communicating_with_the_page) for further discussion of this event handler.  \n  \n The final line of code shown returns the window handle (HWND) that is associated with the                          <xref:System.Windows.Interop.HwndSource> object. You can use this handle from your                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] code to send messages to the hosted window, although the sample does not do so. The                          <xref:System.Windows.Interop.HwndSource> object raises an event every time it receives a message. To process the messages, call the                          <xref:System.Windows.Interop.HwndSource.AddHook%2A> method to attach a message handler and then process the messages in that handler.  \n  \n<a name=\"holding_a_reference\"></a>   \n### Holding a Reference to the WPF Content  \n For many applications, you will want to communicate with the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content later. For example, you might want to modify the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content properties, or perhaps have the                          <xref:System.Windows.Interop.HwndSource> object host different                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. To do this, you need a reference to the                          <xref:System.Windows.Interop.HwndSource> object or the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. The                          <xref:System.Windows.Interop.HwndSource> object and its associated                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content remain in memory until you destroy the window handle. However, the variable you assign to the                          <xref:System.Windows.Interop.HwndSource> object will go out of scope as soon as you return from the window procedure. The customary way to handle this issue with                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] applications is to use a static or global variable. Unfortunately, you cannot assign a managed object to those types of variables. You can assign the window handle associated with                          <xref:System.Windows.Interop.HwndSource> object to a global or static variable, but that doe not provide access to the object itself.  \n  \n The simplest solution to this issue is to implement a managed class that contains a set of static fields to hold references to any managed objects that you need access to. The sample uses the                          `WPFPageHost` class to hold a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content, plus the initial values of a number of its properties that might be changed later by the user. This is defined in the header.  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageHost](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/Win32HostingWPFPage.h#wpfpagehost)]  \n  \n The latter part of the                          `GetHwnd` function assigns values to those fields for later use while                          `myPage` is still in scope.  \n  \n<a name=\"communicating_with_the_page\"></a>   \n### Communicating with the WPF Content  \n There are two types of communication with the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. The application receives information from the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content when the user clicks the                          **OK** or                          **Cancel** buttons. The application also has a                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that allows the user to change various                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content properties, such as the background color or default font size.  \n  \n As mentioned above, when the user clicks either button the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content raises an                          `OnButtonClicked` event. The application attaches a handler to this event to receive these notifications. If the                          **OK** button was clicked, the handler gets the user information from the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content and displays it in a set of static controls.  \n  \n [!code-cpp[Win32HostingWPFPage#WPFButtonClicked](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/Win32HostingWPFPage.cpp#wpfbuttonclicked)]  \n  \n The handler receives a custom event argument object from the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content,                          `MyPageEventArgs`. The object's                          `IsOK` property is set to                          `true` if the                          **OK** button was clicked, and                          `false` if the                          **Cancel** button was clicked.  \n  \n If the                          **OK** button was clicked, the handler gets a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content from the container class. It then collects the user information that is held by the associated                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content properties and uses the static controls to display the information on the parent window. Because the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content data is in the form of a managed string, it has to be marshaled for use by a                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] control. If the                          **Cancel** button was clicked, the handler clears the data from the static controls.  \n  \n The application                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] provides a set of radio buttons that allow the user to modify the background color of the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content, and several font-related properties. The following example is an excerpt from the application's window procedure (WndProc) and its message handling that sets various properties on different messages, including the background color. The others are similar, and are not shown. See the complete sample for details and context.  \n  \n [!code-cpp[Win32HostingWPFPage#WMCommandToBG](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/Win32HostingWPFPage.cpp#wmcommandtobg)]  \n  \n To set the background color, get a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content (                         `hostedPage`) from                          `WPFPageHost` and set the background color property to the appropriate color. The sample uses three color options: the original color, light green, or light salmon. The original background color is stored as a static field in the                          `WPFPageHost` class. To set the other two, you create a new                          <xref:System.Windows.Media.SolidColorBrush> object and pass the constructor a static colors value from the                          <xref:System.Windows.Media.Colors> object.  \n  \n<a name=\"implementing_the_wpf_page\"></a>   \n## Implementing the WPF Page  \n You can host and use the                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content without any knowledge of the actual implementation. If the                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content had been packaged in a separate                  [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)], it could have been built in any                  [!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)] language. Following is a brief walkthrough of the                  [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)] implementation that is used in the sample. This section contains the following subsections.  \n  \n<a name=\"autoNestedSectionsOUTLINE2\"></a>   \n-   [Layout](#page_layout)  \n  \n-   [Returning the Data to the Host Window](#returning_data_to_window)  \n  \n-   [Setting the WPF Properties](#set_page_properties)  \n  \n<a name=\"page_layout\"></a>   \n### Layout  \n The                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] elements in the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content consist of five                          <xref:System.Windows.Controls.TextBox> controls, with associated                          <xref:System.Windows.Controls.Label> controls: Name, Address, City, State, and Zip. There are also two                          <xref:System.Windows.Controls.Button> controls,                          **OK** and                          **Cancel**  \n  \n The                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content is implemented in the                          `WPFPage` class. Layout is handled with a                          <xref:System.Windows.Controls.Grid> layout element. The class inherits from                          <xref:System.Windows.Controls.Grid>, which effectively makes it the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content root element.  \n  \n The                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content constructor takes the required width and height, and sizes the                          <xref:System.Windows.Controls.Grid> accordingly. It then defines the basic layout by creating a set of                          <xref:System.Windows.Controls.ColumnDefinition> and                          <xref:System.Windows.Controls.RowDefinition> objects and adding them to the                          <xref:System.Windows.Controls.Grid> object base                          <xref:System.Windows.Controls.Grid.ColumnDefinitions%2A> and                          <xref:System.Windows.Controls.Grid.RowDefinitions%2A> collections, respectively. This defines a grid of five rows and seven columns, with the dimensions determined by the contents of the cells.  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageCtorToGridDef](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/WPFPage.cpp#wpfpagectortogriddef)]  \n  \n Next, the constructor adds the                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] elements to the                          <xref:System.Windows.Controls.Grid>. The first element is the title text, which is a                          <xref:System.Windows.Controls.Label> control that is centered in the first row of the grid.  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageCtorTitle](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/WPFPage.cpp#wpfpagectortitle)]  \n  \n The next row contains the Name                          <xref:System.Windows.Controls.Label> control and its associated                          <xref:System.Windows.Controls.TextBox> control. Because the same code is used for each label/textbox pair, it is placed in a pair of private methods and used for all five label/textbox pairs. The methods create the appropriate control, and call the                          <xref:System.Windows.Controls.Grid> class static                          <xref:System.Windows.Controls.Grid.SetColumn%2A> and                          <xref:System.Windows.Controls.Grid.SetRow%2A> methods to place the controls in the appropriate cell. After the control is created, the sample calls the                          <xref:System.Windows.Controls.UIElementCollection.Add%2A> method on the                          <xref:System.Windows.Controls.Panel.Children%2A> property of the                          <xref:System.Windows.Controls.Grid> to add the control to the grid. The code to add the remaining label/textbox pairs is similar. See the sample code for details.  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageCtorName](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/WPFPage.cpp#wpfpagectorname)]  \n  \n The implementation of the two methods is as follows:  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageCreateHelpers](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/WPFPage.cpp#wpfpagecreatehelpers)]  \n  \n Finally, the sample adds the                          **OK** and                          **Cancel** buttons and attaches an event handler to their                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events.  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageCtorButtonsEvents](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/WPFPage.cpp#wpfpagectorbuttonsevents)]  \n  \n<a name=\"returning_data_to_window\"></a>   \n### Returning the Data to the Host Window  \n When either button is clicked, its                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is raised. The host window could simply attach handlers to these events and get the data directly from the                          <xref:System.Windows.Controls.TextBox> controls. The sample uses a somewhat less direct approach. It handles the                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> within the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content, and then raises a custom event                          `OnButtonClicked`, to notify the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. This allows the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content to do some parameter validation before notifying the host. The handler gets the text from the                          <xref:System.Windows.Controls.TextBox> controls and assigns it to public properties, from which the host can retrieve the information.  \n  \n The event declaration, in WPFPage.h:  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageEventDecl](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/WPFPage.h#wpfpageeventdecl)]  \n  \n The                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler, in WPFPage.cpp:  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageButtonClicked](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/WPFPage.cpp#wpfpagebuttonclicked)]  \n  \n<a name=\"set_page_properties\"></a>   \n### Setting the WPF Properties  \n The                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] host allows the user to change several                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content properties. From the                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] side, it is simply a matter of changing the properties. The implementation in the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content class is somewhat more complicated, because there is no single global property that controls the fonts for all controls. Instead, the appropriate property for each control is changed in the properties' set accessors. The following example shows the code for the                          `DefaultFontFamily` property. Setting the property calls a private method that in turn sets the                          <xref:System.Windows.Controls.Control.FontFamily%2A> properties for the various controls.  \n  \n From WPFPage.h:  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageFontFamilyProperty](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/WPFPage.h#wpfpagefontfamilyproperty)]  \n  \n From WPFPage.cpp:  \n  \n [!code-cpp[Win32HostingWPFPage#WPFPageSetFontFamily](../../../../samples/snippets/cpp/VS_Snippets_Wpf/Win32HostingWPFPage/CPP/WPFPage.cpp#wpfpagesetfontfamily)]  \n  \n## See Also  \n <xref:System.Windows.Interop.HwndSource>   \n [WPF and Win32 Interoperation](../../../../docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)","nodes":[{"pos":[4,435],"embed":true,"restype":"x-metadata","content":"title: \"Walkthrough: Hosting WPF Content in Win32 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"hosting WPF content in Win32 window\"\nms.assetid: 38ce284a-4303-46dd-b699-c9365b22a7dc\ncaps.latest.revision: 24\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"Walkthrough: Hosting WPF Content in Win32 | Microsoft Docs","nodes":[{"pos":[0,58],"content":"Walkthrough: Hosting WPF Content in Win32 | Microsoft Docs","nodes":[{"content":"Walkthrough: Hosting WPF Content in Win32 | Microsoft Docs","pos":[0,58]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[442,483],"content":"Walkthrough: Hosting WPF Content in Win32","linkify":"Walkthrough: Hosting WPF Content in Win32","nodes":[{"content":"Walkthrough: Hosting WPF Content in Win32","pos":[0,41]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> provides a rich environment for creating applications.","pos":[484,618],"source":"[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] provides a rich environment for creating applications."},{"content":"However, when you have a substantial investment in              <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> code, it might be more effective to add              <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> functionality to your application rather than rewriting your original code.","pos":[619,965],"source":" However, when you have a substantial investment in              [!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)] code, it might be more effective to add              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] functionality to your application rather than rewriting your original code."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides a straightforward mechanism for hosting              <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content in a              <ph id=\"ph3\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> window.","pos":[979,1312],"source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] provides a straightforward mechanism for hosting              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a              [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window."},{"content":"This tutorial describes how to write a sample application,              <bpt id=\"p1\">[</bpt>Hosting WPF Content in a Win32 Window Sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=160004)</ept>, that hosts              <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content in a              <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> window.","pos":[1319,1699],"source":"This tutorial describes how to write a sample application,              [Hosting WPF Content in a Win32 Window Sample](http://go.microsoft.com/fwlink/?LinkID=160004), that hosts              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a              [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window."},{"content":"You can extend this sample to host any              <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> window.","pos":[1700,1833],"source":" You can extend this sample to host any              [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window."},{"content":"Because it involves mixing managed and unmanaged code, the application is written in              <ph id=\"ph1\">[!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]</ph>.","pos":[1834,2006],"source":" Because it involves mixing managed and unmanaged code, the application is written in              [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]."},{"pos":[2051,2063],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"This tutorial assumes a basic familiarity with both                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> and                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> programming.","pos":[2067,2325],"source":"This tutorial assumes a basic familiarity with both                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] and                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] programming."},{"content":"For a basic introduction to                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> programming, see                  <bpt id=\"p1\">[</bpt>Getting Started<ept id=\"p1\">](../../../../docs/framework/wpf/getting-started/index.md)</ept>.","pos":[2326,2562],"source":" For a basic introduction to                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] programming, see                  [Getting Started](../../../../docs/framework/wpf/getting-started/index.md)."},{"content":"For an introduction to                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> programming, you should reference any of the numerous books on the subject, in particular                  <bpt id=\"p1\">*</bpt>Programming Windows<ept id=\"p1\">*</ept> by Charles Petzold.","pos":[2563,2825],"source":" For an introduction to                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] programming, you should reference any of the numerous books on the subject, in particular                  *Programming Windows* by Charles Petzold."},{"content":"Because the sample that accompanies this tutorial is implemented in                  <ph id=\"ph1\">[!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]</ph>, this tutorial assumes familiarity with the use of                  <ph id=\"ph2\">[!INCLUDE[TLA#tla_cpp](../../../../includes/tlasharptla-cpp-md.md)]</ph> to program the                  <ph id=\"ph3\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph><ph id=\"ph4\">[!INCLUDE[TLA2#tla_api](../../../../includes/tla2sharptla-api-md.md)]</ph> plus an understanding of managed code programming.","pos":[2832,3352],"source":"Because the sample that accompanies this tutorial is implemented in                  [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)], this tutorial assumes familiarity with the use of                  [!INCLUDE[TLA#tla_cpp](../../../../includes/tlasharptla-cpp-md.md)] to program the                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)][!INCLUDE[TLA2#tla_api](../../../../includes/tla2sharptla-api-md.md)] plus an understanding of managed code programming."},{"content":"Familiarity with                  <ph id=\"ph1\">[!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]</ph> is helpful but not essential.","pos":[3353,3490],"source":" Familiarity with                  [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)] is helpful but not essential."},{"pos":[3498,3807],"content":"[!NOTE]\n This tutorial includes a number of code examples from the associated sample. However, for readability, it does not include the complete sample code. For the complete sample code, see                      [Hosting WPF Content in a Win32 Window Sample](http://go.microsoft.com/fwlink/?LinkID=160004).","leadings":["","> "],"nodes":[{"content":"This tutorial includes a number of code examples from the associated sample. However, for readability, it does not include the complete sample code. For the complete sample code, see                      [Hosting WPF Content in a Win32 Window Sample](http://go.microsoft.com/fwlink/?LinkID=160004).","pos":[9,307],"nodes":[{"content":"This tutorial includes a number of code examples from the associated sample.","pos":[0,76]},{"content":"However, for readability, it does not include the complete sample code.","pos":[77,148]},{"content":"For the complete sample code, see                      <bpt id=\"p1\">[</bpt>Hosting WPF Content in a Win32 Window Sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=160004)</ept>.","pos":[149,298],"source":" For the complete sample code, see                      [Hosting WPF Content in a Win32 Window Sample](http://go.microsoft.com/fwlink/?LinkID=160004)."}]}]},{"pos":[3850,3869],"content":"The Basic Procedure","linkify":"The Basic Procedure","nodes":[{"content":"The Basic Procedure","pos":[0,19]}]},{"content":"This section outlines the basic procedure you use to host                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content in a                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> window.","pos":[3873,4141],"source":"This section outlines the basic procedure you use to host                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window."},{"content":"The remaining sections explain the details of each step.","pos":[4142,4198]},{"content":"The key to hosting                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content on a                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> window is the                  <ph id=\"ph3\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> class.","pos":[4205,4505],"source":"The key to hosting                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content on a                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window is the                  <xref:System.Windows.Interop.HwndSource> class."},{"content":"This class wraps the                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content in a                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> window, allowing it to be incorporated into your                  <ph id=\"ph3\">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph> as a child window.","pos":[4506,4880],"source":" This class wraps the                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window, allowing it to be incorporated into your                  [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)] as a child window."},{"content":"The following approach combines the                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> and                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> in a single application.","pos":[4881,5135],"source":" The following approach combines the                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] and                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] in a single application."},{"pos":[5145,5294],"content":"Implement your                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content as a managed class.","source":"Implement your                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content as a managed class."},{"content":"Implement a                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> application with                          <ph id=\"ph2\">[!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]</ph>.","pos":[5304,5531],"source":"Implement a                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application with                          [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]."},{"content":"If you are starting with an existing application and unmanaged                          <ph id=\"ph1\">[!INCLUDE[TLA#tla_cpp](../../../../includes/tlasharptla-cpp-md.md)]</ph> code, you can usually enable it to call managed code by changing your project settings to include the                          <ph id=\"ph2\">`/clr`</ph> compiler flag.","pos":[5532,5836],"source":" If you are starting with an existing application and unmanaged                          [!INCLUDE[TLA#tla_cpp](../../../../includes/tlasharptla-cpp-md.md)] code, you can usually enable it to call managed code by changing your project settings to include the                          `/clr` compiler flag."},{"content":"Set the threading model to single-threaded apartment (STA).","pos":[5846,5905]},{"pos":[5915,6070],"content":"Handle the                          <bpt id=\"p1\">[</bpt>WM_CREATE<ept id=\"p1\">](http://msdn.microsoft.com/library/ms632619.aspx)</ept>notification in your window procedure and do the following:","source":"Handle the                          [WM_CREATE](http://msdn.microsoft.com/library/ms632619.aspx)notification in your window procedure and do the following:"},{"pos":[6084,6260],"content":"Create a new                                  <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object with the parent window as its                                  <ph id=\"ph2\">`parent`</ph> parameter.","source":"Create a new                                  <xref:System.Windows.Interop.HwndSource> object with the parent window as its                                  `parent` parameter."},{"pos":[6274,6430],"content":"Create an instance of your                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content class.","source":"Create an instance of your                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content class."},{"pos":[6444,6785],"content":"Assign a reference to the                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content object to the                                  <ph id=\"ph2\">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph> property of the                                  <ph id=\"ph3\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>.","source":"Assign a reference to the                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content object to the                                  <xref:System.Windows.Interop.HwndSource.RootVisual%2A> property of the                                  <xref:System.Windows.Interop.HwndSource>."},{"content":"Get the HWND for the content.","pos":[6799,6828]},{"content":"The                                  <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource.Handle%2A&gt;</ph> property of the                                  <ph id=\"ph2\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object contains the window handle (HWND).","pos":[6829,7048],"source":" The                                  <xref:System.Windows.Interop.HwndSource.Handle%2A> property of the                                  <xref:System.Windows.Interop.HwndSource> object contains the window handle (HWND)."},{"content":"To get an HWND that you can use in the unmanaged part of your application, cast                                  <ph id=\"ph1\">`Handle.ToPointer()`</ph> to an HWND.","pos":[7049,7194],"source":" To get an HWND that you can use in the unmanaged part of your application, cast                                  `Handle.ToPointer()` to an HWND."},{"content":"Implement a managed class that contains a static field to hold a reference to your                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[7204,7402],"source":"Implement a managed class that contains a static field to hold a reference to your                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"content":"This class allows you to get a reference to the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content from your                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> code.","pos":[7403,7680],"source":" This class allows you to get a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content from your                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] code."},{"pos":[7690,7836],"content":"Assign the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content to the static field.","source":"Assign the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content to the static field."},{"pos":[7846,8151],"content":"Receive notifications from the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content by attaching a handler to one or more of the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> events.","source":"Receive notifications from the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content by attaching a handler to one or more of the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] events."},{"pos":[8161,8385],"content":"Communicate with the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content by using the reference that you stored in the static field to set properties, and so on.","source":"Communicate with the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content by using the reference that you stored in the static field to set properties, and so on."},{"pos":[8393,9077],"content":"[!NOTE]\n You can also use                      [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] to implement your                      [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. However, you will have to compile it separately as a                      [!INCLUDE[TLA#tla_dll](../../../../includes/tlasharptla-dll-md.md)] and reference that                      [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)] from your                      [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application. The remainder of the procedure is similar to that outlined above.","leadings":["","> "],"nodes":[{"content":"You can also use                      [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] to implement your                      [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content. However, you will have to compile it separately as a                      [!INCLUDE[TLA#tla_dll](../../../../includes/tlasharptla-dll-md.md)] and reference that                      [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)] from your                      [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application. The remainder of the procedure is similar to that outlined above.","pos":[9,682],"nodes":[{"content":"You can also use                      <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> to implement your                      <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[0,237],"source":"You can also use                      [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] to implement your                      [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"content":"However, you will have to compile it separately as a                      <ph id=\"ph1\">[!INCLUDE[TLA#tla_dll](../../../../includes/tlasharptla-dll-md.md)]</ph> and reference that                      <ph id=\"ph2\">[!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)]</ph> from your                      <ph id=\"ph3\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> application.","pos":[238,607],"source":" However, you will have to compile it separately as a                      [!INCLUDE[TLA#tla_dll](../../../../includes/tlasharptla-dll-md.md)] and reference that                      [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)] from your                      [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application."},{"content":"The remainder of the procedure is similar to that outlined above.","pos":[608,673]}]}]},{"pos":[9133,9166],"content":"Implementing the Host Application","linkify":"Implementing the Host Application","nodes":[{"content":"Implementing the Host Application","pos":[0,33]}]},{"content":"This section describes how to host                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content in a basic                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> application.","pos":[9170,9426],"source":"This section describes how to host                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in a basic                  [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application."},{"content":"The content itself is implemented in                  <ph id=\"ph1\">[!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]</ph> as a managed class.","pos":[9427,9574],"source":" The content itself is implemented in                  [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)] as a managed class."},{"content":"For the most part, it is straightforward                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> programming.","pos":[9575,9727],"source":" For the most part, it is straightforward                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] programming."},{"content":"The key aspects of the content implementation are discussed in                  <bpt id=\"p1\">[</bpt>Implementing the WPF Content<ept id=\"p1\">](#implementing_the_wpf_page)</ept>.","pos":[9728,9867],"source":" The key aspects of the content implementation are discussed in                  [Implementing the WPF Content](#implementing_the_wpf_page)."},{"pos":[9922,9969],"content":"<bpt id=\"p1\">[</bpt>The Basic Application<ept id=\"p1\">](#the_basic_application)</ept>","source":"[The Basic Application](#the_basic_application)"},{"pos":[9979,10027],"content":"<bpt id=\"p1\">[</bpt>Hosting the WPF Content<ept id=\"p1\">](#hosting_the_wpf_page)</ept>","source":"[Hosting the WPF Content](#hosting_the_wpf_page)"},{"pos":[10037,10099],"content":"<bpt id=\"p1\">[</bpt>Holding a Reference to the WPF Content<ept id=\"p1\">](#holding_a_reference)</ept>","source":"[Holding a Reference to the WPF Content](#holding_a_reference)"},{"pos":[10109,10175],"content":"<bpt id=\"p1\">[</bpt>Communicating with the WPF Content<ept id=\"p1\">](#communicating_with_the_page)</ept>","source":"[Communicating with the WPF Content](#communicating_with_the_page)"},{"pos":[10225,10246],"content":"The Basic Application","linkify":"The Basic Application","nodes":[{"content":"The Basic Application","pos":[0,21]}]},{"pos":[10250,10432],"content":"The starting point for the host application was to create a                          <ph id=\"ph1\">[!INCLUDE[TLA#tla_visualstu2005](../../../../includes/tlasharptla-visualstu2005-md.md)]</ph> template.","source":"The starting point for the host application was to create a                          [!INCLUDE[TLA#tla_visualstu2005](../../../../includes/tlasharptla-visualstu2005-md.md)] template."},{"pos":[10442,10687],"content":"Open                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_visualstu2005](../../../../includes/tla2sharptla-visualstu2005-md.md)]</ph>, and select                                  <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> from the                                  <bpt id=\"p2\">**</bpt>File<ept id=\"p2\">**</ept> menu.","source":"Open                                  [!INCLUDE[TLA2#tla_visualstu2005](../../../../includes/tla2sharptla-visualstu2005-md.md)], and select                                  **New Project** from the                                  **File** menu."},{"content":"Select                                  <bpt id=\"p1\">**</bpt>Win32<ept id=\"p1\">**</ept> from the list of                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_visualcpp](../../../../includes/tla2sharptla-visualcpp-md.md)]</ph> project types.","pos":[10697,10893],"source":"Select                                  **Win32** from the list of                                  [!INCLUDE[TLA2#tla_visualcpp](../../../../includes/tla2sharptla-visualcpp-md.md)] project types."},{"content":"If your default language is not                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_cpp](../../../../includes/tla2sharptla-cpp-md.md)]</ph>, you will find these project types under                                  <bpt id=\"p1\">**</bpt>Other Languages<ept id=\"p1\">**</ept>.","pos":[10894,11123],"source":" If your default language is not                                  [!INCLUDE[TLA2#tla_cpp](../../../../includes/tla2sharptla-cpp-md.md)], you will find these project types under                                  **Other Languages**."},{"pos":[11133,11358],"content":"Select a                                  <bpt id=\"p1\">**</bpt>Win32 Project<ept id=\"p1\">**</ept> template, assign a name to the project and click                                  <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept> to launch the                                  <bpt id=\"p3\">**</bpt>Win32 Application Wizard<ept id=\"p3\">**</ept>.","source":"Select a                                  **Win32 Project** template, assign a name to the project and click                                  **OK** to launch the                                  **Win32 Application Wizard**."},{"pos":[11368,11480],"content":"Accept the wizard's default settings and click                                  <bpt id=\"p1\">**</bpt>Finish<ept id=\"p1\">**</ept> to start the project.","source":"Accept the wizard's default settings and click                                  **Finish** to start the project."},{"pos":[11487,11638],"content":"The template creates a basic                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> application, including:","source":"The template creates a basic                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] application, including:"},{"content":"An entry point for the application.","pos":[11648,11683]},{"content":"A window, with an associated window procedure (WndProc).","pos":[11693,11749]},{"content":"A menu with                                  <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> and                                  <bpt id=\"p2\">**</bpt>Help<ept id=\"p2\">**</ept> headings.","pos":[11759,11868],"source":"A menu with                                  **File** and                                  **Help** headings."},{"content":"The                                  <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu has an                                  <bpt id=\"p2\">**</bpt>Exit<ept id=\"p2\">**</ept> item that closes the application.","pos":[11869,12002],"source":" The                                  **File** menu has an                                  **Exit** item that closes the application."},{"content":"The                                  <bpt id=\"p1\">**</bpt>Help<ept id=\"p1\">**</ept> menu has an                                  <bpt id=\"p2\">**</bpt>About<ept id=\"p2\">**</ept> item that launches a simple dialog box.","pos":[12003,12143],"source":" The                                  **Help** menu has an                                  **About** item that launches a simple dialog box."},{"pos":[12150,12365],"content":"Before you start writing code to host the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content, you need to make two modifications to the basic template.","source":"Before you start writing code to host the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content, you need to make two modifications to the basic template."},{"content":"The first is to compile the project as managed code.","pos":[12372,12424]},{"content":"By default, the project compiles as unmanaged code.","pos":[12425,12476]},{"content":"However, because                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> is implemented in managed code, the project must be compiled accordingly.","pos":[12477,12674],"source":" However, because                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] is implemented in managed code, the project must be compiled accordingly."},{"pos":[12684,12929],"content":"Right-click the project name in                                  <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and select                                  <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> from the context menu to launch the                                  <bpt id=\"p3\">**</bpt>Property Pages<ept id=\"p3\">**</ept> dialog box.","source":"Right-click the project name in                                  **Solution Explorer** and select                                  **Properties** from the context menu to launch the                                  **Property Pages** dialog box."},{"pos":[12939,13044],"content":"Select                                  <bpt id=\"p1\">**</bpt>Configuration Properties<ept id=\"p1\">**</ept> from the tree view in the left pane.","source":"Select                                  **Configuration Properties** from the tree view in the left pane."},{"pos":[13054,13216],"content":"Select                                  <bpt id=\"p1\">**</bpt>Common Language Runtime<ept id=\"p1\">**</ept> support from the                                  <bpt id=\"p2\">**</bpt>Project Defaults<ept id=\"p2\">**</ept> list in the right pane.","source":"Select                                  **Common Language Runtime** support from the                                  **Project Defaults** list in the right pane."},{"pos":[13226,13337],"content":"Select                                  <bpt id=\"p1\">**</bpt>Common Language Runtime Support (/clr)<ept id=\"p1\">**</ept> from the drop-down list box.","source":"Select                                  **Common Language Runtime Support (/clr)** from the drop-down list box."},{"pos":[13345,13480],"content":"[!NOTE]\n This compiler flag allows you to use managed code in your application, but your unmanaged code will still compile as before.","leadings":["","> "],"nodes":[{"content":"This compiler flag allows you to use managed code in your application, but your unmanaged code will still compile as before.","pos":[9,133]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> uses the single-threaded apartment (STA) threading model.","pos":[13487,13626],"source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] uses the single-threaded apartment (STA) threading model."},{"content":"In order to work properly with the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content code, you must set the application's threading model to STA by applying an attribute to the entry point.","pos":[13627,13881],"source":" In order to work properly with the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content code, you must set the application's threading model to STA by applying an attribute to the entry point."},{"pos":[14083,14106],"content":"Hosting the WPF Content","linkify":"Hosting the WPF Content","nodes":[{"content":"Hosting the WPF Content","pos":[0,23]}]},{"content":"The                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content is a simple address entry application.","pos":[14110,14267],"source":"The                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content is a simple address entry application."},{"content":"It consists of several                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls to take user name, address, and so on.","pos":[14268,14402],"source":" It consists of several                          <xref:System.Windows.Controls.TextBox> controls to take user name, address, and so on."},{"content":"There are also two                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> controls,                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> and                          <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept>.","pos":[14403,14567],"source":" There are also two                          <xref:System.Windows.Controls.Button> controls,                          **OK** and                          **Cancel**."},{"content":"When the user clicks                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>, the button's                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler collects the data from the                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, assigns it to corresponding properties, and raises a custom event,                          <ph id=\"ph3\">`OnButtonClicked`</ph>.","pos":[14568,14944],"source":" When the user clicks                          **OK**, the button's                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler collects the data from the                          <xref:System.Windows.Controls.TextBox> controls, assigns it to corresponding properties, and raises a custom event,                          `OnButtonClicked`."},{"content":"When the user clicks                          <bpt id=\"p1\">**</bpt>Cancel<ept id=\"p1\">**</ept>, the handler simply raises                          <ph id=\"ph1\">`OnButtonClicked`</ph>.","pos":[14945,15072],"source":" When the user clicks                          **Cancel**, the handler simply raises                          `OnButtonClicked`."},{"content":"The event argument object for                          <ph id=\"ph1\">`OnButtonClicked`</ph> contains a Boolean field that indicates which button was clicked.","pos":[15073,15211],"source":" The event argument object for                          `OnButtonClicked` contains a Boolean field that indicates which button was clicked."},{"pos":[15218,15508],"content":"The code to host the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content is implemented in a handler for the                          <bpt id=\"p1\">[</bpt>WM_CREATE<ept id=\"p1\">](http://msdn.microsoft.com/library/ms632619.aspx)</ept> notification on the host window.","source":"The code to host the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content is implemented in a handler for the                          [WM_CREATE](http://msdn.microsoft.com/library/ms632619.aspx) notification on the host window."},{"pos":[15670,15941],"content":"The                          <ph id=\"ph1\">`GetHwnd`</ph> method takes size and position information plus the parent window handle and returns the window handle of the hosted                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","source":"The                          `GetHwnd` method takes size and position information plus the parent window handle and returns the window handle of the hosted                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"pos":[15949,16366],"content":"[!NOTE]\n You cannot use a                              `#using` directive for the                              `System::Windows::Interop` namespace. Doing so creates a name collision between the                              <xref:System.Windows.Interop.MSG> structure in that namespace and the MSG structure declared in winuser.h. You must instead use fully-qualified names to access the contents of that namespace.","leadings":["","> "],"nodes":[{"content":"You cannot use a                              `#using` directive for the                              `System::Windows::Interop` namespace. Doing so creates a name collision between the                              <xref:System.Windows.Interop.MSG> structure in that namespace and the MSG structure declared in winuser.h. You must instead use fully-qualified names to access the contents of that namespace.","pos":[9,415],"nodes":[{"content":"You cannot use a                              <ph id=\"ph1\">`#using`</ph> directive for the                              <ph id=\"ph2\">`System::Windows::Interop`</ph> namespace.","pos":[0,139],"source":"You cannot use a                              `#using` directive for the                              `System::Windows::Interop` namespace."},{"content":"Doing so creates a name collision between the                              <ph id=\"ph1\">&lt;xref:System.Windows.Interop.MSG&gt;</ph> structure in that namespace and the MSG structure declared in winuser.h.","pos":[140,321],"source":" Doing so creates a name collision between the                              <xref:System.Windows.Interop.MSG> structure in that namespace and the MSG structure declared in winuser.h."},{"content":"You must instead use fully-qualified names to access the contents of that namespace.","pos":[322,406]}]}]},{"content":"You cannot host the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content directly in your application window.","pos":[16526,16697],"source":"You cannot host the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content directly in your application window."},{"content":"Instead, you first create an                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object to wrap the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[16698,16927],"source":" Instead, you first create an                          <xref:System.Windows.Interop.HwndSource> object to wrap the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"content":"This object is basically a window that is designed to host a                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[16928,17104],"source":" This object is basically a window that is designed to host a                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"content":"You host the                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object in the parent window by creating it as a child of a                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> window that is part of your application.","pos":[17105,17382],"source":" You host the                          <xref:System.Windows.Interop.HwndSource> object in the parent window by creating it as a child of a                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] window that is part of your application."},{"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> constructor parameters contain much the same information that you would pass to CreateWindow when you create a                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> child window.","pos":[17383,17676],"source":" The                          <xref:System.Windows.Interop.HwndSource> constructor parameters contain much the same information that you would pass to CreateWindow when you create a                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] child window."},{"content":"You next create an instance of the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content object.","pos":[17683,17840],"source":"You next create an instance of the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content object."},{"content":"In this case, the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content is implemented as a separate class,                          <ph id=\"ph2\">`WPFPage`</ph>, using                          <ph id=\"ph3\">[!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]</ph>.","pos":[17841,18151],"source":" In this case, the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content is implemented as a separate class,                          `WPFPage`, using                          [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]."},{"content":"You could also implement the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content with                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[18152,18398],"source":" You could also implement the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content with                          [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]."},{"content":"However, to do so you need to set up a separate project and build the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content as a                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)]</ph>.","pos":[18399,18684],"source":" However, to do so you need to set up a separate project and build the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content as a                          [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)]."},{"content":"You can add a reference to that                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)]</ph> to your project, and use that reference to create an instance of the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[18685,18996],"source":" You can add a reference to that                          [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)] to your project, and use that reference to create an instance of the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"pos":[19003,19473],"content":"You display the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content in your child window by assigning a reference to the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content to the                          <ph id=\"ph3\">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph> property of the                            <ph id=\"ph4\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>.","source":"You display the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content in your child window by assigning a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content to the                          <xref:System.Windows.Interop.HwndSource.RootVisual%2A> property of the                            <xref:System.Windows.Interop.HwndSource>."},{"content":"The next line of code attaches an event handler,                          <ph id=\"ph1\">`WPFButtonClicked`</ph>, to the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content                          <ph id=\"ph3\">`OnButtonClicked`</ph> event.","pos":[19480,19745],"source":"The next line of code attaches an event handler,                          `WPFButtonClicked`, to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content                          `OnButtonClicked` event."},{"content":"This handler is called when the user clicks the                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> or                          <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept> button.","pos":[19746,19872],"source":" This handler is called when the user clicks the                          **OK** or                          **Cancel** button."},{"content":"See                          <bpt id=\"p1\">[</bpt>communicating_with_the_WPF content<ept id=\"p1\">](#communicating_with_the_page)</ept> for further discussion of this event handler.","pos":[19873,20014],"source":" See                          [communicating_with_the_WPF content](#communicating_with_the_page) for further discussion of this event handler."},{"content":"The final line of code shown returns the window handle (HWND) that is associated with the                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object.","pos":[20021,20184],"source":"The final line of code shown returns the window handle (HWND) that is associated with the                          <xref:System.Windows.Interop.HwndSource> object."},{"content":"You can use this handle from your                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> code to send messages to the hosted window, although the sample does not do so.","pos":[20185,20397],"source":" You can use this handle from your                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] code to send messages to the hosted window, although the sample does not do so."},{"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object raises an event every time it receives a message.","pos":[20398,20524],"source":" The                          <xref:System.Windows.Interop.HwndSource> object raises an event every time it receives a message."},{"content":"To process the messages, call the                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph> method to attach a message handler and then process the messages in that handler.","pos":[20525,20717],"source":" To process the messages, call the                          <xref:System.Windows.Interop.HwndSource.AddHook%2A> method to attach a message handler and then process the messages in that handler."},{"pos":[20765,20803],"content":"Holding a Reference to the WPF Content","linkify":"Holding a Reference to the WPF Content","nodes":[{"content":"Holding a Reference to the WPF Content","pos":[0,38]}]},{"content":"For many applications, you will want to communicate with the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content later.","pos":[20807,20989],"source":"For many applications, you will want to communicate with the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content later."},{"content":"For example, you might want to modify the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content properties, or perhaps have the                          <ph id=\"ph2\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object host different                          <ph id=\"ph3\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[20990,21382],"source":" For example, you might want to modify the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content properties, or perhaps have the                          <xref:System.Windows.Interop.HwndSource> object host different                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"content":"To do this, you need a reference to the                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object or the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[21383,21618],"source":" To do this, you need a reference to the                          <xref:System.Windows.Interop.HwndSource> object or the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object and its associated                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content remain in memory until you destroy the window handle.","pos":[21619,21883],"source":" The                          <xref:System.Windows.Interop.HwndSource> object and its associated                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content remain in memory until you destroy the window handle."},{"content":"However, the variable you assign to the                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object will go out of scope as soon as you return from the window procedure.","pos":[21884,22066],"source":" However, the variable you assign to the                          <xref:System.Windows.Interop.HwndSource> object will go out of scope as soon as you return from the window procedure."},{"content":"The customary way to handle this issue with                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> applications is to use a static or global variable.","pos":[22067,22261],"source":" The customary way to handle this issue with                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] applications is to use a static or global variable."},{"content":"Unfortunately, you cannot assign a managed object to those types of variables.","pos":[22262,22340]},{"content":"You can assign the window handle associated with                          <ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object to a global or static variable, but that doe not provide access to the object itself.","pos":[22341,22548],"source":" You can assign the window handle associated with                          <xref:System.Windows.Interop.HwndSource> object to a global or static variable, but that doe not provide access to the object itself."},{"content":"The simplest solution to this issue is to implement a managed class that contains a set of static fields to hold references to any managed objects that you need access to.","pos":[22555,22726]},{"content":"The sample uses the                          <ph id=\"ph1\">`WPFPageHost`</ph> class to hold a reference to the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content, plus the initial values of a number of its properties that might be changed later by the user.","pos":[22727,23029],"source":" The sample uses the                          `WPFPageHost` class to hold a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content, plus the initial values of a number of its properties that might be changed later by the user."},{"content":"This is defined in the header.","pos":[23030,23060]},{"pos":[23226,23396],"content":"The latter part of the                          <ph id=\"ph1\">`GetHwnd`</ph> function assigns values to those fields for later use while                          <ph id=\"ph2\">`myPage`</ph> is still in scope.","source":"The latter part of the                          `GetHwnd` function assigns values to those fields for later use while                          `myPage` is still in scope."},{"pos":[23452,23486],"content":"Communicating with the WPF Content","linkify":"Communicating with the WPF Content","nodes":[{"content":"Communicating with the WPF Content","pos":[0,34]}]},{"content":"There are two types of communication with the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[23490,23651],"source":"There are two types of communication with the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"content":"The application receives information from the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content when the user clicks the                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> or                          <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept> buttons.","pos":[23652,23917],"source":" The application receives information from the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content when the user clicks the                          **OK** or                          **Cancel** buttons."},{"content":"The application also has a                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that allows the user to change various                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content properties, such as the background color or default font size.","pos":[23918,24254],"source":" The application also has a                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that allows the user to change various                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content properties, such as the background color or default font size."},{"content":"As mentioned above, when the user clicks either button the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content raises an                          <ph id=\"ph2\">`OnButtonClicked`</ph> event.","pos":[24261,24494],"source":"As mentioned above, when the user clicks either button the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content raises an                          `OnButtonClicked` event."},{"content":"The application attaches a handler to this event to receive these notifications.","pos":[24495,24575]},{"content":"If the                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button was clicked, the handler gets the user information from the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content and displays it in a set of static controls.","pos":[24576,24841],"source":" If the                          **OK** button was clicked, the handler gets the user information from the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content and displays it in a set of static controls."},{"content":"The handler receives a custom event argument object from the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content,                          <ph id=\"ph2\">`MyPageEventArgs`</ph>.","pos":[25019,25239],"source":"The handler receives a custom event argument object from the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content,                          `MyPageEventArgs`."},{"content":"The object's                          <ph id=\"ph1\">`IsOK`</ph> property is set to                          <ph id=\"ph2\">`true`</ph> if the                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button was clicked, and                          <ph id=\"ph3\">`false`</ph> if the                          <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept> button was clicked.","pos":[25240,25494],"source":" The object's                          `IsOK` property is set to                          `true` if the                          **OK** button was clicked, and                          `false` if the                          **Cancel** button was clicked."},{"content":"If the                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button was clicked, the handler gets a reference to the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content from the container class.","pos":[25501,25736],"source":"If the                          **OK** button was clicked, the handler gets a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content from the container class."},{"content":"It then collects the user information that is held by the associated                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content properties and uses the static controls to display the information on the parent window.","pos":[25737,26009],"source":" It then collects the user information that is held by the associated                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content properties and uses the static controls to display the information on the parent window."},{"content":"Because the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content data is in the form of a managed string, it has to be marshaled for use by a                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> control.","pos":[26010,26321],"source":" Because the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content data is in the form of a managed string, it has to be marshaled for use by a                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] control."},{"content":"If the                          <bpt id=\"p1\">**</bpt>Cancel<ept id=\"p1\">**</ept> button was clicked, the handler clears the data from the static controls.","pos":[26322,26438],"source":" If the                          **Cancel** button was clicked, the handler clears the data from the static controls."},{"content":"The application                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> provides a set of radio buttons that allow the user to modify the background color of the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content, and several font-related properties.","pos":[26445,26796],"source":"The application                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] provides a set of radio buttons that allow the user to modify the background color of the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content, and several font-related properties."},{"content":"The following example is an excerpt from the application's window procedure (WndProc) and its message handling that sets various properties on different messages, including the background color.","pos":[26797,26991]},{"content":"The others are similar, and are not shown.","pos":[26992,27034]},{"content":"See the complete sample for details and context.","pos":[27035,27083]},{"content":"To set the background color, get a reference to the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content (                         <ph id=\"ph2\">`hostedPage`</ph>) from                          <ph id=\"ph3\">`WPFPageHost`</ph> and set the background color property to the appropriate color.","pos":[27255,27569],"source":"To set the background color, get a reference to the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content (                         `hostedPage`) from                          `WPFPageHost` and set the background color property to the appropriate color."},{"content":"The sample uses three color options: the original color, light green, or light salmon.","pos":[27570,27656]},{"content":"The original background color is stored as a static field in the                          <ph id=\"ph1\">`WPFPageHost`</ph> class.","pos":[27657,27767],"source":" The original background color is stored as a static field in the                          `WPFPageHost` class."},{"content":"To set the other two, you create a new                          <ph id=\"ph1\">&lt;xref:System.Windows.Media.SolidColorBrush&gt;</ph> object and pass the constructor a static colors value from the                          <ph id=\"ph2\">&lt;xref:System.Windows.Media.Colors&gt;</ph> object.","pos":[27768,28006],"source":" To set the other two, you create a new                          <xref:System.Windows.Media.SolidColorBrush> object and pass the constructor a static colors value from the                          <xref:System.Windows.Media.Colors> object."},{"pos":[28059,28084],"content":"Implementing the WPF Page","linkify":"Implementing the WPF Page","nodes":[{"content":"Implementing the WPF Page","pos":[0,25]}]},{"content":"You can host and use the                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content without any knowledge of the actual implementation.","pos":[28088,28271],"source":"You can host and use the                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content without any knowledge of the actual implementation."},{"content":"If the                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content had been packaged in a separate                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)]</ph>, it could have been built in any                  <ph id=\"ph3\">[!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)]</ph> language.","pos":[28272,28632],"source":" If the                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content had been packaged in a separate                  [!INCLUDE[TLA2#tla_dll](../../../../includes/tla2sharptla-dll-md.md)], it could have been built in any                  [!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)] language."},{"content":"Following is a brief walkthrough of the                  <ph id=\"ph1\">[!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)]</ph> implementation that is used in the sample.","pos":[28633,28806],"source":" Following is a brief walkthrough of the                  [!INCLUDE[TLA#tla_cppcli](../../../../includes/tlasharptla-cppcli-md.md)] implementation that is used in the sample."},{"content":"This section contains the following subsections.","pos":[28807,28855]},{"pos":[28910,28932],"content":"<bpt id=\"p1\">[</bpt>Layout<ept id=\"p1\">](#page_layout)</ept>","source":"[Layout](#page_layout)"},{"pos":[28942,29008],"content":"<bpt id=\"p1\">[</bpt>Returning the Data to the Host Window<ept id=\"p1\">](#returning_data_to_window)</ept>","source":"[Returning the Data to the Host Window](#returning_data_to_window)"},{"pos":[29018,29068],"content":"<bpt id=\"p1\">[</bpt>Setting the WPF Properties<ept id=\"p1\">](#set_page_properties)</ept>","source":"[Setting the WPF Properties](#set_page_properties)"},{"pos":[29108,29114],"content":"Layout","linkify":"Layout","nodes":[{"content":"Layout","pos":[0,6]}]},{"content":"The                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> elements in the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content consist of five                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, with associated                          <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Label&gt;</ph> controls: Name, Address, City, State, and Zip.","pos":[29118,29560],"source":"The                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] elements in the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content consist of five                          <xref:System.Windows.Controls.TextBox> controls, with associated                          <xref:System.Windows.Controls.Label> controls: Name, Address, City, State, and Zip."},{"content":"There are also two                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> controls,                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> and                          <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept>","pos":[29561,29724],"source":" There are also two                          <xref:System.Windows.Controls.Button> controls,                          **OK** and                          **Cancel**"},{"content":"The                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content is implemented in the                          <ph id=\"ph2\">`WPFPage`</ph> class.","pos":[29731,29913],"source":"The                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content is implemented in the                          `WPFPage` class."},{"content":"Layout is handled with a                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> layout element.","pos":[29914,30015],"source":" Layout is handled with a                          <xref:System.Windows.Controls.Grid> layout element."},{"content":"The class inherits from                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>, which effectively makes it the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content root element.","pos":[30016,30261],"source":" The class inherits from                          <xref:System.Windows.Controls.Grid>, which effectively makes it the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content root element."},{"content":"The                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content constructor takes the required width and height, and sizes the                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> accordingly.","pos":[30268,30523],"source":"The                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content constructor takes the required width and height, and sizes the                          <xref:System.Windows.Controls.Grid> accordingly."},{"content":"It then defines the basic layout by creating a set of                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ColumnDefinition&gt;</ph> and                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.RowDefinition&gt;</ph> objects and adding them to the                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> object base                          <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Grid.ColumnDefinitions%2A&gt;</ph> and                          <ph id=\"ph5\">&lt;xref:System.Windows.Controls.Grid.RowDefinitions%2A&gt;</ph> collections, respectively.","pos":[30524,31020],"source":" It then defines the basic layout by creating a set of                          <xref:System.Windows.Controls.ColumnDefinition> and                          <xref:System.Windows.Controls.RowDefinition> objects and adding them to the                          <xref:System.Windows.Controls.Grid> object base                          <xref:System.Windows.Controls.Grid.ColumnDefinitions%2A> and                          <xref:System.Windows.Controls.Grid.RowDefinitions%2A> collections, respectively."},{"content":"This defines a grid of five rows and seven columns, with the dimensions determined by the contents of the cells.","pos":[31021,31133]},{"content":"Next, the constructor adds the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> elements to the                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.","pos":[31307,31508],"source":"Next, the constructor adds the                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] elements to the                          <xref:System.Windows.Controls.Grid>."},{"content":"The first element is the title text, which is a                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> control that is centered in the first row of the grid.","pos":[31509,31673],"source":" The first element is the title text, which is a                          <xref:System.Windows.Controls.Label> control that is centered in the first row of the grid."},{"content":"The next row contains the Name                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> control and its associated                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> control.","pos":[31839,32031],"source":"The next row contains the Name                          <xref:System.Windows.Controls.Label> control and its associated                          <xref:System.Windows.Controls.TextBox> control."},{"content":"Because the same code is used for each label/textbox pair, it is placed in a pair of private methods and used for all five label/textbox pairs.","pos":[32032,32175]},{"content":"The methods create the appropriate control, and call the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> class static                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid.SetColumn%2A&gt;</ph> and                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid.SetRow%2A&gt;</ph> methods to place the controls in the appropriate cell.","pos":[32176,32510],"source":" The methods create the appropriate control, and call the                          <xref:System.Windows.Controls.Grid> class static                          <xref:System.Windows.Controls.Grid.SetColumn%2A> and                          <xref:System.Windows.Controls.Grid.SetRow%2A> methods to place the controls in the appropriate cell."},{"content":"After the control is created, the sample calls the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.UIElementCollection.Add%2A&gt;</ph> method on the                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph> property of the                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> to add the control to the grid.","pos":[32511,32841],"source":" After the control is created, the sample calls the                          <xref:System.Windows.Controls.UIElementCollection.Add%2A> method on the                          <xref:System.Windows.Controls.Panel.Children%2A> property of the                          <xref:System.Windows.Controls.Grid> to add the control to the grid."},{"content":"The code to add the remaining label/textbox pairs is similar.","pos":[32842,32903]},{"content":"See the sample code for details.","pos":[32904,32936]},{"content":"The implementation of the two methods is as follows:","pos":[33100,33152]},{"pos":[33326,33565],"content":"Finally, the sample adds the                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> and                          <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept> buttons and attaches an event handler to their                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> events.","source":"Finally, the sample adds the                          **OK** and                          **Cancel** buttons and attaches an event handler to their                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events."},{"pos":[33793,33830],"content":"Returning the Data to the Host Window","linkify":"Returning the Data to the Host Window","nodes":[{"content":"Returning the Data to the Host Window","pos":[0,37]}]},{"content":"When either button is clicked, its                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event is raised.","pos":[33834,33969],"source":"When either button is clicked, its                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is raised."},{"content":"The host window could simply attach handlers to these events and get the data directly from the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls.","pos":[33970,34139],"source":" The host window could simply attach handlers to these events and get the data directly from the                          <xref:System.Windows.Controls.TextBox> controls."},{"content":"The sample uses a somewhat less direct approach.","pos":[34140,34188]},{"content":"It handles the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> within the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content, and then raises a custom event                          <ph id=\"ph3\">`OnButtonClicked`</ph>, to notify the                          <ph id=\"ph4\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content.","pos":[34189,34619],"source":" It handles the                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> within the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content, and then raises a custom event                          `OnButtonClicked`, to notify the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content."},{"content":"This allows the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content to do some parameter validation before notifying the host.","pos":[34620,34809],"source":" This allows the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content to do some parameter validation before notifying the host."},{"content":"The handler gets the text from the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls and assigns it to public properties, from which the host can retrieve the information.","pos":[34810,35004],"source":" The handler gets the text from the                          <xref:System.Windows.Controls.TextBox> controls and assigns it to public properties, from which the host can retrieve the information."},{"content":"The event declaration, in WPFPage.h:","pos":[35011,35047]},{"pos":[35211,35329],"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler, in WPFPage.cpp:","source":"The                          <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler, in WPFPage.cpp:"},{"pos":[35544,35570],"content":"Setting the WPF Properties","linkify":"Setting the WPF Properties","nodes":[{"content":"Setting the WPF Properties","pos":[0,26]}]},{"content":"The                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> host allows the user to change several                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content properties.","pos":[35574,35842],"source":"The                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] host allows the user to change several                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content properties."},{"content":"From the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)]</ph> side, it is simply a matter of changing the properties.","pos":[35843,36006],"source":" From the                          [!INCLUDE[TLA2#tla_win32](../../../../includes/tla2sharptla-win32-md.md)] side, it is simply a matter of changing the properties."},{"content":"The implementation in the                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> content class is somewhat more complicated, because there is no single global property that controls the fonts for all controls.","pos":[36007,36268],"source":" The implementation in the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] content class is somewhat more complicated, because there is no single global property that controls the fonts for all controls."},{"content":"Instead, the appropriate property for each control is changed in the properties' set accessors.","pos":[36269,36364]},{"content":"The following example shows the code for the                          <ph id=\"ph1\">`DefaultFontFamily`</ph> property.","pos":[36365,36464],"source":" The following example shows the code for the                          `DefaultFontFamily` property."},{"content":"Setting the property calls a private method that in turn sets the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control.FontFamily%2A&gt;</ph> properties for the various controls.","pos":[36465,36645],"source":" Setting the property calls a private method that in turn sets the                          <xref:System.Windows.Controls.Control.FontFamily%2A> properties for the various controls."},{"content":"From WPFPage.h:","pos":[36652,36667]},{"content":"From WPFPage.cpp:","pos":[36849,36866]},{"pos":[37042,37050],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>WPF and Win32 Interoperation<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)</ept>","pos":[37099,37202],"source":"[WPF and Win32 Interoperation](../../../../docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)"}]}