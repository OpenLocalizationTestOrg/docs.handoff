{"content":"---\ntitle: \"How to: Change the Namespace for an Entire XML Tree (C#)\"\nms.date: 07/20/2015\nms.assetid: 1584ff3b-c77d-4241-ab62-80adfb7bfc1b\n---\n# How to: Change the Namespace for an Entire XML Tree (C#)\nYou sometimes have to programmatically change the namespace for an element or an attribute. LINQ to XML makes this easy. The <xref:System.Xml.Linq.XElement.Name%2A?displayProperty=nameWithType> property can be set. The <xref:System.Xml.Linq.XAttribute.Name%2A?displayProperty=nameWithType> property cannot be set, but you can easily copy the attributes into a <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, remove the existing attributes, and then add new attributes that are in the new desired namespace.  \n  \n For more information, see [Working with XML Namespaces (C#)](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md).  \n  \n## Example  \n The following code creates two XML trees in no namespace. It then changes the namespace of each of the trees, and combines them into a single tree.  \n  \n```csharp  \nXElement tree1 = new XElement(\"Data\",  \n    new XElement(\"Child\", \"content\",  \n        new XAttribute(\"MyAttr\", \"content\")  \n    )  \n);  \nXElement tree2 = new XElement(\"Data\",  \n    new XElement(\"Child\", \"content\",  \n        new XAttribute(\"MyAttr\", \"content\")  \n    )  \n);  \nXNamespace aw = \"http://www.adventure-works.com\";  \nXNamespace ad = \"http://www.adatum.com\";  \n// change the namespace of every element and attribute in the first tree  \nforeach (XElement el in tree1.DescendantsAndSelf())  \n{  \n    el.Name = aw.GetName(el.Name.LocalName);  \n    List<XAttribute> atList = el.Attributes().ToList();  \n    el.Attributes().Remove();  \n    foreach (XAttribute at in atList)  \n        el.Add(new XAttribute(aw.GetName(at.Name.LocalName), at.Value));  \n}  \n// change the namespace of every element and attribute in the second tree  \nforeach (XElement el in tree2.DescendantsAndSelf())  \n{  \n    el.Name = ad.GetName(el.Name.LocalName);  \n    List<XAttribute> atList = el.Attributes().ToList();  \n    el.Attributes().Remove();  \n    foreach (XAttribute at in atList)  \n        el.Add(new XAttribute(ad.GetName(at.Name.LocalName), at.Value));  \n}  \n// add attribute namespaces so that the tree will be serialized with  \n// the aw and ad namespace prefixes  \ntree1.Add(  \n    new XAttribute(XNamespace.Xmlns + \"aw\", \"http://www.adventure-works.com\")  \n);  \ntree2.Add(  \n    new XAttribute(XNamespace.Xmlns + \"ad\", \"http://www.adatum.com\")  \n);  \n// create a new composite tree  \nXElement root = new XElement(\"Root\",  \n    tree1,  \n    tree2  \n);  \nConsole.WriteLine(root);  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root>  \n  <aw:Data xmlns:aw=\"http://www.adventure-works.com\">  \n    <aw:Child aw:MyAttr=\"content\">content</aw:Child>  \n  </aw:Data>  \n  <ad:Data xmlns:ad=\"http://www.adatum.com\">  \n    <ad:Child ad:MyAttr=\"content\">content</ad:Child>  \n  </ad:Data>  \n</Root>  \n```  \n  \n## See also\n\n- [Modifying XML Trees (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)\n","nodes":[{"pos":[4,138],"embed":true,"restype":"x-metadata","content":"title: \"How to: Change the Namespace for an Entire XML Tree (C#)\"\nms.date: 07/20/2015\nms.assetid: 1584ff3b-c77d-4241-ab62-80adfb7bfc1b","nodes":[{"content":"How to: Change the Namespace for an Entire XML Tree (C#)","nodes":[{"pos":[0,56],"content":"How to: Change the Namespace for an Entire XML Tree (C#)","nodes":[{"content":"How to: Change the Namespace for an Entire XML Tree (C#)","pos":[0,56]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[145,201],"content":"How to: Change the Namespace for an Entire XML Tree (C#)","linkify":"How to: Change the Namespace for an Entire XML Tree (C#)","nodes":[{"content":"How to: Change the Namespace for an Entire XML Tree (C#)","pos":[0,56]}]},{"content":"You sometimes have to programmatically change the namespace for an element or an attribute.","pos":[202,293]},{"content":"LINQ to XML makes this easy.","pos":[294,322]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Name%2A?displayProperty=nameWithType&gt;</ph> property can be set.","pos":[323,416],"source":" The <xref:System.Xml.Linq.XElement.Name%2A?displayProperty=nameWithType> property can be set."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute.Name%2A?displayProperty=nameWithType&gt;</ph> property cannot be set, but you can easily copy the attributes into a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.List%601?displayProperty=nameWithType&gt;</ph>, remove the existing attributes, and then add new attributes that are in the new desired namespace.","pos":[417,733],"source":" The <xref:System.Xml.Linq.XAttribute.Name%2A?displayProperty=nameWithType> property cannot be set, but you can easily copy the attributes into a <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, remove the existing attributes, and then add new attributes that are in the new desired namespace."},{"pos":[740,884],"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with XML Namespaces (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.","source":"For more information, see [Working with XML Namespaces (C#)](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md)."},{"pos":[893,900],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code creates two XML trees in no namespace.","pos":[904,961]},{"content":"It then changes the namespace of each of the trees, and combines them into a single tree.","pos":[962,1051]},{"content":"This example produces the following output:","pos":[2654,2697]},{"pos":[2986,2994],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2998,3125],"content":"<bpt id=\"p1\">[</bpt>Modifying XML Trees (LINQ to XML) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)</ept>","source":"[Modifying XML Trees (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)"}]}