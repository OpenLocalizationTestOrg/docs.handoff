{"content":"---\ntitle: \"How to: Unlink Dataflow Blocks | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"dataflow blocks, unlinking in TPL\"\n  - \"Task Parallel Library, dataflows\"\n  - \"TPL dataflow library, unlinking dataflow blocks\"\nms.assetid: 40f0208d-4618-47f7-85cf-4913d07d2d7d\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# How to: Unlink Dataflow Blocks\nThis document describes how to unlink a target dataflow block from its source.  \n  \n> [!TIP]\n>  The TPL Dataflow Library (<xref:System.Threading.Tasks.Dataflow?displayProperty=fullName> namespace) is not distributed with the [!INCLUDE[net_v45](../../../includes/net-v45-md.md)]. To install the <xref:System.Threading.Tasks.Dataflow> namespace, open your project in [!INCLUDE[vs_dev11_long](../../../includes/vs-dev11-long-md.md)], choose **Manage NuGet Packages** from the Project menu, and search online for the `Microsoft.Tpl.Dataflow` package.  \n  \n## Example  \n The following example creates three <xref:System.Threading.Tasks.Dataflow.TransformBlock%602> objects, each of which calls the `TrySolution` method to compute a value. This example requires only the result from the first call to `TrySolution` to finish.  \n  \n [!code-csharp[TPLDataflow_ReceiveAny#1](../../../samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_receiveany/cs/dataflowreceiveany.cs#1)]\n [!code-vb[TPLDataflow_ReceiveAny#1](../../../samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_receiveany/vb/dataflowreceiveany.vb#1)]  \n  \n To receive the value from the first <xref:System.Threading.Tasks.Dataflow.TransformBlock%602> object that finishes, this example defines the `ReceiveFromAny(T)` method. The `ReceiveFromAny(T)` method accepts an array of <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> objects and links each of these objects to a <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object. When you use the <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A> method to link a source dataflow block to a target block, the source propagates messages to the target as data becomes available. Because the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> class accepts only the first message that it is offered, the `ReceiveFromAny(T)` method produces its result by calling the <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Receive%2A> method. This produces the first message that is offered to the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object. The <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A> method has an overloaded version that takes a <xref:System.Boolean> parameter, `unlinkAfterOne` that, when it is set to `True`, instructs the source block to unlink from the target after the target receives one message from the source. It is important for the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object to unlink from its sources because the relationship between the array of sources and the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object is no longer required after the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object receives a message.  \n  \n To enable the remaining calls to `TrySolution` to end after one of them computes a value, the `TrySolution` method takes a <xref:System.Threading.CancellationToken> object that is canceled after the call to `ReceiveFromAny(T)` returns. The <xref:System.Threading.SpinWait.SpinUntil%2A> method returns when this <xref:System.Threading.CancellationToken> object is canceled.  \n  \n## Compiling the Code  \n Copy the example code and paste it in a Visual Studio project, or paste it in a file that is named `DataflowReceiveAny.cs` (`DataflowReceiveAny.vb` for [!INCLUDE[vbprvb](../../../includes/vbprvb-md.md)]), and then run the following command in a Visual Studio Command Prompt window.  \n  \n [!INCLUDE[csprcs](../../../includes/csprcs-md.md)]  \n  \n **csc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.cs**  \n  \n [!INCLUDE[vbprvb](../../../includes/vbprvb-md.md)]  \n  \n **vbc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.vb**  \n  \n## Robust Programming  \n  \n## See Also  \n [Dataflow](../../../docs/standard/parallel-programming/dataflow-task-parallel-library.md)","nodes":[{"pos":[12,59],"content":"How to: Unlink Dataflow Blocks | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Unlink Dataflow Blocks | Microsoft Docs","pos":[0,47]}]},{"pos":[506,536],"content":"How to: Unlink Dataflow Blocks","linkify":"How to: Unlink Dataflow Blocks","nodes":[{"content":"How to: Unlink Dataflow Blocks","pos":[0,30]}]},{"content":"This document describes how to unlink a target dataflow block from its source.","pos":[537,615]},{"pos":[623,1083],"content":"[!TIP]\n The TPL Dataflow Library (<xref:System.Threading.Tasks.Dataflow?displayProperty=fullName> namespace) is not distributed with the [!INCLUDE[net_v45](../../../includes/net-v45-md.md)]. To install the <xref:System.Threading.Tasks.Dataflow> namespace, open your project in [!INCLUDE[vs_dev11_long](../../../includes/vs-dev11-long-md.md)], choose **Manage NuGet Packages** from the Project menu, and search online for the `Microsoft.Tpl.Dataflow` package.","leadings":["","> "],"nodes":[{"content":" The TPL Dataflow Library (<xref:System.Threading.Tasks.Dataflow?displayProperty=fullName> namespace) is not distributed with the [!INCLUDE[net_v45](../../../includes/net-v45-md.md)]. To install the <xref:System.Threading.Tasks.Dataflow> namespace, open your project in [!INCLUDE[vs_dev11_long](../../../includes/vs-dev11-long-md.md)], choose **Manage NuGet Packages** from the Project menu, and search online for the `Microsoft.Tpl.Dataflow` package.","pos":[7,458],"nodes":[{"content":"The TPL Dataflow Library (<ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow?displayProperty=fullName&gt;</ph> namespace) is not distributed with the <ph id=\"ph2\">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.","pos":[1,183],"source":" The TPL Dataflow Library (<xref:System.Threading.Tasks.Dataflow?displayProperty=fullName> namespace) is not distributed with the [!INCLUDE[net_v45](../../../includes/net-v45-md.md)]."},{"content":"To install the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow&gt;</ph> namespace, open your project in <ph id=\"ph2\">[!INCLUDE[vs_dev11_long](../../../includes/vs-dev11-long-md.md)]</ph>, choose <bpt id=\"p1\">**</bpt>Manage NuGet Packages<ept id=\"p1\">**</ept> from the Project menu, and search online for the <ph id=\"ph3\">`Microsoft.Tpl.Dataflow`</ph> package.","pos":[184,451],"source":" To install the <xref:System.Threading.Tasks.Dataflow> namespace, open your project in [!INCLUDE[vs_dev11_long](../../../includes/vs-dev11-long-md.md)], choose **Manage NuGet Packages** from the Project menu, and search online for the `Microsoft.Tpl.Dataflow` package."}]}]},{"pos":[1092,1099],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example creates three <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.TransformBlock%602&gt;</ph> objects, each of which calls the <ph id=\"ph2\">`TrySolution`</ph> method to compute a value.","pos":[1103,1270],"source":"The following example creates three <xref:System.Threading.Tasks.Dataflow.TransformBlock%602> objects, each of which calls the `TrySolution` method to compute a value."},{"content":"This example requires only the result from the first call to <ph id=\"ph1\">`TrySolution`</ph> to finish.","pos":[1271,1356],"source":" This example requires only the result from the first call to `TrySolution` to finish."},{"pos":[1363,1648],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>TPLDataflow_ReceiveAny#1<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_receiveany/cs/dataflowreceiveany.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>TPLDataflow_ReceiveAny#1<ept id=\"p4\">](../../../samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_receiveany/vb/dataflowreceiveany.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[TPLDataflow_ReceiveAny#1](../../../samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_receiveany/cs/dataflowreceiveany.cs#1)]\n [!code-vb[TPLDataflow_ReceiveAny#1](../../../samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_receiveany/vb/dataflowreceiveany.vb#1)]"},{"content":"To receive the value from the first <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.TransformBlock%602&gt;</ph> object that finishes, this example defines the <ph id=\"ph2\">`ReceiveFromAny(T)`</ph> method.","pos":[1655,1823],"source":"To receive the value from the first <xref:System.Threading.Tasks.Dataflow.TransformBlock%602> object that finishes, this example defines the `ReceiveFromAny(T)` method."},{"content":"The <ph id=\"ph1\">`ReceiveFromAny(T)`</ph> method accepts an array of <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> objects and links each of these objects to a <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object.","pos":[1824,2041],"source":" The `ReceiveFromAny(T)` method accepts an array of <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> objects and links each of these objects to a <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object."},{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A&gt;</ph> method to link a source dataflow block to a target block, the source propagates messages to the target as data becomes available.","pos":[2042,2254],"source":" When you use the <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A> method to link a source dataflow block to a target block, the source propagates messages to the target as data becomes available."},{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> class accepts only the first message that it is offered, the <ph id=\"ph2\">`ReceiveFromAny(T)`</ph> method produces its result by calling the <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.Receive%2A&gt;</ph> method.","pos":[2255,2519],"source":" Because the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> class accepts only the first message that it is offered, the `ReceiveFromAny(T)` method produces its result by calling the <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Receive%2A> method."},{"content":"This produces the first message that is offered to the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object.","pos":[2520,2640],"source":" This produces the first message that is offered to the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A&gt;</ph> method has an overloaded version that takes a <ph id=\"ph2\">&lt;xref:System.Boolean&gt;</ph> parameter, <ph id=\"ph3\">`unlinkAfterOne`</ph> that, when it is set to <ph id=\"ph4\">`True`</ph>, instructs the source block to unlink from the target after the target receives one message from the source.","pos":[2641,2946],"source":" The <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.LinkTo%2A> method has an overloaded version that takes a <xref:System.Boolean> parameter, `unlinkAfterOne` that, when it is set to `True`, instructs the source block to unlink from the target after the target receives one message from the source."},{"content":"It is important for the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object to unlink from its sources because the relationship between the array of sources and the <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object is no longer required after the <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601&gt;</ph> object receives a message.","pos":[2947,3306],"source":" It is important for the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object to unlink from its sources because the relationship between the array of sources and the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object is no longer required after the <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601> object receives a message."},{"content":"To enable the remaining calls to <ph id=\"ph1\">`TrySolution`</ph> to end after one of them computes a value, the <ph id=\"ph2\">`TrySolution`</ph> method takes a <ph id=\"ph3\">&lt;xref:System.Threading.CancellationToken&gt;</ph> object that is canceled after the call to <ph id=\"ph4\">`ReceiveFromAny(T)`</ph> returns.","pos":[3313,3548],"source":"To enable the remaining calls to `TrySolution` to end after one of them computes a value, the `TrySolution` method takes a <xref:System.Threading.CancellationToken> object that is canceled after the call to `ReceiveFromAny(T)` returns."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.SpinWait.SpinUntil%2A&gt;</ph> method returns when this <ph id=\"ph2\">&lt;xref:System.Threading.CancellationToken&gt;</ph> object is canceled.","pos":[3549,3685],"source":" The <xref:System.Threading.SpinWait.SpinUntil%2A> method returns when this <xref:System.Threading.CancellationToken> object is canceled."},{"pos":[3694,3712],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[3716,3997],"content":"Copy the example code and paste it in a Visual Studio project, or paste it in a file that is named <ph id=\"ph1\">`DataflowReceiveAny.cs`</ph> (<ph id=\"ph2\">`DataflowReceiveAny.vb`</ph> for <ph id=\"ph3\">[!INCLUDE[vbprvb](../../../includes/vbprvb-md.md)]</ph>), and then run the following command in a Visual Studio Command Prompt window.","source":"Copy the example code and paste it in a Visual Studio project, or paste it in a file that is named `DataflowReceiveAny.cs` (`DataflowReceiveAny.vb` for [!INCLUDE[vbprvb](../../../includes/vbprvb-md.md)]), and then run the following command in a Visual Studio Command Prompt window."},{"pos":[4061,4133],"content":"<bpt id=\"p1\">**</bpt>csc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.cs<ept id=\"p1\">**</ept>","source":"**csc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.cs**"},{"pos":[4197,4269],"content":"<bpt id=\"p1\">**</bpt>vbc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.vb<ept id=\"p1\">**</ept>","source":"**vbc.exe /r:System.Threading.Tasks.Dataflow.dll DataflowReceiveAny.vb**"},{"pos":[4278,4296],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"pos":[4305,4313],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4317,4406],"content":"<bpt id=\"p1\">[</bpt>Dataflow<ept id=\"p1\">](../../../docs/standard/parallel-programming/dataflow-task-parallel-library.md)</ept>","source":"[Dataflow](../../../docs/standard/parallel-programming/dataflow-task-parallel-library.md)"}]}