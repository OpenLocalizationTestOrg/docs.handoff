{"content":"---\ntitle: \"get - C# Reference\"\nms.custom: seodec18\n\nms.date: 03/10/2017\nf1_keywords: \n  - \"get_CSharpKeyword\"\n  - \"get\"\nhelpviewer_keywords: \n  - \"get keyword [C#]\"\nms.assetid: a52de048-fbe0-41b0-82ec-8e4ac04d3a71\n---\n# get (C# Reference)\n\nThe `get` keyword defines an *accessor* method in a property or indexer that returns the property value or the indexer element. For more information, see [Properties](../../../csharp/programming-guide/classes-and-structs/properties.md), [Auto-Implemented Properties](../../../csharp/programming-guide/classes-and-structs/auto-implemented-properties.md) and [Indexers](../../../csharp/programming-guide/indexers/index.md).  \n  \nThe following example defines both a `get` and a `set` accessor for a property named `Seconds`. It uses a private field named `_seconds` to back the property value.  \n \n [!code-csharp[get#1](../../../../samples/snippets/csharp/language-reference/keywords/get/get-1.cs)]  \n  \nOften, the `get` accessor consists of a single statement that returns a value, as it did in the previous example. Starting with C# 7.0, you can implement the `get` accessor as an expression-bodied member. The following example implements both the `get` and the `set` accessor as expression-bodied members.\n\n [!code-csharp[get#3](../../../../samples/snippets/csharp/language-reference/keywords/get/get-3.cs)]   \n \nFor simple cases in which a property's `get` and `set` accessors perform no other operation than setting or retrieving a value in a private backing field, you can take advantage of the C# compiler's support for auto-implemented properties. The following example implements `Hours` as an auto-implemented property. \n  \n [!code-csharp[get#2](../../../../samples/snippets/csharp/language-reference/keywords/get/get-2.cs)]  \n  \n## C# Language Specification\n\n [!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]  \n  \n## See also\n\n- [C# Reference](../../../csharp/language-reference/index.md)\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [C# Keywords](../../../csharp/language-reference/keywords/index.md)\n- [Properties](../../../csharp/programming-guide/classes-and-structs/properties.md)\n","nodes":[{"pos":[4,214],"embed":true,"restype":"x-metadata","content":"title: \"get - C# Reference\"\nms.custom: seodec18\n\nms.date: 03/10/2017\nf1_keywords: \n  - \"get_CSharpKeyword\"\n  - \"get\"\nhelpviewer_keywords: \n  - \"get keyword [C#]\"\nms.assetid: a52de048-fbe0-41b0-82ec-8e4ac04d3a71","nodes":[{"content":"get - C# Reference","nodes":[{"pos":[0,18],"content":"get - C# Reference","nodes":[{"content":"get - C# Reference","pos":[0,18]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[221,239],"content":"get (C# Reference)","linkify":"get (C# Reference)","nodes":[{"content":"get (C# Reference)","pos":[0,18]}]},{"content":"The <ph id=\"ph1\">`get`</ph> keyword defines an <bpt id=\"p1\">*</bpt>accessor<ept id=\"p1\">*</ept> method in a property or indexer that returns the property value or the indexer element.","pos":[241,368],"source":"The `get` keyword defines an *accessor* method in a property or indexer that returns the property value or the indexer element."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Properties<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/properties.md)</ept>, <bpt id=\"p2\">[</bpt>Auto-Implemented Properties<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/auto-implemented-properties.md)</ept> and <bpt id=\"p3\">[</bpt>Indexers<ept id=\"p3\">](../../../csharp/programming-guide/indexers/index.md)</ept>.","pos":[369,662],"source":" For more information, see [Properties](../../../csharp/programming-guide/classes-and-structs/properties.md), [Auto-Implemented Properties](../../../csharp/programming-guide/classes-and-structs/auto-implemented-properties.md) and [Indexers](../../../csharp/programming-guide/indexers/index.md)."},{"content":"The following example defines both a <ph id=\"ph1\">`get`</ph> and a <ph id=\"ph2\">`set`</ph> accessor for a property named <ph id=\"ph3\">`Seconds`</ph>.","pos":[668,763],"source":"The following example defines both a `get` and a `set` accessor for a property named `Seconds`."},{"content":"It uses a private field named <ph id=\"ph1\">`_seconds`</ph> to back the property value.","pos":[764,832],"source":" It uses a private field named `_seconds` to back the property value."},{"content":"Often, the <ph id=\"ph1\">`get`</ph> accessor consists of a single statement that returns a value, as it did in the previous example.","pos":[943,1056],"source":"Often, the `get` accessor consists of a single statement that returns a value, as it did in the previous example."},{"content":"Starting with C# 7.0, you can implement the <ph id=\"ph1\">`get`</ph> accessor as an expression-bodied member.","pos":[1057,1147],"source":" Starting with C# 7.0, you can implement the `get` accessor as an expression-bodied member."},{"content":"The following example implements both the <ph id=\"ph1\">`get`</ph> and the <ph id=\"ph2\">`set`</ph> accessor as expression-bodied members.","pos":[1148,1248],"source":" The following example implements both the `get` and the `set` accessor as expression-bodied members."},{"content":"For simple cases in which a property's <ph id=\"ph1\">`get`</ph> and <ph id=\"ph2\">`set`</ph> accessors perform no other operation than setting or retrieving a value in a private backing field, you can take advantage of the C# compiler's support for auto-implemented properties.","pos":[1356,1595],"source":"For simple cases in which a property's `get` and `set` accessors perform no other operation than setting or retrieving a value in a private backing field, you can take advantage of the C# compiler's support for auto-implemented properties."},{"content":"The following example implements <ph id=\"ph1\">`Hours`</ph> as an auto-implemented property.","pos":[1596,1669],"source":" The following example implements `Hours` as an auto-implemented property."},{"pos":[1783,1808],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[1879,1887],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1891,1950],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept>","source":"[C# Reference](../../../csharp/language-reference/index.md)"},{"pos":[1953,2019],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[2022,2089],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept>","source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md)"},{"pos":[2092,2173],"content":"<bpt id=\"p1\">[</bpt>Properties<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/properties.md)</ept>","source":"[Properties](../../../csharp/programming-guide/classes-and-structs/properties.md)"}]}