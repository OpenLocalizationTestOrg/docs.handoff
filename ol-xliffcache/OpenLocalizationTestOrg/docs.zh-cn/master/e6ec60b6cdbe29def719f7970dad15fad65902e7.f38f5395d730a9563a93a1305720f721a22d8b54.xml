{"content":"---\ntitle: Expression Trees\ndescription: Expression Trees\nkeywords: .NET, .NET Core\nauthor: BillWagner\nms.author: wiwagn\nms.date: 06/20/2016\nms.topic: article\nms.prod: .net\nms.technology: devlang-csharp\nms.devlang: csharp\nms.assetid: aceb4719-0d5a-4b19-b01f-b51063bcc54f\n---\n\n# Expression Trees\n\nIf you have used LINQ, you have experience with a rich library\nwhere the `Func` types are part of the API set. (If you are not familiar\nwith LINQ, you probably want to read [the LINQ tutorial](linq/index.md) and\nthe tutorial on [lambda expressions](lambda-expressions.md) before this one.)\n*Expression Trees* provide richer interaction with the arguments that\nare functions.\n\nYou write function arguments, typically using Lambda Expressions, when\nyou create LINQ queries. In a typical LINQ query, those function arguments are\ntransformed into a delegate the compiler creates. \n\nWhen you want to have a richer interaction, you need to use *Expression Trees*.\nExpression Trees represent code as a structure that you can examine,\nmodify, or execute. These tools give you the power to manipulate code during\nrun time. You can write code that examines running algorithms, or injects new\ncapabilities. In more advanced scenarios, you can modify running algorithms,\nand even translate C# expressions into another form for execution in another\nenvironment.\n\nYou've likely already written code that uses Expression Trees. Entity Framework's\nLINQ APIs accept Expression Trees as the arguments for the LINQ Query Expression Pattern.\nThat enables [Entity Framework](http://docs.efproject.net/en/latest/) to translate the query you wrote in C# into SQL\nthat executes in the database engine. Another example is [Moq](https://github.com/Moq/moq),\nwhich is a popular mocking framework for .NET.\n\nThe remaining sections of this tutorial will explore what Expression Trees are,\nexamine the framework classes that support expression trees, and show you how to work\nwith expression trees. You'll learn how to read expression trees, how to create\nexpression trees, how to create modified expression trees, and how to execute the\ncode represented by expression trees. After reading, you will be ready to use these\nstructures to create rich adaptive algorithms.\n<style type=\"text/css\">\nol {\n  list-style-type: upper-roman;\n}\n</style>\n1. [Expression Trees Explained](expression-trees-explained.md)\n\n    Understand the structure and concepts behind *Expression Trees*.\n    \n2. [Framework Types Supporting Expression Trees](expression-classes.md)\n    \n    Learn about the structures and classes that define and manipulate expression trees.\n    \n3. [Executing Expressions](expression-trees-execution.md)\n\n    Learn how to convert an expression tree represented as a Lambda Expression into a delegate and execute the resulting delegate.\n\n4. [Interpreting Expressions](expression-trees-interpreting.md)\n\n    Learn how to traverse and examine *expression trees* to understand what code the expression tree represents.\n\n5. [Building Expressions](expression-trees-building.md)\n\n    Learn how to construct the nodes for an expression tree and build expression trees.\n\n6. [Translating Expressions](expression-trees-translating.md)\n\n    Learn how to build a modified copy of an expression tree, or translate an expression tree into a different format.\n\n7. [Summing up](expression-trees-summary.md)\n\n    Review the information on expression trees.\n    \n","nodes":[{"pos":[11,27],"content":"Expression Trees","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression Trees","pos":[0,16]}]},{"pos":[41,57],"content":"Expression Trees","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression Trees","pos":[0,16]}]},{"pos":[68,83],"content":".NET, .NET Core","needQuote":true,"needEscape":true,"nodes":[{"content":".NET, .NET Core","pos":[0,15]}]},{"pos":[278,294],"content":"Expression Trees","linkify":"Expression Trees","nodes":[{"content":"Expression Trees","pos":[0,16]}]},{"content":"If you have used LINQ, you have experience with a rich library where the <ph id=\"ph1\">`Func`</ph> types are part of the API set.","pos":[296,406],"source":"If you have used LINQ, you have experience with a rich library\nwhere the `Func` types are part of the API set."},{"content":"(If you are not familiar with LINQ, you probably want to read <bpt id=\"p1\">[</bpt>the LINQ tutorial<ept id=\"p1\">](linq/index.md)</ept> and the tutorial on <bpt id=\"p2\">[</bpt>lambda expressions<ept id=\"p2\">](lambda-expressions.md)</ept> before this one.) <bpt id=\"p3\">*</bpt>Expression Trees<ept id=\"p3\">*</ept> provide richer interaction with the arguments that are functions.","pos":[407,670],"source":" (If you are not familiar\nwith LINQ, you probably want to read [the LINQ tutorial](linq/index.md) and\nthe tutorial on [lambda expressions](lambda-expressions.md) before this one.)\n*Expression Trees* provide richer interaction with the arguments that\nare functions."},{"content":"You write function arguments, typically using Lambda Expressions, when you create LINQ queries.","pos":[672,767],"source":"You write function arguments, typically using Lambda Expressions, when\nyou create LINQ queries."},{"content":"In a typical LINQ query, those function arguments are transformed into a delegate the compiler creates.","pos":[768,871],"source":" In a typical LINQ query, those function arguments are\ntransformed into a delegate the compiler creates."},{"content":"When you want to have a richer interaction, you need to use <bpt id=\"p1\">*</bpt>Expression Trees<ept id=\"p1\">*</ept>.","pos":[874,953],"source":"When you want to have a richer interaction, you need to use *Expression Trees*."},{"content":"Expression Trees represent code as a structure that you can examine, modify, or execute.","pos":[954,1042],"source":"\nExpression Trees represent code as a structure that you can examine,\nmodify, or execute."},{"content":"These tools give you the power to manipulate code during run time.","pos":[1043,1109],"source":" These tools give you the power to manipulate code during\nrun time."},{"content":"You can write code that examines running algorithms, or injects new capabilities.","pos":[1110,1191],"source":" You can write code that examines running algorithms, or injects new\ncapabilities."},{"content":"In more advanced scenarios, you can modify running algorithms, and even translate C# expressions into another form for execution in another environment.","pos":[1192,1344],"source":" In more advanced scenarios, you can modify running algorithms,\nand even translate C# expressions into another form for execution in another\nenvironment."},{"content":"You've likely already written code that uses Expression Trees.","pos":[1346,1408]},{"content":"Entity Framework's LINQ APIs accept Expression Trees as the arguments for the LINQ Query Expression Pattern.","pos":[1409,1517],"source":" Entity Framework's\nLINQ APIs accept Expression Trees as the arguments for the LINQ Query Expression Pattern."},{"content":"That enables <bpt id=\"p1\">[</bpt>Entity Framework<ept id=\"p1\">](http://docs.efproject.net/en/latest/)</ept> to translate the query you wrote in C# into SQL that executes in the database engine.","pos":[1518,1673],"source":"\nThat enables [Entity Framework](http://docs.efproject.net/en/latest/) to translate the query you wrote in C# into SQL\nthat executes in the database engine."},{"content":"Another example is <bpt id=\"p1\">[</bpt>Moq<ept id=\"p1\">](https://github.com/Moq/moq)</ept>, which is a popular mocking framework for .NET.","pos":[1674,1774],"source":" Another example is [Moq](https://github.com/Moq/moq),\nwhich is a popular mocking framework for .NET."},{"content":"The remaining sections of this tutorial will explore what Expression Trees are, examine the framework classes that support expression trees, and show you how to work with expression trees.","pos":[1776,1964],"source":"The remaining sections of this tutorial will explore what Expression Trees are,\nexamine the framework classes that support expression trees, and show you how to work\nwith expression trees."},{"content":"You'll learn how to read expression trees, how to create expression trees, how to create modified expression trees, and how to execute the code represented by expression trees.","pos":[1965,2141],"source":" You'll learn how to read expression trees, how to create\nexpression trees, how to create modified expression trees, and how to execute the\ncode represented by expression trees."},{"content":"After reading, you will be ready to use these structures to create rich adaptive algorithms.","pos":[2142,2234],"source":" After reading, you will be ready to use these\nstructures to create rich adaptive algorithms."},{"pos":[2235,2369],"content":"<bpt id=\"p1\">&lt;style type=\"text/css\"&gt;</bpt> ol { list-style-type: upper-roman; } <ept id=\"p1\">&lt;/style&gt;</ept><bpt id=\"p2\">\n1. [</bpt>Expression Trees Explained<ept id=\"p2\">](expression-trees-explained.md)</ept>","source":"<style type=\"text/css\">\nol {\n  list-style-type: upper-roman;\n}\n</style>\n1. [Expression Trees Explained](expression-trees-explained.md)"},{"pos":[2448,2516],"content":"<bpt id=\"p1\">[</bpt>Framework Types Supporting Expression Trees<ept id=\"p1\">](expression-classes.md)</ept>","source":"[Framework Types Supporting Expression Trees](expression-classes.md)"},{"content":"Learn about the structures and classes that define and manipulate expression trees.","pos":[2526,2609]},{"pos":[2618,2672],"content":"<bpt id=\"p1\">[</bpt>Executing Expressions<ept id=\"p1\">](expression-trees-execution.md)</ept>","source":"[Executing Expressions](expression-trees-execution.md)"},{"content":"Learn how to convert an expression tree represented as a Lambda Expression into a delegate and execute the resulting delegate.","pos":[2678,2804]},{"pos":[2809,2869],"content":"<bpt id=\"p1\">[</bpt>Interpreting Expressions<ept id=\"p1\">](expression-trees-interpreting.md)</ept>","source":"[Interpreting Expressions](expression-trees-interpreting.md)"},{"pos":[2875,2983],"content":"Learn how to traverse and examine <bpt id=\"p1\">*</bpt>expression trees<ept id=\"p1\">*</ept> to understand what code the expression tree represents.","source":"Learn how to traverse and examine *expression trees* to understand what code the expression tree represents."},{"pos":[2988,3040],"content":"<bpt id=\"p1\">[</bpt>Building Expressions<ept id=\"p1\">](expression-trees-building.md)</ept>","source":"[Building Expressions](expression-trees-building.md)"},{"content":"Learn how to construct the nodes for an expression tree and build expression trees.","pos":[3046,3129]},{"pos":[3134,3192],"content":"<bpt id=\"p1\">[</bpt>Translating Expressions<ept id=\"p1\">](expression-trees-translating.md)</ept>","source":"[Translating Expressions](expression-trees-translating.md)"},{"content":"Learn how to build a modified copy of an expression tree, or translate an expression tree into a different format.","pos":[3198,3312]},{"pos":[3317,3358],"content":"<bpt id=\"p1\">[</bpt>Summing up<ept id=\"p1\">](expression-trees-summary.md)</ept>","source":"[Summing up](expression-trees-summary.md)"},{"content":"Review the information on expression trees.","pos":[3364,3407]}]}