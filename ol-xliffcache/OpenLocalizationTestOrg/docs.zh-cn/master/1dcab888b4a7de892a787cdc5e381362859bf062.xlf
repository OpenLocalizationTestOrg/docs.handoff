<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-host-a-wcf-service-in-was.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1dcab888b4a7de892a787cdc5e381362859bf062</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-host-a-wcf-service-in-was.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ea16da89d53e73d7ce11105848108a9aa714c5e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80284984351360169e6fb66f29723aca859b1d55</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Host a WCF Service in WAS | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Host a WCF Service in WAS</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic outlines the basic steps required to create a Windows Process Activation Services (also known as WAS) hosted <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>WAS is the new process activation service that is a generalization of Internet Information Services (IIS) features that work with non-HTTP transport protocols.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> uses the listener adapter interface to communicate activation requests that are received over the non-HTTP protocols supported by <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, such as TCP, named pipes, and Message Queuing.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This hosting option requires that WAS activation components are properly installed and configured, but it does not require any hosting code to be written as part of the application.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> installing and configuring WAS, see <bpt id="p1">[</bpt>How to: Install and Configure WCF Activation Components<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-install-and-configure-wcf-activation-components.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>WAS activation is not supported if the web server’s request processing pipeline is set to Classic mode.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The web server’s request processing pipeline must be set to Integrated mode if WAS activation is to be used.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service is hosted in WAS, the standard bindings are used in the usual way.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, when using the <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.NetNamedPipeBinding&gt;</ph> to configure a WAS-hosted service, a constraint must be satisfied.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When different endpoints use the same transport, the binding settings have to match on the following seven properties:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>ConnectionBufferSize</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>ChannelInitializationTimeout</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>MaxPendingConnections</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>MaxOutputDelay</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>MaxPendingAccepts</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>ConnectionPoolSettings.IdleTimeout</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>ConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Otherwise, the endpoint that is initialized first always determines the values of these properties, and endpoints added later throw a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceActivationException&gt;</ph> if they do not match those settings.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For the source copy of this example, see <bpt id="p1">[</bpt>TCP Activation<ept id="p1">](../../../../docs/framework/wcf/samples/tcp-activation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To create a basic service hosted by WAS</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Define a service contract for the type of service.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Implement the service contract in a service class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that address or binding information is not specified inside the implementation of the service.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Also, code does not have to be written to retrieve that information from the configuration file.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create a Web.config file to define the <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> binding to be used by the <ph id="ph2">`CalculatorService`</ph> endpoints.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create a Service.svc file that contains the following code.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Place the Service.svc file in your IIS virtual directory.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To create a client to use the service</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> from the command line to generate code from service metadata.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The client that is generated contains the <ph id="ph1">`ICalculator`</ph> interface that defines the service contract that the client implementation must satisfy.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The generated client application also contains the implementation of the <ph id="ph1">`ClientCalculator`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Note that the address and binding information is not specified anywhere inside the implementation of the service.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Also, code does not have to be written to retrieve that information from the configuration file.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The configuration for the client that uses the <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> is also generated by Svcutil.exe.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This file should be named in the App.config file when using Visual Studio.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Create an instance of the <ph id="ph1">`ClientCalculator`</ph> in an application and then call the service operations.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Compile and run the client.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TCP Activation<ept id="p1">](../../../../docs/framework/wcf/samples/tcp-activation.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Server App Fabric Hosting Features<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201276)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>