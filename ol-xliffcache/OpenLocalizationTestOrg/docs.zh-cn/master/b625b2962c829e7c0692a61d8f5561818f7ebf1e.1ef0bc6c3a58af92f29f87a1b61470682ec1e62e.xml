{"content":"---\ntitle: \"ICorProfilerInfo4::GetILToNativeMapping2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerInfo4.GetILToNativeMapping2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo4::GetILToNativeMapping2\"\nhelpviewer_keywords: \n  - \"ICorProfilerInfo4::GetILToNativeMapping2 method [.NET Framework profiling]\"\n  - \"GetILToNativeMapping2 method, ICorProfilerInfo4 interface [.NET Framework profiling]\"\nms.assetid: 756c1c25-08a7-4060-9798-dbeaa2f3bee5\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ICorProfilerInfo4::GetILToNativeMapping2 Method\nGets a map from Microsoft intermediate language (MSIL) offsets to native offsets for the code contained in the JIT-recompiled version of the specified function.  \n  \n## Syntax  \n  \n```  \nHRESULT GetILToNativeMapping(  \n    [in] FunctionID functionId,  \n    [in] ReJITID reJitId,  \n    [in] ULONG32 cMap,  \n    [out] ULONG32 *pcMap,  \n    [out, size_is(cMap), length_is(*pcMap)]  \n        COR_DEBUG_IL_TO_NATIVE_MAP map[]);  \n```  \n  \n## Parameters  \n `functionId`  \n [in] The ID of the function that contains the code.  \n  \n `pReJitId`  \n [in] The identity of the JIT-recompiled function. The identity must be zero in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)].  \n  \n `cMap`  \n [in] The maximum size of the `map` array.  \n  \n `pcMap`  \n [out] The total number of available COR_DEBUG_IL_TO_NATIVE_MAP structures.  \n  \n `map`  \n [out] An array of `COR_DEBUG_IL_TO_NATIVE_MAP` structures, each of which specifies the offsets. After the `GetILToNativeMapping2` method returns, `map` will contain some or all of the `COR_DEBUG_IL_TO_NATIVE_MAP` structures.  \n  \n## Remarks  \n `GetILToNativeMapping2` is similar to the [ICorProfilerInfo::GetILToNativeMapping](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getiltonativemapping-method.md) method, except that it will allow the profiler to specify the ID of the recompiled function in future releases.  \n  \n> [!NOTE]\n>  The [ICorProfilerFunctionControl::SetILInstrumentedCodeMap](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setilinstrumentedcodemap-method.md) method is not implemented in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)], so functions that have been JIT-recompiled cannot have an IL-to-native mapping that differs from the originally compiled function. As such, `GetILToNativeMapping2` cannot be called with a nonzero JIT-recompiled ID in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)].  \n  \n The `GetILToNativeMapping2` method returns an array of `COR_DEBUG_IL_TO_NATIVE_MAP` structures. To convey that certain ranges of native instructions correspond to special regions of code (for example, the prolog), an entry in the array can have its `ilOffset` field set to a value of the [CorDebugIlToNativeMappingTypes](../../../../docs/framework/unmanaged-api/debugging/cordebugiltonativemappingtypes-enumeration.md) enumeration.  \n  \n After `GetILToNativeMapping2` returns, you must verify that the `map` buffer was large enough to contain all the `COR_DEBUG_IL_TO_NATIVE_MAP` structures. To do this, compare the value of `cMap` with the value of the `pcMap` parameter. If the `pcMap` value, when it is multiplied by the size of a `COR_DEBUG_IL_TO_NATIVE_MAP` structure, is larger than `cMap`, allocate a larger `map` buffer, update `cMap` with the new, larger size, and call `GetILToNativeMapping2` again.  \n  \n Alternatively, you can first call `GetILToNativeMapping2` with a zero-length `map` buffer to obtain the correct buffer size. You can then set the buffer size to the value returned in `pcMap` and call `GetILToNativeMapping2` again.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]  \n  \n## See also\n\n- [GetILToNativeMapping Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getiltonativemapping-method.md)\n- [ICorProfilerInfo4 Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo4-interface.md)\n- [Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)\n- [Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)\n","nodes":[{"pos":[4,561],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerInfo4::GetILToNativeMapping2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerInfo4.GetILToNativeMapping2\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerInfo4::GetILToNativeMapping2\"\nhelpviewer_keywords: \n  - \"ICorProfilerInfo4::GetILToNativeMapping2 method [.NET Framework profiling]\"\n  - \"GetILToNativeMapping2 method, ICorProfilerInfo4 interface [.NET Framework profiling]\"\nms.assetid: 756c1c25-08a7-4060-9798-dbeaa2f3bee5\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ICorProfilerInfo4::GetILToNativeMapping2 Method","nodes":[{"pos":[0,47],"content":"ICorProfilerInfo4::GetILToNativeMapping2 Method","nodes":[{"content":"ICorProfilerInfo4::GetILToNativeMapping2 Method","pos":[0,47]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[568,615],"content":"ICorProfilerInfo4::GetILToNativeMapping2 Method","linkify":"ICorProfilerInfo4::GetILToNativeMapping2 Method","nodes":[{"content":"ICorProfilerInfo4::GetILToNativeMapping2 Method","pos":[0,47]}]},{"content":"Gets a map from Microsoft intermediate language (MSIL) offsets to native offsets for the code contained in the JIT-recompiled version of the specified function.","pos":[616,776]},{"pos":[785,791],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1053,1063],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The ID of the function that contains the code.","pos":[1083,1134]},{"content":"[in] The identity of the JIT-recompiled function.","pos":[1155,1204]},{"content":"The identity must be zero in the <ph id=\"ph1\">[!INCLUDE[net_v45](../../../../includes/net-v45-md.md)]</ph>.","pos":[1205,1294],"source":" The identity must be zero in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)]."},{"content":"[in] The maximum size of the <ph id=\"ph1\">`map`</ph> array.","pos":[1311,1352],"source":"[in] The maximum size of the `map` array."},{"content":"[out] The total number of available COR_DEBUG_IL_TO_NATIVE_MAP structures.","pos":[1370,1444]},{"content":"[out] An array of <ph id=\"ph1\">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structures, each of which specifies the offsets.","pos":[1460,1555],"source":"[out] An array of `COR_DEBUG_IL_TO_NATIVE_MAP` structures, each of which specifies the offsets."},{"content":"After the <ph id=\"ph1\">`GetILToNativeMapping2`</ph> method returns, <ph id=\"ph2\">`map`</ph> will contain some or all of the <ph id=\"ph3\">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structures.","pos":[1556,1684],"source":" After the `GetILToNativeMapping2` method returns, `map` will contain some or all of the `COR_DEBUG_IL_TO_NATIVE_MAP` structures."},{"pos":[1693,1700],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1704,1998],"content":"<ph id=\"ph1\">`GetILToNativeMapping2`</ph> is similar to the <bpt id=\"p1\">[</bpt>ICorProfilerInfo::GetILToNativeMapping<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getiltonativemapping-method.md)</ept> method, except that it will allow the profiler to specify the ID of the recompiled function in future releases.","source":"`GetILToNativeMapping2` is similar to the [ICorProfilerInfo::GetILToNativeMapping](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getiltonativemapping-method.md) method, except that it will allow the profiler to specify the ID of the recompiled function in future releases."},{"pos":[2006,2559],"content":"[!NOTE]\n The [ICorProfilerFunctionControl::SetILInstrumentedCodeMap](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setilinstrumentedcodemap-method.md) method is not implemented in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)], so functions that have been JIT-recompiled cannot have an IL-to-native mapping that differs from the originally compiled function. As such, `GetILToNativeMapping2` cannot be called with a nonzero JIT-recompiled ID in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)].","leadings":["","> "],"nodes":[{"content":"The [ICorProfilerFunctionControl::SetILInstrumentedCodeMap](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setilinstrumentedcodemap-method.md) method is not implemented in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)], so functions that have been JIT-recompiled cannot have an IL-to-native mapping that differs from the originally compiled function. As such, `GetILToNativeMapping2` cannot be called with a nonzero JIT-recompiled ID in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)].","pos":[9,551],"nodes":[{"content":"The <bpt id=\"p1\">[</bpt>ICorProfilerFunctionControl::SetILInstrumentedCodeMap<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setilinstrumentedcodemap-method.md)</ept> method is not implemented in the <ph id=\"ph1\">[!INCLUDE[net_v45](../../../../includes/net-v45-md.md)]</ph>, so functions that have been JIT-recompiled cannot have an IL-to-native mapping that differs from the originally compiled function.","pos":[0,395],"source":"The [ICorProfilerFunctionControl::SetILInstrumentedCodeMap](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setilinstrumentedcodemap-method.md) method is not implemented in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)], so functions that have been JIT-recompiled cannot have an IL-to-native mapping that differs from the originally compiled function."},{"content":"As such, <ph id=\"ph1\">`GetILToNativeMapping2`</ph> cannot be called with a nonzero JIT-recompiled ID in the <ph id=\"ph2\">[!INCLUDE[net_v45](../../../../includes/net-v45-md.md)]</ph>.","pos":[396,542],"source":" As such, `GetILToNativeMapping2` cannot be called with a nonzero JIT-recompiled ID in the [!INCLUDE[net_v45](../../../../includes/net-v45-md.md)]."}]}]},{"content":"The <ph id=\"ph1\">`GetILToNativeMapping2`</ph> method returns an array of <ph id=\"ph2\">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structures.","pos":[2566,2661],"source":"The `GetILToNativeMapping2` method returns an array of `COR_DEBUG_IL_TO_NATIVE_MAP` structures."},{"content":"To convey that certain ranges of native instructions correspond to special regions of code (for example, the prolog), an entry in the array can have its <ph id=\"ph1\">`ilOffset`</ph> field set to a value of the <bpt id=\"p1\">[</bpt>CorDebugIlToNativeMappingTypes<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/cordebugiltonativemappingtypes-enumeration.md)</ept> enumeration.","pos":[2662,2997],"source":" To convey that certain ranges of native instructions correspond to special regions of code (for example, the prolog), an entry in the array can have its `ilOffset` field set to a value of the [CorDebugIlToNativeMappingTypes](../../../../docs/framework/unmanaged-api/debugging/cordebugiltonativemappingtypes-enumeration.md) enumeration."},{"content":"After <ph id=\"ph1\">`GetILToNativeMapping2`</ph> returns, you must verify that the <ph id=\"ph2\">`map`</ph> buffer was large enough to contain all the <ph id=\"ph3\">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structures.","pos":[3004,3157],"source":"After `GetILToNativeMapping2` returns, you must verify that the `map` buffer was large enough to contain all the `COR_DEBUG_IL_TO_NATIVE_MAP` structures."},{"content":"To do this, compare the value of <ph id=\"ph1\">`cMap`</ph> with the value of the <ph id=\"ph2\">`pcMap`</ph> parameter.","pos":[3158,3238],"source":" To do this, compare the value of `cMap` with the value of the `pcMap` parameter."},{"content":"If the <ph id=\"ph1\">`pcMap`</ph> value, when it is multiplied by the size of a <ph id=\"ph2\">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structure, is larger than <ph id=\"ph3\">`cMap`</ph>, allocate a larger <ph id=\"ph4\">`map`</ph> buffer, update <ph id=\"ph5\">`cMap`</ph> with the new, larger size, and call <ph id=\"ph6\">`GetILToNativeMapping2`</ph> again.","pos":[3239,3475],"source":" If the `pcMap` value, when it is multiplied by the size of a `COR_DEBUG_IL_TO_NATIVE_MAP` structure, is larger than `cMap`, allocate a larger `map` buffer, update `cMap` with the new, larger size, and call `GetILToNativeMapping2` again."},{"content":"Alternatively, you can first call <ph id=\"ph1\">`GetILToNativeMapping2`</ph> with a zero-length <ph id=\"ph2\">`map`</ph> buffer to obtain the correct buffer size.","pos":[3482,3606],"source":"Alternatively, you can first call `GetILToNativeMapping2` with a zero-length `map` buffer to obtain the correct buffer size."},{"content":"You can then set the buffer size to the value returned in <ph id=\"ph1\">`pcMap`</ph> and call <ph id=\"ph2\">`GetILToNativeMapping2`</ph> again.","pos":[3607,3712],"source":" You can then set the buffer size to the value returned in `pcMap` and call `GetILToNativeMapping2` again."},{"pos":[3721,3733],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3737,3841],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3848,3882],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[3889,3914],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3921,4029],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]"},{"pos":[4038,4046],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4050,4179],"content":"<bpt id=\"p1\">[</bpt>GetILToNativeMapping Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getiltonativemapping-method.md)</ept>","source":"[GetILToNativeMapping Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getiltonativemapping-method.md)"},{"pos":[4182,4294],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerInfo4 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo4-interface.md)</ept>","source":"[ICorProfilerInfo4 Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo4-interface.md)"},{"pos":[4297,4395],"content":"<bpt id=\"p1\">[</bpt>Profiling Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept>","source":"[Profiling Interfaces](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)"},{"pos":[4398,4470],"content":"<bpt id=\"p1\">[</bpt>Profiling<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept>","source":"[Profiling](../../../../docs/framework/unmanaged-api/profiling/index.md)"}]}