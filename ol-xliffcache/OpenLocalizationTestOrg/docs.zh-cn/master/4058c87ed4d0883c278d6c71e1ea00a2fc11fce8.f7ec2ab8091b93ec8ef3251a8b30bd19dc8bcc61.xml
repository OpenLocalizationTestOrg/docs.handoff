{"content":"---\ntitle: \"Compiler Error CS0313 | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"CS0313\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"CS0313\"\nms.assetid: a0b0f2fb-e742-4df8-98bd-3bc068f0c71c\ncaps.latest.revision: 8\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error CS0313\nThe type 'type1' cannot be used as type parameter 'parameter name' in the generic type or method 'type2'. The nullable type 'type1' does not satisfy the constraint of 'type2'. Nullable types cannot satisfy any interface constraints.  \n  \n A nullable type is not equivalent to its non-nullable counterpart. In the example that follows, `ImplStruct` satisfies the `BaseInterface` constraint but `ImplStruct?` does not because `Nullable<ImplStruct>` does not implement `BaseInterface`.  \n  \n## To correct this error  \n  \n1.  Using the code that follows as an example, one solution is to specify an ordinary `ImplStruct` as the first type argument in the call to `TestMethod`. Then modify `TestMethod` to create a nullable version of `Implstruct` in its return statement:  \n  \n    ```  \n    return new Nullable<T>(t);  \n    ```  \n  \n## Example  \n The following code generates CS0313:  \n  \n```  \n// cs0313.cs  \npublic interface BaseInterface { }  \npublic struct ImplStruct : BaseInterface { }  \n  \npublic class TestClass  \n{  \n    public T? TestMethod<T, U>(T t) where T : struct, U  \n    {  \n        return t;  \n    }  \n}  \n  \npublic class NullableTest  \n{  \n    public static void Run()  \n    {  \n  \n        TestClass tc = new TestClass();  \n        tc.TestMethod<ImplStruct?, BaseInterface>(new ImplStruct?()); // CS0313  \n    }  \n    public static void Main()  \n    { }  \n}  \n```  \n  \n## See Also  \n [Nullable Types](../../csharp/programming-guide/nullable-types/index.md)","nodes":[{"pos":[12,50],"content":"Compiler Error CS0313 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error CS0313 | Microsoft Docs","pos":[0,38]}]},{"pos":[565,586],"content":"Compiler Error CS0313","linkify":"Compiler Error CS0313","nodes":[{"content":"Compiler Error CS0313","pos":[0,21]}]},{"content":"The type 'type1' cannot be used as type parameter 'parameter name' in the generic type or method 'type2'.","pos":[587,692]},{"content":"The nullable type 'type1' does not satisfy the constraint of 'type2'.","pos":[693,762]},{"content":"Nullable types cannot satisfy any interface constraints.","pos":[763,819]},{"content":"A nullable type is not equivalent to its non-nullable counterpart.","pos":[826,892]},{"content":"In the example that follows, <ph id=\"ph1\">`ImplStruct`</ph> satisfies the <ph id=\"ph2\">`BaseInterface`</ph> constraint but <ph id=\"ph3\">`ImplStruct?`</ph> does not because <ph id=\"ph4\">`Nullable&lt;ImplStruct&gt;`</ph> does not implement <ph id=\"ph5\">`BaseInterface`</ph>.","pos":[893,1069],"source":" In the example that follows, `ImplStruct` satisfies the `BaseInterface` constraint but `ImplStruct?` does not because `Nullable<ImplStruct>` does not implement `BaseInterface`."},{"pos":[1078,1099],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Using the code that follows as an example, one solution is to specify an ordinary <ph id=\"ph1\">`ImplStruct`</ph> as the first type argument in the call to <ph id=\"ph2\">`TestMethod`</ph>.","pos":[1109,1259],"source":"Using the code that follows as an example, one solution is to specify an ordinary `ImplStruct` as the first type argument in the call to `TestMethod`."},{"content":"Then modify <ph id=\"ph1\">`TestMethod`</ph> to create a nullable version of <ph id=\"ph2\">`Implstruct`</ph> in its return statement:","pos":[1260,1354],"source":" Then modify `TestMethod` to create a nullable version of `Implstruct` in its return statement:"},{"pos":[1419,1426],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code generates CS0313:","pos":[1430,1466]},{"pos":[1974,1982],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1986,2058],"content":"<bpt id=\"p1\">[</bpt>Nullable Types<ept id=\"p1\">](../../csharp/programming-guide/nullable-types/index.md)</ept>","source":"[Nullable Types](../../csharp/programming-guide/nullable-types/index.md)"}]}