{"content":"---\ntitle: What's new in .NET Core 2.0\ndescription: Learn about the new features found in .NET Core.\nauthor: rpetrusha\nms.author: ronpet\nms.date: 08/13/2017\n---\n# What's new in .NET Core 2.0\n\n.NET Core 2.0 includes enhancements and new features in the following areas:\n\n- [Tooling](#tooling)\n- [Language support](#language-support)\n- [Platform improvements](#platform-improvements)\n- [API changes](#api-changes-and-library-support)\n- [Visual Studio integration](#visual-studio-integration)\n- [Documentation improvements](#documentation-improvements)\n\n## Tooling\n\n### dotnet restore runs implicitly\n\nIn previous versions of .NET Core, you had to run the [dotnet restore](../tools/dotnet-restore.md) command to download dependencies immediately after you created a new project with the [dotnet new](../tools/dotnet-new.md) command, as well as whenever you added a new dependency to your project.\n\n[!INCLUDE[DotNet Restore Note](~/includes/dotnet-restore-note.md)]\n\nYou can also disable the automatic invocation of `dotnet restore` by passing the `--no-restore` switch to the `new`, `run`, `build`, `publish`, `pack`, and `test` commands.\n\n### Retargeting to .NET Core 2.0\n\nIf the .NET Core 2.0 SDK is installed, projects that target .NET Core 1.x can be retargeted to .NET Core 2.0.\n\nTo retarget to .NET Core 2.0, edit your project file by changing the value of the `<TargetFramework>` element (or the `<TargetFrameworks>` element if you have more than one target in your project file) from 1.x to 2.0:\n\n```xml\n<PropertyGroup>\n    <TargetFramework>netcoreapp2.0</TargetFramework>\n </PropertyGroup>\n```\n\nYou can also retarget .NET Standard libraries to .NET Standard 2.0 the same way:\n\n```xml\n<PropertyGroup>\n    <TargetFramework>netstandard2.0</TargetFramework>\n </PropertyGroup>\n```\n\nFor more information about migrating your project to .NET Core 2.0, see [Migrating from ASP.NET Core 1.x to ASP.NET Core 2.0](/aspnet/core/migration/1x-to-2x/index).\n\n## Language support\n\nIn addition to supporting C# and F#, .NET Core 2.0 also supports Visual Basic.\n\n### Visual Basic\n\nWith version 2.0, .NET Core now supports Visual Basic 2017. You can use Visual Basic to create the following project types:\n\n- .NET Core console apps\n- .NET Core class libraries\n- .NET Standard class libraries\n- .NET Core unit test projects\n- .NET Core xUnit test projects\n\nFor example, to create a Visual Basic \"Hello World\" application, do the following steps from the command line:\n\n1. Open a console window, create a directory for your project, and make it the current directory.\n\n1. Enter the command `dotnet new console -lang vb`.\n\n   The command creates a project file with a `.vbproj` file extension, along with a Visual Basic source code file named *Program.vb*. This file contains the source code to write the string \"Hello World!\" to the console window.\n\n1. Enter the command `dotnet run`. The [.NET Core CLI](../tools/index.md) automatically compiles and executes the application, which displays the message \"Hello World!\" in the console window.\n\n### Support for C# 7.1\n\n.NET Core 2.0 supports C# 7.1, which adds a number of new features, including:\n\n- The `Main` method, the application entry point, can be marked with the [async](../../csharp/language-reference/keywords/async.md) keyword.\n- Inferred tuple names.\n- Default expressions.\n\n<!-- For more information see [link to C# what's new](url). -->\n\n## Platform improvements\n\n.NET Core 2.0 includes a number of features that make it easier to install .NET Core and to use it on supported operating systems.\n\n### .NET Core for Linux is a single implementation\n\n.NET Core 2.0 offers a single Linux implementation that works on multiple Linux distributions. .NET Core 1.x required that you download a distribution-specific Linux implementation.\n\nYou can also develop apps that target Linux as a single operating system. .NET Core 1.x required that you target each Linux distribution separately.\n\n### Support for the Apple cryptographic libraries\n\n.NET Core 1.x on macOS required the OpenSSL toolkit's cryptographic library. .NET Core 2.0 uses the Apple cryptographic libraries and doesn't require OpenSSL, so you no longer need to install it.\n\n## API changes and library support\n\n### Support for .NET Standard 2.0\n\nThe .NET Standard defines a versioned set of APIs that must be available on .NET implementations that comply with that version of the standard. The .NET Standard is targeted at library developers. It aims to guarantee the functionality that is available to a library that targets a version of the .NET Standard on each .NET implementation. .NET Core 1.x supports the .NET Standard version 1.6; .NET Core 2.0 supports the latest version, .NET Standard 2.0. For more information, see [.NET Standard](../../standard/net-standard.md).\n\n.NET Standard 2.0 includes over 20,000 more APIs than were available in the .NET Standard 1.6. Much of this expanded surface area results from incorporating APIs that are common to the .NET Framework and Xamarin into .NET Standard.\n\n.NET Standard 2.0 class libraries can also reference .NET Framework class libraries, provided that they call APIs that are present in the .NET Standard 2.0. No recompilation of the .NET Framework libraries is required.\n\nFor a list of the APIs that have been added to the .NET Standard since its last version, the .NET Standard 1.6, see [.NET Standard 2.0 vs. 1.6](https://raw.githubusercontent.com/dotnet/standard/master/docs/versions/netstandard2.0_diff.md).\n\n### Expanded surface area\n\nThe total number of APIs available on .NET Core 2.0 has more than doubled in comparison with .NET Core 1.1.\n\nAnd with the [Windows Compatibility Pack](../porting/windows-compat-pack.md) porting from .NET Framework has also become much simpler.\n\n### Support for .NET Framework libraries\n\n.NET Core code can reference existing .NET Framework libraries, including existing NuGet packages. Note that the libraries must use APIs that are found in .NET Standard.\n\n## Visual Studio integration\n\nVisual Studio 2017 version 15.3 and in some cases Visual Studio for Mac offer a number of significant enhancements for .NET Core developers.\n\n### Retargeting .NET Core apps and .NET Standard libraries\n\nIf the .NET Core 2.0 SDK is installed, you can retarget .NET Core 1.x projects to .NET Core 2.0 and .NET Standard 1.x libraries to .NET Standard 2.0.\n\nTo retarget your project in Visual Studio, you open the **Application** tab of the project's properties dialog and change the **Target framework** value to **.NET Core 2.0** or **.NET Standard 2.0**. You can also change it by right-clicking on the project and selecting the **Edit \\*.csproj file** option. For more information, see the [Tooling](#tooling) section earlier in this topic.\n\n### Live Unit Testing support for .NET Core\n\nWhenever you modify your code, Live Unit Testing automatically runs any affected unit tests in the background and displays the results and code coverage live in the Visual Studio environment. .NET Core 2.0 now supports Live Unit Testing. Previously, Live Unit Testing was available only for .NET Framework applications.\n\nFor more information, see [Live Unit Testing with Visual Studio 2017](/visualstudio/test/live-unit-testing) and the [Live Unit Testing FAQ](/visualstudio/test/live-unit-testing-faq).\n\n### Better support for multiple target frameworks\n\nIf you're building a project for multiple target frameworks, you can now select the target platform from the top-level menu. In the following figure, a project named SCD1 targets 64-bit macOS X 10.11 (`osx.10.11-x64`) and 64-bit Windows 10/Windows Server 2016 (`win10-x64`). You can select the target framework before selecting the project button, in this case to run a debug build.\n\n![Screenshot showing target framework selection when building a project.](./media/dotnet-core-2-0/target-framework-selection.png)\n\n### Side-by-side support for .NET Core SDKs\n\nYou can now install the .NET Core SDK independently of Visual Studio. This makes it possible for a single version of Visual Studio to build projects that target different versions of .NET Core. Previously, Visual Studio and the .NET Core SDK were tightly coupled; a particular version of the SDK accompanied a particular version of Visual Studio.\n\n## Documentation improvements\n\n### .NET Application Architecture\n\n[.NET Application Architecture](https://www.microsoft.com/net/learn/architecture) gives you access to a set of e-books that provide guidance, best practices, and sample applications when using .NET to build:\n\n- [Microservices and Docker containers](../../standard/microservices-architecture/index.md)\n- [Web applications with ASP.NET](../../standard/modern-web-apps-azure-architecture/index.md)\n- [Mobile applications with Xamarin](/xamarin/xamarin-forms/enterprise-application-patterns/index)\n- [Applications that are deployed to the Cloud with Azure](/azure/architecture/reference-architectures/index)\n\n## See also\n\n- [What's new in ASP.NET Core 2.0](/aspnet/core/aspnetcore-2.0)\n","nodes":[{"pos":[4,156],"embed":true,"restype":"x-metadata","content":"title: What's new in .NET Core 2.0\ndescription: Learn about the new features found in .NET Core.\nauthor: rpetrusha\nms.author: ronpet\nms.date: 08/13/2017","nodes":[{"content":"What's new in .NET Core 2.0","nodes":[{"pos":[0,27],"content":"What's new in .NET Core 2.0","nodes":[{"content":"What's new in .NET Core 2.0","pos":[0,27]}]}],"path":["title"],"nosxs":false},{"content":"Learn about the new features found in .NET Core.","nodes":[{"pos":[0,48],"content":"Learn about the new features found in .NET Core.","nodes":[{"content":"Learn about the new features found in .NET Core.","pos":[0,48]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[163,190],"content":"What's new in .NET Core 2.0","linkify":"What's new in .NET Core 2.0","nodes":[{"content":"What's new in .NET Core 2.0","pos":[0,27]}]},{"content":".NET Core 2.0 includes enhancements and new features in the following areas:","pos":[192,268]},{"pos":[272,291],"content":"<bpt id=\"p1\">[</bpt>Tooling<ept id=\"p1\">](#tooling)</ept>","source":"[Tooling](#tooling)"},{"pos":[294,331],"content":"<bpt id=\"p1\">[</bpt>Language support<ept id=\"p1\">](#language-support)</ept>","source":"[Language support](#language-support)"},{"pos":[334,381],"content":"<bpt id=\"p1\">[</bpt>Platform improvements<ept id=\"p1\">](#platform-improvements)</ept>","source":"[Platform improvements](#platform-improvements)"},{"pos":[384,431],"content":"<bpt id=\"p1\">[</bpt>API changes<ept id=\"p1\">](#api-changes-and-library-support)</ept>","source":"[API changes](#api-changes-and-library-support)"},{"pos":[434,489],"content":"<bpt id=\"p1\">[</bpt>Visual Studio integration<ept id=\"p1\">](#visual-studio-integration)</ept>","source":"[Visual Studio integration](#visual-studio-integration)"},{"pos":[492,549],"content":"<bpt id=\"p1\">[</bpt>Documentation improvements<ept id=\"p1\">](#documentation-improvements)</ept>","source":"[Documentation improvements](#documentation-improvements)"},{"pos":[554,561],"content":"Tooling","linkify":"Tooling","nodes":[{"content":"Tooling","pos":[0,7]}]},{"pos":[567,597],"content":"dotnet restore runs implicitly","linkify":"dotnet restore runs implicitly","nodes":[{"content":"dotnet restore runs implicitly","pos":[0,30]}]},{"pos":[599,893],"content":"In previous versions of .NET Core, you had to run the <bpt id=\"p1\">[</bpt>dotnet restore<ept id=\"p1\">](../tools/dotnet-restore.md)</ept> command to download dependencies immediately after you created a new project with the <bpt id=\"p2\">[</bpt>dotnet new<ept id=\"p2\">](../tools/dotnet-new.md)</ept> command, as well as whenever you added a new dependency to your project.","source":"In previous versions of .NET Core, you had to run the [dotnet restore](../tools/dotnet-restore.md) command to download dependencies immediately after you created a new project with the [dotnet new](../tools/dotnet-new.md) command, as well as whenever you added a new dependency to your project."},{"pos":[963,1135],"content":"You can also disable the automatic invocation of <ph id=\"ph1\">`dotnet restore`</ph> by passing the <ph id=\"ph2\">`--no-restore`</ph> switch to the <ph id=\"ph3\">`new`</ph>, <ph id=\"ph4\">`run`</ph>, <ph id=\"ph5\">`build`</ph>, <ph id=\"ph6\">`publish`</ph>, <ph id=\"ph7\">`pack`</ph>, and <ph id=\"ph8\">`test`</ph> commands.","source":"You can also disable the automatic invocation of `dotnet restore` by passing the `--no-restore` switch to the `new`, `run`, `build`, `publish`, `pack`, and `test` commands."},{"pos":[1141,1169],"content":"Retargeting to .NET Core 2.0","linkify":"Retargeting to .NET Core 2.0","nodes":[{"content":"Retargeting to .NET Core 2.0","pos":[0,28]}]},{"content":"If the .NET Core 2.0 SDK is installed, projects that target .NET Core 1.x can be retargeted to .NET Core 2.0.","pos":[1171,1280]},{"pos":[1282,1500],"content":"To retarget to .NET Core 2.0, edit your project file by changing the value of the <ph id=\"ph1\">`&lt;TargetFramework&gt;`</ph> element (or the <ph id=\"ph2\">`&lt;TargetFrameworks&gt;`</ph> element if you have more than one target in your project file) from 1.x to 2.0:","source":"To retarget to .NET Core 2.0, edit your project file by changing the value of the `<TargetFramework>` element (or the `<TargetFrameworks>` element if you have more than one target in your project file) from 1.x to 2.0:"},{"content":"You can also retarget .NET Standard libraries to .NET Standard 2.0 the same way:","pos":[1601,1681]},{"pos":[1783,1948],"content":"For more information about migrating your project to .NET Core 2.0, see <bpt id=\"p1\">[</bpt>Migrating from ASP.NET Core 1.x to ASP.NET Core 2.0<ept id=\"p1\">](/aspnet/core/migration/1x-to-2x/index)</ept>.","source":"For more information about migrating your project to .NET Core 2.0, see [Migrating from ASP.NET Core 1.x to ASP.NET Core 2.0](/aspnet/core/migration/1x-to-2x/index)."},{"pos":[1953,1969],"content":"Language support","linkify":"Language support","nodes":[{"content":"Language support","pos":[0,16]}]},{"content":"In addition to supporting C# and F#, .NET Core 2.0 also supports Visual Basic.","pos":[1971,2049]},{"pos":[2055,2067],"content":"Visual Basic","linkify":"Visual Basic","nodes":[{"content":"Visual Basic","pos":[0,12]}]},{"content":"With version 2.0, .NET Core now supports Visual Basic 2017.","pos":[2069,2128]},{"content":"You can use Visual Basic to create the following project types:","pos":[2129,2192]},{"content":".NET Core console apps","pos":[2196,2218]},{"content":".NET Core class libraries","pos":[2221,2246]},{"content":".NET Standard class libraries","pos":[2249,2278]},{"content":".NET Core unit test projects","pos":[2281,2309]},{"content":".NET Core xUnit test projects","pos":[2312,2341]},{"content":"For example, to create a Visual Basic \"Hello World\" application, do the following steps from the command line:","pos":[2343,2453]},{"content":"Open a console window, create a directory for your project, and make it the current directory.","pos":[2458,2552]},{"pos":[2557,2605],"content":"Enter the command <ph id=\"ph1\">`dotnet new console -lang vb`</ph>.","source":"Enter the command `dotnet new console -lang vb`."},{"content":"The command creates a project file with a <ph id=\"ph1\">`.vbproj`</ph> file extension, along with a Visual Basic source code file named <bpt id=\"p1\">*</bpt>Program.vb<ept id=\"p1\">*</ept>.","pos":[2610,2740],"source":"The command creates a project file with a `.vbproj` file extension, along with a Visual Basic source code file named *Program.vb*."},{"content":"This file contains the source code to write the string \"Hello World!\"","pos":[2741,2810]},{"content":"to the console window.","pos":[2811,2833]},{"content":"Enter the command <ph id=\"ph1\">`dotnet run`</ph>.","pos":[2838,2869],"source":"Enter the command `dotnet run`."},{"content":"The <bpt id=\"p1\">[</bpt>.NET Core CLI<ept id=\"p1\">](../tools/index.md)</ept> automatically compiles and executes the application, which displays the message \"Hello World!\"","pos":[2870,3003],"source":" The [.NET Core CLI](../tools/index.md) automatically compiles and executes the application, which displays the message \"Hello World!\""},{"content":"in the console window.","pos":[3004,3026]},{"pos":[3032,3050],"content":"Support for C# 7.1","linkify":"Support for C# 7.1","nodes":[{"content":"Support for C# 7.1","pos":[0,18]}]},{"content":".NET Core 2.0 supports C# 7.1, which adds a number of new features, including:","pos":[3052,3130]},{"pos":[3134,3272],"content":"The <ph id=\"ph1\">`Main`</ph> method, the application entry point, can be marked with the <bpt id=\"p1\">[</bpt>async<ept id=\"p1\">](../../csharp/language-reference/keywords/async.md)</ept> keyword.","source":"The `Main` method, the application entry point, can be marked with the [async](../../csharp/language-reference/keywords/async.md) keyword."},{"content":"Inferred tuple names.","pos":[3275,3296]},{"content":"Default expressions.","pos":[3299,3319]},{"pos":[3389,3410],"content":"Platform improvements","linkify":"Platform improvements","nodes":[{"content":"Platform improvements","pos":[0,21]}]},{"content":".NET Core 2.0 includes a number of features that make it easier to install .NET Core and to use it on supported operating systems.","pos":[3412,3542]},{"pos":[3548,3594],"content":".NET Core for Linux is a single implementation","linkify":".NET Core for Linux is a single implementation","nodes":[{"content":".NET Core for Linux is a single implementation","pos":[0,46]}]},{"content":".NET Core 2.0 offers a single Linux implementation that works on multiple Linux distributions.","pos":[3596,3690]},{"content":".NET Core 1.x required that you download a distribution-specific Linux implementation.","pos":[3691,3777]},{"content":"You can also develop apps that target Linux as a single operating system.","pos":[3779,3852]},{"content":".NET Core 1.x required that you target each Linux distribution separately.","pos":[3853,3927]},{"pos":[3933,3978],"content":"Support for the Apple cryptographic libraries","linkify":"Support for the Apple cryptographic libraries","nodes":[{"content":"Support for the Apple cryptographic libraries","pos":[0,45]}]},{"content":".NET Core 1.x on macOS required the OpenSSL toolkit's cryptographic library.","pos":[3980,4056]},{"content":".NET Core 2.0 uses the Apple cryptographic libraries and doesn't require OpenSSL, so you no longer need to install it.","pos":[4057,4175]},{"pos":[4180,4211],"content":"API changes and library support","linkify":"API changes and library support","nodes":[{"content":"API changes and library support","pos":[0,31]}]},{"pos":[4217,4246],"content":"Support for .NET Standard 2.0","linkify":"Support for .NET Standard 2.0","nodes":[{"content":"Support for .NET Standard 2.0","pos":[0,29]}]},{"content":"The .NET Standard defines a versioned set of APIs that must be available on .NET implementations that comply with that version of the standard.","pos":[4248,4391]},{"content":"The .NET Standard is targeted at library developers.","pos":[4392,4444]},{"content":"It aims to guarantee the functionality that is available to a library that targets a version of the .NET Standard on each .NET implementation.","pos":[4445,4587]},{"content":".NET Core 1.x supports the .NET Standard version 1.6; .NET Core 2.0 supports the latest version, .NET Standard 2.0.","pos":[4588,4703]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>.NET Standard<ept id=\"p1\">](../../standard/net-standard.md)</ept>.","pos":[4704,4778],"source":" For more information, see [.NET Standard](../../standard/net-standard.md)."},{"content":".NET Standard 2.0 includes over 20,000 more APIs than were available in the .NET Standard 1.6.","pos":[4780,4874]},{"content":"Much of this expanded surface area results from incorporating APIs that are common to the .NET Framework and Xamarin into .NET Standard.","pos":[4875,5011]},{"content":".NET Standard 2.0 class libraries can also reference .NET Framework class libraries, provided that they call APIs that are present in the .NET Standard 2.0.","pos":[5013,5169]},{"content":"No recompilation of the .NET Framework libraries is required.","pos":[5170,5231]},{"pos":[5233,5472],"content":"For a list of the APIs that have been added to the .NET Standard since its last version, the .NET Standard 1.6, see <bpt id=\"p1\">[</bpt>.NET Standard 2.0 vs. 1.6<ept id=\"p1\">](https://raw.githubusercontent.com/dotnet/standard/master/docs/versions/netstandard2.0_diff.md)</ept>.","source":"For a list of the APIs that have been added to the .NET Standard since its last version, the .NET Standard 1.6, see [.NET Standard 2.0 vs. 1.6](https://raw.githubusercontent.com/dotnet/standard/master/docs/versions/netstandard2.0_diff.md)."},{"pos":[5478,5499],"content":"Expanded surface area","linkify":"Expanded surface area","nodes":[{"content":"Expanded surface area","pos":[0,21]}]},{"content":"The total number of APIs available on .NET Core 2.0 has more than doubled in comparison with .NET Core 1.1.","pos":[5501,5608]},{"pos":[5610,5744],"content":"And with the <bpt id=\"p1\">[</bpt>Windows Compatibility Pack<ept id=\"p1\">](../porting/windows-compat-pack.md)</ept> porting from .NET Framework has also become much simpler.","source":"And with the [Windows Compatibility Pack](../porting/windows-compat-pack.md) porting from .NET Framework has also become much simpler."},{"pos":[5750,5786],"content":"Support for .NET Framework libraries","linkify":"Support for .NET Framework libraries","nodes":[{"content":"Support for .NET Framework libraries","pos":[0,36]}]},{"content":".NET Core code can reference existing .NET Framework libraries, including existing NuGet packages.","pos":[5788,5886]},{"content":"Note that the libraries must use APIs that are found in .NET Standard.","pos":[5887,5957]},{"pos":[5962,5987],"content":"Visual Studio integration","linkify":"Visual Studio integration","nodes":[{"content":"Visual Studio integration","pos":[0,25]}]},{"content":"Visual Studio 2017 version 15.3 and in some cases Visual Studio for Mac offer a number of significant enhancements for .NET Core developers.","pos":[5989,6129]},{"pos":[6135,6189],"content":"Retargeting .NET Core apps and .NET Standard libraries","linkify":"Retargeting .NET Core apps and .NET Standard libraries","nodes":[{"content":"Retargeting .NET Core apps and .NET Standard libraries","pos":[0,54]}]},{"content":"If the .NET Core 2.0 SDK is installed, you can retarget .NET Core 1.x projects to .NET Core 2.0 and .NET Standard 1.x libraries to .NET Standard 2.0.","pos":[6191,6340]},{"content":"To retarget your project in Visual Studio, you open the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab of the project's properties dialog and change the <bpt id=\"p2\">**</bpt>Target framework<ept id=\"p2\">**</ept> value to <bpt id=\"p3\">**</bpt>.NET Core 2.0<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>.NET Standard 2.0<ept id=\"p4\">**</ept>.","pos":[6342,6541],"source":"To retarget your project in Visual Studio, you open the **Application** tab of the project's properties dialog and change the **Target framework** value to **.NET Core 2.0** or **.NET Standard 2.0**."},{"content":"You can also change it by right-clicking on the project and selecting the <bpt id=\"p1\">**</bpt>Edit <ph id=\"ph1\">\\*</ph>.csproj file<ept id=\"p1\">**</ept> option.","pos":[6542,6647],"source":" You can also change it by right-clicking on the project and selecting the **Edit \\*.csproj file** option."},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>Tooling<ept id=\"p1\">](#tooling)</ept> section earlier in this topic.","pos":[6648,6728],"source":" For more information, see the [Tooling](#tooling) section earlier in this topic."},{"pos":[6734,6773],"content":"Live Unit Testing support for .NET Core","linkify":"Live Unit Testing support for .NET Core","nodes":[{"content":"Live Unit Testing support for .NET Core","pos":[0,39]}]},{"content":"Whenever you modify your code, Live Unit Testing automatically runs any affected unit tests in the background and displays the results and code coverage live in the Visual Studio environment.","pos":[6775,6966]},{"content":".NET Core 2.0 now supports Live Unit Testing.","pos":[6967,7012]},{"content":"Previously, Live Unit Testing was available only for .NET Framework applications.","pos":[7013,7094]},{"pos":[7096,7278],"content":"For more information, see <bpt id=\"p1\">[</bpt>Live Unit Testing with Visual Studio 2017<ept id=\"p1\">](/visualstudio/test/live-unit-testing)</ept> and the <bpt id=\"p2\">[</bpt>Live Unit Testing FAQ<ept id=\"p2\">](/visualstudio/test/live-unit-testing-faq)</ept>.","source":"For more information, see [Live Unit Testing with Visual Studio 2017](/visualstudio/test/live-unit-testing) and the [Live Unit Testing FAQ](/visualstudio/test/live-unit-testing-faq)."},{"pos":[7284,7329],"content":"Better support for multiple target frameworks","linkify":"Better support for multiple target frameworks","nodes":[{"content":"Better support for multiple target frameworks","pos":[0,45]}]},{"content":"If you're building a project for multiple target frameworks, you can now select the target platform from the top-level menu.","pos":[7331,7455]},{"content":"In the following figure, a project named SCD1 targets 64-bit macOS X 10.11 (<ph id=\"ph1\">`osx.10.11-x64`</ph>) and 64-bit Windows 10/Windows Server 2016 (<ph id=\"ph2\">`win10-x64`</ph>).","pos":[7456,7605],"source":" In the following figure, a project named SCD1 targets 64-bit macOS X 10.11 (`osx.10.11-x64`) and 64-bit Windows 10/Windows Server 2016 (`win10-x64`)."},{"content":"You can select the target framework before selecting the project button, in this case to run a debug build.","pos":[7606,7713]},{"content":"Screenshot showing target framework selection when building a project.","pos":[7717,7787]},{"pos":[7850,7889],"content":"Side-by-side support for .NET Core SDKs","linkify":"Side-by-side support for .NET Core SDKs","nodes":[{"content":"Side-by-side support for .NET Core SDKs","pos":[0,39]}]},{"content":"You can now install the .NET Core SDK independently of Visual Studio.","pos":[7891,7960]},{"content":"This makes it possible for a single version of Visual Studio to build projects that target different versions of .NET Core.","pos":[7961,8084]},{"content":"Previously, Visual Studio and the .NET Core SDK were tightly coupled; a particular version of the SDK accompanied a particular version of Visual Studio.","pos":[8085,8237]},{"pos":[8242,8268],"content":"Documentation improvements","linkify":"Documentation improvements","nodes":[{"content":"Documentation improvements","pos":[0,26]}]},{"pos":[8274,8303],"content":".NET Application Architecture","linkify":".NET Application Architecture","nodes":[{"content":".NET Application Architecture","pos":[0,29]}]},{"pos":[8305,8512],"content":"<bpt id=\"p1\">[</bpt>.NET Application Architecture<ept id=\"p1\">](https://www.microsoft.com/net/learn/architecture)</ept> gives you access to a set of e-books that provide guidance, best practices, and sample applications when using .NET to build:","source":"[.NET Application Architecture](https://www.microsoft.com/net/learn/architecture) gives you access to a set of e-books that provide guidance, best practices, and sample applications when using .NET to build:"},{"pos":[8516,8605],"content":"<bpt id=\"p1\">[</bpt>Microservices and Docker containers<ept id=\"p1\">](../../standard/microservices-architecture/index.md)</ept>","source":"[Microservices and Docker containers](../../standard/microservices-architecture/index.md)"},{"pos":[8608,8699],"content":"<bpt id=\"p1\">[</bpt>Web applications with ASP.NET<ept id=\"p1\">](../../standard/modern-web-apps-azure-architecture/index.md)</ept>","source":"[Web applications with ASP.NET](../../standard/modern-web-apps-azure-architecture/index.md)"},{"pos":[8702,8798],"content":"<bpt id=\"p1\">[</bpt>Mobile applications with Xamarin<ept id=\"p1\">](/xamarin/xamarin-forms/enterprise-application-patterns/index)</ept>","source":"[Mobile applications with Xamarin](/xamarin/xamarin-forms/enterprise-application-patterns/index)"},{"pos":[8801,8908],"content":"<bpt id=\"p1\">[</bpt>Applications that are deployed to the Cloud with Azure<ept id=\"p1\">](/azure/architecture/reference-architectures/index)</ept>","source":"[Applications that are deployed to the Cloud with Azure](/azure/architecture/reference-architectures/index)"},{"pos":[8913,8921],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[8925,8986],"content":"<bpt id=\"p1\">[</bpt>What's new in ASP.NET Core 2.0<ept id=\"p1\">](/aspnet/core/aspnetcore-2.0)</ept>","source":"[What's new in ASP.NET Core 2.0](/aspnet/core/aspnetcore-2.0)"}]}