{"content":"---\ntitle: \"<MethodInstantiation> Element (.NET Native)\"\nms.date: \"03/30/2017\"\nms.assetid: a3355d78-2a88-4109-8521-830d7cae260a\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# \\<MethodInstantiation> Element (.NET Native)\nApplies runtime reflection policy to a constructed generic method.  \n  \n## Syntax  \n  \n```xml  \n<MethodInstantiation Name=\"method_name\"  \n                     Signature=\"method_signature\"  \n                     Arguments=\"method_arguments\"  \n                     Browse=\"policy_type\"  \n                     Dynamic=\"policy_type\" />  \n```  \n  \n## Attributes and Elements  \n The following sections describe attributes, child elements, and parent elements.  \n  \n### Attributes  \n  \n|Attribute|Attribute type|Description|  \n|---------------|--------------------|-----------------|  \n|`Name`|General|Required attribute. Specifies the method name.|  \n|`Signature`|General|Optional attribute. Specifies named parameters of the method. Multiple named parameters are separated by commas. The `Signature` attribute is used to differentiate overloaded methods.|  \n|`Arguments`|General|Required attribute. Specifies the generic type arguments. If multiple arguments are present, they are separated by commas.|  \n|`Browse`|Reflection|Optional attribute. Controls querying for information about or enumerating a method but does not enable any dynamic invocation at run time.|  \n|`Dynamic`|Reflection|Optional attribute. Controls runtime access to a constructor or method to enable dynamic programming. This policy ensures that a member can be invoked dynamically at run time.|  \n  \n## Name attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*method_name*|The method name. The type of the method is defined by the parent [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element.|  \n  \n## Signature attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*method_signature*|Specifies the named parameters of the method. If multiple parameters are present, they are separated by commas.|  \n  \n## Arguments attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*method_arguments*|Specifies the generic type arguments. If multiple arguments are present, they are separated by commas. Each argument must consist of the fully qualified type name.|  \n  \n## All other attributes  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*policy_setting*|The setting to apply to this policy type for the method. Possible values are `Auto`, `Excluded`, `Included`, and `Required`. For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md).|  \n  \n### Child Elements  \n None.  \n  \n### Parent Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|[\\<Type>](../../../docs/framework/net-native/type-element-net-native.md)|Applies reflection policy to a type and all its members.|  \n|[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)|Applies reflection policy to a constructed generic type and all its members.|  \n  \n## Remarks  \n The `<MethodInstantiation>` element overrides the runtime reflection policy of its corresponding open generic method.  \n  \n## See also\n\n- [Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)\n- [Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md)\n- [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)\n- [\\<Method> Element](../../../docs/framework/net-native/method-element-net-native.md)\n","nodes":[{"pos":[4,167],"embed":true,"restype":"x-metadata","content":"title: \"<MethodInstantiation> Element (.NET Native)\"\nms.date: \"03/30/2017\"\nms.assetid: a3355d78-2a88-4109-8521-830d7cae260a\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"<MethodInstantiation> Element (.NET Native)","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;MethodInstantiation&gt;</ph> Element (.NET Native)","source":"<MethodInstantiation> Element (.NET Native)"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[174,218],"content":"\\<MethodInstantiation> Element (.NET Native)","linkify":"\\<MethodInstantiation> Element (.NET Native)","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>MethodInstantiation&gt; Element (.NET Native)","pos":[0,44],"source":"\\<MethodInstantiation> Element (.NET Native)"}]},{"content":"Applies runtime reflection policy to a constructed generic method.","pos":[219,285]},{"pos":[294,300],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[565,588],"content":"Attributes and Elements","linkify":"Attributes and Elements","nodes":[{"content":"Attributes and Elements","pos":[0,23]}]},{"content":"The following sections describe attributes, child elements, and parent elements.","pos":[592,672]},{"pos":[682,692],"content":"Attributes","linkify":"Attributes","nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"Attribute","pos":[699,708]},{"content":"Attribute type","pos":[709,723]},{"content":"Description","pos":[724,735]},{"content":"General","pos":[806,813]},{"content":"Required attribute.","pos":[814,833]},{"content":"Specifies the method name.","pos":[834,860]},{"content":"General","pos":[877,884]},{"content":"Optional attribute.","pos":[885,904]},{"content":"Specifies named parameters of the method.","pos":[905,946]},{"content":"Multiple named parameters are separated by commas.","pos":[947,997]},{"content":"The <ph id=\"ph1\">`Signature`</ph> attribute is used to differentiate overloaded methods.","pos":[998,1068],"source":" The `Signature` attribute is used to differentiate overloaded methods."},{"content":"General","pos":[1085,1092]},{"content":"Required attribute.","pos":[1093,1112]},{"content":"Specifies the generic type arguments.","pos":[1113,1150]},{"content":"If multiple arguments are present, they are separated by commas.","pos":[1151,1215]},{"content":"Reflection","pos":[1229,1239]},{"content":"Optional attribute.","pos":[1240,1259]},{"content":"Controls querying for information about or enumerating a method but does not enable any dynamic invocation at run time.","pos":[1260,1379]},{"content":"Reflection","pos":[1394,1404]},{"content":"Optional attribute.","pos":[1405,1424]},{"content":"Controls runtime access to a constructor or method to enable dynamic programming.","pos":[1425,1506]},{"content":"This policy ensures that a member can be invoked dynamically at run time.","pos":[1507,1580]},{"pos":[1590,1604],"content":"Name attribute","linkify":"Name attribute","nodes":[{"content":"Name attribute","pos":[0,14]}]},{"content":"Value","pos":[1611,1616]},{"content":"Description","pos":[1617,1628]},{"pos":[1667,1680],"content":"<bpt id=\"p1\">*</bpt>method_name<ept id=\"p1\">*</ept>","source":"*method_name*"},{"content":"The method name.","pos":[1681,1697]},{"content":"The type of the method is defined by the parent <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept> or <bpt id=\"p2\">[</bpt><ph id=\"ph2\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p2\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept> element.","pos":[1698,1929],"source":" The type of the method is defined by the parent [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element."},{"pos":[1939,1958],"content":"Signature attribute","linkify":"Signature attribute","nodes":[{"content":"Signature attribute","pos":[0,19]}]},{"content":"Value","pos":[1965,1970]},{"content":"Description","pos":[1971,1982]},{"pos":[2021,2039],"content":"<bpt id=\"p1\">*</bpt>method_signature<ept id=\"p1\">*</ept>","source":"*method_signature*"},{"content":"Specifies the named parameters of the method.","pos":[2040,2085]},{"content":"If multiple parameters are present, they are separated by commas.","pos":[2086,2151]},{"pos":[2161,2180],"content":"Arguments attribute","linkify":"Arguments attribute","nodes":[{"content":"Arguments attribute","pos":[0,19]}]},{"content":"Value","pos":[2187,2192]},{"content":"Description","pos":[2193,2204]},{"pos":[2243,2261],"content":"<bpt id=\"p1\">*</bpt>method_arguments<ept id=\"p1\">*</ept>","source":"*method_arguments*"},{"content":"Specifies the generic type arguments.","pos":[2262,2299]},{"content":"If multiple arguments are present, they are separated by commas.","pos":[2300,2364]},{"content":"Each argument must consist of the fully qualified type name.","pos":[2365,2425]},{"pos":[2435,2455],"content":"All other attributes","linkify":"All other attributes","nodes":[{"content":"All other attributes","pos":[0,20]}]},{"content":"Value","pos":[2462,2467]},{"content":"Description","pos":[2468,2479]},{"pos":[2518,2534],"content":"<bpt id=\"p1\">*</bpt>policy_setting<ept id=\"p1\">*</ept>","source":"*policy_setting*"},{"content":"The setting to apply to this policy type for the method.","pos":[2535,2591]},{"content":"Possible values are <ph id=\"ph1\">`Auto`</ph>, <ph id=\"ph2\">`Excluded`</ph>, <ph id=\"ph3\">`Included`</ph>, and <ph id=\"ph4\">`Required`</ph>.","pos":[2592,2659],"source":" Possible values are `Auto`, `Excluded`, `Included`, and `Required`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>.","pos":[2660,2795],"source":" For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)."},{"pos":[2806,2820],"content":"Child Elements","linkify":"Child Elements","nodes":[{"content":"Child Elements","pos":[0,14]}]},{"content":"None.","pos":[2824,2829]},{"pos":[2839,2854],"content":"Parent Elements","linkify":"Parent Elements","nodes":[{"content":"Parent Elements","pos":[0,15]}]},{"content":"Element","pos":[2861,2868]},{"content":"Description","pos":[2869,2880]},{"pos":[2921,2993],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept>","source":"[\\<Type>](../../../docs/framework/net-native/type-element-net-native.md)"},{"content":"Applies reflection policy to a type and all its members.","pos":[2994,3050]},{"pos":[3055,3153],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p1\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept>","source":"[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)"},{"content":"Applies reflection policy to a constructed generic type and all its members.","pos":[3154,3230]},{"pos":[3240,3247],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3251,3368],"content":"The <ph id=\"ph1\">`&lt;MethodInstantiation&gt;`</ph> element overrides the runtime reflection policy of its corresponding open generic method.","source":"The `<MethodInstantiation>` element overrides the runtime reflection policy of its corresponding open generic method."},{"pos":[3377,3385],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3389,3541],"content":"<bpt id=\"p1\">[</bpt>Runtime Directives (rd.xml) Configuration File Reference<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept>","source":"[Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)"},{"pos":[3544,3638],"content":"<bpt id=\"p1\">[</bpt>Runtime Directive Elements<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-elements.md)</ept>","source":"[Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md)"},{"pos":[3641,3749],"content":"<bpt id=\"p1\">[</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>","source":"[Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)"},{"pos":[3752,3836],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Method&gt; Element<ept id=\"p1\">](../../../docs/framework/net-native/method-element-net-native.md)</ept>","source":"[\\<Method> Element](../../../docs/framework/net-native/method-element-net-native.md)"}]}