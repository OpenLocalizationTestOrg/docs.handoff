{"content":"---\ntitle: \"Private (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.Private\"\nhelpviewer_keywords: \n  - \"Private keyword [Visual Basic]\"\n  - \"Private keyword [Visual Basic], syntax\"\nms.assetid: aba74a2e-5824-4613-bf63-b9ec7787f4e6\n---\n# Private (Visual Basic)\nSpecifies that one or more declared programming elements are accessible only from within their declaration context, including from within any contained types.  \n  \n## Remarks  \n If a programming element represents proprietary functionality, or contains confidential data, you usually want to limit access to it as strictly as possible. You achieve the maximum limitation by allowing only the module, class, or structure that defines it to access it. To limit access to an element in this way, you can declare it with `Private`.  \n\n> [!NOTE]\n> You can also use the [Private Protected](private-protected.md) access modifier, which makes a member accessible from within that class and from derived classes located in its containing assembly.\n\n## Rules  \n\n-   **Declaration Context.** You can use `Private` only at module level. This means the declaration context for a `Private` element must be a module, class, or structure, and cannot be a source file, namespace, interface, or procedure.  \n  \n## Behavior  \n  \n-   **Access Level.** All code within a declaration context can access its `Private` elements. This includes code within a contained type, such as a nested class or an assignment expression in an enumeration. No code outside of the declaration context can access its `Private` elements.  \n  \n-   **Access Modifiers.** The keywords that specify access level are called *access modifiers*. For a comparison of the access modifiers, see [Access levels in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md).  \n  \n The `Private` modifier can be used in these contexts:  \n  \n [Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)  \n  \n [Const Statement](../../../visual-basic/language-reference/statements/const-statement.md)  \n  \n [Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)  \n  \n [Delegate Statement](../../../visual-basic/language-reference/statements/delegate-statement.md)  \n  \n [Dim Statement](../../../visual-basic/language-reference/statements/dim-statement.md)  \n  \n [Enum Statement](../../../visual-basic/language-reference/statements/enum-statement.md)  \n  \n [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)  \n  \n [Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)  \n  \n [Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md)  \n  \n [Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)  \n  \n [Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md)  \n  \n [Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)  \n  \n## See also\n\n- [Public](../../../visual-basic/language-reference/modifiers/public.md)\n- [Protected](../../../visual-basic/language-reference/modifiers/protected.md)\n- [Friend](../../../visual-basic/language-reference/modifiers/friend.md)\n- [Private Protected](./private-protected.md)\n- [Protected Friend](./protected-friend.md)    [Access levels in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)\n- [Procedures](../../../visual-basic/programming-guide/language-features/procedures/index.md)\n- [Structures](../../../visual-basic/programming-guide/language-features/data-types/structures.md)\n- [Objects and Classes](../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)\n","nodes":[{"pos":[4,239],"embed":true,"restype":"x-metadata","content":"title: \"Private (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.Private\"\nhelpviewer_keywords: \n  - \"Private keyword [Visual Basic]\"\n  - \"Private keyword [Visual Basic], syntax\"\nms.assetid: aba74a2e-5824-4613-bf63-b9ec7787f4e6","nodes":[{"content":"Private (Visual Basic)","nodes":[{"pos":[0,22],"content":"Private (Visual Basic)","nodes":[{"content":"Private (Visual Basic)","pos":[0,22]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[246,268],"content":"Private (Visual Basic)","linkify":"Private (Visual Basic)","nodes":[{"content":"Private (Visual Basic)","pos":[0,22]}]},{"content":"Specifies that one or more declared programming elements are accessible only from within their declaration context, including from within any contained types.","pos":[269,427]},{"pos":[436,443],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If a programming element represents proprietary functionality, or contains confidential data, you usually want to limit access to it as strictly as possible.","pos":[447,604]},{"content":"You achieve the maximum limitation by allowing only the module, class, or structure that defines it to access it.","pos":[605,718]},{"content":"To limit access to an element in this way, you can declare it with <ph id=\"ph1\">`Private`</ph>.","pos":[719,796],"source":" To limit access to an element in this way, you can declare it with `Private`."},{"pos":[802,1007],"content":"[!NOTE]\nYou can also use the [Private Protected](private-protected.md) access modifier, which makes a member accessible from within that class and from derived classes located in its containing assembly.","leadings":["","> "],"nodes":[{"content":"You can also use the <bpt id=\"p1\">[</bpt>Private Protected<ept id=\"p1\">](private-protected.md)</ept> access modifier, which makes a member accessible from within that class and from derived classes located in its containing assembly.","pos":[8,203],"source":"You can also use the [Private Protected](private-protected.md) access modifier, which makes a member accessible from within that class and from derived classes located in its containing assembly."}]},{"pos":[1012,1017],"content":"Rules","linkify":"Rules","nodes":[{"content":"Rules","pos":[0,5]}]},{"content":"<bpt id=\"p1\">**</bpt>Declaration Context.<ept id=\"p1\">**</ept>","pos":[1025,1049],"source":"**Declaration Context.**"},{"content":"You can use <ph id=\"ph1\">`Private`</ph> only at module level.","pos":[1050,1093],"source":" You can use `Private` only at module level."},{"content":"This means the declaration context for a <ph id=\"ph1\">`Private`</ph> element must be a module, class, or structure, and cannot be a source file, namespace, interface, or procedure.","pos":[1094,1256],"source":" This means the declaration context for a `Private` element must be a module, class, or structure, and cannot be a source file, namespace, interface, or procedure."},{"pos":[1265,1273],"content":"Behavior","linkify":"Behavior","nodes":[{"content":"Behavior","pos":[0,8]}]},{"content":"<bpt id=\"p1\">**</bpt>Access Level.<ept id=\"p1\">**</ept>","pos":[1283,1300],"source":"**Access Level.**"},{"content":"All code within a declaration context can access its <ph id=\"ph1\">`Private`</ph> elements.","pos":[1301,1373],"source":" All code within a declaration context can access its `Private` elements."},{"content":"This includes code within a contained type, such as a nested class or an assignment expression in an enumeration.","pos":[1374,1487]},{"content":"No code outside of the declaration context can access its <ph id=\"ph1\">`Private`</ph> elements.","pos":[1488,1565],"source":" No code outside of the declaration context can access its `Private` elements."},{"content":"<bpt id=\"p1\">**</bpt>Access Modifiers.<ept id=\"p1\">**</ept>","pos":[1575,1596],"source":"**Access Modifiers.**"},{"content":"The keywords that specify access level are called <bpt id=\"p1\">*</bpt>access modifiers<ept id=\"p1\">*</ept>.","pos":[1597,1666],"source":" The keywords that specify access level are called *access modifiers*."},{"content":"For a comparison of the access modifiers, see <bpt id=\"p1\">[</bpt>Access levels in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.","pos":[1667,1839],"source":" For a comparison of the access modifiers, see [Access levels in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)."},{"pos":[1846,1899],"content":"The <ph id=\"ph1\">`Private`</ph> modifier can be used in these contexts:","source":"The `Private` modifier can be used in these contexts:"},{"pos":[1906,1995],"content":"<bpt id=\"p1\">[</bpt>Class Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/class-statement.md)</ept>","source":"[Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)"},{"pos":[2002,2091],"content":"<bpt id=\"p1\">[</bpt>Const Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/const-statement.md)</ept>","source":"[Const Statement](../../../visual-basic/language-reference/statements/const-statement.md)"},{"pos":[2098,2191],"content":"<bpt id=\"p1\">[</bpt>Declare Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept>","source":"[Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)"},{"pos":[2198,2293],"content":"<bpt id=\"p1\">[</bpt>Delegate Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept>","source":"[Delegate Statement](../../../visual-basic/language-reference/statements/delegate-statement.md)"},{"pos":[2300,2385],"content":"<bpt id=\"p1\">[</bpt>Dim Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/dim-statement.md)</ept>","source":"[Dim Statement](../../../visual-basic/language-reference/statements/dim-statement.md)"},{"pos":[2392,2479],"content":"<bpt id=\"p1\">[</bpt>Enum Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/enum-statement.md)</ept>","source":"[Enum Statement](../../../visual-basic/language-reference/statements/enum-statement.md)"},{"pos":[2486,2575],"content":"<bpt id=\"p1\">[</bpt>Event Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>","source":"[Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)"},{"pos":[2582,2677],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[2684,2781],"content":"<bpt id=\"p1\">[</bpt>Interface Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/interface-statement.md)</ept>","source":"[Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md)"},{"pos":[2788,2883],"content":"<bpt id=\"p1\">[</bpt>Property Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/property-statement.md)</ept>","source":"[Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)"},{"pos":[2890,2987],"content":"<bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept>","source":"[Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md)"},{"pos":[2994,3079],"content":"<bpt id=\"p1\">[</bpt>Sub Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept>","source":"[Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)"},{"pos":[3088,3096],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3100,3170],"content":"<bpt id=\"p1\">[</bpt>Public<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/public.md)</ept>","source":"[Public](../../../visual-basic/language-reference/modifiers/public.md)"},{"pos":[3173,3249],"content":"<bpt id=\"p1\">[</bpt>Protected<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/protected.md)</ept>","source":"[Protected](../../../visual-basic/language-reference/modifiers/protected.md)"},{"pos":[3252,3322],"content":"<bpt id=\"p1\">[</bpt>Friend<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/friend.md)</ept>","source":"[Friend](../../../visual-basic/language-reference/modifiers/friend.md)"},{"pos":[3325,3368],"content":"<bpt id=\"p1\">[</bpt>Private Protected<ept id=\"p1\">](./private-protected.md)</ept>","source":"[Private Protected](./private-protected.md)"},{"pos":[3371,3541],"content":"<bpt id=\"p1\">[</bpt>Protected Friend<ept id=\"p1\">](./protected-friend.md)</ept>    <bpt id=\"p2\">[</bpt>Access levels in Visual Basic<ept id=\"p2\">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>","source":"[Protected Friend](./protected-friend.md)    [Access levels in Visual Basic](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)"},{"pos":[3544,3635],"content":"<bpt id=\"p1\">[</bpt>Procedures<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/index.md)</ept>","source":"[Procedures](../../../visual-basic/programming-guide/language-features/procedures/index.md)"},{"pos":[3638,3734],"content":"<bpt id=\"p1\">[</bpt>Structures<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept>","source":"[Structures](../../../visual-basic/programming-guide/language-features/data-types/structures.md)"},{"pos":[3737,3846],"content":"<bpt id=\"p1\">[</bpt>Objects and Classes<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept>","source":"[Objects and Classes](../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)"}]}