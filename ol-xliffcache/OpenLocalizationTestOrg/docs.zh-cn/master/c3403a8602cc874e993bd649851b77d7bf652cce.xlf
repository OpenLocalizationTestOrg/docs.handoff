<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="timing-behaviors-overview.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3403a8602cc874e993bd649851b77d7bf652cce</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\timing-behaviors-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68db78cbd6b8c6ef5640ddad177e2baf34c14c56</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6c356c112f856604e893bed2b7a8ffbb5100533</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Timing Behaviors Overview</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Timing Behaviors Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes the timing behaviors of animations and other <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To understand this topic, you should be familiar with basic animation features.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Animation Overview<ept id="p1">](animation-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Timeline Types</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> represents a segment of time.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It provides properties that enable you to specify the length of that segment, when it should start, how many times it will repeat, how fast time progresses in that segment, and more.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Classes that inherit from the timeline class provide additional functionality, such as animation and media playback.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides the following <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> types.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Timeline type</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Abstract base class for <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects that generate output values for animating properties.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Generates output from a media file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A type of <ph id="ph1">&lt;xref:System.Windows.Media.Animation.TimelineGroup&gt;</ph> that groups and controls child <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A type of <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ParallelTimeline&gt;</ph> that provides targeting information for the Timeline objects it contains.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Abstract base class that defines timing behaviors.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Abstract class for <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects that can contain other <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Properties that Control the Length of a Timeline</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> represents a segment of time, and the length of a timeline can be described in different ways.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following table defines several terms for describing the length of a timeline.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Simple duration</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The length of time a timeline takes to make a single forward iteration.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>One repetition</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The length of time it takes for a timeline to play forward once and, if the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> property is true, play backwards once.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Active period</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The length of time it takes for a timeline to complete all the repetitions specified by its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.RepeatBehavior&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.RepeatBehavior&gt;</ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Duration Property</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>As previously mentioned, a timeline represents a segment of time.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The length of that segment is determined by the timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When a timeline reaches the end of its duration, it stops playing.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the timeline has child timelines, they stop playing as well.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the case of an animation, the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> specifies how long the animation takes to transition from its starting value to its ending value.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A timeline's duration is sometimes called its <bpt id="p1">*</bpt>simple duration<ept id="p1">*</ept>, to distinguish between the duration of a single iteration and the total length of time the animation plays including repetitions.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can specify a duration using a finite time value or the special values <ph id="ph1">&lt;xref:System.Windows.Duration.Automatic%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Duration.Forever%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An animation's duration should resolve to a <ph id="ph1">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> value, so it can transition between values.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of five seconds.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Container timelines, such as <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline&gt;</ph>, have a default duration of <ph id="ph3">&lt;xref:System.Windows.Duration.Automatic%2A&gt;</ph>, which means they automatically end when their last child stops playing.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> whose <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> resolves to five seconds, the length of time it takes all its child <ph id="ph3">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> objects to complete.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>By setting the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of a container timeline to a <ph id="ph2">&lt;xref:System.Windows.Duration.TimeSpan%2A&gt;</ph> value, you can force to play longer or shorter than its child <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects would play.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> to a value that's smaller than the length of the container timeline's child <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects, the child <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects stop playing when the container timeline does.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> from the preceding examples to three seconds.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>As a result, the first <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> stops progressing after three seconds, when it has animated the target rectangle's width to 60.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The RepeatBehavior Property</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> controls how many times it repeats its simple duration.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> property, you can specify how many times the timeline plays (an iteration <ph id="ph2">&lt;xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A&gt;</ph>) or the total length of time it should play (a repeat <ph id="ph3">&lt;xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In either case, the animation goes through as many beginning-to-end runs as necessary to fill the requested count or duration.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>By default, timelines have an iteration count of <ph id="ph1">`1.0`</ph>, which means they play once and do not repeat at all.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> property to make a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> play for twice its simple duration by specifying an iteration count.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The next example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> property to make the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> play for half its simple duration.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Media.Animation.RepeatBehavior.Forever%2A&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> repeats until stopped interactively or by the timing system.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> property to make the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> play indefinitely.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For an additional example, see <bpt id="p1">[</bpt>Repeat an Animation<ept id="p1">](how-to-repeat-an-animation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The AutoReverse Property</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> property specifies whether a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> will play backwards at the end of each forward iteration.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The following example sets to the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> to <ph id="ph3">`true`</ph>; as a result, it animates from zero to 100, and then from 100 to zero.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>It plays for a total of 10 seconds.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A&gt;</ph> value to specify the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> property of that <ph id="ph5">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> is <ph id="ph6">`true`</ph>, a single repetition consists of one forward iteration followed by one backwards iteration.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> from the preceding example to a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A&gt;</ph> of two.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> plays for 20 seconds: forward for five seconds, backwards for five seconds, forward for 5 seconds again, and then backwards for five seconds.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If a container timeline has child <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects, they reverse when the container timeline does.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For additional examples, see <bpt id="p1">[</bpt>Specify Whether a Timeline Automatically Reverses<ept id="p1">](how-to-specify-whether-a-timeline-automatically-reverses.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The BeginTime Property</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> property enables you to specify when a timeline starts.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A timeline's begin time is relative to its parent timeline.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A begin time of zero seconds means the timeline starts as soon as it parent starts; any other value creates an offset between when the parent timeline starts playing and when the child timeline plays.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For example, a begin time of two seconds means the timeline starts playing when its parent has reached a time of two seconds.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, all timelines have a begin time of zero seconds.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You may also set a timeline's begin time to <ph id="ph1">`null`</ph>, which prevents the timeline from starting.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>, you specify null using the <bpt id="p1">[</bpt>x:Null Markup Extension<ept id="p1">](../../xaml-services/x-null-markup-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Note that the begin time is not applied each time a timeline repeats because of its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you were to create an animation with a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> of 10 seconds and a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.RepeatBehavior&gt;</ph> of <ph id="ph3">&lt;xref:System.Windows.Media.Animation.RepeatBehavior.Forever%2A&gt;</ph>, there would be a 10-second delay before the animation played for the first time, but not for each successive repetition.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>However, if the animation's parent timeline were to restart or repeat, the 10-second delay would occur.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> property is useful for staggering timelines.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> that has two child <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The first animation has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of five seconds, and the second has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of 3 seconds.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> of the second <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> to 5 seconds, so that it begins playing after the first <ph id="ph3">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> ends.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The FillBehavior Property</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> reaches the end of its total active duration, the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> property specifies whether it stops or holds its last value.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An animation with a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> of <ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph> "holds" its output value: the property being animated retains the last value of the animation.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A value of <ph id="ph1">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph> causes that the animation stop affecting its target property after it ends.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> that has two child <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Both <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> objects animate the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> from 0 to 100.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> elements have non-animated <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> values of 500 [device independent pixels].</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> property of the first <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>, the default value.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>As a result, the Width of the Rectangle stays at 100 after the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> ends.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> property of the second <ph id="ph2">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> of the second <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> reverts to 500 after the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> ends.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Properties that Control the Speed of a Timeline</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> class provides three properties for specifying its speed:</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> – Specifies that rate, relative to its parent, at which time progresses for a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Values greater than one increase the speed of the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> and its child <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects; values between zero and one slow it down.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A value of one indicates that <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> progresses at the same rate as its parent.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> setting  of a container timeline affects all of its child <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects as well.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A&gt;</ph> – Specifies the percentage of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of a Timeline spent accelerating.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Accelerate or Decelerate an Animation<ept id="p1">](how-to-accelerate-or-decelerate-an-animation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A&gt;</ph> - Specifies the percentage of the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of a Timeline spent decelerating.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Accelerate or Decelerate an Animation<ept id="p1">](how-to-accelerate-or-decelerate-an-animation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Animation Overview<ept id="p1">](animation-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](animation-and-timing-system-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Timing Events Overview<ept id="p1">](timing-events-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](animation-and-timing-how-to-topics.md)</ept></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Animation Timing Behavior Sample<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=159970)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>