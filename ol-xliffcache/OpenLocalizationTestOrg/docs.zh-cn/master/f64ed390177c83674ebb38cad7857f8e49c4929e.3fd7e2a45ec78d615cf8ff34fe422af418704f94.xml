{"content":"---\ntitle: \"Client-Side UI Automation Provider Implementation | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-bcl\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"UI Automation, client-side provider implementation\"\n  - \"client-side UI Automation provider, implementation\"\n  - \"provider implementation, UI Automation\"\nms.assetid: 3584c0a1-9cd0-4968-8b63-b06390890ef6\ncaps.latest.revision: 14\nauthor: \"Xansky\"\nms.author: \"mhopkins\"\nmanager: \"markl\"\n---\n# Client-Side UI Automation Provider Implementation\n> [!NOTE]\n>  This documentation is intended for .NET Framework developers who want to use the managed [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] classes defined in the <xref:System.Windows.Automation> namespace. For the latest information about [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)], see [Windows Automation API: UI Automation](http://go.microsoft.com/fwlink/?LinkID=156746).  \n  \n Several different [!INCLUDE[TLA#tla_ui](../../../includes/tlasharptla-ui-md.md)] frameworks are in use within [!INCLUDE[TLA#tla_ms](../../../includes/tlasharptla-ms-md.md)] operating systems, including [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)], [!INCLUDE[TLA#tla_winforms](../../../includes/tlasharptla-winforms-md.md)], and [!INCLUDE[TLA#tla_winclient](../../../includes/tlasharptla-winclient-md.md)]. [!INCLUDE[TLA#tla_uiautomation](../../../includes/tlasharptla-uiautomation-md.md)] exposes information about UI elements to clients. However, [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] does not itself have awareness of the different types of controls that exist in these frameworks and the techniques that are needed to extract information from them. Instead, it leaves this task to objects called providers. A provider extracts information from a specific control and hands that information to [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)], which then presents it to the client in a consistent manner.  \n  \n Providers can exist either on the server side or on the client side. A server-side provider is implemented by the control itself. [!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)] elements implement providers, as can any third-party controls written with [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] in mind.  \n  \n However, older controls such as those in [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winforms](../../../includes/tlasharptla-winforms-md.md)] do not directly support [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]. These controls are served instead by providers that exist in the client process and obtain information about controls using cross-process communication; for example, by monitoring windows messages to and from the controls. Such client-side providers are sometimes called proxies.  \n  \n [!INCLUDE[TLA2#tla_winvista](../../../includes/tla2sharptla-winvista-md.md)] supplies providers for standard [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)] and [!INCLUDE[TLA2#tla_winforms](../../../includes/tla2sharptla-winforms-md.md)] controls. In addition, a fallback provider gives partial [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] support to any control that is not served by another server-side provider or proxy but has a [!INCLUDE[TLA#tla_aa](../../../includes/tlasharptla-aa-md.md)] implementation. All these providers are automatically loaded and available to client applications.  \n  \n For more information on support for [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)] and [!INCLUDE[TLA2#tla_winforms](../../../includes/tla2sharptla-winforms-md.md)] controls, see [UI Automation Support for Standard Controls](../../../docs/framework/ui-automation/ui-automation-support-for-standard-controls.md).  \n  \n Applications can also register other client-side providers.  \n  \n<a name=\"Distributing_Client-Side_Providers\"></a>   \n## Distributing Client-Side Providers  \n [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] expects to find client-side providers in a managed-code assembly. The namespace in this assembly should have the same name as the assembly. For example, an assembly called ContosoProxies.dll would contain the ContosoProxies namespace. Within the namespace, create a <xref:UIAutomationClientsideProviders.UIAutomationClientSideProviders> class. In the implementation of the static <xref:UIAutomationClientsideProviders.UIAutomationClientSideProviders.ClientSideProviderDescriptionTable> field, create an array of <xref:System.Windows.Automation.ClientSideProviderDescription> structures describing the providers.  \n  \n<a name=\"Registering_and_Configuring_Client-Side_Providers\"></a>   \n## Registering and Configuring Client-Side Providers  \n Client-side providers in a [!INCLUDE[TLA#tla_dll](../../../includes/tlasharptla-dll-md.md)] are loaded by calling <xref:System.Windows.Automation.ClientSettings.RegisterClientSideProviderAssembly%2A>. No further action is required by a client application to make use of the providers.  \n  \n Providers implemented in the client's own code are registered by using <xref:System.Windows.Automation.ClientSettings.RegisterClientSideProviders%2A>. This method takes as an argument an array of <xref:System.Windows.Automation.ClientSideProviderDescription> structures, each of which specifies the following properties:  \n  \n-   A callback function that creates the provider object.  \n  \n-   The class name of the controls that the provider will serve.  \n  \n-   The image name of the application (usually the full name of the executable file) that the provider will serve.  \n  \n-   Flags that govern how the class name is matched against window classes found in the target application.  \n  \n The last two parameters are optional. The client might specify the image name of the target application when it wants to use different providers for different applications. For example, the client might use one provider for a [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)] list view control in a known application that supports the Multiple View pattern, and another for a similar control in another known application that does not.  \n  \n## See Also  \n [Create a Client-Side UI Automation Provider](../../../docs/framework/ui-automation/create-a-client-side-ui-automation-provider.md)   \n [Implement UI Automation Providers in a Client Application](../../../docs/framework/ui-automation/implement-ui-automation-providers-in-a-client-application.md)","nodes":[{"pos":[12,78],"content":"Client-Side UI Automation Provider Implementation | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Client-Side UI Automation Provider Implementation | Microsoft Docs","pos":[0,66]}]},{"pos":[559,608],"content":"Client-Side UI Automation Provider Implementation","linkify":"Client-Side UI Automation Provider Implementation","nodes":[{"content":"Client-Side UI Automation Provider Implementation","pos":[0,49]}]},{"pos":[611,1073],"content":"[!NOTE]\n This documentation is intended for .NET Framework developers who want to use the managed [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] classes defined in the <xref:System.Windows.Automation> namespace. For the latest information about [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)], see [Windows Automation API: UI Automation](http://go.microsoft.com/fwlink/?LinkID=156746).","leadings":["","> "],"nodes":[{"content":" This documentation is intended for .NET Framework developers who want to use the managed [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] classes defined in the <xref:System.Windows.Automation> namespace. For the latest information about [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)], see [Windows Automation API: UI Automation](http://go.microsoft.com/fwlink/?LinkID=156746).","pos":[8,460],"nodes":[{"content":"This documentation is intended for .NET Framework developers who want to use the managed <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> classes defined in the <ph id=\"ph2\">&lt;xref:System.Windows.Automation&gt;</ph> namespace.","pos":[1,241],"source":" This documentation is intended for .NET Framework developers who want to use the managed [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] classes defined in the <xref:System.Windows.Automation> namespace."},{"content":"For the latest information about <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Windows Automation API: UI Automation<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=156746)</ept>.","pos":[242,452],"source":" For the latest information about [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)], see [Windows Automation API: UI Automation](http://go.microsoft.com/fwlink/?LinkID=156746)."}]}]},{"content":"Several different <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](../../../includes/tlasharptla-ui-md.md)]</ph> frameworks are in use within <ph id=\"ph2\">[!INCLUDE[TLA#tla_ms](../../../includes/tlasharptla-ms-md.md)]</ph> operating systems, including <ph id=\"ph3\">[!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)]</ph>, <ph id=\"ph4\">[!INCLUDE[TLA#tla_winforms](../../../includes/tlasharptla-winforms-md.md)]</ph>, and <ph id=\"ph5\">[!INCLUDE[TLA#tla_winclient](../../../includes/tlasharptla-winclient-md.md)]</ph>.","pos":[1080,1511],"source":"Several different [!INCLUDE[TLA#tla_ui](../../../includes/tlasharptla-ui-md.md)] frameworks are in use within [!INCLUDE[TLA#tla_ms](../../../includes/tlasharptla-ms-md.md)] operating systems, including [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)], [!INCLUDE[TLA#tla_winforms](../../../includes/tlasharptla-winforms-md.md)], and [!INCLUDE[TLA#tla_winclient](../../../includes/tlasharptla-winclient-md.md)]."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_uiautomation](../../../includes/tlasharptla-uiautomation-md.md)]</ph> exposes information about UI elements to clients.","pos":[1512,1644],"source":"[!INCLUDE[TLA#tla_uiautomation](../../../includes/tlasharptla-uiautomation-md.md)] exposes information about UI elements to clients."},{"content":"However, <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> does not itself have awareness of the different types of controls that exist in these frameworks and the techniques that are needed to extract information from them.","pos":[1645,1904],"source":" However, [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] does not itself have awareness of the different types of controls that exist in these frameworks and the techniques that are needed to extract information from them."},{"content":"Instead, it leaves this task to objects called providers.","pos":[1905,1962]},{"content":"A provider extracts information from a specific control and hands that information to <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>, which then presents it to the client in a consistent manner.","pos":[1963,2195],"source":" A provider extracts information from a specific control and hands that information to [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)], which then presents it to the client in a consistent manner."},{"content":"Providers can exist either on the server side or on the client side.","pos":[2202,2270]},{"content":"A server-side provider is implemented by the control itself.","pos":[2271,2331]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)]</ph> elements implement providers, as can any third-party controls written with <ph id=\"ph2\">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> in mind.","pos":[2332,2579],"source":"[!INCLUDE[TLA2#tla_winclient](../../../includes/tla2sharptla-winclient-md.md)] elements implement providers, as can any third-party controls written with [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] in mind."},{"content":"However, older controls such as those in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[TLA#tla_winforms](../../../includes/tlasharptla-winforms-md.md)]</ph> do not directly support <ph id=\"ph3\">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph>.","pos":[2586,2886],"source":"However, older controls such as those in [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winforms](../../../includes/tlasharptla-winforms-md.md)] do not directly support [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]."},{"content":"These controls are served instead by providers that exist in the client process and obtain information about controls using cross-process communication; for example, by monitoring windows messages to and from the controls.","pos":[2887,3109]},{"content":"Such client-side providers are sometimes called proxies.","pos":[3110,3166]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winvista](../../../includes/tla2sharptla-winvista-md.md)]</ph> supplies providers for standard <ph id=\"ph2\">[!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)]</ph> and <ph id=\"ph3\">[!INCLUDE[TLA2#tla_winforms](../../../includes/tla2sharptla-winforms-md.md)]</ph> controls.","pos":[3173,3443],"source":"[!INCLUDE[TLA2#tla_winvista](../../../includes/tla2sharptla-winvista-md.md)] supplies providers for standard [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)] and [!INCLUDE[TLA2#tla_winforms](../../../includes/tla2sharptla-winforms-md.md)] controls."},{"content":"In addition, a fallback provider gives partial <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> support to any control that is not served by another server-side provider or proxy but has a <ph id=\"ph2\">[!INCLUDE[TLA#tla_aa](../../../includes/tlasharptla-aa-md.md)]</ph> implementation.","pos":[3444,3747],"source":" In addition, a fallback provider gives partial [!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] support to any control that is not served by another server-side provider or proxy but has a [!INCLUDE[TLA#tla_aa](../../../includes/tlasharptla-aa-md.md)] implementation."},{"content":"All these providers are automatically loaded and available to client applications.","pos":[3748,3830]},{"pos":[3837,4171],"content":"For more information on support for <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winforms](../../../includes/tla2sharptla-winforms-md.md)]</ph> controls, see <bpt id=\"p1\">[</bpt>UI Automation Support for Standard Controls<ept id=\"p1\">](../../../docs/framework/ui-automation/ui-automation-support-for-standard-controls.md)</ept>.","source":"For more information on support for [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)] and [!INCLUDE[TLA2#tla_winforms](../../../includes/tla2sharptla-winforms-md.md)] controls, see [UI Automation Support for Standard Controls](../../../docs/framework/ui-automation/ui-automation-support-for-standard-controls.md)."},{"content":"Applications can also register other client-side providers.","pos":[4178,4237]},{"pos":[4299,4333],"content":"Distributing Client-Side Providers","linkify":"Distributing Client-Side Providers","nodes":[{"content":"Distributing Client-Side Providers","pos":[0,34]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)]</ph> expects to find client-side providers in a managed-code assembly.","pos":[4337,4487],"source":"[!INCLUDE[TLA2#tla_uiautomation](../../../includes/tla2sharptla-uiautomation-md.md)] expects to find client-side providers in a managed-code assembly."},{"content":"The namespace in this assembly should have the same name as the assembly.","pos":[4488,4561]},{"content":"For example, an assembly called ContosoProxies.dll would contain the ContosoProxies namespace.","pos":[4562,4656]},{"content":"Within the namespace, create a <ph id=\"ph1\">&lt;xref:UIAutomationClientsideProviders.UIAutomationClientSideProviders&gt;</ph> class.","pos":[4657,4765],"source":" Within the namespace, create a <xref:UIAutomationClientsideProviders.UIAutomationClientSideProviders> class."},{"content":"In the implementation of the static <ph id=\"ph1\">&lt;xref:UIAutomationClientsideProviders.UIAutomationClientSideProviders.ClientSideProviderDescriptionTable&gt;</ph> field, create an array of <ph id=\"ph2\">&lt;xref:System.Windows.Automation.ClientSideProviderDescription&gt;</ph> structures describing the providers.","pos":[4766,5033],"source":" In the implementation of the static <xref:UIAutomationClientsideProviders.UIAutomationClientSideProviders.ClientSideProviderDescriptionTable> field, create an array of <xref:System.Windows.Automation.ClientSideProviderDescription> structures describing the providers."},{"pos":[5110,5159],"content":"Registering and Configuring Client-Side Providers","linkify":"Registering and Configuring Client-Side Providers","nodes":[{"content":"Registering and Configuring Client-Side Providers","pos":[0,49]}]},{"content":"Client-side providers in a <ph id=\"ph1\">[!INCLUDE[TLA#tla_dll](../../../includes/tlasharptla-dll-md.md)]</ph> are loaded by calling <ph id=\"ph2\">&lt;xref:System.Windows.Automation.ClientSettings.RegisterClientSideProviderAssembly%2A&gt;</ph>.","pos":[5163,5363],"source":"Client-side providers in a [!INCLUDE[TLA#tla_dll](../../../includes/tlasharptla-dll-md.md)] are loaded by calling <xref:System.Windows.Automation.ClientSettings.RegisterClientSideProviderAssembly%2A>."},{"content":"No further action is required by a client application to make use of the providers.","pos":[5364,5447]},{"content":"Providers implemented in the client's own code are registered by using <ph id=\"ph1\">&lt;xref:System.Windows.Automation.ClientSettings.RegisterClientSideProviders%2A&gt;</ph>.","pos":[5454,5604],"source":"Providers implemented in the client's own code are registered by using <xref:System.Windows.Automation.ClientSettings.RegisterClientSideProviders%2A>."},{"content":"This method takes as an argument an array of <ph id=\"ph1\">&lt;xref:System.Windows.Automation.ClientSideProviderDescription&gt;</ph> structures, each of which specifies the following properties:","pos":[5605,5774],"source":" This method takes as an argument an array of <xref:System.Windows.Automation.ClientSideProviderDescription> structures, each of which specifies the following properties:"},{"content":"A callback function that creates the provider object.","pos":[5784,5837]},{"content":"The class name of the controls that the provider will serve.","pos":[5847,5907]},{"content":"The image name of the application (usually the full name of the executable file) that the provider will serve.","pos":[5917,6027]},{"content":"Flags that govern how the class name is matched against window classes found in the target application.","pos":[6037,6140]},{"content":"The last two parameters are optional.","pos":[6147,6184]},{"content":"The client might specify the image name of the target application when it wants to use different providers for different applications.","pos":[6185,6319]},{"content":"For example, the client might use one provider for a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)]</ph> list view control in a known application that supports the Multiple View pattern, and another for a similar control in another known application that does not.","pos":[6320,6603],"source":" For example, the client might use one provider for a [!INCLUDE[TLA2#tla_win32](../../../includes/tla2sharptla-win32-md.md)] list view control in a known application that supports the Multiple View pattern, and another for a similar control in another known application that does not."},{"pos":[6612,6620],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Create a Client-Side UI Automation Provider<ept id=\"p1\">](../../../docs/framework/ui-automation/create-a-client-side-ui-automation-provider.md)</ept><ph id=\"ph1\"> </ph>","pos":[6624,6756],"source":"[Create a Client-Side UI Automation Provider](../../../docs/framework/ui-automation/create-a-client-side-ui-automation-provider.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Implement UI Automation Providers in a Client Application<ept id=\"p1\">](../../../docs/framework/ui-automation/implement-ui-automation-providers-in-a-client-application.md)</ept>","pos":[6759,6919],"source":" [Implement UI Automation Providers in a Client Application](../../../docs/framework/ui-automation/implement-ui-automation-providers-in-a-client-application.md)"}]}