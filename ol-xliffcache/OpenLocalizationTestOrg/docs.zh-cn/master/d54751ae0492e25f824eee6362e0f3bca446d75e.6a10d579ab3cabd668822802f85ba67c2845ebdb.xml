{"content":"---\ntitle: \"Mitigation: WPF Window Rendering\"\nms.date: \"03/30/2017\"\nms.assetid: 28ed6bf8-141b-4b73-a4e3-44a99fae5084\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# Mitigation: WPF Window Rendering\nIn the [!INCLUDE[net_v46](../../../includes/net-v46-md.md)] running on Windows 8 and above, the entire window is rendered without clipping when it extends outside of single display in a multi-monitor scenario.  \n  \n## Impact  \n In general, rendering an entire window across multiple monitors without clipping is the expected behavior. However, on Windows 7 and earlier versions, WPF windows are clipped when they extend beyond a single display because rendering a portion of the window on the second monitor has a significant performance impact.  \n  \n The precise impact of rendering WPF windows across monitors on Windows 8 and above is not precisely quantifiable since it depends on a large number of factors. In some cases, it may still produce an undesirable impact on performance, particularly for users who run graphics-intensive applications and have windows straddling monitors. In other cases, you may simply want a consistent behavior across .NET Framework versions.  \n  \n## Mitigation  \n You can disable this change and revert to the previous behavior of clipping a WPF window when it extends beyond a single display. There are two ways to do this:  \n  \n-   By adding the `<EnableMultiMonitorDisplayClipping>` element to the `<appSettings>` section of your application configuration file, you can disable or enable this behavior on apps running on Windows 8 or later. For example, the following configuration section disables rendering without clipping:  \n  \n    ```xml  \n    <appSettings>  \n        <add key=\"EnableMultiMonitorDisplayClipping\" value=\"true\"/>  \n      </appSettings>  \n    ```  \n  \n     The `<EnableMultiMonitorDisplayClipping>` configuration setting can have either of two values:  \n  \n    -   `true`, to enable clipping of windows to monitor bounds during rendering.  \n  \n    -   `false`, to disable clipping of windows to monitor bounds during rendering.  \n  \n-   By setting the <xref:System.Windows.CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping%2A> property to `true` at app startup.  \n  \n## See also\n\n- [Runtime Changes](../../../docs/framework/migration-guide/runtime-changes-in-the-net-framework-4-6.md)\n","nodes":[{"pos":[4,156],"embed":true,"restype":"x-metadata","content":"title: \"Mitigation: WPF Window Rendering\"\nms.date: \"03/30/2017\"\nms.assetid: 28ed6bf8-141b-4b73-a4e3-44a99fae5084\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"Mitigation: WPF Window Rendering","nodes":[{"pos":[0,32],"content":"Mitigation: WPF Window Rendering","nodes":[{"content":"Mitigation: WPF Window Rendering","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[163,195],"content":"Mitigation: WPF Window Rendering","linkify":"Mitigation: WPF Window Rendering","nodes":[{"content":"Mitigation: WPF Window Rendering","pos":[0,32]}]},{"pos":[196,405],"content":"In the <ph id=\"ph1\">[!INCLUDE[net_v46](../../../includes/net-v46-md.md)]</ph> running on Windows 8 and above, the entire window is rendered without clipping when it extends outside of single display in a multi-monitor scenario.","source":"In the [!INCLUDE[net_v46](../../../includes/net-v46-md.md)] running on Windows 8 and above, the entire window is rendered without clipping when it extends outside of single display in a multi-monitor scenario."},{"pos":[414,420],"content":"Impact","linkify":"Impact","nodes":[{"content":"Impact","pos":[0,6]}]},{"content":"In general, rendering an entire window across multiple monitors without clipping is the expected behavior.","pos":[424,530]},{"content":"However, on Windows 7 and earlier versions, WPF windows are clipped when they extend beyond a single display because rendering a portion of the window on the second monitor has a significant performance impact.","pos":[531,741]},{"content":"The precise impact of rendering WPF windows across monitors on Windows 8 and above is not precisely quantifiable since it depends on a large number of factors.","pos":[748,907]},{"content":"In some cases, it may still produce an undesirable impact on performance, particularly for users who run graphics-intensive applications and have windows straddling monitors.","pos":[908,1082]},{"content":"In other cases, you may simply want a consistent behavior across .NET Framework versions.","pos":[1083,1172]},{"pos":[1181,1191],"content":"Mitigation","linkify":"Mitigation","nodes":[{"content":"Mitigation","pos":[0,10]}]},{"content":"You can disable this change and revert to the previous behavior of clipping a WPF window when it extends beyond a single display.","pos":[1195,1324]},{"content":"There are two ways to do this:","pos":[1325,1355]},{"content":"By adding the <ph id=\"ph1\">`&lt;EnableMultiMonitorDisplayClipping&gt;`</ph> element to the <ph id=\"ph2\">`&lt;appSettings&gt;`</ph> section of your application configuration file, you can disable or enable this behavior on apps running on Windows 8 or later.","pos":[1365,1574],"source":"By adding the `<EnableMultiMonitorDisplayClipping>` element to the `<appSettings>` section of your application configuration file, you can disable or enable this behavior on apps running on Windows 8 or later."},{"content":"For example, the following configuration section disables rendering without clipping:","pos":[1575,1660]},{"pos":[1810,1904],"content":"The <ph id=\"ph1\">`&lt;EnableMultiMonitorDisplayClipping&gt;`</ph> configuration setting can have either of two values:","source":"The `<EnableMultiMonitorDisplayClipping>` configuration setting can have either of two values:"},{"pos":[1918,1991],"content":"<ph id=\"ph1\">`true`</ph>, to enable clipping of windows to monitor bounds during rendering.","source":"`true`, to enable clipping of windows to monitor bounds during rendering."},{"pos":[2005,2080],"content":"<ph id=\"ph1\">`false`</ph>, to disable clipping of windows to monitor bounds during rendering.","source":"`false`, to disable clipping of windows to monitor bounds during rendering."},{"pos":[2090,2227],"content":"By setting the <ph id=\"ph1\">&lt;xref:System.Windows.CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> at app startup.","source":"By setting the <xref:System.Windows.CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping%2A> property to `true` at app startup."},{"pos":[2236,2244],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2248,2350],"content":"<bpt id=\"p1\">[</bpt>Runtime Changes<ept id=\"p1\">](../../../docs/framework/migration-guide/runtime-changes-in-the-net-framework-4-6.md)</ept>","source":"[Runtime Changes](../../../docs/framework/migration-guide/runtime-changes-in-the-net-framework-4-6.md)"}]}