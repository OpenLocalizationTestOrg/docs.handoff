{"content":"---\ntitle: \"Code-Bodied | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 5bfb2d95-9092-4551-9c59-bd8f0a37225e\ncaps.latest.revision: 3\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Code-Bodied\nThis section contains custom activity samples created declaratively in code.  \n  \n## In This Section  \n [Bookmarks](../../../../docs/framework/windows-workflow-foundation/samples/bookmarks.md)  \n This sample demonstrates how to write a custom activity that creates a bookmark to receive external input.  \n  \n [Custom Composite using Native Activity](../../../../docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)  \n This sample demonstrates how to write a <xref:System.Activities.NativeActivity> that schedules other <xref:System.Activities.Activity> objects to control the flow of a workflow’s execution.  \n  \n [Execution Properties](../../../../docs/framework/windows-workflow-foundation/samples/execution-properties.md)  \n This sample shows how to define and use an execution property in a custom activity.  \n  \n [Exposing and Invoking ActivityActions](../../../../docs/framework/windows-workflow-foundation/samples/exposing-and-invoking-activityactions.md)  \n This sample demonstrates how to develop a custom activity that has an <xref:System.Activities.ActivityAction>.  \n  \n [Using AsyncCodeActivityContext in an Activity](../../../../docs/framework/windows-workflow-foundation/samples/using-asyncoperationcontext-in-an-activity-sample.md)  \n This sample demonstrates how to develop a custom <xref:System.Activities.CodeActivity> that uses <xref:System.Activities.AsyncCodeActivityContext> to perform work asynchronously outside of the workflow. \n  \n [Hello World Custom Activity](../../../../docs/framework/windows-workflow-foundation/samples/hello-world-custom-activity.md)  \n This sample demonstrates several key features of [!INCLUDE[wf](../../../../includes/wf-md.md)], including how to create a simple custom activity.  \n  \n [Dynamic Arguments](../../../../docs/framework/windows-workflow-foundation/samples/dynamic-arguments.md)  \n This sample demonstrates how to implement an activity for which the arguments are defined by the activity consumer rather than the activity author.","nodes":[{"pos":[12,40],"content":"Code-Bodied | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Code-Bodied | Microsoft Docs","pos":[0,28]}]},{"pos":[305,316],"content":"Code-Bodied","linkify":"Code-Bodied","nodes":[{"content":"Code-Bodied","pos":[0,11]}]},{"content":"This section contains custom activity samples created declaratively in code.","pos":[317,393]},{"pos":[402,417],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Bookmarks<ept id=\"p1\">](../../../../docs/framework/windows-workflow-foundation/samples/bookmarks.md)</ept>","pos":[421,509],"source":"[Bookmarks](../../../../docs/framework/windows-workflow-foundation/samples/bookmarks.md)"},{"content":"This sample demonstrates how to write a custom activity that creates a bookmark to receive external input.","pos":[513,619]},{"content":"<bpt id=\"p1\">[</bpt>Custom Composite using Native Activity<ept id=\"p1\">](../../../../docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)</ept>","pos":[626,772],"source":"[Custom Composite using Native Activity](../../../../docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md)"},{"content":"This sample demonstrates how to write a <ph id=\"ph1\">&lt;xref:System.Activities.NativeActivity&gt;</ph> that schedules other <ph id=\"ph2\">&lt;xref:System.Activities.Activity&gt;</ph> objects to control the flow of a workflow’s execution.","pos":[776,965],"source":" This sample demonstrates how to write a <xref:System.Activities.NativeActivity> that schedules other <xref:System.Activities.Activity> objects to control the flow of a workflow’s execution."},{"content":"<bpt id=\"p1\">[</bpt>Execution Properties<ept id=\"p1\">](../../../../docs/framework/windows-workflow-foundation/samples/execution-properties.md)</ept>","pos":[972,1082],"source":"[Execution Properties](../../../../docs/framework/windows-workflow-foundation/samples/execution-properties.md)"},{"content":"This sample shows how to define and use an execution property in a custom activity.","pos":[1086,1169]},{"content":"<bpt id=\"p1\">[</bpt>Exposing and Invoking ActivityActions<ept id=\"p1\">](../../../../docs/framework/windows-workflow-foundation/samples/exposing-and-invoking-activityactions.md)</ept>","pos":[1176,1320],"source":"[Exposing and Invoking ActivityActions](../../../../docs/framework/windows-workflow-foundation/samples/exposing-and-invoking-activityactions.md)"},{"content":"This sample demonstrates how to develop a custom activity that has an <ph id=\"ph1\">&lt;xref:System.Activities.ActivityAction&gt;</ph>.","pos":[1324,1434],"source":" This sample demonstrates how to develop a custom activity that has an <xref:System.Activities.ActivityAction>."},{"content":"<bpt id=\"p1\">[</bpt>Using AsyncCodeActivityContext in an Activity<ept id=\"p1\">](../../../../docs/framework/windows-workflow-foundation/samples/using-asyncoperationcontext-in-an-activity-sample.md)</ept>","pos":[1441,1605],"source":"[Using AsyncCodeActivityContext in an Activity](../../../../docs/framework/windows-workflow-foundation/samples/using-asyncoperationcontext-in-an-activity-sample.md)"},{"content":"This sample demonstrates how to develop a custom <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity&gt;</ph> that uses <ph id=\"ph2\">&lt;xref:System.Activities.AsyncCodeActivityContext&gt;</ph> to perform work asynchronously outside of the workflow.","pos":[1609,1811],"source":" This sample demonstrates how to develop a custom <xref:System.Activities.CodeActivity> that uses <xref:System.Activities.AsyncCodeActivityContext> to perform work asynchronously outside of the workflow."},{"content":"<bpt id=\"p1\">[</bpt>Hello World Custom Activity<ept id=\"p1\">](../../../../docs/framework/windows-workflow-foundation/samples/hello-world-custom-activity.md)</ept>","pos":[1817,1941],"source":"[Hello World Custom Activity](../../../../docs/framework/windows-workflow-foundation/samples/hello-world-custom-activity.md)"},{"content":"This sample demonstrates several key features of <ph id=\"ph1\">[!INCLUDE[wf](../../../../includes/wf-md.md)]</ph>, including how to create a simple custom activity.","pos":[1945,2090],"source":" This sample demonstrates several key features of [!INCLUDE[wf](../../../../includes/wf-md.md)], including how to create a simple custom activity."},{"content":"<bpt id=\"p1\">[</bpt>Dynamic Arguments<ept id=\"p1\">](../../../../docs/framework/windows-workflow-foundation/samples/dynamic-arguments.md)</ept>","pos":[2097,2201],"source":"[Dynamic Arguments](../../../../docs/framework/windows-workflow-foundation/samples/dynamic-arguments.md)"},{"content":"This sample demonstrates how to implement an activity for which the arguments are defined by the activity consumer rather than the activity author.","pos":[2205,2352]}]}