<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="staticresource-markup-extension.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8319e451268152e95326c02027157db72df631b8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\staticresource-markup-extension.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">295004a24984602066fb3e0e93232f83665a7ffa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4cd764d5cf0fc9450644a7465a1c65164899c466</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>StaticResource Markup Extension</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>StaticResource Markup Extension</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides a value for any <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> property attribute by looking up a reference to an already defined resource.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Lookup behavior for that resource is analogous to load-time lookup, which will look for resources that were previously loaded from the markup of the current <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> page as well as other application sources, and will generate that resource value as the property value in the run-time objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>XAML Attribute Usage</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XAML Object Element Usage</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>XAML Values</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The key for the requested resource.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This key was initially assigned by the <bpt id="p1">[</bpt>x:Key Directive<ept id="p1">](../../xaml-services/x-key-directive.md)</ept> if a resource was created in markup, or was provided as the <ph id="ph1">`key`</ph> parameter when calling <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary.Add%2A?displayProperty=nameWithType&gt;</ph> if the resource was created in code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`StaticResource`</ph> must not attempt to make a forward reference to a resource that is defined lexically further within the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Attempting to do so is not supported, and even if such a reference does not fail, attempting the forward reference will incur a load time performance penalty when the internal hash tables representing a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> are searched.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For best results, adjust the composition of your resource dictionaries such that forward references can be avoided.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you cannot avoid a forward reference, use <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](dynamicresource-markup-extension.md)</ept> instead.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The specified <ph id="ph1">&lt;xref:System.Windows.StaticResourceExtension.ResourceKey%2A&gt;</ph> should correspond to an existing resource, identified with an <bpt id="p1">[</bpt>x:Key Directive<ept id="p1">](../../xaml-services/x-key-directive.md)</ept> at some level in your page, application, the available control themes and external resources, or system resources.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The resource lookup occurs in that order.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about resource lookup behavior for static and dynamic resources, see <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](xaml-resources.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A resource key can be any string defined in the <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](../../xaml-services/xamlname-grammar.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A resource key can also be other object types, such as a <ph id="ph1">&lt;xref:System.Type&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> key is fundamental to how controls can be styled by themes, through an implicit style key.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Control Authoring Overview<ept id="p1">](../controls/control-authoring-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The alternative declarative means of referencing a resource is as a <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](dynamicresource-markup-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Attribute syntax is the most common syntax used with this markup extension.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The string token provided after the <ph id="ph1">`StaticResource`</ph> identifier string is assigned as the <ph id="ph2">&lt;xref:System.Windows.StaticResourceExtension.ResourceKey%2A&gt;</ph> value of the underlying <ph id="ph3">&lt;xref:System.Windows.StaticResourceExtension&gt;</ph> extension class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`StaticResource`</ph> can be used in object element syntax.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this case, specifying the value of the <ph id="ph1">&lt;xref:System.Windows.StaticResourceExtension.ResourceKey%2A&gt;</ph> property is required.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`StaticResource`</ph> can also be used in a verbose attribute usage that specifies the <ph id="ph2">&lt;xref:System.Windows.StaticResourceExtension.ResourceKey%2A&gt;</ph> property as a property=value pair:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The verbose usage is often useful for extensions that have more than one settable property, or if some properties are optional.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`StaticResource`</ph> has only one settable property, which is required, this verbose usage is not typical.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> processor implementation, the handling for this markup extension is defined by the <ph id="ph3">&lt;xref:System.Windows.StaticResourceExtension&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`StaticResource`</ph> is a markup extension.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>All markup extensions in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> use the { and } characters in their attribute syntax, which is the convention by which a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> processor recognizes that a markup extension must process the attribute.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](markup-extensions-and-wpf-xaml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](../controls/styling-and-templating.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Overview (WPF)<ept id="p1">](xaml-overview-wpf.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](markup-extensions-and-wpf-xaml.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Resources<ept id="p1">](xaml-resources.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Resources and Code<ept id="p1">](resources-and-code.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>