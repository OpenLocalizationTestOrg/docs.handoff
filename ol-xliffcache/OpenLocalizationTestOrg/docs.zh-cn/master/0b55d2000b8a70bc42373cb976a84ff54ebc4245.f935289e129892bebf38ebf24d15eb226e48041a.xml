{"content":"---\ntitle: \"Brush Transformation Overview\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"brushes [WPF], transformation properties\"\n  - \"properties [WPF], transformation\"\n  - \"transformation properties of brushes [WPF]\"\nms.assetid: 8b9bfc09-12fd-4cd5-b445-99949f27bc39\n---\n# Brush Transformation Overview\nThe Brush class provides two transformation properties: <xref:System.Windows.Media.Brush.Transform%2A> and <xref:System.Windows.Media.Brush.RelativeTransform%2A>. The properties enable you to rotate, scale, skew, and translate a brush's contents. This topic describes the differences between these two properties and provides examples of their usage.  \n  \n<a name=\"prerequisites\"></a>   \n## Prerequisites  \n To understand this topic, you should understand the features of the brush that you are transforming. For <xref:System.Windows.Media.LinearGradientBrush> and <xref:System.Windows.Media.RadialGradientBrush>, see the [Painting with Solid Colors and Gradients Overview](painting-with-solid-colors-and-gradients-overview.md). For <xref:System.Windows.Media.ImageBrush>, <xref:System.Windows.Media.DrawingBrush>, or <xref:System.Windows.Media.VisualBrush>, see  [Painting with Images, Drawings, and Visuals](painting-with-images-drawings-and-visuals.md). You should also be familiar with the 2D transforms described in the  [Transforms Overview](transforms-overview.md).  \n  \n<a name=\"transformversusrelativetransform\"></a>   \n## Differences between the Transform and RelativeTransform Properties  \n When you apply a transform to a brush's <xref:System.Windows.Media.Brush.Transform%2A> property, you need to know the size of the painted area if you want to transform the brush contents about its center. Suppose the painted area is 200 device independent pixels wide and 150 tall.  If you used a <xref:System.Windows.Media.RotateTransform> to rotate the brush's output 45 degrees about its center, you'd give the <xref:System.Windows.Media.RotateTransform> a <xref:System.Windows.Media.RotateTransform.CenterX%2A> of 100 and a <xref:System.Windows.Media.RotateTransform.CenterY%2A> of 75.  \n  \n When you apply a transform to a brush's <xref:System.Windows.Media.Brush.RelativeTransform%2A> property, that transform is applied to the brush before its output is mapped to the painted area. The following list describes the order in which a brush’s contents are processed and transformed.  \n  \n1.  Process the brush’s contents. For a <xref:System.Windows.Media.GradientBrush>, this means determining the gradient area. For a <xref:System.Windows.Media.TileBrush>, the <xref:System.Windows.Media.TileBrush.Viewbox%2A> is mapped to the <xref:System.Windows.Media.TileBrush.Viewport%2A>. This becomes the brush’s output.  \n  \n2.  Project the brush’s output onto the 1 x 1 transformation rectangle.  \n  \n3.  Apply the brush’s <xref:System.Windows.Media.Brush.RelativeTransform%2A>, if it has one.  \n  \n4.  Project the transformed output onto the area to paint.  \n  \n5.  Apply the brush’s <xref:System.Windows.Media.Transform>, if it has one.  \n  \n Because the <xref:System.Windows.Media.Brush.RelativeTransform%2A> is applied while the brush’s output is mapped to a 1 x 1 rectangle, transform center and offset values appear to be relative. For example, if you used a <xref:System.Windows.Media.RotateTransform> to rotate the brush's output 45 degrees about its center, you'd give the <xref:System.Windows.Media.RotateTransform> a <xref:System.Windows.Media.RotateTransform.CenterX%2A> of 0.5 and a <xref:System.Windows.Media.RotateTransform.CenterY%2A> of 0.5.  \n  \n The following illustration shows the output of several brushes that have been rotated by 45 degrees using the <xref:System.Windows.Media.Brush.RelativeTransform%2A> and <xref:System.Windows.Media.Brush.Transform%2A> properties.  \n  \n ![RelativeTransform and Transform properties](./media/graphicsmm-brushrelativetransform-transform-small.png \"graphicsmm_brushrelativetransform_transform_small\")  \n  \n<a name=\"relativetransformandtilebrush\"></a>   \n## Using RelativeTransform with a TileBrush  \n Because tile brushes are more complex than other brushes, applying a <xref:System.Windows.Media.Brush.RelativeTransform%2A> to one might produce unexpected results. For example, take the following image.  \n  \n ![The source image](./media/graphicsmm-reltransform-1-original-image.jpg \"graphicsmm_reltransform_1_original_image\")  \n  \n The following example uses an <xref:System.Windows.Media.ImageBrush> to paint a rectangular area with the preceding image. It applies a <xref:System.Windows.Media.RotateTransform> to the <xref:System.Windows.Media.ImageBrush> object's <xref:System.Windows.Media.Brush.RelativeTransform%2A> property, and sets its <xref:System.Windows.Media.TileBrush.Stretch%2A> property to <xref:System.Windows.Media.Stretch.UniformToFill>, which should preserve the image's aspect ratio when it is stretched to completely fill the rectangle.  \n  \n [!code-xaml[BrushOverviewExamples_snip#GraphicsMMRelativeTransformExample2Inline](~/samples/snippets/xaml/VS_Snippets_Wpf/BrushOverviewExamples_snip/XAML/RelativeTransformIllustration.xaml#graphicsmmrelativetransformexample2inline)]  \n  \n This example produces the following output:  \n  \n ![The transformed output](./media/graphicsmm-reltransform-6-output.png \"graphicsmm_reltransform_6_output\")  \n  \n Notice that the image is distorted, even though the brush's <xref:System.Windows.Media.TileBrush.Stretch%2A> was set to <xref:System.Windows.Media.Stretch.UniformToFill>. That's because the relative transform is applied after the brush's <xref:System.Windows.Media.TileBrush.Viewbox%2A> is mapped to its <xref:System.Windows.Media.TileBrush.Viewport%2A>. The following list describes each step of the process:  \n  \n1.  Project the brush's contents (<xref:System.Windows.Media.TileBrush.Viewbox%2A>) onto its base tile (<xref:System.Windows.Media.TileBrush.Viewport%2A>) using the brush's <xref:System.Windows.Media.TileBrush.Stretch%2A> setting.  \n  \n     ![Stretch the Viewbox to fit the Viewport](./media/graphicsmm-reltransform-2-viewbox-to-viewport.png \"graphicsmm_reltransform_2_viewbox_to_viewport\")  \n  \n2.  Project the base tile onto the 1 x 1 transformation rectangle.  \n  \n     ![Map the Viewport to the transformation rectangle](./media/graphicsmm-reltransform-3-output-to-transform.png \"graphicsmm_reltransform_3_output_to_transform\")  \n  \n3.  Apply the <xref:System.Windows.Media.RotateTransform>.  \n  \n     ![Apply the relative transform](./media/graphicsmm-reltransform-4-transform-rotate.png \"graphicsmm_reltransform_4_transform_rotate\")  \n  \n4.  Project the transformed base tile onto the area to paint.  \n  \n     ![Project the transformed brush onto the output area](./media/graphicsmm-reltransform-5-transform-to-output.png \"graphicsmm_reltransform_5_transform_to_output\")  \n  \n<a name=\"rotateexample\"></a>   \n## Example: Rotate an ImageBrush 45 Degrees  \n The following example applies a <xref:System.Windows.Media.RotateTransform> to the <xref:System.Windows.Media.Brush.RelativeTransform%2A> property of an <xref:System.Windows.Media.ImageBrush>. The <xref:System.Windows.Media.RotateTransform> object's <xref:System.Windows.Media.RotateTransform.CenterX%2A> and <xref:System.Windows.Media.RotateTransform.CenterY%2A> properties are both set to 0.5, the relative coordinates of the content's center point. As a result, the brush's contents are rotated about its center.  \n  \n [!code-csharp[BrushesIntroduction_snip#ImageBrushRelativeTransformExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction_snip/CSharp/BrushTransformExample.cs#imagebrushrelativetransformexample)]\n [!code-vb[BrushesIntroduction_snip#ImageBrushRelativeTransformExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction_snip/visualbasic/brushtransformexample.vb#imagebrushrelativetransformexample)]\n [!code-xaml[BrushesIntroduction_snip#ImageBrushRelativeTransformExample](~/samples/snippets/xaml/VS_Snippets_Wpf/BrushesIntroduction_snip/XAML/BrushTransformExample.xaml#imagebrushrelativetransformexample)]  \n  \n The next example also applies a <xref:System.Windows.Media.RotateTransform> to an <xref:System.Windows.Media.ImageBrush>, but uses the <xref:System.Windows.Media.Brush.Transform%2A> property instead of the <xref:System.Windows.Media.Brush.RelativeTransform%2A> property. To rotate the brush about its center, the <xref:System.Windows.Media.RotateTransform> object's <xref:System.Windows.Media.RotateTransform.CenterX%2A> and <xref:System.Windows.Media.RotateTransform.CenterY%2A> must be set to absolute coordinates. Because the rectangle being painted by the brush is 175 by 90 pixels, its center point is (87.5, 45).  \n  \n [!code-csharp[BrushesIntroduction_snip#ImageBrushTransformExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction_snip/CSharp/BrushTransformExample.cs#imagebrushtransformexample)]\n [!code-vb[BrushesIntroduction_snip#ImageBrushTransformExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction_snip/visualbasic/brushtransformexample.vb#imagebrushtransformexample)]\n [!code-xaml[BrushesIntroduction_snip#ImageBrushTransformExample](~/samples/snippets/xaml/VS_Snippets_Wpf/BrushesIntroduction_snip/XAML/BrushTransformExample.xaml#imagebrushtransformexample)]  \n  \n The following illustration shows the brush without a transform, with the transform applied to the <xref:System.Windows.Media.Brush.RelativeTransform%2A> property, and with the transform applied to the <xref:System.Windows.Media.Brush.Transform%2A> property.  \n  \n ![Brush RelativeTransform and Transform settings](./media/wcpsdk-graphicsmm-transformandrelativetransform.png \"wcpsdk_graphicsmm_transformandrelativetransform\")  \n  \n This example is part of a larger sample. For the complete sample, see the [Brushes Sample](https://go.microsoft.com/fwlink/?LinkID=159973). For more information about brushes, see the  [WPF Brushes Overview](wpf-brushes-overview.md).  \n  \n## See also\n\n- <xref:System.Windows.Media.Brush.Transform%2A>\n- <xref:System.Windows.Media.Brush.RelativeTransform%2A>\n- <xref:System.Windows.Media.Transform>\n- <xref:System.Windows.Media.Brush>\n- [Painting with Solid Colors and Gradients Overview](painting-with-solid-colors-and-gradients-overview.md)\n- [Painting with Images, Drawings, and Visuals](painting-with-images-drawings-and-visuals.md)\n- [Transforms Overview](transforms-overview.md)\n","nodes":[{"pos":[4,304],"embed":true,"restype":"x-metadata","content":"title: \"Brush Transformation Overview\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"brushes [WPF], transformation properties\"\n  - \"properties [WPF], transformation\"\n  - \"transformation properties of brushes [WPF]\"\nms.assetid: 8b9bfc09-12fd-4cd5-b445-99949f27bc39","nodes":[{"content":"Brush Transformation Overview","nodes":[{"pos":[0,29],"content":"Brush Transformation Overview","nodes":[{"content":"Brush Transformation Overview","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[311,340],"content":"Brush Transformation Overview","linkify":"Brush Transformation Overview","nodes":[{"content":"Brush Transformation Overview","pos":[0,29]}]},{"content":"The Brush class provides two transformation properties: <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph>.","pos":[341,503],"source":"The Brush class provides two transformation properties: <xref:System.Windows.Media.Brush.Transform%2A> and <xref:System.Windows.Media.Brush.RelativeTransform%2A>."},{"content":"The properties enable you to rotate, scale, skew, and translate a brush's contents.","pos":[504,587]},{"content":"This topic describes the differences between these two properties and provides examples of their usage.","pos":[588,691]},{"pos":[732,745],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"To understand this topic, you should understand the features of the brush that you are transforming.","pos":[749,849]},{"content":"For <ph id=\"ph1\">&lt;xref:System.Windows.Media.LinearGradientBrush&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.RadialGradientBrush&gt;</ph>, see the <bpt id=\"p1\">[</bpt>Painting with Solid Colors and Gradients Overview<ept id=\"p1\">](painting-with-solid-colors-and-gradients-overview.md)</ept>.","pos":[850,1069],"source":" For <xref:System.Windows.Media.LinearGradientBrush> and <xref:System.Windows.Media.RadialGradientBrush>, see the [Painting with Solid Colors and Gradients Overview](painting-with-solid-colors-and-gradients-overview.md)."},{"content":"For <ph id=\"ph1\">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph>, see  <bpt id=\"p1\">[</bpt>Painting with Images, Drawings, and Visuals<ept id=\"p1\">](painting-with-images-drawings-and-visuals.md)</ept>.","pos":[1070,1297],"source":" For <xref:System.Windows.Media.ImageBrush>, <xref:System.Windows.Media.DrawingBrush>, or <xref:System.Windows.Media.VisualBrush>, see  [Painting with Images, Drawings, and Visuals](painting-with-images-drawings-and-visuals.md)."},{"content":"You should also be familiar with the 2D transforms described in the  <bpt id=\"p1\">[</bpt>Transforms Overview<ept id=\"p1\">](transforms-overview.md)</ept>.","pos":[1298,1413],"source":" You should also be familiar with the 2D transforms described in the  [Transforms Overview](transforms-overview.md)."},{"pos":[1473,1539],"content":"Differences between the Transform and RelativeTransform Properties","linkify":"Differences between the Transform and RelativeTransform Properties","nodes":[{"content":"Differences between the Transform and RelativeTransform Properties","pos":[0,66]}]},{"content":"When you apply a transform to a brush's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> property, you need to know the size of the painted area if you want to transform the brush contents about its center.","pos":[1543,1747],"source":"When you apply a transform to a brush's <xref:System.Windows.Media.Brush.Transform%2A> property, you need to know the size of the painted area if you want to transform the brush contents about its center."},{"content":"Suppose the painted area is 200 device independent pixels wide and 150 tall.","pos":[1748,1824]},{"content":"If you used a <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to rotate the brush's output 45 degrees about its center, you'd give the <ph id=\"ph2\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> a <ph id=\"ph3\">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> of 100 and a <ph id=\"ph4\">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> of 75.","pos":[1826,2132],"source":"  If you used a <xref:System.Windows.Media.RotateTransform> to rotate the brush's output 45 degrees about its center, you'd give the <xref:System.Windows.Media.RotateTransform> a <xref:System.Windows.Media.RotateTransform.CenterX%2A> of 100 and a <xref:System.Windows.Media.RotateTransform.CenterY%2A> of 75."},{"content":"When you apply a transform to a brush's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property, that transform is applied to the brush before its output is mapped to the painted area.","pos":[2139,2331],"source":"When you apply a transform to a brush's <xref:System.Windows.Media.Brush.RelativeTransform%2A> property, that transform is applied to the brush before its output is mapped to the painted area."},{"content":"The following list describes the order in which a brush’s contents are processed and transformed.","pos":[2332,2429]},{"content":"Process the brush’s contents.","pos":[2439,2468]},{"content":"For a <ph id=\"ph1\">&lt;xref:System.Windows.Media.GradientBrush&gt;</ph>, this means determining the gradient area.","pos":[2469,2559],"source":" For a <xref:System.Windows.Media.GradientBrush>, this means determining the gradient area."},{"content":"For a <ph id=\"ph1\">&lt;xref:System.Windows.Media.TileBrush&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Windows.Media.TileBrush.Viewbox%2A&gt;</ph> is mapped to the <ph id=\"ph3\">&lt;xref:System.Windows.Media.TileBrush.Viewport%2A&gt;</ph>.","pos":[2560,2725],"source":" For a <xref:System.Windows.Media.TileBrush>, the <xref:System.Windows.Media.TileBrush.Viewbox%2A> is mapped to the <xref:System.Windows.Media.TileBrush.Viewport%2A>."},{"content":"This becomes the brush’s output.","pos":[2726,2758]},{"content":"Project the brush’s output onto the 1 x 1 transformation rectangle.","pos":[2768,2835]},{"pos":[2845,2933],"content":"Apply the brush’s <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph>, if it has one.","source":"Apply the brush’s <xref:System.Windows.Media.Brush.RelativeTransform%2A>, if it has one."},{"content":"Project the transformed output onto the area to paint.","pos":[2943,2997]},{"pos":[3007,3078],"content":"Apply the brush’s <ph id=\"ph1\">&lt;xref:System.Windows.Media.Transform&gt;</ph>, if it has one.","source":"Apply the brush’s <xref:System.Windows.Media.Transform>, if it has one."},{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> is applied while the brush’s output is mapped to a 1 x 1 rectangle, transform center and offset values appear to be relative.","pos":[3085,3277],"source":"Because the <xref:System.Windows.Media.Brush.RelativeTransform%2A> is applied while the brush’s output is mapped to a 1 x 1 rectangle, transform center and offset values appear to be relative."},{"content":"For example, if you used a <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to rotate the brush's output 45 degrees about its center, you'd give the <ph id=\"ph2\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> a <ph id=\"ph3\">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> of 0.5 and a <ph id=\"ph4\">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> of 0.5.","pos":[3278,3598],"source":" For example, if you used a <xref:System.Windows.Media.RotateTransform> to rotate the brush's output 45 degrees about its center, you'd give the <xref:System.Windows.Media.RotateTransform> a <xref:System.Windows.Media.RotateTransform.CenterX%2A> of 0.5 and a <xref:System.Windows.Media.RotateTransform.CenterY%2A> of 0.5."},{"pos":[3605,3832],"content":"The following illustration shows the output of several brushes that have been rotated by 45 degrees using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> properties.","source":"The following illustration shows the output of several brushes that have been rotated by 45 degrees using the <xref:System.Windows.Media.Brush.RelativeTransform%2A> and <xref:System.Windows.Media.Brush.Transform%2A> properties."},{"pos":[3839,3999],"content":"<bpt id=\"p1\">![</bpt>RelativeTransform and Transform properties<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/graphicsmm-brushrelativetransform-transform-small.png \"</bpt>graphicsmm_brushrelativetransform_transform_small<ept id=\"p2\">\")</ept>","source":"![RelativeTransform and Transform properties](./media/graphicsmm-brushrelativetransform-transform-small.png \"graphicsmm_brushrelativetransform_transform_small\")"},{"pos":[4056,4096],"content":"Using RelativeTransform with a TileBrush","linkify":"Using RelativeTransform with a TileBrush","nodes":[{"content":"Using RelativeTransform with a TileBrush","pos":[0,40]}]},{"content":"Because tile brushes are more complex than other brushes, applying a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> to one might produce unexpected results.","pos":[4100,4264],"source":"Because tile brushes are more complex than other brushes, applying a <xref:System.Windows.Media.Brush.RelativeTransform%2A> to one might produce unexpected results."},{"content":"For example, take the following image.","pos":[4265,4303]},{"pos":[4310,4426],"content":"<bpt id=\"p1\">![</bpt>The source image<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/graphicsmm-reltransform-1-original-image.jpg \"</bpt>graphicsmm_reltransform_1_original_image<ept id=\"p2\">\")</ept>","source":"![The source image](./media/graphicsmm-reltransform-1-original-image.jpg \"graphicsmm_reltransform_1_original_image\")"},{"content":"The following example uses an <ph id=\"ph1\">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph> to paint a rectangular area with the preceding image.","pos":[4433,4555],"source":"The following example uses an <xref:System.Windows.Media.ImageBrush> to paint a rectangular area with the preceding image."},{"content":"It applies a <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to the <ph id=\"ph2\">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph> object's <ph id=\"ph3\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property, and sets its <ph id=\"ph4\">&lt;xref:System.Windows.Media.TileBrush.Stretch%2A&gt;</ph> property to <ph id=\"ph5\">&lt;xref:System.Windows.Media.Stretch.UniformToFill&gt;</ph>, which should preserve the image's aspect ratio when it is stretched to completely fill the rectangle.","pos":[4556,4959],"source":" It applies a <xref:System.Windows.Media.RotateTransform> to the <xref:System.Windows.Media.ImageBrush> object's <xref:System.Windows.Media.Brush.RelativeTransform%2A> property, and sets its <xref:System.Windows.Media.TileBrush.Stretch%2A> property to <xref:System.Windows.Media.Stretch.UniformToFill>, which should preserve the image's aspect ratio when it is stretched to completely fill the rectangle."},{"content":"This example produces the following output:","pos":[5205,5248]},{"pos":[5255,5361],"content":"<bpt id=\"p1\">![</bpt>The transformed output<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/graphicsmm-reltransform-6-output.png \"</bpt>graphicsmm_reltransform_6_output<ept id=\"p2\">\")</ept>","source":"![The transformed output](./media/graphicsmm-reltransform-6-output.png \"graphicsmm_reltransform_6_output\")"},{"content":"Notice that the image is distorted, even though the brush's <ph id=\"ph1\">&lt;xref:System.Windows.Media.TileBrush.Stretch%2A&gt;</ph> was set to <ph id=\"ph2\">&lt;xref:System.Windows.Media.Stretch.UniformToFill&gt;</ph>.","pos":[5368,5538],"source":"Notice that the image is distorted, even though the brush's <xref:System.Windows.Media.TileBrush.Stretch%2A> was set to <xref:System.Windows.Media.Stretch.UniformToFill>."},{"content":"That's because the relative transform is applied after the brush's <ph id=\"ph1\">&lt;xref:System.Windows.Media.TileBrush.Viewbox%2A&gt;</ph> is mapped to its <ph id=\"ph2\">&lt;xref:System.Windows.Media.TileBrush.Viewport%2A&gt;</ph>.","pos":[5539,5722],"source":" That's because the relative transform is applied after the brush's <xref:System.Windows.Media.TileBrush.Viewbox%2A> is mapped to its <xref:System.Windows.Media.TileBrush.Viewport%2A>."},{"content":"The following list describes each step of the process:","pos":[5723,5777]},{"pos":[5787,6013],"content":"Project the brush's contents (<ph id=\"ph1\">&lt;xref:System.Windows.Media.TileBrush.Viewbox%2A&gt;</ph>) onto its base tile (<ph id=\"ph2\">&lt;xref:System.Windows.Media.TileBrush.Viewport%2A&gt;</ph>) using the brush's <ph id=\"ph3\">&lt;xref:System.Windows.Media.TileBrush.Stretch%2A&gt;</ph> setting.","source":"Project the brush's contents (<xref:System.Windows.Media.TileBrush.Viewbox%2A>) onto its base tile (<xref:System.Windows.Media.TileBrush.Viewport%2A>) using the brush's <xref:System.Windows.Media.TileBrush.Stretch%2A> setting."},{"pos":[6024,6173],"content":"<bpt id=\"p1\">![</bpt>Stretch the Viewbox to fit the Viewport<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/graphicsmm-reltransform-2-viewbox-to-viewport.png \"</bpt>graphicsmm_reltransform_2_viewbox_to_viewport<ept id=\"p2\">\")</ept>","source":"![Stretch the Viewbox to fit the Viewport](./media/graphicsmm-reltransform-2-viewbox-to-viewport.png \"graphicsmm_reltransform_2_viewbox_to_viewport\")"},{"content":"Project the base tile onto the 1 x 1 transformation rectangle.","pos":[6183,6245]},{"pos":[6256,6414],"content":"<bpt id=\"p1\">![</bpt>Map the Viewport to the transformation rectangle<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/graphicsmm-reltransform-3-output-to-transform.png \"</bpt>graphicsmm_reltransform_3_output_to_transform<ept id=\"p2\">\")</ept>","source":"![Map the Viewport to the transformation rectangle](./media/graphicsmm-reltransform-3-output-to-transform.png \"graphicsmm_reltransform_3_output_to_transform\")"},{"pos":[6424,6478],"content":"Apply the <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph>.","source":"Apply the <xref:System.Windows.Media.RotateTransform>."},{"pos":[6489,6621],"content":"<bpt id=\"p1\">![</bpt>Apply the relative transform<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/graphicsmm-reltransform-4-transform-rotate.png \"</bpt>graphicsmm_reltransform_4_transform_rotate<ept id=\"p2\">\")</ept>","source":"![Apply the relative transform](./media/graphicsmm-reltransform-4-transform-rotate.png \"graphicsmm_reltransform_4_transform_rotate\")"},{"content":"Project the transformed base tile onto the area to paint.","pos":[6631,6688]},{"pos":[6699,6859],"content":"<bpt id=\"p1\">![</bpt>Project the transformed brush onto the output area<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/graphicsmm-reltransform-5-transform-to-output.png \"</bpt>graphicsmm_reltransform_5_transform_to_output<ept id=\"p2\">\")</ept>","source":"![Project the transformed brush onto the output area](./media/graphicsmm-reltransform-5-transform-to-output.png \"graphicsmm_reltransform_5_transform_to_output\")"},{"pos":[6900,6940],"content":"Example: Rotate an ImageBrush 45 Degrees","linkify":"Example: Rotate an ImageBrush 45 Degrees","nodes":[{"content":"Example: Rotate an ImageBrush 45 Degrees","pos":[0,40]}]},{"content":"The following example applies a <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property of an <ph id=\"ph3\">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph>.","pos":[6944,7136],"source":"The following example applies a <xref:System.Windows.Media.RotateTransform> to the <xref:System.Windows.Media.Brush.RelativeTransform%2A> property of an <xref:System.Windows.Media.ImageBrush>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> object's <ph id=\"ph2\">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> properties are both set to 0.5, the relative coordinates of the content's center point.","pos":[7137,7395],"source":" The <xref:System.Windows.Media.RotateTransform> object's <xref:System.Windows.Media.RotateTransform.CenterX%2A> and <xref:System.Windows.Media.RotateTransform.CenterY%2A> properties are both set to 0.5, the relative coordinates of the content's center point."},{"content":"As a result, the brush's contents are rotated about its center.","pos":[7396,7459]},{"content":"The next example also applies a <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to an <ph id=\"ph2\">&lt;xref:System.Windows.Media.ImageBrush&gt;</ph>, but uses the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> property instead of the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property.","pos":[8109,8379],"source":"The next example also applies a <xref:System.Windows.Media.RotateTransform> to an <xref:System.Windows.Media.ImageBrush>, but uses the <xref:System.Windows.Media.Brush.Transform%2A> property instead of the <xref:System.Windows.Media.Brush.RelativeTransform%2A> property."},{"content":"To rotate the brush about its center, the <ph id=\"ph1\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> object's <ph id=\"ph2\">&lt;xref:System.Windows.Media.RotateTransform.CenterX%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Media.RotateTransform.CenterY%2A&gt;</ph> must be set to absolute coordinates.","pos":[8380,8625],"source":" To rotate the brush about its center, the <xref:System.Windows.Media.RotateTransform> object's <xref:System.Windows.Media.RotateTransform.CenterX%2A> and <xref:System.Windows.Media.RotateTransform.CenterY%2A> must be set to absolute coordinates."},{"content":"Because the rectangle being painted by the brush is 175 by 90 pixels, its center point is (87.5, 45).","pos":[8626,8727]},{"pos":[9329,9586],"content":"The following illustration shows the brush without a transform, with the transform applied to the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush.RelativeTransform%2A&gt;</ph> property, and with the transform applied to the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Brush.Transform%2A&gt;</ph> property.","source":"The following illustration shows the brush without a transform, with the transform applied to the <xref:System.Windows.Media.Brush.RelativeTransform%2A> property, and with the transform applied to the <xref:System.Windows.Media.Brush.Transform%2A> property."},{"pos":[9593,9753],"content":"<bpt id=\"p1\">![</bpt>Brush RelativeTransform and Transform settings<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/wcpsdk-graphicsmm-transformandrelativetransform.png \"</bpt>wcpsdk_graphicsmm_transformandrelativetransform<ept id=\"p2\">\")</ept>","source":"![Brush RelativeTransform and Transform settings](./media/wcpsdk-graphicsmm-transformandrelativetransform.png \"wcpsdk_graphicsmm_transformandrelativetransform\")"},{"content":"This example is part of a larger sample.","pos":[9760,9800]},{"content":"For the complete sample, see the <bpt id=\"p1\">[</bpt>Brushes Sample<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=159973)</ept>.","pos":[9801,9899],"source":" For the complete sample, see the [Brushes Sample](https://go.microsoft.com/fwlink/?LinkID=159973)."},{"content":"For more information about brushes, see the  <bpt id=\"p1\">[</bpt>WPF Brushes Overview<ept id=\"p1\">](wpf-brushes-overview.md)</ept>.","pos":[9900,9993],"source":" For more information about brushes, see the  [WPF Brushes Overview](wpf-brushes-overview.md)."},{"pos":[10002,10010],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[10196,10301],"content":"<bpt id=\"p1\">[</bpt>Painting with Solid Colors and Gradients Overview<ept id=\"p1\">](painting-with-solid-colors-and-gradients-overview.md)</ept>","source":"[Painting with Solid Colors and Gradients Overview](painting-with-solid-colors-and-gradients-overview.md)"},{"pos":[10304,10395],"content":"<bpt id=\"p1\">[</bpt>Painting with Images, Drawings, and Visuals<ept id=\"p1\">](painting-with-images-drawings-and-visuals.md)</ept>","source":"[Painting with Images, Drawings, and Visuals](painting-with-images-drawings-and-visuals.md)"},{"pos":[10398,10443],"content":"<bpt id=\"p1\">[</bpt>Transforms Overview<ept id=\"p1\">](transforms-overview.md)</ept>","source":"[Transforms Overview](transforms-overview.md)"}]}