<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="custom-token-handlers.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c27abb5df7f895a9dec5f7f784f1a3ff0b31edb7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\security\custom-token-handlers.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e029586f8c2bb8da347964c082aa831a273d70ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55a7a93d396386ed4ba57ddd27b503a4c8cbfabe</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Custom Token Handlers</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Custom Token Handlers</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses token handlers in WIF and how they are used to process tokens.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The topic also covers what is necessary to create custom token handlers for token types that are not supported by default in WIF.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Introduction to Token Handlers in WIF</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>WIF relies on security token handlers to create, read, write, and validate tokens for a relying party (RP) application or a security token service (STS).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Token handlers are extensibility points for you to add a custom token handler in the WIF pipeline, or to customize the way that an existing token handler manages tokens.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>WIF provides nine built-in security token handlers that can be modified or entirely overridden to change the functionality as necessary.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Built-In Security Token Handlers in WIF</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>WIF 4.5 includes nine security token handler classes that derive from the abstract base class <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Adding a Custom Token Handler</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Some token types, such as Simple Web Tokens (SWT) and JSON Web Tokens (JWT) do not have built-in token handlers provided by WIF.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For these token types and for others that do not have a built-in handler, you need to perform the following steps to create a custom token handler.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Adding a custom token handler</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Create a new class that derives from <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Override the following methods and provide your own implementation:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add a reference to the new custom token handler in the <bpt id="p1">*</bpt>Web.config<ept id="p1">*</ept> or <bpt id="p2">*</bpt>App.config<ept id="p2">*</ept> file, within the <bpt id="p3">**</bpt><ph id="ph1">\&lt;</ph>system.identityModel&gt;<ept id="p3">**</ept> section that applies to WIF.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, the following configuration markup specifies a new token handler named <bpt id="p1">**</bpt>MyCustomTokenHandler<ept id="p1">**</ept> that resides in the <bpt id="p2">**</bpt>CustomToken<ept id="p2">**</ept> namespace.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Note that if you are providing your own token handler to handle a token type that already has a built-in token handler, you need to add a <bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>remove&gt;<ept id="p1">**</ept> element to drop the default handler and use your custom handler instead.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, the following configuration replaces the default <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph> with the custom token handler:</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>