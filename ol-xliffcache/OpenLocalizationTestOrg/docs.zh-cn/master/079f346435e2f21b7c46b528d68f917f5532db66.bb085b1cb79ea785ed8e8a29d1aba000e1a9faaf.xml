{"content":"---\ntitle: \"Grouping Data (C#)\"\nms.date: 07/20/2015\nms.assetid: e414e9e4-343a-4e6e-858f-4a30c5e64492\n---\n# Grouping Data (C#)\nGrouping refers to the operation of putting data into groups so that the elements in each group share a common attribute.  \n  \n The following illustration shows the results of grouping a sequence of characters. The key for each group is the character.  \n  \n ![LINQ Grouping Operations](../../../../csharp/programming-guide/concepts/linq/media/linq_group.png \"LINQ_Group\")  \n  \n The standard query operator methods that group data elements are listed in the following section.  \n  \n## Methods  \n  \n|Method Name|Description|C# Query Expression Syntax|More Information|  \n|-----------------|-----------------|---------------------------------|----------------------|  \n|GroupBy|Groups elements that share a common attribute. Each group is represented by an <xref:System.Linq.IGrouping%602> object.|`group … by`<br /><br /> -or-<br /><br /> `group … by … into …`|<xref:System.Linq.Enumerable.GroupBy%2A?displayProperty=nameWithType><br /><br /> <xref:System.Linq.Queryable.GroupBy%2A?displayProperty=nameWithType>|  \n|ToLookup|Inserts elements into a <xref:System.Linq.Lookup%602> (a one-to-many dictionary) based on a key selector function.|Not applicable.|<xref:System.Linq.Enumerable.ToLookup%2A?displayProperty=nameWithType>|  \n  \n## Query Expression Syntax Example  \n The following code example uses the `group by` clause to group integers in a list according to whether they are even or odd.  \n  \n```csharp  \nList<int> numbers = new List<int>() { 35, 44, 200, 84, 3987, 4, 199, 329, 446, 208 };  \n  \nIEnumerable<IGrouping<int, int>> query = from number in numbers  \n                                         group number by number % 2;  \n  \nforeach (var group in query)  \n{  \n    Console.WriteLine(group.Key == 0 ? \"\\nEven numbers:\" : \"\\nOdd numbers:\");  \n    foreach (int i in group)  \n        Console.WriteLine(i);  \n}  \n  \n/* This code produces the following output:  \n  \n    Odd numbers:  \n    35  \n    3987  \n    199  \n    329  \n  \n    Even numbers:  \n    44  \n    200  \n    84  \n    4  \n    446  \n    208  \n*/  \n```  \n  \n## See also\n\n- <xref:System.Linq>\n- [Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)\n- [group clause](../../../../csharp/language-reference/keywords/group-clause.md)\n- [How to: Create a Nested Group](../../../../csharp/programming-guide/linq-query-expressions/how-to-create-a-nested-group.md)\n- [How to: Group Files by Extension (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-group-files-by-extension-linq.md)\n- [How to: Group Query Results](../../../../csharp/programming-guide/linq-query-expressions/how-to-group-query-results.md)\n- [How to: Perform a Subquery on a Grouping Operation](../../../../csharp/programming-guide/linq-query-expressions/how-to-perform-a-subquery-on-a-grouping-operation.md)\n- [How to: Split a File Into Many Files by Using Groups (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md)\n","nodes":[{"pos":[4,100],"embed":true,"restype":"x-metadata","content":"title: \"Grouping Data (C#)\"\nms.date: 07/20/2015\nms.assetid: e414e9e4-343a-4e6e-858f-4a30c5e64492","nodes":[{"content":"Grouping Data (C#)","nodes":[{"pos":[0,18],"content":"Grouping Data (C#)","nodes":[{"content":"Grouping Data (C#)","pos":[0,18]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[107,125],"content":"Grouping Data (C#)","linkify":"Grouping Data (C#)","nodes":[{"content":"Grouping Data (C#)","pos":[0,18]}]},{"content":"Grouping refers to the operation of putting data into groups so that the elements in each group share a common attribute.","pos":[126,247]},{"content":"The following illustration shows the results of grouping a sequence of characters.","pos":[254,336]},{"content":"The key for each group is the character.","pos":[337,377]},{"pos":[384,497],"content":"<bpt id=\"p1\">![</bpt>LINQ Grouping Operations<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../csharp/programming-guide/concepts/linq/media/linq_group.png \"</bpt>LINQ_Group<ept id=\"p2\">\")</ept>","source":"![LINQ Grouping Operations](../../../../csharp/programming-guide/concepts/linq/media/linq_group.png \"LINQ_Group\")"},{"content":"The standard query operator methods that group data elements are listed in the following section.","pos":[504,601]},{"pos":[610,617],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method Name","pos":[624,635]},{"content":"Description","pos":[636,647]},{"content":"C# Query Expression Syntax","pos":[648,674]},{"content":"More Information","pos":[675,691]},{"content":"GroupBy","pos":[793,800]},{"content":"Groups elements that share a common attribute.","pos":[801,847]},{"content":"Each group is represented by an <ph id=\"ph1\">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.","pos":[848,920],"source":" Each group is represented by an <xref:System.Linq.IGrouping%602> object."},{"content":"-or-","pos":[946,950]},{"content":"ToLookup","pos":[1140,1148]},{"pos":[1149,1263],"content":"Inserts elements into a <ph id=\"ph1\">&lt;xref:System.Linq.Lookup%602&gt;</ph> (a one-to-many dictionary) based on a key selector function.","source":"Inserts elements into a <xref:System.Linq.Lookup%602> (a one-to-many dictionary) based on a key selector function."},{"content":"Not applicable.","pos":[1264,1279]},{"pos":[1360,1391],"content":"Query Expression Syntax Example","linkify":"Query Expression Syntax Example","nodes":[{"content":"Query Expression Syntax Example","pos":[0,31]}]},{"pos":[1395,1519],"content":"The following code example uses the <ph id=\"ph1\">`group by`</ph> clause to group integers in a list according to whether they are even or odd.","source":"The following code example uses the `group by` clause to group integers in a list according to whether they are even or odd."},{"pos":[2157,2165],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2190,2319],"content":"<bpt id=\"p1\">[</bpt>Standard Query Operators Overview (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept>","source":"[Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)"},{"pos":[2322,2400],"content":"<bpt id=\"p1\">[</bpt>group clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/group-clause.md)</ept>","source":"[group clause](../../../../csharp/language-reference/keywords/group-clause.md)"},{"pos":[2403,2527],"content":"<bpt id=\"p1\">[</bpt>How to: Create a Nested Group<ept id=\"p1\">](../../../../csharp/programming-guide/linq-query-expressions/how-to-create-a-nested-group.md)</ept>","source":"[How to: Create a Nested Group](../../../../csharp/programming-guide/linq-query-expressions/how-to-create-a-nested-group.md)"},{"pos":[2530,2668],"content":"<bpt id=\"p1\">[</bpt>How to: Group Files by Extension (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-group-files-by-extension-linq.md)</ept>","source":"[How to: Group Files by Extension (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-group-files-by-extension-linq.md)"},{"pos":[2671,2791],"content":"<bpt id=\"p1\">[</bpt>How to: Group Query Results<ept id=\"p1\">](../../../../csharp/programming-guide/linq-query-expressions/how-to-group-query-results.md)</ept>","source":"[How to: Group Query Results](../../../../csharp/programming-guide/linq-query-expressions/how-to-group-query-results.md)"},{"pos":[2794,2960],"content":"<bpt id=\"p1\">[</bpt>How to: Perform a Subquery on a Grouping Operation<ept id=\"p1\">](../../../../csharp/programming-guide/linq-query-expressions/how-to-perform-a-subquery-on-a-grouping-operation.md)</ept>","source":"[How to: Perform a Subquery on a Grouping Operation](../../../../csharp/programming-guide/linq-query-expressions/how-to-perform-a-subquery-on-a-grouping-operation.md)"},{"pos":[2963,3141],"content":"<bpt id=\"p1\">[</bpt>How to: Split a File Into Many Files by Using Groups (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md)</ept>","source":"[How to: Split a File Into Many Files by Using Groups (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md)"}]}