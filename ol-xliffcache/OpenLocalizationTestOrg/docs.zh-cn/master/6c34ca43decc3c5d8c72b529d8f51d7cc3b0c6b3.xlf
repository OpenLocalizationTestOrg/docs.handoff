<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="for-each-on-type-typename-is-ambiguous.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c34ca43decc3c5d8c72b529d8f51d7cc3b0c6b3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\error-messages\for-each-on-type-typename-is-ambiguous.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0ab46af86febd20a16e112ef4bf4ac9fd192398</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4beff28816661c831c59157107e34909a20f4a9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>'For Each' on type '<ph id="ph1">&lt;typename&gt;</ph>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>'For Each' on type '<ph id="ph1">\&lt;</ph>typename&gt;' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`For Each`</ph> statement specifies an iterator variable that has more than one <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The iterator variable must be of a type that implements the <ph id="ph1">&lt;xref:System.Collections.IEnumerable?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> interface in one of the <ph id="ph3">`Collections`</ph> namespaces of the <ph id="ph4">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It is possible for a class to implement more than one constructed generic interface, using a different type argument for each construction.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If a class that does this is used for the iterator variable, that variable has more than one <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In such a case, Visual Basic cannot choose which method to call.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC32096</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>DirectCast Operator<ept id="p1">](../../../visual-basic/language-reference/operators/directcast-operator.md)</ept> or <bpt id="p2">[</bpt>TryCast Operator<ept id="p2">](../../../visual-basic/language-reference/operators/trycast-operator.md)</ept> to cast the iterator variable type to the interface defining the <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method you want to use.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>For Each...Next Statement<ept id="p1">](../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interfaces<ept id="p1">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>