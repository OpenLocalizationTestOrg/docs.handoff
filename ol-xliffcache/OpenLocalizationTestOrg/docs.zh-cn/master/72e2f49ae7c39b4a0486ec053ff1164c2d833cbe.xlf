<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="findprivatekey.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72e2f49ae7c39b4a0486ec053ff1164c2d833cbe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\findprivatekey.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f23c2c4028c10fc7e16aa03098d650b75982291d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0965d2629b58ccdc96dd61240173f65c7983d61</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>FindPrivateKey sample - WCF</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>FindPrivateKey sample</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It can be difficult to find the location and name of the private key file associated with a specific X.509 certificate in the certificate store.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The FindPrivateKey.exe tool facilitates this process.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>FindPrivateKey is a sample that needs to be compiled prior to use.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>To build the FindPrivateKey project<ept id="p1">](#to-build-the-findprivatekey-project)</ept> section for instructions on how to build the FindPrivateKey tool.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>X.509 certificates are installed by an Administrator or any user in the machine.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, the certificate may be accessed by a service running under a different account.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, the NETWORK SERVICE account.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This account may not have access to the private key file because the certificate was not installed by it originally.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The FindPrivateKey tool gives you the location of a given X.509 Certificate's private key file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can add permissions or remove permissions to this file once you know the location of the particular X.509 certificates' private key file.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The samples that use certificates for security use the FindPrivateKey tool in the <bpt id="p1">*</bpt>Setup.bat<ept id="p1">*</ept> file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Once the private key file has been found, you can use other tools such as <bpt id="p1">*</bpt>Cacls.exe<ept id="p1">*</ept> to set the appropriate access rights onto the file.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When running a Windows Communication Foundation (WCF) service under a user account, such as a self-hosted executable, ensure that the user account has read-only access to the file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When running a WCF service under Internet Information Services (IIS) the default accounts that the service runs under are the NETWORK SERVICE on IIS 7 and earlier versions, or Application Pool Identity on IIS 7.5 and later versions.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Application Pool Identities<ept id="p1">](/iis/manage/configuring-security/application-pool-identities)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When accessing a certificate for which the process doesn't have read privilege, you see an exception message similar to the following example:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When this occurs, use the FindPrivateKey tool to find the private key file, and then set the access right for the process that the service is running under.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, this can be done with the Cacls.exe tool as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To build the FindPrivateKey project</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To download the project, visit <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](https://www.microsoft.com/download/details.aspx?id=21459)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">[!INCLUDE[fileExplorer](../../../../includes/fileexplorer-md.md)]</ph> and navigate to the <bpt id="p1">*</bpt>WF_WCF_Samples\WCF\Setup\FindPrivateKey\CS<ept id="p1">*</ept> folder under the directory location where you installed the sample.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Double-click the .sln file icon to open the file in Visual Studio.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Build<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>Rebuild Solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Building the solution generates the file: FindPrivateKey.exe.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Conventionsâ€”Command-Line entries</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>"[<bpt id="p1">*</bpt>option<ept id="p1">*</ept>]" represents an optional set of parameters.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>"{<bpt id="p1">*</bpt>option<ept id="p1">*</ept>}" represents a mandatory set of parameters.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>"<bpt id="p1">*</bpt>option1<ept id="p1">*</ept> &amp;#124; <bpt id="p2">*</bpt>option2<ept id="p2">*</ept>" represents a choice between sets of options.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>"<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>value<ept id="p1">*</ept>&gt;" represents a parameter value to be entered.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Usage</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Where:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If no parameters are specified at the command prompt, then this help text is displayed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This example finds the filename of the certificate with a subject name of "CN=localhost", in the Personal store of the Current User.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This example finds the filename of the certificate with a subject name of "CN=localhost", in the Personal store of the Current User and output the full directory path.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This example finds the filename of the certificate with a thumbprint of "03 33 98 63 d0 47 e7 48 71 33 62 64 76 5c 4c 9d 42 1d 6b 52", in the Personal store of the Local Computer.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>