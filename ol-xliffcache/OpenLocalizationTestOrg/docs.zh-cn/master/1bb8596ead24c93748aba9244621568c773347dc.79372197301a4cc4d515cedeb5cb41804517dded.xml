{"content":"---\ntitle: \"Post-Schema Compilation Infoset | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: 7f1bc7f4-401b-459f-9078-f099cc711fde\ncaps.latest.revision: 3\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Post-Schema Compilation Infoset\nThe [World Wide Web Consortium (W3C) XML Schema Recommendation](http://go.microsoft.com/fwlink/?linkid=45242) discusses the information set (infoset) that must be exposed for pre-schema validation and post-schema compilation. The XML Schema Object Model (SOM) views this exposure before and after the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> is called.  \n  \n The pre-schema validation infoset is built during the editing of the schema. The post-schema compilation infoset is generated after the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> is called, during compilation of the schema, and is exposed as properties.  \n  \n The SOM is the object model that represents the pre-schema validation and post-schema compilation infosets; it consists of the classes in the <xref:System.Xml.Schema?displayProperty=fullName> namespace. All read and write properties of classes in the <xref:System.Xml.Schema> namespace belong to the pre-schema validation infoset, while all read-only properties of classes in the <xref:System.Xml.Schema> namespace belong to the post-schema compilation infoset. The exception to this rule are the following properties, which are both pre-schema validation infoset and post-schema compilation infoset properties.  \n  \n|Class|Property|  \n|-----------|--------------|  \n|<xref:System.Xml.Schema.XmlSchemaObject>|<xref:System.Xml.Schema.XmlSchemaObject.Parent%2A>|  \n|<xref:System.Xml.Schema.XmlSchema>|<xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A>, <xref:System.Xml.Schema.XmlSchema.BlockDefault%2A>, <xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A>, <xref:System.Xml.Schema.XmlSchema.FinalDefault%2A>, <xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A>|  \n|<xref:System.Xml.Schema.XmlSchemaExternal>|<xref:System.Xml.Schema.XmlSchemaExternal.Schema%2A>|  \n|<xref:System.Xml.Schema.XmlSchemaAttributeGroup>|<xref:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute%2A>|  \n|<xref:System.Xml.Schema.XmlSchemaParticle>|<xref:System.Xml.Schema.XmlSchemaParticle.MaxOccurs%2A>, <xref:System.Xml.Schema.XmlSchemaParticle.MinOccurs%2A>|  \n|<xref:System.Xml.Schema.XmlSchemaComplexType>|<xref:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute%2A>|  \n  \n For example, the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaComplexType> classes both have `BlockResolved` and `FinalResolved` properties. These properties are used to hold the values for the `Block` and `Final` properties after the schema has been compiled and validated. `BlockResolved` and `FinalResolved` are read-only properties that are part of the post-schema compilation infoset.  \n  \n The following example shows the <xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> class set after validating the schema. Before validation, the property contains a `null` reference, and the <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A> is set to the name of the type in question. After validation, the <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A> is resolved to a valid type, and the type object is available through the <xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A> property.  \n  \n [!code-cpp[PsciSample#1](../../../../samples/snippets/cpp/VS_Snippets_Data/PsciSample/CPP/PsciSample.cpp#1)]\n [!code-csharp[PsciSample#1](../../../../samples/snippets/csharp/VS_Snippets_Data/PsciSample/CS/PsciSample.cs#1)]\n [!code-vb[PsciSample#1](../../../../samples/snippets/visualbasic/VS_Snippets_Data/PsciSample/VB/PsciSample.vb#1)]  \n  \n## See Also  \n [XML Schema Object Model (SOM)](../../../../docs/standard/data/xml/xml-schema-object-model-som.md)","nodes":[{"pos":[4,398],"embed":true,"restype":"x-metadata","content":"title: \"Post-Schema Compilation Infoset | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: 7f1bc7f4-401b-459f-9078-f099cc711fde\ncaps.latest.revision: 3\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"Post-Schema Compilation Infoset | Microsoft Docs","nodes":[{"pos":[0,48],"content":"Post-Schema Compilation Infoset | Microsoft Docs","nodes":[{"content":"Post-Schema Compilation Infoset | Microsoft Docs","pos":[0,48]}]}],"path":["title"]}],"yml":true},{"pos":[405,436],"content":"Post-Schema Compilation Infoset","linkify":"Post-Schema Compilation Infoset","nodes":[{"content":"Post-Schema Compilation Infoset","pos":[0,31]}]},{"content":"The <bpt id=\"p1\">[</bpt>World Wide Web Consortium (W3C) XML Schema Recommendation<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=45242)</ept> discusses the information set (infoset) that must be exposed for pre-schema validation and post-schema compilation.","pos":[437,662],"source":"The [World Wide Web Consortium (W3C) XML Schema Recommendation](http://go.microsoft.com/fwlink/?linkid=45242) discusses the information set (infoset) that must be exposed for pre-schema validation and post-schema compilation."},{"content":"The XML Schema Object Model (SOM) views this exposure before and after the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is called.","pos":[663,849],"source":" The XML Schema Object Model (SOM) views this exposure before and after the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> is called."},{"content":"The pre-schema validation infoset is built during the editing of the schema.","pos":[856,932]},{"content":"The post-schema compilation infoset is generated after the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is called, during compilation of the schema, and is exposed as properties.","pos":[933,1167],"source":" The post-schema compilation infoset is generated after the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> is called, during compilation of the schema, and is exposed as properties."},{"content":"The SOM is the object model that represents the pre-schema validation and post-schema compilation infosets; it consists of the classes in the <ph id=\"ph1\">&lt;xref:System.Xml.Schema?displayProperty=fullName&gt;</ph> namespace.","pos":[1174,1376],"source":"The SOM is the object model that represents the pre-schema validation and post-schema compilation infosets; it consists of the classes in the <xref:System.Xml.Schema?displayProperty=fullName> namespace."},{"content":"All read and write properties of classes in the <ph id=\"ph1\">&lt;xref:System.Xml.Schema&gt;</ph> namespace belong to the pre-schema validation infoset, while all read-only properties of classes in the <ph id=\"ph2\">&lt;xref:System.Xml.Schema&gt;</ph> namespace belong to the post-schema compilation infoset.","pos":[1377,1635],"source":" All read and write properties of classes in the <xref:System.Xml.Schema> namespace belong to the pre-schema validation infoset, while all read-only properties of classes in the <xref:System.Xml.Schema> namespace belong to the post-schema compilation infoset."},{"content":"The exception to this rule are the following properties, which are both pre-schema validation infoset and post-schema compilation infoset properties.","pos":[1636,1785]},{"content":"Class","pos":[1792,1797]},{"content":"Property","pos":[1798,1806]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchema.BlockDefault%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Xml.Schema.XmlSchema.FinalDefault%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A&gt;</ph>","pos":[1973,2248],"source":"<xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A>, <xref:System.Xml.Schema.XmlSchema.BlockDefault%2A>, <xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A>, <xref:System.Xml.Schema.XmlSchema.FinalDefault%2A>, <xref:System.Xml.Schema.XmlSchema.TargetNamespace%2A>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaParticle.MaxOccurs%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaParticle.MinOccurs%2A&gt;</ph>","pos":[2514,2626],"source":"<xref:System.Xml.Schema.XmlSchemaParticle.MaxOccurs%2A>, <xref:System.Xml.Schema.XmlSchemaParticle.MinOccurs%2A>"},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaComplexType&gt;</ph> classes both have <ph id=\"ph3\">`BlockResolved`</ph> and <ph id=\"ph4\">`FinalResolved`</ph> properties.","pos":[2746,2920],"source":"For example, the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaComplexType> classes both have `BlockResolved` and `FinalResolved` properties."},{"content":"These properties are used to hold the values for the <ph id=\"ph1\">`Block`</ph> and <ph id=\"ph2\">`Final`</ph> properties after the schema has been compiled and validated.","pos":[2921,3054],"source":" These properties are used to hold the values for the `Block` and `Final` properties after the schema has been compiled and validated."},{"content":"<ph id=\"ph1\">`BlockResolved`</ph> and <ph id=\"ph2\">`FinalResolved`</ph> are read-only properties that are part of the post-schema compilation infoset.","pos":[3055,3169],"source":"`BlockResolved` and `FinalResolved` are read-only properties that are part of the post-schema compilation infoset."},{"content":"The following example shows the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> class set after validating the schema.","pos":[3176,3367],"source":"The following example shows the <xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> class set after validating the schema."},{"content":"Before validation, the property contains a <ph id=\"ph1\">`null`</ph> reference, and the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A&gt;</ph> is set to the name of the type in question.","pos":[3368,3540],"source":" Before validation, the property contains a `null` reference, and the <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A> is set to the name of the type in question."},{"content":"After validation, the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A&gt;</ph> is resolved to a valid type, and the type object is available through the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt;</ph> property.","pos":[3541,3769],"source":" After validation, the <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A> is resolved to a valid type, and the type object is available through the <xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A> property."},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>PsciSample#1<ept id=\"p2\">](../../../../samples/snippets/cpp/VS_Snippets_Data/PsciSample/CPP/PsciSample.cpp#1)</ept><ept id=\"p1\">]</ept>","pos":[3776,3884],"source":"[!code-cpp[PsciSample#1](../../../../samples/snippets/cpp/VS_Snippets_Data/PsciSample/CPP/PsciSample.cpp#1)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>PsciSample#1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Data/PsciSample/CS/PsciSample.cs#1)</ept><ept id=\"p1\">]</ept>","pos":[3886,3998],"source":"[!code-csharp[PsciSample#1](../../../../samples/snippets/csharp/VS_Snippets_Data/PsciSample/CS/PsciSample.cs#1)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>PsciSample#1<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Data/PsciSample/VB/PsciSample.vb#1)</ept><ept id=\"p1\">]</ept>","pos":[4000,4113],"source":"[!code-vb[PsciSample#1](../../../../samples/snippets/visualbasic/VS_Snippets_Data/PsciSample/VB/PsciSample.vb#1)]"},{"pos":[4122,4130],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4134,4232],"content":"<bpt id=\"p1\">[</bpt>XML Schema Object Model (SOM)<ept id=\"p1\">](../../../../docs/standard/data/xml/xml-schema-object-model-som.md)</ept>","source":"[XML Schema Object Model (SOM)](../../../../docs/standard/data/xml/xml-schema-object-model-som.md)"}]}