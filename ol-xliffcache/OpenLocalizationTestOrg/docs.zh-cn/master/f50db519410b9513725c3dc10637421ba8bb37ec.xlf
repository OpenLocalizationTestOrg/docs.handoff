<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="debugging-structures.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f50db519410b9513725c3dc10637421ba8bb37ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\debugging\debugging-structures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96101dd3379f28d11366021617d80c54989e6262</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a82801de8c01f42fa894dbcc12891fedb713eed</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Debugging Structures</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Debugging Structures</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section describes the unmanaged structures that the debugging API uses.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CLRDATA_ADDRESS_RANGE Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/clrdata-address-range-structure.md)</ept> Defines an address range.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CLRDATA_IL_ADDRESS_MAP Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/clrdata-il-address-map-structure.md)</ept> Defines an IL to address mapping</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CLR_DEBUGGING_VERSION Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/clr-debugging-version-structure.md)</ept> Defines the product version of the common language runtime (CLR) for debugging purposes.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CodeChunkInfo Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/codechunkinfo-structure.md)</ept> Represents a single chunk of code in memory.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_ACTIVE_FUNCTION<ept id="p1">](cor-active-function-structure.md)</ept> Contains information about the functions that are currently active in a thread's frames.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_ARRAY_LAYOUT Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-array-layout-structure.md)</ept> Provides information about the layout of an array object in memory.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_DEBUG_IL_TO_NATIVE_MAP<ept id="p1">](cor-debug-il-to-native-map-structure.md)</ept> Contains the offsets that are used to map Microsoft intermediate language (MSIL) code to native code.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_DEBUG_STEP_RANGE<ept id="p1">](cor-debug-step-range-structure.md)</ept> Contains the offset information for a range of code.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_FIELD Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-field-structure.md)</ept> Provides information about a field in an object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_GC_REFERENCE Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-gc-reference-structure.md)</ept> Contains information about an object that is to be garbage-collected.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_HEAPINFO Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-heapinfo-structure.md)</ept> Provides general information about the garbage collection heap, including whether it is enumerable.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_HEAPOBJECT Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-heapobject-structure.md)</ept> Provides information about an object on the managed heap.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_IL_MAP<ept id="p1">](cor-il-map-structure.md)</ept> Specifies changes in the relative offset of a function.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_SEGMENT Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-segment-structure.md)</ept> Contains information about a region of memory in the managed heap.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_TYPEID Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-typeid-structure.md)</ept> Contains a type identifier.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_TYPE_LAYOUT Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cor-type-layout-structure.md)</ept> Provides information about the layout of an object in memory.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COR_VERSION<ept id="p1">](cor-version-structure.md)</ept> Stores the standard four-part version number of the common language runtime.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugBlockingObject Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugblockingobject-structure.md)</ept> Defines an object that is blocking a thread and the reason why the thread is blocked.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugEHClause Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugehclause-structure.md)</ept> Represents an exception handling (EH) clause for a given piece of intermediate language (IL).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugExceptionObjectStackFrame Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugexceptionobjectstackframe-structure.md)</ept> Represents stack frame information from an exception object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CorDebugGuidToTypeMapping Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugguidtotypemapping-structure.md)</ept> Maps a <ph id="ph1">[!INCLUDE[wrt](../../../../includes/wrt-md.md)]</ph> GUID to its corresponding <bpt id="p2">[</bpt>ICorDebugType<ept id="p2">](../../../../docs/framework/unmanaged-api/debugging/icordebugtype-interface.md)</ept> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DacpGetModuleAddress Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/dacpgetmoduleaddress-structure.md)</ept> Defines the container for a module address request.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DacpMethodDescData Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/dacpmethoddescdata-structure.md)</ept> Defines a transport buffer for a method's runtime information.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DacpModuleData Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/dacpmoduledata-structure.md)</ept> Defines a transport buffer for a module's runtime information.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DacpReJitData Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/dacprejitdata-structure.md)</ept> Defines the basic information about a given profiler-instrumented method.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StackTrace_SimpleContext Structure<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/stacktrace-simplecontext-structure.md)</ept> Provides a simple context that can be used in place of a full <ph id="ph1">`CONTEXT`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Related Sections</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Coclasses<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-coclasses.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Global Static Functions<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-global-static-functions.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Enumerations<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-enumerations.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>