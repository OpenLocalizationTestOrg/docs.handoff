<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-ffc129d" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ac1552dba8756d033ee02651142476c4a15a485</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\sorted-collection-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a31dfa9492ab9ef2b45b3466b39eeee0e984df1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a270f14037f0062a5438b739575d3c5911cc8b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Sorted Collection Types | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sorted Collection Types</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.SortedList?displayProperty=fullName&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;</ph> generic class, and the <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602?displayProperty=fullName&gt;</ph> generic class are similar to the <ph id="ph4">&lt;xref:System.Collections.Hashtable&gt;</ph> class and the <ph id="ph5">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class in that they implement the <ph id="ph6">&lt;xref:System.Collections.IDictionary&gt;</ph> interface, but they maintain their elements in sort order by key, and they do not have the O(1) insertion and retrieval characteristic of hash tables.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The three classes have several features in common:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>All three classes implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The two generic classes also implement the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName&gt;</ph> generic interface.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair for enumeration purposes.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The nongeneric <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> class returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects when enumerated, although the two generic types return <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Elements are sorted according to a <ph id="ph1">&lt;xref:System.Collections.IComparer?displayProperty=fullName&gt;</ph> implementation (for nongeneric <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>) or a <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=fullName&gt;</ph> implementation (for the two generic classes).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each class provides properties that return collections containing only the keys or only the values.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following table lists some of the differences between the two sorted list classes and the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> nongeneric class and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> generic class</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic class</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The properties that return keys and values are indexed, allowing efficient indexed retrieval.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>No indexed retrieval.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Retrieval is O(log <ph id="ph1">`n`</ph>).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Retrieval is O(log <ph id="ph1">`n`</ph>).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Insertion and removal are generally O(<ph id="ph1">`n`</ph>); however, insertion is O(1) for data that are already in sort order, so that each element is added to the end of the list.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>(This assumes that a resize is not required.)</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Insertion and removal are O(log <ph id="ph1">`n`</ph>).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Uses less memory than a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Uses more memory than the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> nongeneric class and the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> generic class.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For sorted lists or dictionaries that must be accessible concurrently from multiple threads, you can add sorting logic to a class that derives from <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For values that contain their own keys (for example, employee records that contain an employee ID number), you can create a keyed collection that has some characteristics of a list and some characteristics of a dictionary by deriving from the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> generic class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class provides a self-balancing tree that maintains data in sorted order after insertions, deletions, and searches.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This class and the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class implement the <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Commonly Used Collection Types<ept id="p1">](../../../docs/standard/collections/commonly-used-collection-types.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>