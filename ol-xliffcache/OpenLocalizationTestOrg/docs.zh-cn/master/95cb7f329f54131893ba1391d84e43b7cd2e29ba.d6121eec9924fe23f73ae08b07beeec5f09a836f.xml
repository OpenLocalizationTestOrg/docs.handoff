{"content":"---\ntitle: \"How to: Join Content from Dissimilar Files (LINQ) (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: aa2d12a6-70a9-492f-a6db-b2b850d46811\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Join Content from Dissimilar Files (LINQ) (C#)\nThis example shows how to join data from two comma-delimited files that share a common value that is used as a matching key. This technique can be useful if you have to combine data from two spreadsheets, or from a spreadsheet and from a file that has another format, into a new file. You can modify the example to work with any kind of structured text.  \n  \n### To create the data files  \n  \n1.  Copy the following lines into a file that is named scores.csv and save it to your project folder. The file represents spreadsheet data. Column 1 is the student's ID, and columns 2 through 5 are test scores.  \n  \n    ```  \n    111, 97, 92, 81, 60  \n    112, 75, 84, 91, 39  \n    113, 88, 94, 65, 91  \n    114, 97, 89, 85, 82  \n    115, 35, 72, 91, 70  \n    116, 99, 86, 90, 94  \n    117, 93, 92, 80, 87  \n    118, 92, 90, 83, 78  \n    119, 68, 79, 88, 92  \n    120, 99, 82, 81, 79  \n    121, 96, 85, 91, 60  \n    122, 94, 92, 91, 91  \n    ```  \n  \n2.  Copy the following lines into a file that is named names.csv and save it to your project folder. The file represents a spreadsheet that contains the student's last name, first name, and student ID.  \n  \n    ```  \n    Omelchenko,Svetlana,111  \n    O'Donnell,Claire,112  \n    Mortensen,Sven,113  \n    Garcia,Cesar,114  \n    Garcia,Debra,115  \n    Fakhouri,Fadi,116  \n    Feng,Hanying,117  \n    Garcia,Hugo,118  \n    Tucker,Lance,119  \n    Adams,Terry,120  \n    Zabokritski,Eugene,121  \n    Tucker,Michael,122  \n    ```  \n  \n## Example  \n  \n```csharp  \nclass JoinStrings  \n{  \n    static void Main()  \n    {  \n        // Join content from dissimilar files that contain  \n        // related information. File names.csv contains the student  \n        // name plus an ID number. File scores.csv contains the ID   \n        // and a set of four test scores. The following query joins  \n        // the scores to the student names by using ID as a  \n        // matching key.  \n  \n        string[] names = System.IO.File.ReadAllLines(@\"../../../names.csv\");  \n        string[] scores = System.IO.File.ReadAllLines(@\"../../../scores.csv\");  \n  \n        // Name:    Last[0],       First[1],  ID[2]  \n        //          Omelchenko,    Svetlana,  11  \n        // Score:   StudentID[0],  Exam1[1]   Exam2[2],  Exam3[3],  Exam4[4]  \n        //          111,           97,        92,        81,        60  \n  \n        // This query joins two dissimilar spreadsheets based on common ID value.  \n        // Multiple from clauses are used instead of a join clause  \n        // in order to store results of id.Split.  \n        IEnumerable<string> scoreQuery1 =  \n            from name in names  \n            let nameFields = name.Split(',')  \n            from id in scores  \n            let scoreFields = id.Split(',')  \n            where nameFields[2] == scoreFields[0]  \n            select nameFields[0] + \",\" + scoreFields[1] + \",\" + scoreFields[2]   \n                   + \",\" + scoreFields[3] + \",\" + scoreFields[4];  \n  \n        // Pass a query variable to a method and execute it  \n        // in the method. The query itself is unchanged.  \n        OutputQueryResults(scoreQuery1, \"Merge two spreadsheets:\");  \n  \n        // Keep console window open in debug mode.  \n        Console.WriteLine(\"Press any key to exit\");  \n        Console.ReadKey();  \n    }  \n  \n    static void OutputQueryResults(IEnumerable<string> query, string message)  \n    {  \n        Console.WriteLine(System.Environment.NewLine + message);  \n        foreach (string item in query)  \n        {  \n            Console.WriteLine(item);  \n        }  \n        Console.WriteLine(\"{0} total names in list\", query.Count());  \n    }  \n}  \n/* Output:  \nMerge two spreadsheets:  \nAdams, 99, 82, 81, 79  \nFakhouri, 99, 86, 90, 94  \nFeng, 93, 92, 80, 87  \nGarcia, 97, 89, 85, 82  \nGarcia, 35, 72, 91, 70  \nGarcia, 92, 90, 83, 78  \nMortensen, 88, 94, 65, 91  \nO'Donnell, 75, 84, 91, 39  \nOmelchenko, 97, 92, 81, 60  \nTucker, 68, 79, 88, 92  \nTucker, 94, 92, 91, 91  \nZabokritski, 96, 85, 91, 60  \n12 total names in list  \n */  \n```  \n  \n## Compiling the Code  \n Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and `using` directives for the System.Linq and System.IO namespaces.  \n  \n## See Also  \n [LINQ and Strings (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-strings.md)   \n [LINQ and File Directories (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)","nodes":[{"pos":[12,83],"content":"How to: Join Content from Dissimilar Files (LINQ) (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Join Content from Dissimilar Files (LINQ) (C#) | Microsoft Docs","pos":[0,71]}]},{"pos":[442,496],"content":"How to: Join Content from Dissimilar Files (LINQ) (C#)","linkify":"How to: Join Content from Dissimilar Files (LINQ) (C#)","nodes":[{"content":"How to: Join Content from Dissimilar Files (LINQ) (C#)","pos":[0,54]}]},{"content":"This example shows how to join data from two comma-delimited files that share a common value that is used as a matching key.","pos":[497,621]},{"content":"This technique can be useful if you have to combine data from two spreadsheets, or from a spreadsheet and from a file that has another format, into a new file.","pos":[622,781]},{"content":"You can modify the example to work with any kind of structured text.","pos":[782,850]},{"pos":[860,884],"content":"To create the data files","linkify":"To create the data files","nodes":[{"content":"To create the data files","pos":[0,24]}]},{"content":"Copy the following lines into a file that is named scores.csv and save it to your project folder.","pos":[894,991]},{"content":"The file represents spreadsheet data.","pos":[992,1029]},{"content":"Column 1 is the student's ID, and columns 2 through 5 are test scores.","pos":[1030,1100]},{"content":"Copy the following lines into a file that is named names.csv and save it to your project folder.","pos":[1445,1541]},{"content":"The file represents a spreadsheet that contains the student's last name, first name, and student ID.","pos":[1542,1642]},{"pos":[1970,1977],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4529,4547],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[4551,4728],"content":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and <ph id=\"ph1\">`using`</ph> directives for the System.Linq and System.IO namespaces.","source":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and `using` directives for the System.Linq and System.IO namespaces."},{"pos":[4737,4745],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>LINQ and Strings (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-and-strings.md)</ept><ph id=\"ph1\"> </ph>","pos":[4749,4845],"source":"[LINQ and Strings (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-strings.md) "},{"content":"<bpt id=\"p1\"> [</bpt>LINQ and File Directories (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)</ept>","pos":[4848,4962],"source":" [LINQ and File Directories (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)"}]}