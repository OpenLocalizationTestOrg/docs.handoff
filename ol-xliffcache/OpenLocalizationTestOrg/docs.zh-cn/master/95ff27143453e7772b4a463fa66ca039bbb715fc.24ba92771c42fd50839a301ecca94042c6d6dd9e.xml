{"content":"---\ntitle: \"ExportType Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink.ExportType\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ExportType\"\nhelpviewer_keywords: \n  - \"ExportType method\"\nms.assetid: 91a7ce63-f5b8-4f16-b2c4-e1d0baa88944\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ExportType Method\nSpecifies that a type is exportable.  \n  \n## Syntax  \n  \n```  \nHRESULT ExportType(  \n    mdAssembly      AssemblyID,  \n    mdToken         FileToken,  \n    mdTypeDef       TypeToken,  \n    LPCWSTR         pszTypename,  \n    DWORD           dwFlags,  \n    mdExportedType* pType  \n) PURE;  \n```  \n  \n## Parameters  \n `AssemblyID`  \n ID of the assembly to export from.  \n  \n `FileToken`  \n File token or assembly ID of file that defines the exportable type.  \n  \n `TypeToken`  \n Token of type to be made exportable.  \n  \n `pszTypename`  \n Fully qualified type name to be made exportable.  \n  \n `dwFlags`  \n `ComType` flags such as `tdPublic` or `tdNested`. This parameter may be passed to [DefineExportedType Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-defineexportedtype-method.md).  \n  \n `pType`  \n Receives token for exported type.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h  \n  \n## See also\n\n- [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)\n- [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)\n- [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)\n","nodes":[{"pos":[4,328],"embed":true,"restype":"x-metadata","content":"title: \"ExportType Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink.ExportType\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ExportType\"\nhelpviewer_keywords: \n  - \"ExportType method\"\nms.assetid: 91a7ce63-f5b8-4f16-b2c4-e1d0baa88944\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ExportType Method","nodes":[{"pos":[0,17],"content":"ExportType Method","nodes":[{"content":"ExportType Method","pos":[0,17]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[335,352],"content":"ExportType Method","linkify":"ExportType Method","nodes":[{"content":"ExportType Method","pos":[0,17]}]},{"content":"Specifies that a type is exportable.","pos":[353,389]},{"pos":[398,404],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[654,664],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ID of the assembly to export from.","pos":[684,718]},{"content":"File token or assembly ID of file that defines the exportable type.","pos":[740,807]},{"content":"Token of type to be made exportable.","pos":[829,865]},{"content":"Fully qualified type name to be made exportable.","pos":[889,937]},{"content":"<ph id=\"ph1\">`ComType`</ph> flags such as <ph id=\"ph2\">`tdPublic`</ph> or <ph id=\"ph3\">`tdNested`</ph>.","pos":[957,1006],"source":"`ComType` flags such as `tdPublic` or `tdNested`."},{"content":"This parameter may be passed to <bpt id=\"p1\">[</bpt>DefineExportedType Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-defineexportedtype-method.md)</ept>.","pos":[1007,1169],"source":" This parameter may be passed to [DefineExportedType Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-defineexportedtype-method.md)."},{"content":"Receives token for exported type.","pos":[1187,1220]},{"pos":[1229,1241],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1245,1281]},{"pos":[1290,1302],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h","pos":[1306,1322]},{"pos":[1331,1339],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1343,1429],"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept>","source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)"},{"pos":[1432,1520],"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept>","source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)"},{"pos":[1523,1591],"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}