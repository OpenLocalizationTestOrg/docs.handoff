<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46b5ab3dcd3599098c84c08642aeb1975c474a8e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\configure-apps\file-schema\runtime\appcontextswitchoverrides-element.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0691246a126bec3a508a89d171769e331635d4ad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7497c8d7385d1ff46232f8d7c2cc31dc09331ea5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph>AppContextSwitchOverrides<ph id="ph2">&amp;gt;</ph> Element | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph>AppContextSwitchOverrides<ph id="ph2">&amp;gt;</ph> Element</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Defines one or more switches used by the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class to provide an opt-out mechanism for new functionality.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>configuration&gt;</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>runtime&gt;</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>AppContextSwitchOverrides&gt;</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Attributes and Elements</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following sections describe attributes, child elements, and parent elements.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Attributes</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Required attribute.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Defines one or more switch names and their associated Boolean values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>value Attribute</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>"name=value"</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A predefined switch name along with its value (<ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Multiple switch name/value pairs are separated by semicolons (";").</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For a list of predefined switch names supported by the .NET Framework, see the Remarks section.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Child Elements</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Parent Elements</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The root element in every configuration file used by the common language runtime and .NET Framework applications.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Contains information about runtime initialization options.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 4.6, the <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element in a configuration file allows callers of an API to determine whether their app can take advantage of new functionality or preserve compatibility with previous versions of a library.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if the behavior of an API has changed between two versions of a library, the <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element allows callers of that API to opt out of the new behavior on versions of the library that support the new functionality.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For apps that call APIs in the .NET Framework, the <ph id="ph1">`&lt;AppContextSwitchOverrides&gt;`</ph> element can also allow callers whose apps target an earlier version of the .NET Framework to opt into new functionality if their app is running on a version of the .NET Framework that includes that functionality.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`value`</ph> attribute of the <ph id="ph2">`&lt;AppContextSwitchOverrides&gt;`</ph> element consists of a single string that consists of one or more semicolon-delimited name/value pairs.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Each name identifies a compatibility switch, and its corresponding value is a Boolean (<ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>) that indicates whether the switch is set.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>By default, the switch is <ph id="ph1">`false`</ph>, and libraries  provide the new functionality.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>They only provide the previous functionality if the switch is set (that is, its value is <ph id="ph1">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This allows libraries to provide new behavior for an existing API while allowing callers who depend on the previous behavior to opt out of the new functionality.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The .NET Framework supports the following switches:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Switch name</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Introduced</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Controls whether Windows Presentation Foundation uses legacy a algorithm for control layout.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: WPF Layout<ept id="p1">](~/docs/framework/migration-guide/mitigation-wpf-layout.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Controls whether the <ph id="ph1">&lt;xref:System.Drawing.Icon.ToBitmap%2A?displayProperty=fullName&gt;</ph> method throws an exception when an <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph> object has PNG frames.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: PNG Frames in Icon Objects<ept id="p1">](~/docs/framework/migration-guide/mitigation-png-frames-in-icon-objects.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Controls whether asynchronous operations do not flow from the calling thread's context.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: Culture and Asynchronous Operations<ept id="p1">](~/docs/framework/migration-guide/mitigation-culture-and-asynchronous-operations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Controls whether the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.X509CertificateClaimSet.FindClaims%2A?displayProperty=fullName&gt;</ph> method attempts to match the claim type only with the last DNS entry.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: X509CertificateClaimSet.FindClaims Method<ept id="p1">](~/docs/framework/migration-guide/mitigation-x509certificateclaimset-findclaims-method.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.1</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Controls whether paths longer than <ph id="ph1">`MAX_PATH`</ph> (260 characters) throw a <ph id="ph2">&lt;xref:System.IO.PathTooLongException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: Long Path Support<ept id="p1">](~/docs/framework/migration-guide/mitigation-long-path-support.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.2</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Uses the backslash ("<ph id="ph1">\\</ph>") rather than the forward slash ("/") as the path separator in the <ph id="ph2">&lt;xref:System.IO.Compression.ZipArchiveEntry.FullName%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information, see  <bpt id="p1">[</bpt>Mitigation: ZipArchiveEntry.FullName Path Separator<ept id="p1">](~/docs/framework/migration-guide/mitigation-ziparchiveentry-fullname-path-separator.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.1</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Controls whether legacy path normalization is used and URI paths are supported by the <ph id="ph1">&lt;xref:System.IO.Path.GetDirectoryName%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Path.GetPathRoot%2A?displayProperty=fullName&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: Path Normalization<ept id="p1">](~/docs/framework/migration-guide/mitigation-path-normalization.md)</ept> and <bpt id="p2">[</bpt>Mitigation: Path Colon Checks<ept id="p2">](~/docs/framework/migration-guide/mitigation-path-colon-checks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.2</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Controls whether a test for equality compares the <ph id="ph1">&lt;xref:System.ComponentModel.MemberDescriptor.Category%2A?displayProperty=fullName&gt;</ph> property of one object with the <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor.Description%2A?displayProperty=fullName&gt;</ph> property of the second object.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: MemberDescriptor.Equals<ept id="p1">](~/docs/framework/migration-guide/mitigation-memberdescriptor-equals.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.2</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Controls whether the <ph id="ph1">&lt;xref:System.Net.ServicePointManager?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream?displayProperty=fullName&gt;</ph> classes can use the SSL 3.0 protocol.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: TLS Protocols<ept id="p1">](~/docs/framework/migration-guide/mitigation-tls-protocols.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Controls whether the <bpt id="p1">[</bpt>DataContractJsonSerializer<ept id="p1">](xref:System.Runtime.Serialization.Json.DataContractJsonSerializer)</ept> serializes some control characters based on the ECMAScript V6 and V8 standards.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: Serialization of Control Characters with the DataContractJsonSerializer<ept id="p1">](Mitigation:%20Serialization%20of%20Control%20Characters%20with%20the%20DataContractJsonSerializer.md)</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.7</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Controls whether the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity.%23ctor%28System.Security.Principal.IIdentity%29?displayProperty=fullName&gt;</ph> constructor sets the  new object's <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity.Actor%2A?displayProperty=fullName&gt;</ph> property with an existing object reference.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: ClaimsIdentity Constructor<ept id="p1">](~/docs/framework/migration-guide/mitigation-claimsidentity-constructor.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.2</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Controls whether the attempt to reuse an <ph id="ph1">&lt;xref:System.Security.Cryptography.AesCryptoServiceProvider&gt;</ph> decryptor throws a <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Retargeting Changes in the .NET Framework 4.6.2<ept id="p1">](https://msdn.microsoft.com/library/mt712574.aspx#Core)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.2</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Controls whether the value of the <bpt id="p1">[</bpt>CspParameters.ParentWindowHandle<ept id="p1">](xref:System.Security.Cryptography.CspParameters.ParentWindowHandle)</ept> property is an <bpt id="p2">[</bpt>IntPtr<ept id="p2">](xref:System.IntPtr)</ept> that represents the memory location of a window handle, or whether it is a window handle (an HWND).</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: CspParameters.ParentWindowHandle Expects an HWND<ept id="p1">](Mitigation:%20CspParameters.ParentWindowHandle%20Expects%20an%20HWND.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.7</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">`TransportWithMessageCredential`</ph> security mode allows messages with an unsigned "to" header.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This is an opt-in switch.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Runtime Changes in the .NET Framework 4.6.1<ept id="p1">](https://msdn.microsoft.com/library/mt592686.aspx#WCF)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.1</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Determines whether the attempt to use X509 certificates with a CSG key storage provider throws an exception.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Windows Communication Foundation (WCF)<ept id="p1">](../../../../../docs/framework/migration-guide/retargeting-changes-in-the-net-framework-4-6-2.md#WCF)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.1</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Along with <ph id="ph1">`Switch.System.Net.DontEnableSchUseStrongCrypto`</ph>, determines whether WCF message security uses TLS 1.1 and TLS 1.2.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.7</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Determines whether Windows Presentation Foundation applies an old algorithm (<ph id="ph1">`true`</ph>) or a new algorithm (<ph id="ph2">`false`</ph>) in allocating space to <ph id="ph3">\*</ph>-columns.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: Grid Control's Space Allocation to Star-columns<ept id="p1">](Mitigation:%20Grid%20Control's%20Space%20Allocation%20to%20Star-columns.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.7</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Opts out of the code that allows a custom <ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A?displayProperty=fullName&gt;</ph> implementation to safely filter messages without throwing an exception when the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.FilterMessage%2A?displayProperty=fullName&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: Custom IMessageFilter.PreFilterMessage Implementations<ept id="p1">](~/docs/framework/migration-guide/mitigation-custom-imessagefilter-prefiltermessage-implementations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.1</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Determines whether an optional <ph id="ph1">`WM_POINTER`</ph>-based touch/stylus stack is enabled in WPF applications.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: Poiner-based Touch and Stylus Support<ept id="p1">](Mitigation:%20Pointer-based%20Touch%20and%20Stylus%20Support.md)</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Controls whether a legacy <bpt id="p1">[</bpt>NullReferenceException<ept id="p1">](xref:System.NullReferenceException)</ept> is thrown instead of the exception that more specifically indicates the cause of the exception (such as a <bpt id="p2">[</bpt>DirectoryNotFoundException<ept id="p2">](xref:System.IO.DirectoryNotFoundException)</ept> or a <bpt id="p3">[</bpt>FileNotFoundException<ept id="p3">](xref:System.IO.FileNotFoundException)</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>It is intended for use by code that depends on handling the <bpt id="p1">[</bpt>NullReferenceException<ept id="p1">](xref:System.NullReferenceException)</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.7</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Controls whether empty key sequences in compound keys are ignored by XSD schema validation.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mitigation: XML Schema Validation<ept id="p1">](~/docs/framework/migration-guide/mitigation-xml-schema-validation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Instead of adding an <ph id="ph1">`AppContextSwitchOverrides`</ph> element to an application configuration file, you can also set the switches programmatically by calling the <ph id="ph2">`static`</ph> (in C#) or <ph id="ph3">`Shared`</ph> (in Visual Basic) <ph id="ph4">&lt;xref:System.AppContext.SetSwitch%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Library developers can also define custom switches to allow callers to opt out of changed functionality introduced  in later versions of their libraries.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.AppContext&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`AppContextSwitchOverrides`</ph> element to define a single application  compatibility switch, <ph id="ph2">`Switch.System.Globalization.NoAsyncCurrentCulture`</ph>, that prevents culture from flowing across threads in asynchronous method calls.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`AppContextSwitchOverrides`</ph> element to define two application  compatibility switches, <ph id="ph2">`Switch.System.Globalization.NoAsyncCurrentCulture`</ph> and <ph id="ph3">`Switch.System.IO.BlockLongPaths`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Note that a semicolon separates the two name/value pairs.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AppContext<ept id="p1">](xref:System.AppContext?qualifyHint=False&amp;autoUpgrade=True)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>runtime&gt; Element<ept id="p1">](runtime-element.md)</ept><ph id="ph2"> </ph></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>configuration&gt; Element<ept id="p1">](../configuration-element.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>