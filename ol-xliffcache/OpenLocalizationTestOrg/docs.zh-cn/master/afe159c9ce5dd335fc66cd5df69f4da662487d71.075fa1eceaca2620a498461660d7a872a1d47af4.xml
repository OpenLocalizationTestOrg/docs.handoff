{"content":"---\ntitle: \"CorDebugUserState Enumeration | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"CorDebugUserState\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"CorDebugUserState\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CorDebugUserState enumeration [.NET Framework debugging]\"\nms.assetid: 5f6c2bcd-8102-4e3b-abc5-86ab0bd62def\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 16\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# CorDebugUserState Enumeration\nIndicates the user state of a thread.  \n  \n## Syntax  \n  \n```  \ntypedef enum CorDebugUserState {  \n    USER_STOP_REQUESTED     =  0x01,  \n    USER_SUSPEND_REQUESTED  =  0x02,  \n    USER_BACKGROUND         =  0x04,  \n    USER_UNSTARTED          =  0x08,  \n    USER_STOPPED            =  0x10,  \n    USER_WAIT_SLEEP_JOIN    =  0x20,  \n    USER_SUSPENDED          =  0x40,  \n    USER_UNSAFE_POINT       =  0x80,  \n    USER_THREADPOOL         = 0x100  \n} CorDebugUserState;  \n```  \n  \n## Members  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|`USER_STOP_REQUESTED`|A termination of the thread has been requested.|  \n|`USER_SUSPEND_REQUESTED`|A suspension of the thread has been requested.|  \n|`USER_BACKGROUND`|The thread is running in the background.|  \n|`USER_UNSTARTED`|The thread has not started executing.|  \n|`USER_STOPPED`|The thread has been terminated.|  \n|`USER_WAIT_SLEEP_JOIN`|The thread is waiting for another thread to complete a task.|  \n|`USER_SUSPENDED`|The thread has been suspended.|  \n|`USER_UNSAFE_POINT`|The thread is at an unsafe point. That is, the thread is at a point in execution where it may block garbage collection.<br /><br /> Debug events may be dispatched from unsafe points, but suspending a thread at an unsafe point  will very likely cause a deadlock until the thread is resumed. The safe and unsafe points are determined by the just-in-time (JIT) and garbage collection implementation.|  \n|`USER_THREADPOOL`|The thread is from the thread pool.|  \n  \n## Remarks  \n The user state of a thread is the state that the thread has when the debugger examines it. A thread may have a combination of user states.  \n  \n Use the [ICorDebugThread::GetUserState](../../../../docs/framework/unmanaged-api/debugging/icordebugthread-getuserstate-method.md) method to retrieve a thread's user state.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See Also  \n [Debugging Enumerations](../../../../docs/framework/unmanaged-api/debugging/debugging-enumerations.md)","nodes":[{"pos":[4,618],"embed":true,"restype":"x-metadata","content":"title: \"CorDebugUserState Enumeration | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"CorDebugUserState\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"CorDebugUserState\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CorDebugUserState enumeration [.NET Framework debugging]\"\nms.assetid: 5f6c2bcd-8102-4e3b-abc5-86ab0bd62def\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 16\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"CorDebugUserState Enumeration | Microsoft Docs","nodes":[{"pos":[0,46],"content":"CorDebugUserState Enumeration | Microsoft Docs","nodes":[{"content":"CorDebugUserState Enumeration | Microsoft Docs","pos":[0,46]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[625,654],"content":"CorDebugUserState Enumeration","linkify":"CorDebugUserState Enumeration","nodes":[{"content":"CorDebugUserState Enumeration","pos":[0,29]}]},{"content":"Indicates the user state of a thread.","pos":[655,692]},{"pos":[701,707],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1139,1146],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Value","pos":[1153,1158]},{"content":"Description","pos":[1159,1170]},{"content":"A termination of the thread has been requested.","pos":[1231,1278]},{"content":"A suspension of the thread has been requested.","pos":[1308,1354]},{"content":"The thread is running in the background.","pos":[1377,1417]},{"content":"The thread has not started executing.","pos":[1439,1476]},{"content":"The thread has been terminated.","pos":[1496,1527]},{"content":"The thread is waiting for another thread to complete a task.","pos":[1555,1615]},{"content":"The thread has been suspended.","pos":[1637,1667]},{"content":"The thread is at an unsafe point.","pos":[1692,1725]},{"content":"That is, the thread is at a point in execution where it may block garbage collection.","pos":[1726,1811]},{"content":"Debug events may be dispatched from unsafe points, but suspending a thread at an unsafe point  will very likely cause a deadlock until the thread is resumed.","pos":[1824,1981]},{"content":"The safe and unsafe points are determined by the just-in-time (JIT) and garbage collection implementation.","pos":[1982,2088]},{"content":"The thread is from the thread pool.","pos":[2111,2146]},{"pos":[2156,2163],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The user state of a thread is the state that the thread has when the debugger examines it.","pos":[2167,2257]},{"content":"A thread may have a combination of user states.","pos":[2258,2305]},{"pos":[2312,2484],"content":"Use the <bpt id=\"p1\">[</bpt>ICorDebugThread::GetUserState<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugthread-getuserstate-method.md)</ept> method to retrieve a thread's user state.","source":"Use the [ICorDebugThread::GetUserState](../../../../docs/framework/unmanaged-api/debugging/icordebugthread-getuserstate-method.md) method to retrieve a thread's user state."},{"pos":[2493,2505],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2509,2613],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2620,2656],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2663,2688],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2695,2723],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept>","source":"**.NET Framework Versions:**"},{"pos":[2812,2820],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2824,2926],"content":"<bpt id=\"p1\">[</bpt>Debugging Enumerations<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-enumerations.md)</ept>","source":"[Debugging Enumerations](../../../../docs/framework/unmanaged-api/debugging/debugging-enumerations.md)"}]}