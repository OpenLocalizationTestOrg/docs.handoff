<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="data-binding-and-windows-forms.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fa9fb25b4cfcb4dcc366eaea50d02f4d7672bb2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\data-binding-and-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c806a3d6c91196ebedb37b027f1a14fb4376845e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8d5e0fbdded5ba818d5e7177c7511f59e96ce89</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Data Binding and Windows Forms | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Data Binding and Windows Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In Windows Forms, you can bind to not just traditional data sources, but also to almost any structure that contains data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can bind to an array of values that you calculate at run time, read from a file, or derive from the values of other controls.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In addition, you can bind any property of any control to the data source.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In traditional data binding, you typically bind the display property—for example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control—to the data source.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>, you also have the option of setting other properties through binding as well.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You might use binding to perform the following tasks:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Setting the graphic of an image control.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Setting the background color of one or more controls.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Setting the size of controls.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Essentially, data binding is an automatic way of setting any run-time accessible property of any control on a form.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Types of Data Binding</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows Forms can take advantage of two types of data binding: simple binding and complex binding.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Each offers different advantages.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Type of data binding</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Simple data binding</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The ability of a control to bind to a single data element, such as a value in a column in a dataset table.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is the type of binding typical for controls such as a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control or <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph> control, which are controls that typically only displays a single value.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In fact, any property on a control can be bound to a field in a database.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>There is extensive support for this feature in <ph id="ph1">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Interfaces Related to Data Binding<ept id="p1">](../../../docs/framework/winforms/interfaces-related-to-data-binding.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>How to: Navigate Data in Windows Forms<ept id="p1">](../../../docs/framework/winforms/how-to-navigate-data-in-windows-forms.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>How to: Create a Simple-Bound Control on a Windows Form<ept id="p1">](../../../docs/framework/winforms/how-to-create-a-simple-bound-control-on-a-windows-form.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Complex data binding</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The ability of a control to bind to more than one data element, typically more than one record in a database.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Complex binding is also called list-based binding.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Examples of controls that support complex binding are the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For an example of complex data binding, see <bpt id="p1">[</bpt>How to: Bind a Windows Forms ComboBox or ListBox Control to Data<ept id="p1">](../../../docs/framework/winforms/controls/how-to-bind-a-windows-forms-combobox-or-listbox-control-to-data.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>BindingSource Component</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To simplify data binding, Windows Forms enables you to bind a data source to the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component and then bind controls to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> in simple or complex binding scenarios.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In either case, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> acts as an intermediary between the data source and bound controls providing change notification currency management and other services.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Common Scenarios That Employ Data Binding</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Nearly every commercial application uses information read from data sources of one type or another, usually through data binding.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following list shows a few of the most common scenarios that utilize data binding as the method of data presentation and manipulation.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Scenario</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Reporting</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reports provide a flexible way for you to display and summarize your data in a printed document.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>It is very common to create a report that prints selected contents of a data source either to the screen or to a printer.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Common reports include lists, invoices, and summaries.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Items are usually formatted into columns of lists, with sub-items organized under each list item, but you should choose the layout that best suits the data.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Data entry</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A common way to enter large amounts of related data or to prompt users for information is through a data entry form.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Users can enter information or select choices using text boxes, option buttons, drop-down lists, and check boxes.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Information is then submitted and stored in a database, whose structure is based on the information entered.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Master/detail relationship</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A master/detail application is one format for looking at related data.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Specifically, there are two tables of data with a relation connecting them—in the classic business example, a "Customers" table and an "Orders" table with a relationship between them linking customers and their respective orders.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information about creating a master/detail application with two Windows Forms <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> controls, see <bpt id="p1">[</bpt>How to: Create a Master/Detail Form Using Two Windows Forms DataGridView Controls<ept id="p1">](../../../docs/framework/winforms/controls/99f6e876-3f7f-4139-9063-e36587c95b02.md)</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Lookup Table</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Another common data presentation/manipulation scenario is the table lookup.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Often, as part of a larger data display, a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control is used to display and manipulate data.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The key is that the data displayed in the <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control is different than the data written to the database.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control displaying the items available from a grocery store, you would probably like to see the names of the products (bread, milk, eggs).</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, to ease information retrieval within the database and for database normalization, you would probably store the information for the specific items of a given order as item numbers (#501, #603, and so on).</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Thus, there is an implicit connection between the "friendly name" of the grocery item in the <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control on your form and the related item number that is present in an order.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This is the essence of a table lookup.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create a Lookup Table with the Windows Forms BindingSource Component<ept id="p1">](../../../docs/framework/winforms/controls/how-to-create-a-lookup-table-with-the-windows-forms-bindingsource-component.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms Data Binding<ept id="p1">](../../../docs/framework/winforms/windows-forms-data-binding.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Bind the Windows Forms DataGrid Control to a Data Source<ept id="p1">](../../../docs/framework/winforms/controls/how-to-bind-the-windows-forms-datagrid-control-to-a-data-source.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BindingSource Component<ept id="p1">](../../../docs/framework/winforms/controls/bindingsource-component.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>