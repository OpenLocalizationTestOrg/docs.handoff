{"content":"---\ntitle: \"How to: Implement Validation Logic on Custom Objects | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"checking for validation errors [WPF]\"\n  - \"validation errors [WPF], checking for\"\n  - \"implementing validation logic on custom objects [WPF]\"\n  - \"custom objects [WPF], implementing validation logic on\"\nms.assetid: 751fda9b-44f9-4d63-b4f2-1df07ac41e0f\ncaps.latest.revision: 7\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Implement Validation Logic on Custom Objects\nThis example shows how to implement validation logic on a custom object and then bind to it.  \n  \n## Example  \n You can provide validation logic on the business layer if your source object implements <xref:System.ComponentModel.IDataErrorInfo>, as in the following example:  \n  \n [!code-csharp[BusinessLayerValidation#IDataErrorInfo](../../../../samples/snippets/csharp/VS_Snippets_Wpf/BusinessLayerValidation/CSharp/Data.cs#idataerrorinfo)]\n [!code-vb[BusinessLayerValidation#IDataErrorInfo](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/BusinessLayerValidation/VisualBasic/Data.vb#idataerrorinfo)]  \n  \n In the following example, the text property of the text box binds to the `Age` property of the `Person` object, which has been made available for binding through a resource declaration that is given the `x:Key``data`. The <xref:System.Windows.Controls.DataErrorValidationRule> checks for the validation errors raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation.  \n  \n [!code-xml[BusinessLayerValidation#BoundTextBox](../../../../samples/snippets/csharp/VS_Snippets_Wpf/BusinessLayerValidation/CSharp/Window1.xaml#boundtextbox)]  \n  \n Alternatively, instead of using the <xref:System.Windows.Controls.DataErrorValidationRule>, you can set the <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> property to `true`.  \n  \n## See Also  \n <xref:System.Windows.Controls.ExceptionValidationRule>   \n [Implement Binding Validation](../../../../docs/framework/wpf/data/how-to-implement-binding-validation.md)   \n [How-to Topics](../../../../docs/framework/wpf/data/data-binding-how-to-topics.md)","nodes":[{"pos":[12,81],"content":"How to: Implement Validation Logic on Custom Objects | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Implement Validation Logic on Custom Objects | Microsoft Docs","pos":[0,69]}]},{"pos":[618,670],"content":"How to: Implement Validation Logic on Custom Objects","linkify":"How to: Implement Validation Logic on Custom Objects","nodes":[{"content":"How to: Implement Validation Logic on Custom Objects","pos":[0,52]}]},{"content":"This example shows how to implement validation logic on a custom object and then bind to it.","pos":[671,763]},{"pos":[772,779],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"You can provide validation logic on the business layer if your source object implements <ph id=\"ph1\">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph>, as in the following example:","pos":[783,944],"source":"You can provide validation logic on the business layer if your source object implements <xref:System.ComponentModel.IDataErrorInfo>, as in the following example:"},{"pos":[951,1281],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>BusinessLayerValidation#IDataErrorInfo<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/BusinessLayerValidation/CSharp/Data.cs#idataerrorinfo)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>BusinessLayerValidation#IDataErrorInfo<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/BusinessLayerValidation/VisualBasic/Data.vb#idataerrorinfo)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[BusinessLayerValidation#IDataErrorInfo](../../../../samples/snippets/csharp/VS_Snippets_Wpf/BusinessLayerValidation/CSharp/Data.cs#idataerrorinfo)]\n [!code-vb[BusinessLayerValidation#IDataErrorInfo](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/BusinessLayerValidation/VisualBasic/Data.vb#idataerrorinfo)]"},{"content":"In the following example, the text property of the text box binds to the <ph id=\"ph1\">`Age`</ph> property of the <ph id=\"ph2\">`Person`</ph> object, which has been made available for binding through a resource declaration that is given the <ph id=\"ph3\">`x:Key``data`</ph>.","pos":[1288,1505],"source":"In the following example, the text property of the text box binds to the `Age` property of the `Person` object, which has been made available for binding through a resource declaration that is given the `x:Key``data`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph> checks for the validation errors raised by the <ph id=\"ph2\">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> implementation.","pos":[1506,1671],"source":" The <xref:System.Windows.Controls.DataErrorValidationRule> checks for the validation errors raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation."},{"pos":[1678,1837],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>BusinessLayerValidation#BoundTextBox<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/BusinessLayerValidation/CSharp/Window1.xaml#boundtextbox)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[BusinessLayerValidation#BoundTextBox](../../../../samples/snippets/csharp/VS_Snippets_Wpf/BusinessLayerValidation/CSharp/Window1.xaml#boundtextbox)]"},{"pos":[1844,2031],"content":"Alternatively, instead of using the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph>, you can set the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> property to <ph id=\"ph3\">`true`</ph>.","source":"Alternatively, instead of using the <xref:System.Windows.Controls.DataErrorValidationRule>, you can set the <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> property to `true`."},{"pos":[2040,2048],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>","pos":[2052,2106],"source":"<xref:System.Windows.Controls.ExceptionValidationRule> "},{"content":"<bpt id=\"p1\"> [</bpt>Implement Binding Validation<ept id=\"p1\">](../../../../docs/framework/wpf/data/how-to-implement-binding-validation.md)</ept><ph id=\"ph1\"> </ph>","pos":[2110,2218],"source":" [Implement Binding Validation](../../../../docs/framework/wpf/data/how-to-implement-binding-validation.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How-to Topics<ept id=\"p1\">](../../../../docs/framework/wpf/data/data-binding-how-to-topics.md)</ept>","pos":[2221,2304],"source":" [How-to Topics](../../../../docs/framework/wpf/data/data-binding-how-to-topics.md)"}]}