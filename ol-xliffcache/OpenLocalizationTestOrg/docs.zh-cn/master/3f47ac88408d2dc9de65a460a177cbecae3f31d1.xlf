<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-bind-to-xml-data-using-an-xmldataprovider-and-xpath-queries.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f47ac88408d2dc9de65a460a177cbecae3f31d1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\data\how-to-bind-to-xml-data-using-an-xmldataprovider-and-xpath-queries.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a2f2d60faa2d5b255b82ff01eafbeec2061af3e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89ca0f60c2244763a2e65080b7e29f6590e15d7a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Bind to XML Data Using an XMLDataProvider and XPath Queries | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Bind to XML Data Using an XMLDataProvider and XPath Queries</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to bind to <ph id="ph1">[!INCLUDE[TLA#tla_xml](../../../../includes/tlasharptla-xml-md.md)]</ph> data using an <ph id="ph2">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>With an <ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph>, the underlying data that can be accessed through data binding in your application can be any tree of <ph id="ph2">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> nodes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In other words, an <ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> provides a convenient way to use any tree of <ph id="ph2">[!INCLUDE[TLA#tla_xml](../../../../includes/tlasharptla-xml-md.md)]</ph> nodes as a binding source.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the following example, the data is embedded directly as an <ph id="ph1">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> <bpt id="p1">*</bpt>data island<ept id="p1">*</ept> within the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;</ph> section.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> data island must be wrapped in <ph id="ph2">`&lt;x:XData&gt;`</ph> tags and always have a single root node, which is <bpt id="p1">*</bpt>Inventory<ept id="p1">*</ept> in this example.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The root node of the <ph id="ph1">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> data has an <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> attribute that sets the <ph id="ph2">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> namespace to an empty string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is a requirement for applying XPath queries to a data island that is inline within the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> page.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this inline case, the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>, and thus the data island, inherits the <ph id="ph2">&lt;xref:System.Windows&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Because of this, you need to set the namespace blank to keep XPath queries from being qualified by the <ph id="ph1">&lt;xref:System.Windows&gt;</ph> namespace, which would misdirect the queries.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>As shown in this example, to create the same binding declaration in attribute syntax you must escape the special characters properly.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>XML Character Entities and XAML<ept id="p1">](../../../../docs/framework/xaml-services/xml-character-entities-and-xaml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> will show the following items when this example is run.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These are the <bpt id="p1">*</bpt>Title<ept id="p1">*</ept>s of all of the elements under <bpt id="p2">*</bpt>Books<ept id="p2">*</ept> with either a <bpt id="p3">*</bpt>Stock<ept id="p3">*</ept> value of "<bpt id="p4">*</bpt>out<ept id="p4">*</ept>" or a <bpt id="p5">*</bpt>Number<ept id="p5">*</ept> value of 3 or greater than or equals to 8.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Notice that no <bpt id="p1">*</bpt>CD<ept id="p1">*</ept> items are returned because the <ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider.XPath%2A&gt;</ph> value set on the <ph id="ph2">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> indicates that only the <bpt id="p2">*</bpt>Books<ept id="p2">*</ept> elements should be exposed (essentially setting a filter).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>XPath Example<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/data/media/xpathexample.PNG "</bpt>XPathExample<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this example, the book titles are displayed because the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> binding in the <ph id="ph3">&lt;xref:System.Windows.DataTemplate&gt;</ph> is set to "<bpt id="p1">*</bpt>Title<ept id="p1">*</ept>".</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you want to display the value of an attribute, such as the <bpt id="p1">*</bpt>ISBN<ept id="p1">*</ept>, you would set that <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> value to "<ph id="ph2">`@ISBN`</ph>".</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XPath<ept id="p1">**</ept> properties in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> are handled by the XmlNode.SelectNodes method.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can modify the <bpt id="p1">**</bpt>XPath<ept id="p1">**</ept> queries to get different results.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Here are some examples for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> query on the bound <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> from the previous example:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`XPath="Book[1]"`</ph> will return the first book element ("XML in Action").</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that <bpt id="p1">**</bpt>XPath<ept id="p1">**</ept> indexes are based on 1, not 0.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`XPath="Book[@*]"`</ph> will return all book elements with any attributes.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`XPath="Book[last()-1]"`</ph> will return the second to last book element ("Introducing Microsoft .NET").</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`XPath="*[position()&gt;3]"`</ph> will return all of the book elements except for the first 3.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you run an <bpt id="p1">**</bpt>XPath<ept id="p1">**</ept> query, it returns an <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> or a list of XmlNodes.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> is a <ph id="ph2">[!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)]</ph> object, which means you can use the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property to bind to the <ph id="ph4">[!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)]</ph> properties.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Consider the previous example again.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the rest of the example stays the same and you change the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> binding to the following, you will see the names of the returned XmlNodes in the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In this case, the name of all the returned nodes is "<bpt id="p1">*</bpt>Book<ept id="p1">*</ept>".</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In some applications, embedding the <ph id="ph1">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> as a data island within the source of the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> page can be inconvenient because the exact content of the data must be known at compile time.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Therefore, obtaining the data from an external <ph id="ph1">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> file is also supported, as in the following example:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> data resides in a remote <ph id="ph2">[!INCLUDE[TLA2#tla_xml](../../../../includes/tla2sharptla-xml-md.md)]</ph> file, you would define access to the data by assigning an appropriate <ph id="ph3">[!INCLUDE[TLA2#tla_url](../../../../includes/tla2sharptla-url-md.md)]</ph> to the <ph id="ph4">&lt;xref:System.Windows.Data.XmlDataProvider.Source%2A&gt;</ph> attribute as follows:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Bind to XDocument, XElement, or LINQ for XML Query Results<ept id="p1">](../../../../docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Use the Master-Detail Pattern with Hierarchical XML Data<ept id="p1">](../../../../docs/framework/wpf/data/how-to-use-the-master-detail-pattern-with-hierarchical-xml-data.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Binding Sources Overview<ept id="p1">](../../../../docs/framework/wpf/data/binding-sources-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/data/data-binding-how-to-topics.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>