{"content":"---\ntitle: \"Range specified for &#39;Case&#39; statement is not valid | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc40052\"\n  - \"bc40052\"\nhelpviewer_keywords: \n  - \"BC40052\"\nms.assetid: a11d92f6-dc13-46a0-a8ca-5a962a0ed968\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Range specified for &#39;Case&#39; statement is not valid\nAn invalid range has been specified for a `Case` statement.  \n  \n When you are comparing the same expression to several different values, you can use the `Select...Case` statements as an alternative to the `If...Then...Else` statements. While the `If` and `ElseIf` statements can evaluate a different expression in each statement, the `Select` statement evaluates a single expression only once and then uses it for every comparison. Each `Case` statement can contain more than one value, a range of values, or a combination of values and comparison operators.  \n  \n **Error ID:** BC40052  \n  \n## To correct this error  \n  \n-   Modify the range to include all values, or use a `Case Else` statement to catch an undefined value.  \n  \n## See Also  \n [Select...Case Statement](../../visual-basic/language-reference/statements/select-case-statement.md)   \n [Decision Structures](../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)   \n [Widening and Narrowing Conversions](../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)","nodes":[{"pos":[12,86],"content":"Range specified for &#39;Case&#39; statement is not valid | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Range specified for &amp;#39;Case&amp;#39; statement is not valid | Microsoft Docs","pos":[0,74],"source":"Range specified for &#39;Case&#39; statement is not valid | Microsoft Docs"}]},{"pos":[602,659],"content":"Range specified for &#39;Case&#39; statement is not valid","linkify":"Range specified for &#39;Case&#39; statement is not valid","nodes":[{"content":"Range specified for &amp;#39;Case&amp;#39; statement is not valid","pos":[0,57],"source":"Range specified for &#39;Case&#39; statement is not valid"}]},{"pos":[660,719],"content":"An invalid range has been specified for a <ph id=\"ph1\">`Case`</ph> statement.","source":"An invalid range has been specified for a `Case` statement."},{"content":"When you are comparing the same expression to several different values, you can use the <ph id=\"ph1\">`Select...Case`</ph> statements as an alternative to the <ph id=\"ph2\">`If...Then...Else`</ph> statements.","pos":[726,896],"source":"When you are comparing the same expression to several different values, you can use the `Select...Case` statements as an alternative to the `If...Then...Else` statements."},{"content":"While the <ph id=\"ph1\">`If`</ph> and <ph id=\"ph2\">`ElseIf`</ph> statements can evaluate a different expression in each statement, the <ph id=\"ph3\">`Select`</ph> statement evaluates a single expression only once and then uses it for every comparison.","pos":[897,1092],"source":" While the `If` and `ElseIf` statements can evaluate a different expression in each statement, the `Select` statement evaluates a single expression only once and then uses it for every comparison."},{"content":"Each <ph id=\"ph1\">`Case`</ph> statement can contain more than one value, a range of values, or a combination of values and comparison operators.","pos":[1093,1219],"source":" Each `Case` statement can contain more than one value, a range of values, or a combination of values and comparison operators."},{"pos":[1226,1247],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC40052","source":"**Error ID:** BC40052"},{"pos":[1256,1277],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1287,1386],"content":"Modify the range to include all values, or use a <ph id=\"ph1\">`Case Else`</ph> statement to catch an undefined value.","source":"Modify the range to include all values, or use a `Case Else` statement to catch an undefined value."},{"pos":[1395,1403],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Select...Case Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/select-case-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[1407,1508],"source":"[Select...Case Statement](../../visual-basic/language-reference/statements/select-case-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Decision Structures<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[1511,1626],"source":" [Decision Structures](../../visual-basic/programming-guide/language-features/control-flow/decision-structures.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Widening and Narrowing Conversions<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)</ept>","pos":[1629,1771],"source":" [Widening and Narrowing Conversions](../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)"}]}