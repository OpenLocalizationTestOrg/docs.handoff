{"content":"---\ntitle: \"How to: Produce a Value Based on a List of Bound Items | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"data binding, MultiBinding\"\n  - \"MultiBinding\"\nms.assetid: b3d06378-b511-4181-95aa-316d60c9229b\ncaps.latest.revision: 17\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Produce a Value Based on a List of Bound Items\n<xref:System.Windows.Data.MultiBinding> allows you to bind a binding target property to a list of source properties and then apply logic to produce a value with the given inputs. This example demonstrates how to use <xref:System.Windows.Data.MultiBinding>.  \n  \n## Example  \n In the following example, `NameListData` refers to a collection of `PersonName` objects, which are objects that contain two properties, `firstName` and `lastName`. The following example produces a <xref:System.Windows.Controls.TextBlock> that shows the first and last names of a person with the last name first.  \n  \n [!code-xml[MultiBinding#Resources1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#resources1)]  \n[!code-xml[MultiBinding#Resources2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#resources2)]  \n[!code-xml[MultiBinding#MultiBindingTextBox2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#multibindingtextbox2)]  \n[!code-xml[MultiBinding#Window](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#window)]  \n  \n To understand how the last-name-first format is produced, let's take a look at the implementation of the `NameConverter`:  \n  \n [!code-csharp[MultiBinding#3](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/NameConverter.cs#3)]\n [!code-vb[MultiBinding#3](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/MultiBinding/VisualBasic/NameConverter.vb#3)]  \n  \n `NameConverter` implements the <xref:System.Windows.Data.IMultiValueConverter> interface. `NameConverter` takes the values from the individual bindings and stores them in the values object array. The order in which the <xref:System.Windows.Data.Binding> elements appear under the <xref:System.Windows.Data.MultiBinding> element is the order in which those values are stored in the array. The value of the <xref:System.Windows.Data.MultiBinding.ConverterParameter%2A> attribute is referenced by the parameter argument of the <xref:System.Windows.Data.MultiBinding.Converter%2A> method, which performs a switch on the parameter to determine how to format the name.  \n  \n## See Also  \n [Convert Bound Data](../../../../docs/framework/wpf/data/how-to-convert-bound-data.md)   \n [Data Binding Overview](../../../../docs/framework/wpf/data/data-binding-overview.md)   \n [How-to Topics](../../../../docs/framework/wpf/data/data-binding-how-to-topics.md)","nodes":[{"pos":[4,458],"nodes":[{"content":"How to: Produce a Value Based on a List of Bound Items | Microsoft Docs","nodes":[{"pos":[0,71],"content":"How to: Produce a Value Based on a List of Bound Items | Microsoft Docs","nodes":[{"content":"How to: Produce a Value Based on a List of Bound Items | Microsoft Docs","pos":[0,71]}]}],"pos":[6,80],"yaml":true}],"content":"title: \"How to: Produce a Value Based on a List of Bound Items | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"data binding, MultiBinding\"\n  - \"MultiBinding\"\nms.assetid: b3d06378-b511-4181-95aa-316d60c9229b\ncaps.latest.revision: 17\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","yamlblock":true},{"pos":[465,519],"content":"How to: Produce a Value Based on a List of Bound Items","linkify":"How to: Produce a Value Based on a List of Bound Items","nodes":[{"content":"How to: Produce a Value Based on a List of Bound Items","pos":[0,54]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> allows you to bind a binding target property to a list of source properties and then apply logic to produce a value with the given inputs.","pos":[520,698],"source":"<xref:System.Windows.Data.MultiBinding> allows you to bind a binding target property to a list of source properties and then apply logic to produce a value with the given inputs."},{"content":"This example demonstrates how to use <ph id=\"ph1\">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>.","pos":[699,776],"source":" This example demonstrates how to use <xref:System.Windows.Data.MultiBinding>."},{"pos":[785,792],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In the following example, <ph id=\"ph1\">`NameListData`</ph> refers to a collection of <ph id=\"ph2\">`PersonName`</ph> objects, which are objects that contain two properties, <ph id=\"ph3\">`firstName`</ph> and <ph id=\"ph4\">`lastName`</ph>.","pos":[796,959],"source":"In the following example, `NameListData` refers to a collection of `PersonName` objects, which are objects that contain two properties, `firstName` and `lastName`."},{"content":"The following example produces a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> that shows the first and last names of a person with the last name first.","pos":[960,1107],"source":" The following example produces a <xref:System.Windows.Controls.TextBlock> that shows the first and last names of a person with the last name first."},{"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>MultiBinding#Resources1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#resources1)</ept><ept id=\"p1\">]</ept>","pos":[1114,1247],"source":"[!code-xml[MultiBinding#Resources1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#resources1)]"},{"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>MultiBinding#Resources2<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#resources2)</ept><ept id=\"p1\">]</ept>","pos":[1250,1383],"source":"[!code-xml[MultiBinding#Resources2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#resources2)]"},{"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>MultiBinding#MultiBindingTextBox2<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#multibindingtextbox2)</ept><ept id=\"p1\">]</ept>","pos":[1386,1539],"source":"[!code-xml[MultiBinding#MultiBindingTextBox2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#multibindingtextbox2)]"},{"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>MultiBinding#Window<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#window)</ept><ept id=\"p1\">]</ept>","pos":[1542,1667],"source":"[!code-xml[MultiBinding#Window](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/Window1.xaml#window)]"},{"pos":[1674,1795],"content":"To understand how the last-name-first format is produced, let's take a look at the implementation of the <ph id=\"ph1\">`NameConverter`</ph>:","source":"To understand how the last-name-first format is produced, let's take a look at the implementation of the `NameConverter`:"},{"pos":[1802,2054],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>MultiBinding#3<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/NameConverter.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>MultiBinding#3<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/MultiBinding/VisualBasic/NameConverter.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[MultiBinding#3](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MultiBinding/CSharp/NameConverter.cs#3)]\n [!code-vb[MultiBinding#3](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/MultiBinding/VisualBasic/NameConverter.vb#3)]"},{"content":"<ph id=\"ph1\">`NameConverter`</ph> implements the <ph id=\"ph2\">&lt;xref:System.Windows.Data.IMultiValueConverter&gt;</ph> interface.","pos":[2061,2150],"source":"`NameConverter` implements the <xref:System.Windows.Data.IMultiValueConverter> interface."},{"content":"<ph id=\"ph1\">`NameConverter`</ph> takes the values from the individual bindings and stores them in the values object array.","pos":[2151,2256],"source":"`NameConverter` takes the values from the individual bindings and stores them in the values object array."},{"content":"The order in which the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> elements appear under the <ph id=\"ph2\">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> element is the order in which those values are stored in the array.","pos":[2257,2448],"source":" The order in which the <xref:System.Windows.Data.Binding> elements appear under the <xref:System.Windows.Data.MultiBinding> element is the order in which those values are stored in the array."},{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Windows.Data.MultiBinding.ConverterParameter%2A&gt;</ph> attribute is referenced by the parameter argument of the <ph id=\"ph2\">&lt;xref:System.Windows.Data.MultiBinding.Converter%2A&gt;</ph> method, which performs a switch on the parameter to determine how to format the name.","pos":[2449,2723],"source":" The value of the <xref:System.Windows.Data.MultiBinding.ConverterParameter%2A> attribute is referenced by the parameter argument of the <xref:System.Windows.Data.MultiBinding.Converter%2A> method, which performs a switch on the parameter to determine how to format the name."},{"pos":[2732,2740],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Convert Bound Data<ept id=\"p1\">](../../../../docs/framework/wpf/data/how-to-convert-bound-data.md)</ept><ph id=\"ph1\"> </ph>","pos":[2744,2831],"source":"[Convert Bound Data](../../../../docs/framework/wpf/data/how-to-convert-bound-data.md) "},{"content":"<bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[2835,2921],"source":"[Data Binding Overview](../../../../docs/framework/wpf/data/data-binding-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>How-to Topics<ept id=\"p1\">](../../../../docs/framework/wpf/data/data-binding-how-to-topics.md)</ept>","pos":[2925,3007],"source":"[How-to Topics](../../../../docs/framework/wpf/data/data-binding-how-to-topics.md)"}]}