{"content":"---\ntitle: \"-> Operator - C# Reference\"\nms.custom: seodec18\n\nms.date: 11/26/2018\nf1_keywords: \n  - \"->_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"member access operator (->) [C#]\"\n  - \"-> operator [C#]\"\nms.assetid: e39ccdc1-f1ff-4a92-bf1d-ac2c8c11316a\n---\n# -> Operator (C# Reference)\n\nThe pointer member access operator `->` combines pointer indirection and member access.\n\nIf `x` is a pointer of the type `T*` and `y` is an accessible member of `T`, an expression of the form\n\n```csharp\nx->y\n```\n\nis equivalent to\n\n```csharp\n(*x).y\n```\n\nThe `->` operator requires [unsafe](../keywords/unsafe.md) context.\n\nFor more information, see [How to: access a member with a pointer](../../programming-guide/unsafe-code-pointers/how-to-access-a-member-with-a-pointer.md).\n\n## Operator overloadability\n\nThe `->` operator cannot be overloaded.\n\n## C# language specification\n\nFor more information, see the [Pointer member access](~/_csharplang/spec/unsafe-code.md#pointer-member-access) section of the [C# language specification](../language-specification/index.md).\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Operators](index.md)\n- [Pointer types](../../programming-guide/unsafe-code-pointers/pointer-types.md)\n","nodes":[{"pos":[4,250],"embed":true,"restype":"x-metadata","content":"title: \"-> Operator - C# Reference\"\nms.custom: seodec18\n\nms.date: 11/26/2018\nf1_keywords: \n  - \"->_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"member access operator (->) [C#]\"\n  - \"-> operator [C#]\"\nms.assetid: e39ccdc1-f1ff-4a92-bf1d-ac2c8c11316a","nodes":[{"content":"-> Operator - C# Reference","nodes":[{"pos":[0,26],"content":"-> Operator - C# Reference","nodes":[{"content":"-&gt; Operator - C# Reference","pos":[0,26],"source":"-> Operator - C# Reference"}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[257,283],"content":"-> Operator (C# Reference)","linkify":"-> Operator (C# Reference)","nodes":[{"content":"-&gt; Operator (C# Reference)","pos":[0,26],"source":"-> Operator (C# Reference)"}]},{"pos":[285,372],"content":"The pointer member access operator <ph id=\"ph1\">`-&gt;`</ph> combines pointer indirection and member access.","source":"The pointer member access operator `->` combines pointer indirection and member access."},{"pos":[374,476],"content":"If <ph id=\"ph1\">`x`</ph> is a pointer of the type <ph id=\"ph2\">`T*`</ph> and <ph id=\"ph3\">`y`</ph> is an accessible member of <ph id=\"ph4\">`T`</ph>, an expression of the form","source":"If `x` is a pointer of the type `T*` and `y` is an accessible member of `T`, an expression of the form"},{"content":"is equivalent to","pos":[498,514]},{"pos":[538,605],"content":"The <ph id=\"ph1\">`-&gt;`</ph> operator requires <bpt id=\"p1\">[</bpt>unsafe<ept id=\"p1\">](../keywords/unsafe.md)</ept> context.","source":"The `->` operator requires [unsafe](../keywords/unsafe.md) context."},{"pos":[607,761],"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: access a member with a pointer<ept id=\"p1\">](../../programming-guide/unsafe-code-pointers/how-to-access-a-member-with-a-pointer.md)</ept>.","source":"For more information, see [How to: access a member with a pointer](../../programming-guide/unsafe-code-pointers/how-to-access-a-member-with-a-pointer.md)."},{"pos":[766,790],"content":"Operator overloadability","linkify":"Operator overloadability","nodes":[{"content":"Operator overloadability","pos":[0,24]}]},{"pos":[792,831],"content":"The <ph id=\"ph1\">`-&gt;`</ph> operator cannot be overloaded.","source":"The `->` operator cannot be overloaded."},{"pos":[836,861],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[863,1053],"content":"For more information, see the <bpt id=\"p1\">[</bpt>Pointer member access<ept id=\"p1\">](~/_csharplang/spec/unsafe-code.md#pointer-member-access)</ept> section of the <bpt id=\"p2\">[</bpt>C# language specification<ept id=\"p2\">](../language-specification/index.md)</ept>.","source":"For more information, see the [Pointer member access](~/_csharplang/spec/unsafe-code.md#pointer-member-access) section of the [C# language specification](../language-specification/index.md)."},{"pos":[1058,1066],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1070,1097],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1100,1156],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1159,1183],"content":"<bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](index.md)</ept>","source":"[C# Operators](index.md)"},{"pos":[1186,1264],"content":"<bpt id=\"p1\">[</bpt>Pointer types<ept id=\"p1\">](../../programming-guide/unsafe-code-pointers/pointer-types.md)</ept>","source":"[Pointer types](../../programming-guide/unsafe-code-pointers/pointer-types.md)"}]}