{"content":"---\ntitle: \"Compiler Error CS1930 | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"CS1930\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"CS1930\"\nms.assetid: d28d2334-825c-4ffc-b9e9-f5d61f44d672\ncaps.latest.revision: 7\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Compiler Error CS1930\nThe range variable 'name' has already been declared  \n  \n The range variable in a query expression is in scope until the query expression terminates. It must therefore have a unique identifier.  \n  \n## To correct this error  \n  \n1.  Give a unique name to each range variable that is introduced in a query expression.  \n  \n## Example  \n The following example generates CS1930 because the identifier `num` is used for the range variable in the `from` clause and for the range variable introduced by the `let` clause.  \n  \n```  \n// cs1930.cs  \nusing System.Linq;  \nclass Program  \n{  \n    static void Main()  \n    {  \n        int[] nums = { 0, 1, 2, 3, 4, 5 };  \n        var query = from num in nums  \n                    let num = 3 // CS1930  \n                    select num;   \n    }  \n}  \n```  \n  \n## See Also  \n [LINQ Query Expressions](../../csharp/programming-guide/linq-query-expressions/index.md)","nodes":[{"pos":[12,50],"content":"Compiler Error CS1930 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error CS1930 | Microsoft Docs","pos":[0,38]}]},{"pos":[565,586],"content":"Compiler Error CS1930","linkify":"Compiler Error CS1930","nodes":[{"content":"Compiler Error CS1930","pos":[0,21]}]},{"content":"The range variable 'name' has already been declared","pos":[587,638]},{"content":"The range variable in a query expression is in scope until the query expression terminates.","pos":[645,736]},{"content":"It must therefore have a unique identifier.","pos":[737,780]},{"pos":[789,810],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Give a unique name to each range variable that is introduced in a query expression.","pos":[820,903]},{"pos":[912,919],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[923,1101],"content":"The following example generates CS1930 because the identifier <ph id=\"ph1\">`num`</ph> is used for the range variable in the <ph id=\"ph2\">`from`</ph> clause and for the range variable introduced by the <ph id=\"ph3\">`let`</ph> clause.","source":"The following example generates CS1930 because the identifier `num` is used for the range variable in the `from` clause and for the range variable introduced by the `let` clause."},{"pos":[1389,1397],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1401,1489],"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](../../csharp/programming-guide/linq-query-expressions/index.md)</ept>","source":"[LINQ Query Expressions](../../csharp/programming-guide/linq-query-expressions/index.md)"}]}