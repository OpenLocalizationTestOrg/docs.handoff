<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="documents-in-wpf.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c3a7d2969a2f92f68f3845ca6416d73ff252218</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\documents-in-wpf.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ca07c10eb131f92b018b29ed3df96df6271ebc1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6143be1b4d900ffa531f71368813ba1d5b31d253</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Documents in WPF | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Documents in WPF</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> offers a wide range of document features that enable the creation of high-fidelity content that is designed to be more easily accessed and read than in previous generations of <ph id="ph2">[!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In addition to enhanced capabilities and quality, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> also provides integrated services for document display, packaging, and security.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic provides an introduction to <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> document types and document packaging.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Types of Documents</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> divides documents into two broad categories based on their intended use; these document categories are termed "fixed documents" and "flow documents."</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Fixed documents are intended for applications that require a precise <ph id="ph1">[!INCLUDE[TLA#tla_wys](../../../../includes/tlasharptla-wys-md.md)]</ph> presentation, independent of the display or printer hardware used.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Typical uses for fixed documents include desktop publishing, word processing, and form layout, where adherence to the original page design is critical.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As part of its layout, a fixed document maintains the precise positional placement of content elements independent of the display or print device in use.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, a fixed document page viewed on 96 dpi display will appear exactly the same when it is output to a 600 dpi laser printer as when it is output to a 4800 dpi phototypesetter.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The page layout remains the same in all cases, while the document quality maximizes to the capabilities of each device.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By comparison, flow documents are designed to optimize viewing and readability and are best utilized when ease of reading is the primary document consumption scenario.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Rather than being set to one predefined layout, flow documents dynamically adjust and reflow their content based on run-time variables such as window size, device resolution, and optional user preferences.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A Web page is a simple example of a flow document where the page content is dynamically formatted to fit the current window.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Flow documents optimize the viewing and reading experience for the user, based on the runtime environment.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, the same flow document will dynamically reformat for optimal readability on either high-resolution 19-inch display or a small 2x3-inch PDA screen.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition, flow documents have a number of built in features including search, viewing modes that optimize readability, and the ability to change the size and appearance of fonts.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Flow Document Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/flow-document-overview.md)</ept> for illustrations, examples, and in-depth information on flow documents.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Document Controls and Text Layout</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_avalonwinfx](../../../../includes/tla2sharptla-avalonwinfx-md.md)]</ph> provides a set of pre-built controls that simplify using fixed documents, flow documents, and general text within your application.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The display of fixed document content is supported using the <ph id="ph1">&lt;xref:System.Windows.Controls.DocumentViewer&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Display of flow document content is supported by three different controls: <ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.FlowDocumentPageViewer&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt;</ph> which map to different user scenarios (see sections below).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Other <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls provide simplified layout to support general text uses (see <bpt id="p1">[</bpt>Text in the User Interface<ept id="p1">](#text_in_the_user_interface)</ept>, below).</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Fixed Document Control - DocumentViewer</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.DocumentViewer&gt;</ph> control is designed to display <ph id="ph2">&lt;xref:System.Windows.Documents.FixedDocument&gt;</ph> content.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.DocumentViewer&gt;</ph> control provides an intuitive user interface that provides built-in support for common operations including print output, copy to clipboard, zoom, and text search features.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The control provides access to pages of content through a familiar scrolling mechanism.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Like all <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> controls, <ph id="ph2">&lt;xref:System.Windows.Controls.DocumentViewer&gt;</ph> supports complete or partial restyling, which enables the control to be visually integrated into virtually any application or environment.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.DocumentViewer&gt;</ph> is designed to display content in a read-only manner; editing or modification of content is not available and is not supported.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Flow Document Controls</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> For more detailed information on flow document features and how to create them, see <bpt id="p2">[</bpt>Flow Document Overview<ept id="p2">](../../../../docs/framework/wpf/advanced/flow-document-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Display of flow document content is supported by three controls: <ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.FlowDocumentPageViewer&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>FlowDocumentReader</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentReader&gt;</ph> includes features that enable the user to dynamically choose between various viewing modes, including a single-page (page-at-a-time) viewing mode, a two-page-at-a-time (book reading format) viewing mode, and a continuous scrolling (bottomless) viewing mode.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information about these viewing modes, see <ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentReaderViewingMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you do not need the ability to dynamically switch between different viewing modes, <ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentPageViewer&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt;</ph> provide lighter-weight flow content viewers that are fixed in a particular viewing mode.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>FlowDocumentPageViewer and FlowDocumentScrollViewer</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentPageViewer&gt;</ph> shows content in page-at-a-time viewing mode, while <ph id="ph2">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt;</ph> shows content in continuous scrolling mode.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Both <ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentPageViewer&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt;</ph> are fixed to a particular viewing mode.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Compare to <ph id="ph1">&lt;xref:System.Windows.Controls.FlowDocumentReader&gt;</ph>, which includes features that enable the user to dynamically choose between various viewing modes (as provided by the <ph id="ph2">&lt;xref:System.Windows.Controls.FlowDocumentReaderViewingMode&gt;</ph> enumeration), at the cost of being more resource intensive than <ph id="ph3">&lt;xref:System.Windows.Controls.FlowDocumentPageViewer&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>By default, a vertical scrollbar is always shown, and a horizontal scrollbar becomes visible if needed.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> for <ph id="ph2">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt;</ph> does not include a toolbar; however, the <ph id="ph3">&lt;xref:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible%2A&gt;</ph> property can be used to enable a built-in toolbar.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Text in the User Interface</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Besides adding text to documents, text can obviously be used in application UI such as forms.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> includes multiple controls for drawing text to the screen.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each control is targeted to a different scenario and has its own list of features and limitations.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In general, the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> element should be used when limited text support is required, such as a brief sentence in a <ph id="ph2">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> can be used when minimal text support is required.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>TextBlock Overview<ept id="p1">](../../../../docs/framework/wpf/controls/textblock-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Document Packaging</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The<ph id="ph1">&lt;xref:System.IO.Packaging&gt;</ph> <ph id="ph2">[!INCLUDE[TLA2#tla_api#plural](../../../../includes/tla2sharptla-apisharpplural-md.md)]</ph> provide an efficient means to organize application data, document content, and related resources in a single container that is simple to access, portable, and easy to distribute.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A ZIP file is an example of a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> type capable of holding multiple objects as a single unit.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The packaging <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](../../../../includes/tla2sharptla-apisharpplural-md.md)]</ph> provide a default <ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> implementation designed using an Open Packaging Conventions standard with XML and ZIP file architecture.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> packaging <ph id="ph2">[!INCLUDE[TLA2#tla_api#plural](../../../../includes/tla2sharptla-apisharpplural-md.md)]</ph> make it simple to create packages, and to store and access objects within them.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An object stored in a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> is referred to as a <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> ("part").</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Packages can also include signed digital certificates that can be used to identify the originator of a part and to validate that the contents of a package have not been modified.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Packages also include a <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> feature that allows additional information to be added to a package or associated with specific parts without actually modifying the content of existing parts.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Package services also support <ph id="ph1">[!INCLUDE[TLA#tla_rm](../../../../includes/tlasharptla-rm-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> Package architecture serves as the foundation for a number of key technologies:</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xps](../../../../includes/tla2sharptla-xps-md.md)]</ph> documents conforming to the <ph id="ph2">[!INCLUDE[TLA#tla_xps](../../../../includes/tlasharptla-xps-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Microsoft Office "12" open XML format documents (.docx).</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Custom storage formats for your own application design.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Based on the packaging APIs, an <ph id="ph1">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> is specifically designed for storing <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> fixed content documents.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> is a self-contained document that can be opened in a viewer, displayed in a <ph id="ph2">&lt;xref:System.Windows.Controls.DocumentViewer&gt;</ph> control, routed to a print spool, or output directly to an <ph id="ph3">[!INCLUDE[TLA2#tla_xps](../../../../includes/tla2sharptla-xps-md.md)]</ph>-compatible printer.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following sections provide additional information on the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_api#plural](../../../../includes/tla2sharptla-apisharpplural-md.md)]</ph> provided with <ph id="ph4">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Package Components</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> packaging APIs allow application data and documents to be organized into a single portable unit.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A ZIP file is one of the most common types of packages and is the default package type provided with <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> itself is an abstract class from which <ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is implemented using an open standard XML and ZIP file architecture.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method uses <ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> to create and use ZIP files by default.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A package can contain three basic types of items:</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Application content, data, documents, and resource files.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>[X.509 Certificate] for identification, authentication and validation.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Added information related to the package or a specific part.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>PackageParts</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> ("part") is an abstract class that refers to an object stored in a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In a ZIP file, the package parts correspond to the individual files stored within the ZIP file.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackagePart&gt;</ph> provides the default implementation for serializable objects stored in a <ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Like a file system, parts contained in the package are stored in hierarchical directory or "folder-style" organization.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> packaging APIs, applications can write, store, and read multiple <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> objects using a single ZIP file container.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>PackageDigitalSignatures</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For security, a <ph id="ph1">&lt;xref:System.IO.Packaging.PackageDigitalSignature&gt;</ph> ("digital signature") can be associated with parts within a package.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageDigitalSignature&gt;</ph> incorporates a [509] that provides two features:</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Identifies and authenticates the originator of the part.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Validates that the part has not been modified.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The digital signature does not preclude a part from being modified, but a validation check against the digital signature will fail if the part is altered in any way.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The application can then take appropriate action—for example, block opening the part or notify the user that the part has been modified and is not secure.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>PackageRelationships</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> ("relationship") provides a mechanism for associating additional information with the package or a part within the package.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A relationship is a package-level facility that can associate additional information with a part without modifying the actual part content.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Inserting new data directly into the part content of is usually not practical in many cases:</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The actual type of the part and its content schema is not known.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Even if known, the content schema might not provide a means for adding new information.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The part might be digitally signed or encrypted, precluding any modification.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Package relationships provide a discoverable means for adding and associating additional information with individual parts or with the entire package.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Package relationships are used for two primary functions:</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Defining dependency relationships from one part to another part.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Defining information relationships that add notes or other data related to the part.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> provides a quick, discoverable means to define dependencies and add other information associated with a part of the package or the package as a whole.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Dependency Relationships</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Dependency relationships are used to describe dependencies that one part makes to other parts.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For example, a package might contain an HTML part that includes one or more <ph id="ph1">\&lt;</ph>img&gt; image tags.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The image tags refer to images that are located either as other parts internal to the package or external to the package (such as accessible over the Internet).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Creating a <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> associated with HTML file makes discovering and accessing the dependent resources quick and easy.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A browser or viewer application can directly access the part relationships and immediately begin assembling the dependent resources without knowing the schema or parsing the document.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Information Relationships</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Similar to a note or annotation, a <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> can also be used to store other types of information to be associated with a part without having to actually modify the part content itself.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>XPS Documents</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_xps](../../../../includes/tlasharptla-xps-md.md)]</ph> document is a package that contains one or more fixed-documents along with all the resources and information required for rendering.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xps](../../../../includes/tla2sharptla-xps-md.md)]</ph> is also the native <ph id="ph2">[!INCLUDE[TLA#tla_winvista](../../../../includes/tlasharptla-winvista-md.md)]</ph> print spool file format.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> is stored in standard ZIP dataset, and can include a combination of XML and binary components, such as image and font files.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>PackageRelationships<ept id="p1">](#PackageRelationships)</ept> are used to define the dependencies between the content and the resources required to fully render the document.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> design provides a single, high-fidelity document solution that supports multiple uses:</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Reading, writing, and storing fixed-document content and resources as a single, portable, and easy-to-distribute file.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Displaying documents with the <ph id="ph1">[!INCLUDE[TLA2#tla_xps](../../../../includes/tla2sharptla-xps-md.md)]</ph> Viewer application.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Outputting documents in the native print spool output format of <ph id="ph1">[!INCLUDE[TLA#tla_winvista](../../../../includes/tlasharptla-winvista-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Routing documents directly to an <ph id="ph1">[!INCLUDE[TLA2#tla_xps](../../../../includes/tla2sharptla-xps-md.md)]</ph>-compatible printer.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.FixedDocument&gt;</ph></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph></source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackagePart&gt;</ph></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.DocumentViewer&gt;</ph></source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Text<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-text.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Flow Document Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/flow-document-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Printing Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/printing-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Document Serialization and Storage<ept id="p1">](../../../../docs/framework/wpf/advanced/document-serialization-and-storage.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>