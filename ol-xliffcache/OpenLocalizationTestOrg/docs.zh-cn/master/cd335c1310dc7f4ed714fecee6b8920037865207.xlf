<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd335c1310dc7f4ed714fecee6b8920037865207</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\walkthrough-hosting-a-wpf-composite-control-in-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bb8bfbff6ba87aaa3b1b57196a509c53d33cf1e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5632489bc06f3ef3e41dd90df3a8bfb54480d2cf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Walkthrough: Hosting a WPF Composite Control in Windows Forms | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Hosting a WPF Composite Control in Windows Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> provides a rich environment for creating applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, when you have a substantial investment in              <ph id="ph1">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> code, it can be more effective to extend your existing              <ph id="ph2">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> application with              <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> rather than to rewrite it from scratch.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A common scenario is when you want to embed one or more controls implemented with              <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> within your              <ph id="ph2">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about customizing WPF controls, see              <bpt id="p1">[</bpt>Control Customization<ept id="p1">](../../../../docs/framework/wpf/controls/control-customization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This walkthrough steps you through an application that hosts a              <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control to perform data-entry in a              <ph id="ph2">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The composite control is packaged in a DLL.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This general procedure can be extended to more complex applications and controls.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This walkthrough is designed to be nearly identical in appearance and functionality to              <bpt id="p1">[</bpt>Walkthrough: Hosting a Windows Forms Composite Control in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The primary difference is that the hosting scenario is reversed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The walkthrough is divided into two sections.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The first section briefly describes the implementation of the              <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The second section discusses in detail how to host the composite control in a              <ph id="ph1">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> application, receive events from the control, and access some of the controlâ€™s properties.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Tasks illustrated in this walkthrough include:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Implementing the WPF composite control.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Implementing the Windows Forms host application.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For a complete code listing of the tasks illustrated in this walkthrough, see              <bpt id="p1">[</bpt>Hosting a WPF Composite Control in Windows Forms Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159996)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You need the following components to complete this walkthrough:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vs_dev10_long](../../../../includes/vs-dev10-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Implementing the WPF Composite Control</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control used in this example is a simple data-entry form that takes the user's name and address.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When the user clicks one of two buttons to indicate that the task is finished, the control raises a custom event to return that information to the host.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following illustration shows the rendered control.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Simple WPF control<ept id="p1">](../../../../docs/framework/wpf/advanced/media/avaloncontrol.png "AvalonControl")</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>WPF composite control</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creating the Project</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To start the project:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Launch                                  <ph id="ph1">[!INCLUDE[TLA#tla_visualstu](../../../../includes/tlasharptla-visualstu-md.md)]</ph>, and open the                                  <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In Visual C# and the Windows category, select the                                  <bpt id="p1">**</bpt>WPF User Control Library<ept id="p1">**</ept> template.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Name the new project                                  <ph id="ph1">`MyControls`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For the location, specify a conveniently named top-level folder, such as                                  <ph id="ph1">`WindowsFormsHostingWpfControl`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Later, you will put the host application in this folder.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Click                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the project.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default project contains a single control named                                  <ph id="ph1">`UserControl1`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, rename                                  <ph id="ph1">`UserControl1`</ph> to                                  <ph id="ph2">`MyControl1`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Your project should have references to the following system DLLs.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If any of these DLLs are not included by default, add them to your project.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>PresentationCore</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>PresentationFramework</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>System</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>WindowsBase</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Creating the User Interface</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph> for the composite control is implemented with                          <ph id="ph2">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The composite control                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> consists of five                          <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each                          <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> element has an associated                          <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> element that serves as a label.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>There are two                          <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements at the bottom,                          <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> and                          <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When the user clicks either button, the control raises a custom event to return the information to the host.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Basic Layout</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The various                                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> elements are contained in a                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can use                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> to arrange the contents of the composite control in much the same way you would use a                                  <ph id="ph2">`Table`</ph> element in HTML.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> also has a                                  <ph id="ph2">&lt;xref:System.Windows.Documents.Table&gt;</ph> element, but                                  <ph id="ph3">&lt;xref:System.Windows.Controls.Grid&gt;</ph> is more lightweight and better suited for simple layout tasks.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following XAML shows the basic layout.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This XAML defines the overall structure of the control by specifying the number of columns and rows in the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In MyControl1.xaml, replace the existing XAML with the following XAML.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#101<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#101)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#102<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#102)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Adding TextBlock and TextBox Elements to the Grid</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You place a                                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> element in the grid by setting the element's                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Grid.RowProperty&gt;</ph> and                                  <ph id="ph3">&lt;xref:System.Windows.Controls.Grid.ColumnProperty&gt;</ph> attributes to the appropriate row and column number.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Remember that row and column numbering are zero-based.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can have an element span multiple columns by setting its                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid.ColumnSpanProperty&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information about                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> elements, see                                  <bpt id="p1">[</bpt>Create a Grid Element<ept id="p1">](../../../../docs/framework/wpf/controls/how-to-create-a-grid-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following XAML shows the composite controlâ€™s                                  <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and                                  <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> elements with their                                  <ph id="ph3">&lt;xref:System.Windows.Controls.Grid.RowProperty&gt;</ph> and                                  <ph id="ph4">&lt;xref:System.Windows.Controls.Grid.ColumnProperty&gt;</ph> attributes, which are set to place the elements properly in the grid.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In MyControl1.xaml, add the following XAML within the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#103<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#103)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Styling the UI Elements</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Many of the elements on the data-entry form have a similar appearance, which means that they have identical settings for several of their properties.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Rather than setting each element's attributes separately, the previous XAML uses                                  <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> elements to define standard property settings for classes of elements.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This approach reduces the complexity of the control and enables you to change the appearance of multiple elements through a single style attribute.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> elements are contained in the                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element's                                  <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;</ph> property, so they can be used by all elements in the control.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a style is named, you apply it to an element by adding a                                  <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> element set to the style's name.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Styles that are not named become the default style for the element.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information about                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> styles, see                                  <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following XAML shows the                                  <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> elements for the composite control.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To see how the styles are applied to elements, see the previous XAML.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For example, the last                                  <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> element has the                                  <ph id="ph2">`inlineText`</ph> style, and the last                                  <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> element uses the default style.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In MyControl1.xaml, add the following XAML just after the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> start element.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#104<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#104)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Adding the OK and Cancel Buttons</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The final elements on the composite control are the                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> and                                  <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept><ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements, which occupy the first two columns of the last row of the                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>These elements use a common event handler,                                  <ph id="ph1">`ButtonClicked`</ph>, and the default                                  <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> style defined in the previous XAML.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In MyControl1.xaml, add the following XAML after the last                                  <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The                                  <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> part of the composite control is now complete.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#105<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#105)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Implementing the Code-Behind File</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The code-behind file, MyControl1.xaml.cs, implements three essential tasks                         :</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Handles the event that occurs when the user clicks one of the buttons.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Retrieves the data from the                                  <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> elements, and packages it in a custom event argument object.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Raises the custom                                  <ph id="ph1">`OnButtonClick`</ph> event, which notifies the host that the user is finished and passes the data back to the host.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The control also exposes a number of color and font properties that enable you to change the appearance.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Unlike the                          <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> class, which is used to host a                          <ph id="ph2">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> control, the                          <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> class exposes the controlâ€™s                          <ph id="ph4">&lt;xref:System.Windows.Controls.Panel.Background%2A&gt;</ph> property only.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To maintain the similarity between this code example and the example discussed in                          <bpt id="p1">[</bpt>Walkthrough: Hosting a Windows Forms Composite Control in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)</ept>, the control exposes the remaining properties directly.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The Basic Structure of the Code-Behind File</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The code-behind file consists of a single namespace,                                  <ph id="ph1">`MyControls`</ph>, which will contain two classes,                                  <ph id="ph2">`MyControl1`</ph> and                                  <ph id="ph3">`MyControlEventArgs`</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The first class,                                  <ph id="ph1">`MyControl1`</ph>, is a partial class containing the code that implements the functionality of the                                  <ph id="ph2">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> defined in MyControl1.xaml.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When MyControl1.xaml is parsed, the                                  <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> is converted to the same partial class, and the two partial classes are merged to form the compiled control.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For this reason, the class name in the code-behind file must match the class name assigned to MyControl1.xaml, and it must inherit from the root element of the control.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The second class,                                  <ph id="ph1">`MyControlEventArgs`</ph>, is an event arguments class that is used to send the data back to the host.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Open MyControl1.xaml.cs.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Change the existing class declaration so that it has the following name and inherits from                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#21<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#21)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Initializing the Control</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The following code implements several basic tasks:</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Declares a private event,                                          <ph id="ph1">`OnButtonClick`</ph>, and its associated delegate,                                          <ph id="ph2">`MyControlEventHandler`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Creates several private global variables that store the user's data.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This data is exposed through corresponding properties.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Implements a handler,                                          <ph id="ph1">`Init`</ph>, for the controlâ€™s                                          <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This handler initializes the global variables by assigning them the values defined in MyControl1.xaml.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>To do this, it uses the                                          <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> assigned to a typical                                          <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> element,                                          <ph id="ph3">`nameLabel`</ph>, to access that element's property settings.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Delete the existing constructor and add the following code to your                                  <ph id="ph1">`MyControl1`</ph> class.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#11<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#11)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Handling the Buttons' Click Events</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The user indicates that the data-entry task is finished by clicking either the                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button or the                                  <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Both buttons use the same                                  <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler,                                  <ph id="ph2">`ButtonClicked`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Both buttons have a name,                                  <ph id="ph1">`btnOK`</ph> or                                  <ph id="ph2">`btnCancel`</ph>, that enables the handler to determine which button was clicked by examining the value of the                                  <ph id="ph3">`sender`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The handler does the following:</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Creates a                                          <ph id="ph1">`MyControlEventArgs`</ph> object that contains the data from the                                          <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If the user clicked the                                          <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button, sets the                                          <ph id="ph1">`MyControlEventArgs`</ph> object's                                          <ph id="ph2">`IsOK`</ph> property to                                          <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Raises the                                          <ph id="ph1">`OnButtonClick`</ph> event to indicate to the host that the user is finished, and passes back the collected data.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Add the following code to your                                  <ph id="ph1">`MyControl1`</ph> class, after the                                  <ph id="ph2">`Init`</ph> method.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#12<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#12)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Creating Properties</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The remainder of the class simply exposes properties that correspond to the global variables discussed previously.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When a property changes, the set accessor modifies the appearance of the control by changing the corresponding element properties and updating the underlying global variables.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Add the following code to your                                  <ph id="ph1">`MyControl1`</ph> class.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#13<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#13)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Sending the Data Back to the Host</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The final component in the file is the                                  <ph id="ph1">`MyControlEventArgs`</ph> class, which is used to send the collected data back to the host.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Add the following code to your                                  <ph id="ph1">`MyControls`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The implementation is straightforward, and is not discussed further.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#14<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#14)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Build the solution.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The build will produce a DLL named MyControls.dll.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Implementing the Windows Forms Host Application</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The                  <ph id="ph1">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> host application uses an                  <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> object to host the                  <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The application handles the                   <ph id="ph1">`OnButtonClick`</ph> event to receive the data from the composite control.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The application also has a set of option buttons that you can use to modify the controlâ€™s appearance.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The following illustration shows the application.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Windows Form Hosting Avalon Control<ept id="p1">](../../../../docs/framework/wpf/advanced/media/wfhost.png "WFHost")</ept></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>WPF composite control hosted in a Windows Forms application</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Creating the Project</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>To start the project:</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Launch                                  <ph id="ph1">[!INCLUDE[TLA2#tla_visualstu](../../../../includes/tla2sharptla-visualstu-md.md)]</ph>, and open the                                  <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>In Visual C# and the Windows category, select  the                                  <bpt id="p1">**</bpt>Windows Forms Application<ept id="p1">**</ept> template.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Name the new project                                  <ph id="ph1">`WFHost`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For the location, specify the same top-level folder that contains the MyControls project.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Click                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the project.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>You also need to add references to the DLL that contains                          <ph id="ph1">`MyControl1`</ph> and other assemblies.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Right-click the project name in Solution Explorer, and select                                  <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Click the                                  <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> tab, and browse to the folder that contains MyControls.dll.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For this walkthrough, this folder is MyControls\bin\Debug.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Select MyControls.dll, and then click                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Add references to the following assemblies.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>PresentationCore</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>PresentationFramework</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>System.Xaml</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>WindowsBase</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>WindowsFormsIntegration</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Implementing the User Interface for the Application</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The UI for the Windows Form application contains several controls to interact with the WPF composite control.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Open Form1 in the Windows Form Designer.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Enlarge the form to accommodate the controls.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>In the upper-right corner of the form, add a                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Panel?displayProperty=fullName&gt;</ph> control to hold the                                  <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Add the following                                  <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox?displayProperty=fullName&gt;</ph> controls to the form.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>groupBox1</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Background Color</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>groupBox2</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Foreground Color</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>groupBox3</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Font Size</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>groupBox4</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Font Family</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>groupBox5</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Font Style</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>groupBox6</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Font Weight</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>groupBox7</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Data from control</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Add the following                                  <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton?displayProperty=fullName&gt;</ph> controls to the                                  <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox?displayProperty=fullName&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>GroupBox</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>groupBox1</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>radioBackgroundOriginal</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Original</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>groupBox1</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>radioBackgroundLightGreen</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>LightGreen</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>groupBox1</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>radioBackgroundLightSalmon</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>LightSalmon</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>groupBox2</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>radioForegroundOriginal</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Original</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>groupBox2</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>radioForegroundRed</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Red</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>groupBox2</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>radioForegroundYellow</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Yellow</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>groupBox3</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>radioSizeOriginal</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Original</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>groupBox3</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>radioSizeTen</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>10</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>groupBox3</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>radioSizeTwelve</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>12</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>groupBox4</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>radioFamilyOriginal</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Original</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>groupBox4</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>radioFamilyTimes</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Times New Roman</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>groupBox4</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>radioFamilyWingDings</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>WingDings</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>groupBox5</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>radioStyleOriginal</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Normal</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>groupBox5</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>radioStyleItalic</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Italic</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>groupBox6</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>radioWeightOriginal</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Original</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>groupBox6</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>radioWeightBold</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Bold</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Add the following                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Label?displayProperty=fullName&gt;</ph> controls to the last                                  <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>These controls display the data returned by the                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>GroupBox</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>groupBox7</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>lblName</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Name:</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>groupBox7</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>lblAddress</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Street Address:</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>groupBox7</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>lblCity</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>City:</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>groupBox7</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>lblState</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>State:</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>groupBox7</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>lblZip</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Zip:</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Initializing the Form</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>You generally implement the hosting code in the form's                          <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The following code shows the                          <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler, a handler for the                          <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite controlâ€™s                          <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event, and declarations for several global variables that are used later.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>In the Windows Forms Designer, double-click the form to create a                          <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>At the top of Form1.cs, add the following                          <ph id="ph1">`using`</ph> statements.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#10<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#10)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Replace the contents of the existing                          <ph id="ph1">`Form1`</ph> class with the following code.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">`Form1_Load`</ph> method in the preceding code shows the general procedure for hosting a                          <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control:</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Create a new                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Set the control's                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property to                                  <ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Add the                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control to the                                  <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control's                                  <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Create an instance of the                                  <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Host the composite control on the form by assigning the control to the                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control's                                  <ph id="ph2">&lt;xref:System.Windows.Forms.Integration.ElementHost.Child%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The remaining two lines in the                          <ph id="ph1">`Form1_Load`</ph> method attach handlers to two control events:</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`OnButtonClick`</ph> is a custom event that is fired by the composite control when the user clicks the                                  <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> or                                  <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>You handle the event to get the user's response and to collect any data that the user specified.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> is a standard event that is raised by a                                  <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control when it is fully loaded.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The event is used here because the example needs to initialize several global variables using properties from the control.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>At the time of the form's                                  <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event, the control is not fully loaded and those values are still set to                                  <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>You need to wait until the controlâ€™s                                  <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event occurs before you can access those properties.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event handler is shown in the preceding code.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">`OnButtonClick`</ph> handler is discussed in the next section.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Handling OnButtonClick</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">`OnButtonClick`</ph> event occurs when the user clicks the                          <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> or                          <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The event handler checks the event argument's                          <ph id="ph1">`IsOK`</ph> field to determine which button was clicked.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">`lbl`</ph><bpt id="p1">*</bpt>data<ept id="p1">*</ept> variables correspond to the                          <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls that were discussed earlier.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>If the user clicks the                          <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button, the data from the controlâ€™s                          <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls is assigned to the corresponding                          <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>If the user clicks                          <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept>, the                          <ph id="ph1">&lt;xref:System.Windows.Forms.Label.Text%2A&gt;</ph> values are set to the default strings.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Add the following button click event handler code to the                          <ph id="ph1">`Form1`</ph> class.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Build and run the application.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Add some text in the WPF composite control and then click                          <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The text appears in the labels.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>At this point, code has not been added to handle the radio buttons.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Modifying the Appearance of the Control</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls on the form will enable the user to change the                          <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite controlâ€™s foreground and background colors as well as several font properties.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The background color is exposed by the                          <ph id="ph1">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The remaining properties are exposed as custom properties of the control.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Double-click each                          <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control on the form to create                          <ph id="ph2">&lt;xref:System.Windows.Forms.RadioButton.CheckedChanged&gt;</ph> event handlers.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Replace the                          <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton.CheckedChanged&gt;</ph> event handlers with the following code.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WindowsFormsHostingWpfControl#4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Build and run the application.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Click the different radio buttons to see the effect on the WPF composite control.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>WPF Designer<ept id="p1">](http://msdn.microsoft.com/en-us/c6c65214-8411-4e16-b254-163ed4099c26)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Hosting a Windows Forms Composite Control in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Hosting a 3-D WPF Composite Control in Windows Forms<ept id="p1">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-3-d-wpf-composite-control-in-windows-forms.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>