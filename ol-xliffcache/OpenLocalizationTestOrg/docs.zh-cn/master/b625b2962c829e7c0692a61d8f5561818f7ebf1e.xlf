<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="icorprofilerinfo4-getiltonativemapping2-method.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b625b2962c829e7c0692a61d8f5561818f7ebf1e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\profiling\icorprofilerinfo4-getiltonativemapping2-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ef0bc6c3a58af92f29f87a1b61470682ec1e62e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57501ac3552a2c6529b12526e4b213a1a4b32e94</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICorProfilerInfo4::GetILToNativeMapping2 Method</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorProfilerInfo4::GetILToNativeMapping2 Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets a map from Microsoft intermediate language (MSIL) offsets to native offsets for the code contained in the JIT-recompiled version of the specified function.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in] The ID of the function that contains the code.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[in] The identity of the JIT-recompiled function.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The identity must be zero in the <ph id="ph1">[!INCLUDE[net_v45](../../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[in] The maximum size of the <ph id="ph1">`map`</ph> array.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>[out] The total number of available COR_DEBUG_IL_TO_NATIVE_MAP structures.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>[out] An array of <ph id="ph1">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structures, each of which specifies the offsets.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>After the <ph id="ph1">`GetILToNativeMapping2`</ph> method returns, <ph id="ph2">`map`</ph> will contain some or all of the <ph id="ph3">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structures.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetILToNativeMapping2`</ph> is similar to the <bpt id="p1">[</bpt>ICorProfilerInfo::GetILToNativeMapping<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getiltonativemapping-method.md)</ept> method, except that it will allow the profiler to specify the ID of the recompiled function in future releases.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>ICorProfilerFunctionControl::SetILInstrumentedCodeMap<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setilinstrumentedcodemap-method.md)</ept> method is not implemented in the <ph id="ph1">[!INCLUDE[net_v45](../../../../includes/net-v45-md.md)]</ph>, so functions that have been JIT-recompiled cannot have an IL-to-native mapping that differs from the originally compiled function.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>As such, <ph id="ph1">`GetILToNativeMapping2`</ph> cannot be called with a nonzero JIT-recompiled ID in the <ph id="ph2">[!INCLUDE[net_v45](../../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`GetILToNativeMapping2`</ph> method returns an array of <ph id="ph2">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structures.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To convey that certain ranges of native instructions correspond to special regions of code (for example, the prolog), an entry in the array can have its <ph id="ph1">`ilOffset`</ph> field set to a value of the <bpt id="p1">[</bpt>CorDebugIlToNativeMappingTypes<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/cordebugiltonativemappingtypes-enumeration.md)</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>After <ph id="ph1">`GetILToNativeMapping2`</ph> returns, you must verify that the <ph id="ph2">`map`</ph> buffer was large enough to contain all the <ph id="ph3">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structures.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To do this, compare the value of <ph id="ph1">`cMap`</ph> with the value of the <ph id="ph2">`pcMap`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`pcMap`</ph> value, when it is multiplied by the size of a <ph id="ph2">`COR_DEBUG_IL_TO_NATIVE_MAP`</ph> structure, is larger than <ph id="ph3">`cMap`</ph>, allocate a larger <ph id="ph4">`map`</ph> buffer, update <ph id="ph5">`cMap`</ph> with the new, larger size, and call <ph id="ph6">`GetILToNativeMapping2`</ph> again.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Alternatively, you can first call <ph id="ph1">`GetILToNativeMapping2`</ph> with a zero-length <ph id="ph2">`map`</ph> buffer to obtain the correct buffer size.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can then set the buffer size to the value returned in <ph id="ph1">`pcMap`</ph> and call <ph id="ph2">`GetILToNativeMapping2`</ph> again.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorProf.idl, CorProf.h</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetILToNativeMapping Method<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-getiltonativemapping-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerInfo4 Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo4-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>