{"content":"---\ntitle: \"-target:module (C# Compiler Options)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"/target:module\"\nhelpviewer_keywords: \n  - \"-target compiler options [C#], /target:module\"\n  - \"target compiler options [C#], /target:module\"\n  - \"/target compiler options [C#], /target:module\"\nms.assetid: 9af1e4fa-c749-44e7-ae58-90a3d05d4e72\n---\n# -target:module (C# Compiler Options)\nThis option causes the compiler to not generate an assembly manifest.  \n  \n## Syntax  \n  \n```console  \n-target:module  \n```  \n  \n## Remarks  \n By default, the output file created by compiling with this option will have an extension of .netmodule.  \n  \n A file that does not have an assembly manifest cannot be loaded by the .NET Framework common language runtime. However, such a file can be incorporated into the assembly manifest of an assembly by means of [-addmodule](../../../csharp/language-reference/compiler-options/addmodule-compiler-option.md).  \n  \n If more than one module is created in a single compilation, [internal](../../../csharp/language-reference/keywords/internal.md) types in one module will be available to other modules in the compilation. When code in one module references `internal` types in another module, then both modules must be incorporated into an assembly manifest, by means of **-addmodule**.  \n  \n Creating a module is not supported in the Visual Studio development environment.  \n  \n For information on how to set this compiler option programmatically, see <xref:VSLangProj80.ProjectProperties3.OutputType%2A>.  \n  \n## Example  \n Compile `in.cs`, creating `in.netmodule`:  \n  \n```console  \ncsc -target:module in.cs  \n```  \n  \n## See also\n\n- [-target (C# Compiler Options)](../../../csharp/language-reference/compiler-options/target-compiler-option.md)\n- [C# Compiler Options](../../../csharp/language-reference/compiler-options/index.md)\n","nodes":[{"pos":[4,330],"embed":true,"restype":"x-metadata","content":"title: \"-target:module (C# Compiler Options)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"/target:module\"\nhelpviewer_keywords: \n  - \"-target compiler options [C#], /target:module\"\n  - \"target compiler options [C#], /target:module\"\n  - \"/target compiler options [C#], /target:module\"\nms.assetid: 9af1e4fa-c749-44e7-ae58-90a3d05d4e72","nodes":[{"content":"-target:module (C# Compiler Options)","nodes":[{"pos":[0,36],"content":"-target:module (C# Compiler Options)","nodes":[{"content":"-target:module (C# Compiler Options)","pos":[0,36]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[337,373],"content":"-target:module (C# Compiler Options)","linkify":"-target:module (C# Compiler Options)","nodes":[{"content":"-target:module (C# Compiler Options)","pos":[0,36]}]},{"content":"This option causes the compiler to not generate an assembly manifest.","pos":[374,443]},{"pos":[452,458],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[506,513],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"By default, the output file created by compiling with this option will have an extension of .netmodule.","pos":[517,620]},{"content":"A file that does not have an assembly manifest cannot be loaded by the .NET Framework common language runtime.","pos":[627,737]},{"content":"However, such a file can be incorporated into the assembly manifest of an assembly by means of <bpt id=\"p1\">[</bpt>-addmodule<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/addmodule-compiler-option.md)</ept>.","pos":[738,928],"source":" However, such a file can be incorporated into the assembly manifest of an assembly by means of [-addmodule](../../../csharp/language-reference/compiler-options/addmodule-compiler-option.md)."},{"content":"If more than one module is created in a single compilation, <bpt id=\"p1\">[</bpt>internal<ept id=\"p1\">](../../../csharp/language-reference/keywords/internal.md)</ept> types in one module will be available to other modules in the compilation.","pos":[935,1137],"source":"If more than one module is created in a single compilation, [internal](../../../csharp/language-reference/keywords/internal.md) types in one module will be available to other modules in the compilation."},{"content":"When code in one module references <ph id=\"ph1\">`internal`</ph> types in another module, then both modules must be incorporated into an assembly manifest, by means of <bpt id=\"p1\">**</bpt>-addmodule<ept id=\"p1\">**</ept>.","pos":[1138,1302],"source":" When code in one module references `internal` types in another module, then both modules must be incorporated into an assembly manifest, by means of **-addmodule**."},{"content":"Creating a module is not supported in the Visual Studio development environment.","pos":[1309,1389]},{"pos":[1396,1522],"content":"For information on how to set this compiler option programmatically, see <ph id=\"ph1\">&lt;xref:VSLangProj80.ProjectProperties3.OutputType%2A&gt;</ph>.","source":"For information on how to set this compiler option programmatically, see <xref:VSLangProj80.ProjectProperties3.OutputType%2A>."},{"pos":[1531,1538],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1542,1583],"content":"Compile <ph id=\"ph1\">`in.cs`</ph>, creating <ph id=\"ph2\">`in.netmodule`</ph>:","source":"Compile `in.cs`, creating `in.netmodule`:"},{"pos":[1641,1649],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1653,1763],"content":"<bpt id=\"p1\">[</bpt>-target (C# Compiler Options)<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/target-compiler-option.md)</ept>","source":"[-target (C# Compiler Options)](../../../csharp/language-reference/compiler-options/target-compiler-option.md)"},{"pos":[1766,1849],"content":"<bpt id=\"p1\">[</bpt>C# Compiler Options<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/index.md)</ept>","source":"[C# Compiler Options](../../../csharp/language-reference/compiler-options/index.md)"}]}