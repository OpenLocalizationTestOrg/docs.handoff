{"content":"---\ntitle: \"Using XSLT to Transform an XML Tree (C#)\"\nms.date: 07/20/2015\nms.assetid: 373a2699-d4c5-471b-9bda-c1f0ab73b477\n---\n# Using XSLT to Transform an XML Tree (C#)\nYou can create an XML tree, create an <xref:System.Xml.XmlReader> from the XML tree, create a new document, and create an <xref:System.Xml.XmlWriter> that will write into the new document. Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> to the transformation. After the transformation successfully completes, the new XML tree is populated with the results of the transform.  \n  \n## Example  \n  \n```csharp  \nstring xslMarkup = @\"<?xml version='1.0'?>  \n<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  \n    <xsl:template match='/Parent'>  \n        <Root>  \n            <C1>  \n            <xsl:value-of select='Child1'/>  \n            </C1>  \n            <C2>  \n            <xsl:value-of select='Child2'/>  \n            </C2>  \n        </Root>  \n    </xsl:template>  \n</xsl:stylesheet>\";  \n  \nXDocument xmlTree = new XDocument(  \n    new XElement(\"Parent\",  \n        new XElement(\"Child1\", \"Child1 data\"),  \n        new XElement(\"Child2\", \"Child2 data\")  \n    )  \n);  \n  \nXDocument newTree = new XDocument();  \nusing (XmlWriter writer = newTree.CreateWriter()) {  \n    // Load the style sheet.  \n    XslCompiledTransform xslt = new XslCompiledTransform();  \n    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  \n  \n    // Execute the transform and output the results to a writer.  \n    xslt.Transform(xmlTree.CreateReader(), writer);  \n}  \n  \nConsole.WriteLine(newTree);  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root>  \n  <C1>Child1 data</C1>  \n  <C2>Child2 data</C2>  \n</Root>  \n```  \n  \n## See also\n\n- <xref:System.Xml.Linq.XContainer.CreateWriter%2A?displayProperty=nameWithType>\n- <xref:System.Xml.Linq.XNode.CreateReader%2A?displayProperty=nameWithType>\n- [Advanced LINQ to XML Programming (C#)](../../../../csharp/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)\n","nodes":[{"pos":[4,122],"embed":true,"restype":"x-metadata","content":"title: \"Using XSLT to Transform an XML Tree (C#)\"\nms.date: 07/20/2015\nms.assetid: 373a2699-d4c5-471b-9bda-c1f0ab73b477","nodes":[{"content":"Using XSLT to Transform an XML Tree (C#)","nodes":[{"pos":[0,40],"content":"Using XSLT to Transform an XML Tree (C#)","nodes":[{"content":"Using XSLT to Transform an XML Tree (C#)","pos":[0,40]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[129,169],"content":"Using XSLT to Transform an XML Tree (C#)","linkify":"Using XSLT to Transform an XML Tree (C#)","nodes":[{"content":"Using XSLT to Transform an XML Tree (C#)","pos":[0,40]}]},{"content":"You can create an XML tree, create an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> from the XML tree, create a new document, and create an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> that will write into the new document.","pos":[170,358],"source":"You can create an XML tree, create an <xref:System.Xml.XmlReader> from the XML tree, create a new document, and create an <xref:System.Xml.XmlWriter> that will write into the new document."},{"content":"Then, you can invoke the XSLT transformation, passing the <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> to the transformation.","pos":[359,499],"source":" Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> to the transformation."},{"content":"After the transformation successfully completes, the new XML tree is populated with the results of the transform.","pos":[500,613]},{"pos":[622,629],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example produces the following output:","pos":[1663,1706]},{"pos":[1802,1810],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1971,2098],"content":"<bpt id=\"p1\">[</bpt>Advanced LINQ to XML Programming (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)</ept>","source":"[Advanced LINQ to XML Programming (C#)](../../../../csharp/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)"}]}