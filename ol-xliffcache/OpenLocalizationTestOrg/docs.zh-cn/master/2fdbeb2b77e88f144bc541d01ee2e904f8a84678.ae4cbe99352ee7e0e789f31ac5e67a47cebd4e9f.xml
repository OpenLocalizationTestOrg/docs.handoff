{"content":"---\ntitle: \"Classes Used in .NET Framework File I/O and the File System (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"file I/O classes\"\nms.assetid: 4a5ca924-eea8-4a95-a5f0-6ac10de276a3\n---\n# Classes Used in .NET Framework File I/O and the File System (Visual Basic)\nThe following tables list the classes commonly used for .NET Framework file I/O, categorized into file I/O classes, classes used for creating streams, and classes used to read and write to streams.  \n  \n To enter the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] documentation and find a more comprehensive listing, see [Class Library Overview](../../../../standard/class-library-overview.md).  \n  \n## Basic I/O Classes for Files, Drives, and Directories  \n The following table lists and describes the main classes used for file I/O.  \n  \n|Class|Description|  \n|-----------|-----------------|  \n|<xref:System.IO.Directory?displayProperty=nameWithType>|Provides static methods for creating, moving, and enumerating through directories and subdirectories.|  \n|<xref:System.IO.DirectoryInfo?displayProperty=nameWithType>|Provides instance methods for creating, moving, and enumerating through directories and subdirectories.|  \n|<xref:System.IO.DriveInfo?displayProperty=nameWithType>|Provides instance methods for creating, moving, and enumerating through drives.|  \n|<xref:System.IO.File?displayProperty=nameWithType>|Provides static methods for creating, copying, deleting, moving, and opening files, and aids in the creation of a `FileStream`.|  \n|<xref:System.IO.FileAccess?displayProperty=nameWithType>|Defines constants for read, write, or read/write access to a file.|  \n|<xref:System.IO.FileAttributes?displayProperty=nameWithType>|Provides attributes for files and directories such as `Archive`, `Hidden`, and `ReadOnly`.|  \n|<xref:System.IO.FileInfo?displayProperty=nameWithType>|Provides static methods for creating, copying, deleting, moving, and opening files, and aids in the creation of a `FileStream`.|  \n|<xref:System.IO.FileMode?displayProperty=nameWithType>|Controls how a file is opened. This parameter is specified in many of the constructors for `FileStream` and `IsolatedStorageFileStream`, and for the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo>.|  \n|<xref:System.IO.FileShare?displayProperty=nameWithType>|Defines constants for controlling the type of access other file streams can have to the same file.|  \n|<xref:System.IO.Path?displayProperty=nameWithType>|Provides methods and properties for processing directory strings.|  \n|<xref:System.Security.Permissions.FileIOPermission?displayProperty=nameWithType>|Controls the access of files and folders by defining <xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A>, <xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A>, <xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A> and <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permissions.|  \n  \n## Classes Used to Create Streams  \n The following table lists and describes the main classes used to create streams.  \n  \n|Class|Description|  \n|-----------|-----------------|  \n|<xref:System.IO.BufferedStream?displayProperty=nameWithType>|Adds a buffering layer to read and write operations on another stream.|  \n|<xref:System.IO.FileStream?displayProperty=nameWithType>|Supports random access to files through its <xref:System.IO.FileStream.Seek%2A> method. <xref:System.IO.FileStream> opens files synchronously by default but also supports asynchronous operation.|  \n|<xref:System.IO.MemoryStream?displayProperty=nameWithType>|Creates a stream whose backing store is memory, rather than a file.|  \n|<xref:System.Net.Sockets.NetworkStream?displayProperty=nameWithType>|Provides the underlying stream of data for network access.|  \n|<xref:System.Security.Cryptography.CryptoStream?displayProperty=nameWithType>|Defines a stream that links data streams to cryptographic transformations.|  \n  \n## Classes Used to Read from and Write to Streams  \n The following table shows the specific classes used for reading from and writing to files with streams.  \n  \n|**Class**|**Description**|  \n|---------------|---------------------|  \n|<xref:System.IO.BinaryReader?displayProperty=nameWithType>|Reads encoded strings and primitive data types from a <xref:System.IO.FileStream>.|  \n|<xref:System.IO.BinaryWriter?displayProperty=nameWithType>|Writes encoded strings and primitive data types to a <xref:System.IO.FileStream>.|  \n|<xref:System.IO.StreamReader?displayProperty=nameWithType>|Reads characters from a <xref:System.IO.FileStream>, using <xref:System.IO.StreamReader.CurrentEncoding%2A> to convert characters to and from bytes. <xref:System.IO.StreamReader> has a constructor that attempts to ascertain the correct <xref:System.IO.StreamReader.CurrentEncoding%2A> for a given stream, based on the presence of a <xref:System.IO.StreamReader.CurrentEncoding%2A>-specific preamble, such as a byte order mark.|  \n|<xref:System.IO.StreamWriter?displayProperty=nameWithType>|Writes characters to a `FileStream`, using <xref:System.IO.StreamWriter.Encoding%2A> to convert characters to bytes.|  \n|<xref:System.IO.StringReader?displayProperty=nameWithType>|Reads characters from a `String`. Output can be either a stream in any encoding or a `String`.|  \n|<xref:System.IO.StringWriter?displayProperty=nameWithType>|Writes characters to a `String`. Output can be either a stream in any encoding or a `String`.|  \n  \n## See also\n\n- [Composing Streams](../../../../standard/io/composing-streams.md)\n- [File and Stream I/O](../../../../standard/io/index.md)\n- [Asynchronous File I/O](../../../../standard/io/asynchronous-file-i-o.md)\n- [Basics of .NET Framework File I/O and the File System (Visual Basic)](../../../../visual-basic/developing-apps/programming/drives-directories-files/basics-of-net-framework-file-io-and-the-file-system.md)\n","nodes":[{"pos":[4,201],"embed":true,"restype":"x-metadata","content":"title: \"Classes Used in .NET Framework File I/O and the File System (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"file I/O classes\"\nms.assetid: 4a5ca924-eea8-4a95-a5f0-6ac10de276a3","nodes":[{"content":"Classes Used in .NET Framework File I/O and the File System (Visual Basic)","nodes":[{"pos":[0,74],"content":"Classes Used in .NET Framework File I/O and the File System (Visual Basic)","nodes":[{"content":"Classes Used in .NET Framework File I/O and the File System (Visual Basic)","pos":[0,74]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[208,282],"content":"Classes Used in .NET Framework File I/O and the File System (Visual Basic)","linkify":"Classes Used in .NET Framework File I/O and the File System (Visual Basic)","nodes":[{"content":"Classes Used in .NET Framework File I/O and the File System (Visual Basic)","pos":[0,74]}]},{"content":"The following tables list the classes commonly used for .NET Framework file I/O, categorized into file I/O classes, classes used for creating streams, and classes used to read and write to streams.","pos":[283,480]},{"pos":[487,682],"content":"To enter the <ph id=\"ph1\">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> documentation and find a more comprehensive listing, see <bpt id=\"p1\">[</bpt>Class Library Overview<ept id=\"p1\">](../../../../standard/class-library-overview.md)</ept>.","source":"To enter the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] documentation and find a more comprehensive listing, see [Class Library Overview](../../../../standard/class-library-overview.md)."},{"pos":[691,743],"content":"Basic I/O Classes for Files, Drives, and Directories","linkify":"Basic I/O Classes for Files, Drives, and Directories","nodes":[{"content":"Basic I/O Classes for Files, Drives, and Directories","pos":[0,52]}]},{"content":"The following table lists and describes the main classes used for file I/O.","pos":[747,822]},{"content":"Class","pos":[829,834]},{"content":"Description","pos":[835,846]},{"content":"Provides static methods for creating, moving, and enumerating through directories and subdirectories.","pos":[941,1042]},{"content":"Provides instance methods for creating, moving, and enumerating through directories and subdirectories.","pos":[1107,1210]},{"content":"Provides instance methods for creating, moving, and enumerating through drives.","pos":[1271,1350]},{"pos":[1406,1533],"content":"Provides static methods for creating, copying, deleting, moving, and opening files, and aids in the creation of a <ph id=\"ph1\">`FileStream`</ph>.","source":"Provides static methods for creating, copying, deleting, moving, and opening files, and aids in the creation of a `FileStream`."},{"content":"Defines constants for read, write, or read/write access to a file.","pos":[1595,1661]},{"pos":[1727,1817],"content":"Provides attributes for files and directories such as <ph id=\"ph1\">`Archive`</ph>, <ph id=\"ph2\">`Hidden`</ph>, and <ph id=\"ph3\">`ReadOnly`</ph>.","source":"Provides attributes for files and directories such as `Archive`, `Hidden`, and `ReadOnly`."},{"pos":[1877,2004],"content":"Provides static methods for creating, copying, deleting, moving, and opening files, and aids in the creation of a <ph id=\"ph1\">`FileStream`</ph>.","source":"Provides static methods for creating, copying, deleting, moving, and opening files, and aids in the creation of a `FileStream`."},{"content":"Controls how a file is opened.","pos":[2064,2094]},{"content":"This parameter is specified in many of the constructors for <ph id=\"ph1\">`FileStream`</ph> and <ph id=\"ph2\">`IsolatedStorageFileStream`</ph>, and for the <ph id=\"ph3\">`Open`</ph> methods of <ph id=\"ph4\">&lt;xref:System.IO.File&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.IO.FileInfo&gt;</ph>.","pos":[2095,2283],"source":" This parameter is specified in many of the constructors for `FileStream` and `IsolatedStorageFileStream`, and for the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo>."},{"content":"Defines constants for controlling the type of access other file streams can have to the same file.","pos":[2344,2442]},{"content":"Provides methods and properties for processing directory strings.","pos":[2498,2563]},{"pos":[2649,3008],"content":"Controls the access of files and folders by defining <ph id=\"ph1\">&lt;xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A&gt;</ph> permissions.","source":"Controls the access of files and folders by defining <xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A>, <xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A>, <xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A> and <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permissions."},{"pos":[3018,3048],"content":"Classes Used to Create Streams","linkify":"Classes Used to Create Streams","nodes":[{"content":"Classes Used to Create Streams","pos":[0,30]}]},{"content":"The following table lists and describes the main classes used to create streams.","pos":[3052,3132]},{"content":"Class","pos":[3139,3144]},{"content":"Description","pos":[3145,3156]},{"content":"Adds a buffering layer to read and write operations on another stream.","pos":[3256,3326]},{"content":"Supports random access to files through its <ph id=\"ph1\">&lt;xref:System.IO.FileStream.Seek%2A&gt;</ph> method.","pos":[3388,3475],"source":"Supports random access to files through its <xref:System.IO.FileStream.Seek%2A> method."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph> opens files synchronously by default but also supports asynchronous operation.","pos":[3476,3582],"source":"<xref:System.IO.FileStream> opens files synchronously by default but also supports asynchronous operation."},{"content":"Creates a stream whose backing store is memory, rather than a file.","pos":[3646,3713]},{"content":"Provides the underlying stream of data for network access.","pos":[3787,3845]},{"content":"Defines a stream that links data streams to cryptographic transformations.","pos":[3928,4002]},{"pos":[4012,4058],"content":"Classes Used to Read from and Write to Streams","linkify":"Classes Used to Read from and Write to Streams","nodes":[{"content":"Classes Used to Read from and Write to Streams","pos":[0,46]}]},{"content":"The following table shows the specific classes used for reading from and writing to files with streams.","pos":[4062,4165]},{"pos":[4172,4181],"content":"<bpt id=\"p1\">**</bpt>Class<ept id=\"p1\">**</ept>","source":"**Class**"},{"pos":[4182,4197],"content":"<bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept>","source":"**Description**"},{"pos":[4303,4385],"content":"Reads encoded strings and primitive data types from a <ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph>.","source":"Reads encoded strings and primitive data types from a <xref:System.IO.FileStream>."},{"pos":[4449,4530],"content":"Writes encoded strings and primitive data types to a <ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph>.","source":"Writes encoded strings and primitive data types to a <xref:System.IO.FileStream>."},{"content":"Reads characters from a <ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph>, using <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.CurrentEncoding%2A&gt;</ph> to convert characters to and from bytes.","pos":[4594,4742],"source":"Reads characters from a <xref:System.IO.FileStream>, using <xref:System.IO.StreamReader.CurrentEncoding%2A> to convert characters to and from bytes."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> has a constructor that attempts to ascertain the correct <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.CurrentEncoding%2A&gt;</ph> for a given stream, based on the presence of a <ph id=\"ph3\">&lt;xref:System.IO.StreamReader.CurrentEncoding%2A&gt;</ph>-specific preamble, such as a byte order mark.","pos":[4743,5020],"source":"<xref:System.IO.StreamReader> has a constructor that attempts to ascertain the correct <xref:System.IO.StreamReader.CurrentEncoding%2A> for a given stream, based on the presence of a <xref:System.IO.StreamReader.CurrentEncoding%2A>-specific preamble, such as a byte order mark."},{"pos":[5084,5200],"content":"Writes characters to a <ph id=\"ph1\">`FileStream`</ph>, using <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> to convert characters to bytes.","source":"Writes characters to a `FileStream`, using <xref:System.IO.StreamWriter.Encoding%2A> to convert characters to bytes."},{"content":"Reads characters from a <ph id=\"ph1\">`String`</ph>.","pos":[5264,5297],"source":"Reads characters from a `String`."},{"content":"Output can be either a stream in any encoding or a <ph id=\"ph1\">`String`</ph>.","pos":[5298,5358],"source":" Output can be either a stream in any encoding or a `String`."},{"content":"Writes characters to a <ph id=\"ph1\">`String`</ph>.","pos":[5422,5454],"source":"Writes characters to a `String`."},{"content":"Output can be either a stream in any encoding or a <ph id=\"ph1\">`String`</ph>.","pos":[5455,5515],"source":" Output can be either a stream in any encoding or a `String`."},{"pos":[5525,5533],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5537,5602],"content":"<bpt id=\"p1\">[</bpt>Composing Streams<ept id=\"p1\">](../../../../standard/io/composing-streams.md)</ept>","source":"[Composing Streams](../../../../standard/io/composing-streams.md)"},{"pos":[5605,5660],"content":"<bpt id=\"p1\">[</bpt>File and Stream I/O<ept id=\"p1\">](../../../../standard/io/index.md)</ept>","source":"[File and Stream I/O](../../../../standard/io/index.md)"},{"pos":[5663,5736],"content":"<bpt id=\"p1\">[</bpt>Asynchronous File I/O<ept id=\"p1\">](../../../../standard/io/asynchronous-file-i-o.md)</ept>","source":"[Asynchronous File I/O](../../../../standard/io/asynchronous-file-i-o.md)"},{"pos":[5739,5943],"content":"<bpt id=\"p1\">[</bpt>Basics of .NET Framework File I/O and the File System (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/basics-of-net-framework-file-io-and-the-file-system.md)</ept>","source":"[Basics of .NET Framework File I/O and the File System (Visual Basic)](../../../../visual-basic/developing-apps/programming/drives-directories-files/basics-of-net-framework-file-io-and-the-file-system.md)"}]}