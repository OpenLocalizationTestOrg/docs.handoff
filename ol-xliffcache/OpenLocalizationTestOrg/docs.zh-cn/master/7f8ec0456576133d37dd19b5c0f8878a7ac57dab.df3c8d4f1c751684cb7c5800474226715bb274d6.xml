{"content":"---\ntitle: \"Return Statement (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.Return\"\nhelpviewer_keywords: \n  - \"Return statement [Visual Basic], syntax\"\n  - \"control flow [Visual Basic], returning control to expressions\"\n  - \"Return statement [Visual Basic]\"\n  - \"expressions [Visual Basic], returning control to\"\nms.assetid: ac86e7f0-5a67-42c3-9834-0e0381efa3ec\n---\n# Return Statement (Visual Basic)\nReturns control to the code that called a `Function`, `Sub`, `Get`, `Set`, or `Operator` procedure.  \n  \n## Syntax  \n  \n```  \nReturn  \n-or-  \nReturn expression  \n```  \n  \n## Part  \n `expression`  \n Required in a `Function`, `Get`, or `Operator` procedure. Expression that represents the value to be returned to the calling code.  \n  \n## Remarks  \n In a `Sub` or `Set` procedure, the `Return` statement is equivalent to an `Exit Sub` or `Exit Property` statement, and `expression` must not be supplied.  \n  \n In a `Function`, `Get`, or `Operator` procedure, the `Return` statement must include `expression`, and `expression` must evaluate to a data type that is convertible to the return type of the procedure. In a `Function` or `Get` procedure, you also have the alternative of assigning an expression to the procedure name to serve as the return value, and then executing an `Exit Function` or `Exit Property` statement. In an `Operator` procedure, you must use `Return expression`.  \n  \n You can include as many `Return` statements as appropriate in the same procedure.  \n  \n> [!NOTE]\n>  The code in a `Finally` block runs after a `Return` statement in a `Try` or `Catch` block is encountered, but before that `Return` statement executes. A `Return` statement cannot be included in a `Finally` block.  \n  \n## Example  \n The following example uses the `Return` statement several times to return to the calling code when the procedure does not have to do anything else.  \n  \n [!code-vb[VbVbalrStatements#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStatements/VB/Class1.vb#53)]  \n  \n## See also\n\n- [Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)\n- [Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)\n- [Get Statement](../../../visual-basic/language-reference/statements/get-statement.md)\n- [Set Statement](../../../visual-basic/language-reference/statements/set-statement.md)\n- [Operator Statement](../../../visual-basic/language-reference/statements/operator-statement.md)\n- [Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)\n- [Exit Statement](../../../visual-basic/language-reference/statements/exit-statement.md)\n- [Try...Catch...Finally Statement](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)\n","nodes":[{"pos":[4,372],"embed":true,"restype":"x-metadata","content":"title: \"Return Statement (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.Return\"\nhelpviewer_keywords: \n  - \"Return statement [Visual Basic], syntax\"\n  - \"control flow [Visual Basic], returning control to expressions\"\n  - \"Return statement [Visual Basic]\"\n  - \"expressions [Visual Basic], returning control to\"\nms.assetid: ac86e7f0-5a67-42c3-9834-0e0381efa3ec","nodes":[{"content":"Return Statement (Visual Basic)","nodes":[{"pos":[0,31],"content":"Return Statement (Visual Basic)","nodes":[{"content":"Return Statement (Visual Basic)","pos":[0,31]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[379,410],"content":"Return Statement (Visual Basic)","linkify":"Return Statement (Visual Basic)","nodes":[{"content":"Return Statement (Visual Basic)","pos":[0,31]}]},{"pos":[411,510],"content":"Returns control to the code that called a <ph id=\"ph1\">`Function`</ph>, <ph id=\"ph2\">`Sub`</ph>, <ph id=\"ph3\">`Get`</ph>, <ph id=\"ph4\">`Set`</ph>, or <ph id=\"ph5\">`Operator`</ph> procedure.","source":"Returns control to the code that called a `Function`, `Sub`, `Get`, `Set`, or `Operator` procedure."},{"pos":[519,525],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[585,589],"content":"Part","linkify":"Part","nodes":[{"content":"Part","pos":[0,4]}]},{"content":"Required in a <ph id=\"ph1\">`Function`</ph>, <ph id=\"ph2\">`Get`</ph>, or <ph id=\"ph3\">`Operator`</ph> procedure.","pos":[609,666],"source":"Required in a `Function`, `Get`, or `Operator` procedure."},{"content":"Expression that represents the value to be returned to the calling code.","pos":[667,739]},{"pos":[748,755],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[759,912],"content":"In a <ph id=\"ph1\">`Sub`</ph> or <ph id=\"ph2\">`Set`</ph> procedure, the <ph id=\"ph3\">`Return`</ph> statement is equivalent to an <ph id=\"ph4\">`Exit Sub`</ph> or <ph id=\"ph5\">`Exit Property`</ph> statement, and <ph id=\"ph6\">`expression`</ph> must not be supplied.","source":"In a `Sub` or `Set` procedure, the `Return` statement is equivalent to an `Exit Sub` or `Exit Property` statement, and `expression` must not be supplied."},{"content":"In a <ph id=\"ph1\">`Function`</ph>, <ph id=\"ph2\">`Get`</ph>, or <ph id=\"ph3\">`Operator`</ph> procedure, the <ph id=\"ph4\">`Return`</ph> statement must include <ph id=\"ph5\">`expression`</ph>, and <ph id=\"ph6\">`expression`</ph> must evaluate to a data type that is convertible to the return type of the procedure.","pos":[919,1120],"source":"In a `Function`, `Get`, or `Operator` procedure, the `Return` statement must include `expression`, and `expression` must evaluate to a data type that is convertible to the return type of the procedure."},{"content":"In a <ph id=\"ph1\">`Function`</ph> or <ph id=\"ph2\">`Get`</ph> procedure, you also have the alternative of assigning an expression to the procedure name to serve as the return value, and then executing an <ph id=\"ph3\">`Exit Function`</ph> or <ph id=\"ph4\">`Exit Property`</ph> statement.","pos":[1121,1333],"source":" In a `Function` or `Get` procedure, you also have the alternative of assigning an expression to the procedure name to serve as the return value, and then executing an `Exit Function` or `Exit Property` statement."},{"content":"In an <ph id=\"ph1\">`Operator`</ph> procedure, you must use <ph id=\"ph2\">`Return expression`</ph>.","pos":[1334,1395],"source":" In an `Operator` procedure, you must use `Return expression`."},{"pos":[1402,1483],"content":"You can include as many <ph id=\"ph1\">`Return`</ph> statements as appropriate in the same procedure.","source":"You can include as many `Return` statements as appropriate in the same procedure."},{"pos":[1491,1714],"content":"[!NOTE]\n The code in a `Finally` block runs after a `Return` statement in a `Try` or `Catch` block is encountered, but before that `Return` statement executes. A `Return` statement cannot be included in a `Finally` block.","leadings":["","> "],"nodes":[{"content":"The code in a `Finally` block runs after a `Return` statement in a `Try` or `Catch` block is encountered, but before that `Return` statement executes. A `Return` statement cannot be included in a `Finally` block.","pos":[9,221],"nodes":[{"content":"The code in a <ph id=\"ph1\">`Finally`</ph> block runs after a <ph id=\"ph2\">`Return`</ph> statement in a <ph id=\"ph3\">`Try`</ph> or <ph id=\"ph4\">`Catch`</ph> block is encountered, but before that <ph id=\"ph5\">`Return`</ph> statement executes.","pos":[0,150],"source":"The code in a `Finally` block runs after a `Return` statement in a `Try` or `Catch` block is encountered, but before that `Return` statement executes."},{"content":"A <ph id=\"ph1\">`Return`</ph> statement cannot be included in a <ph id=\"ph2\">`Finally`</ph> block.","pos":[151,212],"source":" A `Return` statement cannot be included in a `Finally` block."}]}]},{"pos":[1723,1730],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1734,1881],"content":"The following example uses the <ph id=\"ph1\">`Return`</ph> statement several times to return to the calling code when the procedure does not have to do anything else.","source":"The following example uses the `Return` statement several times to return to the calling code when the procedure does not have to do anything else."},{"pos":[2016,2024],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2028,2123],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[2126,2211],"content":"<bpt id=\"p1\">[</bpt>Sub Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept>","source":"[Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)"},{"pos":[2214,2299],"content":"<bpt id=\"p1\">[</bpt>Get Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/get-statement.md)</ept>","source":"[Get Statement](../../../visual-basic/language-reference/statements/get-statement.md)"},{"pos":[2302,2387],"content":"<bpt id=\"p1\">[</bpt>Set Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/set-statement.md)</ept>","source":"[Set Statement](../../../visual-basic/language-reference/statements/set-statement.md)"},{"pos":[2390,2485],"content":"<bpt id=\"p1\">[</bpt>Operator Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/operator-statement.md)</ept>","source":"[Operator Statement](../../../visual-basic/language-reference/statements/operator-statement.md)"},{"pos":[2488,2583],"content":"<bpt id=\"p1\">[</bpt>Property Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/property-statement.md)</ept>","source":"[Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)"},{"pos":[2586,2673],"content":"<bpt id=\"p1\">[</bpt>Exit Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/exit-statement.md)</ept>","source":"[Exit Statement](../../../visual-basic/language-reference/statements/exit-statement.md)"},{"pos":[2676,2793],"content":"<bpt id=\"p1\">[</bpt>Try...Catch...Finally Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept>","source":"[Try...Catch...Finally Statement](../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)"}]}