<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6fe1813f0d09207c6730fc5dce682647e25eb03</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\deploying\deploy-with-vs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c250cd8ed55c210caf0bcafa9abeaad88e4f930e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">434061b6d8257d7f1878953d7e1c71279b8d40a7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Core app deployment with Visual Studio | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn .NET Core app deployment with Visual Studio</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core, .NET Core deployment</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Deploying .NET Core apps with Visual Studio</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can deploy a .NET Core application either as a <bpt id="p1">*</bpt>framework-dependent deployment<ept id="p1">*</ept>, which includes your application binaries but depends on the presence of .NET Core on the target system, or as a <bpt id="p2">*</bpt>self-contained deployment<ept id="p2">*</ept>, which includes both your application and .NET Core binaries.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For an overview of .NET Core application deployment, see <bpt id="p1">[</bpt>.NET Core Application Deployment<ept id="p1">](index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following sections show how to use Microsoft Visual Studio to create the following kinds of deployments:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Framework-dependent deployment</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Framework-dependent deployment with third-party dependencies</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Self-contained deployment</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Self-contained deployment with third-party dependencies</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For information on using Visual Studio to develop .NET Core applications, see <bpt id="p1">[</bpt>Prerequisites for .NET Core on Windows<ept id="p1">](../windows-prerequisites.md#prerequisites-with-visual-studio-2017)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Framework-dependent deployment</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Deploying a framework-dependent deployment with no third-party dependencies simply involves building, testing, and publishing the app.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A simple example written in C# illustrates the process.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create the project.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph2"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, select <bpt id="p2">**</bpt>.NET Core<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Installed<ept id="p3">**</ept> project types pane, and select the <bpt id="p4">**</bpt>Console App (.NET Core)<ept id="p4">**</ept> template in the center pane.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Enter a project name, such as "FDD", in the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> text box.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Add the application's source code.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept> file in the editor and replace the auto-generated code with the following code.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It prompts the user to enter text and displays the individual words entered by the user.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It uses the regular expression <ph id="ph1">`\w+`</ph> to separate the words in the input text.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>deployment#1<ept id="p2">](../../../samples/snippets/core/deploying/deployment-example.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create a Debug build of your app.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Build<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can also compile and run the Debug build of your application by selecting <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Deploy your app.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>After you've debugged and tested the program, create the files to be deployed with your app.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To publish from Visual Studio, do the following:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Change the solution configuration from <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Release<ept id="p2">**</ept> on the toolbar to build a Release (rather than a Debug) version of your app.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Right-click on the project (not the solution) in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> tab, select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Visual Studio writes the files that comprise your application to the local file system.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> tab now shows a single profile, <bpt id="p2">**</bpt>FolderProfile<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The profile's configuration settings are shown in the <bpt id="p1">**</bpt>Summary<ept id="p1">**</ept> section of the tab.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The resulting files are placed in a directory named <ph id="ph1">`PublishOutput`</ph> that is in a subdirectory of your project's <bpt id="p1">*</bpt>.\bin\release<ept id="p1">*</ept> subdirectory.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Along with your application's files, the publishing process emits a program database (.pdb) file that contains debugging information about your app.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The file is useful primarily for debugging exceptions.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can choose not to package it with your application's files.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You should, however, save it in the event that you want to debug the Release build of your app.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Deploy the complete set of application files in any way you like.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, you can package them in a Zip file, use a simple <ph id="ph1">`copy`</ph> command, or deploy them with any installation package of your choice.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Once installed, users can then execute your application by using the <ph id="ph1">`dotnet`</ph> command and providing the application filename, such as <ph id="ph2">`dotnet fdd.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In addition to the application binaries, your installer should also either bundle the shared framework installer or check for it as a prerequisite as part of the application installation.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Installation of the shared framework requires Administrator/root access since it is machine-wide.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Framework-dependent deployment with third-party dependencies</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Deploying a framework-dependent deployment with one or more third-party dependencies requires that any dependencies be available to your project.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following additional steps are required before you can build your app:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>NuGet Package Manager<ept id="p1">**</ept> to add a reference to a NuGet package to your project; and if the package is not already available on your system, install it.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To open the package manager, select <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>NuGet Package Manager<ept id="p2">**</ept><ph id="ph2"> &gt; </ph><bpt id="p3">**</bpt>Manage NuGet Packages for Solution<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Confirm that <ph id="ph1">`Newtonsoft.Json`</ph> is installed on your system and, if it is not, install it.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Installed<ept id="p1">**</ept> tab lists NuGet packages installed on your system.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Newtonsoft.Json`</ph> is not listed there, select the <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> tab and enter "Newtonsoft.Json" in the search box.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Select <ph id="ph1">`Newtonsoft.Json`</ph> and, in the right pane, select your project before selecting <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Newtonsoft.Json`</ph> is already installed on your system, add it to your project by selecting your project in the right pane of hte <bpt id="p1">**</bpt>Manage Packages for Solution<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Note that a framework-dependent deployment with third-party dependencies is only as portable as its third-party dependencies.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, if a third-party library only supports macOS, the app isn't portable to Windows systems.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This happens if the third-party dependency itself depends on native code.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A good example of this is <bpt id="p1">[</bpt>Kestrel server<ept id="p1">](http://docs.microsoft.com/aspnet/core/fundamentals/servers/kestrel)</ept>, which requires a native dependency on <bpt id="p2">[</bpt>libuv<ept id="p2">](https://github.com/libuv/libuv)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When an FDD is created for an application with this kind of third-party dependency, the published output contains a folder for each <bpt id="p1">[</bpt>Runtime Identifier (RID)<ept id="p1">](../rid-catalog.md#what-are-rids)</ept> that the native dependency supports (and that exists in its NuGet package).</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="simpleSelf"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Self-contained deployment without third-party dependencies</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Deploying a self-contained deployment with no third-party dependencies involves creating the project, modifying the <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> file, building, testing, and publishing the app.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A simple example written in C# illustrates the process.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Create the project.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph2"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Project<ept id="p1">**</ept> dialog, select <bpt id="p2">**</bpt>.NET Core<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Installed<ept id="p3">**</ept> project types pane, and select the <bpt id="p4">**</bpt>Console App (.NET Core)<ept id="p4">**</ept> template in the center pane.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Enter a project name, such as "SCD", in the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> text box, and select the <bpt id="p2">**</bpt>OK<ept id="p2">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Add the application's source code.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>Program.cs<ept id="p1">*</ept> file in your editor, and replace the auto-generated code with the following code.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It prompts the user to enter text and displays the individual words entered by the user.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It uses the regular expression <ph id="ph1">`\w+`</ph> to separate the words in the input text.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>deployment#1<ept id="p2">](../../../samples/snippets/core/deploying/deployment-example.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Define the platforms that your app will target.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Right-click on your project (not the solution) In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, and select <bpt id="p2">**</bpt>Edit SCD.csproj<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">`&lt;RuntimeIdentifiers&gt;`</ph> tag in the <ph id="ph2">`&lt;PropertyGroup&gt;`</ph> section of your <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> file that defines the platforms your app targets, and specify the runtime identifier (RID) of each platform that you target.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Note that you also need to add a semicolon to separate the RIDs.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Runtime IDentifier catalog<ept id="p1">](../rid-catalog.md)</ept> for a list of runtime identifiers.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, the following example indicates that the app runs on 64-bit Windows 10 operating systems and the 64-bit OS X Version 10.11 operating system.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`&lt;RuntimeIdentifiers&gt;`</ph> element can go into any <ph id="ph2">`&lt;PropertyGroup&gt;`</ph> that you have in your <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> file.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A complete sample <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> file appears later in this section.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Create a Debug build of your app.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Build<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can also compile and run the Debug build of your application by selecting <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Publish your app.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>After you've debugged and tested the program, create the files to be deployed with your app for each platform that it targets.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To publish your app from Visual Studio, do the following:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Change the solution configuration from <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Release<ept id="p2">**</ept> on the toolbar to build a Release (rather than a Debug) version of your app.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Right-click on the project (not the solution) in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> tab, select <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Visual Studio writes the files that comprise your application to the local file system.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> tab now shows a single profile, <bpt id="p2">**</bpt>FolderProfile<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The profile's configuration settings are shown in the <bpt id="p1">**</bpt>Summary<ept id="p1">**</ept> section of the tab.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Target Runtime<ept id="p1">**</ept> identifies which runtime has been published, and <bpt id="p2">**</bpt>Target Location<ept id="p2">**</ept> identifies where the files for the self-contained deployment were written.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Visual Studio by default writes all published files to a single directory.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For convenience, it's best to create separate profiles for each target runtime and to place published files in a platform-specific directory.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This involves creating a separate publishing profile for each target platform.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>So now rebuild the application for each platform by doing the following:</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Create new profile<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>Publish<ept id="p2">**</ept> dialog.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Pick a publish target<ept id="p1">**</ept> dialog, change the <bpt id="p2">**</bpt>Choose a folder<ept id="p2">**</ept> location to <bpt id="p3">*</bpt>bin\Release\PublishOutput\win10-x64<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Select the new profile (<bpt id="p1">**</bpt>FolderProfile1<ept id="p1">**</ept>) in the list of profiles, and make sure that the <bpt id="p2">**</bpt>Target Runtime<ept id="p2">**</ept> is <ph id="ph1">`win10-x64`</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If it isn't, select <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Profile Settings<ept id="p1">**</ept> dialog, change the <bpt id="p2">**</bpt>Target Runtime<ept id="p2">**</ept> to <ph id="ph1">`win10-x64`</ph> and select <bpt id="p3">**</bpt>Save<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Otherwise, select <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> to publish your app for 64-bit Windows 10 platforms.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Follow the previous steps again to create a profile for the <ph id="ph1">`osx.10.11-x64`</ph> platform.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Target Location<ept id="p1">**</ept> is <bpt id="p2">*</bpt>bin\Release\PublishOutput\osx.10.11-x64<ept id="p2">*</ept>, and the <bpt id="p3">**</bpt>Target Runtime<ept id="p3">**</ept> is <ph id="ph1">`osx.10.11-x64`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The name that Visual Studio assigns to this profile is <bpt id="p1">**</bpt>FolderProfile2<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Note that each target location contains the complete set of files (both your app files and all .NET Core files) needed to launch your app.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Along with your application's files, the publishing process emits a program database (.pdb) file that contains debugging information about your app.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The file is useful primarily for debugging exceptions.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You can choose not to package it with your application's files.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You should, however, save it in the event that you want to debug the Release build of your app.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Deploy the published files in any way you like.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For example, you can package them in a Zip file, use a simple <ph id="ph1">`copy`</ph> command, or deploy them with any installation package of your choice.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The following is the complete <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> file for this project.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Self-contained deployment with third-party dependencies</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Deploying a self-contained deployment with one or more third-party dependencies involves adding the dependencies.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The following additional steps are required before you can build your app:</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>NuGet Package Manager<ept id="p1">**</ept> to add a reference to a NuGet package to your project; and if the package is not already available on your system, install it.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To open the package manager, select <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>NuGet Package Manager<ept id="p2">**</ept><ph id="ph2"> &gt; </ph><bpt id="p3">**</bpt>Manage NuGet Packages for Solution<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Confirm that <ph id="ph1">`Newtonsoft.Json`</ph> is installed on your system and, if it is not, install it.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Installed<ept id="p1">**</ept> tab lists NuGet packages installed on your system.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Newtonsoft.Json`</ph> is not listed there, select the <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> tab and enter "Newtonsoft.Json" in the search box.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Select <ph id="ph1">`Newtonsoft.Json`</ph> and, in the right pane, select your project before selecting <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Newtonsoft.Json`</ph> is already installed on your system, add it to your project by selecting your project in the right pane of the <bpt id="p1">**</bpt>Manage Packages for Solution<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The following is the complete <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> file for this project:</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>When you deploy your application, any third-party dependencies used in your app are also contained with your application files.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Third-party libraries aren't required on the system on which the app is running.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Note that you can only deploy a self-contained deployment with a third-party library to platforms supported by that library.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This is similar to having third-party dependencies with native dependencies in your framework-dependent deployment, where the native dependencies won't exist on the target platform unless they were previously installed there.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core Application Deployment<ept id="p1">](index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core Runtime IDentifier (RID) catalog<ept id="p1">](../rid-catalog.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>