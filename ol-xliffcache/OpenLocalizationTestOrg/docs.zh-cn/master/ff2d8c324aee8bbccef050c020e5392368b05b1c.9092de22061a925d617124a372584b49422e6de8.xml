{"content":"---\ntitle: \"When to Use an Enumeration (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"enumerations [Visual Basic]\"\nms.assetid: e6e47b5b-3ed9-452d-a481-9c3fed88519a\n---\n# When to Use an Enumeration (Visual Basic)\nEnumerations offer an easy way to work with sets of related constants. An enumeration, or `Enum`, is a symbolic name for a set of values. Enumerations are treated as data types, and you can use them to create sets of constants for use with variables and properties.  \n  \n## When to Use an Enumeration  \n Whenever a procedure accepts a limited set of variables, consider using an enumeration. Enumerations make for clearer and more readable code, particularly when meaningful names are used.  \n  \n The benefits of using enumerations include:  \n  \n-   Reduces errors caused by transposing or mistyping numbers.  \n  \n-   Makes it easy to change values in the future.  \n  \n-   Makes code easier to read, which means it is less likely that errors will creep into it.  \n  \n-   Ensures forward compatibility. With enumerations, your code is less likely to fail if in the future someone changes the values corresponding to the member names.  \n  \n## Naming Enumerations  \n Use a naming convention for enumeration members. When Visual Basic encounters an enumeration member name, an exception may be thrown if other referenced type libraries contain the same name. Use a unique prefix that identifies the values from your application or component.  \n  \n When referring to a member of an enumeration, you must qualify the member name with the enumeration name or else use the `Imports` statement. For more information, see [Enumerations and Name Qualification](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md).  \n  \n## Predefined Enumerations  \n Visual Basic provides a number of predefined enumerations, such as `FirstDayOfWeek` and `MsgBoxResult`, to facilitate your code. For a list of these see [Constants and Enumerations](../../../../visual-basic/language-reference/constants-and-enumerations.md).  \n  \n## See also\n\n- [How to: Declare an Enumeration](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-enumerations.md)\n- [How to: Refer to an Enumeration Member](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md)\n- [Enumerations and Name Qualification](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md)\n- [How to: Iterate Through An Enumeration in Visual Basic](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-iterate-through-an-enumeration.md)\n- [How to: Determine the String Associated with an Enumeration Value](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-determine-the-string-associated-with-an-enumeration-value.md)\n- [Enum Statement](../../../../visual-basic/language-reference/statements/enum-statement.md)\n- [Constants and Enumerations](../../../../visual-basic/language-reference/constants-and-enumerations.md)\n","nodes":[{"pos":[4,179],"embed":true,"restype":"x-metadata","content":"title: \"When to Use an Enumeration (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"enumerations [Visual Basic]\"\nms.assetid: e6e47b5b-3ed9-452d-a481-9c3fed88519a","nodes":[{"content":"When to Use an Enumeration (Visual Basic)","nodes":[{"pos":[0,41],"content":"When to Use an Enumeration (Visual Basic)","nodes":[{"content":"When to Use an Enumeration (Visual Basic)","pos":[0,41]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[186,227],"content":"When to Use an Enumeration (Visual Basic)","linkify":"When to Use an Enumeration (Visual Basic)","nodes":[{"content":"When to Use an Enumeration (Visual Basic)","pos":[0,41]}]},{"content":"Enumerations offer an easy way to work with sets of related constants.","pos":[228,298]},{"content":"An enumeration, or <ph id=\"ph1\">`Enum`</ph>, is a symbolic name for a set of values.","pos":[299,365],"source":" An enumeration, or `Enum`, is a symbolic name for a set of values."},{"content":"Enumerations are treated as data types, and you can use them to create sets of constants for use with variables and properties.","pos":[366,493]},{"pos":[502,528],"content":"When to Use an Enumeration","linkify":"When to Use an Enumeration","nodes":[{"content":"When to Use an Enumeration","pos":[0,26]}]},{"content":"Whenever a procedure accepts a limited set of variables, consider using an enumeration.","pos":[532,619]},{"content":"Enumerations make for clearer and more readable code, particularly when meaningful names are used.","pos":[620,718]},{"content":"The benefits of using enumerations include:","pos":[725,768]},{"content":"Reduces errors caused by transposing or mistyping numbers.","pos":[778,836]},{"content":"Makes it easy to change values in the future.","pos":[846,891]},{"content":"Makes code easier to read, which means it is less likely that errors will creep into it.","pos":[901,989]},{"content":"Ensures forward compatibility.","pos":[999,1029]},{"content":"With enumerations, your code is less likely to fail if in the future someone changes the values corresponding to the member names.","pos":[1030,1160]},{"pos":[1169,1188],"content":"Naming Enumerations","linkify":"Naming Enumerations","nodes":[{"content":"Naming Enumerations","pos":[0,19]}]},{"content":"Use a naming convention for enumeration members.","pos":[1192,1240]},{"content":"When Visual Basic encounters an enumeration member name, an exception may be thrown if other referenced type libraries contain the same name.","pos":[1241,1382]},{"content":"Use a unique prefix that identifies the values from your application or component.","pos":[1383,1465]},{"content":"When referring to a member of an enumeration, you must qualify the member name with the enumeration name or else use the <ph id=\"ph1\">`Imports`</ph> statement.","pos":[1472,1613],"source":"When referring to a member of an enumeration, you must qualify the member name with the enumeration name or else use the `Imports` statement."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Enumerations and Name Qualification<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md)</ept>.","pos":[1614,1795],"source":" For more information, see [Enumerations and Name Qualification](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md)."},{"pos":[1804,1827],"content":"Predefined Enumerations","linkify":"Predefined Enumerations","nodes":[{"content":"Predefined Enumerations","pos":[0,23]}]},{"content":"Visual Basic provides a number of predefined enumerations, such as <ph id=\"ph1\">`FirstDayOfWeek`</ph> and <ph id=\"ph2\">`MsgBoxResult`</ph>, to facilitate your code.","pos":[1831,1959],"source":"Visual Basic provides a number of predefined enumerations, such as `FirstDayOfWeek` and `MsgBoxResult`, to facilitate your code."},{"content":"For a list of these see <bpt id=\"p1\">[</bpt>Constants and Enumerations<ept id=\"p1\">](../../../../visual-basic/language-reference/constants-and-enumerations.md)</ept>.","pos":[1960,2088],"source":" For a list of these see [Constants and Enumerations](../../../../visual-basic/language-reference/constants-and-enumerations.md)."},{"pos":[2097,2105],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2109,2250],"content":"<bpt id=\"p1\">[</bpt>How to: Declare an Enumeration<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-enumerations.md)</ept>","source":"[How to: Declare an Enumeration](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-enumerations.md)"},{"pos":[2253,2412],"content":"<bpt id=\"p1\">[</bpt>How to: Refer to an Enumeration Member<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md)</ept>","source":"[How to: Refer to an Enumeration Member](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md)"},{"pos":[2415,2569],"content":"<bpt id=\"p1\">[</bpt>Enumerations and Name Qualification<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md)</ept>","source":"[Enumerations and Name Qualification](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md)"},{"pos":[2572,2747],"content":"<bpt id=\"p1\">[</bpt>How to: Iterate Through An Enumeration in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-iterate-through-an-enumeration.md)</ept>","source":"[How to: Iterate Through An Enumeration in Visual Basic](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-iterate-through-an-enumeration.md)"},{"pos":[2750,2963],"content":"<bpt id=\"p1\">[</bpt>How to: Determine the String Associated with an Enumeration Value<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-determine-the-string-associated-with-an-enumeration-value.md)</ept>","source":"[How to: Determine the String Associated with an Enumeration Value](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-determine-the-string-associated-with-an-enumeration-value.md)"},{"pos":[2966,3056],"content":"<bpt id=\"p1\">[</bpt>Enum Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/enum-statement.md)</ept>","source":"[Enum Statement](../../../../visual-basic/language-reference/statements/enum-statement.md)"},{"pos":[3059,3162],"content":"<bpt id=\"p1\">[</bpt>Constants and Enumerations<ept id=\"p1\">](../../../../visual-basic/language-reference/constants-and-enumerations.md)</ept>","source":"[Constants and Enumerations](../../../../visual-basic/language-reference/constants-and-enumerations.md)"}]}