{"content":"---\ntitle: \"Disable the RealTimeStylus for WPF Applications | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: e0525309-5ede-4782-837d-dbf6e5554859\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Disable the RealTimeStylus for WPF Applications\nWindows Presentation Foundation (WPF) has built in support for processing Windows 7 touch input.The support comes through the tablet platform’s real-time stylus input as <xref:System.Windows.UIElement.OnStylusDown%2A>, <xref:System.Windows.UIElement.OnStylusUp%2A>, and <xref:System.Windows.UIElement.OnStylusMove%2A> events. Windows 7 also provides multi-touch input as Win32 WM_TOUCH window messages. These two APIs are mutually exclusive on the same HWND. Enabling touch input via the tablet platform (the default for WPF applications) disables WM_TOUCH messages. As a result, to use WM_TOUCH to receive touch messages from a WPF window, you must disable the built-in stylus support in WPF. This is applicable in a scenario such as a WPF window hosting a component that uses WM_TOUCH.  \n  \n To disable WPF listening to stylus input, remove any tablet support added by the WPF window.  \n  \n## Example  \n The following sample code shows how to remove the default tablet platform support by using reflection.  \n  \n```  \npublic static void DisableWPFTabletSupport()  \n{  \n    // Get a collection of the tablet devices for this window.    \n    TabletDeviceCollection devices = System.Windows.Input.Tablet.TabletDevices;  \n  \n    if (devices.Count > 0)  \n    {     \n        // Get the Type of InputManager.  \n        Type inputManagerType = typeof(System.Windows.Input.InputManager);  \n  \n        // Call the StylusLogic method on the InputManager.Current instance.  \n        object stylusLogic = inputManagerType.InvokeMember(\"StylusLogic\",  \n                    BindingFlags.GetProperty | BindingFlags.Instance | BindingFlags.NonPublic,  \n                    null, InputManager.Current, null);  \n  \n        if (stylusLogic != null)  \n        {  \n            //  Get the type of the stylusLogic returned from the call to StylusLogic.  \n            Type stylusLogicType = stylusLogic.GetType();  \n  \n            // Loop until there are no more devices to remove.  \n            while (devices.Count > 0)  \n            {  \n                // Remove the first tablet device in the devices collection.  \n                stylusLogicType.InvokeMember(\"OnTabletRemoved\",  \n                        BindingFlags.InvokeMethod | BindingFlags.Instance | BindingFlags.NonPublic,  \n                        null, stylusLogic, new object[] { (uint)0 });  \n            }                  \n        }  \n  \n    }  \n}  \n```  \n  \n## See Also  \n [Intercepting Input from the Stylus](../../../../docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md)","nodes":[{"pos":[12,76],"content":"Disable the RealTimeStylus for WPF Applications | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Disable the RealTimeStylus for WPF Applications | Microsoft Docs","pos":[0,64]}]},{"pos":[383,430],"content":"Disable the RealTimeStylus for WPF Applications","linkify":"Disable the RealTimeStylus for WPF Applications","nodes":[{"content":"Disable the RealTimeStylus for WPF Applications","pos":[0,47]}]},{"content":"Windows Presentation Foundation (WPF) has built in support for processing Windows 7 touch input.The support comes through the tablet platform’s real-time stylus input as <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.OnStylusDown%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.OnStylusUp%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.UIElement.OnStylusMove%2A&gt;</ph> events.","pos":[431,756],"source":"Windows Presentation Foundation (WPF) has built in support for processing Windows 7 touch input.The support comes through the tablet platform’s real-time stylus input as <xref:System.Windows.UIElement.OnStylusDown%2A>, <xref:System.Windows.UIElement.OnStylusUp%2A>, and <xref:System.Windows.UIElement.OnStylusMove%2A> events."},{"content":"Windows 7 also provides multi-touch input as Win32 WM_TOUCH window messages.","pos":[757,833]},{"content":"These two APIs are mutually exclusive on the same HWND.","pos":[834,889]},{"content":"Enabling touch input via the tablet platform (the default for WPF applications) disables WM_TOUCH messages.","pos":[890,997]},{"content":"As a result, to use WM_TOUCH to receive touch messages from a WPF window, you must disable the built-in stylus support in WPF.","pos":[998,1124]},{"content":"This is applicable in a scenario such as a WPF window hosting a component that uses WM_TOUCH.","pos":[1125,1218]},{"content":"To disable WPF listening to stylus input, remove any tablet support added by the WPF window.","pos":[1225,1317]},{"pos":[1326,1333],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample code shows how to remove the default tablet platform support by using reflection.","pos":[1337,1439]},{"pos":[2839,2847],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2851,2966],"content":"<bpt id=\"p1\">[</bpt>Intercepting Input from the Stylus<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md)</ept>","source":"[Intercepting Input from the Stylus](../../../../docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md)"}]}