{"content":"---\ntitle: \"HTTP | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"protocols, HTTP\"\n  - \"sending data, HTTP\"\n  - \"HttpWebResponse class, sending and receiving data\"\n  - \"HTTP\"\n  - \"receiving data, HTTP\"\n  - \"application protocols, HTTP\"\n  - \"Internet, HTTP\"\n  - \"network resources, HTTP\"\n  - \"HTTP, about HTTP\"\n  - \"HttpWebRequest class, sending and receiving data\"\nms.assetid: 985fe5d8-eb71-4024-b361-41fbdc1618d8\ncaps.latest.revision: 10\nauthor: \"mcleblanc\"\nms.author: \"markl\"\nmanager: \"markl\"\n---\n# HTTP\nThe .NET Framework provides comprehensive support for the HTTP protocol, which makes up the majority of all Internet traffic, with the<xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> classes. These classes, derived from <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse>, are returned by default whenever the static method <xref:System.Net.WebRequest.Create%2A?displayProperty=fullName> encounters a URI beginning with \"http\" or \"https\". In most cases, the **WebRequest** and **WebResponse** classes provide all that is necessary to make the request, but if you need access to the HTTP-specific features exposed as properties, you can typecast these classes to **HttpWebRequest** or **HttpWebResponse**.  \n  \n **HttpWebRequest** and **HttpWebResponse** encapsulate a standard HTTP request-and-response transaction and provide access to common HTTP headers. These classes also support most HTTP 1.1 features, including pipelining, sending and receiving data in chunks, authentication, preauthentication, encryption, proxy support, server certificate validation, and connection management. Custom headers and headers not provided through properties can be stored in and accessed through the **Headers** property.  \n  \n **HttpWebRequest** is the default class used by **WebRequest** and does not need to be registered before you can pass a URI to the **WebRequest.Create** method.  \n  \n You can make your application follow HTTP redirects automatically by setting the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property to **true** (the default). The application will redirect requests, and the <xref:System.Net.HttpWebResponse.ResponseUri%2A> property of **HttpWebResponse** will contain the actual Web resource that responded to the request. If you set **AllowAutoRedirect** to **false**, your application must be able to handle redirects as HTTP protocol errors.  \n  \n Applications receive HTTP protocol errors by catching a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> set to <xref:System.Net.WebExceptionStatus>. The <xref:System.Net.WebException.Response%2A> property contains the **WebResponse** sent by the server and indicates the actual HTTP error encountered.  \n  \n## See Also  \n [Accessing the Internet Through a Proxy](../../../docs/framework/network-programming/accessing-the-internet-through-a-proxy.md)   \n [Using Application Protocols](../../../docs/framework/network-programming/using-application-protocols.md)   \n [How to: Access HTTP-Specific Properties](../../../docs/framework/network-programming/how-to-access-http-specific-properties.md)","nodes":[{"pos":[4,676],"nodes":[{"content":"HTTP | Microsoft Docs","nodes":[{"pos":[0,21],"content":"HTTP | Microsoft Docs","nodes":[{"content":"HTTP | Microsoft Docs","pos":[0,21]}]}],"pos":[6,30],"yaml":true}],"content":"title: \"HTTP | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"protocols, HTTP\"\n  - \"sending data, HTTP\"\n  - \"HttpWebResponse class, sending and receiving data\"\n  - \"HTTP\"\n  - \"receiving data, HTTP\"\n  - \"application protocols, HTTP\"\n  - \"Internet, HTTP\"\n  - \"network resources, HTTP\"\n  - \"HTTP, about HTTP\"\n  - \"HttpWebRequest class, sending and receiving data\"\nms.assetid: 985fe5d8-eb71-4024-b361-41fbdc1618d8\ncaps.latest.revision: 10\nauthor: \"mcleblanc\"\nms.author: \"markl\"\nmanager: \"markl\"","yamlblock":true},{"pos":[683,687],"content":"HTTP","linkify":"HTTP","nodes":[{"content":"HTTP","pos":[0,4]}]},{"content":"The .NET Framework provides comprehensive support for the HTTP protocol, which makes up the majority of all Internet traffic, with the<ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.HttpWebResponse&gt;</ph> classes.","pos":[688,901],"source":"The .NET Framework provides comprehensive support for the HTTP protocol, which makes up the majority of all Internet traffic, with the<xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> classes."},{"content":"These classes, derived from <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.WebResponse&gt;</ph>, are returned by default whenever the static method <ph id=\"ph3\">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=fullName&gt;</ph> encounters a URI beginning with \"http\" or \"https\".","pos":[902,1159],"source":" These classes, derived from <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse>, are returned by default whenever the static method <xref:System.Net.WebRequest.Create%2A?displayProperty=fullName> encounters a URI beginning with \"http\" or \"https\"."},{"content":"In most cases, the <bpt id=\"p1\">**</bpt>WebRequest<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>WebResponse<ept id=\"p2\">**</ept> classes provide all that is necessary to make the request, but if you need access to the HTTP-specific features exposed as properties, you can typecast these classes to <bpt id=\"p3\">**</bpt>HttpWebRequest<ept id=\"p3\">**</ept> or <bpt id=\"p4\">**</bpt>HttpWebResponse<ept id=\"p4\">**</ept>.","pos":[1160,1425],"source":" In most cases, the **WebRequest** and **WebResponse** classes provide all that is necessary to make the request, but if you need access to the HTTP-specific features exposed as properties, you can typecast these classes to **HttpWebRequest** or **HttpWebResponse**."},{"content":"<bpt id=\"p1\">**</bpt>HttpWebRequest<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>HttpWebResponse<ept id=\"p2\">**</ept> encapsulate a standard HTTP request-and-response transaction and provide access to common HTTP headers.","pos":[1432,1578],"source":"**HttpWebRequest** and **HttpWebResponse** encapsulate a standard HTTP request-and-response transaction and provide access to common HTTP headers."},{"content":"These classes also support most HTTP 1.1 features, including pipelining, sending and receiving data in chunks, authentication, preauthentication, encryption, proxy support, server certificate validation, and connection management.","pos":[1579,1809]},{"content":"Custom headers and headers not provided through properties can be stored in and accessed through the <bpt id=\"p1\">**</bpt>Headers<ept id=\"p1\">**</ept> property.","pos":[1810,1932],"source":" Custom headers and headers not provided through properties can be stored in and accessed through the **Headers** property."},{"pos":[1939,2099],"content":"<bpt id=\"p1\">**</bpt>HttpWebRequest<ept id=\"p1\">**</ept> is the default class used by <bpt id=\"p2\">**</bpt>WebRequest<ept id=\"p2\">**</ept> and does not need to be registered before you can pass a URI to the <bpt id=\"p3\">**</bpt>WebRequest.Create<ept id=\"p3\">**</ept> method.","source":"**HttpWebRequest** is the default class used by **WebRequest** and does not need to be registered before you can pass a URI to the **WebRequest.Create** method."},{"content":"You can make your application follow HTTP redirects automatically by setting the <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> property to <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> (the default).","pos":[2106,2276],"source":"You can make your application follow HTTP redirects automatically by setting the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property to **true** (the default)."},{"content":"The application will redirect requests, and the <ph id=\"ph1\">&lt;xref:System.Net.HttpWebResponse.ResponseUri%2A&gt;</ph> property of <bpt id=\"p1\">**</bpt>HttpWebResponse<ept id=\"p1\">**</ept> will contain the actual Web resource that responded to the request.","pos":[2277,2473],"source":" The application will redirect requests, and the <xref:System.Net.HttpWebResponse.ResponseUri%2A> property of **HttpWebResponse** will contain the actual Web resource that responded to the request."},{"content":"If you set <bpt id=\"p1\">**</bpt>AllowAutoRedirect<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>, your application must be able to handle redirects as HTTP protocol errors.","pos":[2474,2595],"source":" If you set **AllowAutoRedirect** to **false**, your application must be able to handle redirects as HTTP protocol errors."},{"content":"Applications receive HTTP protocol errors by catching a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> with the <ph id=\"ph2\">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> set to <ph id=\"ph3\">&lt;xref:System.Net.WebExceptionStatus&gt;</ph>.","pos":[2602,2783],"source":"Applications receive HTTP protocol errors by catching a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> set to <xref:System.Net.WebExceptionStatus>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> property contains the <bpt id=\"p1\">**</bpt>WebResponse<ept id=\"p1\">**</ept> sent by the server and indicates the actual HTTP error encountered.","pos":[2784,2936],"source":" The <xref:System.Net.WebException.Response%2A> property contains the **WebResponse** sent by the server and indicates the actual HTTP error encountered."},{"pos":[2945,2953],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Accessing the Internet Through a Proxy<ept id=\"p1\">](../../../docs/framework/network-programming/accessing-the-internet-through-a-proxy.md)</ept><ph id=\"ph1\"> </ph>","pos":[2957,3085],"source":"[Accessing the Internet Through a Proxy](../../../docs/framework/network-programming/accessing-the-internet-through-a-proxy.md) "},{"content":"<bpt id=\"p1\">[</bpt>Using Application Protocols<ept id=\"p1\">](../../../docs/framework/network-programming/using-application-protocols.md)</ept><ph id=\"ph1\"> </ph>","pos":[3089,3195],"source":"[Using Application Protocols](../../../docs/framework/network-programming/using-application-protocols.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Access HTTP-Specific Properties<ept id=\"p1\">](../../../docs/framework/network-programming/how-to-access-http-specific-properties.md)</ept>","pos":[3199,3327],"source":"[How to: Access HTTP-Specific Properties](../../../docs/framework/network-programming/how-to-access-http-specific-properties.md)"}]}