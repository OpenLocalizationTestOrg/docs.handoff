<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="wcf-services-and-aspnet.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1e272d60423136912567200626aff0e01de348b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\wcf-services-and-aspnet.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a91dcde0438b3c93fc5fe8a19fd8c7f7f67506a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68876659b6895c0189a5e60650ca30e07f1fa4c8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>WCF Services and ASP.NET | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WCF Services and ASP.NET</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses hosting <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> services side-by-side with ASP.NET and hosting them in ASP.NET compatibility mode.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Hosting WCF Side-by-Side with ASP.NET</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services hosted in Internet Information Services (IIS) can be located with .ASPX pages and ASMX Web services inside of a single, common Application Domain.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>ASP.NET provides common infrastructure services such as AppDomain management and dynamic compilation for both <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> and the ASP.NET HTTP runtime.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The default configuration for <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> is side-by-side with ASP.NET.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>WCF Services and ASP .NET: sharing state<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wcf/feature-details/media/hostingwcfwithaspnet.gif "</bpt>HostingWCFwithASPNET<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The ASP.NET HTTP runtime handles ASP.NET requests but does not participate in the processing of requests destined for <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services, even though these services are hosted in the same AppDomain as is the ASP.NET content.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Instead, the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> Service Model intercepts messages addressed to <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services and routes them through the <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> transport/channel stack.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The results of the side-by-side model are as follows:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>ASP.NET and <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services can share AppDomain state.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Because the two frameworks can coexist in the same AppDomain, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> can also share AppDomain state with ASP.NET (including static variables, events, and so on).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services behave consistently, independent of hosting environment and transport.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The ASP.NET HTTP runtime is intentionally coupled to the IIS/ASP.NET hosting environment and HTTP communication.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Conversely, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> is designed to behave consistently across hosting environments (<ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> behaves consistently both inside and outside of IIS) and across transport (a service hosted in IIS 7.0 and later has consistent behavior across all endpoints it exposes, even if some of those endpoints use protocols other than HTTP).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Within an AppDomain, features implemented by the HTTP runtime apply to ASP.NET content but not to <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Many HTTP-specific features of the ASP.NET application platform do not apply to <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> Services hosted inside of an AppDomain that contains ASP.NET content.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Examples of these features include the following:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>HttpContext: <ph id="ph1">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> is always <ph id="ph2">`null`</ph> when accessed from within a <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.OperationContext.Current.RequestContext&gt;--&gt;</ph> <ph id="ph2">`RequestContext`</ph> instead.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>File-based authorization: The <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security model does not allow for the access control list (ACL) applied to the .svc file of the service when deciding if a service request is authorized.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Configuration-based URL Authorization: Similarly, the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security model does not adhere to any URL-based authorization rules specified in System.Web’s <ph id="ph2">\&lt;</ph>authorization&gt; configuration element.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These settings are ignored for <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> requests if a service resides in a URL space secured by ASP.NET’s URL authorization rules.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>HttpModule extensibility: The <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> hosting infrastructure intercepts <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> requests when the <ph id="ph3">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event is raised and does not return processing to the ASP.NET HTTP pipeline.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Modules that are coded to intercept requests at later stages of the pipeline do not intercept <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> requests.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>ASP.NET impersonation: By default, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> requests always runs as the IIS process identity, even if ASP.NET is set to enable impersonation using System.Web’s <ph id="ph2">\&lt;</ph>identity impersonate="true" /&gt; configuration option.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These restrictions apply only to <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services hosted in IIS application.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The behavior of ASP.NET content is not affected by the presence of <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> applications that require functionality traditionally provided by the HTTP pipeline should consider using the <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> equivalents, which are host and transport independent:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Web.HttpContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceAuthorizationBehavior&gt;</ph> instead of ASP.NET’s File/URL Authorization.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt;</ph> or custom layered channels instead of HTTP modules.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Impersonation for each operation using <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> instead of System.Web impersonation.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Alternatively, you can consider running your services in <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>’s ASP.NET compatibility mode.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Hosting WCF Services in ASP.NET Compatibility Mode</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Although the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> model is designed to behave consistently across hosting environments and transports, there are often scenarios where an application does not require this degree of flexibility.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>’s ASP.NET compatibility mode is suitable for scenarios that do not require the ability to host outside of IIS or to communicate over protocols other than HTTP, but that use all of features of the ASP.NET Web application platform.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Unlike the default side-by-side configuration, where the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> hosting infrastructure intercepts <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> messages and routes them out of the HTTP pipeline, <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services running in ASP.NET Compatibility Mode participate fully in the ASP.NET HTTP request lifecycle.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In compatibility mode, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services use the HTTP pipeline through an <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> implementation, similar to the way requests for ASPX pages and ASMX Web services are handled.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>As a result, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> behaves identically to ASMX with respect to the following ASP.NET features:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph>: <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services running in ASP.NET Compatibility Mode can access <ph id="ph3">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> and its associated state.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>File-based authorization: <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services running in ASP.NET compatibility mode can be secure by attaching file system access control lists (ACLs) to the service’s .svc file.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Configurable URL authorization: ASP.NET’s URL authorization rules are enforced for <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> requests when the <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service is running in ASP.NET Compatibility Mode.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Web.HttpModuleCollection&gt;</ph> extensibility: Because <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services running in ASP.NET Compatibility Mode participate fully in the ASP.NET HTTP request lifecycle, any HTTP module configured in the HTTP pipeline is able to operate on <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> requests both before and after service invocation.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ASP.NET Impersonation: <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services run using the current identity of the ASP.NET impersonated thread, which may be different than the IIS process identity if ASP.NET impersonation has been enabled for the application.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If ASP.NET impersonation and <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> impersonation are both enabled for a particular service operation, the service implementation ultimately runs using the identity obtained from <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>’s ASP.NET compatibility mode is enabled at the application level through the following configuration (located in the application’s Web.config file):</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This value defaults to "<ph id="ph1">`true`</ph>" if not specified.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Setting this value to "<ph id="ph1">`false`</ph>" indicates that all <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services running in the application will not run in ASP.NET Compatibility Mode.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Because ASP.NET Compatibility Mode implies request processing semantics that are fundamentally different from the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> default, individual service implementations have the ability to control whether they run inside of an application for which ASP.NET Compatibility Mode has been enabled.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Services can use the <ph id="ph1">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute&gt;</ph> to indicate whether they support ASP.NET Compatibility Mode.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default value for this attribute is <ph id="ph1">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following table illustrates how the application-wide compatibility mode setting interacts with the individual service’s stated level of support:</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Application-wide Compatibility Mode setting</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>[AspNetCompatibilityRequirementsMode]</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Setting</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Observed Result</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>aspNetCompatibilityEnabled = "<ph id="ph1">`true`</ph>"</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Service activates successfully.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>aspNetCompatibilityEnabled = "<ph id="ph1">`true`</ph>"</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Service activates successfully.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>aspNetCompatibilityEnabled = "<ph id="ph1">`true`</ph>"</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An activation error occurs when the service receives a message.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>aspNetCompatibilityEnabled = "<ph id="ph1">`false`</ph>"</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An activation error occurs when the service receives a message.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>aspNetCompatibilityEnabled = "<ph id="ph1">`false`</ph>"</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Service activates successfully.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>aspNetCompatibilityEnabled = "<ph id="ph1">`false`</ph>"</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Service activates successfully.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>IIS 7.0 and WAS allows <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services to communicate over protocols other than HTTP.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services running in applications that have enabled ASP.NET compatibility mode are not permitted to expose non-HTTP endpoints.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Such a configuration generates an activation exception when the service receives its first message.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information about enabling ASP.NET compatibility mode for <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services, see <ph id="ph2">&lt;xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode&gt;</ph> and the <bpt id="p1">[</bpt>ASP.NET Compatibility<ept id="p1">](../../../../docs/framework/wcf/samples/aspnet-compatibility.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Server App Fabric Hosting Features<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201276)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>