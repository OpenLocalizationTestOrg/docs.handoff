{"content":"---\ntitle: \"Windows Forms Overview | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"smart clients\"\n  - \"Windows Forms, about Windows Forms\"\nms.assetid: 3a2b6284-c8d6-4e1c-8c69-0bed38f38cd4\ncaps.latest.revision: 34\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Windows Forms Overview\nThe following overview discusses the advantages of smart client applications, the main features of Windows Forms programming, and how you can use Windows Forms to build smart clients that meet the needs of today's enterprises and end users.  \n  \n## Windows Forms and Smart Client Applications  \n With Windows Forms you develop smart clients. *Smart clients* are graphically rich applications that are easy to deploy and update, can work when they are connected to or disconnected from the Internet, and can access resources on the local computer in a more secure manner than traditional Windows-based applications.  \n  \n### Building Rich, Interactive User Interfaces  \n Windows Forms is a smart client technology for the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)], a set of managed libraries that simplify common application tasks such as reading and writing to the file system. When you use a development environment like [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)], you can create Windows Forms smart-client applications that display information, request input from users, and communicate with remote computers over a network.  \n  \n In Windows Forms, a *form* is a visual surface on which you display information to the user. You ordinarily build Windows Forms applications by adding controls to forms and developing responses to user actions, such as mouse clicks or key presses. A *control* is a discrete user interface (UI) element that displays data or accepts data input.  \n  \n When a user does something to your form or one of its controls, the action generates an event. Your application reacts to these events by using code, and processes the events when they occur. For more information, see [Creating Event Handlers in Windows Forms](../../../docs/framework/winforms/creating-event-handlers-in-windows-forms.md).  \n  \n Windows Forms contains a variety of controls that you can add to forms: controls that display text boxes, buttons, drop-down boxes, radio buttons, and even Web pages. For a list of all the controls you can use on a form, see [Controls to Use on Windows Forms](../../../docs/framework/winforms/controls/controls-to-use-on-windows-forms.md). If an existing control does not meet your needs, Windows Forms also supports creating your own custom controls using the <xref:System.Windows.Forms.UserControl> class.  \n  \n Windows Forms has rich UI controls that emulate features in high-end applications like Microsoft Office. When you use the <xref:System.Windows.Forms.ToolStrip> and <xref:System.Windows.Forms.MenuStrip> control, you can create toolbars and menus that contain text and images, display submenus, and host other controls such as text boxes and combo boxes.  \n  \n With the [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] drag-and-drop Windows Forms Designer, you can easily create Windows Forms applications. Just select the controls with your cursor and add them where you want on the form. The designer provides tools such as gridlines and snap lines to take the hassle out of aligning controls. And whether you use [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] or compile at the command line, you can use the <xref:System.Windows.Forms.FlowLayoutPanel>, <xref:System.Windows.Forms.TableLayoutPanel> and <xref:System.Windows.Forms.SplitContainer> controls to create advanced form layouts in less time.  \n  \n Finally, if you must create your own custom UI elements, the <xref:System.Drawing> namespace contains a large selection of classes to render lines, circles, and other shapes directly on a form.  \n  \n> [!NOTE]\n>  Windows Forms controls are not designed to be marshaled across application domains. For this reason, Microsoft does not support passing a Windows Forms control across an <xref:System.AppDomain> boundary, even though the <xref:System.Windows.Controls.Control> base type of <xref:System.MarshalByRefObject> would seem to indicate that this is possible. Windows Forms applications that have multiple application domains are supported as long as no Windows Forms controls are passed across application domain boundaries.  \n  \n#### Help Creating Forms and Controls  \n For step-by-step information about how to use these features, see the following Help topics.  \n  \n|Description|Help topic|  \n|-----------------|----------------|  \n|Using controls on forms|[How to: Add Controls to Windows Forms](../../../docs/framework/winforms/controls/how-to-add-controls-to-windows-forms.md)|  \n|Using the <xref:System.Windows.Forms.ToolStrip> Control|[How to: Create a Basic ToolStrip with Standard Items Using the Designer](../../../docs/framework/winforms/controls/create-a-basic-wf-toolstrip-with-standard-items-using-the-designer.md)|  \n|Creating graphics with <xref:System.Drawing>|[Getting Started with Graphics Programming](../../../docs/framework/winforms/advanced/getting-started-with-graphics-programming.md)|  \n|Creating custom controls|[How to: Inherit from the UserControl Class](../../../docs/framework/winforms/controls/how-to-inherit-from-the-usercontrol-class.md)|  \n  \n### Displaying and Manipulating Data  \n Many applications must display data from a database, XML file, XML Web service, or other data source. Windows Forms provides a flexible control that is named the <xref:System.Windows.Forms.DataGridView> control for displaying such tabular data in a traditional row and column format, so that every piece of data occupies its own cell. When you use <xref:System.Windows.Forms.DataGridView>, you can customize the appearance of individual cells, lock arbitrary rows and columns in place, and display complex controls inside cells, among other features.  \n  \n Connecting to data sources over a network is a simple task with Windows Forms smart clients. The <xref:System.Windows.Forms.BindingSource> component, new with Windows Forms in [!INCLUDE[vsprvslong](../../../includes/vsprvslong-md.md)] and the [!INCLUDE[dnprdnlong](../../../includes/dnprdnlong-md.md)], represents a connection to a data source, and exposes methods for binding data to controls, navigating to the previous and next records, editing records, and saving changes back to the original source. The <xref:System.Windows.Forms.BindingNavigator> control provides a simple interface over the <xref:System.Windows.Forms.BindingSource> component for users to navigate between records.  \n  \n You can create data-bound controls easily by using the Data Sources window. The window displays data sources such as databases, Web services, and objects in your project. You can create data-bound controls by dragging items from this window onto forms in your project. You can also data-bind existing controls to data by dragging objects from the Data Sources window onto existing controls.  \n  \n Another type of data binding you can manage in Windows Forms is *settings*. Most smart client applications must retain some information about their run-time state, such as the last-known size of forms, and retain user preference data, such as default locations for saved files. The Application Settings feature addresses these requirements by providing an easy way to store both types of settings on the client computer. After you define these settings by using either [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] or a code editor, the settings are persisted as XML and automatically read back into memory at run time.  \n  \n#### Help Displaying and Manipulating Data  \n For step-by-step information about how to use these features, see the following Help topics.  \n  \n|Description|Help topic|  \n|-----------------|----------------|  \n|Using the <xref:System.Windows.Forms.BindingSource> component|[How to: Bind Windows Forms Controls with the BindingSource Component Using the Designer](../../../docs/framework/winforms/controls/bind-wf-controls-with-the-bindingsource.md)|  \n|Working with [!INCLUDE[vstecado](../../../includes/vstecado-md.md)] data sources|[How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](../../../docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md)|  \n|Using the Data Sources window|[Walkthrough: Displaying Data on a Windows Form](http://msdn.microsoft.com/library/f6e08c2c-c792-43de-adf3-3e52c0100225)|  \n|Using application settings|[How to: Create Application Settings](../../../docs/framework/winforms/advanced/how-to-create-application-settings.md)|  \n  \n### Deploying Applications to Client Computers  \n After you have written your application, you must send the application to your users so that they can install and run it on their own client computers. When you use the [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] technology, you can deploy your applications from within [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] by using just a few clicks, and provide your users with a URL pointing to your application on the Web. [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] manages all the elements and dependencies in your application, and ensures that the application is correctly installed on the client computer.  \n  \n [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] applications can be configured to run only when the user is connected to the network, or to run both online and offline. When you specify that an application should support offline operation, [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] adds a link to your application in the user's **Start** menu. The user can then open the application without using the URL.  \n  \n When you update your application, you publish a new deployment manifest and a new copy of your application to your Web server. [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] will detect that there is an update available and upgrade the user's installation; no custom programming is required to update old assemblies.  \n  \n#### Help Deploying ClickOnce Applications  \n For a full introduction to [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)], see [ClickOnce Security and Deployment](/visualstudio/deployment/clickonce-security-and-deployment). For step-by-step information about how to use these features, see the following Help topics,  \n  \n|Description|Help topic|  \n|-----------------|----------------|  \n|Deploying an application by using [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]|[How to: Publish a ClickOnce Application using the Publish Wizard](/visualstudio/deployment/how-to-publish-a-clickonce-application-using-the-publish-wizard)<br /><br /> [Walkthrough: Manually Deploying a ClickOnce Application](/visualstudio/deployment/walkthrough-manually-deploying-a-clickonce-application)|  \n|Updating a [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] deployment|[How to: Manage Updates for a ClickOnce Application](/visualstudio/deployment/how-to-manage-updates-for-a-clickonce-application)|  \n|Managing security with [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]|[How to: Enable ClickOnce Security Settings](/visualstudio/deployment/how-to-enable-clickonce-security-settings)|  \n  \n### Other Controls and Features  \n There are many other features in Windows Forms that make implementing common tasks fast and easy, such as support for creating dialog boxes, printing, adding Help and documentation, and localizing your application to multiple languages. Additionally, Windows Forms relies on the robust security system of the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]. With this system, you can release more secure applications to your customers.  \n  \n#### Help Implementing Other Controls and Features  \n For step-by-step information about how to use these features, see the following Help topics.  \n  \n|Description|Help topic|  \n|-----------------|----------------|  \n|Printing the contents of a form|[How to: Print Graphics in Windows Forms](../../../docs/framework/winforms/advanced/how-to-print-graphics-in-windows-forms.md)<br /><br /> [How to: Print a Multi-Page Text File in Windows Forms](../../../docs/framework/winforms/advanced/how-to-print-a-multi-page-text-file-in-windows-forms.md)|  \n|Learn more about Windows Forms security|[Security in Windows Forms Overview](../../../docs/framework/winforms/security-in-windows-forms-overview.md)|  \n  \n## See Also  \n [Getting Started with Windows Forms](../../../docs/framework/winforms/getting-started-with-windows-forms.md)   \n [Creating a New Windows Form](../../../docs/framework/winforms/creating-a-new-windows-form.md)   \n [ToolStrip Control Overview](../../../docs/framework/winforms/controls/toolstrip-control-overview-windows-forms.md)   \n [DataGridView Control Overview](../../../docs/framework/winforms/controls/datagridview-control-overview-windows-forms.md)   \n [BindingSource Component Overview](../../../docs/framework/winforms/controls/bindingsource-component-overview.md)   \n [Application Settings Overview](../../../docs/framework/winforms/advanced/application-settings-overview.md)   \n [ClickOnce Security and Deployment](/visualstudio/deployment/clickonce-security-and-deployment)","nodes":[{"pos":[4,465],"embed":true,"restype":"x-metadata","content":"title: \"Windows Forms Overview | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"smart clients\"\n  - \"Windows Forms, about Windows Forms\"\nms.assetid: 3a2b6284-c8d6-4e1c-8c69-0bed38f38cd4\ncaps.latest.revision: 34\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"Windows Forms Overview | Microsoft Docs","nodes":[{"pos":[0,39],"content":"Windows Forms Overview | Microsoft Docs","nodes":[{"content":"Windows Forms Overview | Microsoft Docs","pos":[0,39]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[472,494],"content":"Windows Forms Overview","linkify":"Windows Forms Overview","nodes":[{"content":"Windows Forms Overview","pos":[0,22]}]},{"content":"The following overview discusses the advantages of smart client applications, the main features of Windows Forms programming, and how you can use Windows Forms to build smart clients that meet the needs of today's enterprises and end users.","pos":[495,735]},{"pos":[744,787],"content":"Windows Forms and Smart Client Applications","linkify":"Windows Forms and Smart Client Applications","nodes":[{"content":"Windows Forms and Smart Client Applications","pos":[0,43]}]},{"content":"With Windows Forms you develop smart clients.","pos":[791,836]},{"content":"<bpt id=\"p1\">*</bpt>Smart clients<ept id=\"p1\">*</ept> are graphically rich applications that are easy to deploy and update, can work when they are connected to or disconnected from the Internet, and can access resources on the local computer in a more secure manner than traditional Windows-based applications.","pos":[837,1109],"source":"*Smart clients* are graphically rich applications that are easy to deploy and update, can work when they are connected to or disconnected from the Internet, and can access resources on the local computer in a more secure manner than traditional Windows-based applications."},{"pos":[1119,1161],"content":"Building Rich, Interactive User Interfaces","linkify":"Building Rich, Interactive User Interfaces","nodes":[{"content":"Building Rich, Interactive User Interfaces","pos":[0,42]}]},{"content":"Windows Forms is a smart client technology for the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>, a set of managed libraries that simplify common application tasks such as reading and writing to the file system.","pos":[1165,1391],"source":"Windows Forms is a smart client technology for the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)], a set of managed libraries that simplify common application tasks such as reading and writing to the file system."},{"content":"When you use a development environment like <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph>, you can create Windows Forms smart-client applications that display information, request input from users, and communicate with remote computers over a network.","pos":[1392,1648],"source":" When you use a development environment like [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)], you can create Windows Forms smart-client applications that display information, request input from users, and communicate with remote computers over a network."},{"content":"In Windows Forms, a <bpt id=\"p1\">*</bpt>form<ept id=\"p1\">*</ept> is a visual surface on which you display information to the user.","pos":[1655,1747],"source":"In Windows Forms, a *form* is a visual surface on which you display information to the user."},{"content":"You ordinarily build Windows Forms applications by adding controls to forms and developing responses to user actions, such as mouse clicks or key presses.","pos":[1748,1902]},{"content":"A <bpt id=\"p1\">*</bpt>control<ept id=\"p1\">*</ept> is a discrete user interface (UI) element that displays data or accepts data input.","pos":[1903,1998],"source":" A *control* is a discrete user interface (UI) element that displays data or accepts data input."},{"content":"When a user does something to your form or one of its controls, the action generates an event.","pos":[2005,2099]},{"content":"Your application reacts to these events by using code, and processes the events when they occur.","pos":[2100,2196]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Creating Event Handlers in Windows Forms<ept id=\"p1\">](../../../docs/framework/winforms/creating-event-handlers-in-windows-forms.md)</ept>.","pos":[2197,2344],"source":" For more information, see [Creating Event Handlers in Windows Forms](../../../docs/framework/winforms/creating-event-handlers-in-windows-forms.md)."},{"content":"Windows Forms contains a variety of controls that you can add to forms: controls that display text boxes, buttons, drop-down boxes, radio buttons, and even Web pages.","pos":[2351,2517]},{"content":"For a list of all the controls you can use on a form, see <bpt id=\"p1\">[</bpt>Controls to Use on Windows Forms<ept id=\"p1\">](../../../docs/framework/winforms/controls/controls-to-use-on-windows-forms.md)</ept>.","pos":[2518,2690],"source":" For a list of all the controls you can use on a form, see [Controls to Use on Windows Forms](../../../docs/framework/winforms/controls/controls-to-use-on-windows-forms.md)."},{"content":"If an existing control does not meet your needs, Windows Forms also supports creating your own custom controls using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> class.","pos":[2691,2858],"source":" If an existing control does not meet your needs, Windows Forms also supports creating your own custom controls using the <xref:System.Windows.Forms.UserControl> class."},{"content":"Windows Forms has rich UI controls that emulate features in high-end applications like Microsoft Office.","pos":[2865,2969]},{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> control, you can create toolbars and menus that contain text and images, display submenus, and host other controls such as text boxes and combo boxes.","pos":[2970,3217],"source":" When you use the <xref:System.Windows.Forms.ToolStrip> and <xref:System.Windows.Forms.MenuStrip> control, you can create toolbars and menus that contain text and images, display submenus, and host other controls such as text boxes and combo boxes."},{"content":"With the <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph> drag-and-drop Windows Forms Designer, you can easily create Windows Forms applications.","pos":[3224,3371],"source":"With the [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] drag-and-drop Windows Forms Designer, you can easily create Windows Forms applications."},{"content":"Just select the controls with your cursor and add them where you want on the form.","pos":[3372,3454]},{"content":"The designer provides tools such as gridlines and snap lines to take the hassle out of aligning controls.","pos":[3455,3560]},{"content":"And whether you use <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph> or compile at the command line, you can use the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TableLayoutPanel&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.SplitContainer&gt;</ph> controls to create advanced form layouts in less time.","pos":[3561,3871],"source":" And whether you use [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] or compile at the command line, you can use the <xref:System.Windows.Forms.FlowLayoutPanel>, <xref:System.Windows.Forms.TableLayoutPanel> and <xref:System.Windows.Forms.SplitContainer> controls to create advanced form layouts in less time."},{"content":"Finally, if you must create your own custom UI elements, the <ph id=\"ph1\">&lt;xref:System.Drawing&gt;</ph> namespace contains a large selection of classes to render lines, circles, and other shapes directly on a form.","pos":[3878,4071],"source":"Finally, if you must create your own custom UI elements, the <xref:System.Drawing> namespace contains a large selection of classes to render lines, circles, and other shapes directly on a form."},{"pos":[4079,4606],"content":"[!NOTE]\n Windows Forms controls are not designed to be marshaled across application domains. For this reason, Microsoft does not support passing a Windows Forms control across an <xref:System.AppDomain> boundary, even though the <xref:System.Windows.Controls.Control> base type of <xref:System.MarshalByRefObject> would seem to indicate that this is possible. Windows Forms applications that have multiple application domains are supported as long as no Windows Forms controls are passed across application domain boundaries.","leadings":["","> "],"nodes":[{"content":"Windows Forms controls are not designed to be marshaled across application domains. For this reason, Microsoft does not support passing a Windows Forms control across an <xref:System.AppDomain> boundary, even though the <xref:System.Windows.Controls.Control> base type of <xref:System.MarshalByRefObject> would seem to indicate that this is possible. Windows Forms applications that have multiple application domains are supported as long as no Windows Forms controls are passed across application domain boundaries.","pos":[9,525],"nodes":[{"content":"Windows Forms controls are not designed to be marshaled across application domains.","pos":[0,83]},{"content":"For this reason, Microsoft does not support passing a Windows Forms control across an <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> boundary, even though the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Control&gt;</ph> base type of <ph id=\"ph3\">&lt;xref:System.MarshalByRefObject&gt;</ph> would seem to indicate that this is possible.","pos":[84,350],"source":" For this reason, Microsoft does not support passing a Windows Forms control across an <xref:System.AppDomain> boundary, even though the <xref:System.Windows.Controls.Control> base type of <xref:System.MarshalByRefObject> would seem to indicate that this is possible."},{"content":"Windows Forms applications that have multiple application domains are supported as long as no Windows Forms controls are passed across application domain boundaries.","pos":[351,516]}]}]},{"pos":[4617,4649],"content":"Help Creating Forms and Controls","linkify":"Help Creating Forms and Controls","nodes":[{"content":"Help Creating Forms and Controls","pos":[0,32]}]},{"content":"For step-by-step information about how to use these features, see the following Help topics.","pos":[4653,4745]},{"content":"Description","pos":[4752,4763]},{"content":"Help topic","pos":[4764,4774]},{"content":"Using controls on forms","pos":[4818,4841]},{"pos":[4842,4964],"content":"<bpt id=\"p1\">[</bpt>How to: Add Controls to Windows Forms<ept id=\"p1\">](../../../docs/framework/winforms/controls/how-to-add-controls-to-windows-forms.md)</ept>","source":"[How to: Add Controls to Windows Forms](../../../docs/framework/winforms/controls/how-to-add-controls-to-windows-forms.md)"},{"content":"Using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> Control","pos":[4969,5024],"source":"Using the <xref:System.Windows.Forms.ToolStrip> Control"},{"pos":[5025,5211],"content":"<bpt id=\"p1\">[</bpt>How to: Create a Basic ToolStrip with Standard Items Using the Designer<ept id=\"p1\">](../../../docs/framework/winforms/controls/create-a-basic-wf-toolstrip-with-standard-items-using-the-designer.md)</ept>","source":"[How to: Create a Basic ToolStrip with Standard Items Using the Designer](../../../docs/framework/winforms/controls/create-a-basic-wf-toolstrip-with-standard-items-using-the-designer.md)"},{"content":"Creating graphics with <ph id=\"ph1\">&lt;xref:System.Drawing&gt;</ph>","pos":[5216,5260],"source":"Creating graphics with <xref:System.Drawing>"},{"pos":[5261,5392],"content":"<bpt id=\"p1\">[</bpt>Getting Started with Graphics Programming<ept id=\"p1\">](../../../docs/framework/winforms/advanced/getting-started-with-graphics-programming.md)</ept>","source":"[Getting Started with Graphics Programming](../../../docs/framework/winforms/advanced/getting-started-with-graphics-programming.md)"},{"content":"Creating custom controls","pos":[5397,5421]},{"pos":[5422,5554],"content":"<bpt id=\"p1\">[</bpt>How to: Inherit from the UserControl Class<ept id=\"p1\">](../../../docs/framework/winforms/controls/how-to-inherit-from-the-usercontrol-class.md)</ept>","source":"[How to: Inherit from the UserControl Class](../../../docs/framework/winforms/controls/how-to-inherit-from-the-usercontrol-class.md)"},{"pos":[5565,5597],"content":"Displaying and Manipulating Data","linkify":"Displaying and Manipulating Data","nodes":[{"content":"Displaying and Manipulating Data","pos":[0,32]}]},{"content":"Many applications must display data from a database, XML file, XML Web service, or other data source.","pos":[5601,5702]},{"content":"Windows Forms provides a flexible control that is named the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control for displaying such tabular data in a traditional row and column format, so that every piece of data occupies its own cell.","pos":[5703,5935],"source":" Windows Forms provides a flexible control that is named the <xref:System.Windows.Forms.DataGridView> control for displaying such tabular data in a traditional row and column format, so that every piece of data occupies its own cell."},{"content":"When you use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, you can customize the appearance of individual cells, lock arbitrary rows and columns in place, and display complex controls inside cells, among other features.","pos":[5936,6151],"source":" When you use <xref:System.Windows.Forms.DataGridView>, you can customize the appearance of individual cells, lock arbitrary rows and columns in place, and display complex controls inside cells, among other features."},{"content":"Connecting to data sources over a network is a simple task with Windows Forms smart clients.","pos":[6158,6250]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component, new with Windows Forms in <ph id=\"ph2\">[!INCLUDE[vsprvslong](../../../includes/vsprvslong-md.md)]</ph> and the <ph id=\"ph3\">[!INCLUDE[dnprdnlong](../../../includes/dnprdnlong-md.md)]</ph>, represents a connection to a data source, and exposes methods for binding data to controls, navigating to the previous and next records, editing records, and saving changes back to the original source.","pos":[6251,6662],"source":" The <xref:System.Windows.Forms.BindingSource> component, new with Windows Forms in [!INCLUDE[vsprvslong](../../../includes/vsprvslong-md.md)] and the [!INCLUDE[dnprdnlong](../../../includes/dnprdnlong-md.md)], represents a connection to a data source, and exposes methods for binding data to controls, navigating to the previous and next records, editing records, and saving changes back to the original source."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph> control provides a simple interface over the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component for users to navigate between records.","pos":[6663,6847],"source":" The <xref:System.Windows.Forms.BindingNavigator> control provides a simple interface over the <xref:System.Windows.Forms.BindingSource> component for users to navigate between records."},{"content":"You can create data-bound controls easily by using the Data Sources window.","pos":[6854,6929]},{"content":"The window displays data sources such as databases, Web services, and objects in your project.","pos":[6930,7024]},{"content":"You can create data-bound controls by dragging items from this window onto forms in your project.","pos":[7025,7122]},{"content":"You can also data-bind existing controls to data by dragging objects from the Data Sources window onto existing controls.","pos":[7123,7244]},{"content":"Another type of data binding you can manage in Windows Forms is <bpt id=\"p1\">*</bpt>settings<ept id=\"p1\">*</ept>.","pos":[7251,7326],"source":"Another type of data binding you can manage in Windows Forms is *settings*."},{"content":"Most smart client applications must retain some information about their run-time state, such as the last-known size of forms, and retain user preference data, such as default locations for saved files.","pos":[7327,7528]},{"content":"The Application Settings feature addresses these requirements by providing an easy way to store both types of settings on the client computer.","pos":[7529,7671]},{"content":"After you define these settings by using either <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph> or a code editor, the settings are persisted as XML and automatically read back into memory at run time.","pos":[7672,7875],"source":" After you define these settings by using either [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] or a code editor, the settings are persisted as XML and automatically read back into memory at run time."},{"pos":[7886,7923],"content":"Help Displaying and Manipulating Data","linkify":"Help Displaying and Manipulating Data","nodes":[{"content":"Help Displaying and Manipulating Data","pos":[0,37]}]},{"content":"For step-by-step information about how to use these features, see the following Help topics.","pos":[7927,8019]},{"content":"Description","pos":[8026,8037]},{"content":"Help topic","pos":[8038,8048]},{"content":"Using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component","pos":[8092,8153],"source":"Using the <xref:System.Windows.Forms.BindingSource> component"},{"pos":[8154,8329],"content":"<bpt id=\"p1\">[</bpt>How to: Bind Windows Forms Controls with the BindingSource Component Using the Designer<ept id=\"p1\">](../../../docs/framework/winforms/controls/bind-wf-controls-with-the-bindingsource.md)</ept>","source":"[How to: Bind Windows Forms Controls with the BindingSource Component Using the Designer](../../../docs/framework/winforms/controls/bind-wf-controls-with-the-bindingsource.md)"},{"pos":[8334,8414],"content":"Working with <ph id=\"ph1\">[!INCLUDE[vstecado](../../../includes/vstecado-md.md)]</ph> data sources","source":"Working with [!INCLUDE[vstecado](../../../includes/vstecado-md.md)] data sources"},{"pos":[8415,8607],"content":"<bpt id=\"p1\">[</bpt>How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component<ept id=\"p1\">](../../../docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md)</ept>","source":"[How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](../../../docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md)"},{"content":"Using the Data Sources window","pos":[8612,8641]},{"pos":[8642,8762],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Displaying Data on a Windows Form<ept id=\"p1\">](http://msdn.microsoft.com/library/f6e08c2c-c792-43de-adf3-3e52c0100225)</ept>","source":"[Walkthrough: Displaying Data on a Windows Form](http://msdn.microsoft.com/library/f6e08c2c-c792-43de-adf3-3e52c0100225)"},{"content":"Using application settings","pos":[8767,8793]},{"pos":[8794,8912],"content":"<bpt id=\"p1\">[</bpt>How to: Create Application Settings<ept id=\"p1\">](../../../docs/framework/winforms/advanced/how-to-create-application-settings.md)</ept>","source":"[How to: Create Application Settings](../../../docs/framework/winforms/advanced/how-to-create-application-settings.md)"},{"pos":[8923,8965],"content":"Deploying Applications to Client Computers","linkify":"Deploying Applications to Client Computers","nodes":[{"content":"Deploying Applications to Client Computers","pos":[0,42]}]},{"content":"After you have written your application, you must send the application to your users so that they can install and run it on their own client computers.","pos":[8969,9120]},{"content":"When you use the <ph id=\"ph1\">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph> technology, you can deploy your applications from within <ph id=\"ph2\">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph> by using just a few clicks, and provide your users with a URL pointing to your application on the Web.","pos":[9121,9409],"source":" When you use the [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] technology, you can deploy your applications from within [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] by using just a few clicks, and provide your users with a URL pointing to your application on the Web."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph> manages all the elements and dependencies in your application, and ensures that the application is correctly installed on the client computer.","pos":[9410,9613],"source":"[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] manages all the elements and dependencies in your application, and ensures that the application is correctly installed on the client computer."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph> applications can be configured to run only when the user is connected to the network, or to run both online and offline.","pos":[9620,9801],"source":"[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] applications can be configured to run only when the user is connected to the network, or to run both online and offline."},{"content":"When you specify that an application should support offline operation, <ph id=\"ph1\">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph> adds a link to your application in the user's <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> menu.","pos":[9802,9995],"source":" When you specify that an application should support offline operation, [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] adds a link to your application in the user's **Start** menu."},{"content":"The user can then open the application without using the URL.","pos":[9996,10057]},{"content":"When you update your application, you publish a new deployment manifest and a new copy of your application to your Web server.","pos":[10064,10190]},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph> will detect that there is an update available and upgrade the user's installation; no custom programming is required to update old assemblies.","pos":[10191,10394],"source":"[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] will detect that there is an update available and upgrade the user's installation; no custom programming is required to update old assemblies."},{"pos":[10405,10442],"content":"Help Deploying ClickOnce Applications","linkify":"Help Deploying ClickOnce Applications","nodes":[{"content":"Help Deploying ClickOnce Applications","pos":[0,37]}]},{"content":"For a full introduction to <ph id=\"ph1\">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>ClickOnce Security and Deployment<ept id=\"p1\">](/visualstudio/deployment/clickonce-security-and-deployment)</ept>.","pos":[10446,10635],"source":"For a full introduction to [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)], see [ClickOnce Security and Deployment](/visualstudio/deployment/clickonce-security-and-deployment)."},{"content":"For step-by-step information about how to use these features, see the following Help topics,","pos":[10636,10728]},{"content":"Description","pos":[10735,10746]},{"content":"Help topic","pos":[10747,10757]},{"pos":[10801,10895],"content":"Deploying an application by using <ph id=\"ph1\">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph>","source":"Deploying an application by using [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]"},{"content":"<bpt id=\"p1\">[</bpt>How to: Publish a ClickOnce Application using the Publish Wizard<ept id=\"p1\">](/visualstudio/deployment/how-to-publish-a-clickonce-application-using-the-publish-wizard)</ept>","pos":[10896,11052],"source":"[How to: Publish a ClickOnce Application using the Publish Wizard](/visualstudio/deployment/how-to-publish-a-clickonce-application-using-the-publish-wizard)"},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Manually Deploying a ClickOnce Application<ept id=\"p1\">](/visualstudio/deployment/walkthrough-manually-deploying-a-clickonce-application)</ept>","pos":[11065,11203],"source":"[Walkthrough: Manually Deploying a ClickOnce Application](/visualstudio/deployment/walkthrough-manually-deploying-a-clickonce-application)"},{"pos":[11208,11290],"content":"Updating a <ph id=\"ph1\">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph> deployment","source":"Updating a [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)] deployment"},{"pos":[11291,11419],"content":"<bpt id=\"p1\">[</bpt>How to: Manage Updates for a ClickOnce Application<ept id=\"p1\">](/visualstudio/deployment/how-to-manage-updates-for-a-clickonce-application)</ept>","source":"[How to: Manage Updates for a ClickOnce Application](/visualstudio/deployment/how-to-manage-updates-for-a-clickonce-application)"},{"pos":[11424,11507],"content":"Managing security with <ph id=\"ph1\">[!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]</ph>","source":"Managing security with [!INCLUDE[ndptecclick](../../../includes/ndptecclick-md.md)]"},{"pos":[11508,11620],"content":"<bpt id=\"p1\">[</bpt>How to: Enable ClickOnce Security Settings<ept id=\"p1\">](/visualstudio/deployment/how-to-enable-clickonce-security-settings)</ept>","source":"[How to: Enable ClickOnce Security Settings](/visualstudio/deployment/how-to-enable-clickonce-security-settings)"},{"pos":[11631,11658],"content":"Other Controls and Features","linkify":"Other Controls and Features","nodes":[{"content":"Other Controls and Features","pos":[0,27]}]},{"content":"There are many other features in Windows Forms that make implementing common tasks fast and easy, such as support for creating dialog boxes, printing, adding Help and documentation, and localizing your application to multiple languages.","pos":[11662,11898]},{"content":"Additionally, Windows Forms relies on the robust security system of the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>.","pos":[11899,12032],"source":" Additionally, Windows Forms relies on the robust security system of the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]."},{"content":"With this system, you can release more secure applications to your customers.","pos":[12033,12110]},{"pos":[12121,12166],"content":"Help Implementing Other Controls and Features","linkify":"Help Implementing Other Controls and Features","nodes":[{"content":"Help Implementing Other Controls and Features","pos":[0,45]}]},{"content":"For step-by-step information about how to use these features, see the following Help topics.","pos":[12170,12262]},{"content":"Description","pos":[12269,12280]},{"content":"Help topic","pos":[12281,12291]},{"content":"Printing the contents of a form","pos":[12335,12366]},{"content":"<bpt id=\"p1\">[</bpt>How to: Print Graphics in Windows Forms<ept id=\"p1\">](../../../docs/framework/winforms/advanced/how-to-print-graphics-in-windows-forms.md)</ept>","pos":[12367,12493],"source":"[How to: Print Graphics in Windows Forms](../../../docs/framework/winforms/advanced/how-to-print-graphics-in-windows-forms.md)"},{"content":"<bpt id=\"p1\">[</bpt>How to: Print a Multi-Page Text File in Windows Forms<ept id=\"p1\">](../../../docs/framework/winforms/advanced/how-to-print-a-multi-page-text-file-in-windows-forms.md)</ept>","pos":[12506,12660],"source":"[How to: Print a Multi-Page Text File in Windows Forms](../../../docs/framework/winforms/advanced/how-to-print-a-multi-page-text-file-in-windows-forms.md)"},{"content":"Learn more about Windows Forms security","pos":[12665,12704]},{"pos":[12705,12813],"content":"<bpt id=\"p1\">[</bpt>Security in Windows Forms Overview<ept id=\"p1\">](../../../docs/framework/winforms/security-in-windows-forms-overview.md)</ept>","source":"[Security in Windows Forms Overview](../../../docs/framework/winforms/security-in-windows-forms-overview.md)"},{"pos":[12823,12831],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Getting Started with Windows Forms<ept id=\"p1\">](../../../docs/framework/winforms/getting-started-with-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[12835,12944],"source":"[Getting Started with Windows Forms](../../../docs/framework/winforms/getting-started-with-windows-forms.md) "},{"content":"<bpt id=\"p1\">[</bpt>Creating a New Windows Form<ept id=\"p1\">](../../../docs/framework/winforms/creating-a-new-windows-form.md)</ept><ph id=\"ph1\"> </ph>","pos":[12948,13043],"source":"[Creating a New Windows Form](../../../docs/framework/winforms/creating-a-new-windows-form.md) "},{"content":"<bpt id=\"p1\">[</bpt>ToolStrip Control Overview<ept id=\"p1\">](../../../docs/framework/winforms/controls/toolstrip-control-overview-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[13047,13163],"source":"[ToolStrip Control Overview](../../../docs/framework/winforms/controls/toolstrip-control-overview-windows-forms.md) "},{"content":"<bpt id=\"p1\">[</bpt>DataGridView Control Overview<ept id=\"p1\">](../../../docs/framework/winforms/controls/datagridview-control-overview-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[13167,13289],"source":"[DataGridView Control Overview](../../../docs/framework/winforms/controls/datagridview-control-overview-windows-forms.md) "},{"content":"<bpt id=\"p1\">[</bpt>BindingSource Component Overview<ept id=\"p1\">](../../../docs/framework/winforms/controls/bindingsource-component-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[13293,13407],"source":"[BindingSource Component Overview](../../../docs/framework/winforms/controls/bindingsource-component-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Application Settings Overview<ept id=\"p1\">](../../../docs/framework/winforms/advanced/application-settings-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[13411,13519],"source":"[Application Settings Overview](../../../docs/framework/winforms/advanced/application-settings-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>ClickOnce Security and Deployment<ept id=\"p1\">](/visualstudio/deployment/clickonce-security-and-deployment)</ept>","pos":[13523,13618],"source":"[ClickOnce Security and Deployment](/visualstudio/deployment/clickonce-security-and-deployment)"}]}