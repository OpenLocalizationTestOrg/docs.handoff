<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-event-handlers-at-run-time-for-windows-forms.md" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c1dca420b9e63fe8a2cb93b2e7918d9dc35e84d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\how-to-create-event-handlers-at-run-time-for-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b1041986634f0637c8370fffdd9586ea5939949a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da904eabf348b4fd6fefed8518691de6a064e965</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create Event Handlers at Run Time for Windows Forms</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create Event Handlers at Run Time for Windows Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In addition to creating events using the Windows Forms Designer, you can also create an event handler at run time.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This action allows you to connect event handlers based on conditions in code at run time as opposed to having them connected when the program initially starts.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To create an event handler at run time</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Open the form in the Code Editor that you want to add an event handler to.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Add a method to your form with the method signature for the event that you want to handle.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, if you were handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, you would create a method such as the following:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add code to the event handler as appropriate to your application.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Determine which form or control you want to create an event handler for.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In a method within your form's class, add code that specifies the event handler to handle the event.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, the following code specifies the event handler <ph id="ph1">`button1_Click`</ph> handles the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> control:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.EventHandlerList.AddHandler%2A&gt;</ph> method demonstrated in the Visual Basic code above establishes a click event handler for the button.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating Event Handlers in Windows Forms<ept id="p1">](creating-event-handlers-in-windows-forms.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Event Handlers Overview<ept id="p1">](event-handlers-overview-windows-forms.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Troubleshooting Inherited Event Handlers in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/events/troubleshooting-inherited-event-handlers.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>