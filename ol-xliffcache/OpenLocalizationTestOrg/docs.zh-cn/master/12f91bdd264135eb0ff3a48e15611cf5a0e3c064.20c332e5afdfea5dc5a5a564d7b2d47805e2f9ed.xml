{"content":"---\ntitle: \"ICorProfilerFunctionControl::SetCodegenFlags Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerFunctionControl.SetCodegenFlags\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerFunctionControl::SetCodegenFlags\"\nhelpviewer_keywords: \n  - \"ICorProfilerFunctionControl::SetCodegenFlags method [.NET Framework profiling]\"\n  - \"SetCodegenFlags method, ICorProfilerFunctionControl interface [.NET Framework profiling]\"\nms.assetid: a2d5daa5-b990-4ae5-bf2a-c0862fe58bd7\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ICorProfilerFunctionControl::SetCodegenFlags Method\nSets one or more flags from the [COR_PRF_CODEGEN_FLAGS](../../../../docs/framework/unmanaged-api/profiling/cor-prf-codegen-flags-enumeration.md) enumeration to control code generation for a just-in-time (JIT) recompiled function.  \n  \n## Syntax  \n  \n```  \nHRESULT SetCodegenFlags(  \n    [in] DWORD flags);  \n```  \n  \n## Parameters  \n `flags`  \n [in] One or more flags from the [COR_PRF_CODEGEN_FLAGS](../../../../docs/framework/unmanaged-api/profiling/cor-prf-codegen-flags-enumeration.md) enumeration.  \n  \n## Remarks  \n The profiler obtains an instance of this interface through the [ICorProfilerCallback4::GetReJITParameters](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback4-getrejitparameters-method.md) callback. `SetCodegenFlags` allows the profiler to control the code generation for the recompiled function. As with all other JIT recompilation parameters, the code generation flags apply to all instances of the function.  \n  \n The JIT compiler considers these compilation flags, along with other flags specified by other sources, when compiling a function.  The other sources include the debugger, global flags set by the profiler on startup by using the [ICorProfilerInfo::SetEventMask](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md) method (with the values `COR_PRF_DISABLE_INLINING` and `COR_PRF_DISABLE_OPTIMIZATIONS`), and the profiler’s [ICorProfilerCallback::JITInlining](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitinlining-method.md) callback.  The JIT compiler gives precedence to a source that requests the least amount of optimizing.  For example, if the profiler specifies `COR_PRF_DISABLE_INLINING` on startup, but does not specify `COR_PRF_CODEGEN_DISABLE_INLINING` in the [ICorProfilerFunctionControl::SetCodegenFlags](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setcodegenflags-method.md) callback, inlining is still disabled.  Similarly, if the profiler does not specify `COR_PRF_CODEGEN_DISABLE_INLINING` in `SetCodegenFlags`, but then disables inlining by using the [ICorProfilerCallback::JITInlining](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitinlining-method.md) callback, inlining is disabled.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]  \n  \n## See also\n\n- [ICorProfilerFunctionControl Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-interface.md)\n","nodes":[{"pos":[4,581],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerFunctionControl::SetCodegenFlags Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorProfilerFunctionControl.SetCodegenFlags\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerFunctionControl::SetCodegenFlags\"\nhelpviewer_keywords: \n  - \"ICorProfilerFunctionControl::SetCodegenFlags method [.NET Framework profiling]\"\n  - \"SetCodegenFlags method, ICorProfilerFunctionControl interface [.NET Framework profiling]\"\nms.assetid: a2d5daa5-b990-4ae5-bf2a-c0862fe58bd7\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ICorProfilerFunctionControl::SetCodegenFlags Method","nodes":[{"pos":[0,51],"content":"ICorProfilerFunctionControl::SetCodegenFlags Method","nodes":[{"content":"ICorProfilerFunctionControl::SetCodegenFlags Method","pos":[0,51]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[588,639],"content":"ICorProfilerFunctionControl::SetCodegenFlags Method","linkify":"ICorProfilerFunctionControl::SetCodegenFlags Method","nodes":[{"content":"ICorProfilerFunctionControl::SetCodegenFlags Method","pos":[0,51]}]},{"pos":[640,869],"content":"Sets one or more flags from the <bpt id=\"p1\">[</bpt>COR_PRF_CODEGEN_FLAGS<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-codegen-flags-enumeration.md)</ept> enumeration to control code generation for a just-in-time (JIT) recompiled function.","source":"Sets one or more flags from the [COR_PRF_CODEGEN_FLAGS](../../../../docs/framework/unmanaged-api/profiling/cor-prf-codegen-flags-enumeration.md) enumeration to control code generation for a just-in-time (JIT) recompiled function."},{"pos":[878,884],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[960,970],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] One or more flags from the <bpt id=\"p1\">[</bpt>COR_PRF_CODEGEN_FLAGS<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-codegen-flags-enumeration.md)</ept> enumeration.","pos":[985,1142],"source":"[in] One or more flags from the [COR_PRF_CODEGEN_FLAGS](../../../../docs/framework/unmanaged-api/profiling/cor-prf-codegen-flags-enumeration.md) enumeration."},{"pos":[1151,1158],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The profiler obtains an instance of this interface through the <bpt id=\"p1\">[</bpt>ICorProfilerCallback4::GetReJITParameters<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback4-getrejitparameters-method.md)</ept> callback.","pos":[1162,1381],"source":"The profiler obtains an instance of this interface through the [ICorProfilerCallback4::GetReJITParameters](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback4-getrejitparameters-method.md) callback."},{"content":"<ph id=\"ph1\">`SetCodegenFlags`</ph> allows the profiler to control the code generation for the recompiled function.","pos":[1382,1479],"source":"`SetCodegenFlags` allows the profiler to control the code generation for the recompiled function."},{"content":"As with all other JIT recompilation parameters, the code generation flags apply to all instances of the function.","pos":[1480,1593]},{"content":"The JIT compiler considers these compilation flags, along with other flags specified by other sources, when compiling a function.","pos":[1600,1729]},{"content":"The other sources include the debugger, global flags set by the profiler on startup by using the <bpt id=\"p1\">[</bpt>ICorProfilerInfo::SetEventMask<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md)</ept> method (with the values <ph id=\"ph1\">`COR_PRF_DISABLE_INLINING`</ph> and <ph id=\"ph2\">`COR_PRF_DISABLE_OPTIMIZATIONS`</ph>), and the profiler’s <bpt id=\"p2\">[</bpt>ICorProfilerCallback::JITInlining<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitinlining-method.md)</ept> callback.","pos":[1731,2201],"source":"  The other sources include the debugger, global flags set by the profiler on startup by using the [ICorProfilerInfo::SetEventMask](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-seteventmask-method.md) method (with the values `COR_PRF_DISABLE_INLINING` and `COR_PRF_DISABLE_OPTIMIZATIONS`), and the profiler’s [ICorProfilerCallback::JITInlining](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitinlining-method.md) callback."},{"content":"The JIT compiler gives precedence to a source that requests the least amount of optimizing.","pos":[2203,2294]},{"content":"For example, if the profiler specifies <ph id=\"ph1\">`COR_PRF_DISABLE_INLINING`</ph> on startup, but does not specify <ph id=\"ph2\">`COR_PRF_CODEGEN_DISABLE_INLINING`</ph> in the <bpt id=\"p1\">[</bpt>ICorProfilerFunctionControl::SetCodegenFlags<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setcodegenflags-method.md)</ept> callback, inlining is still disabled.","pos":[2296,2627],"source":"  For example, if the profiler specifies `COR_PRF_DISABLE_INLINING` on startup, but does not specify `COR_PRF_CODEGEN_DISABLE_INLINING` in the [ICorProfilerFunctionControl::SetCodegenFlags](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-setcodegenflags-method.md) callback, inlining is still disabled."},{"content":"Similarly, if the profiler does not specify <ph id=\"ph1\">`COR_PRF_CODEGEN_DISABLE_INLINING`</ph> in <ph id=\"ph2\">`SetCodegenFlags`</ph>, but then disables inlining by using the <bpt id=\"p1\">[</bpt>ICorProfilerCallback::JITInlining<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitinlining-method.md)</ept> callback, inlining is disabled.","pos":[2629,2932],"source":"  Similarly, if the profiler does not specify `COR_PRF_CODEGEN_DISABLE_INLINING` in `SetCodegenFlags`, but then disables inlining by using the [ICorProfilerCallback::JITInlining](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-jitinlining-method.md) callback, inlining is disabled."},{"pos":[2941,2953],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2957,3061],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3068,3102],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[3109,3134],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3141,3249],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]"},{"pos":[3258,3266],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3270,3402],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerFunctionControl Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-interface.md)</ept>","source":"[ICorProfilerFunctionControl Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilerfunctioncontrol-interface.md)"}]}