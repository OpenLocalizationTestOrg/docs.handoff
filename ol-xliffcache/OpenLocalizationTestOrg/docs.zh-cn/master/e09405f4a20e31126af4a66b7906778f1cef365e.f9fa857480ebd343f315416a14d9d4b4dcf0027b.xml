{"content":"---\ntitle: \"Menu Overview | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"Menu control\"\n  - \"controls, Menu\"\nms.assetid: 67df6de5-db96-4c71-b752-af90729a6537\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Menu Overview\nThe <xref:System.Windows.Controls.Menu> class enables you to organize elements associated with commands and event handlers in a hierarchical order. Each <xref:System.Windows.Controls.Menu> element contains a collection of <xref:System.Windows.Controls.MenuItem> elements.  \n  \n  \n<a name=\"menu_control\"></a>   \n## Menu Control  \n The <xref:System.Windows.Controls.Menu> control presents a list of items that specify commands or options for an application. Typically, clicking a <xref:System.Windows.Controls.MenuItem> opens a submenu or causes an application to carry out a command.  \n  \n<a name=\"creating_menus\"></a>   \n## Creating Menus  \n The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>. The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.  \n  \n [!code-xml[MenuItemCommandsAndEvents#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  \n  \n [!code-csharp[MenuItemCommandsAndEvents#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]\n [!code-vb[MenuItemCommandsAndEvents#2](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  \n  \n<a name=\"menus_with_shortcutkeys\"></a>   \n## MenuItems with Keyboard Shortcuts  \n Keyboard shortcuts are character combinations that can be entered with the keyboard to invoke <xref:System.Windows.Controls.Menu> commands. For example, the shortcut for **Copy** is CTRL+C. There are two properties to use with keyboard shortcuts and menu items â€”<xref:System.Windows.Controls.MenuItem.InputGestureText%2A> or <xref:System.Windows.Controls.MenuItem.Command%2A>.  \n  \n<a name=\"menus_inputgesturetext\"></a>   \n### InputGestureText  \n The following example shows how to use the <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> property to assign keyboard shortcut text to <xref:System.Windows.Controls.MenuItem> controls. This only places the keyboard shortcut in the menu item.  It does not associate the command with the <xref:System.Windows.Controls.MenuItem>. The application must handle the user's input to carry out the action.  \n  \n [!code-xml[MenuEvent#6](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#6)]  \n  \n<a name=\"menus_commands\"></a>   \n### Command  \n The following example shows how to use the <xref:System.Windows.Controls.MenuItem.Command%2A> property to associate the **Open** and **Save** commands with <xref:System.Windows.Controls.MenuItem> controls. Not only does the command property associate a command with a <xref:System.Windows.Controls.MenuItem>, but it also supplies the input gesture text to use as a shortcut.  \n  \n [!code-xml[MenuEvent#8](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#8)]  \n  \n The <xref:System.Windows.Controls.MenuItem> class also has a <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> property, which specifies the element where the command occurs. If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is not set, the element that has keyboard focus receives the command. For more information about commands, see [Commanding Overview](../../../../docs/framework/wpf/advanced/commanding-overview.md).  \n  \n<a name=\"menu_styling\"></a>   \n## Menu Styling  \n With control styling, you can dramatically change the appearance and behavior of <xref:System.Windows.Controls.Menu> controls without having to write a custom control. In addition to setting visual properties, you can also apply a <xref:System.Windows.Style> to individual parts of a control, change the behavior of parts of the control through properties, or add additional parts or change the layout of a control. The following examples demonstrate several ways to add a <xref:System.Windows.Style> to a <xref:System.Windows.Controls.Menu> control.  \n  \n The first code example defines a <xref:System.Windows.Style> called `Simple` that shows how to use the current system settings in your style. The code assigns the color of the `MenuHighlightBrush` as the menu's background color and the `MenuTextBrush` as the menu's foreground color. Notice that you use resource keys to assign the brushes.  \n  \n [!code-xml[MenuStylesSnippet#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/app.xaml#1)]  \n  \n The following sample uses <xref:System.Windows.Trigger> elements that enable you to change the appearance of a <xref:System.Windows.Controls.MenuItem> in response to events that occur on the <xref:System.Windows.Controls.Menu>. When you move the mouse over the <xref:System.Windows.Controls.Menu>, the foreground color and the font characteristics of the menu items change.  \n  \n [!code-xml[MenuStylesSnippet#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/app.xaml#2)]  \n  \n## See Also  \n [WPF Controls Gallery Sample](http://go.microsoft.com/fwlink/?LinkID=160053)","nodes":[{"pos":[4,405],"embed":true,"restype":"x-metadata","content":"title: \"Menu Overview | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"Menu control\"\n  - \"controls, Menu\"\nms.assetid: 67df6de5-db96-4c71-b752-af90729a6537\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"Menu Overview | Microsoft Docs","nodes":[{"pos":[0,30],"content":"Menu Overview | Microsoft Docs","nodes":[{"content":"Menu Overview | Microsoft Docs","pos":[0,30]}]}],"path":["title"]}],"yml":true},{"pos":[412,425],"content":"Menu Overview","linkify":"Menu Overview","nodes":[{"content":"Menu Overview","pos":[0,13]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Menu&gt;</ph> class enables you to organize elements associated with commands and event handlers in a hierarchical order.","pos":[426,573],"source":"The <xref:System.Windows.Controls.Menu> class enables you to organize elements associated with commands and event handlers in a hierarchical order."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Menu&gt;</ph> element contains a collection of <ph id=\"ph2\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> elements.","pos":[574,697],"source":" Each <xref:System.Windows.Controls.Menu> element contains a collection of <xref:System.Windows.Controls.MenuItem> elements."},{"pos":[740,752],"content":"Menu Control","linkify":"Menu Control","nodes":[{"content":"Menu Control","pos":[0,12]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Menu&gt;</ph> control presents a list of items that specify commands or options for an application.","pos":[756,881],"source":"The <xref:System.Windows.Controls.Menu> control presents a list of items that specify commands or options for an application."},{"content":"Typically, clicking a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> opens a submenu or causes an application to carry out a command.","pos":[882,1008],"source":" Typically, clicking a <xref:System.Windows.Controls.MenuItem> opens a submenu or causes an application to carry out a command."},{"pos":[1050,1064],"content":"Creating Menus","linkify":"Creating Menus","nodes":[{"content":"Creating Menus","pos":[0,14]}]},{"content":"The following example creates a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Menu&gt;</ph> to manipulate text in a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.","pos":[1068,1199],"source":"The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Menu&gt;</ph> contains <ph id=\"ph2\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> objects that use the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.MenuItem.Command%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Controls.MenuItem.IsCheckable%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Controls.HeaderedItemsControl.Header%2A&gt;</ph> properties and the <ph id=\"ph6\">&lt;xref:System.Windows.Controls.MenuItem.Checked&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Controls.MenuItem.Unchecked&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.Windows.Controls.MenuItem.Click&gt;</ph> events.","pos":[1200,1660],"source":" The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events."},{"pos":[2168,2201],"content":"MenuItems with Keyboard Shortcuts","linkify":"MenuItems with Keyboard Shortcuts","nodes":[{"content":"MenuItems with Keyboard Shortcuts","pos":[0,33]}]},{"content":"Keyboard shortcuts are character combinations that can be entered with the keyboard to invoke <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Menu&gt;</ph> commands.","pos":[2205,2344],"source":"Keyboard shortcuts are character combinations that can be entered with the keyboard to invoke <xref:System.Windows.Controls.Menu> commands."},{"content":"For example, the shortcut for <bpt id=\"p1\">**</bpt>Copy<ept id=\"p1\">**</ept> is CTRL+C.","pos":[2345,2394],"source":" For example, the shortcut for **Copy** is CTRL+C."},{"content":"There are two properties to use with keyboard shortcuts and menu items â€”<ph id=\"ph1\">&lt;xref:System.Windows.Controls.MenuItem.InputGestureText%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Controls.MenuItem.Command%2A&gt;</ph>.","pos":[2395,2581],"source":" There are two properties to use with keyboard shortcuts and menu items â€”<xref:System.Windows.Controls.MenuItem.InputGestureText%2A> or <xref:System.Windows.Controls.MenuItem.Command%2A>."},{"pos":[2632,2648],"content":"InputGestureText","linkify":"InputGestureText","nodes":[{"content":"InputGestureText","pos":[0,16]}]},{"content":"The following example shows how to use the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.MenuItem.InputGestureText%2A&gt;</ph> property to assign keyboard shortcut text to <ph id=\"ph2\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> controls.","pos":[2652,2849],"source":"The following example shows how to use the <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> property to assign keyboard shortcut text to <xref:System.Windows.Controls.MenuItem> controls."},{"content":"This only places the keyboard shortcut in the menu item.","pos":[2850,2906]},{"content":"It does not associate the command with the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>.","pos":[2908,2991],"source":"  It does not associate the command with the <xref:System.Windows.Controls.MenuItem>."},{"content":"The application must handle the user's input to carry out the action.","pos":[2992,3061]},{"pos":[3218,3225],"content":"Command","linkify":"Command","nodes":[{"content":"Command","pos":[0,7]}]},{"content":"The following example shows how to use the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.MenuItem.Command%2A&gt;</ph> property to associate the <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Save<ept id=\"p2\">**</ept> commands with <ph id=\"ph2\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> controls.","pos":[3229,3434],"source":"The following example shows how to use the <xref:System.Windows.Controls.MenuItem.Command%2A> property to associate the **Open** and **Save** commands with <xref:System.Windows.Controls.MenuItem> controls."},{"content":"Not only does the command property associate a command with a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>, but it also supplies the input gesture text to use as a shortcut.","pos":[3435,3603],"source":" Not only does the command property associate a command with a <xref:System.Windows.Controls.MenuItem>, but it also supplies the input gesture text to use as a shortcut."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> class also has a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.MenuItem.CommandTarget%2A&gt;</ph> property, which specifies the element where the command occurs.","pos":[3724,3905],"source":"The <xref:System.Windows.Controls.MenuItem> class also has a <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> property, which specifies the element where the command occurs."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Controls.MenuItem.CommandTarget%2A&gt;</ph> is not set, the element that has keyboard focus receives the command.","pos":[3906,4035],"source":" If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is not set, the element that has keyboard focus receives the command."},{"content":"For more information about commands, see <bpt id=\"p1\">[</bpt>Commanding Overview<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/commanding-overview.md)</ept>.","pos":[4036,4163],"source":" For more information about commands, see [Commanding Overview](../../../../docs/framework/wpf/advanced/commanding-overview.md)."},{"pos":[4203,4215],"content":"Menu Styling","linkify":"Menu Styling","nodes":[{"content":"Menu Styling","pos":[0,12]}]},{"content":"With control styling, you can dramatically change the appearance and behavior of <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Menu&gt;</ph> controls without having to write a custom control.","pos":[4219,4386],"source":"With control styling, you can dramatically change the appearance and behavior of <xref:System.Windows.Controls.Menu> controls without having to write a custom control."},{"content":"In addition to setting visual properties, you can also apply a <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> to individual parts of a control, change the behavior of parts of the control through properties, or add additional parts or change the layout of a control.","pos":[4387,4634],"source":" In addition to setting visual properties, you can also apply a <xref:System.Windows.Style> to individual parts of a control, change the behavior of parts of the control through properties, or add additional parts or change the layout of a control."},{"content":"The following examples demonstrate several ways to add a <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> to a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Menu&gt;</ph> control.","pos":[4635,4769],"source":" The following examples demonstrate several ways to add a <xref:System.Windows.Style> to a <xref:System.Windows.Controls.Menu> control."},{"content":"The first code example defines a <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> called <ph id=\"ph2\">`Simple`</ph> that shows how to use the current system settings in your style.","pos":[4776,4917],"source":"The first code example defines a <xref:System.Windows.Style> called `Simple` that shows how to use the current system settings in your style."},{"content":"The code assigns the color of the <ph id=\"ph1\">`MenuHighlightBrush`</ph> as the menu's background color and the <ph id=\"ph2\">`MenuTextBrush`</ph> as the menu's foreground color.","pos":[4918,5059],"source":" The code assigns the color of the `MenuHighlightBrush` as the menu's background color and the `MenuTextBrush` as the menu's foreground color."},{"content":"Notice that you use resource keys to assign the brushes.","pos":[5060,5116]},{"content":"The following sample uses <ph id=\"ph1\">&lt;xref:System.Windows.Trigger&gt;</ph> elements that enable you to change the appearance of a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> in response to events that occur on the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Menu&gt;</ph>.","pos":[5247,5474],"source":"The following sample uses <xref:System.Windows.Trigger> elements that enable you to change the appearance of a <xref:System.Windows.Controls.MenuItem> in response to events that occur on the <xref:System.Windows.Controls.Menu>."},{"content":"When you move the mouse over the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Menu&gt;</ph>, the foreground color and the font characteristics of the menu items change.","pos":[5475,5620],"source":" When you move the mouse over the <xref:System.Windows.Controls.Menu>, the foreground color and the font characteristics of the menu items change."},{"pos":[5753,5761],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[5765,5841],"content":"<bpt id=\"p1\">[</bpt>WPF Controls Gallery Sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=160053)</ept>","source":"[WPF Controls Gallery Sample](http://go.microsoft.com/fwlink/?LinkID=160053)"}]}