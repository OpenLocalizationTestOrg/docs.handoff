<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f868f9c49010f16f271779594a402fbfea6b597</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\hosting-in-a-windows-service-application.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5990829592118ff132e5f0faeaa20cb320e2d032</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9518b4d0ff967aab7aa8fc2902b8f9a460cb756e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Hosting in a Windows Service Application | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Hosting in a Windows Service Application</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows services (formerly known as Windows NT services) provide a process model particularly suited to applications that must live in a long-running executable and do not display any form of user interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The process lifetime of a Windows service application is managed by the service control manager (SCM), which allows you to start, stop, and pause Windows service applications.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can configure a Windows service process to start automatically when the computer starts, making it a suitable hosting environment for "always on" applications.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> Windows service applications, see <bpt id="p1">[</bpt>Windows Service Applications<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=89450)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Applications that host long-running <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> services share many characteristics with Windows services.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In particular, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services are long-running server executables that do not interact directly with the user and therefore do not implement any form of user interface.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>As such, hosting <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services inside of a Windows service application is one option for building robust, long-running, <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Often, <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> developers must decide whether to host their <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> application inside of a Windows service application or inside of the Internet Information Services (IIS) or Windows Process Activation Service (WAS) hosting environment.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You should consider using Windows service applications under the following conditions:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Your application requires explicit activation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, you should use Windows services when your application must start automatically when the server starts instead of being dynamically started in response to the first incoming message.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The process that hosts your application must remain running once started.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Once started, a Windows service process remains running unless explicitly shut down by a server administrator using the service control manager.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Applications hosted in IIS or WAS may be started and stopped dynamically to make optimal use of system resources.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Applications that require explicit control over the lifetime of their hosting process should use Windows services instead of IIS or WAS.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service must run on Windows Server 2003 and use transports other than HTTP.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>On Windows Server 2003, the <ph id="ph1">[!INCLUDE[iis601](../../../../includes/iis601-md.md)]</ph> hosting environment is restricted to HTTP communication only.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Windows service applications are not subject to this restriction and can use any transport <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> supports, including net.tcp, net.pipe, and net.msmq.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To host WCF inside of a Windows service application</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create a Windows service application.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can write Windows service applications in managed code using the classes in the <ph id="ph1">&lt;xref:System.ServiceProcess&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This application must include one class that inherits from <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Link the lifetime of the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services to the lifetime of the Windows service application.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Typically, you want <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services hosted in a Windows service application to become active when the hosting service starts, stop listening for messages when the hosting service is stopped, and shut down the hosting process when the <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service encounters an error.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This can be accomplished as follows:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%28System.String%5B%5D%29&gt;</ph> to open one or more instances of <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A single Windows service application can host multiple <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services that start and stop as a group.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> to call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> any running <ph id="ph4">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services that were started during <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%28System.String%5B%5D%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Subscribe to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event of <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> and use the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to shut down the Windows service application in case of error.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Windows service applications that host <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> services are deployed and managed in the same way as Windows service applications that do not make use of <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Creating a Windows Service Application in the Component Designer<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=94875)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Host a WCF Service in a Managed Windows Service<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-a-managed-windows-service.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Windows Service Host<ept id="p1">](../../../../docs/framework/wcf/samples/windows-service-host.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Service Application Programming Architecture<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=94876)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Windows Server App Fabric Hosting Features<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201276)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>