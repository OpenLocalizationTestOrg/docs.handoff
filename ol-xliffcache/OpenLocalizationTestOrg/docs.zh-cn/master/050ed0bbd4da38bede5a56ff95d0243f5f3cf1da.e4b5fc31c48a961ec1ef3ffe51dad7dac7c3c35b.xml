{"content":"---\ntitle: \"ExportNestedTypeForwarder Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink.ExportNestedTypeForwarder\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ExportNestedTypeForwarder\"\nhelpviewer_keywords: \n  - \"ExportNestedTypeForwarder method\"\nms.assetid: 886ea6c5-6b26-4b88-8bf6-448d6d191950\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ExportNestedTypeForwarder Method\nAdds a type forwarder for a nested type to the type table of the given assembly.  \n  \n## Syntax  \n  \n```  \nHRESULT ExportNestedTypeForwarder(  \n    mdAssembly      AssemblyID,  \n    mdToken         FileToken,  \n    mdTypeDef       TypeToken,  \n    mdExportedType  ParentType,  \n    LPCWSTR         pszTypename,  \n    DWORD           dwFlags,  \n    mdExportedType* pType  \n) PURE;  \n```  \n  \n## Parameters  \n `AssemblyID`  \n ID of the assembly to export from.  \n  \n `FileToken`  \n File token or assembly ID of file that defines the type.  \n  \n `TypeToken`  \n Token for the type.  \n  \n `ParentType`  \n Token of parent type.  \n  \n `pszTypename`  \n Fully qualified type name to export.  \n  \n `dwFlags`  \n `ComType` flags such as `tdPublic` or `tdNested`.  \n  \n `pType`  \n Receives token of export type. This is necessary only for emitting nested types.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h  \n  \n## See also\n\n- [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)\n- [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)\n- [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)\n","nodes":[{"pos":[4,388],"embed":true,"restype":"x-metadata","content":"title: \"ExportNestedTypeForwarder Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink.ExportNestedTypeForwarder\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ExportNestedTypeForwarder\"\nhelpviewer_keywords: \n  - \"ExportNestedTypeForwarder method\"\nms.assetid: 886ea6c5-6b26-4b88-8bf6-448d6d191950\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ExportNestedTypeForwarder Method","nodes":[{"pos":[0,32],"content":"ExportNestedTypeForwarder Method","nodes":[{"content":"ExportNestedTypeForwarder Method","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[395,427],"content":"ExportNestedTypeForwarder Method","linkify":"ExportNestedTypeForwarder Method","nodes":[{"content":"ExportNestedTypeForwarder Method","pos":[0,32]}]},{"content":"Adds a type forwarder for a nested type to the type table of the given assembly.","pos":[428,508]},{"pos":[517,523],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[822,832],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ID of the assembly to export from.","pos":[852,886]},{"content":"File token or assembly ID of file that defines the type.","pos":[908,964]},{"content":"Token for the type.","pos":[986,1005]},{"content":"Token of parent type.","pos":[1028,1049]},{"content":"Fully qualified type name to export.","pos":[1073,1109]},{"content":"<ph id=\"ph1\">`ComType`</ph> flags such as <ph id=\"ph2\">`tdPublic`</ph> or <ph id=\"ph3\">`tdNested`</ph>.","pos":[1129,1178],"source":"`ComType` flags such as `tdPublic` or `tdNested`."},{"content":"Receives token of export type.","pos":[1196,1226]},{"content":"This is necessary only for emitting nested types.","pos":[1227,1276]},{"pos":[1285,1297],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1301,1337]},{"pos":[1346,1358],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h","pos":[1362,1378]},{"pos":[1387,1395],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1399,1485],"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept>","source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)"},{"pos":[1488,1576],"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept>","source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)"},{"pos":[1579,1647],"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}