{"content":"---\ntitle: \"Using the Pick Activity\"\nms.date: \"03/30/2017\"\nms.assetid: b89be812-a247-4025-b0e3-ffb20db027a6\n---\n# Using the Pick Activity\nThis sample demonstrates how to use the <xref:System.Activities.Statements.Pick> activity.\n\n The <xref:System.Activities.Statements.Pick> activity provides event-based control modeling. It behaves similar to the C# `switch` statement, which executes only one of the branches in the `switch` statement. Unlike the `switch` statement in which a branch is executed based upon on a value, the <xref:System.Activities.Statements.Pick> activity executes a branch based upon how an activity completes.\n\n This sample prompts a user to type in their name on the console within a given time period. The <xref:System.Activities.Statements.Pick> activity in the sample has two branches that are executed based upon whether the user types in their name within 5 seconds or not. If the user types in their name within 5 seconds, the first branch is executed, which contains a custom `ReadLine` activity; otherwise the other branch is executed, which contains a <xref:System.Activities.Statements.Delay> activity. Once a user’s name is typed in on the console, the user’s name is printed on the console. If an input is not entered within 5 seconds, the operation is timed out.\n\n## Demonstrates\n <xref:System.Activities.Statements.Pick> activity.\n\n## Discussion\n The sample includes a Designer workflow and coded workflow.\n\n Designer Workflow\n The Designer version of the sample demonstrates how to create a workflow in the designer. The following files are included:\n\n-   Program.cs : Includes the `Main` function that executes the sample workflow.\n\n-   ReadString.cs: A custom activity that reads some input from the console.\n\n-   Sequence1.xaml: A workflow created using the designer that uses Pick.\n\n Coded Workflow\n The coded version of the sample demonstrates how to create a workflow in the designer. The following files are included:\n\n-   Program.cs : Includes the `Main` function that executes the sample workflow.\n\n-   ReadString.cs: A custom activity that reads some input from the console.\n\n#### To use this sample\n\n1.  Using Visual Studio 2010, open the Pick.sln solution file.\n\n2.  To build the solution, press CTRL+SHIFT+B.\n\n3.  To run the solution, press F5.\n\n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Basic\\Built-InActivities\\Pick`","nodes":[{"pos":[4,107],"embed":true,"restype":"x-metadata","content":"title: \"Using the Pick Activity\"\nms.date: \"03/30/2017\"\nms.assetid: b89be812-a247-4025-b0e3-ffb20db027a6","nodes":[{"content":"Using the Pick Activity","nodes":[{"pos":[0,23],"content":"Using the Pick Activity","nodes":[{"content":"Using the Pick Activity","pos":[0,23]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[114,137],"content":"Using the Pick Activity","linkify":"Using the Pick Activity","nodes":[{"content":"Using the Pick Activity","pos":[0,23]}]},{"pos":[138,228],"content":"This sample demonstrates how to use the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity.","source":"This sample demonstrates how to use the <xref:System.Activities.Statements.Pick> activity."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity provides event-based control modeling.","pos":[231,323],"source":"The <xref:System.Activities.Statements.Pick> activity provides event-based control modeling."},{"content":"It behaves similar to the C# <ph id=\"ph1\">`switch`</ph> statement, which executes only one of the branches in the <ph id=\"ph2\">`switch`</ph> statement.","pos":[324,439],"source":" It behaves similar to the C# `switch` statement, which executes only one of the branches in the `switch` statement."},{"content":"Unlike the <ph id=\"ph1\">`switch`</ph> statement in which a branch is executed based upon on a value, the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity executes a branch based upon how an activity completes.","pos":[440,632],"source":" Unlike the `switch` statement in which a branch is executed based upon on a value, the <xref:System.Activities.Statements.Pick> activity executes a branch based upon how an activity completes."},{"content":"This sample prompts a user to type in their name on the console within a given time period.","pos":[635,726]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity in the sample has two branches that are executed based upon whether the user types in their name within 5 seconds or not.","pos":[727,902],"source":" The <xref:System.Activities.Statements.Pick> activity in the sample has two branches that are executed based upon whether the user types in their name within 5 seconds or not."},{"content":"If the user types in their name within 5 seconds, the first branch is executed, which contains a custom <ph id=\"ph1\">`ReadLine`</ph> activity; otherwise the other branch is executed, which contains a <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Delay&gt;</ph> activity.","pos":[903,1136],"source":" If the user types in their name within 5 seconds, the first branch is executed, which contains a custom `ReadLine` activity; otherwise the other branch is executed, which contains a <xref:System.Activities.Statements.Delay> activity."},{"content":"Once a user’s name is typed in on the console, the user’s name is printed on the console.","pos":[1137,1226]},{"content":"If an input is not entered within 5 seconds, the operation is timed out.","pos":[1227,1299]},{"pos":[1304,1316],"content":"Demonstrates","linkify":"Demonstrates","nodes":[{"content":"Demonstrates","pos":[0,12]}]},{"pos":[1318,1368],"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity.","source":"<xref:System.Activities.Statements.Pick> activity."},{"pos":[1373,1383],"content":"Discussion","linkify":"Discussion","nodes":[{"content":"Discussion","pos":[0,10]}]},{"content":"The sample includes a Designer workflow and coded workflow.","pos":[1385,1444]},{"content":"Designer Workflow The Designer version of the sample demonstrates how to create a workflow in the designer.","pos":[1447,1555],"source":"Designer Workflow\n The Designer version of the sample demonstrates how to create a workflow in the designer."},{"content":"The following files are included:","pos":[1556,1589]},{"pos":[1595,1671],"content":"Program.cs : Includes the <ph id=\"ph1\">`Main`</ph> function that executes the sample workflow.","source":"Program.cs : Includes the `Main` function that executes the sample workflow."},{"content":"ReadString.cs: A custom activity that reads some input from the console.","pos":[1677,1749]},{"content":"Sequence1.xaml: A workflow created using the designer that uses Pick.","pos":[1755,1824]},{"pos":[1827,1963],"content":"Coded Workflow\nThe coded version of the sample demonstrates how to create a workflow in the designer. The following files are included:","leadings":[""," "],"nodes":[{"content":"Coded Workflow The coded version of the sample demonstrates how to create a workflow in the designer.","pos":[0,101],"source":"Coded Workflow\nThe coded version of the sample demonstrates how to create a workflow in the designer."},{"content":"The following files are included:","pos":[102,135]}]},{"pos":[1969,2045],"content":"Program.cs : Includes the <ph id=\"ph1\">`Main`</ph> function that executes the sample workflow.","source":"Program.cs : Includes the `Main` function that executes the sample workflow."},{"content":"ReadString.cs: A custom activity that reads some input from the console.","pos":[2051,2123]},{"pos":[2130,2148],"content":"To use this sample","linkify":"To use this sample","nodes":[{"content":"To use this sample","pos":[0,18]}]},{"content":"Using Visual Studio 2010, open the Pick.sln solution file.","pos":[2154,2212]},{"content":"To build the solution, press CTRL+SHIFT+B.","pos":[2218,2260]},{"content":"To run the solution, press F5.","pos":[2266,2296]},{"pos":[2300,2432],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":"The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[14,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[0,53]},{"content":"Check for the following (default) directory before continuing.","pos":[54,116]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all Windows Communication Foundation (WCF) and <ph id=\"ph1\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[2486,2796],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[2797,2847]}]}