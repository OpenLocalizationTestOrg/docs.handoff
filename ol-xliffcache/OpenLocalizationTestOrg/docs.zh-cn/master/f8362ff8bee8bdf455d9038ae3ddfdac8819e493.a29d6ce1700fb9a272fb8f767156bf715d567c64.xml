{"content":"---\ntitle: \"Building XML Schemas | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: 8a5ea56c-0140-4b51-8997-875ae6a8e0cb\ncaps.latest.revision: 2\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Building XML Schemas\nThe classes in the <xref:System.Xml.Schema?displayProperty=fullName> namespace map to the structures defined in the World Wide Web Consortium (W3C) XML Schema Recommendation and can be used to build XML schemas in-memory.  \n  \n## Building an XML Schema  \n In the code examples that follow, the SOM API is used to build a customer XML schema in-memory.  \n  \n### Creating Element and Attributes  \n The code examples build the customer schema from the bottom up, creating the child elements, attributes, and their corresponding types first, and then the top-level elements.  \n  \n In the following code example, the `FirstName` and `LastName` elements, as well as the `CustomerId` attribute of the customer schema are created using the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAttribute> classes of the SOM. Apart from the <xref:System.Xml.Schema.XmlSchemaElement.Name%2A> properties of the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAttribute> classes, which correspond to the \"name\" attribute of the `<xs:element />` and `<xs:attribute />` elements in an XML schema, all other attributes allowed by the schema (`defaultValue`, `fixedValue`, `form`, and so on) have corresponding properties in the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAttribute> classes.  \n  \n [!code-cpp[XmlSchemaCreateExample#2](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#2)]\n [!code-csharp[XmlSchemaCreateExample#2](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#2)]\n [!code-vb[XmlSchemaCreateExample#2](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#2)]  \n  \n### Creating Schema Types  \n The content of elements and attributes is defined by their types. To create elements and attributes whose types are one of the built-in schema types, the <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> or <xref:System.Xml.Schema.XmlSchemaAttribute> classes are set with the corresponding qualified name of the built-in type using the <xref:System.Xml.XmlQualifiedName> class. To create a user-defined type for elements and attributes, a new simple or complex type is created using the <xref:System.Xml.Schema.XmlSchemaSimpleType> or <xref:System.Xml.Schema.XmlSchemaComplexType> class.  \n  \n> [!NOTE]\n>  To create unnamed simple or complex types that are anonymous children of an element or attribute (only simple types apply for attributes), set the <xref:System.Xml.Schema.XmlSchemaElement.SchemaType%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> or <xref:System.Xml.Schema.XmlSchemaAttribute> classes to the unnamed simple or complex type, instead of the <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> or <xref:System.Xml.Schema.XmlSchemaAttribute> classes.  \n  \n XML schemas allow both anonymous and named simple types to be derived by restriction from other simple types (built-in or user-defined) or constructed as a list or union of other simple types. The <xref:System.Xml.Schema.XmlSchemaSimpleTypeRestriction> class is used to create a simple type by restricting the built-in `xs:string` type. You can also use the <xref:System.Xml.Schema.XmlSchemaSimpleTypeList> or <xref:System.Xml.Schema.XmlSchemaSimpleTypeUnion> classes to create list or union types. The <xref:System.Xml.Schema.XmlSchemaSimpleType.Content%2A?displayProperty=fullName> property denotes whether it is a simple type restriction, list, or union.  \n  \n In the following code example, the `FirstName` element's type is the built-in type `xs:string`, the `LastName` element's type is a named simple type that is a restriction of the built-in type `xs:string`, with a `MaxLength` facet value of 20, and the `CustomerId` attribute's type is the built-in type `xs:positiveInteger`. The `Customer` element is an anonymous complex type whose particle is the sequence of the `FirstName` and `LastName` elements and whose attributes contains the `CustomerId` attribute.  \n  \n> [!NOTE]\n>  You can also use the <xref:System.Xml.Schema.XmlSchemaChoice> or <xref:System.Xml.Schema.XmlSchemaAll> classes as the particle of the complex type to replicate `<xs:choice />` or `<xs:all />` semantics.  \n  \n [!code-cpp[XmlSchemaCreateExample#3](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#3)]\n [!code-csharp[XmlSchemaCreateExample#3](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#3)]\n [!code-vb[XmlSchemaCreateExample#3](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#3)]  \n  \n### Creating and Compiling Schemas  \n At this point, the child elements and attributes, their corresponding types, and the top-level `Customer` element have been created in-memory using the SOM API. In the following code example, the schema element is created using the <xref:System.Xml.Schema.XmlSchema> class, the top-level elements and types are added to it using the <xref:System.Xml.Schema.XmlSchema.Items%2A?displayProperty=fullName> property and the complete schema is compiled using the <xref:System.Xml.Schema.XmlSchemaSet> class and written to the console.  \n  \n [!code-cpp[XmlSchemaCreateExample#4](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#4)]\n [!code-csharp[XmlSchemaCreateExample#4](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#4)]\n [!code-vb[XmlSchemaCreateExample#4](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#4)]  \n  \n The <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=fullName> method validates the customer schema against the rules for an XML schema and makes post-schema-compilation properties available.  \n  \n> [!NOTE]\n>  All post-schema-compilation properties in the SOM API differ from the Post-Schema-Validation-Infoset.  \n  \n The <xref:System.Xml.Schema.ValidationEventHandler> added to the <xref:System.Xml.Schema.XmlSchemaSet> is a delegate that calls the callback method `ValidationCallback` to handle schema validation warnings and errors.  \n  \n The following is the complete code example, and the customer schema written to the console.  \n  \n [!code-cpp[XmlSchemaCreateExample#1](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#1)]\n [!code-csharp[XmlSchemaCreateExample#1](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#1)]\n [!code-vb[XmlSchemaCreateExample#1](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#1)]  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<xs:schema xmlns:tns=\"http://www.tempuri.org\" targetNamespace=\"http://www.tempuri.org\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">  \n   <xs:element name=\"Customer\">  \n      <xs:complexType>  \n         <xs:sequence>  \n            <xs:element name=\"FirstName\" type=\"xs:string\" />  \n            <xs:element name=\"LastName\" type=\"tns:LastNameType\" />  \n         </xs:sequence>  \n         <xs:attribute name=\"CustomerId\" type=\"xs:positiveInteger\" use=\"required\" />  \n      </xs:complexType>  \n   </xs:element>  \n   <xs:simpleType name=\"LastNameType\">  \n      <xs:restriction base=\"xs:string\">  \n         <xs:maxLength value=\"20\" />  \n      </xs:restriction>  \n   </xs:simpleType>  \n</xs:schema>  \n```  \n  \n## See Also  \n [XML Schema Object Model Overview](../../../../docs/standard/data/xml/xml-schema-object-model-overview.md)   \n [Reading and Writing XML Schemas](../../../../docs/standard/data/xml/reading-and-writing-xml-schemas.md)   \n [Traversing XML Schemas](../../../../docs/standard/data/xml/traversing-xml-schemas.md)   \n [Editing XML Schemas](../../../../docs/standard/data/xml/editing-xml-schemas.md)   \n [Including or Importing XML Schemas](../../../../docs/standard/data/xml/including-or-importing-xml-schemas.md)   \n [XmlSchemaSet for Schema Compilation](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)   \n [Post-Schema Compilation Infoset](../../../../docs/standard/data/xml/post-schema-compilation-infoset.md)","nodes":[{"pos":[4,387],"embed":true,"restype":"x-metadata","content":"title: \"Building XML Schemas | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: 8a5ea56c-0140-4b51-8997-875ae6a8e0cb\ncaps.latest.revision: 2\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"Building XML Schemas | Microsoft Docs","nodes":[{"pos":[0,37],"content":"Building XML Schemas | Microsoft Docs","nodes":[{"content":"Building XML Schemas | Microsoft Docs","pos":[0,37]}]}],"path":["title"]}],"yml":true},{"pos":[394,414],"content":"Building XML Schemas","linkify":"Building XML Schemas","nodes":[{"content":"Building XML Schemas","pos":[0,20]}]},{"content":"The classes in the <ph id=\"ph1\">&lt;xref:System.Xml.Schema?displayProperty=fullName&gt;</ph> namespace map to the structures defined in the World Wide Web Consortium (W3C) XML Schema Recommendation and can be used to build XML schemas in-memory.","pos":[415,636],"source":"The classes in the <xref:System.Xml.Schema?displayProperty=fullName> namespace map to the structures defined in the World Wide Web Consortium (W3C) XML Schema Recommendation and can be used to build XML schemas in-memory."},{"pos":[645,667],"content":"Building an XML Schema","linkify":"Building an XML Schema","nodes":[{"content":"Building an XML Schema","pos":[0,22]}]},{"content":"In the code examples that follow, the SOM API is used to build a customer XML schema in-memory.","pos":[671,766]},{"pos":[776,807],"content":"Creating Element and Attributes","linkify":"Creating Element and Attributes","nodes":[{"content":"Creating Element and Attributes","pos":[0,31]}]},{"content":"The code examples build the customer schema from the bottom up, creating the child elements, attributes, and their corresponding types first, and then the top-level elements.","pos":[811,985]},{"content":"In the following code example, the <ph id=\"ph1\">`FirstName`</ph> and <ph id=\"ph2\">`LastName`</ph> elements, as well as the <ph id=\"ph3\">`CustomerId`</ph> attribute of the customer schema are created using the <ph id=\"ph4\">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> classes of the SOM.","pos":[992,1256],"source":"In the following code example, the `FirstName` and `LastName` elements, as well as the `CustomerId` attribute of the customer schema are created using the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAttribute> classes of the SOM."},{"content":"Apart from the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaElement.Name%2A&gt;</ph> properties of the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> classes, which correspond to the \"name\" attribute of the <ph id=\"ph4\">`&lt;xs:element /&gt;`</ph> and <ph id=\"ph5\">`&lt;xs:attribute /&gt;`</ph> elements in an XML schema, all other attributes allowed by the schema (<ph id=\"ph6\">`defaultValue`</ph>, <ph id=\"ph7\">`fixedValue`</ph>, <ph id=\"ph8\">`form`</ph>, and so on) have corresponding properties in the <ph id=\"ph9\">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id=\"ph10\">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> classes.","pos":[1257,1782],"source":" Apart from the <xref:System.Xml.Schema.XmlSchemaElement.Name%2A> properties of the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAttribute> classes, which correspond to the \"name\" attribute of the `<xs:element />` and `<xs:attribute />` elements in an XML schema, all other attributes allowed by the schema (`defaultValue`, `fixedValue`, `form`, and so on) have corresponding properties in the <xref:System.Xml.Schema.XmlSchemaElement> and <xref:System.Xml.Schema.XmlSchemaAttribute> classes."},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#2<ept id=\"p2\">](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#2)</ept><ept id=\"p1\">]</ept>","pos":[1789,1933],"source":"[!code-cpp[XmlSchemaCreateExample#2](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#2)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#2<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#2)</ept><ept id=\"p1\">]</ept>","pos":[1935,2083],"source":"[!code-csharp[XmlSchemaCreateExample#2](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#2)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#2<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#2)</ept><ept id=\"p1\">]</ept>","pos":[2085,2234],"source":"[!code-vb[XmlSchemaCreateExample#2](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#2)]"},{"pos":[2244,2265],"content":"Creating Schema Types","linkify":"Creating Schema Types","nodes":[{"content":"Creating Schema Types","pos":[0,21]}]},{"content":"The content of elements and attributes is defined by their types.","pos":[2269,2334]},{"content":"To create elements and attributes whose types are one of the built-in schema types, the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> classes are set with the corresponding qualified name of the built-in type using the <ph id=\"ph4\">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> class.","pos":[2335,2714],"source":" To create elements and attributes whose types are one of the built-in schema types, the <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> or <xref:System.Xml.Schema.XmlSchemaAttribute> classes are set with the corresponding qualified name of the built-in type using the <xref:System.Xml.XmlQualifiedName> class."},{"content":"To create a user-defined type for elements and attributes, a new simple or complex type is created using the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaComplexType&gt;</ph> class.","pos":[2715,2924],"source":" To create a user-defined type for elements and attributes, a new simple or complex type is created using the <xref:System.Xml.Schema.XmlSchemaSimpleType> or <xref:System.Xml.Schema.XmlSchemaComplexType> class."},{"pos":[2932,3486],"content":"[!NOTE]\n To create unnamed simple or complex types that are anonymous children of an element or attribute (only simple types apply for attributes), set the <xref:System.Xml.Schema.XmlSchemaElement.SchemaType%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> or <xref:System.Xml.Schema.XmlSchemaAttribute> classes to the unnamed simple or complex type, instead of the <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> or <xref:System.Xml.Schema.XmlSchemaAttribute> classes.","leadings":["","> "],"nodes":[{"content":"To create unnamed simple or complex types that are anonymous children of an element or attribute (only simple types apply for attributes), set the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaType%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> classes to the unnamed simple or complex type, instead of the <ph id=\"ph4\">&lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A&gt;</ph> property of the <ph id=\"ph5\">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> or <ph id=\"ph6\">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> classes.","pos":[9,552],"source":"To create unnamed simple or complex types that are anonymous children of an element or attribute (only simple types apply for attributes), set the <xref:System.Xml.Schema.XmlSchemaElement.SchemaType%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> or <xref:System.Xml.Schema.XmlSchemaAttribute> classes to the unnamed simple or complex type, instead of the <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName%2A> property of the <xref:System.Xml.Schema.XmlSchemaElement> or <xref:System.Xml.Schema.XmlSchemaAttribute> classes."}]},{"content":"XML schemas allow both anonymous and named simple types to be derived by restriction from other simple types (built-in or user-defined) or constructed as a list or union of other simple types.","pos":[3493,3685]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSimpleTypeRestriction&gt;</ph> class is used to create a simple type by restricting the built-in <ph id=\"ph2\">`xs:string`</ph> type.","pos":[3686,3829],"source":" The <xref:System.Xml.Schema.XmlSchemaSimpleTypeRestriction> class is used to create a simple type by restricting the built-in `xs:string` type."},{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSimpleTypeList&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaSimpleTypeUnion&gt;</ph> classes to create list or union types.","pos":[3830,3991],"source":" You can also use the <xref:System.Xml.Schema.XmlSchemaSimpleTypeList> or <xref:System.Xml.Schema.XmlSchemaSimpleTypeUnion> classes to create list or union types."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType.Content%2A?displayProperty=fullName&gt;</ph> property denotes whether it is a simple type restriction, list, or union.","pos":[3992,4150],"source":" The <xref:System.Xml.Schema.XmlSchemaSimpleType.Content%2A?displayProperty=fullName> property denotes whether it is a simple type restriction, list, or union."},{"content":"In the following code example, the <ph id=\"ph1\">`FirstName`</ph> element's type is the built-in type <ph id=\"ph2\">`xs:string`</ph>, the <ph id=\"ph3\">`LastName`</ph> element's type is a named simple type that is a restriction of the built-in type <ph id=\"ph4\">`xs:string`</ph>, with a <ph id=\"ph5\">`MaxLength`</ph> facet value of 20, and the <ph id=\"ph6\">`CustomerId`</ph> attribute's type is the built-in type <ph id=\"ph7\">`xs:positiveInteger`</ph>.","pos":[4157,4480],"source":"In the following code example, the `FirstName` element's type is the built-in type `xs:string`, the `LastName` element's type is a named simple type that is a restriction of the built-in type `xs:string`, with a `MaxLength` facet value of 20, and the `CustomerId` attribute's type is the built-in type `xs:positiveInteger`."},{"content":"The <ph id=\"ph1\">`Customer`</ph> element is an anonymous complex type whose particle is the sequence of the <ph id=\"ph2\">`FirstName`</ph> and <ph id=\"ph3\">`LastName`</ph> elements and whose attributes contains the <ph id=\"ph4\">`CustomerId`</ph> attribute.","pos":[4481,4664],"source":" The `Customer` element is an anonymous complex type whose particle is the sequence of the `FirstName` and `LastName` elements and whose attributes contains the `CustomerId` attribute."},{"pos":[4672,4885],"content":"[!NOTE]\n You can also use the <xref:System.Xml.Schema.XmlSchemaChoice> or <xref:System.Xml.Schema.XmlSchemaAll> classes as the particle of the complex type to replicate `<xs:choice />` or `<xs:all />` semantics.","leadings":["","> "],"nodes":[{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaChoice&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaAll&gt;</ph> classes as the particle of the complex type to replicate <ph id=\"ph3\">`&lt;xs:choice /&gt;`</ph> or <ph id=\"ph4\">`&lt;xs:all /&gt;`</ph> semantics.","pos":[9,211],"source":"You can also use the <xref:System.Xml.Schema.XmlSchemaChoice> or <xref:System.Xml.Schema.XmlSchemaAll> classes as the particle of the complex type to replicate `<xs:choice />` or `<xs:all />` semantics."}]},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#3<ept id=\"p2\">](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#3)</ept><ept id=\"p1\">]</ept>","pos":[4892,5036],"source":"[!code-cpp[XmlSchemaCreateExample#3](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#3)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#3<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#3)</ept><ept id=\"p1\">]</ept>","pos":[5038,5186],"source":"[!code-csharp[XmlSchemaCreateExample#3](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#3)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#3<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#3)</ept><ept id=\"p1\">]</ept>","pos":[5188,5337],"source":"[!code-vb[XmlSchemaCreateExample#3](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#3)]"},{"pos":[5347,5377],"content":"Creating and Compiling Schemas","linkify":"Creating and Compiling Schemas","nodes":[{"content":"Creating and Compiling Schemas","pos":[0,30]}]},{"content":"At this point, the child elements and attributes, their corresponding types, and the top-level <ph id=\"ph1\">`Customer`</ph> element have been created in-memory using the SOM API.","pos":[5381,5541],"source":"At this point, the child elements and attributes, their corresponding types, and the top-level `Customer` element have been created in-memory using the SOM API."},{"content":"In the following code example, the schema element is created using the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> class, the top-level elements and types are added to it using the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchema.Items%2A?displayProperty=fullName&gt;</ph> property and the complete schema is compiled using the <ph id=\"ph3\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class and written to the console.","pos":[5542,5909],"source":" In the following code example, the schema element is created using the <xref:System.Xml.Schema.XmlSchema> class, the top-level elements and types are added to it using the <xref:System.Xml.Schema.XmlSchema.Items%2A?displayProperty=fullName> property and the complete schema is compiled using the <xref:System.Xml.Schema.XmlSchemaSet> class and written to the console."},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#4<ept id=\"p2\">](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#4)</ept><ept id=\"p1\">]</ept>","pos":[5916,6060],"source":"[!code-cpp[XmlSchemaCreateExample#4](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#4)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#4<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#4)</ept><ept id=\"p1\">]</ept>","pos":[6062,6210],"source":"[!code-csharp[XmlSchemaCreateExample#4](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#4)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#4<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#4)</ept><ept id=\"p1\">]</ept>","pos":[6212,6361],"source":"[!code-vb[XmlSchemaCreateExample#4](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#4)]"},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=fullName&gt;</ph> method validates the customer schema against the rules for an XML schema and makes post-schema-compilation properties available.","pos":[6368,6574],"source":"The <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A?displayProperty=fullName> method validates the customer schema against the rules for an XML schema and makes post-schema-compilation properties available."},{"pos":[6582,6694],"content":"[!NOTE]\n All post-schema-compilation properties in the SOM API differ from the Post-Schema-Validation-Infoset.","leadings":["","> "],"nodes":[{"content":"All post-schema-compilation properties in the SOM API differ from the Post-Schema-Validation-Infoset.","pos":[9,110]}]},{"pos":[6701,6918],"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> added to the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is a delegate that calls the callback method <ph id=\"ph3\">`ValidationCallback`</ph> to handle schema validation warnings and errors.","source":"The <xref:System.Xml.Schema.ValidationEventHandler> added to the <xref:System.Xml.Schema.XmlSchemaSet> is a delegate that calls the callback method `ValidationCallback` to handle schema validation warnings and errors."},{"content":"The following is the complete code example, and the customer schema written to the console.","pos":[6925,7016]},{"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#1<ept id=\"p2\">](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#1)</ept><ept id=\"p1\">]</ept>","pos":[7023,7167],"source":"[!code-cpp[XmlSchemaCreateExample#1](../../../../samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCreateExample/CPP/XmlSchemaCreateExample.cpp#1)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#1)</ept><ept id=\"p1\">]</ept>","pos":[7169,7317],"source":"[!code-csharp[XmlSchemaCreateExample#1](../../../../samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCreateExample/CS/XmlSchemaCreateExample.cs#1)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>XmlSchemaCreateExample#1<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#1)</ept><ept id=\"p1\">]</ept>","pos":[7319,7468],"source":"[!code-vb[XmlSchemaCreateExample#1](../../../../samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCreateExample/VB/XmlSchemaCreateExample.vb#1)]"},{"pos":[8226,8234],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>XML Schema Object Model Overview<ept id=\"p1\">](../../../../docs/standard/data/xml/xml-schema-object-model-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[8238,8345],"source":"[XML Schema Object Model Overview](../../../../docs/standard/data/xml/xml-schema-object-model-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Reading and Writing XML Schemas<ept id=\"p1\">](../../../../docs/standard/data/xml/reading-and-writing-xml-schemas.md)</ept><ph id=\"ph1\"> </ph>","pos":[8349,8454],"source":"[Reading and Writing XML Schemas](../../../../docs/standard/data/xml/reading-and-writing-xml-schemas.md) "},{"content":"<bpt id=\"p1\">[</bpt>Traversing XML Schemas<ept id=\"p1\">](../../../../docs/standard/data/xml/traversing-xml-schemas.md)</ept><ph id=\"ph1\"> </ph>","pos":[8458,8545],"source":"[Traversing XML Schemas](../../../../docs/standard/data/xml/traversing-xml-schemas.md) "},{"content":"<bpt id=\"p1\">[</bpt>Editing XML Schemas<ept id=\"p1\">](../../../../docs/standard/data/xml/editing-xml-schemas.md)</ept><ph id=\"ph1\"> </ph>","pos":[8549,8630],"source":"[Editing XML Schemas](../../../../docs/standard/data/xml/editing-xml-schemas.md) "},{"content":"<bpt id=\"p1\">[</bpt>Including or Importing XML Schemas<ept id=\"p1\">](../../../../docs/standard/data/xml/including-or-importing-xml-schemas.md)</ept><ph id=\"ph1\"> </ph>","pos":[8634,8745],"source":"[Including or Importing XML Schemas](../../../../docs/standard/data/xml/including-or-importing-xml-schemas.md) "},{"content":"<bpt id=\"p1\">[</bpt>XmlSchemaSet for Schema Compilation<ept id=\"p1\">](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)</ept><ph id=\"ph1\"> </ph>","pos":[8749,8862],"source":"[XmlSchemaSet for Schema Compilation](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md) "},{"content":"<bpt id=\"p1\">[</bpt>Post-Schema Compilation Infoset<ept id=\"p1\">](../../../../docs/standard/data/xml/post-schema-compilation-infoset.md)</ept>","pos":[8866,8970],"source":"[Post-Schema Compilation Infoset](../../../../docs/standard/data/xml/post-schema-compilation-infoset.md)"}]}