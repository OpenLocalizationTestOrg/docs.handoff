{"content":"---\ntitle: \"How to: Open Files Using the OpenFileDialog Component | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"OpenFileDialog component, opening files\"\n  - \"OpenFile method\"\n  - \"OpenFile method, OpenFileDialog component\"\n  - \"files, opening with OpenFileDialog component\"\nms.assetid: 9d88367a-cc21-4ffd-be74-89fd63767d35\ncaps.latest.revision: 21\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Open Files Using the OpenFileDialog Component\nThe <xref:System.Windows.Forms.OpenFileDialog> component allows users to browse the folders of their computer or any computer on the network and select one or more files to open. The dialog box returns the path and name of the file the user selected in the dialog box.  \n  \n Once the user has selected the file to be opened, there are two approaches to the mechanism of opening the file. If you prefer to work with file streams, you can create an instance of the <xref:System.IO.StreamReader> class. Alternately, you can use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method to open the selected file.  \n  \n The first example below involves a <xref:System.Security.Permissions.FileIOPermission> permission check (as described in the \"Security Note\" below), but gives you access to the filename. You can use this technique from the Local Machine, Intranet, and Internet zones. The second method also does a <xref:System.Security.Permissions.FileIOPermission> permission check, but is better suited for applications in the Intranet or Internet zones.  \n  \n### To open a file as a stream using the OpenFileDialog component  \n  \n1.  Display the **Open File** dialog box and call a method to open the file selected by the user.  \n  \n     One approach is to use the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method to display the Open File dialog box, and use an instance of the <xref:System.IO.StreamReader> class to open the file.  \n  \n     The example below uses the <xref:System.Windows.Forms.Button> control's <xref:System.Windows.Forms.Control.Click> event handler to open an instance of the <xref:System.Windows.Forms.OpenFileDialog> component. When a file is chosen and the user clicks **OK**, the file selected in the dialog box opens. In this case, the contents are displayed in a message box, just to show that the file stream has been read.  \n  \n    > [!IMPORTANT]\n    >  To get or set the <xref:System.Windows.Forms.FileDialog.FileName%2A> property, your assembly requires a privilege level granted by the <xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName> class. If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges. For more information, see [Code Access Security Basics](../../../../docs/framework/misc/code-access-security-basics.md).  \n  \n     The example assumes your form has a <xref:System.Windows.Forms.Button> control and an <xref:System.Windows.Forms.OpenFileDialog> component.  \n  \n    ```vb  \n    Private Sub Button1_Click(ByVal sender As System.Object, _  \n       ByVal e As System.EventArgs) Handles Button1.Click  \n       If OpenFileDialog1.ShowDialog() = System.Windows.Forms.DialogResult.OK Then  \n         Dim sr As New System.IO.StreamReader(OpenFileDialog1.FileName)  \n         MessageBox.Show(sr.ReadToEnd)  \n         sr.Close()  \n       End If  \n    End Sub  \n  \n    ```  \n  \n    ```csharp  \n    private void button1_Click(object sender, System.EventArgs e)  \n    {  \n       if(openFileDialog1.ShowDialog() == System.Windows.Forms.DialogResult.OK)  \n       {  \n          System.IO.StreamReader sr = new   \n             System.IO.StreamReader(openFileDialog1.FileName);  \n          MessageBox.Show(sr.ReadToEnd());  \n          sr.Close();  \n       }  \n    }  \n  \n    ```  \n  \n    ```cpp  \n    private:  \n       void button1_Click(System::Object ^ sender,  \n          System::EventArgs ^ e)  \n       {  \n          if(openFileDialog1->ShowDialog() == System::Windows::Forms::DialogResult::OK)  \n          {  \n             System::IO::StreamReader ^ sr = gcnew  \n                System::IO::StreamReader(openFileDialog1->FileName);  \n             MessageBox::Show(sr->ReadToEnd());  \n             sr->Close();  \n          }  \n       }  \n    ```  \n  \n     ([!INCLUDE[csprcs](../../../../includes/csprcs-md.md)] and [!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]) Place the following code in the form's constructor to register the event handler.  \n  \n    ```csharp  \n    this.button1.Click += new System.EventHandler(this.button1_Click);  \n  \n    ```  \n  \n    ```cpp  \n    this->button1->Click += gcnew  \n       System::EventHandler(this, &Form1::button1_Click);  \n    ```  \n  \n    > [!NOTE]\n    >  For more information about reading from file streams, see <xref:System.IO.FileStream.BeginRead%2A> and <xref:System.IO.FileStream.Read%2A>.  \n  \n### To open a file as a file using the OpenFileDialog component  \n  \n1.  Use the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method to display the dialog box and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method to open the file.  \n  \n     The <xref:System.Windows.Forms.OpenFileDialog> component's <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method returns the bytes that compose the file. These bytes give you a stream to read from. In the example below, an <xref:System.Windows.Forms.OpenFileDialog> component is instantiated with a \"cursor\" filter on it, allowing the user to choose only files with the file name extension`.cur`. If a`.cur` file is chosen, the form's cursor is set to the selected cursor.  \n  \n    > [!IMPORTANT]\n    >  To call the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method, your assembly requires a privilege level granted by the <xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName> class. If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges. For more information, see [Code Access Security Basics](../../../../docs/framework/misc/code-access-security-basics.md).  \n  \n     The example assumes your form has a <xref:System.Windows.Forms.Button> control.  \n  \n    ```vb  \n    Private Sub Button1_Click(ByVal sender As System.Object, _  \n       ByVal e As System.EventArgs) Handles Button1.Click  \n       ' Displays an OpenFileDialog so the user can select a Cursor.  \n       Dim openFileDialog1 As New OpenFileDialog()  \n       openFileDialog1.Filter = \"Cursor Files|*.cur\"  \n       openFileDialog1.Title = \"Select a Cursor File\"  \n  \n       ' Show the Dialog.  \n       ' If the user clicked OK in the dialog and   \n       ' a .CUR file was selected, open it.  \n       If openFileDialog1.ShowDialog() = System.Windows.Forms.DialogResult.OK Then  \n         ' Assign the cursor in the Stream to the Form's Cursor property.  \n         Me.Cursor = New Cursor(openFileDialog1.OpenFile())  \n       End If  \n    End Sub  \n  \n    ```  \n  \n    ```csharp  \n    private void button1_Click(object sender, System.EventArgs e)  \n    {  \n       // Displays an OpenFileDialog so the user can select a Cursor.  \n       OpenFileDialog openFileDialog1 = new OpenFileDialog();  \n       openFileDialog1.Filter = \"Cursor Files|*.cur\";  \n       openFileDialog1.Title = \"Select a Cursor File\";  \n  \n       // Show the Dialog.  \n       // If the user clicked OK in the dialog and  \n       // a .CUR file was selected, open it.  \n        if (openFileDialog1.ShowDialog() == System.Windows.Forms.DialogResult.OK)  \n       {  \n          // Assign the cursor in the Stream to the Form's Cursor property.  \n          this.Cursor = new Cursor(openFileDialog1.OpenFile());  \n       }  \n    }  \n  \n    ```  \n  \n    ```cpp  \n    private:  \n       void button1_Click(System::Object ^ sender,  \n          System::EventArgs ^ e)  \n       {  \n          // Displays an OpenFileDialog so the user can select a Cursor.  \n          OpenFileDialog ^ openFileDialog1 = new OpenFileDialog();  \n          openFileDialog1->Filter = \"Cursor Files|*.cur\";  \n          openFileDialog1->Title = \"Select a Cursor File\";  \n  \n          // Show the Dialog.  \n          // If the user clicked OK in the dialog and  \n          // a .CUR file was selected, open it.  \n          if (openFileDialog1->ShowDialog() == System::Windows::Forms::DialogResult::OK)  \n          {  \n             // Assign the cursor in the Stream to  \n             // the Form's Cursor property.  \n             this->Cursor = gcnew  \n                System::Windows::Forms::Cursor(  \n                openFileDialog1->OpenFile());  \n          }  \n       }  \n  \n    ```  \n  \n     ([!INCLUDE[csprcs](../../../../includes/csprcs-md.md)] and [!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]) Place the following code in the form's constructor to register the event handler.  \n  \n    ```csharp  \n    this.button1.Click += new System.EventHandler(this.button1_Click);  \n  \n    ```  \n  \n    ```cpp  \n    this->button1->Click += gcnew  \n       System::EventHandler(this, &Form1::button1_Click);  \n    ```  \n  \n## See Also  \n <xref:System.Windows.Forms.OpenFileDialog>   \n [OpenFileDialog Component](../../../../docs/framework/winforms/controls/openfiledialog-component-windows-forms.md)","nodes":[{"pos":[4,602],"embed":true,"restype":"x-metadata","content":"title: \"How to: Open Files Using the OpenFileDialog Component | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"OpenFileDialog component, opening files\"\n  - \"OpenFile method\"\n  - \"OpenFile method, OpenFileDialog component\"\n  - \"files, opening with OpenFileDialog component\"\nms.assetid: 9d88367a-cc21-4ffd-be74-89fd63767d35\ncaps.latest.revision: 21\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Open Files Using the OpenFileDialog Component | Microsoft Docs","nodes":[{"pos":[0,70],"content":"How to: Open Files Using the OpenFileDialog Component | Microsoft Docs","nodes":[{"content":"How to: Open Files Using the OpenFileDialog Component | Microsoft Docs","pos":[0,70]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[609,662],"content":"How to: Open Files Using the OpenFileDialog Component","linkify":"How to: Open Files Using the OpenFileDialog Component","nodes":[{"content":"How to: Open Files Using the OpenFileDialog Component","pos":[0,53]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component allows users to browse the folders of their computer or any computer on the network and select one or more files to open.","pos":[663,841],"source":"The <xref:System.Windows.Forms.OpenFileDialog> component allows users to browse the folders of their computer or any computer on the network and select one or more files to open."},{"content":"The dialog box returns the path and name of the file the user selected in the dialog box.","pos":[842,931]},{"content":"Once the user has selected the file to be opened, there are two approaches to the mechanism of opening the file.","pos":[938,1050]},{"content":"If you prefer to work with file streams, you can create an instance of the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> class.","pos":[1051,1162],"source":" If you prefer to work with file streams, you can create an instance of the <xref:System.IO.StreamReader> class."},{"content":"Alternately, you can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method to open the selected file.","pos":[1163,1280],"source":" Alternately, you can use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method to open the selected file."},{"content":"The first example below involves a <ph id=\"ph1\">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> permission check (as described in the \"Security Note\" below), but gives you access to the filename.","pos":[1287,1473],"source":"The first example below involves a <xref:System.Security.Permissions.FileIOPermission> permission check (as described in the \"Security Note\" below), but gives you access to the filename."},{"content":"You can use this technique from the Local Machine, Intranet, and Internet zones.","pos":[1474,1554]},{"content":"The second method also does a <ph id=\"ph1\">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> permission check, but is better suited for applications in the Intranet or Internet zones.","pos":[1555,1727],"source":" The second method also does a <xref:System.Security.Permissions.FileIOPermission> permission check, but is better suited for applications in the Intranet or Internet zones."},{"pos":[1737,1798],"content":"To open a file as a stream using the OpenFileDialog component","linkify":"To open a file as a stream using the OpenFileDialog component","nodes":[{"content":"To open a file as a stream using the OpenFileDialog component","pos":[0,61]}]},{"pos":[1808,1901],"content":"Display the <bpt id=\"p1\">**</bpt>Open File<ept id=\"p1\">**</ept> dialog box and call a method to open the file selected by the user.","source":"Display the **Open File** dialog box and call a method to open the file selected by the user."},{"pos":[1912,2118],"content":"One approach is to use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph> method to display the Open File dialog box, and use an instance of the <ph id=\"ph2\">&lt;xref:System.IO.StreamReader&gt;</ph> class to open the file.","source":"One approach is to use the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method to display the Open File dialog box, and use an instance of the <xref:System.IO.StreamReader> class to open the file."},{"content":"The example below uses the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler to open an instance of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component.","pos":[2129,2337],"source":"The example below uses the <xref:System.Windows.Forms.Button> control's <xref:System.Windows.Forms.Control.Click> event handler to open an instance of the <xref:System.Windows.Forms.OpenFileDialog> component."},{"content":"When a file is chosen and the user clicks <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>, the file selected in the dialog box opens.","pos":[2338,2430],"source":" When a file is chosen and the user clicks **OK**, the file selected in the dialog box opens."},{"content":"In this case, the contents are displayed in a message box, just to show that the file stream has been read.","pos":[2431,2538]},{"pos":[2550,3025],"content":"[!IMPORTANT]\nTo get or set the <xref:System.Windows.Forms.FileDialog.FileName%2A> property, your assembly requires a privilege level granted by the <xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName> class. If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges. For more information, see [Code Access Security Basics](../../../../docs/framework/misc/code-access-security-basics.md).","leadings":["","    >  "],"nodes":[{"content":"To get or set the <xref:System.Windows.Forms.FileDialog.FileName%2A> property, your assembly requires a privilege level granted by the <xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName> class. If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges. For more information, see [Code Access Security Basics](../../../../docs/framework/misc/code-access-security-basics.md).","pos":[13,468],"nodes":[{"content":"To get or set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.FileName%2A&gt;</ph> property, your assembly requires a privilege level granted by the <ph id=\"ph2\">&lt;xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName&gt;</ph> class.","pos":[0,218],"source":"To get or set the <xref:System.Windows.Forms.FileDialog.FileName%2A> property, your assembly requires a privilege level granted by the <xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName> class."},{"content":"If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges.","pos":[219,334]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Code Access Security Basics<ept id=\"p1\">](../../../../docs/framework/misc/code-access-security-basics.md)</ept>.","pos":[335,455],"source":" For more information, see [Code Access Security Basics](../../../../docs/framework/misc/code-access-security-basics.md)."}]}]},{"pos":[3036,3175],"content":"The example assumes your form has a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control and an <ph id=\"ph2\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component.","source":"The example assumes your form has a <xref:System.Windows.Forms.Button> control and an <xref:System.Windows.Forms.OpenFileDialog> component."},{"pos":[4461,4656],"content":"(<ph id=\"ph1\">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]</ph>) Place the following code in the form's constructor to register the event handler.","source":"([!INCLUDE[csprcs](../../../../includes/csprcs-md.md)] and [!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]) Place the following code in the form's constructor to register the event handler."},{"pos":[4895,5049],"content":"[!NOTE]\nFor more information about reading from file streams, see <xref:System.IO.FileStream.BeginRead%2A> and <xref:System.IO.FileStream.Read%2A>.","leadings":["","    >  "],"nodes":[{"content":"For more information about reading from file streams, see <ph id=\"ph1\">&lt;xref:System.IO.FileStream.BeginRead%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.FileStream.Read%2A&gt;</ph>.","pos":[8,147],"source":"For more information about reading from file streams, see <xref:System.IO.FileStream.BeginRead%2A> and <xref:System.IO.FileStream.Read%2A>."}]},{"pos":[5059,5118],"content":"To open a file as a file using the OpenFileDialog component","linkify":"To open a file as a file using the OpenFileDialog component","nodes":[{"content":"To open a file as a file using the OpenFileDialog component","pos":[0,59]}]},{"pos":[5128,5311],"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph> method to display the dialog box and the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method to open the file.","source":"Use the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method to display the dialog box and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method to open the file."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method returns the bytes that compose the file.","pos":[5322,5483],"source":"The <xref:System.Windows.Forms.OpenFileDialog> component's <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method returns the bytes that compose the file."},{"content":"These bytes give you a stream to read from.","pos":[5484,5527]},{"content":"In the example below, an <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> component is instantiated with a \"cursor\" filter on it, allowing the user to choose only files with the file name extension<ph id=\"ph2\">`.cur`</ph>.","pos":[5528,5726],"source":" In the example below, an <xref:System.Windows.Forms.OpenFileDialog> component is instantiated with a \"cursor\" filter on it, allowing the user to choose only files with the file name extension`.cur`."},{"content":"If a<ph id=\"ph1\">`.cur`</ph> file is chosen, the form's cursor is set to the selected cursor.","pos":[5727,5802],"source":" If a`.cur` file is chosen, the form's cursor is set to the selected cursor."},{"pos":[5814,6285],"content":"[!IMPORTANT]\nTo call the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method, your assembly requires a privilege level granted by the <xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName> class. If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges. For more information, see [Code Access Security Basics](../../../../docs/framework/misc/code-access-security-basics.md).","leadings":["","    >  "],"nodes":[{"content":"To call the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method, your assembly requires a privilege level granted by the <xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName> class. If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges. For more information, see [Code Access Security Basics](../../../../docs/framework/misc/code-access-security-basics.md).","pos":[13,464],"nodes":[{"content":"To call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method, your assembly requires a privilege level granted by the <ph id=\"ph2\">&lt;xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName&gt;</ph> class.","pos":[0,214],"source":"To call the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method, your assembly requires a privilege level granted by the <xref:System.Security.Permissions.FileIOPermission?displayProperty=fullName> class."},{"content":"If you are running in a partial-trust context, the process might throw an exception due to insufficient privileges.","pos":[215,330]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Code Access Security Basics<ept id=\"p1\">](../../../../docs/framework/misc/code-access-security-basics.md)</ept>.","pos":[331,451],"source":" For more information, see [Code Access Security Basics](../../../../docs/framework/misc/code-access-security-basics.md)."}]}]},{"pos":[6296,6375],"content":"The example assumes your form has a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.","source":"The example assumes your form has a <xref:System.Windows.Forms.Button> control."},{"pos":[8816,9011],"content":"(<ph id=\"ph1\">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]</ph>) Place the following code in the form's constructor to register the event handler.","source":"([!INCLUDE[csprcs](../../../../includes/csprcs-md.md)] and [!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]) Place the following code in the form's constructor to register the event handler."},{"pos":[9247,9255],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>OpenFileDialog Component<ept id=\"p1\">](../../../../docs/framework/winforms/controls/openfiledialog-component-windows-forms.md)</ept>","pos":[9306,9420],"source":"[OpenFileDialog Component](../../../../docs/framework/winforms/controls/openfiledialog-component-windows-forms.md)"}]}