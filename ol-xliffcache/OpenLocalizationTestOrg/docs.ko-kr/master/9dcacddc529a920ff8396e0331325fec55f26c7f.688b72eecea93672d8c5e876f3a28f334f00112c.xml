{"content":"---\ntitle: \"How to: Generate Text Files from XML (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 3b33f191-4abe-4419-b81b-3cb81d9a317f\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\n---\n# How to: Generate Text Files from XML (Visual Basic)\nThis example shows how to generate a comma-separated values (CSV) file from an XML file.  \n  \n## Example  \n The [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] version uses procedural code to aggregate the collection of strings into a single string.  \n  \n This example uses the following XML document: [Sample XML File: Customers and Orders (LINQ to XML)](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml.md).  \n  \n```vb  \nDim custOrd As XElement = XElement.Load(\"CustomersOrders.xml\")  \nDim strCollection As IEnumerable(Of String) = _  \n    From el In custOrd.<Customers>.<Customer> _  \n    Select _  \n        String.Format(\"{0},{1},{2},{3},{4},{5},{6},{7},{8},{9}{10}\", _  \n            el.@CustomerID, _  \n            el.<CompanyName>.Value, _  \n            el.<ContactName>.Value, _  \n            el.<ContactTitle>.Value, _  \n            el.<Phone>.Value, _  \n            el.<FullAddress>.<Address>.Value, _  \n            el.<FullAddress>.<City>.Value, _  \n            el.<FullAddress>.<Region>.Value, _  \n            el.<FullAddress>.<PostalCode>.Value, _  \n            el.<FullAddress>.<Country>.Value, _  \n            Environment.NewLine _  \n        )  \nDim sb As StringBuilder = New StringBuilder()  \nFor Each str As String In strCollection  \n    sb.Append(str)  \nNext  \nConsole.WriteLine(sb.ToString())  \n```  \n  \n This code produces the following output:  \n  \n```  \nGREAL,Great Lakes Food Market,Howard Snyder,Marketing Manager,(503) 555-7555,2732 Baker Blvd.,Eugene,OR,97403,USA  \nHUNGC,Hungry Coyote Import Store,Yoshi Latimer,Sales Representative,(503) 555-6874,City Center Plaza 516 Main St.,Elgin,OR,97827,USA  \nLAZYK,Lazy K Kountry Store,John Steel,Marketing Manager,(509) 555-7969,12 Orchestra Terrace,Walla Walla,WA,99362,USA  \nLETSS,Let's Stop N Shop,Jaime Yorres,Owner,(415) 555-5938,87 Polk St. Suite 5,San Francisco,CA,94117,USA  \n```  \n  \n## See Also  \n [Projections and Transformations (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)","nodes":[{"pos":[12,80],"content":"How to: Generate Text Files from XML (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Generate Text Files from XML (Visual Basic) | Microsoft Docs","pos":[0,68]}]},{"pos":[387,438],"content":"How to: Generate Text Files from XML (Visual Basic)","linkify":"How to: Generate Text Files from XML (Visual Basic)","nodes":[{"content":"How to: Generate Text Files from XML (Visual Basic)","pos":[0,51]}]},{"content":"This example shows how to generate a comma-separated values (CSV) file from an XML file.","pos":[439,527]},{"pos":[536,543],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[547,733],"content":"The <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> version uses procedural code to aggregate the collection of strings into a single string.","source":"The [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] version uses procedural code to aggregate the collection of strings into a single string."},{"pos":[740,950],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Customers and Orders (LINQ to XML)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Customers and Orders (LINQ to XML)](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml.md)."},{"content":"This code produces the following output:","pos":[1864,1904]},{"pos":[2405,2413],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2417,2584],"content":"<bpt id=\"p1\">[</bpt>Projections and Transformations (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)</ept>","source":"[Projections and Transformations (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)"}]}