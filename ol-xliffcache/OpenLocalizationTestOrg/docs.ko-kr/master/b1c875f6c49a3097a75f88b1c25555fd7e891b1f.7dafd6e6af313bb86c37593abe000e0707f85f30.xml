{"content":"---\ntitle: \"WIF Code Sample Index\"\nms.date: \"03/30/2017\"\nms.assetid: 6711f01a-4743-43ce-95ab-5e2302a363ea\nauthor: \"BrucePerlerMS\"\n---\n\n# WIF Code Sample Index\n\nThe following are code samples for Windows Identity Foundation 4.5:\n\n- [ClaimsAwareWebApp](https://go.microsoft.com/fwlink/?LinkID=248405) - this sample demonstrates basic use of authentication externalization (to the local test Security Token Service from the Identity and Access Tool for Visual Studio 11) on a classic ASP.NET application (as opposed to a web site).\n\n- [ClaimsAwareWebService](https://go.microsoft.com/fwlink/?LinkID=248406) - this sample demonstrates basic use of authentication externalization on a classic WCF service.\n\n- [ClaimsAwareMvcApplication](https://go.microsoft.com/fwlink/?LinkID=248407) - this sample demonstrates how to integrate WIF with MVC, including non-blanket protection and code which honors the forms authentication redirects out of the LogOn controller.\n\n- [ClaimsAwareWebFarm](https://go.microsoft.com/fwlink/?LinkID=248408) - this sample demonstrates a farm ready session cache (as opposed to a tokenreplycache) so that you can use sessions by reference instead of exchanging big cookies. It also demonstrates an easier way of securing cookies in a farm.\n\n- [ClaimsAwareFormsAuthentication](https://go.microsoft.com/fwlink/?LinkID=248409) - this very simple sample demonstrates that in .NET 4.5 you get claims in your principals regardless of how you authenticate your users.\n\n- [ClaimsBasedAuthorization](https://go.microsoft.com/fwlink/?LinkID=248410)- this samples shows how to use your ClaimsAuthorizationManager class and the ClaimsAuthorizationModule for applying your own authorization policies.\n\n- [FederationMetadata](https://go.microsoft.com/fwlink/?LinkID=248411) – this sample demonstrates both dynamic generation (on a custom STS) and dynamic consumption (on a relying party application) of metadata documents.\n\n- [CustomToken](https://go.microsoft.com/fwlink/?LinkID=248412) – this sample demonstrates how to build a custom Simple Web Token (SWT) token type.\n\n## See also\n\n- [Windows Identity Foundation](../../../docs/framework/security/index.md)\n","nodes":[{"pos":[4,129],"embed":true,"restype":"x-metadata","content":"title: \"WIF Code Sample Index\"\nms.date: \"03/30/2017\"\nms.assetid: 6711f01a-4743-43ce-95ab-5e2302a363ea\nauthor: \"BrucePerlerMS\"","nodes":[{"content":"WIF Code Sample Index","nodes":[{"pos":[0,21],"content":"WIF Code Sample Index","nodes":[{"content":"WIF Code Sample Index","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[137,158],"content":"WIF Code Sample Index","linkify":"WIF Code Sample Index","nodes":[{"content":"WIF Code Sample Index","pos":[0,21]}]},{"content":"The following are code samples for Windows Identity Foundation 4.5:","pos":[160,227]},{"pos":[231,528],"content":"<bpt id=\"p1\">[</bpt>ClaimsAwareWebApp<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=248405)</ept> - this sample demonstrates basic use of authentication externalization (to the local test Security Token Service from the Identity and Access Tool for Visual Studio 11) on a classic ASP.NET application (as opposed to a web site).","source":"[ClaimsAwareWebApp](https://go.microsoft.com/fwlink/?LinkID=248405) - this sample demonstrates basic use of authentication externalization (to the local test Security Token Service from the Identity and Access Tool for Visual Studio 11) on a classic ASP.NET application (as opposed to a web site)."},{"pos":[532,700],"content":"<bpt id=\"p1\">[</bpt>ClaimsAwareWebService<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=248406)</ept> - this sample demonstrates basic use of authentication externalization on a classic WCF service.","source":"[ClaimsAwareWebService](https://go.microsoft.com/fwlink/?LinkID=248406) - this sample demonstrates basic use of authentication externalization on a classic WCF service."},{"pos":[704,956],"content":"<bpt id=\"p1\">[</bpt>ClaimsAwareMvcApplication<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=248407)</ept> - this sample demonstrates how to integrate WIF with MVC, including non-blanket protection and code which honors the forms authentication redirects out of the LogOn controller.","source":"[ClaimsAwareMvcApplication](https://go.microsoft.com/fwlink/?LinkID=248407) - this sample demonstrates how to integrate WIF with MVC, including non-blanket protection and code which honors the forms authentication redirects out of the LogOn controller."},{"content":"<bpt id=\"p1\">[</bpt>ClaimsAwareWebFarm<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=248408)</ept> - this sample demonstrates a farm ready session cache (as opposed to a tokenreplycache) so that you can use sessions by reference instead of exchanging big cookies.","pos":[960,1193],"source":"[ClaimsAwareWebFarm](https://go.microsoft.com/fwlink/?LinkID=248408) - this sample demonstrates a farm ready session cache (as opposed to a tokenreplycache) so that you can use sessions by reference instead of exchanging big cookies."},{"content":"It also demonstrates an easier way of securing cookies in a farm.","pos":[1194,1259]},{"pos":[1263,1480],"content":"<bpt id=\"p1\">[</bpt>ClaimsAwareFormsAuthentication<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=248409)</ept> - this very simple sample demonstrates that in .NET 4.5 you get claims in your principals regardless of how you authenticate your users.","source":"[ClaimsAwareFormsAuthentication](https://go.microsoft.com/fwlink/?LinkID=248409) - this very simple sample demonstrates that in .NET 4.5 you get claims in your principals regardless of how you authenticate your users."},{"pos":[1484,1707],"content":"<bpt id=\"p1\">[</bpt>ClaimsBasedAuthorization<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=248410)</ept>- this samples shows how to use your ClaimsAuthorizationManager class and the ClaimsAuthorizationModule for applying your own authorization policies.","source":"[ClaimsBasedAuthorization](https://go.microsoft.com/fwlink/?LinkID=248410)- this samples shows how to use your ClaimsAuthorizationManager class and the ClaimsAuthorizationModule for applying your own authorization policies."},{"pos":[1711,1928],"content":"<bpt id=\"p1\">[</bpt>FederationMetadata<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=248411)</ept> – this sample demonstrates both dynamic generation (on a custom STS) and dynamic consumption (on a relying party application) of metadata documents.","source":"[FederationMetadata](https://go.microsoft.com/fwlink/?LinkID=248411) – this sample demonstrates both dynamic generation (on a custom STS) and dynamic consumption (on a relying party application) of metadata documents."},{"pos":[1932,2077],"content":"<bpt id=\"p1\">[</bpt>CustomToken<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=248412)</ept> – this sample demonstrates how to build a custom Simple Web Token (SWT) token type.","source":"[CustomToken](https://go.microsoft.com/fwlink/?LinkID=248412) – this sample demonstrates how to build a custom Simple Web Token (SWT) token type."},{"pos":[2082,2090],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2094,2166],"content":"<bpt id=\"p1\">[</bpt>Windows Identity Foundation<ept id=\"p1\">](../../../docs/framework/security/index.md)</ept>","source":"[Windows Identity Foundation](../../../docs/framework/security/index.md)"}]}