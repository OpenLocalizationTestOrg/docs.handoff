{"content":"---\ntitle: \"Reflection (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: d991bc0f-d16a-4ac5-9351-70e5c5b9891b\n---\n# Reflection (Visual Basic)\nReflection provides objects (of type <xref:System.Type>) that describe assemblies, modules and types. You can use reflection to dynamically create an instance of a type, bind the type to an existing object, or get the type from an existing object and invoke its methods or access its fields and properties. If you are using attributes in your code, reflection enables you to access them. For more information, see [Attributes](../../../standard/attributes/index.md).  \n  \n Here's a simple example of reflection using the static method `GetType` - inherited by all types from the `Object` base class - to obtain the type of a variable:  \n  \n```vb  \n' Using GetType to obtain type information:  \nDim i As Integer = 42  \nDim type As System.Type = i.GetType()  \nSystem.Console.WriteLine(type)  \n```  \n  \n The output is:  \n  \n `System.Int32`  \n  \n The following example uses reflection to obtain the full name of the loaded assembly.  \n  \n```vb  \n' Using Reflection to get information from an Assembly:  \nDim info As System.Reflection.Assembly = GetType(System.Int32).Assembly  \nSystem.Console.WriteLine(info)  \n```  \n  \n The output is:  \n  \n `mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089`  \n  \n## Reflection Overview  \n Reflection is useful in the following situations:  \n  \n-   When you have to access attributes in your program's metadata. For more information, see [Retrieving Information Stored in Attributes](../../../standard/attributes/retrieving-information-stored-in-attributes.md).  \n  \n-   For examining and instantiating types in an assembly.  \n  \n-   For building new types at runtime. Use classes in <xref:System.Reflection.Emit>.  \n  \n-   For performing late binding, accessing methods on types created at run time. See the topic [Dynamically Loading and Using Types](../../../framework/reflection-and-codedom/dynamically-loading-and-using-types.md).  \n  \n## Related Sections  \n For more information:  \n  \n-   [Reflection](../../../framework/reflection-and-codedom/reflection.md)  \n  \n-   [Viewing Type Information](../../../framework/reflection-and-codedom/viewing-type-information.md)  \n  \n-   [Reflection and Generic Types](../../../framework/reflection-and-codedom/reflection-and-generic-types.md)  \n  \n-   <xref:System.Reflection.Emit>  \n  \n-   [Retrieving Information Stored in Attributes](../../../standard/attributes/retrieving-information-stored-in-attributes.md)  \n  \n## See also\n\n- [Visual Basic Programming Guide](../../../visual-basic/programming-guide/index.md)\n- [Assemblies in the Common Language Runtime](../../../framework/app-domains/assemblies-in-the-common-language-runtime.md)\n","nodes":[{"pos":[4,107],"embed":true,"restype":"x-metadata","content":"title: \"Reflection (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: d991bc0f-d16a-4ac5-9351-70e5c5b9891b","nodes":[{"content":"Reflection (Visual Basic)","nodes":[{"pos":[0,25],"content":"Reflection (Visual Basic)","nodes":[{"content":"Reflection (Visual Basic)","pos":[0,25]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[114,139],"content":"Reflection (Visual Basic)","linkify":"Reflection (Visual Basic)","nodes":[{"content":"Reflection (Visual Basic)","pos":[0,25]}]},{"content":"Reflection provides objects (of type <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph>) that describe assemblies, modules and types.","pos":[140,241],"source":"Reflection provides objects (of type <xref:System.Type>) that describe assemblies, modules and types."},{"content":"You can use reflection to dynamically create an instance of a type, bind the type to an existing object, or get the type from an existing object and invoke its methods or access its fields and properties.","pos":[242,446]},{"content":"If you are using attributes in your code, reflection enables you to access them.","pos":[447,527]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](../../../standard/attributes/index.md)</ept>.","pos":[528,606],"source":" For more information, see [Attributes](../../../standard/attributes/index.md)."},{"pos":[613,774],"content":"Here's a simple example of reflection using the static method <ph id=\"ph1\">`GetType`</ph> - inherited by all types from the <ph id=\"ph2\">`Object`</ph> base class - to obtain the type of a variable:","source":"Here's a simple example of reflection using the static method `GetType` - inherited by all types from the `Object` base class - to obtain the type of a variable:"},{"content":"The output is:","pos":[941,955]},{"content":"The following example uses reflection to obtain the full name of the loaded assembly.","pos":[983,1068]},{"content":"The output is:","pos":[1257,1271]},{"pos":[1364,1383],"content":"Reflection Overview","linkify":"Reflection Overview","nodes":[{"content":"Reflection Overview","pos":[0,19]}]},{"content":"Reflection is useful in the following situations:","pos":[1387,1436]},{"content":"When you have to access attributes in your program's metadata.","pos":[1446,1508]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Retrieving Information Stored in Attributes<ept id=\"p1\">](../../../standard/attributes/retrieving-information-stored-in-attributes.md)</ept>.","pos":[1509,1658],"source":" For more information, see [Retrieving Information Stored in Attributes](../../../standard/attributes/retrieving-information-stored-in-attributes.md)."},{"content":"For examining and instantiating types in an assembly.","pos":[1668,1721]},{"content":"For building new types at runtime.","pos":[1731,1765]},{"content":"Use classes in <ph id=\"ph1\">&lt;xref:System.Reflection.Emit&gt;</ph>.","pos":[1766,1811],"source":" Use classes in <xref:System.Reflection.Emit>."},{"content":"For performing late binding, accessing methods on types created at run time.","pos":[1821,1897]},{"content":"See the topic <bpt id=\"p1\">[</bpt>Dynamically Loading and Using Types<ept id=\"p1\">](../../../framework/reflection-and-codedom/dynamically-loading-and-using-types.md)</ept>.","pos":[1898,2032],"source":" See the topic [Dynamically Loading and Using Types](../../../framework/reflection-and-codedom/dynamically-loading-and-using-types.md)."},{"pos":[2041,2057],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"For more information:","pos":[2061,2082]},{"pos":[2092,2161],"content":"<bpt id=\"p1\">[</bpt>Reflection<ept id=\"p1\">](../../../framework/reflection-and-codedom/reflection.md)</ept>","source":"[Reflection](../../../framework/reflection-and-codedom/reflection.md)"},{"pos":[2171,2268],"content":"<bpt id=\"p1\">[</bpt>Viewing Type Information<ept id=\"p1\">](../../../framework/reflection-and-codedom/viewing-type-information.md)</ept>","source":"[Viewing Type Information](../../../framework/reflection-and-codedom/viewing-type-information.md)"},{"pos":[2278,2383],"content":"<bpt id=\"p1\">[</bpt>Reflection and Generic Types<ept id=\"p1\">](../../../framework/reflection-and-codedom/reflection-and-generic-types.md)</ept>","source":"[Reflection and Generic Types](../../../framework/reflection-and-codedom/reflection-and-generic-types.md)"},{"pos":[2432,2554],"content":"<bpt id=\"p1\">[</bpt>Retrieving Information Stored in Attributes<ept id=\"p1\">](../../../standard/attributes/retrieving-information-stored-in-attributes.md)</ept>","source":"[Retrieving Information Stored in Attributes](../../../standard/attributes/retrieving-information-stored-in-attributes.md)"},{"pos":[2563,2571],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2575,2657],"content":"<bpt id=\"p1\">[</bpt>Visual Basic Programming Guide<ept id=\"p1\">](../../../visual-basic/programming-guide/index.md)</ept>","source":"[Visual Basic Programming Guide](../../../visual-basic/programming-guide/index.md)"},{"pos":[2660,2780],"content":"<bpt id=\"p1\">[</bpt>Assemblies in the Common Language Runtime<ept id=\"p1\">](../../../framework/app-domains/assemblies-in-the-common-language-runtime.md)</ept>","source":"[Assemblies in the Common Language Runtime](../../../framework/app-domains/assemblies-in-the-common-language-runtime.md)"}]}