{"content":"---\ntitle: \"First operand in a binary &#39;If&#39; expression must be nullable or a reference type | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"bc33107\"\n  - \"vbc33107\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"BC33107\"\nms.assetid: 493c8899-3f6b-4471-8eb6-9284e8492768\ncaps.latest.revision: 5\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# First operand in a binary &#39;If&#39; expression must be nullable or a reference type\nAn `If` expression can take either two or three arguments. When you send only two arguments, the first argument must be a reference type or a nullable type. If the first argument evaluates to anything other than `Nothing`, its value is returned. If the first argument evaluates to `Nothing`, the second argument is evaluated and returned.  \n  \n For example, the following code contains two `If` expressions, one with three arguments and one with two arguments. The expressions calculate and return the same value.  \n  \n```vb  \n' firstChoice is a nullable value type.  \nDim firstChoice? As Integer = Nothing  \nDim secondChoice As Integer = 1128  \n' If expression with three arguments.  \nConsole.WriteLine(If(firstChoice IsNot Nothing, firstChoice, secondChoice))  \n' If expression with two arguments.  \nConsole.WriteLine(If(firstChoice, secondChoice))  \n```  \n  \n The following expressions cause this error:  \n  \n```vb  \nDim choice1 = 4  \nDim choice2 = 5  \nDim booleanVar = True  \n  \n' Not valid.  \n'Console.WriteLine(If(choice1 < choice2, 1))  \n' Not valid.  \n'Console.WriteLine(If(booleanVar, \"Test returns True.\"))  \n```  \n  \n **Error ID:** BC33107  \n  \n## To correct this error  \n  \n-   If you cannot change the code so that the first argument is a nullable type or reference type, consider converting to a three-argument `If` expression, or to an `If...Then...Else` statement.  \n  \n```vb  \nConsole.WriteLine(If(choice1 < choice2, 1, 2))  \nConsole.WriteLine(If(booleanVar, \"Test returns True.\", \"Test returns False.\"))  \n```  \n  \n## See Also  \n [If Operator](../../../visual-basic/language-reference/operators/if-operator.md)   \n [If...Then...Else Statement](../../../visual-basic/language-reference/statements/if-then-else-statement.md)   \n [Nullable Value Types](../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)","nodes":[{"pos":[12,115],"content":"First operand in a binary &#39;If&#39; expression must be nullable or a reference type | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"First operand in a binary &amp;#39;If&amp;#39; expression must be nullable or a reference type | Microsoft Docs","pos":[0,103],"source":"First operand in a binary &#39;If&#39; expression must be nullable or a reference type | Microsoft Docs"}]},{"pos":[653,739],"content":"First operand in a binary &#39;If&#39; expression must be nullable or a reference type","linkify":"First operand in a binary &#39;If&#39; expression must be nullable or a reference type","nodes":[{"content":"First operand in a binary &amp;#39;If&amp;#39; expression must be nullable or a reference type","pos":[0,86],"source":"First operand in a binary &#39;If&#39; expression must be nullable or a reference type"}]},{"content":"An <ph id=\"ph1\">`If`</ph> expression can take either two or three arguments.","pos":[740,798],"source":"An `If` expression can take either two or three arguments."},{"content":"When you send only two arguments, the first argument must be a reference type or a nullable type.","pos":[799,896]},{"content":"If the first argument evaluates to anything other than <ph id=\"ph1\">`Nothing`</ph>, its value is returned.","pos":[897,985],"source":" If the first argument evaluates to anything other than `Nothing`, its value is returned."},{"content":"If the first argument evaluates to <ph id=\"ph1\">`Nothing`</ph>, the second argument is evaluated and returned.","pos":[986,1078],"source":" If the first argument evaluates to `Nothing`, the second argument is evaluated and returned."},{"content":"For example, the following code contains two <ph id=\"ph1\">`If`</ph> expressions, one with three arguments and one with two arguments.","pos":[1085,1200],"source":"For example, the following code contains two `If` expressions, one with three arguments and one with two arguments."},{"content":"The expressions calculate and return the same value.","pos":[1201,1253]},{"content":"The following expressions cause this error:","pos":[1603,1646]},{"pos":[1869,1890],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC33107","source":"**Error ID:** BC33107"},{"pos":[1899,1920],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1930,2120],"content":"If you cannot change the code so that the first argument is a nullable type or reference type, consider converting to a three-argument <ph id=\"ph1\">`If`</ph> expression, or to an <ph id=\"ph2\">`If...Then...Else`</ph> statement.","source":"If you cannot change the code so that the first argument is a nullable type or reference type, consider converting to a three-argument `If` expression, or to an `If...Then...Else` statement."},{"pos":[2276,2284],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>If Operator<ept id=\"p1\">](../../../visual-basic/language-reference/operators/if-operator.md)</ept><ph id=\"ph1\"> </ph>","pos":[2288,2369],"source":"[If Operator](../../../visual-basic/language-reference/operators/if-operator.md) "},{"content":"<bpt id=\"p1\"> [</bpt>If...Then...Else Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/if-then-else-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2372,2481],"source":" [If...Then...Else Statement](../../../visual-basic/language-reference/statements/if-then-else-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Nullable Value Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)</ept>","pos":[2484,2601],"source":" [Nullable Value Types](../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)"}]}