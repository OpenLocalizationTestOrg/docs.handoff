{"content":"---\ntitle: \"Member '<membername>' implicitly defines a member '<implicitmembername>' which has the same name as a type parameter\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"BC32070\"\n  - \"vbc32070\"\nhelpviewer_keywords: \n  - \"BC32070\"\nms.assetid: cc0b3fcf-c141-47e2-9b33-d2b91c8bf2d6\n---\n# Member '\\<membername>' implicitly defines a member '\\<implicitmembername>' which has the same name as a type parameter\nA member of a generic class generates an implicit member with the same name as a type parameter for the class.  \n  \n The Visual Basic compiler creates implicit members corresponding to certain programming elements you declare. The following table summarizes these implicit, or *synthetic*, members.  \n  \n|Declared element|Implicitly created members|  \n|----------------------|--------------------------------|  \n|Enumeration|`value__` member|  \n|Event|`add_<eventname>` procedure<br /><br /> `remove_<eventname>` procedure<br /><br /> `<eventname>Event` field<br /><br /> `<eventname>EventHandler` delegate|  \n|Property|`get_<propertyname>` procedure<br /><br /> `set_<propertyname>` procedure|  \n|`My.` collection variable|`m_<variablename>` `Static` variable<br /><br /> `<variablename>` property<br /><br /> `get_<variablename>` procedure<br /><br /> `set_<variablename>` procedure|  \n|`WithEvents` variable|`_<variablename>` variable<br /><br /> `<variablename>` property<br /><br /> `get_<variablename>` procedure<br /><br /> `set_<variablename>` procedure|  \n  \n Because of the possibility of name conflicts, you should avoid naming any declared programming element using the same form as any of these implicit members. For example, you should avoid any element name that begins with `get_` or `set_`.  \n  \n **Error ID:** BC32070  \n  \n## To correct this error  \n  \n-   If the name of the type parameter is flexible, change it to avoid conflicts with the names listed in the preceding table.  \n  \n-   If the type parameter must retain its name, change the name of the class member to avoid conflicts with the names listed in the preceding table.  \n  \n## See also\n\n- [Declared Element Names](../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)\n- [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n- [Type List](../../visual-basic/language-reference/statements/type-list.md)\n","nodes":[{"pos":[4,277],"embed":true,"restype":"x-metadata","content":"title: \"Member '<membername>' implicitly defines a member '<implicitmembername>' which has the same name as a type parameter\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"BC32070\"\n  - \"vbc32070\"\nhelpviewer_keywords: \n  - \"BC32070\"\nms.assetid: cc0b3fcf-c141-47e2-9b33-d2b91c8bf2d6","nodes":[{"content":"Member '<membername>' implicitly defines a member '<implicitmembername>' which has the same name as a type parameter","nodes":[{"pos":[0,116],"content":"Member '<ph id=\"ph1\">&lt;membername&gt;</ph>' implicitly defines a member '<ph id=\"ph2\">&lt;implicitmembername&gt;</ph>' which has the same name as a type parameter","source":"Member '<membername>' implicitly defines a member '<implicitmembername>' which has the same name as a type parameter"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[284,402],"content":"Member '\\<membername>' implicitly defines a member '\\<implicitmembername>' which has the same name as a type parameter","linkify":"Member '\\<membername>' implicitly defines a member '\\<implicitmembername>' which has the same name as a type parameter","nodes":[{"content":"Member '<ph id=\"ph1\">\\&lt;</ph>membername&gt;' implicitly defines a member '<ph id=\"ph2\">\\&lt;</ph>implicitmembername&gt;' which has the same name as a type parameter","pos":[0,118],"source":"Member '\\<membername>' implicitly defines a member '\\<implicitmembername>' which has the same name as a type parameter"}]},{"content":"A member of a generic class generates an implicit member with the same name as a type parameter for the class.","pos":[403,513]},{"content":"The Visual Basic compiler creates implicit members corresponding to certain programming elements you declare.","pos":[520,629]},{"content":"The following table summarizes these implicit, or <bpt id=\"p1\">*</bpt>synthetic<ept id=\"p1\">*</ept>, members.","pos":[630,701],"source":" The following table summarizes these implicit, or *synthetic*, members."},{"content":"Declared element","pos":[708,724]},{"content":"Implicitly created members","pos":[725,751]},{"content":"Enumeration","pos":[816,827]},{"pos":[828,844],"content":"<ph id=\"ph1\">`value__`</ph> member","source":"`value__` member"},{"content":"Event","pos":[849,854]},{"content":"<ph id=\"ph1\">`add_&lt;eventname&gt;`</ph> procedure","pos":[855,882],"source":"`add_<eventname>` procedure"},{"content":"<ph id=\"ph1\">`remove_&lt;eventname&gt;`</ph> procedure","pos":[895,925],"source":"`remove_<eventname>` procedure"},{"content":"<ph id=\"ph1\">`&lt;eventname&gt;Event`</ph> field","pos":[938,962],"source":"`<eventname>Event` field"},{"content":"<ph id=\"ph1\">`&lt;eventname&gt;EventHandler`</ph> delegate","pos":[975,1009],"source":"`<eventname>EventHandler` delegate"},{"content":"Property","pos":[1014,1022]},{"content":"<ph id=\"ph1\">`get_&lt;propertyname&gt;`</ph> procedure","pos":[1023,1053],"source":"`get_<propertyname>` procedure"},{"content":"<ph id=\"ph1\">`set_&lt;propertyname&gt;`</ph> procedure","pos":[1066,1096],"source":"`set_<propertyname>` procedure"},{"pos":[1101,1126],"content":"<ph id=\"ph1\">`My.`</ph> collection variable","source":"`My.` collection variable"},{"content":"<ph id=\"ph1\">`m_&lt;variablename&gt;`</ph> <ph id=\"ph2\">`Static`</ph> variable","pos":[1127,1163],"source":"`m_<variablename>` `Static` variable"},{"content":"<ph id=\"ph1\">`&lt;variablename&gt;`</ph> property","pos":[1176,1201],"source":"`<variablename>` property"},{"content":"<ph id=\"ph1\">`get_&lt;variablename&gt;`</ph> procedure","pos":[1214,1244],"source":"`get_<variablename>` procedure"},{"content":"<ph id=\"ph1\">`set_&lt;variablename&gt;`</ph> procedure","pos":[1257,1287],"source":"`set_<variablename>` procedure"},{"pos":[1292,1313],"content":"<ph id=\"ph1\">`WithEvents`</ph> variable","source":"`WithEvents` variable"},{"content":"<ph id=\"ph1\">`_&lt;variablename&gt;`</ph> variable","pos":[1314,1340],"source":"`_<variablename>` variable"},{"content":"<ph id=\"ph1\">`&lt;variablename&gt;`</ph> property","pos":[1353,1378],"source":"`<variablename>` property"},{"content":"<ph id=\"ph1\">`get_&lt;variablename&gt;`</ph> procedure","pos":[1391,1421],"source":"`get_<variablename>` procedure"},{"content":"<ph id=\"ph1\">`set_&lt;variablename&gt;`</ph> procedure","pos":[1434,1464],"source":"`set_<variablename>` procedure"},{"content":"Because of the possibility of name conflicts, you should avoid naming any declared programming element using the same form as any of these implicit members.","pos":[1472,1628]},{"content":"For example, you should avoid any element name that begins with <ph id=\"ph1\">`get_`</ph> or <ph id=\"ph2\">`set_`</ph>.","pos":[1629,1710],"source":" For example, you should avoid any element name that begins with `get_` or `set_`."},{"pos":[1717,1738],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32070","source":"**Error ID:** BC32070"},{"pos":[1747,1768],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If the name of the type parameter is flexible, change it to avoid conflicts with the names listed in the preceding table.","pos":[1778,1899]},{"content":"If the type parameter must retain its name, change the name of the class member to avoid conflicts with the names listed in the preceding table.","pos":[1909,2053]},{"pos":[2062,2070],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2074,2198],"content":"<bpt id=\"p1\">[</bpt>Declared Element Names<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>","source":"[Declared Element Names](../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)"},{"pos":[2201,2316],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"},{"pos":[2319,2393],"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../visual-basic/language-reference/statements/type-list.md)</ept>","source":"[Type List](../../visual-basic/language-reference/statements/type-list.md)"}]}