{"content":"---\ntitle: \"Address Headers | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: b0c94d4a-3bde-4b4d-bb6d-9f12bc3a6940\ncaps.latest.revision: 10\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Address Headers\nThe Address Headers sample demonstrates how clients can pass reference parameters to a service using [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)].  \n  \n> [!NOTE]\n>  The setup procedure and build instructions for this sample are located at the end of this topic.  \n  \n The WS-Addressing specification defines the notion of an endpoint reference as a way to address a particular Web service endpoint. In [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], endpoint references are modeled using the `EndpointAddress` class - `EndpointAddress` is the type of the Address field of the `ServiceEndpoint` class.  \n  \n Part of the endpoint reference model is that each reference can carry some reference parameters that add extra identifying information. In [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], these reference parameters are modeled as instances of `AddressHeader` class.  \n  \n In this sample, the client adds a reference parameter to the `EndpointAddress` of the client endpoint. The service looks for this reference parameter and uses its value in the logic of its \"Hello\" service operation.  \n  \n## Client  \n For the client to send a reference parameter, it must add an `AddressHeader` to the `EndpointAddress` of the `ServiceEndpoint`. Because the `EndpointAddress` class is immutable, modification of an endpoint address must be done using the `EndpointAddressBuilder` class. The following code initializes the client to send a reference parameter as part of its message.  \n  \n```  \nHelloClient client = new HelloClient();  \nEndpointAddressBuilder builder =   \n    new EndpointAddressBuilder(client.Endpoint.Address);  \nAddressHeader header =   \n    AddressHeader.CreateAddressHeader(IDName, IDNamespace, \"John\");  \nbuilder.Headers.Add(header);  \nclient.Endpoint.Address = builder.ToEndpointAddress();  \n```  \n  \n The code creates an `EndpointAddressBuilder` using the original `EndpointAddress` as an initial value. It then adds a newly created address header; the call to `CreateAddressHeadercreates` a header with a particular name, namespace, and value. Here the value is \"John\". Once the header is added to the builder, the `ToEndpointAddress()` method converts the (mutable) builder back into an (immutable) endpoint address, which is assigned back to the client endpoint's Address field.  \n  \n Now when the client calls `Console.WriteLine(client.Hello());`, the service is able to get the value of this address parameter, as seen in the resulting output of the client.  \n  \n `Hello, John`  \n  \n## Server  \n The implementation of the service operation `Hello()` uses the current `OperationContext` to inspect the values of the headers on the incoming message.  \n  \n```  \nstring id = null;  \n// look at headers on incoming message  \nfor (int i = 0;   \n     i < OperationContext.Current.IncomingMessageHeaders.Count;   \n     ++i)  \n{  \n    MessageHeaderInfo h =   \n        OperationContext.Current.IncomingMessageHeaders[i];  \n    // for any reference parameters with the correct name & namespace  \n    if (h.IsReferenceParameter &&   \n        h.Name == IDName &&   \n        h.Namespace == IDNamespace)  \n    {  \n        // read the value of that header  \n        XmlReader xr =   \nOperationContext.Current.IncomingMessageHeaders.GetReaderAtHeader(i);  \n        id = xr.ReadElementContentAsString();  \n    }  \n}  \nreturn \"Hello, \" + id;  \n```  \n  \n The code iterates over all the headers on the incoming message, looking for headers that are reference parameters with the particular name and. When the parameter is found, it reads the value of the parameter and stores it in the \"id\" variable.  \n  \n#### To set up, build, and run the sample  \n  \n1.  Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md).  \n  \n2.  To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md).  \n  \n3.  To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md).  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Basic\\Client\\AddressHeaders`  \n  \n## See Also","nodes":[{"pos":[12,44],"content":"Address Headers | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Address Headers | Microsoft Docs","pos":[0,32]}]},{"pos":[343,358],"content":"Address Headers","linkify":"Address Headers","nodes":[{"content":"Address Headers","pos":[0,15]}]},{"pos":[359,516],"content":"The Address Headers sample demonstrates how clients can pass reference parameters to a service using <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph>.","source":"The Address Headers sample demonstrates how clients can pass reference parameters to a service using [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]."},{"pos":[524,631],"content":"[!NOTE]\n The setup procedure and build instructions for this sample are located at the end of this topic.","leadings":["","> "],"nodes":[{"content":"The setup procedure and build instructions for this sample are located at the end of this topic.","pos":[9,105]}]},{"content":"The WS-Addressing specification defines the notion of an endpoint reference as a way to address a particular Web service endpoint.","pos":[638,768]},{"content":"In <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, endpoint references are modeled using the <ph id=\"ph2\">`EndpointAddress`</ph> class - <ph id=\"ph3\">`EndpointAddress`</ph> is the type of the Address field of the <ph id=\"ph4\">`ServiceEndpoint`</ph> class.","pos":[769,979],"source":" In [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], endpoint references are modeled using the `EndpointAddress` class - `EndpointAddress` is the type of the Address field of the `ServiceEndpoint` class."},{"content":"Part of the endpoint reference model is that each reference can carry some reference parameters that add extra identifying information.","pos":[986,1121]},{"content":"In <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, these reference parameters are modeled as instances of <ph id=\"ph2\">`AddressHeader`</ph> class.","pos":[1122,1259],"source":" In [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], these reference parameters are modeled as instances of `AddressHeader` class."},{"content":"In this sample, the client adds a reference parameter to the <ph id=\"ph1\">`EndpointAddress`</ph> of the client endpoint.","pos":[1266,1368],"source":"In this sample, the client adds a reference parameter to the `EndpointAddress` of the client endpoint."},{"content":"The service looks for this reference parameter and uses its value in the logic of its \"Hello\" service operation.","pos":[1369,1481]},{"pos":[1490,1496],"content":"Client","linkify":"Client","nodes":[{"content":"Client","pos":[0,6]}]},{"content":"For the client to send a reference parameter, it must add an <ph id=\"ph1\">`AddressHeader`</ph> to the <ph id=\"ph2\">`EndpointAddress`</ph> of the <ph id=\"ph3\">`ServiceEndpoint`</ph>.","pos":[1500,1627],"source":"For the client to send a reference parameter, it must add an `AddressHeader` to the `EndpointAddress` of the `ServiceEndpoint`."},{"content":"Because the <ph id=\"ph1\">`EndpointAddress`</ph> class is immutable, modification of an endpoint address must be done using the <ph id=\"ph2\">`EndpointAddressBuilder`</ph> class.","pos":[1628,1768],"source":" Because the `EndpointAddress` class is immutable, modification of an endpoint address must be done using the `EndpointAddressBuilder` class."},{"content":"The following code initializes the client to send a reference parameter as part of its message.","pos":[1769,1864]},{"content":"The code creates an <ph id=\"ph1\">`EndpointAddressBuilder`</ph> using the original <ph id=\"ph2\">`EndpointAddress`</ph> as an initial value.","pos":[2207,2309],"source":"The code creates an `EndpointAddressBuilder` using the original `EndpointAddress` as an initial value."},{"content":"It then adds a newly created address header; the call to <ph id=\"ph1\">`CreateAddressHeadercreates`</ph> a header with a particular name, namespace, and value.","pos":[2310,2450],"source":" It then adds a newly created address header; the call to `CreateAddressHeadercreates` a header with a particular name, namespace, and value."},{"content":"Here the value is \"John\".","pos":[2451,2476]},{"content":"Once the header is added to the builder, the <ph id=\"ph1\">`ToEndpointAddress()`</ph> method converts the (mutable) builder back into an (immutable) endpoint address, which is assigned back to the client endpoint's Address field.","pos":[2477,2687],"source":" Once the header is added to the builder, the `ToEndpointAddress()` method converts the (mutable) builder back into an (immutable) endpoint address, which is assigned back to the client endpoint's Address field."},{"pos":[2694,2868],"content":"Now when the client calls <ph id=\"ph1\">`Console.WriteLine(client.Hello());`</ph>, the service is able to get the value of this address parameter, as seen in the resulting output of the client.","source":"Now when the client calls `Console.WriteLine(client.Hello());`, the service is able to get the value of this address parameter, as seen in the resulting output of the client."},{"pos":[2897,2903],"content":"Server","linkify":"Server","nodes":[{"content":"Server","pos":[0,6]}]},{"pos":[2907,3058],"content":"The implementation of the service operation <ph id=\"ph1\">`Hello()`</ph> uses the current <ph id=\"ph2\">`OperationContext`</ph> to inspect the values of the headers on the incoming message.","source":"The implementation of the service operation `Hello()` uses the current `OperationContext` to inspect the values of the headers on the incoming message."},{"content":"The code iterates over all the headers on the incoming message, looking for headers that are reference parameters with the particular name and.","pos":[3746,3889]},{"content":"When the parameter is found, it reads the value of the parameter and stores it in the \"id\" variable.","pos":[3890,3990]},{"pos":[4001,4037],"content":"To set up, build, and run the sample","linkify":"To set up, build, and run the sample","nodes":[{"content":"To set up, build, and run the sample","pos":[0,36]}]},{"pos":[4047,4246],"content":"Ensure that you have performed the <bpt id=\"p1\">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)</ept>.","source":"Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)."},{"pos":[4256,4465],"content":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in <bpt id=\"p1\">[</bpt>Building the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.","source":"To build the C# or Visual Basic .NET edition of the solution, follow the instructions in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md)."},{"pos":[4475,4683],"content":"To run the sample in a single- or cross-machine configuration, follow the instructions in <bpt id=\"p1\">[</bpt>Running the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/running-the-samples.md)</ept>.","source":"To run the sample in a single- or cross-machine configuration, follow the instructions in [Running the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/running-the-samples.md)."},{"pos":[4691,4823],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[4877,5203],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[5204,5254]},{"pos":[5338,5346],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}