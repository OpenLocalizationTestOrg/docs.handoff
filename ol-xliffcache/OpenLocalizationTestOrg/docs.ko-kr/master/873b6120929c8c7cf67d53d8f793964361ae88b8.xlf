<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="walkthrough-creating-a-cryptographic-application.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">873b6120929c8c7cf67d53d8f793964361ae88b8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\security\walkthrough-creating-a-cryptographic-application.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">493eabc9c4c4b1dcade3586facb74a88a9f0521d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4984a7331bf430eef437733a9e92a779ba0b9da0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Walkthrough: Creating a Cryptographic Application</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Creating a Cryptographic Application</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This walkthrough demonstrates how to encrypt and decrypt content.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The code examples are designed for a Windows Forms application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This application does not demonstrate real world scenarios, such as using smart cards.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Instead, it demonstrates the fundamentals of encryption and decryption.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This walkthrough uses the following guidelines for encryption:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> class, a symmetric algorithm, to encrypt and decrypt data by using its automatically generated <ph id="ph2">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>, an asymmetric algorithm, to encrypt and decrypt the key to the data encrypted by <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Asymmetric algorithms are best used for smaller amounts of data, such as a key.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you want to protect data on your computer instead of exchanging encrypted content with other people, consider using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ProtectedData&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Cryptography.ProtectedMemory&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following table summarizes the cryptographic tasks in this topic.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Task</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creating a Windows Forms application</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Lists the controls that are required to run the application.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Declaring global objects</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Declares string path variables, the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph>, and the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> to have global context of the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creating an asymmetric key</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creates an asymmetric public and private key value pair and assigns it a key container name.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Encrypting a file</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Displays a dialog box to select a file for encryption and encrypts the file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Decrypting a file</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Displays a dialog box to select an encrypted file for decryption and decrypts the file.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Getting a private key</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the full key pair using the key container name.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Exporting a public key</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Saves the key to an XML file with only public parameters.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Importing a public key</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Loads the key from an XML file into the key container.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Testing the application</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Lists procedures for testing this application.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You need the following components to complete this walkthrough:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>References to the <ph id="ph1">&lt;xref:System.IO&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography&gt;</ph> namespaces.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creating a Windows Forms Application</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Most of the code examples in this walkthrough are designed to be event handlers for button controls.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following table lists the controls required for the sample application and their required names to match the code examples.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Control</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Text property (as needed)</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Encrypt File</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Decrypt File</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Create Keys</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Export Public Key</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Import Public Key</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Get Private Key</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Double-click the buttons in the  Visual Studio designer to create their event handlers.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Declaring Global Objects</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add the following code to the Form's constructor.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Edit the string variables for your environment and preferences.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Creating an Asymmetric Key</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This task creates an asymmetric key that encrypts and decrypts the <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> key.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This key was used to encrypt the content and it displays the key container name on the label control.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Add the following code as the <ph id="ph1">`Click`</ph> event handler for the <ph id="ph2">`Create Keys`</ph> button (<ph id="ph3">`buttonCreateAsmKeys_Click`</ph>).</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Encrypting a File</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This task involves two methods: the event handler method for the <ph id="ph1">`Encrypt File`</ph> button (<ph id="ph2">`buttonEncryptFile_Click`</ph>) and the <ph id="ph3">`EncryptFile`</ph> method.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The first method displays a dialog box for selecting a file and passes the file name to the second method, which performs the encryption.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The encrypted content, key, and IV are all saved to one <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>, which is referred to as the encryption package.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`EncryptFile`</ph> method does the following:</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> symmetric algorithm to encrypt the content.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object to encrypt the <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> key.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Uses a <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object to read and encrypt the <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> of the source file, in blocks of bytes, into a destination <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> object for the encrypted file.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Determines the lengths of the encrypted key and IV, and creates byte arrays of their length values.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Writes the Key, IV, and their length values to the encrypted package.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The encryption package uses the following format:</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Key length, bytes 0 - 3</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>IV length, bytes 4 - 7</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Encrypted key</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>IV</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Cipher text</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can use the lengths of the key and IV to determine the starting points and lengths of all parts of the encryption package, which can then be used to decrypt the file.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Add the following code as the <ph id="ph1">`Click`</ph> event handler for the <ph id="ph2">`Encrypt File`</ph> button (<ph id="ph3">`buttonEncryptFile_Click`</ph>).</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`EncryptFile`</ph> method to the form.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Decrypting a File</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This task involves two methods, the event handler method for the <ph id="ph1">`Decrypt File`</ph> button (<ph id="ph2">`buttonDecryptFile_Click`</ph>), and the <ph id="ph3">`DecryptFile`</ph> method.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The first method displays a dialog box for selecting a file and passes its file name to the second method, which performs the decryption.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Decrypt`</ph> method does the following:</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> symmetric algorithm to decrypt the content.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Reads the first eight bytes of the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> of the encrypted package into byte arrays to obtain the lengths of the encrypted key and the IV.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Extracts the key and IV from the encryption package into byte arrays.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object to decrypt the <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> key.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Uses a <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object to read and decrypt the cipher text section of the <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> encryption package, in blocks of bytes, into the <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> object for the decrypted file.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When this is finished, the decryption is completed.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Add the following code as the <ph id="ph1">`Click`</ph> event handler for the <ph id="ph2">`Decrypt File`</ph> button.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`DecryptFile`</ph> method to the form.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Exporting a Public Key</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This task saves the key created by the <ph id="ph1">`Create Keys`</ph> button to a file.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>It exports only the public parameters.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This task simulates the scenario of Alice giving Bob her public key so that he can encrypt files for her.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>He and others who have that public key will not be able to decrypt them because they do not have the full key pair with private parameters.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Add the following code as the <ph id="ph1">`Click`</ph> event handler for the <ph id="ph2">`Export Public Key`</ph> button (<ph id="ph3">`buttonExportPublicKey_Click`</ph>).</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Importing a Public Key</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This task loads the key with only public parameters, as created by the <ph id="ph1">`Export Public Key`</ph> button, and sets it as the key container name.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This task simulates the scenario of Bob loading Alice's key with only public parameters so he can encrypt files for her.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Add the following code as the <ph id="ph1">`Click`</ph> event handler for the <ph id="ph2">`Import Public Key`</ph> button (<ph id="ph3">`buttonImportPublicKey_Click`</ph>).</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Getting a Private Key</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This task sets the key container name to the name of the key created by using the <ph id="ph1">`Create Keys`</ph> button.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The key container will contain the full key pair with private parameters.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This task simulates the scenario of Alice using her private key to decrypt files encrypted by Bob.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Add the following code as the <ph id="ph1">`Click`</ph> event handler for the <ph id="ph2">`Get Private Key`</ph> button (<ph id="ph3">`buttonGetPrivateKey_Click`</ph>).</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Testing the Application</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>After you have built the application, perform the following testing scenarios.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To create keys, encrypt, and decrypt</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Click the <ph id="ph1">`Create Keys`</ph> button.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The label displays the key name and shows that it is a full key pair.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Click the <ph id="ph1">`Export Public Key`</ph> button.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Note that exporting the public key parameters does not change the current key.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Click the <ph id="ph1">`Encrypt File`</ph> button and select a file.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Click the <ph id="ph1">`Decrypt File`</ph> button and select the file just encrypted.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Examine the file just decrypted.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Close the application and restart it to test retrieving persisted key containers in the next scenario.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To encrypt using the public key</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Click the <ph id="ph1">`Import Public Key`</ph> button.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The label displays the key name and shows that it is public only.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Click the <ph id="ph1">`Encrypt File`</ph> button and select a file.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Click the <ph id="ph1">`Decrypt File`</ph> button and select the file just encrypted.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This will fail because you must have the private key to decrypt.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This scenario demonstrates having only the public key to encrypt a file for another person.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Typically that person would give you only the public key and withhold the private key for decryption.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>To decrypt using the private key</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Click the <ph id="ph1">`Get Private Key`</ph> button.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The label displays the key name and shows whether it is the full key pair.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Click the <ph id="ph1">`Decrypt File`</ph> button and select the file just encrypted.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This will be successful because you have the full key pair to decrypt.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Cryptographic Services<ept id="p1">](../../../docs/standard/security/cryptographic-services.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>