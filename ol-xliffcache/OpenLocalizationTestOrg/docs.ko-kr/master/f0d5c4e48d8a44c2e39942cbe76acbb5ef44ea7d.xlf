<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="basics-of-net-framework-file-io-and-the-file-system.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0d5c4e48d8a44c2e39942cbe76acbb5ef44ea7d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\developing-apps\programming\drives-directories-files\basics-of-net-framework-file-io-and-the-file-system.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">030d1922f77730b6c4fa0af79e88d29eaa0b8eb2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c885ccc0249596903beba0a5230a96a5c0bae527</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Basics of .NET Framework File I/O and the File System (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Basics of .NET Framework File I/O and the File System (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Classes in the <ph id="ph1">&lt;xref:System.IO&gt;</ph> namespace are used to work with drives, files, and directories.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO&gt;</ph> namespace contains the <ph id="ph2">&lt;xref:System.IO.File&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Directory&gt;</ph> classes, which provide the <ph id="ph4">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> functionality that manipulates files and directories.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Because the methods of these objects are static or shared members, you can use them directly without creating an instance of the class first.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Associated with these classes are the <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> classes, which will be familiar to users of the <ph id="ph3">`My`</ph> feature.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To use these classes, you must fully qualify the names or import the appropriate namespaces by including the <ph id="ph1">`Imports`</ph> statement(s) at the beginning of the affected code.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Imports Statement (.NET Namespace and Type)<ept id="p1">](../../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Other topics in this section use the <ph id="ph1">`My.Computer.FileSystem`</ph> object instead of <ph id="ph2">`System.IO`</ph> classes to work with drives, files, and directories.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.FileSystem`</ph> object is intended primarily for use in Visual Basic programs.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`System.IO`</ph> classes are intended for use by any language that supports the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, including Visual Basic.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Definition of a Stream</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> uses streams to support reading from and writing to files.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can think of a stream as a one-dimensional set of contiguous data, which has a beginning and an end, and where the cursor indicates the current position in the stream.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Cursor shows current position in the filestream.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Stream Operations</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The data contained in the stream may come from memory, a file, or a TCP/IP socket.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Streams have fundamental operations that can be applied to them:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Reading<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can read from a stream, transferring data from the stream into a data structure, such as a string or an array of bytes.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Writing<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can write to a stream, transferring data from a data source into the stream.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Seeking<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can query and modify your position in the stream.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Composing Streams<ept id="p1">](../../../../standard/io/composing-streams.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Types of Streams</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, a stream is represented by the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which forms the abstract class for all other streams.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You cannot directly create an instance of the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class, but must use one of the classes it implements.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>There are many types of streams, but for the purposes of working with file input/output (I/O), the most important types are the <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> class, which provides a way to read from and write to files, and the <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> class, which provides a way to create files and directories in isolated storage.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Other streams that can be used when working with file I/O include:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following table lists tasks commonly accomplished with a stream:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Read and write to a data file</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](../../../../standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Read text from a file</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](../../../../standard/io/how-to-read-text-from-a-file.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Write text to a file</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](../../../../standard/io/how-to-write-text-to-a-file.md)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Read characters from a string</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read Characters from a String<ept id="p1">](../../../../standard/io/how-to-read-characters-from-a-string.md)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Write characters to a string</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Write Characters to a String<ept id="p1">](../../../../standard/io/how-to-write-characters-to-a-string.md)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Encrypt data</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Encrypting Data<ept id="p1">](../../../../standard/security/encrypting-data.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Decrypt data</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Decrypting Data<ept id="p1">](../../../../standard/security/decrypting-data.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>File Access and Attributes</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can control how files are created, opened, and shared with the <ph id="ph1">&lt;xref:System.IO.FileAccess&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.FileMode&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.FileShare&gt;</ph> enumerations, which contain the flags used by the constructors of the <ph id="ph4">&lt;xref:System.IO.FileStream&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, when you open or create a new <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>, the <ph id="ph2">&lt;xref:System.IO.FileMode&gt;</ph> enumeration allows you to specify whether the file is opened for appending, whether a new file is created if the specified file does not exist, whether the file is overwritten, and so forth.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> enumeration enables the gathering of file-specific information.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> enumeration returns the file's stored attributes, such as whether it is compressed, encrypted, hidden, read-only, an archive, a directory, a system file, or a temporary file.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following table lists tasks involving file access and file attributes:</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Open and append text to a log file</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](../../../../standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Determine the attributes of a file</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>File Permissions</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Controlling access to files and directories can be done with the <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This may be particularly important for developers working with Web Forms, which by default run within the context of a special local user account named ASPNET, which is created as part of the <ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> and <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> installations.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When such an application requests access to a resource, the ASPNET user account has limited permissions, which may prevent the user from performing actions such as writing to a file from a Web application.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Isolated File Storage</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Isolated storage is an attempt to solve problems created when working with files where the user or code may lack necessary permissions.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Isolated storage assigns each user a data compartment, which can hold one or more stores.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Stores can be isolated from each other by user and by assembly.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Only the user and assembly that created a store have access to it.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A store acts as a complete virtual file system—within one store you can create and manipulate directories and files.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following table lists tasks commonly associated with isolated file storage.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>See</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Create an isolated store</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Obtain Stores for Isolated Storage<ept id="p1">](../../../../standard/io/how-to-obtain-stores-for-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Enumerate isolated stores</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Enumerate Stores for Isolated Storage<ept id="p1">](../../../../standard/io/how-to-enumerate-stores-for-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Delete an isolated store</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Delete Stores in Isolated Storage<ept id="p1">](../../../../standard/io/how-to-delete-stores-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Create a file or directory in isolated storage</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create Files and Directories in Isolated Storage<ept id="p1">](../../../../standard/io/how-to-create-files-and-directories-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Find a file in isolated storage</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Find Existing Files and Directories in Isolated Storage<ept id="p1">](../../../../standard/io/how-to-find-existing-files-and-directories-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Read from or write to a file in isolated storage</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read and Write to Files in Isolated Storage<ept id="p1">](../../../../standard/io/how-to-read-and-write-to-files-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Delete a file or directory in isolated storage</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Delete Files and Directories in Isolated Storage<ept id="p1">](../../../../standard/io/how-to-delete-files-and-directories-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>File Events</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> component allows you to watch for changes in files and directories on your system or on any computer to which you have network access.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For example, if a file is modified, you might want to send a user an alert that the change has taken place.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When changes occur, one or more events are raised, stored in a buffer, and handed to the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> component for processing.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composing Streams<ept id="p1">](../../../../standard/io/composing-streams.md)</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>File and Stream I/O<ept id="p1">](../../../../standard/io/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Asynchronous File I/O<ept id="p1">](../../../../standard/io/asynchronous-file-i-o.md)</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Classes Used in .NET Framework File I/O and the File System (Visual Basic)<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/classes-used-in-net-framework-file-io-and-the-file-system.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>