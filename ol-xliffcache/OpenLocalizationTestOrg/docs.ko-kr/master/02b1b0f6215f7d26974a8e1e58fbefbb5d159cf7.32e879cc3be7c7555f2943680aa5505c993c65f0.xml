{"content":"---\ntitle: \"ServiceModel Metadata Utility Tool (Svcutil.exe)\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords:\n  - \"clients [WCF], building\"\n  - \"endpoints [WCF]\"\n  - \"Svcutil.exe\"\n  - \"clients [WCF], consuming services\"\nms.assetid: 1abf3d9f-b420-46f1-b628-df238751f308\n---\n# ServiceModel Metadata Utility Tool (Svcutil.exe)\n\nThe ServiceModel Metadata Utility tool is used to generate service model code from metadata documents, and metadata documents from service model code.\n\n## SvcUtil.exe\n\nThe ServiceModel Metadata Utility Tool can be found at the Windows SDK installation location, specifically *%ProgramFiles%\\Microsoft SDKs\\Windows\\v6.0\\Bin*.\n\n### Functionalities\n\nThe following table summarizes the various functionalities provided by this tool, and the corresponding topic that discusses how it is used:\n\n|Task|Topic|\n|----------|-----------|\n|Generates code from running services or static metadata documents.|[Generating a WCF Client from Service Metadata](../../../docs/framework/wcf/feature-details/generating-a-wcf-client-from-service-metadata.md)|\n|Exports metadata documents from compiled code.|[How to: Use Svcutil.exe to Export Metadata from Compiled Service Code](../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-export-metadata-from-compiled-service-code.md)|\n|Validates compiled service code.|[How to: Use Svcutil.exe to Validate Compiled Service Code](../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-validate-compiled-service-code.md)|\n|Downloads metadata documents from running services.|[How to: Use Svcutil.exe to Download Metadata Documents](../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-download-metadata-documents.md)|\n|Generates serialization code.|[How to: Improve the Startup Time of WCF Client Applications using the XmlSerializer](../../../docs/framework/wcf/feature-details/startup-time-of-wcf-client-applications-using-the-xmlserializer.md)|\n\n> [!CAUTION]\n> Svcutil overwrites existing files on a disk if the names supplied as parameters are identical. This can include code files, configuration, or metadata files. To avoid this when generating code and configuration files, use the `/mergeConfig` switch.\n>\n> In addition, the `/r` and `/ct` switches for referencing types are for generating data contracts. These switches do not work when using XmlSerializer.\n\n### Timeout\n\nThe tool has a five minute timeout when retrieving metadata. This timeout only applies to retrieving metadata over the network. It does not apply to any processing of that metadata.\n\n### Multi-targeting\n\nThe tool does not support multi-targeting. If you want to generate a .NET 4 artifact from *svcutil.exe*, use the *svcutil.exe* from the .NET 4 SDK. To generate a .NET 3.5 artifact, use the executable from the .NET 3.5 SDK.\n\n### Accessing WSDL Documents\n\nWhen you use Svcutil to access a WSDL document that has a reference to a security token service (STS), Svcutil makes a WS-MetadataExchange call to the STS. However, the service can expose its WSDL documents using either WS-MetadataExchange or HTTP GET. Therefore, if the STS has only exposed the WSDL document using HTTP GET, a client written in [!INCLUDE[vstecwinfx](../../../includes/vstecwinfx-md.md)] will fail. For clients written in [!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)], Svcutil attempts to use both WS-MetadataExchange and HTTP GET to obtain the STS WSDL.\n\n## Using SvcUtil.exe\n\n### Common Usages\n\nThe following table shows some commonly used options for this tool:\n\n|Option|Description|\n|------------|-----------------|\n|/directory:\\<directory>|Directory to create files in.<br /><br /> Default: The current directory.<br /><br /> Short form: `/d`|\n|/help|Displays the command syntax and options for the tool.<br /><br /> Short form: `/?`|\n|/noLogo|Suppress the copyright and banner message.|\n|/svcutilConfig:\\<configFile>|Specifies a custom configuration file to use instead of the App.config file. This can be used to register system.serviceModel extensions without altering the tool's configuration file.|\n|/target:\\<output type>|Specifies the output to be generated by the tool.<br /><br /> Valid values are code, metadata or xmlSerializer.<br /><br /> Short form: `/t`|\n\n### Code Generation\n\nSvcutil.exe can generate code for service contracts, clients and data types from metadata documents. These metadata documents can be on a durable storage, or be retrieved online. Online retrieval follows either the WS-Metadata Exchange protocol or the DISCO protocol (for details see the Metadata Download section).\n\nYou can use the *SvcUtil.exe* tool to generate service and data contracts based on a predefined WSDL document. Use the /serviceContract switch and specify a URL or file location where the WSDL document can be downloaded or found. This generates the service and data contracts defined in the WSDL document that can then be used to implement a complaint service. For more information, see [How to: Retrieve Metadata and Implement a Compliant Service](../../../docs/framework/wcf/feature-details/how-to-retrieve-metadata-and-implement-a-compliant-service.md).\n\nFor a service with a BasicHttpContextBinding endpoint, *Svcutil.exe* generates a BasicHttpBinding with the `allowCookies` attribute set to `true` instead. The cookies are used for context on the server. If you would like to manage context on the client when the service uses cookies, you can manually modify the configuration to use a context binding.\n\n> [!CAUTION]\n> Svcutil.exe generates the client based on the WSDL or policy file received from the service. The user principal name (UPN) is generated by concatenating username, \"\\@\" and a fully-qualified domain name (FQDN). However, for users who registered on Active Directory, this format is not valid and the UPN generated by the tool causes a failure in Kerberos authentication with the error message \"The logon attempt failed\". To resolve this problem, you should manually fix the client file generated by this tool.\n\n`svcutil.exe [/t:code]  <metadataDocumentPath>* | <url>* | <epr>`\n\n|Argument|Description|\n|--------------|-----------------|\n|`epr`|The path to an XML file that contains a WS-Addressing EndpointReference for a service endpoint that supports WS-Metadata Exchange. For more information, see the Metadata Download section.|\n|`metadataDocumentPath`|The path to a metadata document (*wsdl* or *xsd*) that contains the contract to import into code (.wsdl, .xsd, .wspolicy, or .wsmex).<br /><br /> Svcutil follows imports and includes when you specify a remote URL for metadata. However, if you want to process metadata files on the local file system, you must specify all files in this argument. In this way, you can use Svcutil in a build environment where you cannot have network dependencies. You can use wildcards (*.xsd, \\*.wsdl) for this argument.|\n|`url`|The URL to a service endpoint that provides metadata or to a metadata document hosted online. For more information on how these documents are retrieved, see the Metadata Download section.|\n\n|Option|Description|\n|------------|-----------------|\n|/async|Generates both synchronous and asynchronous method signatures.<br /><br /> Default: generate only synchronous method signatures.<br /><br /> Short Form: `/a`|\n|/collectionType:\\<type>|Specifies the list collection type for a WCF client.<br/><br /> Default: collection type is System.Array. <br /><br /> Short Form: `/ct`|\n|/config:\\<configFile>|Specifies the filename for the generated configuration file.<br /><br /> Default: output.config|\n|/dataContractOnly|Generates code for data contract types only. Service Contract types are not generated.<br /><br /> You should only specify local metadata files for this option.<br /><br /> Short Form: `/dconly`|\n|/enableDataBinding|Implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface on all Data Contract types to enable data binding.<br /><br /> Short Form: `/edb`|\n|/excludeType:\\<type>|Specifies a fully-qualified or assembly-qualified type name to be excluded from referenced contract types.<br /><br /> When using this switch together with `/r` from separate DLLs, the full name of the XSD class is referenced.<br /><br /> Short Form: `/et`|\n|/importXmlTypes|Configures the Data Contract serializer to import non-Data Contract types as IXmlSerializable types.|\n|/internal|Generates classes that are marked as internal. Default: generate public classes only.<br /><br /> Short Form: `/i`|\n|/language:\\<language>|Specifies the programming language to use for code generation. You should provide either a language name registered in the Machine.config file, or the fully qualified name of a class that inherits from <xref:System.CodeDom.Compiler.CodeDomProvider>.<br /><br /> Values: c#, cs, csharp, vb, visualbasic, c++, cpp<br /><br /> Default: csharp<br /><br /> Short form: `/l`|\n|/mergeConfig|Merges the generated configuration into an existing file, instead of overwriting the existing file.|\n|/messageContract|Generates Message Contract types.<br /><br /> Short Form: `/mc`|\n|/namespace:\\<string,string>|Specifies a mapping from a WSDL or XML Schema targetNamespace to a CLR namespace. Using '\\*' for the targetNamespace maps all targetNamespaces without an explicit mapping to that CLR namespace.<br /><br /> To make sure that the message contract name does not collide with operation name, you should either qualify the type reference with `::`, or make sure the names are unique.<br /><br /> Default: Derived from the target namespace of the schema document for Data Contracts. The default namespace is used for all other generated types.<br /><br /> Short Form: `/n` **Note:**  When generating types to use with XmlSerializer, only a single namespace mapping is supported. All generated types will either be in the default namespace or the namespace specified by '*'.|\n|/noConfig|Do not generate configuration files.|\n|/noStdLib|Do not reference standard libraries.<br /><br /> Default: Mscorlib.dll and System.servicemodel.dll are referenced.|\n|/out:\\<file>|Specifies the file name for the generated code.<br /><br /> Default: Derived from the WSDL definition name, WSDL service name or target namespace of one of the schemas.<br /><br /> Short form: `/o`|\n|/reference:\\<file path>|References types in the specified assembly. When generating clients, use this option to specify assemblies that might contain types that represent the metadata being imported.<br /><br /> You cannot specify message contracts and <xref:System.Xml.Serialization.XmlSerializer> types using this switch.<br /><br /> If <xref:System.DateTimeOffset> referenced, this type is used instead of generating a new type. If the application is written using [!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)], SvcUtil.exe references <xref:System.DateTimeOffset> automatically.<br /><br /> Short Form: `/r`|\n|/serializable|Generates classes marked with the Serializable Attribute.<br /><br /> Short Form: `/s`|\n|/serviceContract|Generate code for service contracts only. Client class and configuration will not be generated<br /><br /> Short Form: `/sc`|\n|/serializer:Auto|Automatically select the serializer. This tries to use the Data Contract serializer and uses the XmlSerializer if that fails.<br /><br /> Short Form: `/ser`|\n|/serializer:DataContractSerializer|Generates data types that use the Data Contract Serializer for serialization and deserialization.<br /><br /> Short Form: `/ser:DataContractSerializer`|\n|/serializer:XmlSerializer|Generates data types that use the <xref:System.Xml.Serialization.XmlSerializer> for serialization and deserialization.<br /><br /> Short Form: `/ser:XmlSerializer`|\n|/targetClientVersion|Specify which version of [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)] the application is targeting. Valid values are `Version30` and `Version35`. The default value is `Version30`.<br /><br /> Short Form: `/tcv`<br /><br /> `Version30`: Use `/tcv:Version30` if you are generating code for clients that use [!INCLUDE[vstecwinfx](../../../includes/vstecwinfx-md.md)].<br /><br /> `Version35`: Use `/tcv:Version35` if you are generating code for clients that use [!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)]. When using `/tcv:Version35` with the `/async` switch, both event-based and callback/delegate-based asynchronous methods are generated. In addition, support for LINQ-enabled DataSets and <xref:System.DateTimeOffset> is enabled.|\n|/wrapped|Controls whether special-casing is used for document-literal styled documents with wrapped parameters. Use the **/wrapped** switch with the [Service Model Metadata Utility Tool (Svcutil.exe)](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) tool to specify normal casing.|\n\n> [!NOTE]\n> When the service binding is one of the system-provided bindings (see [System-Provided Bindings](../../../docs/framework/wcf/system-provided-bindings.md)), and the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property is set to either `None` or `Sign`, Svcutil generates a configuration file using the [\\<customBinding>](../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md) element instead of the expected system-provided element. For example, if the service uses the `<wsHttpBinding>` element with the `ProtectionLevel` set to `Sign`, the generated configuration has `<customBinding>` in the bindings section instead of `<wsHttpBinding>`. For more information about the protection level, see [Understanding Protection Level](../../../docs/framework/wcf/understanding-protection-level.md).\n\n### Metadata Export\n\nSvcutil.exe can export metadata for services, contracts and data types in compiled assemblies. To export metadata for a service, you must use the `/serviceName` option to specify the service you would like to export. To export all data contract types within an assembly, you should use the `/dataContractOnly` option. By default, metadata is exported for all service contracts in the input assemblies.\n\n`svcutil.exe [/t:metadata] [/serviceName:<serviceConfigName>] [/dataContractOnly] <assemblyPath>*`\n\n|Argument|Description|\n|--------------|-----------------|\n|`assemblyPath`|Specifies the path to an assembly that contains services, contracts or data contract types to be exported. Standard command line wildcards can be used to provide multiple files as input.|\n\n|Option|Description|\n|------------|-----------------|\n|/serviceName:\\<serviceConfigName>|Specifies the configuration name of a service to be exported. If this option is used, an executable assembly with an associated configuration file must be passed as input. Svcutil.exe searches all associated configuration files for the service configuration. If the configuration files contain any extension types, the assemblies that contain these types must either be in the GAC or explicitly provided using the `/reference` option.|\n|/reference:\\<file path>|Adds the specified assembly to the set of assemblies used for resolving type references. If you are exporting or validating a service that uses 3rd-party extensions (Behaviors, Bindings and BindingElements) registered in configuration, use this option to locate extension assemblies that are not in the GAC.<br /><br /> Short Form: `/r`|\n|/dataContractOnly|Operates on data contract types only. Service Contracts are not processed.<br /><br /> You should only specify local metadata files for this option.<br /><br /> Short Form: `/dconly`|\n|/excludeType:\\<type>|Specifies the fully-qualified or assembly-qualified name of a type to be excluded from export. This option can be used when exporting metadata for a service, or a set of service contracts to exclude types from being exported. This option cannot be used together with the `/dconly` option.<br /><br /> When you have a single assembly containing multiple services, and each uses separate classes with the same XSD name, you should specify the service name instead of the XSD class name for this switch.<br /><br /> XSD or data contract types are not supported.<br /><br /> Short Form: `/et`|\n\n### Service Validation\n\nValidation can be used to detect errors in service implementations without hosting the service. You must use the `/serviceName` option to indicate the service you want to validate.\n\n`svcutil.exe /validate /serviceName:<serviceConfigName>  <assemblyPath>*`\n\n|Argument|Description|\n|--------------|-----------------|\n|`assemblyPath`|Specifies the path to an assembly that contains service types to be validated. The assembly must have an associated configuration file to provide service configuration. Standard command-line wildcards can be used to provide multiple assemblies.|\n\n|Option|Description|\n|------------|-----------------|\n|/validate|Validates a service implementation specified by the `/serviceName` option. If this option is used, an executable assembly with an associated configuration file must be passed as input.<br /><br /> Short Form: `/v`|\n|/serviceName:\\<serviceConfigName>|Specifies the configuration name of a service to be validated. Svcutil.exe searches all associated configuration files of all input assemblies for the service configuration. If the configuration files contain any extension types, the assemblies that contains these types must either be in the GAC or explicitly provided using the `/reference` option.|\n|/reference:\\<file path>|Adds the specified assembly to the set of assemblies used for resolving type references. If you are exporting or validating a service that uses 3rd-party extensions (Behaviors, Bindings and BindingElements) registered in configuration, use this option to locate extension assemblies that are not in the GAC.<br /><br /> Short Form: `/r`|\n|/dataContractOnly|Operates on data contract types only. Service Contracts are not processed.<br /><br /> You should only specify local metadata files for this option.<br /><br /> Short Form: `/dconly`|\n|/excludeType:\\<type>|Specifies the fully-qualified or assembly-qualified name of a type to be excluded from validation.<br /><br /> Short Form: `/et`|\n\n### Metadata Download\n\nSvcutil.exe can be used to download metadata from running services, and save the metadata to local files. To download metadata, you must specify the `/t:metadata` option. Otherwise, client code is generated. For HTTP and HTTPS URL schemes, Svcutil.exe attempts to retrieve metadata using WS-Metadata Exchange and DISCO. For all other URL schemes, Svcutil.exe only uses WS-Metadata Exchange.\n\nSvcutil issues the following metadata requests simultaneously to retrieve metadata.\n\n- MEX (WS-Transfer) request to the supplied address\n\n- MEX request to the supplied address with /mex appended\n\n- DISCO request (using the DiscoveryClientProtocol from ASMX) to the supplied address.\n\nBy default, Svcutil.exe uses the bindings defined in the <xref:System.ServiceModel.Description.MetadataExchangeBindings> class to make MEX requests. To configure the binding used for WS-Metadata Exchange, you must define a client endpoint in configuration that uses the IMetadataExchange contract. This can be defined either in the configuration file of Svcutil.exe, or in another configuration file specified using the `/svcutilConfig` option.\n\n`svcutil.exe /t:metadata  <url>* | <epr>`\n\n|Argument|Description|\n|--------------|-----------------|\n|`url`|The URL to a service endpoint that provides metadata or to a metadata document hosted online.|\n|`epr`|The path to an XML file that contains a WS-Addressing EndpointReference for a service endpoint that supports WS-Metadata Exchange.|\n\n### XmlSerializer Type Generation\n\nServices and client applications that use data types that are serializable using the <xref:System.Xml.Serialization.XmlSerializer> generate and compile serialization code for those data types at runtime, which can result in slow start-up performance.\n\n> [!NOTE]\n> Pre-generated serialization code can only be used in client applications and not in services.\n\nSvcutil.exe can generate the necessary C# serialization code from the compiled assemblies for the application, thus improving start-up performance for these applications. For more information, see [How to: Improve the Startup Time of WCF Client Applications using the XmlSerializer](../../../docs/framework/wcf/feature-details/startup-time-of-wcf-client-applications-using-the-xmlserializer.md).\n\n> [!NOTE]\n> Svcutil.exe only generates code for types used by Service Contracts found in the input assemblies.\n\n`svcutil.exe /t:xmlSerializer  <assemblyPath>*`\n\n|Argument|Description|\n|--------------|-----------------|\n|`assemblyPath`|Specifies the path to an assembly that contains service contract types. Serialization types are generated for all Xml Serializable types in each contract.|\n\n|Option|Description|\n|------------|-----------------|\n|/reference:\\<file path>|Adds the specified assembly to the set of assemblies used for resolving type references.<br /><br /> Short Form: `/r`|\n|/excludeType:\\<type>|Specifies the fully-qualified or assembly-qualified name of a type to be excluded from export or validation.<br /><br /> Short Form: `/et`|\n|/out:\\<file>|Specifies the filename for the generated code. This option is ignored when multiple assemblies are passed as input to the tool.<br /><br /> Default: Derived from the assembly name.<br /><br /> Short Form: `/o`|\n|/UseSerializerForFaults|Specifies that the <xref:System.Xml.Serialization.XmlSerializer> should be used for reading and writing faults, instead of the default <xref:System.Runtime.Serialization.DataContractSerializer>.|\n\n## Examples\n\nThe following command generates client code from a running service or online metadata documents.\n\n`svcutil http://service/metadataEndpoint`\n\nThe following command generates client code from local metadata documents.\n\n`svcutil *.wsdl *.xsd /language:C#`\n\nThe following command generates data contract types in Visual Basic from local schema documents.\n\n`svcutil /dconly *.xsd /language:VB`\n\nThe following command downloads metadata documents from running services.\n\n`svcutil /t:metadata http://service/metadataEndpoint`\n\nThe following command generates metadata documents for service contracts and associated types in an assembly.\n\n`svcutil myAssembly.dll`\n\nThe following command generates metadata documents for a service, and all associated service contracts and data types in an assembly.\n\n`svcutil myServiceHost.exe /serviceName:myServiceName`\n\nThe following command generates metadata documents for data types in an assembly.\n\n`svcutil myServiceHost.exe /dconly`\n\nThe following command verifies service hosting.\n\n`svcutil /validate /serviceName:myServiceName myServiceHost.exe`\n\nThe following command generates serialization types for <xref:System.Xml.Serialization.XmlSerializer> types used by any service contracts in the assembly.\n\n`svcutil /t:xmlserializer myContractLibrary.exe`\n\n## Maximum Nametable Character Count Quota\n\nWhen using svcutil to generate metadata for a service, you may get the following message:\n\nError: Cannot obtain Metadata from `http://localhost:8000/somesservice/mex` The maximum nametable character count quota (16384) has been exceeded while reading XML data. The nametable is a data structure used to store strings encountered during XML processing - long XML documents with non-repeating element names, attribute names and attribute values may trigger this quota. This quota may be increased by changing the MaxNameTableCharCount property on the XmlDictionaryReaderQuotas object used when creating the XML reader.\n\nThis error can be caused by a service that returns a large WSDL file when you request its metadata. The problem is that the character quota for the svcutil.exe tool is exceeded. This value is set to help prevent denial of service (dos) attacks. You can increase this quota by specifying the following config file for svcutil.\n\nThe following config file shows how to set the reader quotas for svcutil\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n    <system.serviceModel>\n        <bindings>\n            <customBinding>\n                <binding name=\"MyBinding\">\n                    <textMessageEncoding>\n                        <readerQuotas maxDepth=\"2147483647\" maxStringContentLength=\"2147483647\"\n                            maxArrayLength=\"2147483647\" maxBytesPerRead=\"2147483647\" maxNameTableCharCount=\"2147483647\" />\n                    </textMessageEncoding>\n                    <httpTransport maxReceivedMessageSize=\"2147483647\" maxBufferSize=\"2147483647\" />\n                </binding>\n            </customBinding>\n        </bindings>\n        <client>\n            <endpoint binding=\"customBinding\" bindingConfiguration=\"MyBinding\"\n                contract=\"IMetadataExchange\"\n                name=\"http\" />\n        </client>\n    </system.serviceModel>\n</configuration>\n```\n\nCreate a new file called svcutil.exe.config and copy the XML example code into it. Then place the file in the same directory as svcutil.exe. The next time svcutil.exe is run it will pick up the new settings.\n\n## Security Concerns\n\nYou should use the appropriate Access Control List (ACL) to protect Svcutil.exe's installation folder, Svcutil.config, and files being pointed to by `/svcutilConfig`. This can prevent malicious extensions from being registered and run.\n\nIn addition, to minimize the chance that security be compromised, you should not add untrusted extensions to be part of the system or use untrusted code providers with Svcutil.exe.\n\nFinally, you should not use the tool in the middle-tier of your application, as it may cause denial-of-service to the current process.\n\n## See also\n\n- <xref:System.Runtime.Serialization.DataContractAttribute>\n- <xref:System.Runtime.Serialization.DataMemberAttribute>\n- [How to: Create a Client](../../../docs/framework/wcf/how-to-create-a-wcf-client.md)\n","nodes":[{"pos":[4,263],"embed":true,"restype":"x-metadata","content":"title: \"ServiceModel Metadata Utility Tool (Svcutil.exe)\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords:\n  - \"clients [WCF], building\"\n  - \"endpoints [WCF]\"\n  - \"Svcutil.exe\"\n  - \"clients [WCF], consuming services\"\nms.assetid: 1abf3d9f-b420-46f1-b628-df238751f308","nodes":[{"content":"ServiceModel Metadata Utility Tool (Svcutil.exe)","nodes":[{"pos":[0,48],"content":"ServiceModel Metadata Utility Tool (Svcutil.exe)","nodes":[{"content":"ServiceModel Metadata Utility Tool (Svcutil.exe)","pos":[0,48]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[270,318],"content":"ServiceModel Metadata Utility Tool (Svcutil.exe)","linkify":"ServiceModel Metadata Utility Tool (Svcutil.exe)","nodes":[{"content":"ServiceModel Metadata Utility Tool (Svcutil.exe)","pos":[0,48]}]},{"content":"The ServiceModel Metadata Utility tool is used to generate service model code from metadata documents, and metadata documents from service model code.","pos":[320,470]},{"pos":[475,486],"content":"SvcUtil.exe","linkify":"SvcUtil.exe","nodes":[{"content":"SvcUtil.exe","pos":[0,11]}]},{"pos":[488,644],"content":"The ServiceModel Metadata Utility Tool can be found at the Windows SDK installation location, specifically <bpt id=\"p1\">*</bpt>%ProgramFiles%\\Microsoft SDKs\\Windows\\v6.0\\Bin<ept id=\"p1\">*</ept>.","source":"The ServiceModel Metadata Utility Tool can be found at the Windows SDK installation location, specifically *%ProgramFiles%\\Microsoft SDKs\\Windows\\v6.0\\Bin*."},{"pos":[650,665],"content":"Functionalities","linkify":"Functionalities","nodes":[{"content":"Functionalities","pos":[0,15]}]},{"content":"The following table summarizes the various functionalities provided by this tool, and the corresponding topic that discusses how it is used:","pos":[667,807]},{"content":"Task","pos":[810,814]},{"content":"Topic","pos":[815,820]},{"content":"Generates code from running services or static metadata documents.","pos":[848,914]},{"pos":[915,1056],"content":"<bpt id=\"p1\">[</bpt>Generating a WCF Client from Service Metadata<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/generating-a-wcf-client-from-service-metadata.md)</ept>","source":"[Generating a WCF Client from Service Metadata](../../../docs/framework/wcf/feature-details/generating-a-wcf-client-from-service-metadata.md)"},{"content":"Exports metadata documents from compiled code.","pos":[1059,1105]},{"pos":[1106,1294],"content":"<bpt id=\"p1\">[</bpt>How to: Use Svcutil.exe to Export Metadata from Compiled Service Code<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-export-metadata-from-compiled-service-code.md)</ept>","source":"[How to: Use Svcutil.exe to Export Metadata from Compiled Service Code](../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-export-metadata-from-compiled-service-code.md)"},{"content":"Validates compiled service code.","pos":[1297,1329]},{"pos":[1330,1494],"content":"<bpt id=\"p1\">[</bpt>How to: Use Svcutil.exe to Validate Compiled Service Code<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-validate-compiled-service-code.md)</ept>","source":"[How to: Use Svcutil.exe to Validate Compiled Service Code](../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-validate-compiled-service-code.md)"},{"content":"Downloads metadata documents from running services.","pos":[1497,1548]},{"pos":[1549,1707],"content":"<bpt id=\"p1\">[</bpt>How to: Use Svcutil.exe to Download Metadata Documents<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-download-metadata-documents.md)</ept>","source":"[How to: Use Svcutil.exe to Download Metadata Documents](../../../docs/framework/wcf/feature-details/how-to-use-svcutil-exe-to-download-metadata-documents.md)"},{"content":"Generates serialization code.","pos":[1710,1739]},{"pos":[1740,1937],"content":"<bpt id=\"p1\">[</bpt>How to: Improve the Startup Time of WCF Client Applications using the XmlSerializer<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/startup-time-of-wcf-client-applications-using-the-xmlserializer.md)</ept>","source":"[How to: Improve the Startup Time of WCF Client Applications using the XmlSerializer](../../../docs/framework/wcf/feature-details/startup-time-of-wcf-client-applications-using-the-xmlserializer.md)"},{"pos":[1942,2203],"content":"[!CAUTION]\nSvcutil overwrites existing files on a disk if the names supplied as parameters are identical. This can include code files, configuration, or metadata files. To avoid this when generating code and configuration files, use the `/mergeConfig` switch.","leadings":["","> "],"nodes":[{"content":"Svcutil overwrites existing files on a disk if the names supplied as parameters are identical. This can include code files, configuration, or metadata files. To avoid this when generating code and configuration files, use the `/mergeConfig` switch.","pos":[11,259],"nodes":[{"content":"Svcutil overwrites existing files on a disk if the names supplied as parameters are identical.","pos":[0,94]},{"content":"This can include code files, configuration, or metadata files.","pos":[95,157]},{"content":"To avoid this when generating code and configuration files, use the <ph id=\"ph1\">`/mergeConfig`</ph> switch.","pos":[158,248],"source":" To avoid this when generating code and configuration files, use the `/mergeConfig` switch."}]}]},{"content":"In addition, the <ph id=\"ph1\">`/r`</ph> and <ph id=\"ph2\">`/ct`</ph> switches for referencing types are for generating data contracts.","pos":[2208,2305],"source":"In addition, the `/r` and `/ct` switches for referencing types are for generating data contracts."},{"content":"These switches do not work when using XmlSerializer.","pos":[2306,2358]},{"pos":[2364,2371],"content":"Timeout","linkify":"Timeout","nodes":[{"content":"Timeout","pos":[0,7]}]},{"content":"The tool has a five minute timeout when retrieving metadata.","pos":[2373,2433]},{"content":"This timeout only applies to retrieving metadata over the network.","pos":[2434,2500]},{"content":"It does not apply to any processing of that metadata.","pos":[2501,2554]},{"pos":[2560,2575],"content":"Multi-targeting","linkify":"Multi-targeting","nodes":[{"content":"Multi-targeting","pos":[0,15]}]},{"content":"The tool does not support multi-targeting.","pos":[2577,2619]},{"content":"If you want to generate a .NET 4 artifact from <bpt id=\"p1\">*</bpt>svcutil.exe<ept id=\"p1\">*</ept>, use the <bpt id=\"p2\">*</bpt>svcutil.exe<ept id=\"p2\">*</ept> from the .NET 4 SDK.","pos":[2620,2724],"source":" If you want to generate a .NET 4 artifact from *svcutil.exe*, use the *svcutil.exe* from the .NET 4 SDK."},{"content":"To generate a .NET 3.5 artifact, use the executable from the .NET 3.5 SDK.","pos":[2725,2799]},{"pos":[2805,2829],"content":"Accessing WSDL Documents","linkify":"Accessing WSDL Documents","nodes":[{"content":"Accessing WSDL Documents","pos":[0,24]}]},{"content":"When you use Svcutil to access a WSDL document that has a reference to a security token service (STS), Svcutil makes a WS-MetadataExchange call to the STS.","pos":[2831,2986]},{"content":"However, the service can expose its WSDL documents using either WS-MetadataExchange or HTTP GET.","pos":[2987,3083]},{"content":"Therefore, if the STS has only exposed the WSDL document using HTTP GET, a client written in <ph id=\"ph1\">[!INCLUDE[vstecwinfx](../../../includes/vstecwinfx-md.md)]</ph> will fail.","pos":[3084,3246],"source":" Therefore, if the STS has only exposed the WSDL document using HTTP GET, a client written in [!INCLUDE[vstecwinfx](../../../includes/vstecwinfx-md.md)] will fail."},{"content":"For clients written in <ph id=\"ph1\">[!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)]</ph>, Svcutil attempts to use both WS-MetadataExchange and HTTP GET to obtain the STS WSDL.","pos":[3247,3421],"source":" For clients written in [!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)], Svcutil attempts to use both WS-MetadataExchange and HTTP GET to obtain the STS WSDL."},{"pos":[3426,3443],"content":"Using SvcUtil.exe","linkify":"Using SvcUtil.exe","nodes":[{"content":"Using SvcUtil.exe","pos":[0,17]}]},{"pos":[3449,3462],"content":"Common Usages","linkify":"Common Usages","nodes":[{"content":"Common Usages","pos":[0,13]}]},{"content":"The following table shows some commonly used options for this tool:","pos":[3464,3531]},{"content":"Option","pos":[3534,3540]},{"content":"Description","pos":[3541,3552]},{"content":"/directory:<ph id=\"ph1\">\\&lt;</ph>directory&gt;","pos":[3588,3611],"source":"/directory:\\<directory>"},{"content":"Directory to create files in.","pos":[3612,3641]},{"content":"Default: The current directory.","pos":[3654,3685]},{"content":"Short form: <ph id=\"ph1\">`/d`</ph>","pos":[3698,3714],"source":"Short form: `/d`"},{"content":"/help","pos":[3717,3722]},{"content":"Displays the command syntax and options for the tool.","pos":[3723,3776]},{"content":"Short form: <ph id=\"ph1\">`/?`</ph>","pos":[3789,3805],"source":"Short form: `/?`"},{"content":"/noLogo","pos":[3808,3815]},{"content":"Suppress the copyright and banner message.","pos":[3816,3858]},{"content":"/svcutilConfig:<ph id=\"ph1\">\\&lt;</ph>configFile&gt;","pos":[3861,3889],"source":"/svcutilConfig:\\<configFile>"},{"content":"Specifies a custom configuration file to use instead of the App.config file.","pos":[3890,3966]},{"content":"This can be used to register system.serviceModel extensions without altering the tool's configuration file.","pos":[3967,4074]},{"content":"/target:<ph id=\"ph1\">\\&lt;</ph>output type&gt;","pos":[4077,4099],"source":"/target:\\<output type>"},{"content":"Specifies the output to be generated by the tool.","pos":[4100,4149]},{"content":"Valid values are code, metadata or xmlSerializer.","pos":[4162,4211]},{"content":"Short form: <ph id=\"ph1\">`/t`</ph>","pos":[4224,4240],"source":"Short form: `/t`"},{"pos":[4247,4262],"content":"Code Generation","linkify":"Code Generation","nodes":[{"content":"Code Generation","pos":[0,15]}]},{"content":"Svcutil.exe can generate code for service contracts, clients and data types from metadata documents.","pos":[4264,4364]},{"content":"These metadata documents can be on a durable storage, or be retrieved online.","pos":[4365,4442]},{"content":"Online retrieval follows either the WS-Metadata Exchange protocol or the DISCO protocol (for details see the Metadata Download section).","pos":[4443,4579]},{"content":"You can use the <bpt id=\"p1\">*</bpt>SvcUtil.exe<ept id=\"p1\">*</ept> tool to generate service and data contracts based on a predefined WSDL document.","pos":[4581,4691],"source":"You can use the *SvcUtil.exe* tool to generate service and data contracts based on a predefined WSDL document."},{"content":"Use the /serviceContract switch and specify a URL or file location where the WSDL document can be downloaded or found.","pos":[4692,4810]},{"content":"This generates the service and data contracts defined in the WSDL document that can then be used to implement a complaint service.","pos":[4811,4941]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Retrieve Metadata and Implement a Compliant Service<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/how-to-retrieve-metadata-and-implement-a-compliant-service.md)</ept>.","pos":[4942,5137],"source":" For more information, see [How to: Retrieve Metadata and Implement a Compliant Service](../../../docs/framework/wcf/feature-details/how-to-retrieve-metadata-and-implement-a-compliant-service.md)."},{"content":"For a service with a BasicHttpContextBinding endpoint, <bpt id=\"p1\">*</bpt>Svcutil.exe<ept id=\"p1\">*</ept> generates a BasicHttpBinding with the <ph id=\"ph1\">`allowCookies`</ph> attribute set to <ph id=\"ph2\">`true`</ph> instead.","pos":[5139,5293],"source":"For a service with a BasicHttpContextBinding endpoint, *Svcutil.exe* generates a BasicHttpBinding with the `allowCookies` attribute set to `true` instead."},{"content":"The cookies are used for context on the server.","pos":[5294,5341]},{"content":"If you would like to manage context on the client when the service uses cookies, you can manually modify the configuration to use a context binding.","pos":[5342,5490]},{"pos":[5494,6014],"content":"[!CAUTION]\nSvcutil.exe generates the client based on the WSDL or policy file received from the service. The user principal name (UPN) is generated by concatenating username, \"\\@\" and a fully-qualified domain name (FQDN). However, for users who registered on Active Directory, this format is not valid and the UPN generated by the tool causes a failure in Kerberos authentication with the error message \"The logon attempt failed\". To resolve this problem, you should manually fix the client file generated by this tool.","leadings":["","> "],"nodes":[{"content":"Svcutil.exe generates the client based on the WSDL or policy file received from the service. The user principal name (UPN) is generated by concatenating username, \"\\@\" and a fully-qualified domain name (FQDN). However, for users who registered on Active Directory, this format is not valid and the UPN generated by the tool causes a failure in Kerberos authentication with the error message \"The logon attempt failed\". To resolve this problem, you should manually fix the client file generated by this tool.","pos":[11,518],"nodes":[{"content":"Svcutil.exe generates the client based on the WSDL or policy file received from the service.","pos":[0,92]},{"content":"The user principal name (UPN) is generated by concatenating username, \"<ph id=\"ph1\">\\@</ph>\" and a fully-qualified domain name (FQDN).","pos":[93,209],"source":" The user principal name (UPN) is generated by concatenating username, \"\\@\" and a fully-qualified domain name (FQDN)."},{"content":"However, for users who registered on Active Directory, this format is not valid and the UPN generated by the tool causes a failure in Kerberos authentication with the error message \"The logon attempt failed\".","pos":[210,418]},{"content":"To resolve this problem, you should manually fix the client file generated by this tool.","pos":[419,507]}]}]},{"content":"Argument","pos":[6084,6092]},{"content":"Description","pos":[6093,6104]},{"content":"The path to an XML file that contains a WS-Addressing EndpointReference for a service endpoint that supports WS-Metadata Exchange.","pos":[6148,6278]},{"content":"For more information, see the Metadata Download section.","pos":[6279,6335]},{"content":"The path to a metadata document (<bpt id=\"p1\">*</bpt>wsdl<ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt>xsd<ept id=\"p2\">*</ept>) that contains the contract to import into code (.wsdl, .xsd, .wspolicy, or .wsmex).","pos":[6361,6494],"source":"The path to a metadata document (*wsdl* or *xsd*) that contains the contract to import into code (.wsdl, .xsd, .wspolicy, or .wsmex)."},{"content":"Svcutil follows imports and includes when you specify a remote URL for metadata.","pos":[6507,6587]},{"content":"However, if you want to process metadata files on the local file system, you must specify all files in this argument.","pos":[6588,6705]},{"content":"In this way, you can use Svcutil in a build environment where you cannot have network dependencies.","pos":[6706,6805]},{"content":"You can use wildcards (*.xsd, <ph id=\"ph1\">\\*</ph>.wsdl) for this argument.","pos":[6806,6863],"source":" You can use wildcards (*.xsd, \\*.wsdl) for this argument."},{"content":"The URL to a service endpoint that provides metadata or to a metadata document hosted online.","pos":[6872,6965]},{"content":"For more information on how these documents are retrieved, see the Metadata Download section.","pos":[6966,7059]},{"content":"Option","pos":[7063,7069]},{"content":"Description","pos":[7070,7081]},{"content":"/async","pos":[7117,7123]},{"content":"Generates both synchronous and asynchronous method signatures.","pos":[7124,7186]},{"content":"Default: generate only synchronous method signatures.","pos":[7199,7252]},{"content":"Short Form: <ph id=\"ph1\">`/a`</ph>","pos":[7265,7281],"source":"Short Form: `/a`"},{"content":"/collectionType:<ph id=\"ph1\">\\&lt;</ph>type&gt;","pos":[7284,7307],"source":"/collectionType:\\<type>"},{"content":"Specifies the list collection type for a WCF client.","pos":[7308,7360]},{"content":"Default: collection type is System.Array.","pos":[7372,7413]},{"content":"Short Form: <ph id=\"ph1\">`/ct`</ph>","pos":[7427,7444],"source":"Short Form: `/ct`"},{"content":"/config:<ph id=\"ph1\">\\&lt;</ph>configFile&gt;","pos":[7447,7468],"source":"/config:\\<configFile>"},{"content":"Specifies the filename for the generated configuration file.","pos":[7469,7529]},{"content":"Default: output.config","pos":[7542,7564]},{"content":"/dataContractOnly","pos":[7567,7584]},{"content":"Generates code for data contract types only.","pos":[7585,7629]},{"content":"Service Contract types are not generated.","pos":[7630,7671]},{"content":"You should only specify local metadata files for this option.","pos":[7684,7745]},{"content":"Short Form: <ph id=\"ph1\">`/dconly`</ph>","pos":[7758,7779],"source":"Short Form: `/dconly`"},{"content":"/enableDataBinding","pos":[7782,7800]},{"content":"Implements the <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface on all Data Contract types to enable data binding.","pos":[7801,7928],"source":"Implements the <xref:System.ComponentModel.INotifyPropertyChanged> interface on all Data Contract types to enable data binding."},{"content":"Short Form: <ph id=\"ph1\">`/edb`</ph>","pos":[7941,7959],"source":"Short Form: `/edb`"},{"content":"/excludeType:<ph id=\"ph1\">\\&lt;</ph>type&gt;","pos":[7962,7982],"source":"/excludeType:\\<type>"},{"content":"Specifies a fully-qualified or assembly-qualified type name to be excluded from referenced contract types.","pos":[7983,8089]},{"content":"When using this switch together with <ph id=\"ph1\">`/r`</ph> from separate DLLs, the full name of the XSD class is referenced.","pos":[8102,8209],"source":"When using this switch together with `/r` from separate DLLs, the full name of the XSD class is referenced."},{"content":"Short Form: <ph id=\"ph1\">`/et`</ph>","pos":[8222,8239],"source":"Short Form: `/et`"},{"content":"/importXmlTypes","pos":[8242,8257]},{"content":"Configures the Data Contract serializer to import non-Data Contract types as IXmlSerializable types.","pos":[8258,8358]},{"content":"/internal","pos":[8361,8370]},{"content":"Generates classes that are marked as internal.","pos":[8371,8417]},{"content":"Default: generate public classes only.","pos":[8418,8456]},{"content":"Short Form: <ph id=\"ph1\">`/i`</ph>","pos":[8469,8485],"source":"Short Form: `/i`"},{"content":"/language:<ph id=\"ph1\">\\&lt;</ph>language&gt;","pos":[8488,8509],"source":"/language:\\<language>"},{"content":"Specifies the programming language to use for code generation.","pos":[8510,8572]},{"content":"You should provide either a language name registered in the Machine.config file, or the fully qualified name of a class that inherits from <ph id=\"ph1\">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph>.","pos":[8573,8759],"source":" You should provide either a language name registered in the Machine.config file, or the fully qualified name of a class that inherits from <xref:System.CodeDom.Compiler.CodeDomProvider>."},{"content":"Values: c#, cs, csharp, vb, visualbasic, c++, cpp","pos":[8772,8821]},{"content":"Default: csharp","pos":[8834,8849]},{"content":"Short form: <ph id=\"ph1\">`/l`</ph>","pos":[8862,8878],"source":"Short form: `/l`"},{"content":"/mergeConfig","pos":[8881,8893]},{"content":"Merges the generated configuration into an existing file, instead of overwriting the existing file.","pos":[8894,8993]},{"content":"/messageContract","pos":[8996,9012]},{"content":"Generates Message Contract types.","pos":[9013,9046]},{"content":"Short Form: <ph id=\"ph1\">`/mc`</ph>","pos":[9059,9076],"source":"Short Form: `/mc`"},{"content":"/namespace:<ph id=\"ph1\">\\&lt;</ph>string,string&gt;","pos":[9079,9106],"source":"/namespace:\\<string,string>"},{"content":"Specifies a mapping from a WSDL or XML Schema targetNamespace to a CLR namespace.","pos":[9107,9188]},{"content":"Using '<ph id=\"ph1\">\\*</ph>' for the targetNamespace maps all targetNamespaces without an explicit mapping to that CLR namespace.","pos":[9189,9300],"source":" Using '\\*' for the targetNamespace maps all targetNamespaces without an explicit mapping to that CLR namespace."},{"content":"To make sure that the message contract name does not collide with operation name, you should either qualify the type reference with <ph id=\"ph1\">`::`</ph>, or make sure the names are unique.","pos":[9313,9485],"source":"To make sure that the message contract name does not collide with operation name, you should either qualify the type reference with `::`, or make sure the names are unique."},{"content":"Default: Derived from the target namespace of the schema document for Data Contracts.","pos":[9498,9583]},{"content":"The default namespace is used for all other generated types.","pos":[9584,9644]},{"content":"Short Form: <ph id=\"ph1\">`/n`</ph> <bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  When generating types to use with XmlSerializer, only a single namespace mapping is supported.","pos":[9657,9779],"source":"Short Form: `/n` **Note:**  When generating types to use with XmlSerializer, only a single namespace mapping is supported."},{"content":"All generated types will either be in the default namespace or the namespace specified by '*'.","pos":[9780,9874]},{"content":"/noConfig","pos":[9877,9886]},{"content":"Do not generate configuration files.","pos":[9887,9923]},{"content":"/noStdLib","pos":[9926,9935]},{"content":"Do not reference standard libraries.","pos":[9936,9972]},{"content":"Default: Mscorlib.dll and System.servicemodel.dll are referenced.","pos":[9985,10050]},{"content":"/out:<ph id=\"ph1\">\\&lt;</ph>file&gt;","pos":[10053,10065],"source":"/out:\\<file>"},{"content":"Specifies the file name for the generated code.","pos":[10066,10113]},{"content":"Default: Derived from the WSDL definition name, WSDL service name or target namespace of one of the schemas.","pos":[10126,10234]},{"content":"Short form: <ph id=\"ph1\">`/o`</ph>","pos":[10247,10263],"source":"Short form: `/o`"},{"content":"/reference:<ph id=\"ph1\">\\&lt;</ph>file path&gt;","pos":[10266,10289],"source":"/reference:\\<file path>"},{"content":"References types in the specified assembly.","pos":[10290,10333]},{"content":"When generating clients, use this option to specify assemblies that might contain types that represent the metadata being imported.","pos":[10334,10465]},{"content":"You cannot specify message contracts and <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> types using this switch.","pos":[10478,10589],"source":"You cannot specify message contracts and <xref:System.Xml.Serialization.XmlSerializer> types using this switch."},{"content":"If <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> referenced, this type is used instead of generating a new type.","pos":[10602,10697],"source":"If <xref:System.DateTimeOffset> referenced, this type is used instead of generating a new type."},{"content":"If the application is written using <ph id=\"ph1\">[!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)]</ph>, SvcUtil.exe references <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> automatically.","pos":[10698,10866],"source":" If the application is written using [!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)], SvcUtil.exe references <xref:System.DateTimeOffset> automatically."},{"content":"Short Form: <ph id=\"ph1\">`/r`</ph>","pos":[10879,10895],"source":"Short Form: `/r`"},{"content":"/serializable","pos":[10898,10911]},{"content":"Generates classes marked with the Serializable Attribute.","pos":[10912,10969]},{"content":"Short Form: <ph id=\"ph1\">`/s`</ph>","pos":[10982,10998],"source":"Short Form: `/s`"},{"content":"/serviceContract","pos":[11001,11017]},{"content":"Generate code for service contracts only.","pos":[11018,11059]},{"content":"Client class and configuration will not be generated","pos":[11060,11112]},{"content":"Short Form: <ph id=\"ph1\">`/sc`</ph>","pos":[11125,11142],"source":"Short Form: `/sc`"},{"content":"/serializer:Auto","pos":[11145,11161]},{"content":"Automatically select the serializer.","pos":[11162,11198]},{"content":"This tries to use the Data Contract serializer and uses the XmlSerializer if that fails.","pos":[11199,11287]},{"content":"Short Form: <ph id=\"ph1\">`/ser`</ph>","pos":[11300,11318],"source":"Short Form: `/ser`"},{"content":"/serializer:DataContractSerializer","pos":[11321,11355]},{"content":"Generates data types that use the Data Contract Serializer for serialization and deserialization.","pos":[11356,11453]},{"content":"Short Form: <ph id=\"ph1\">`/ser:DataContractSerializer`</ph>","pos":[11466,11507],"source":"Short Form: `/ser:DataContractSerializer`"},{"content":"/serializer:XmlSerializer","pos":[11510,11535]},{"content":"Generates data types that use the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> for serialization and deserialization.","pos":[11536,11654],"source":"Generates data types that use the <xref:System.Xml.Serialization.XmlSerializer> for serialization and deserialization."},{"content":"Short Form: <ph id=\"ph1\">`/ser:XmlSerializer`</ph>","pos":[11667,11699],"source":"Short Form: `/ser:XmlSerializer`"},{"content":"/targetClientVersion","pos":[11702,11722]},{"content":"Specify which version of <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph> the application is targeting.","pos":[11723,11838],"source":"Specify which version of [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)] the application is targeting."},{"content":"Valid values are <ph id=\"ph1\">`Version30`</ph> and <ph id=\"ph2\">`Version35`</ph>.","pos":[11839,11884],"source":" Valid values are `Version30` and `Version35`."},{"content":"The default value is <ph id=\"ph1\">`Version30`</ph>.","pos":[11885,11918],"source":" The default value is `Version30`."},{"content":"Short Form: <ph id=\"ph1\">`/tcv`</ph>","pos":[11931,11949],"source":"Short Form: `/tcv`"},{"content":"<ph id=\"ph1\">`Version30`</ph>: Use <ph id=\"ph2\">`/tcv:Version30`</ph> if you are generating code for clients that use <ph id=\"ph3\">[!INCLUDE[vstecwinfx](../../../includes/vstecwinfx-md.md)]</ph>.","pos":[11962,12103],"source":"`Version30`: Use `/tcv:Version30` if you are generating code for clients that use [!INCLUDE[vstecwinfx](../../../includes/vstecwinfx-md.md)]."},{"content":"<ph id=\"ph1\">`Version35`</ph>: Use <ph id=\"ph2\">`/tcv:Version35`</ph> if you are generating code for clients that use <ph id=\"ph3\">[!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)]</ph>.","pos":[12116,12263],"source":"`Version35`: Use `/tcv:Version35` if you are generating code for clients that use [!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)]."},{"content":"When using <ph id=\"ph1\">`/tcv:Version35`</ph> with the <ph id=\"ph2\">`/async`</ph> switch, both event-based and callback/delegate-based asynchronous methods are generated.","pos":[12264,12398],"source":" When using `/tcv:Version35` with the `/async` switch, both event-based and callback/delegate-based asynchronous methods are generated."},{"content":"In addition, support for LINQ-enabled DataSets and <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> is enabled.","pos":[12399,12490],"source":" In addition, support for LINQ-enabled DataSets and <xref:System.DateTimeOffset> is enabled."},{"content":"/wrapped","pos":[12493,12501]},{"content":"Controls whether special-casing is used for document-literal styled documents with wrapped parameters.","pos":[12502,12604]},{"content":"Use the <bpt id=\"p1\">**</bpt>/wrapped<ept id=\"p1\">**</ept> switch with the <bpt id=\"p2\">[</bpt>Service Model Metadata Utility Tool (Svcutil.exe)<ept id=\"p2\">](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> tool to specify normal casing.","pos":[12605,12803],"source":" Use the **/wrapped** switch with the [Service Model Metadata Utility Tool (Svcutil.exe)](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) tool to specify normal casing."},{"pos":[12808,13652],"content":"[!NOTE]\nWhen the service binding is one of the system-provided bindings (see [System-Provided Bindings](../../../docs/framework/wcf/system-provided-bindings.md)), and the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property is set to either `None` or `Sign`, Svcutil generates a configuration file using the [\\<customBinding>](../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md) element instead of the expected system-provided element. For example, if the service uses the `<wsHttpBinding>` element with the `ProtectionLevel` set to `Sign`, the generated configuration has `<customBinding>` in the bindings section instead of `<wsHttpBinding>`. For more information about the protection level, see [Understanding Protection Level](../../../docs/framework/wcf/understanding-protection-level.md).","leadings":["","> "],"nodes":[{"content":"When the service binding is one of the system-provided bindings (see [System-Provided Bindings](../../../docs/framework/wcf/system-provided-bindings.md)), and the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property is set to either `None` or `Sign`, Svcutil generates a configuration file using the [\\<customBinding>](../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md) element instead of the expected system-provided element. For example, if the service uses the `<wsHttpBinding>` element with the `ProtectionLevel` set to `Sign`, the generated configuration has `<customBinding>` in the bindings section instead of `<wsHttpBinding>`. For more information about the protection level, see [Understanding Protection Level](../../../docs/framework/wcf/understanding-protection-level.md).","pos":[8,842],"nodes":[{"content":"When the service binding is one of the system-provided bindings (see <bpt id=\"p1\">[</bpt>System-Provided Bindings<ept id=\"p1\">](../../../docs/framework/wcf/system-provided-bindings.md)</ept>), and the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> property is set to either <ph id=\"ph2\">`None`</ph> or <ph id=\"ph3\">`Sign`</ph>, Svcutil generates a configuration file using the <bpt id=\"p2\">[</bpt><ph id=\"ph4\">\\&lt;</ph>customBinding&gt;<ept id=\"p2\">](../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md)</ept> element instead of the expected system-provided element.","pos":[0,475],"source":"When the service binding is one of the system-provided bindings (see [System-Provided Bindings](../../../docs/framework/wcf/system-provided-bindings.md)), and the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property is set to either `None` or `Sign`, Svcutil generates a configuration file using the [\\<customBinding>](../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md) element instead of the expected system-provided element."},{"content":"For example, if the service uses the <ph id=\"ph1\">`&lt;wsHttpBinding&gt;`</ph> element with the <ph id=\"ph2\">`ProtectionLevel`</ph> set to <ph id=\"ph3\">`Sign`</ph>, the generated configuration has <ph id=\"ph4\">`&lt;customBinding&gt;`</ph> in the bindings section instead of <ph id=\"ph5\">`&lt;wsHttpBinding&gt;`</ph>.","pos":[476,684],"source":" For example, if the service uses the `<wsHttpBinding>` element with the `ProtectionLevel` set to `Sign`, the generated configuration has `<customBinding>` in the bindings section instead of `<wsHttpBinding>`."},{"content":"For more information about the protection level, see <bpt id=\"p1\">[</bpt>Understanding Protection Level<ept id=\"p1\">](../../../docs/framework/wcf/understanding-protection-level.md)</ept>.","pos":[685,834],"source":" For more information about the protection level, see [Understanding Protection Level](../../../docs/framework/wcf/understanding-protection-level.md)."}]}]},{"pos":[13658,13673],"content":"Metadata Export","linkify":"Metadata Export","nodes":[{"content":"Metadata Export","pos":[0,15]}]},{"content":"Svcutil.exe can export metadata for services, contracts and data types in compiled assemblies.","pos":[13675,13769]},{"content":"To export metadata for a service, you must use the <ph id=\"ph1\">`/serviceName`</ph> option to specify the service you would like to export.","pos":[13770,13891],"source":" To export metadata for a service, you must use the `/serviceName` option to specify the service you would like to export."},{"content":"To export all data contract types within an assembly, you should use the <ph id=\"ph1\">`/dataContractOnly`</ph> option.","pos":[13892,13992],"source":" To export all data contract types within an assembly, you should use the `/dataContractOnly` option."},{"content":"By default, metadata is exported for all service contracts in the input assemblies.","pos":[13993,14076]},{"content":"Argument","pos":[14179,14187]},{"content":"Description","pos":[14188,14199]},{"content":"Specifies the path to an assembly that contains services, contracts or data contract types to be exported.","pos":[14252,14358]},{"content":"Standard command line wildcards can be used to provide multiple files as input.","pos":[14359,14438]},{"content":"Option","pos":[14442,14448]},{"content":"Description","pos":[14449,14460]},{"content":"/serviceName:<ph id=\"ph1\">\\&lt;</ph>serviceConfigName&gt;","pos":[14496,14529],"source":"/serviceName:\\<serviceConfigName>"},{"content":"Specifies the configuration name of a service to be exported.","pos":[14530,14591]},{"content":"If this option is used, an executable assembly with an associated configuration file must be passed as input.","pos":[14592,14701]},{"content":"Svcutil.exe searches all associated configuration files for the service configuration.","pos":[14702,14788]},{"content":"If the configuration files contain any extension types, the assemblies that contain these types must either be in the GAC or explicitly provided using the <ph id=\"ph1\">`/reference`</ph> option.","pos":[14789,14964],"source":" If the configuration files contain any extension types, the assemblies that contain these types must either be in the GAC or explicitly provided using the `/reference` option."},{"content":"/reference:<ph id=\"ph1\">\\&lt;</ph>file path&gt;","pos":[14967,14990],"source":"/reference:\\<file path>"},{"content":"Adds the specified assembly to the set of assemblies used for resolving type references.","pos":[14991,15079]},{"content":"If you are exporting or validating a service that uses 3rd-party extensions (Behaviors, Bindings and BindingElements) registered in configuration, use this option to locate extension assemblies that are not in the GAC.","pos":[15080,15298]},{"content":"Short Form: <ph id=\"ph1\">`/r`</ph>","pos":[15311,15327],"source":"Short Form: `/r`"},{"content":"/dataContractOnly","pos":[15330,15347]},{"content":"Operates on data contract types only.","pos":[15348,15385]},{"content":"Service Contracts are not processed.","pos":[15386,15422]},{"content":"You should only specify local metadata files for this option.","pos":[15435,15496]},{"content":"Short Form: <ph id=\"ph1\">`/dconly`</ph>","pos":[15509,15530],"source":"Short Form: `/dconly`"},{"content":"/excludeType:<ph id=\"ph1\">\\&lt;</ph>type&gt;","pos":[15533,15553],"source":"/excludeType:\\<type>"},{"content":"Specifies the fully-qualified or assembly-qualified name of a type to be excluded from export.","pos":[15554,15648]},{"content":"This option can be used when exporting metadata for a service, or a set of service contracts to exclude types from being exported.","pos":[15649,15779]},{"content":"This option cannot be used together with the <ph id=\"ph1\">`/dconly`</ph> option.","pos":[15780,15842],"source":" This option cannot be used together with the `/dconly` option."},{"content":"When you have a single assembly containing multiple services, and each uses separate classes with the same XSD name, you should specify the service name instead of the XSD class name for this switch.","pos":[15855,16054]},{"content":"XSD or data contract types are not supported.","pos":[16067,16112]},{"content":"Short Form: <ph id=\"ph1\">`/et`</ph>","pos":[16125,16142],"source":"Short Form: `/et`"},{"pos":[16149,16167],"content":"Service Validation","linkify":"Service Validation","nodes":[{"content":"Service Validation","pos":[0,18]}]},{"content":"Validation can be used to detect errors in service implementations without hosting the service.","pos":[16169,16264]},{"content":"You must use the <ph id=\"ph1\">`/serviceName`</ph> option to indicate the service you want to validate.","pos":[16265,16349],"source":" You must use the `/serviceName` option to indicate the service you want to validate."},{"content":"Argument","pos":[16427,16435]},{"content":"Description","pos":[16436,16447]},{"content":"Specifies the path to an assembly that contains service types to be validated.","pos":[16500,16578]},{"content":"The assembly must have an associated configuration file to provide service configuration.","pos":[16579,16668]},{"content":"Standard command-line wildcards can be used to provide multiple assemblies.","pos":[16669,16744]},{"content":"Option","pos":[16748,16754]},{"content":"Description","pos":[16755,16766]},{"content":"/validate","pos":[16802,16811]},{"content":"Validates a service implementation specified by the <ph id=\"ph1\">`/serviceName`</ph> option.","pos":[16812,16886],"source":"Validates a service implementation specified by the `/serviceName` option."},{"content":"If this option is used, an executable assembly with an associated configuration file must be passed as input.","pos":[16887,16996]},{"content":"Short Form: <ph id=\"ph1\">`/v`</ph>","pos":[17009,17025],"source":"Short Form: `/v`"},{"content":"/serviceName:<ph id=\"ph1\">\\&lt;</ph>serviceConfigName&gt;","pos":[17028,17061],"source":"/serviceName:\\<serviceConfigName>"},{"content":"Specifies the configuration name of a service to be validated.","pos":[17062,17124]},{"content":"Svcutil.exe searches all associated configuration files of all input assemblies for the service configuration.","pos":[17125,17235]},{"content":"If the configuration files contain any extension types, the assemblies that contains these types must either be in the GAC or explicitly provided using the <ph id=\"ph1\">`/reference`</ph> option.","pos":[17236,17412],"source":" If the configuration files contain any extension types, the assemblies that contains these types must either be in the GAC or explicitly provided using the `/reference` option."},{"content":"/reference:<ph id=\"ph1\">\\&lt;</ph>file path&gt;","pos":[17415,17438],"source":"/reference:\\<file path>"},{"content":"Adds the specified assembly to the set of assemblies used for resolving type references.","pos":[17439,17527]},{"content":"If you are exporting or validating a service that uses 3rd-party extensions (Behaviors, Bindings and BindingElements) registered in configuration, use this option to locate extension assemblies that are not in the GAC.","pos":[17528,17746]},{"content":"Short Form: <ph id=\"ph1\">`/r`</ph>","pos":[17759,17775],"source":"Short Form: `/r`"},{"content":"/dataContractOnly","pos":[17778,17795]},{"content":"Operates on data contract types only.","pos":[17796,17833]},{"content":"Service Contracts are not processed.","pos":[17834,17870]},{"content":"You should only specify local metadata files for this option.","pos":[17883,17944]},{"content":"Short Form: <ph id=\"ph1\">`/dconly`</ph>","pos":[17957,17978],"source":"Short Form: `/dconly`"},{"content":"/excludeType:<ph id=\"ph1\">\\&lt;</ph>type&gt;","pos":[17981,18001],"source":"/excludeType:\\<type>"},{"content":"Specifies the fully-qualified or assembly-qualified name of a type to be excluded from validation.","pos":[18002,18100]},{"content":"Short Form: <ph id=\"ph1\">`/et`</ph>","pos":[18113,18130],"source":"Short Form: `/et`"},{"pos":[18137,18154],"content":"Metadata Download","linkify":"Metadata Download","nodes":[{"content":"Metadata Download","pos":[0,17]}]},{"content":"Svcutil.exe can be used to download metadata from running services, and save the metadata to local files.","pos":[18156,18261]},{"content":"To download metadata, you must specify the <ph id=\"ph1\">`/t:metadata`</ph> option.","pos":[18262,18326],"source":" To download metadata, you must specify the `/t:metadata` option."},{"content":"Otherwise, client code is generated.","pos":[18327,18363]},{"content":"For HTTP and HTTPS URL schemes, Svcutil.exe attempts to retrieve metadata using WS-Metadata Exchange and DISCO.","pos":[18364,18475]},{"content":"For all other URL schemes, Svcutil.exe only uses WS-Metadata Exchange.","pos":[18476,18546]},{"content":"Svcutil issues the following metadata requests simultaneously to retrieve metadata.","pos":[18548,18631]},{"content":"MEX (WS-Transfer) request to the supplied address","pos":[18635,18684]},{"content":"MEX request to the supplied address with /mex appended","pos":[18688,18742]},{"content":"DISCO request (using the DiscoveryClientProtocol from ASMX) to the supplied address.","pos":[18746,18830]},{"content":"By default, Svcutil.exe uses the bindings defined in the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeBindings&gt;</ph> class to make MEX requests.","pos":[18832,18980],"source":"By default, Svcutil.exe uses the bindings defined in the <xref:System.ServiceModel.Description.MetadataExchangeBindings> class to make MEX requests."},{"content":"To configure the binding used for WS-Metadata Exchange, you must define a client endpoint in configuration that uses the IMetadataExchange contract.","pos":[18981,19129]},{"content":"This can be defined either in the configuration file of Svcutil.exe, or in another configuration file specified using the <ph id=\"ph1\">`/svcutilConfig`</ph> option.","pos":[19130,19276],"source":" This can be defined either in the configuration file of Svcutil.exe, or in another configuration file specified using the `/svcutilConfig` option."},{"content":"Argument","pos":[19322,19330]},{"content":"Description","pos":[19331,19342]},{"content":"The URL to a service endpoint that provides metadata or to a metadata document hosted online.","pos":[19386,19479]},{"content":"The path to an XML file that contains a WS-Addressing EndpointReference for a service endpoint that supports WS-Metadata Exchange.","pos":[19488,19618]},{"pos":[19625,19654],"content":"XmlSerializer Type Generation","linkify":"XmlSerializer Type Generation","nodes":[{"content":"XmlSerializer Type Generation","pos":[0,29]}]},{"pos":[19656,19906],"content":"Services and client applications that use data types that are serializable using the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> generate and compile serialization code for those data types at runtime, which can result in slow start-up performance.","source":"Services and client applications that use data types that are serializable using the <xref:System.Xml.Serialization.XmlSerializer> generate and compile serialization code for those data types at runtime, which can result in slow start-up performance."},{"pos":[19910,20013],"content":"[!NOTE]\nPre-generated serialization code can only be used in client applications and not in services.","leadings":["","> "],"nodes":[{"content":"Pre-generated serialization code can only be used in client applications and not in services.","pos":[8,101]}]},{"content":"Svcutil.exe can generate the necessary C# serialization code from the compiled assemblies for the application, thus improving start-up performance for these applications.","pos":[20015,20185]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Improve the Startup Time of WCF Client Applications using the XmlSerializer<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/startup-time-of-wcf-client-applications-using-the-xmlserializer.md)</ept>.","pos":[20186,20410],"source":" For more information, see [How to: Improve the Startup Time of WCF Client Applications using the XmlSerializer](../../../docs/framework/wcf/feature-details/startup-time-of-wcf-client-applications-using-the-xmlserializer.md)."},{"pos":[20414,20522],"content":"[!NOTE]\nSvcutil.exe only generates code for types used by Service Contracts found in the input assemblies.","leadings":["","> "],"nodes":[{"content":"Svcutil.exe only generates code for types used by Service Contracts found in the input assemblies.","pos":[8,106]}]},{"content":"Argument","pos":[20574,20582]},{"content":"Description","pos":[20583,20594]},{"content":"Specifies the path to an assembly that contains service contract types.","pos":[20647,20718]},{"content":"Serialization types are generated for all Xml Serializable types in each contract.","pos":[20719,20801]},{"content":"Option","pos":[20805,20811]},{"content":"Description","pos":[20812,20823]},{"content":"/reference:<ph id=\"ph1\">\\&lt;</ph>file path&gt;","pos":[20859,20882],"source":"/reference:\\<file path>"},{"content":"Adds the specified assembly to the set of assemblies used for resolving type references.","pos":[20883,20971]},{"content":"Short Form: <ph id=\"ph1\">`/r`</ph>","pos":[20984,21000],"source":"Short Form: `/r`"},{"content":"/excludeType:<ph id=\"ph1\">\\&lt;</ph>type&gt;","pos":[21003,21023],"source":"/excludeType:\\<type>"},{"content":"Specifies the fully-qualified or assembly-qualified name of a type to be excluded from export or validation.","pos":[21024,21132]},{"content":"Short Form: <ph id=\"ph1\">`/et`</ph>","pos":[21145,21162],"source":"Short Form: `/et`"},{"content":"/out:<ph id=\"ph1\">\\&lt;</ph>file&gt;","pos":[21165,21177],"source":"/out:\\<file>"},{"content":"Specifies the filename for the generated code.","pos":[21178,21224]},{"content":"This option is ignored when multiple assemblies are passed as input to the tool.","pos":[21225,21305]},{"content":"Default: Derived from the assembly name.","pos":[21318,21358]},{"content":"Short Form: <ph id=\"ph1\">`/o`</ph>","pos":[21371,21387],"source":"Short Form: `/o`"},{"content":"/UseSerializerForFaults","pos":[21390,21413]},{"pos":[21414,21608],"content":"Specifies that the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> should be used for reading and writing faults, instead of the default <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.","source":"Specifies that the <xref:System.Xml.Serialization.XmlSerializer> should be used for reading and writing faults, instead of the default <xref:System.Runtime.Serialization.DataContractSerializer>."},{"pos":[21614,21622],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following command generates client code from a running service or online metadata documents.","pos":[21624,21720]},{"content":"The following command generates client code from local metadata documents.","pos":[21765,21839]},{"content":"The following command generates data contract types in Visual Basic from local schema documents.","pos":[21878,21974]},{"content":"The following command downloads metadata documents from running services.","pos":[22014,22087]},{"content":"The following command generates metadata documents for service contracts and associated types in an assembly.","pos":[22144,22253]},{"content":"The following command generates metadata documents for a service, and all associated service contracts and data types in an assembly.","pos":[22281,22414]},{"content":"The following command generates metadata documents for data types in an assembly.","pos":[22472,22553]},{"content":"The following command verifies service hosting.","pos":[22592,22639]},{"pos":[22707,22861],"content":"The following command generates serialization types for <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> types used by any service contracts in the assembly.","source":"The following command generates serialization types for <xref:System.Xml.Serialization.XmlSerializer> types used by any service contracts in the assembly."},{"pos":[22916,22955],"content":"Maximum Nametable Character Count Quota","linkify":"Maximum Nametable Character Count Quota","nodes":[{"content":"Maximum Nametable Character Count Quota","pos":[0,39]}]},{"content":"When using svcutil to generate metadata for a service, you may get the following message:","pos":[22957,23046]},{"content":"Error: Cannot obtain Metadata from <ph id=\"ph1\">`http://localhost:8000/somesservice/mex`</ph> The maximum nametable character count quota (16384) has been exceeded while reading XML data.","pos":[23048,23217],"source":"Error: Cannot obtain Metadata from `http://localhost:8000/somesservice/mex` The maximum nametable character count quota (16384) has been exceeded while reading XML data."},{"content":"The nametable is a data structure used to store strings encountered during XML processing - long XML documents with non-repeating element names, attribute names and attribute values may trigger this quota.","pos":[23218,23423]},{"content":"This quota may be increased by changing the MaxNameTableCharCount property on the XmlDictionaryReaderQuotas object used when creating the XML reader.","pos":[23424,23573]},{"content":"This error can be caused by a service that returns a large WSDL file when you request its metadata.","pos":[23575,23674]},{"content":"The problem is that the character quota for the svcutil.exe tool is exceeded.","pos":[23675,23752]},{"content":"This value is set to help prevent denial of service (dos) attacks.","pos":[23753,23819]},{"content":"You can increase this quota by specifying the following config file for svcutil.","pos":[23820,23900]},{"content":"The following config file shows how to set the reader quotas for svcutil","pos":[23902,23974]},{"content":"Create a new file called svcutil.exe.config and copy the XML example code into it.","pos":[24874,24956]},{"content":"Then place the file in the same directory as svcutil.exe.","pos":[24957,25014]},{"content":"The next time svcutil.exe is run it will pick up the new settings.","pos":[25015,25081]},{"pos":[25086,25103],"content":"Security Concerns","linkify":"Security Concerns","nodes":[{"content":"Security Concerns","pos":[0,17]}]},{"content":"You should use the appropriate Access Control List (ACL) to protect Svcutil.exe's installation folder, Svcutil.config, and files being pointed to by <ph id=\"ph1\">`/svcutilConfig`</ph>.","pos":[25105,25271],"source":"You should use the appropriate Access Control List (ACL) to protect Svcutil.exe's installation folder, Svcutil.config, and files being pointed to by `/svcutilConfig`."},{"content":"This can prevent malicious extensions from being registered and run.","pos":[25272,25340]},{"content":"In addition, to minimize the chance that security be compromised, you should not add untrusted extensions to be part of the system or use untrusted code providers with Svcutil.exe.","pos":[25342,25522]},{"content":"Finally, you should not use the tool in the middle-tier of your application, as it may cause denial-of-service to the current process.","pos":[25524,25658]},{"pos":[25663,25671],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[25793,25877],"content":"<bpt id=\"p1\">[</bpt>How to: Create a Client<ept id=\"p1\">](../../../docs/framework/wcf/how-to-create-a-wcf-client.md)</ept>","source":"[How to: Create a Client](../../../docs/framework/wcf/how-to-create-a-wcf-client.md)"}]}