{"content":"---\ntitle: dotnet pack command\ndescription: The dotnet pack command creates NuGet packages for your .NET Core project.\nms.date: 12/04/2018\n---\n# dotnet pack\n\n[!INCLUDE [topic-appliesto-net-core-all](../../../includes/topic-appliesto-net-core-all.md)]\n\n## Name\n\n`dotnet pack` - Packs the code into a NuGet package.\n\n## Synopsis\n\n# [.NET Core 2.x](#tab/netcore2x)\n```\ndotnet pack [<PROJECT>] [-c|--configuration] [--force] [--include-source] [--include-symbols] [--no-build] [--no-dependencies]\n    [--no-restore] [-o|--output] [--runtime] [-s|--serviceable] [-v|--verbosity] [--version-suffix]\ndotnet pack [-h|--help]\n```\n# [.NET Core 1.x](#tab/netcore1x)\n```\ndotnet pack [<PROJECT>] [-c|--configuration] [--include-source] [--include-symbols] [--no-build] [-o|--output]\n    [-s|--serviceable] [-v|--verbosity] [--version-suffix]\ndotnet pack [-h|--help]\n```\n---\n\n## Description\n\nThe `dotnet pack` command builds the project and creates NuGet packages. The result of this command is a NuGet package. If the `--include-symbols` option is present, another package containing the debug symbols is created.\n\nNuGet dependencies of the packed project are added to the *.nuspec* file, so they're properly resolved when the package is installed. Project-to-project references aren't packaged inside the project. Currently, you must have a package per project if you have project-to-project dependencies.\n\nBy default, `dotnet pack` builds the project first. If you wish to avoid this behavior, pass the `--no-build` option. This option is often useful in Continuous Integration (CI) build scenarios where you know the code was previously built.\n\nYou can provide MSBuild properties to the `dotnet pack` command for the packing process. For more information, see [NuGet metadata properties](csproj.md#nuget-metadata-properties) and the [MSBuild Command-Line Reference](/visualstudio/msbuild/msbuild-command-line-reference). The [Examples](#examples) section shows how to use the MSBuild -p switch for a couple of different scenarios.\n\n[!INCLUDE[dotnet restore note + options](~/includes/dotnet-restore-note-options.md)]\n\n## Arguments\n\n* **`PROJECT`**\n\n  The project to pack. It's either a path to a [csproj file](csproj.md) or to a directory. If not specified, it defaults to the current directory.\n\n## Options\n\n# [.NET Core 2.x](#tab/netcore2x)\n\n* **`-c|--configuration {Debug|Release}`**\n\n  Defines the build configuration. The default value is `Debug`.\n\n* **`--force`**\n\n  Forces all dependencies to be resolved even if the last restore was successful. Specifying this flag is the same as deleting the *project.assets.json* file.\n\n* **`-h|--help`**\n\n  Prints out a short help for the command.\n\n* **`--include-source`**\n\n  Includes the source files in the NuGet package. The sources files are included in the `src` folder within the `nupkg`.\n\n* **`--include-symbols`**\n\n  Generates the symbols `nupkg`.\n\n* **`--no-build`**\n\n  Doesn't build the project before packing. It also implicitly sets the `--no-restore` flag.\n\n* **`--no-dependencies`**\n\n  Ignores project-to-project references and only restores the root project.\n\n* **`--no-restore`**\n\n  Doesn't execute an implicit restore when running the command.\n\n* **`-o|--output <OUTPUT_DIRECTORY>`**\n\n  Places the built packages in the directory specified.\n\n* **`--runtime <RUNTIME_IDENTIFIER>`**\n\n  Specifies the target runtime to restore packages for. For a list of Runtime Identifiers (RIDs), see the [RID catalog](../rid-catalog.md).\n\n* **`-s|--serviceable`**\n\n  Sets the serviceable flag in the package. For more information, see [.NET Blog: .NET 4.5.1 Supports Microsoft Security Updates for .NET NuGet Libraries](https://aka.ms/nupkgservicing).\n\n* **`--version-suffix <VERSION_SUFFIX>`**\n\n  Defines the value for the `$(VersionSuffix)` MSBuild property in the project.\n\n* **`-v|--verbosity <LEVEL>`**\n\n  Sets the verbosity level of the command. Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`.\n\n> [!NOTE]\n> Web projects aren't packable by default. To override the default behavior, add the following property to your *.csproj* file:\n> ```xml\n> <PropertyGroup>\n>    <IsPackable>true</IsPackable>\n> </PropertyGroup>\n> ```\n\n# [.NET Core 1.x](#tab/netcore1x)\n\n* **`-c|--configuration {Debug|Release}`**\n\n  Defines the build configuration. The default value is `Debug`.\n\n* **`-h|--help`**\n\n  Prints out a short help for the command.\n\n* **`--include-source`**\n\n  Includes the source files in the NuGet package. The sources files are included in the `src` folder within the `nupkg`.\n\n* **`--include-symbols`**\n\n  Generates the symbols `nupkg`.\n\n* **`--no-build`**\n\n  Doesn't build the project before packing.\n\n* **`-o|--output <OUTPUT_DIRECTORY>`**\n\n  Places the built packages in the directory specified.\n\n* **`-s|--serviceable`**\n\n  Sets the serviceable flag in the package. For more information, see [.NET Blog: .NET 4.5.1 Supports Microsoft Security Updates for .NET NuGet Libraries](https://aka.ms/nupkgservicing).\n\n* **`--version-suffix <VERSION_SUFFIX>`**\n\n  Defines the value for the `$(VersionSuffix)` MSBuild property in the project.\n\n* **`-v|--verbosity <LEVEL>`**\n\n  Sets the verbosity level of the command. Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`.\n\n---\n\n## Examples\n\n* Pack the project in the current directory:\n\n  ```console\n  dotnet pack\n  ```\n\n* Pack the `app1` project:\n\n  ```console\n  dotnet pack ~/projects/app1/project.csproj\n  ```\n\n* Pack the project in the current directory and place the resulting packages into the `nupkgs` folder:\n\n  ```console\n  dotnet pack --output nupkgs\n  ```\n\n* Pack the project in the current directory into the `nupkgs` folder and skip the build step:\n\n  ```console\n  dotnet pack --no-build --output nupkgs\n  ```\n\n* With the project's version suffix configured as `<VersionSuffix>$(VersionSuffix)</VersionSuffix>` in the *.csproj* file, pack the current project and update the resulting package version with the given suffix:\n\n  ```console\n  dotnet pack --version-suffix \"ci-1234\"\n  ```\n\n* Set the package version to `2.1.0` with the `PackageVersion` MSBuild property:\n\n  ```console\n  dotnet pack -p:PackageVersion=2.1.0\n  ```\n\n* Pack the project for a specific [target framework](../../standard/frameworks.md):\n\n  ```console\n  dotnet pack -p:TargetFrameworks=net45\n  ```\n\n* Pack the project and use a specific runtime (Windows 10) for the restore operation (.NET Core SDK 2.0 and later versions):\n\n  ```console\n  dotnet pack --runtime win10-x64\n  ```\n\n* Pack the project using a [.nuspec file](https://docs.microsoft.com/nuget/reference/msbuild-targets#packing-using-a-nuspec):\n\n  ```console\n  dotnet pack  ~/projects/app1/project.csproj /p:NuspecFile=~/projects/app1/project.nuspec /p:NuspecBasePath=~/projects/app1/nuget\n  ```\n","nodes":[{"pos":[4,138],"embed":true,"restype":"x-metadata","content":"title: dotnet pack command\ndescription: The dotnet pack command creates NuGet packages for your .NET Core project.\nms.date: 12/04/2018","nodes":[{"content":"dotnet pack command","nodes":[{"pos":[0,19],"content":"dotnet pack command","nodes":[{"content":"dotnet pack command","pos":[0,19]}]}],"path":["title"],"nosxs":false},{"content":"The dotnet pack command creates NuGet packages for your .NET Core project.","nodes":[{"pos":[0,74],"content":"The dotnet pack command creates NuGet packages for your .NET Core project.","nodes":[{"content":"The dotnet pack command creates NuGet packages for your .NET Core project.","pos":[0,74]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[145,156],"content":"dotnet pack","linkify":"dotnet pack","nodes":[{"content":"dotnet pack","pos":[0,11]}]},{"pos":[255,259],"content":"Name","linkify":"Name","nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[261,313],"content":"<ph id=\"ph1\">`dotnet pack`</ph> - Packs the code into a NuGet package.","source":"`dotnet pack` - Packs the code into a NuGet package."},{"pos":[318,326],"content":"Synopsis","linkify":"Synopsis","nodes":[{"content":"Synopsis","pos":[0,8]}]},{"pos":[330,361],"content":"<bpt id=\"p1\">[</bpt>.NET Core 2.x<ept id=\"p1\">](#tab/netcore2x)</ept>","linkify":"[.NET Core 2.x](#tab/netcore2x)","source":"[.NET Core 2.x](#tab/netcore2x)"},{"pos":[623,654],"content":"<bpt id=\"p1\">[</bpt>.NET Core 1.x<ept id=\"p1\">](#tab/netcore1x)</ept>","linkify":"[.NET Core 1.x](#tab/netcore1x)","source":"[.NET Core 1.x](#tab/netcore1x)"},{"pos":[865,876],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"content":"The <ph id=\"ph1\">`dotnet pack`</ph> command builds the project and creates NuGet packages.","pos":[878,950],"source":"The `dotnet pack` command builds the project and creates NuGet packages."},{"content":"The result of this command is a NuGet package.","pos":[951,997]},{"content":"If the <ph id=\"ph1\">`--include-symbols`</ph> option is present, another package containing the debug symbols is created.","pos":[998,1100],"source":" If the `--include-symbols` option is present, another package containing the debug symbols is created."},{"content":"NuGet dependencies of the packed project are added to the <bpt id=\"p1\">*</bpt>.nuspec<ept id=\"p1\">*</ept> file, so they're properly resolved when the package is installed.","pos":[1102,1235],"source":"NuGet dependencies of the packed project are added to the *.nuspec* file, so they're properly resolved when the package is installed."},{"content":"Project-to-project references aren't packaged inside the project.","pos":[1236,1301]},{"content":"Currently, you must have a package per project if you have project-to-project dependencies.","pos":[1302,1393]},{"content":"By default, <ph id=\"ph1\">`dotnet pack`</ph> builds the project first.","pos":[1395,1446],"source":"By default, `dotnet pack` builds the project first."},{"content":"If you wish to avoid this behavior, pass the <ph id=\"ph1\">`--no-build`</ph> option.","pos":[1447,1512],"source":" If you wish to avoid this behavior, pass the `--no-build` option."},{"content":"This option is often useful in Continuous Integration (CI) build scenarios where you know the code was previously built.","pos":[1513,1633]},{"content":"You can provide MSBuild properties to the <ph id=\"ph1\">`dotnet pack`</ph> command for the packing process.","pos":[1635,1723],"source":"You can provide MSBuild properties to the `dotnet pack` command for the packing process."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NuGet metadata properties<ept id=\"p1\">](csproj.md#nuget-metadata-properties)</ept> and the <bpt id=\"p2\">[</bpt>MSBuild Command-Line Reference<ept id=\"p2\">](/visualstudio/msbuild/msbuild-command-line-reference)</ept>.","pos":[1724,1910],"source":" For more information, see [NuGet metadata properties](csproj.md#nuget-metadata-properties) and the [MSBuild Command-Line Reference](/visualstudio/msbuild/msbuild-command-line-reference)."},{"content":"The <bpt id=\"p1\">[</bpt>Examples<ept id=\"p1\">](#examples)</ept> section shows how to use the MSBuild -p switch for a couple of different scenarios.","pos":[1911,2020],"source":" The [Examples](#examples) section shows how to use the MSBuild -p switch for a couple of different scenarios."},{"pos":[2111,2120],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"The project to pack.","pos":[2141,2161]},{"content":"It's either a path to a <bpt id=\"p1\">[</bpt>csproj file<ept id=\"p1\">](csproj.md)</ept> or to a directory.","pos":[2162,2229],"source":" It's either a path to a [csproj file](csproj.md) or to a directory."},{"content":"If not specified, it defaults to the current directory.","pos":[2230,2285]},{"pos":[2290,2297],"content":"Options","linkify":"Options","nodes":[{"content":"Options","pos":[0,7]}]},{"pos":[2301,2332],"content":"<bpt id=\"p1\">[</bpt>.NET Core 2.x<ept id=\"p1\">](#tab/netcore2x)</ept>","linkify":"[.NET Core 2.x](#tab/netcore2x)","source":"[.NET Core 2.x](#tab/netcore2x)"},{"content":"Defines the build configuration.","pos":[2380,2412]},{"content":"The default value is <ph id=\"ph1\">`Debug`</ph>.","pos":[2413,2442],"source":" The default value is `Debug`."},{"content":"Forces all dependencies to be resolved even if the last restore was successful.","pos":[2463,2542]},{"content":"Specifying this flag is the same as deleting the <bpt id=\"p1\">*</bpt>project.assets.json<ept id=\"p1\">*</ept> file.","pos":[2543,2619],"source":" Specifying this flag is the same as deleting the *project.assets.json* file."},{"content":"Prints out a short help for the command.","pos":[2642,2682]},{"content":"Includes the source files in the NuGet package.","pos":[2712,2759]},{"content":"The sources files are included in the <ph id=\"ph1\">`src`</ph> folder within the <ph id=\"ph2\">`nupkg`</ph>.","pos":[2760,2830],"source":" The sources files are included in the `src` folder within the `nupkg`."},{"pos":[2861,2891],"content":"Generates the symbols <ph id=\"ph1\">`nupkg`</ph>.","source":"Generates the symbols `nupkg`."},{"content":"Doesn't build the project before packing.","pos":[2915,2956]},{"content":"It also implicitly sets the <ph id=\"ph1\">`--no-restore`</ph> flag.","pos":[2957,3005],"source":" It also implicitly sets the `--no-restore` flag."},{"content":"Ignores project-to-project references and only restores the root project.","pos":[3036,3109]},{"content":"Doesn't execute an implicit restore when running the command.","pos":[3135,3196]},{"content":"Places the built packages in the directory specified.","pos":[3240,3293]},{"content":"Specifies the target runtime to restore packages for.","pos":[3337,3390]},{"content":"For a list of Runtime Identifiers (RIDs), see the <bpt id=\"p1\">[</bpt>RID catalog<ept id=\"p1\">](../rid-catalog.md)</ept>.","pos":[3391,3474],"source":" For a list of Runtime Identifiers (RIDs), see the [RID catalog](../rid-catalog.md)."},{"content":"Sets the serviceable flag in the package.","pos":[3504,3545]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>.NET Blog: .NET 4.5.1 Supports Microsoft Security Updates for .NET NuGet Libraries<ept id=\"p1\">](https://aka.ms/nupkgservicing)</ept>.","pos":[3546,3688],"source":" For more information, see [.NET Blog: .NET 4.5.1 Supports Microsoft Security Updates for .NET NuGet Libraries](https://aka.ms/nupkgservicing)."},{"pos":[3735,3812],"content":"Defines the value for the <ph id=\"ph1\">`$(VersionSuffix)`</ph> MSBuild property in the project.","source":"Defines the value for the `$(VersionSuffix)` MSBuild property in the project."},{"content":"Sets the verbosity level of the command.","pos":[3848,3888]},{"content":"Allowed values are <ph id=\"ph1\">`q[uiet]`</ph>, <ph id=\"ph2\">`m[inimal]`</ph>, <ph id=\"ph3\">`n[ormal]`</ph>, <ph id=\"ph4\">`d[etailed]`</ph>, and <ph id=\"ph5\">`diag[nostic]`</ph>.","pos":[3889,3977],"source":" Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`."},{"pos":[3981,4116],"content":"[!NOTE]\nWeb projects aren't packable by default. To override the default behavior, add the following property to your *.csproj* file:","leadings":["","> "],"nodes":[{"content":"Web projects aren't packable by default. To override the default behavior, add the following property to your *.csproj* file:","pos":[8,133],"nodes":[{"content":"Web projects aren't packable by default.","pos":[0,40]},{"content":"To override the default behavior, add the following property to your <bpt id=\"p1\">*</bpt>.csproj<ept id=\"p1\">*</ept> file:","pos":[41,125],"source":" To override the default behavior, add the following property to your *.csproj* file:"}]}]},{"pos":[4207,4238],"content":"<bpt id=\"p1\">[</bpt>.NET Core 1.x<ept id=\"p1\">](#tab/netcore1x)</ept>","linkify":"[.NET Core 1.x](#tab/netcore1x)","source":"[.NET Core 1.x](#tab/netcore1x)"},{"content":"Defines the build configuration.","pos":[4286,4318]},{"content":"The default value is <ph id=\"ph1\">`Debug`</ph>.","pos":[4319,4348],"source":" The default value is `Debug`."},{"content":"Prints out a short help for the command.","pos":[4371,4411]},{"content":"Includes the source files in the NuGet package.","pos":[4441,4488]},{"content":"The sources files are included in the <ph id=\"ph1\">`src`</ph> folder within the <ph id=\"ph2\">`nupkg`</ph>.","pos":[4489,4559],"source":" The sources files are included in the `src` folder within the `nupkg`."},{"pos":[4590,4620],"content":"Generates the symbols <ph id=\"ph1\">`nupkg`</ph>.","source":"Generates the symbols `nupkg`."},{"content":"Doesn't build the project before packing.","pos":[4644,4685]},{"content":"Places the built packages in the directory specified.","pos":[4729,4782]},{"content":"Sets the serviceable flag in the package.","pos":[4812,4853]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>.NET Blog: .NET 4.5.1 Supports Microsoft Security Updates for .NET NuGet Libraries<ept id=\"p1\">](https://aka.ms/nupkgservicing)</ept>.","pos":[4854,4996],"source":" For more information, see [.NET Blog: .NET 4.5.1 Supports Microsoft Security Updates for .NET NuGet Libraries](https://aka.ms/nupkgservicing)."},{"pos":[5043,5120],"content":"Defines the value for the <ph id=\"ph1\">`$(VersionSuffix)`</ph> MSBuild property in the project.","source":"Defines the value for the `$(VersionSuffix)` MSBuild property in the project."},{"content":"Sets the verbosity level of the command.","pos":[5156,5196]},{"content":"Allowed values are <ph id=\"ph1\">`q[uiet]`</ph>, <ph id=\"ph2\">`m[inimal]`</ph>, <ph id=\"ph3\">`n[ormal]`</ph>, <ph id=\"ph4\">`d[etailed]`</ph>, and <ph id=\"ph5\">`diag[nostic]`</ph>.","pos":[5197,5285],"source":" Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`."},{"pos":[5295,5303],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"Pack the project in the current directory:","pos":[5307,5349]},{"pos":[5387,5411],"content":"Pack the <ph id=\"ph1\">`app1`</ph> project:","source":"Pack the `app1` project:"},{"pos":[5480,5580],"content":"Pack the project in the current directory and place the resulting packages into the <ph id=\"ph1\">`nupkgs`</ph> folder:","source":"Pack the project in the current directory and place the resulting packages into the `nupkgs` folder:"},{"pos":[5634,5725],"content":"Pack the project in the current directory into the <ph id=\"ph1\">`nupkgs`</ph> folder and skip the build step:","source":"Pack the project in the current directory into the `nupkgs` folder and skip the build step:"},{"pos":[5790,5999],"content":"With the project's version suffix configured as <ph id=\"ph1\">`&lt;VersionSuffix&gt;$(VersionSuffix)&lt;/VersionSuffix&gt;`</ph> in the <bpt id=\"p1\">*</bpt>.csproj<ept id=\"p1\">*</ept> file, pack the current project and update the resulting package version with the given suffix:","source":"With the project's version suffix configured as `<VersionSuffix>$(VersionSuffix)</VersionSuffix>` in the *.csproj* file, pack the current project and update the resulting package version with the given suffix:"},{"pos":[6064,6142],"content":"Set the package version to <ph id=\"ph1\">`2.1.0`</ph> with the <ph id=\"ph2\">`PackageVersion`</ph> MSBuild property:","source":"Set the package version to `2.1.0` with the `PackageVersion` MSBuild property:"},{"pos":[6204,6285],"content":"Pack the project for a specific <bpt id=\"p1\">[</bpt>target framework<ept id=\"p1\">](../../standard/frameworks.md)</ept>:","source":"Pack the project for a specific [target framework](../../standard/frameworks.md):"},{"content":"Pack the project and use a specific runtime (Windows 10) for the restore operation (.NET Core SDK 2.0 and later versions):","pos":[6349,6471]},{"pos":[6529,6652],"content":"Pack the project using a <bpt id=\"p1\">[</bpt>.nuspec file<ept id=\"p1\">](https://docs.microsoft.com/nuget/reference/msbuild-targets#packing-using-a-nuspec)</ept>:","source":"Pack the project using a [.nuspec file](https://docs.microsoft.com/nuget/reference/msbuild-targets#packing-using-a-nuspec):"}]}