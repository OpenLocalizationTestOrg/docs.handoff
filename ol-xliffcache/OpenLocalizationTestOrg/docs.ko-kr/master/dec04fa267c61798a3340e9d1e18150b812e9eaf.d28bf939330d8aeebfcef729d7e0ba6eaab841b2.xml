{"content":"---\ntitle: \"SetPEKind Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink2.SetPEKind\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"SetPEKind\"\nhelpviewer_keywords: \n  - \"SetPEKind method\"\nms.assetid: 050e77ee-3014-45c0-9e29-2ebe29347b0d\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# SetPEKind Method\nDetermines the portable executable type, either machine-specific or machine-agnostic.  \n  \n## Syntax  \n  \n```  \nHRESULT SetPEKind(  \n    mdAssembly AssemblyID,  \n    mdToken FileToken,  \n    DWORD dwPEKind,  \n    DWORD dwMachine  \n) PURE;   \n```  \n  \n## Parameters  \n `AssemblyID`  \n ID of the assembly.  \n  \n `FileToken`  \n Token of file for which the PE type is to be set. Can be NULL if `AssemblyID` does not indicate an unbound netmodule.  \n  \n `dwPEKind`  \n The type of PE, as indicated by the [CorPEKind Enumeration](../../../../docs/framework/unmanaged-api/metadata/corpekind-enumeration.md).  \n  \n `dwMachine`  \n The target machine architecture, as indicated in the NT header.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h.  \n  \n## See also\n\n- [GetPEKind Method](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-getpekind-method.md)\n- [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)\n- [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)\n- [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)\n","nodes":[{"pos":[4,325],"embed":true,"restype":"x-metadata","content":"title: \"SetPEKind Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink2.SetPEKind\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"SetPEKind\"\nhelpviewer_keywords: \n  - \"SetPEKind method\"\nms.assetid: 050e77ee-3014-45c0-9e29-2ebe29347b0d\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"SetPEKind Method","nodes":[{"pos":[0,16],"content":"SetPEKind Method","nodes":[{"content":"SetPEKind Method","pos":[0,16]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[332,348],"content":"SetPEKind Method","linkify":"SetPEKind Method","nodes":[{"content":"SetPEKind Method","pos":[0,16]}]},{"content":"Determines the portable executable type, either machine-specific or machine-agnostic.","pos":[349,434]},{"pos":[443,449],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[603,613],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"ID of the assembly.","pos":[633,652]},{"content":"Token of file for which the PE type is to be set.","pos":[674,723]},{"content":"Can be NULL if <ph id=\"ph1\">`AssemblyID`</ph> does not indicate an unbound netmodule.","pos":[724,791],"source":" Can be NULL if `AssemblyID` does not indicate an unbound netmodule."},{"content":"The type of PE, as indicated by the <bpt id=\"p1\">[</bpt>CorPEKind Enumeration<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/corpekind-enumeration.md)</ept>.","pos":[812,948],"source":"The type of PE, as indicated by the [CorPEKind Enumeration](../../../../docs/framework/unmanaged-api/metadata/corpekind-enumeration.md)."},{"content":"The target machine architecture, as indicated in the NT header.","pos":[970,1033]},{"pos":[1042,1054],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1058,1094]},{"pos":[1103,1115],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h.","pos":[1119,1136]},{"pos":[1145,1153],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1157,1263],"content":"<bpt id=\"p1\">[</bpt>GetPEKind Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-getpekind-method.md)</ept>","source":"[GetPEKind Method](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-getpekind-method.md)"},{"pos":[1266,1354],"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept>","source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)"},{"pos":[1357,1443],"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept>","source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)"},{"pos":[1446,1514],"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}