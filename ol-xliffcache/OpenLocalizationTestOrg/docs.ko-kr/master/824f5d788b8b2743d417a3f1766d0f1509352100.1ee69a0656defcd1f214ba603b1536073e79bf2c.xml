{"content":"---\ntitle: \"Reflection and .NET Native | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 91c9eae4-c641-476c-a06e-d7ce39709763\ncaps.latest.revision: 16\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# Reflection and .NET Native\nIn the .NET Framework, managed development supports metaprogramming through the reflection API. Reflection allows you to inspect objects in an app, call methods on objects discovered through inspection, generate new types at run time, and supports many other dynamic code scenarios. It also supports serialization and deserialization, which allows an object's field values to be persisted and later restored. These scenarios all require the .NET Framework just-in-time (JIT) compiler to generate native code based on available metadata.  \n  \n The [!INCLUDE[net_native](../../../includes/net-native-md.md)] runtime doesn't include a JIT compiler. As a result, all necessary native code must be generated in advance. A set of heuristics is used to determine what code should be generated, but these heuristics cannot cover all possible metaprogramming scenarios.  Therefore, you must provide hints for these metaprogramming scenarios by using [runtime directives](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md). If the necessary metadata or implementation code is not available at runtime, your app throws a [MissingMetadataException](../../../docs/framework/net-native/missingmetadataexception-class-net-native.md), [MissingRuntimeArtifactException](../../../docs/framework/net-native/missingruntimeartifactexception-class-net-native.md), or [MissingInteropDataException](../../../docs/framework/net-native/missinginteropdataexception-class-net-native.md) exception. Two troubleshooters are available that will generate the appropriate entry for your runtime directives file that eliminates the exception:  \n  \n-   The [MissingMetadataException troubleshooter](http://dotnet.github.io/native/troubleshooter/type.html) for types.  \n  \n-   The [MissingMetadataException troubleshooter](http://dotnet.github.io/native/troubleshooter/method.html) for methods.  \n  \n> [!NOTE]\n>  For an overview of the .NET Native compilation process that provides background on why a runtime directives file is needed, see [.NET Native and Compilation](../../../docs/framework/net-native/net-native-and-compilation.md).  \n  \n In addition, [!INCLUDE[net_native](../../../includes/net-native-md.md)] doesn't allow you to reflect over private members of the .NET Framework class library. For example, a call to the <xref:System.Reflection.TypeInfo.DeclaredFields%2A?displayProperty=fullName> property to retrieve the fields of a .NET Framework class library type returns only public or protected fields.  \n  \n The following topics provide the conceptual and reference documentation that you need to support reflection and serialization in your apps:  \n  \n-   [APIs That Rely on Reflection](../../../docs/framework/net-native/apis-that-rely-on-reflection.md)  \n  \n-   [Reflection API Reference](../../../docs/framework/net-native/net-native-reflection-api-reference.md)  \n  \n-   [Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)  \n  \n## See Also  \n [Compiling Apps with .NET Native](../../../docs/framework/net-native/index.md)   \n [.NET Native and Compilation](../../../docs/framework/net-native/net-native-and-compilation.md)","nodes":[{"pos":[4,352],"nodes":[{"content":"Reflection and .NET Native | Microsoft Docs","nodes":[{"pos":[0,43],"content":"Reflection and .NET Native | Microsoft Docs","nodes":[{"content":"Reflection and .NET Native | Microsoft Docs","pos":[0,43]}]}],"pos":[6,52],"yaml":true}],"content":"title: \"Reflection and .NET Native | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 91c9eae4-c641-476c-a06e-d7ce39709763\ncaps.latest.revision: 16\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[359,385],"content":"Reflection and .NET Native","linkify":"Reflection and .NET Native","nodes":[{"content":"Reflection and .NET Native","pos":[0,26]}]},{"content":"In the .NET Framework, managed development supports metaprogramming through the reflection API.","pos":[386,481]},{"content":"Reflection allows you to inspect objects in an app, call methods on objects discovered through inspection, generate new types at run time, and supports many other dynamic code scenarios.","pos":[482,668]},{"content":"It also supports serialization and deserialization, which allows an object's field values to be persisted and later restored.","pos":[669,794]},{"content":"These scenarios all require the .NET Framework just-in-time (JIT) compiler to generate native code based on available metadata.","pos":[795,922]},{"content":"The <ph id=\"ph1\">[!INCLUDE[net_native](../../../includes/net-native-md.md)]</ph> runtime doesn't include a JIT compiler.","pos":[929,1031],"source":"The [!INCLUDE[net_native](../../../includes/net-native-md.md)] runtime doesn't include a JIT compiler."},{"content":"As a result, all necessary native code must be generated in advance.","pos":[1032,1100]},{"content":"A set of heuristics is used to determine what code should be generated, but these heuristics cannot cover all possible metaprogramming scenarios.","pos":[1101,1246]},{"content":"Therefore, you must provide hints for these metaprogramming scenarios by using <bpt id=\"p1\">[</bpt>runtime directives<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept>.","pos":[1248,1442],"source":"  Therefore, you must provide hints for these metaprogramming scenarios by using [runtime directives](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)."},{"content":"If the necessary metadata or implementation code is not available at runtime, your app throws a <bpt id=\"p1\">[</bpt>MissingMetadataException<ept id=\"p1\">](../../../docs/framework/net-native/missingmetadataexception-class-net-native.md)</ept>, <bpt id=\"p2\">[</bpt>MissingRuntimeArtifactException<ept id=\"p2\">](../../../docs/framework/net-native/missingruntimeartifactexception-class-net-native.md)</ept>, or <bpt id=\"p3\">[</bpt>MissingInteropDataException<ept id=\"p3\">](../../../docs/framework/net-native/missinginteropdataexception-class-net-native.md)</ept> exception.","pos":[1443,1898],"source":" If the necessary metadata or implementation code is not available at runtime, your app throws a [MissingMetadataException](../../../docs/framework/net-native/missingmetadataexception-class-net-native.md), [MissingRuntimeArtifactException](../../../docs/framework/net-native/missingruntimeartifactexception-class-net-native.md), or [MissingInteropDataException](../../../docs/framework/net-native/missinginteropdataexception-class-net-native.md) exception."},{"content":"Two troubleshooters are available that will generate the appropriate entry for your runtime directives file that eliminates the exception:","pos":[1899,2037]},{"pos":[2047,2160],"content":"The <bpt id=\"p1\">[</bpt>MissingMetadataException troubleshooter<ept id=\"p1\">](http://dotnet.github.io/native/troubleshooter/type.html)</ept> for types.","source":"The [MissingMetadataException troubleshooter](http://dotnet.github.io/native/troubleshooter/type.html) for types."},{"pos":[2170,2287],"content":"The <bpt id=\"p1\">[</bpt>MissingMetadataException troubleshooter<ept id=\"p1\">](http://dotnet.github.io/native/troubleshooter/method.html)</ept> for methods.","source":"The [MissingMetadataException troubleshooter](http://dotnet.github.io/native/troubleshooter/method.html) for methods."},{"pos":[2295,2530],"content":"[!NOTE]\n For an overview of the .NET Native compilation process that provides background on why a runtime directives file is needed, see [.NET Native and Compilation](../../../docs/framework/net-native/net-native-and-compilation.md).","leadings":["","> "],"nodes":[{"content":"For an overview of the .NET Native compilation process that provides background on why a runtime directives file is needed, see <bpt id=\"p1\">[</bpt>.NET Native and Compilation<ept id=\"p1\">](../../../docs/framework/net-native/net-native-and-compilation.md)</ept>.","pos":[9,233],"source":"For an overview of the .NET Native compilation process that provides background on why a runtime directives file is needed, see [.NET Native and Compilation](../../../docs/framework/net-native/net-native-and-compilation.md)."}]},{"content":"In addition, <ph id=\"ph1\">[!INCLUDE[net_native](../../../includes/net-native-md.md)]</ph> doesn't allow you to reflect over private members of the .NET Framework class library.","pos":[2537,2695],"source":"In addition, [!INCLUDE[net_native](../../../includes/net-native-md.md)] doesn't allow you to reflect over private members of the .NET Framework class library."},{"content":"For example, a call to the <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo.DeclaredFields%2A?displayProperty=fullName&gt;</ph> property to retrieve the fields of a .NET Framework class library type returns only public or protected fields.","pos":[2696,2911],"source":" For example, a call to the <xref:System.Reflection.TypeInfo.DeclaredFields%2A?displayProperty=fullName> property to retrieve the fields of a .NET Framework class library type returns only public or protected fields."},{"content":"The following topics provide the conceptual and reference documentation that you need to support reflection and serialization in your apps:","pos":[2918,3057]},{"pos":[3067,3165],"content":"<bpt id=\"p1\">[</bpt>APIs That Rely on Reflection<ept id=\"p1\">](../../../docs/framework/net-native/apis-that-rely-on-reflection.md)</ept>","source":"[APIs That Rely on Reflection](../../../docs/framework/net-native/apis-that-rely-on-reflection.md)"},{"pos":[3175,3276],"content":"<bpt id=\"p1\">[</bpt>Reflection API Reference<ept id=\"p1\">](../../../docs/framework/net-native/net-native-reflection-api-reference.md)</ept>","source":"[Reflection API Reference](../../../docs/framework/net-native/net-native-reflection-api-reference.md)"},{"pos":[3286,3438],"content":"<bpt id=\"p1\">[</bpt>Runtime Directives (rd.xml) Configuration File Reference<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept>","source":"[Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)"},{"pos":[3447,3455],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Compiling Apps with .NET Native<ept id=\"p1\">](../../../docs/framework/net-native/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3459,3538],"source":"[Compiling Apps with .NET Native](../../../docs/framework/net-native/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>.NET Native and Compilation<ept id=\"p1\">](../../../docs/framework/net-native/net-native-and-compilation.md)</ept>","pos":[3542,3637],"source":"[.NET Native and Compilation](../../../docs/framework/net-native/net-native-and-compilation.md)"}]}