{"content":"---\ntitle: \"ICorDebugVirtualUnwinder::Next Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: 790e0426-e5cd-49fd-a792-f8c8635d72fe\ncaps.latest.revision: 4\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugVirtualUnwinder::Next Method\nAdvances to the caller's context.  \n  \n## Syntax  \n  \n```  \nHRESULT Next();  \n```  \n  \n#### Parameters  \n None.  \n  \n## Return Value  \n `S_OK` if the unwind occurred successfully, or `CORDBG_S_AT_END_OF_STACK` if the unwind cannot be completed because there are no more frames.  \n  \n If a failing HRESULT is returned, ICorDebug APIs will return `CORDBG_E_DATA_TARGET_ERROR`.  \n  \n## Remarks  \n The stack walker should ensure that it makes forward progress, so that eventually a call to `Next` will return a failing HRESULT or `CORDBG_S_AT_END_OF_STACK`. Returning `S_OK` indefinitely may cause an infinite loop.  \n  \n> [!NOTE]\n>  This method is available with .NET Native only.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]  \n  \n## See Also  \n [ICorDebugMemoryBuffer Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugmemorybuffer-interface.md)   \n [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)","nodes":[{"pos":[4,386],"embed":true,"restype":"x-metadata","content":"title: \"ICorDebugVirtualUnwinder::Next Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: 790e0426-e5cd-49fd-a792-f8c8635d72fe\ncaps.latest.revision: 4\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"ICorDebugVirtualUnwinder::Next Method | Microsoft Docs","nodes":[{"pos":[0,54],"content":"ICorDebugVirtualUnwinder::Next Method | Microsoft Docs","nodes":[{"content":"ICorDebugVirtualUnwinder::Next Method | Microsoft Docs","pos":[0,54]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[393,430],"content":"ICorDebugVirtualUnwinder::Next Method","linkify":"ICorDebugVirtualUnwinder::Next Method","nodes":[{"content":"ICorDebugVirtualUnwinder::Next Method","pos":[0,37]}]},{"content":"Advances to the caller's context.","pos":[431,464]},{"pos":[473,479],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[523,533],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"None.","pos":[537,542]},{"pos":[551,563],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[567,708],"content":"<ph id=\"ph1\">`S_OK`</ph> if the unwind occurred successfully, or <ph id=\"ph2\">`CORDBG_S_AT_END_OF_STACK`</ph> if the unwind cannot be completed because there are no more frames.","source":"`S_OK` if the unwind occurred successfully, or `CORDBG_S_AT_END_OF_STACK` if the unwind cannot be completed because there are no more frames."},{"pos":[715,805],"content":"If a failing HRESULT is returned, ICorDebug APIs will return <ph id=\"ph1\">`CORDBG_E_DATA_TARGET_ERROR`</ph>.","source":"If a failing HRESULT is returned, ICorDebug APIs will return `CORDBG_E_DATA_TARGET_ERROR`."},{"pos":[814,821],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The stack walker should ensure that it makes forward progress, so that eventually a call to <ph id=\"ph1\">`Next`</ph> will return a failing HRESULT or <ph id=\"ph2\">`CORDBG_S_AT_END_OF_STACK`</ph>.","pos":[825,984],"source":"The stack walker should ensure that it makes forward progress, so that eventually a call to `Next` will return a failing HRESULT or `CORDBG_S_AT_END_OF_STACK`."},{"content":"Returning <ph id=\"ph1\">`S_OK`</ph> indefinitely may cause an infinite loop.","pos":[985,1042],"source":" Returning `S_OK` indefinitely may cause an infinite loop."},{"pos":[1050,1108],"content":"[!NOTE]\n This method is available with .NET Native only.","leadings":["","> "],"nodes":[{"content":"This method is available with .NET Native only.","pos":[9,56]}]},{"pos":[1117,1129],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1133,1237],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[1244,1280],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[1287,1312],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[1319,1415],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]"},{"pos":[1424,1432],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugMemoryBuffer Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmemorybuffer-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[1436,1557],"source":"[ICorDebugMemoryBuffer Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugmemorybuffer-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept>","pos":[1561,1659],"source":"[Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)"}]}