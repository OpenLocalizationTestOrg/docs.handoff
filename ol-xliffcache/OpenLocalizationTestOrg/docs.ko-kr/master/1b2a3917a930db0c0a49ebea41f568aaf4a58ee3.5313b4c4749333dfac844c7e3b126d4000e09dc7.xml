{"content":"---\ntitle: dotnet test command\ndescription: The dotnet test command is used to execute unit tests in a given project.\nms.date: 05/29/2018\n---\n# dotnet test\n\n[!INCLUDE [topic-appliesto-net-core-all](../../../includes/topic-appliesto-net-core-all.md)]\n\n## Name\n\n`dotnet test` - .NET test driver used to execute unit tests.\n\n## Synopsis\n\n# [.NET Core 2.1](#tab/netcore21)\n\n```console\ndotnet test [<PROJECT>] [-a|--test-adapter-path] [--blame] [-c|--configuration] [--collect] [-d|--diag] [-f|--framework] [--filter]\n    [-l|--logger] [--no-build] [--no-restore] [-o|--output] [-r|--results-directory] [-s|--settings] [-t|--list-tests] \n    [-v|--verbosity] [-- <RunSettings arguments>]\n\ndotnet test [-h|--help]\n```\n\n# [.NET Core 2.0](#tab/netcore20)\n\n```console\ndotnet test [<PROJECT>] [-a|--test-adapter-path] [-c|--configuration] [--collect] [-d|--diag] [-f|--framework] [--filter]\n    [-l|--logger] [--no-build] [--no-restore] [-o|--output] [-r|--results-directory] [-s|--settings] [-t|--list-tests] [-v|--verbosity]\n\ndotnet test [-h|--help]\n```\n\n# [.NET Core 1.x](#tab/netcore1x)\n\n```console\ndotnet test [<PROJECT>] [-a|--test-adapter-path] [-c|--configuration] [-d|--diag] [-f|--framework] [--filter] [-l|--logger] [--no-build] [-o|--output] [-s|--settings] [-t|--list-tests]  [-v|--verbosity]\n\ndotnet test [-h|--help]\n```\n\n---\n\n## Description\n\nThe `dotnet test` command is used to execute unit tests in a given project. The `dotnet test` command launches the test runner console application specified for a project. The test runner executes the tests defined for a unit test framework (for example, MSTest, NUnit, or xUnit) and reports the success or failure of each test. If all tests are successful, the test runner returns 0 as an exit code; otherwise if any test fails, it returns 1. The test runner and the unit test library are packaged as NuGet packages and are restored as ordinary dependencies for the project.\n\nTest projects specify the test runner using an ordinary `<PackageReference>` element, as seen in the following sample project file:\n\n[!code-xml[XUnit Basic Template](../../../samples/snippets/csharp/xunit-test/xunit-test.csproj)]\n\n## Arguments\n\n`PROJECT`\n\nPath to the test project. If not specified, it defaults to current directory.\n\n## Options\n\n# [.NET Core 2.1](#tab/netcore21)\n\n`-a|--test-adapter-path <PATH_TO_ADAPTER>`\n\nUse the custom test adapters from the specified path in the test run.\n\n`--blame`\n\nRuns the tests in blame mode. This option is helpful in isolating the problematic tests causing test host to crash. It creates an output file in the current directory as *Sequence.xml* that captures the order of tests execution before the crash.\n\n`-c|--configuration {Debug|Release}`\n\nDefines the build configuration. The default value is `Debug`, but your project's configuration could override this default SDK setting.\n\n`--collect <DATA_COLLECTOR_FRIENDLY_NAME>`\n\nEnables data collector for the test run. For more information, see [Monitor and analyze test run](https://aka.ms/vstest-collect).\n\n`-d|--diag <PATH_TO_DIAGNOSTICS_FILE>`\n\nEnables diagnostic mode for the test platform and write diagnostic messages to the specified file.\n\n`-f|--framework <FRAMEWORK>`\n\nLooks for test binaries for a specific [framework](../../standard/frameworks.md).\n\n`--filter <EXPRESSION>`\n\nFilters out tests in the current project using the given expression. For more information, see the [Filter option details](#filter-option-details) section. For more information and examples on how to use selective unit test filtering, see [Running selective unit tests](../testing/selective-unit-tests.md).\n\n`-h|--help`\n\nPrints out a short help for the command.\n\n`-l|--logger <LoggerUri/FriendlyName>`\n\nSpecifies a logger for test results.\n\n`--no-build`\n\nDoesn't build the test project before running it. It also implicit sets the `--no-restore` flag.\n\n`--no-restore`\n\nDoesn't execute an implicit restore when running the command.\n\n`-o|--output <OUTPUT_DIRECTORY>`\n\nDirectory in which to find the binaries to run.\n\n`-r|--results-directory <PATH>`\n\nThe directory where the test results are going to be placed. If the specified directory doesn't exist, it's created.\n\n`-s|--settings <SETTINGS_FILE>`\n\nSettings to use when running tests.\n\n`-t|--list-tests`\n\nList all of the discovered tests in the current project.\n\n`-v|--verbosity <LEVEL>`\n\nSets the verbosity level of the command. Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`.\n\n`RunSettings arguments`\n\nArguments passed as RunSettings configurations for the test. Arguments are specified as `[name]=[value]` pairs after \"-- \" (note the space after --). A space is used to separate multiple `[name]=[value]` pairs.\n\nExample: `dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True`\n\nFor more information about RunSettings, see [vstest.console.exe: Passing RunSettings args](https://github.com/Microsoft/vstest-docs/blob/master/docs/RunSettingsArguments.md).\n\n# [.NET Core 2.0](#tab/netcore20)\n\n`-a|--test-adapter-path <PATH_TO_ADAPTER>`\n\nUse the custom test adapters from the specified path in the test run.\n\n`-c|--configuration {Debug|Release}`\n\nDefines the build configuration. The default value is `Debug`, but your project's configuration could override this default SDK setting.\n\n`--collect <DATA_COLLECTOR_FRIENDLY_NAME>`\n\nEnables data collector for the test run. For more information, see [Monitor and analyze test run](https://aka.ms/vstest-collect).\n\n`-d|--diag <PATH_TO_DIAGNOSTICS_FILE>`\n\nEnables diagnostic mode for the test platform and write diagnostic messages to the specified file.\n\n`-f|--framework <FRAMEWORK>`\n\nLooks for test binaries for a specific [framework](../../standard/frameworks.md).\n\n`--filter <EXPRESSION>`\n\nFilters out tests in the current project using the given expression. For more information, see the [Filter option details](#filter-option-details) section. For more information and examples on how to use selective unit test filtering, see [Running selective unit tests](../testing/selective-unit-tests.md).\n\n`-h|--help`\n\nPrints out a short help for the command.\n\n`-l|--logger <LoggerUri/FriendlyName>`\n\nSpecifies a logger for test results.\n\n`--no-build`\n\nDoesn't build the test project before running it. It also implicit sets the `--no-restore` flag.\n\n`--no-restore`\n\nDoesn't execute an implicit restore when running the command.\n\n`-o|--output <OUTPUT_DIRECTORY>`\n\nDirectory in which to find the binaries to run.\n\n`-r|--results-directory <PATH>`\n\nThe directory where the test results are going to be placed. If the specified directory doesn't exist, it's created.\n\n`-s|--settings <SETTINGS_FILE>`\n\nSettings to use when running tests.\n\n`-t|--list-tests`\n\nList all of the discovered tests in the current project.\n\n`-v|--verbosity <LEVEL>`\n\nSets the verbosity level of the command. Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`.\n\n# [.NET Core 1.x](#tab/netcore1x)\n\n`-a|--test-adapter-path <PATH_TO_ADAPTER>`\n\nUse the custom test adapters from the specified path in the test run.\n\n`-c|--configuration {Debug|Release}`\n\nDefines the build configuration. The default value is `Debug`, but your project's configuration could override this default SDK setting.\n\n`-d|--diag <PATH_TO_DIAGNOSTICS_FILE>`\n\nEnables diagnostic mode for the test platform and write diagnostic messages to the specified file.\n\n`-f|--framework <FRAMEWORK>`\n\nLooks for test binaries for a specific [framework](../../standard/frameworks.md).\n\n`--filter <EXPRESSION>`\n\nFilters out tests in the current project using the given expression. For more information, see the [Filter option details](#filter-option-details) section. For more information and examples on how to use selective unit test filtering, see [Running selective unit tests](../testing/selective-unit-tests.md).\n\n`-h|--help`\n\nPrints out a short help for the command.\n\n`-l|--logger <LoggerUri/FriendlyName>`\n\nSpecifies a logger for test results.\n\n`--no-build`\n\nDoesn't build the test project before running it.\n\n`-o|--output <OUTPUT_DIRECTORY>`\n\nDirectory in which to find the binaries to run.\n\n`-s|--settings <SETTINGS_FILE>`\n\nSettings to use when running tests.\n\n`-t|--list-tests`\n\nList all of the discovered tests in the current project.\n\n`-v|--verbosity <LEVEL>`\n\nSets the verbosity level of the command. Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`.\n\n---\n\n## Examples\n\nRun the tests in the project in the current directory:\n\n`dotnet test`\n\nRun the tests in the `test1` project:\n\n`dotnet test ~/projects/test1/test1.csproj`\n\nRun the tests in the project in the current directory and generate a test results file in the trx format:\n\n`dotnet test --logger:trx`\n\n## Filter option details\n\n`--filter <EXPRESSION>`\n\n`<Expression>` has the format `<property><operator><value>[|&<Expression>]`.\n\n`<property>` is an attribute of the `Test Case`. The following are the properties supported by popular unit test frameworks:\n\n| Test Framework | Supported properties                                                                                      |\n| -------------- | --------------------------------------------------------------------------------------------------------- |\n| MSTest         | <ul><li>FullyQualifiedName</li><li>Name</li><li>ClassName</li><li>Priority</li><li>TestCategory</li></ul> |\n| xUnit          | <ul><li>FullyQualifiedName</li><li>DisplayName</li><li>Traits</li></ul>                                   |\n\nThe `<operator>` describes the relationship between the property and the value:\n\n| Operator | Function        |\n| :------: | --------------- |\n| `=`      | Exact match     |\n| `!=`     | Not exact match |\n| `~`      | Contains        |\n\n`<value>` is a string. All the lookups are case insensitive.\n\nAn expression without an `<operator>` is automatically considered as a `contains` on `FullyQualifiedName` property (for example, `dotnet test --filter xyz` is same as `dotnet test --filter FullyQualifiedName~xyz`).\n\nExpressions can be joined with conditional operators:\n\n| Operator            | Function |\n| ------------------- | -------- |\n| <code>&#124;</code> | OR       |\n| `&`                 | AND      |\n\nYou can enclose expressions in parenthesis when using conditional operators (for example, `(Name~TestMethod1) | (Name~TestMethod2)`).\n\nFor more information and examples on how to use selective unit test filtering, see [Running selective unit tests](../testing/selective-unit-tests.md).\n\n## See also\n\n- [Frameworks and Targets](../../standard/frameworks.md)\n- [.NET Core Runtime IDentifier (RID) catalog](../rid-catalog.md)\n","nodes":[{"pos":[4,137],"embed":true,"restype":"x-metadata","content":"title: dotnet test command\ndescription: The dotnet test command is used to execute unit tests in a given project.\nms.date: 05/29/2018","nodes":[{"content":"dotnet test command","nodes":[{"pos":[0,19],"content":"dotnet test command","nodes":[{"content":"dotnet test command","pos":[0,19]}]}],"path":["title"],"nosxs":false},{"content":"The dotnet test command is used to execute unit tests in a given project.","nodes":[{"pos":[0,73],"content":"The dotnet test command is used to execute unit tests in a given project.","nodes":[{"content":"The dotnet test command is used to execute unit tests in a given project.","pos":[0,73]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[144,155],"content":"dotnet test","linkify":"dotnet test","nodes":[{"content":"dotnet test","pos":[0,11]}]},{"pos":[254,258],"content":"Name","linkify":"Name","nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[260,320],"content":"<ph id=\"ph1\">`dotnet test`</ph> - .NET test driver used to execute unit tests.","source":"`dotnet test` - .NET test driver used to execute unit tests."},{"pos":[325,333],"content":"Synopsis","linkify":"Synopsis","nodes":[{"content":"Synopsis","pos":[0,8]}]},{"pos":[337,368],"content":"<bpt id=\"p1\">[</bpt>.NET Core 2.1<ept id=\"p1\">](#tab/netcore21)</ept>","linkify":"[.NET Core 2.1](#tab/netcore21)","source":"[.NET Core 2.1](#tab/netcore21)"},{"pos":[715,746],"content":"<bpt id=\"p1\">[</bpt>.NET Core 2.0<ept id=\"p1\">](#tab/netcore20)</ept>","linkify":"[.NET Core 2.0](#tab/netcore20)","source":"[.NET Core 2.0](#tab/netcore20)"},{"pos":[1049,1080],"content":"<bpt id=\"p1\">[</bpt>.NET Core 1.x<ept id=\"p1\">](#tab/netcore1x)</ept>","linkify":"[.NET Core 1.x](#tab/netcore1x)","source":"[.NET Core 1.x](#tab/netcore1x)"},{"pos":[1334,1345],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"content":"The <ph id=\"ph1\">`dotnet test`</ph> command is used to execute unit tests in a given project.","pos":[1347,1422],"source":"The `dotnet test` command is used to execute unit tests in a given project."},{"content":"The <ph id=\"ph1\">`dotnet test`</ph> command launches the test runner console application specified for a project.","pos":[1423,1518],"source":" The `dotnet test` command launches the test runner console application specified for a project."},{"content":"The test runner executes the tests defined for a unit test framework (for example, MSTest, NUnit, or xUnit) and reports the success or failure of each test.","pos":[1519,1675]},{"content":"If all tests are successful, the test runner returns 0 as an exit code; otherwise if any test fails, it returns 1.","pos":[1676,1790]},{"content":"The test runner and the unit test library are packaged as NuGet packages and are restored as ordinary dependencies for the project.","pos":[1791,1922]},{"pos":[1924,2055],"content":"Test projects specify the test runner using an ordinary <ph id=\"ph1\">`&lt;PackageReference&gt;`</ph> element, as seen in the following sample project file:","source":"Test projects specify the test runner using an ordinary `<PackageReference>` element, as seen in the following sample project file:"},{"pos":[2158,2167],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"Path to the test project.","pos":[2180,2205]},{"content":"If not specified, it defaults to current directory.","pos":[2206,2257]},{"pos":[2262,2269],"content":"Options","linkify":"Options","nodes":[{"content":"Options","pos":[0,7]}]},{"pos":[2273,2304],"content":"<bpt id=\"p1\">[</bpt>.NET Core 2.1<ept id=\"p1\">](#tab/netcore21)</ept>","linkify":"[.NET Core 2.1](#tab/netcore21)","source":"[.NET Core 2.1](#tab/netcore21)"},{"content":"Use the custom test adapters from the specified path in the test run.","pos":[2350,2419]},{"content":"Runs the tests in blame mode.","pos":[2432,2461]},{"content":"This option is helpful in isolating the problematic tests causing test host to crash.","pos":[2462,2547]},{"content":"It creates an output file in the current directory as <bpt id=\"p1\">*</bpt>Sequence.xml<ept id=\"p1\">*</ept> that captures the order of tests execution before the crash.","pos":[2548,2677],"source":" It creates an output file in the current directory as *Sequence.xml* that captures the order of tests execution before the crash."},{"content":"Defines the build configuration.","pos":[2717,2749]},{"content":"The default value is <ph id=\"ph1\">`Debug`</ph>, but your project's configuration could override this default SDK setting.","pos":[2750,2853],"source":" The default value is `Debug`, but your project's configuration could override this default SDK setting."},{"content":"Enables data collector for the test run.","pos":[2899,2939]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Monitor and analyze test run<ept id=\"p1\">](https://aka.ms/vstest-collect)</ept>.","pos":[2940,3028],"source":" For more information, see [Monitor and analyze test run](https://aka.ms/vstest-collect)."},{"content":"Enables diagnostic mode for the test platform and write diagnostic messages to the specified file.","pos":[3070,3168]},{"pos":[3200,3281],"content":"Looks for test binaries for a specific <bpt id=\"p1\">[</bpt>framework<ept id=\"p1\">](../../standard/frameworks.md)</ept>.","source":"Looks for test binaries for a specific [framework](../../standard/frameworks.md)."},{"content":"Filters out tests in the current project using the given expression.","pos":[3308,3376]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>Filter option details<ept id=\"p1\">](#filter-option-details)</ept> section.","pos":[3377,3463],"source":" For more information, see the [Filter option details](#filter-option-details) section."},{"content":"For more information and examples on how to use selective unit test filtering, see <bpt id=\"p1\">[</bpt>Running selective unit tests<ept id=\"p1\">](../testing/selective-unit-tests.md)</ept>.","pos":[3464,3614],"source":" For more information and examples on how to use selective unit test filtering, see [Running selective unit tests](../testing/selective-unit-tests.md)."},{"content":"Prints out a short help for the command.","pos":[3629,3669]},{"content":"Specifies a logger for test results.","pos":[3711,3747]},{"content":"Doesn't build the test project before running it.","pos":[3763,3812]},{"content":"It also implicit sets the <ph id=\"ph1\">`--no-restore`</ph> flag.","pos":[3813,3859],"source":" It also implicit sets the `--no-restore` flag."},{"content":"Doesn't execute an implicit restore when running the command.","pos":[3877,3938]},{"content":"Directory in which to find the binaries to run.","pos":[3974,4021]},{"content":"The directory where the test results are going to be placed.","pos":[4056,4116]},{"content":"If the specified directory doesn't exist, it's created.","pos":[4117,4172]},{"content":"Settings to use when running tests.","pos":[4207,4242]},{"content":"List all of the discovered tests in the current project.","pos":[4263,4319]},{"content":"Sets the verbosity level of the command.","pos":[4347,4387]},{"content":"Allowed values are <ph id=\"ph1\">`q[uiet]`</ph>, <ph id=\"ph2\">`m[inimal]`</ph>, <ph id=\"ph3\">`n[ormal]`</ph>, <ph id=\"ph4\">`d[etailed]`</ph>, and <ph id=\"ph5\">`diag[nostic]`</ph>.","pos":[4388,4476],"source":" Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`."},{"content":"Arguments passed as RunSettings configurations for the test.","pos":[4503,4563]},{"content":"Arguments are specified as <ph id=\"ph1\">`[name]=[value]`</ph> pairs after \"-- \" (note the space after --).","pos":[4564,4652],"source":" Arguments are specified as `[name]=[value]` pairs after \"-- \" (note the space after --)."},{"content":"A space is used to separate multiple <ph id=\"ph1\">`[name]=[value]`</ph> pairs.","pos":[4653,4713],"source":" A space is used to separate multiple `[name]=[value]` pairs."},{"pos":[4715,4807],"content":"Example: <ph id=\"ph1\">`dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True`</ph>","source":"Example: `dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True`"},{"pos":[4809,4983],"content":"For more information about RunSettings, see <bpt id=\"p1\">[</bpt>vstest.console.exe: Passing RunSettings args<ept id=\"p1\">](https://github.com/Microsoft/vstest-docs/blob/master/docs/RunSettingsArguments.md)</ept>.","source":"For more information about RunSettings, see [vstest.console.exe: Passing RunSettings args](https://github.com/Microsoft/vstest-docs/blob/master/docs/RunSettingsArguments.md)."},{"pos":[4987,5018],"content":"<bpt id=\"p1\">[</bpt>.NET Core 2.0<ept id=\"p1\">](#tab/netcore20)</ept>","linkify":"[.NET Core 2.0](#tab/netcore20)","source":"[.NET Core 2.0](#tab/netcore20)"},{"content":"Use the custom test adapters from the specified path in the test run.","pos":[5064,5133]},{"content":"Defines the build configuration.","pos":[5173,5205]},{"content":"The default value is <ph id=\"ph1\">`Debug`</ph>, but your project's configuration could override this default SDK setting.","pos":[5206,5309],"source":" The default value is `Debug`, but your project's configuration could override this default SDK setting."},{"content":"Enables data collector for the test run.","pos":[5355,5395]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Monitor and analyze test run<ept id=\"p1\">](https://aka.ms/vstest-collect)</ept>.","pos":[5396,5484],"source":" For more information, see [Monitor and analyze test run](https://aka.ms/vstest-collect)."},{"content":"Enables diagnostic mode for the test platform and write diagnostic messages to the specified file.","pos":[5526,5624]},{"pos":[5656,5737],"content":"Looks for test binaries for a specific <bpt id=\"p1\">[</bpt>framework<ept id=\"p1\">](../../standard/frameworks.md)</ept>.","source":"Looks for test binaries for a specific [framework](../../standard/frameworks.md)."},{"content":"Filters out tests in the current project using the given expression.","pos":[5764,5832]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>Filter option details<ept id=\"p1\">](#filter-option-details)</ept> section.","pos":[5833,5919],"source":" For more information, see the [Filter option details](#filter-option-details) section."},{"content":"For more information and examples on how to use selective unit test filtering, see <bpt id=\"p1\">[</bpt>Running selective unit tests<ept id=\"p1\">](../testing/selective-unit-tests.md)</ept>.","pos":[5920,6070],"source":" For more information and examples on how to use selective unit test filtering, see [Running selective unit tests](../testing/selective-unit-tests.md)."},{"content":"Prints out a short help for the command.","pos":[6085,6125]},{"content":"Specifies a logger for test results.","pos":[6167,6203]},{"content":"Doesn't build the test project before running it.","pos":[6219,6268]},{"content":"It also implicit sets the <ph id=\"ph1\">`--no-restore`</ph> flag.","pos":[6269,6315],"source":" It also implicit sets the `--no-restore` flag."},{"content":"Doesn't execute an implicit restore when running the command.","pos":[6333,6394]},{"content":"Directory in which to find the binaries to run.","pos":[6430,6477]},{"content":"The directory where the test results are going to be placed.","pos":[6512,6572]},{"content":"If the specified directory doesn't exist, it's created.","pos":[6573,6628]},{"content":"Settings to use when running tests.","pos":[6663,6698]},{"content":"List all of the discovered tests in the current project.","pos":[6719,6775]},{"content":"Sets the verbosity level of the command.","pos":[6803,6843]},{"content":"Allowed values are <ph id=\"ph1\">`q[uiet]`</ph>, <ph id=\"ph2\">`m[inimal]`</ph>, <ph id=\"ph3\">`n[ormal]`</ph>, <ph id=\"ph4\">`d[etailed]`</ph>, and <ph id=\"ph5\">`diag[nostic]`</ph>.","pos":[6844,6932],"source":" Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`."},{"pos":[6936,6967],"content":"<bpt id=\"p1\">[</bpt>.NET Core 1.x<ept id=\"p1\">](#tab/netcore1x)</ept>","linkify":"[.NET Core 1.x](#tab/netcore1x)","source":"[.NET Core 1.x](#tab/netcore1x)"},{"content":"Use the custom test adapters from the specified path in the test run.","pos":[7013,7082]},{"content":"Defines the build configuration.","pos":[7122,7154]},{"content":"The default value is <ph id=\"ph1\">`Debug`</ph>, but your project's configuration could override this default SDK setting.","pos":[7155,7258],"source":" The default value is `Debug`, but your project's configuration could override this default SDK setting."},{"content":"Enables diagnostic mode for the test platform and write diagnostic messages to the specified file.","pos":[7300,7398]},{"pos":[7430,7511],"content":"Looks for test binaries for a specific <bpt id=\"p1\">[</bpt>framework<ept id=\"p1\">](../../standard/frameworks.md)</ept>.","source":"Looks for test binaries for a specific [framework](../../standard/frameworks.md)."},{"content":"Filters out tests in the current project using the given expression.","pos":[7538,7606]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>Filter option details<ept id=\"p1\">](#filter-option-details)</ept> section.","pos":[7607,7693],"source":" For more information, see the [Filter option details](#filter-option-details) section."},{"content":"For more information and examples on how to use selective unit test filtering, see <bpt id=\"p1\">[</bpt>Running selective unit tests<ept id=\"p1\">](../testing/selective-unit-tests.md)</ept>.","pos":[7694,7844],"source":" For more information and examples on how to use selective unit test filtering, see [Running selective unit tests](../testing/selective-unit-tests.md)."},{"content":"Prints out a short help for the command.","pos":[7859,7899]},{"content":"Specifies a logger for test results.","pos":[7941,7977]},{"content":"Doesn't build the test project before running it.","pos":[7993,8042]},{"content":"Directory in which to find the binaries to run.","pos":[8078,8125]},{"content":"Settings to use when running tests.","pos":[8160,8195]},{"content":"List all of the discovered tests in the current project.","pos":[8216,8272]},{"content":"Sets the verbosity level of the command.","pos":[8300,8340]},{"content":"Allowed values are <ph id=\"ph1\">`q[uiet]`</ph>, <ph id=\"ph2\">`m[inimal]`</ph>, <ph id=\"ph3\">`n[ormal]`</ph>, <ph id=\"ph4\">`d[etailed]`</ph>, and <ph id=\"ph5\">`diag[nostic]`</ph>.","pos":[8341,8429],"source":" Allowed values are `q[uiet]`, `m[inimal]`, `n[ormal]`, `d[etailed]`, and `diag[nostic]`."},{"pos":[8439,8447],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"Run the tests in the project in the current directory:","pos":[8449,8503]},{"pos":[8520,8557],"content":"Run the tests in the <ph id=\"ph1\">`test1`</ph> project:","source":"Run the tests in the `test1` project:"},{"content":"Run the tests in the project in the current directory and generate a test results file in the trx format:","pos":[8604,8709]},{"pos":[8742,8763],"content":"Filter option details","linkify":"Filter option details","nodes":[{"content":"Filter option details","pos":[0,21]}]},{"pos":[8790,8866],"content":"<ph id=\"ph1\">`&lt;Expression&gt;`</ph> has the format <ph id=\"ph2\">`&lt;property&gt;&lt;operator&gt;&lt;value&gt;[|&amp;&lt;Expression&gt;]`</ph>.","source":"`<Expression>` has the format `<property><operator><value>[|&<Expression>]`."},{"content":"<ph id=\"ph1\">`&lt;property&gt;`</ph> is an attribute of the <ph id=\"ph2\">`Test Case`</ph>.","pos":[8868,8916],"source":"`<property>` is an attribute of the `Test Case`."},{"content":"The following are the properties supported by popular unit test frameworks:","pos":[8917,8992]},{"content":"Test Framework","pos":[8996,9010]},{"content":"Supported properties","pos":[9013,9033]},{"content":"MSTest","pos":[9250,9256]},{"content":"FullyQualifiedName","pos":[9275,9293]},{"content":"Name","pos":[9302,9306]},{"content":"ClassName","pos":[9315,9324]},{"content":"Priority","pos":[9333,9341]},{"content":"TestCategory","pos":[9350,9362]},{"content":"xUnit","pos":[9377,9382]},{"content":"FullyQualifiedName","pos":[9402,9420]},{"content":"DisplayName","pos":[9429,9440]},{"content":"Traits","pos":[9449,9455]},{"pos":[9503,9582],"content":"The <ph id=\"ph1\">`&lt;operator&gt;`</ph> describes the relationship between the property and the value:","source":"The `<operator>` describes the relationship between the property and the value:"},{"content":"Operator","pos":[9586,9594]},{"content":"Function","pos":[9597,9605]},{"content":"Exact match","pos":[9659,9670]},{"content":"Not exact match","pos":[9690,9705]},{"content":"Contains","pos":[9721,9729]},{"content":"<ph id=\"ph1\">`&lt;value&gt;`</ph> is a string.","pos":[9740,9762],"source":"`<value>` is a string."},{"content":"All the lookups are case insensitive.","pos":[9763,9800]},{"pos":[9802,10016],"content":"An expression without an <ph id=\"ph1\">`&lt;operator&gt;`</ph> is automatically considered as a <ph id=\"ph2\">`contains`</ph> on <ph id=\"ph3\">`FullyQualifiedName`</ph> property (for example, <ph id=\"ph4\">`dotnet test --filter xyz`</ph> is same as <ph id=\"ph5\">`dotnet test --filter FullyQualifiedName~xyz`</ph>).","source":"An expression without an `<operator>` is automatically considered as a `contains` on `FullyQualifiedName` property (for example, `dotnet test --filter xyz` is same as `dotnet test --filter FullyQualifiedName~xyz`)."},{"content":"Expressions can be joined with conditional operators:","pos":[10018,10071]},{"content":"Operator","pos":[10075,10083]},{"content":"Function","pos":[10097,10105]},{"content":"OR","pos":[10167,10169]},{"content":"AND","pos":[10202,10205]},{"pos":[10214,10347],"content":"You can enclose expressions in parenthesis when using conditional operators (for example, <ph id=\"ph1\">`(Name~TestMethod1) | (Name~TestMethod2)`</ph>).","source":"You can enclose expressions in parenthesis when using conditional operators (for example, `(Name~TestMethod1) | (Name~TestMethod2)`)."},{"pos":[10349,10499],"content":"For more information and examples on how to use selective unit test filtering, see <bpt id=\"p1\">[</bpt>Running selective unit tests<ept id=\"p1\">](../testing/selective-unit-tests.md)</ept>.","source":"For more information and examples on how to use selective unit test filtering, see [Running selective unit tests](../testing/selective-unit-tests.md)."},{"pos":[10504,10512],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[10516,10570],"content":"<bpt id=\"p1\">[</bpt>Frameworks and Targets<ept id=\"p1\">](../../standard/frameworks.md)</ept>","source":"[Frameworks and Targets](../../standard/frameworks.md)"},{"pos":[10573,10636],"content":"<bpt id=\"p1\">[</bpt>.NET Core Runtime IDentifier (RID) catalog<ept id=\"p1\">](../rid-catalog.md)</ept>","source":"[.NET Core Runtime IDentifier (RID) catalog](../rid-catalog.md)"}]}