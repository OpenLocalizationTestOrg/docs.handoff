{"content":"---\ntitle: \"Store the results of a query in memory\"\ndescription: How to store results.\nkeywords: .NET, .NET Core, C#\nauthor: BillWagner\nmanager: wpickett\nms.author: wiwagn\nms.date: 11/30/2016\nms.topic: article\nms.prod: .net-core\nms.technology: .net-core-technologies\nms.devlang: dotnet\nms.assetid: 5b863961-1750-4cf9-9607-acea5054d15a\n---\n# Store the results of a query in memory\n\nA query is basically a set of instructions for how to retrieve and organize data. Queries are executed lazily, as each subsequent item in the result is requested. When you use `foreach` to iterate the results, items are returned as accessed. To evaluate a query and store its results without executing a `foreach` loop, just call one of the following methods on the query variable:  \n  \n-   <xref:System.Linq.Enumerable.ToList%2A>  \n  \n-   <xref:System.Linq.Enumerable.ToArray%2A>  \n  \n-   <xref:System.Linq.Enumerable.ToDictionary%2A>  \n  \n-   <xref:System.Linq.Enumerable.ToLookup%2A>  \n  \n We recommend that when you store the query results, you assign the returned collection object to a new variable as shown in the following example:  \n  \n## Example  \n [!code-cs[csProgGuideLINQ#25](../../../samples/snippets/csharp/concepts/linq/how-to-store-the-results-of-a-query-in-memory_1.cs)]  \n  \n\n## See Also  \n [LINQ Query Expressions](index.md)","nodes":[{"pos":[4,334],"embed":true,"restype":"x-metadata","content":"title: \"Store the results of a query in memory\"\ndescription: How to store results.\nkeywords: .NET, .NET Core, C#\nauthor: BillWagner\nmanager: wpickett\nms.author: wiwagn\nms.date: 11/30/2016\nms.topic: article\nms.prod: .net-core\nms.technology: .net-core-technologies\nms.devlang: dotnet\nms.assetid: 5b863961-1750-4cf9-9607-acea5054d15a","nodes":[{"content":"Store the results of a query in memory","nodes":[{"pos":[0,38],"content":"Store the results of a query in memory","nodes":[{"content":"Store the results of a query in memory","pos":[0,38]}]}],"path":["title"]},{"content":"How to store results.","nodes":[{"pos":[0,21],"content":"How to store results.","nodes":[{"content":"How to store results.","pos":[0,21]}]}],"path":["description"]},{"content":".NET, .NET Core, C#","nodes":[{"pos":[0,19],"content":".NET, .NET Core, C#","nodes":[{"content":".NET, .NET Core, C#","pos":[0,19]}]}],"path":["keywords"]}],"yml":true},{"pos":[341,379],"content":"Store the results of a query in memory","linkify":"Store the results of a query in memory","nodes":[{"content":"Store the results of a query in memory","pos":[0,38]}]},{"content":"A query is basically a set of instructions for how to retrieve and organize data.","pos":[381,462]},{"content":"Queries are executed lazily, as each subsequent item in the result is requested.","pos":[463,543]},{"content":"When you use <ph id=\"ph1\">`foreach`</ph> to iterate the results, items are returned as accessed.","pos":[544,622],"source":" When you use `foreach` to iterate the results, items are returned as accessed."},{"content":"To evaluate a query and store its results without executing a <ph id=\"ph1\">`foreach`</ph> loop, just call one of the following methods on the query variable:","pos":[623,762],"source":" To evaluate a query and store its results without executing a `foreach` loop, just call one of the following methods on the query variable:"},{"content":"We recommend that when you store the query results, you assign the returned collection object to a new variable as shown in the following example:","pos":[974,1120]},{"pos":[1129,1136],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1279,1287],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1291,1325],"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](index.md)</ept>","source":"[LINQ Query Expressions](index.md)"}]}