<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="datetime-xaml-syntax.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7fe5f15f79ab068e88c3fb6f7b7cac0986aa636</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\datetime-xaml-syntax.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d0d19d20286c1df079dea253348b211d051b318</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6d65858bebd0db02c31aedd718991190f023fe7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>DateTime XAML Syntax</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>DateTime XAML Syntax</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Some controls, such as <ph id="ph1">&lt;xref:System.Windows.Controls.Calendar&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.DatePicker&gt;</ph>, have properties that use the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Although you typically specify an initial date or time for these controls in the code-behind at run time, you can specify an initial date or time in XAML.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The WPF XAML parser handles parsing of <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values using a built-in XAML text syntax.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic describes the specifics of the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> XAML text syntax.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When To Use DateTime XAML Syntax</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Setting dates in XAML is not always necessary and may not even be desirable.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, you could use the <ph id="ph1">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> property to initialize a date at run time, or you could do all your date adjustments for a calendar in the code-behind based on user input.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, there are scenarios where you may want to hard-code dates into a <ph id="ph1">&lt;xref:System.Windows.Controls.Calendar&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.DatePicker&gt;</ph> in a control template.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> XAML syntax must be used for these scenarios.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DateTime XAML Syntax is a Native Behavior</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.DateTime&gt;</ph> is a class that is defined in the base class libraries of the CLR.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Because of how the base class libraries relate to the rest of the CLR, it is not possible to apply <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the class and use a type converter to process strings from XAML and convert them to <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> in the run time object model.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There is no <ph id="ph1">`DateTimeConverter`</ph> class that provides the conversion behavior; the conversion behavior described in this topic is native to the WPF XAML parser.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Format Strings for DateTime XAML Syntax</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can specify the format of a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> with a format string.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Format strings formalize the text syntax that can be used to create a value.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values for the existing WPF controls generally only use the date components of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> and not the time components.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When specifying a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> in XAML, you can use any of the format strings interchangeably.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also use formats and format strings that are not specifically shown in this topic.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Technically, the XAML for any <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value that is specified and then parsed by the WPF XAML parser uses an internal  call to <ph id="ph2">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph>, therefore you could use any string accepted by <ph id="ph3">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph> for your XAML input.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The DateTime XAML syntax always uses <ph id="ph1">`en-us`</ph> as the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> for its native conversion.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This is not influenced by <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> value or <ph id="ph2">`xml:lang`</ph> value in the XAML, because XAML attribute-level type conversion acts without that context.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Do not attempt to interpolate the format strings shown here due to cultural variations, such as the order in which day and month appear.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The format strings shown here are the exact format strings used when parsing the XAML regardless of other culture settings.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following sections describe some of the common <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> format strings.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Short Date Pattern ("d")</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following shows the short date format for a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> in XAML:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This is the simplest form that specifies all necessary information for typical usages by WPF controls, and cannot be influenced by accidental time zone offsets versus a time component, and is therefore recommended over the other formats.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, to specify the date of June 1, 2010, use the following string:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Sortable DateTime Pattern ("s")</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following shows the sortable <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> pattern in XAML:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, to specify the date of June 1, 2010, use the following string (time components are all entered as 0):</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>RFC1123 Pattern ("r")</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The RFC1123 pattern is useful because it could be a string input from other date generators that also use the RFC1123 pattern for culture invariant reasons.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following shows the RFC1123 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> pattern in XAML:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, to specify the date of June 1, 2010, use the following string (time components are all entered as 0):</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Other Formats and Patterns</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>As stated previously, a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> in XAML can be specified as any string that is acceptable as input for <ph id="ph2">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This includes other formalized formats (for example <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A&gt;</ph>), and formats that are not formalized as a particular <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> form.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, the form <ph id="ph1">`YYYY/mm/dd`</ph> is acceptable as input for <ph id="ph2">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This topic does not attempt to describe all possible formats that work, and instead recommends the short date pattern as a standard practice.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Overview (WPF)<ept id="p1">](xaml-overview-wpf.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>