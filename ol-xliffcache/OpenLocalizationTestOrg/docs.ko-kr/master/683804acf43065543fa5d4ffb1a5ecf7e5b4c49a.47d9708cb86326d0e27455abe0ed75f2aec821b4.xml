{"content":"---\ntitle: \"Optimizing Performance: Taking Advantage of Hardware\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"graphics [WPF], performance\"\n  - \"hardware rendering pipeline [WPF]\"\n  - \"rendering tiers [WPF]\"\n  - \"graphics rendering tiers [WPF]\"\n  - \"graphics [WPF], rendering tiers\"\n  - \"software rendering pipeline [WPF]\"\nms.assetid: bfb89bae-7aab-4cac-a26c-a956eda8fce2\n---\n# Optimizing Performance: Taking Advantage of Hardware\nThe internal architecture of [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] has two rendering pipelines, hardware and software. This topic provides information about these rendering pipelines to help you make decisions about performance optimizations of your applications.  \n  \n## Hardware Rendering Pipeline  \n One of the most important factors in determining [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] performance is that it is render bound—the more pixels you have to render, the greater the performance cost. However, the more rendering that can be offloaded to the [!INCLUDE[TLA#tla_gpu](../../../../includes/tlasharptla-gpu-md.md)], the more performance benefits you can gain. The [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] application hardware rendering pipeline takes full advantage of [!INCLUDE[TLA#tla_dx](../../../../includes/tlasharptla-dx-md.md)] features on hardware that supports a minimum of [!INCLUDE[TLA#tla_dx](../../../../includes/tlasharptla-dx-md.md)] version 7.0. Further optimizations can be gained by hardware that supports [!INCLUDE[TLA#tla_dx](../../../../includes/tlasharptla-dx-md.md)] version 7.0 and PixelShader 2.0+ features.  \n  \n## Software Rendering Pipeline  \n The [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] software rendering pipeline is entirely CPU bound. [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] takes advantage of the SSE and SSE2 instruction sets in the CPU to implement an optimized, fully-featured software rasterizer. Fallback to software is seamless any time application functionality cannot be rendered using the hardware rendering pipeline.  \n  \n The biggest performance issue you will encounter when rendering in software mode is related to fill rate, which is defined as the number of pixels that you are rendering. If you are concerned about performance in software rendering mode, try to minimize the number of times a pixel is redrawn. For example, if you have an application with a blue background, which then renders a slightly transparent image over it, you will render all of the pixels in the application twice. As a result, it will take twice as long to render the application with the image than if you had only the blue background.  \n  \n### Graphics Rendering Tiers  \n It may be very difficult to predict the hardware configuration that your application will be running on. However, you might want to consider a design that allows your application to seamlessly switch features when running on different hardware, so that it can take full advantage of each different hardware configuration.  \n  \n To achieve this, [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] provides functionality to determine the graphics capability of a system at runtime. Graphics capability is determined by categorizing the video card as one of three rendering capability tiers. [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] exposes an [!INCLUDE[TLA#tla_api](../../../../includes/tlasharptla-api-md.md)] that allows an application to query the rendering capability tier. Your application can then take different code paths at run time depending on the rendering tier supported by the hardware.  \n  \n The features of the graphics hardware that most impact the rendering tier levels are:  \n  \n-   **Video RAM** The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics.  \n  \n-   **Pixel Shader** A pixel shader is a graphics processing function that calculates effects on a per-pixel basis. Depending on the resolution of the displayed graphics, there could be several million pixels that need to be processed for each display frame.  \n  \n-   **Vertex Shader** A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object.  \n  \n-   **Multitexture Support** Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object. The degree of multitexture support is determined by the number of multitexture units on the graphics hardware.  \n  \n The pixel shader, vertex shader, and multitexture features are used to define specific [!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)] version levels, which, in turn, are used to define the different rendering tiers in [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)].  \n  \n The features of the graphics hardware determine the rendering capability of a [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] application. The [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] system defines three rendering tiers:  \n  \n-   **Rendering Tier 0** No graphics hardware acceleration. The [!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)] version level is less than version 7.0.  \n  \n-   **Rendering Tier 1** Partial graphics hardware acceleration. The [!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)] version level is greater than or equal to version 7.0, and **lesser** than version 9.0.  \n  \n-   **Rendering Tier 2** Most graphics features use graphics hardware acceleration. The [!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)] version level is greater than or equal to version 9.0.  \n  \n For more information on [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] rendering tiers, see [Graphics Rendering Tiers](graphics-rendering-tiers.md).  \n  \n## See also\n\n- [Optimizing WPF Application Performance](optimizing-wpf-application-performance.md)\n- [Planning for Application Performance](planning-for-application-performance.md)\n- [Layout and Design](optimizing-performance-layout-and-design.md)\n- [2D Graphics and Imaging](optimizing-performance-2d-graphics-and-imaging.md)\n- [Object Behavior](optimizing-performance-object-behavior.md)\n- [Application Resources](optimizing-performance-application-resources.md)\n- [Text](optimizing-performance-text.md)\n- [Data Binding](optimizing-performance-data-binding.md)\n- [Other Performance Recommendations](optimizing-performance-other-recommendations.md)\n","nodes":[{"pos":[4,375],"embed":true,"restype":"x-metadata","content":"title: \"Optimizing Performance: Taking Advantage of Hardware\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"graphics [WPF], performance\"\n  - \"hardware rendering pipeline [WPF]\"\n  - \"rendering tiers [WPF]\"\n  - \"graphics rendering tiers [WPF]\"\n  - \"graphics [WPF], rendering tiers\"\n  - \"software rendering pipeline [WPF]\"\nms.assetid: bfb89bae-7aab-4cac-a26c-a956eda8fce2","nodes":[{"content":"Optimizing Performance: Taking Advantage of Hardware","nodes":[{"pos":[0,52],"content":"Optimizing Performance: Taking Advantage of Hardware","nodes":[{"content":"Optimizing Performance: Taking Advantage of Hardware","pos":[0,52]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[382,434],"content":"Optimizing Performance: Taking Advantage of Hardware","linkify":"Optimizing Performance: Taking Advantage of Hardware","nodes":[{"content":"Optimizing Performance: Taking Advantage of Hardware","pos":[0,52]}]},{"content":"The internal architecture of <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> has two rendering pipelines, hardware and software.","pos":[435,597],"source":"The internal architecture of [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] has two rendering pipelines, hardware and software."},{"content":"This topic provides information about these rendering pipelines to help you make decisions about performance optimizations of your applications.","pos":[598,742]},{"pos":[751,778],"content":"Hardware Rendering Pipeline","linkify":"Hardware Rendering Pipeline","nodes":[{"content":"Hardware Rendering Pipeline","pos":[0,27]}]},{"content":"One of the most important factors in determining <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> performance is that it is render bound—the more pixels you have to render, the greater the performance cost.","pos":[782,1021],"source":"One of the most important factors in determining [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] performance is that it is render bound—the more pixels you have to render, the greater the performance cost."},{"content":"However, the more rendering that can be offloaded to the <ph id=\"ph1\">[!INCLUDE[TLA#tla_gpu](../../../../includes/tlasharptla-gpu-md.md)]</ph>, the more performance benefits you can gain.","pos":[1022,1191],"source":" However, the more rendering that can be offloaded to the [!INCLUDE[TLA#tla_gpu](../../../../includes/tlasharptla-gpu-md.md)], the more performance benefits you can gain."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application hardware rendering pipeline takes full advantage of <ph id=\"ph2\">[!INCLUDE[TLA#tla_dx](../../../../includes/tlasharptla-dx-md.md)]</ph> features on hardware that supports a minimum of <ph id=\"ph3\">[!INCLUDE[TLA#tla_dx](../../../../includes/tlasharptla-dx-md.md)]</ph> version 7.0.","pos":[1192,1534],"source":" The [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] application hardware rendering pipeline takes full advantage of [!INCLUDE[TLA#tla_dx](../../../../includes/tlasharptla-dx-md.md)] features on hardware that supports a minimum of [!INCLUDE[TLA#tla_dx](../../../../includes/tlasharptla-dx-md.md)] version 7.0."},{"content":"Further optimizations can be gained by hardware that supports <ph id=\"ph1\">[!INCLUDE[TLA#tla_dx](../../../../includes/tlasharptla-dx-md.md)]</ph> version 7.0 and PixelShader 2.0+ features.","pos":[1535,1705],"source":" Further optimizations can be gained by hardware that supports [!INCLUDE[TLA#tla_dx](../../../../includes/tlasharptla-dx-md.md)] version 7.0 and PixelShader 2.0+ features."},{"pos":[1714,1741],"content":"Software Rendering Pipeline","linkify":"Software Rendering Pipeline","nodes":[{"content":"Software Rendering Pipeline","pos":[0,27]}]},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> software rendering pipeline is entirely CPU bound.","pos":[1745,1881],"source":"The [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] software rendering pipeline is entirely CPU bound."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> takes advantage of the SSE and SSE2 instruction sets in the CPU to implement an optimized, fully-featured software rasterizer.","pos":[1882,2090],"source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] takes advantage of the SSE and SSE2 instruction sets in the CPU to implement an optimized, fully-featured software rasterizer."},{"content":"Fallback to software is seamless any time application functionality cannot be rendered using the hardware rendering pipeline.","pos":[2091,2216]},{"content":"The biggest performance issue you will encounter when rendering in software mode is related to fill rate, which is defined as the number of pixels that you are rendering.","pos":[2223,2393]},{"content":"If you are concerned about performance in software rendering mode, try to minimize the number of times a pixel is redrawn.","pos":[2394,2516]},{"content":"For example, if you have an application with a blue background, which then renders a slightly transparent image over it, you will render all of the pixels in the application twice.","pos":[2517,2697]},{"content":"As a result, it will take twice as long to render the application with the image than if you had only the blue background.","pos":[2698,2820]},{"pos":[2830,2854],"content":"Graphics Rendering Tiers","linkify":"Graphics Rendering Tiers","nodes":[{"content":"Graphics Rendering Tiers","pos":[0,24]}]},{"content":"It may be very difficult to predict the hardware configuration that your application will be running on.","pos":[2858,2962]},{"content":"However, you might want to consider a design that allows your application to seamlessly switch features when running on different hardware, so that it can take full advantage of each different hardware configuration.","pos":[2963,3179]},{"content":"To achieve this, <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides functionality to determine the graphics capability of a system at runtime.","pos":[3186,3368],"source":"To achieve this, [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] provides functionality to determine the graphics capability of a system at runtime."},{"content":"Graphics capability is determined by categorizing the video card as one of three rendering capability tiers.","pos":[3369,3477]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> exposes an <ph id=\"ph2\">[!INCLUDE[TLA#tla_api](../../../../includes/tlasharptla-api-md.md)]</ph> that allows an application to query the rendering capability tier.","pos":[3478,3705],"source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] exposes an [!INCLUDE[TLA#tla_api](../../../../includes/tlasharptla-api-md.md)] that allows an application to query the rendering capability tier."},{"content":"Your application can then take different code paths at run time depending on the rendering tier supported by the hardware.","pos":[3706,3828]},{"content":"The features of the graphics hardware that most impact the rendering tier levels are:","pos":[3835,3920]},{"pos":[3930,4080],"content":"<bpt id=\"p1\">**</bpt>Video RAM<ept id=\"p1\">**</ept> The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics.","source":"**Video RAM** The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics."},{"content":"<bpt id=\"p1\">**</bpt>Pixel Shader<ept id=\"p1\">**</ept> A pixel shader is a graphics processing function that calculates effects on a per-pixel basis.","pos":[4090,4201],"source":"**Pixel Shader** A pixel shader is a graphics processing function that calculates effects on a per-pixel basis."},{"content":"Depending on the resolution of the displayed graphics, there could be several million pixels that need to be processed for each display frame.","pos":[4202,4344]},{"pos":[4354,4493],"content":"<bpt id=\"p1\">**</bpt>Vertex Shader<ept id=\"p1\">**</ept> A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object.","source":"**Vertex Shader** A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object."},{"content":"<bpt id=\"p1\">**</bpt>Multitexture Support<ept id=\"p1\">**</ept> Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object.","pos":[4503,4662],"source":"**Multitexture Support** Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object."},{"content":"The degree of multitexture support is determined by the number of multitexture units on the graphics hardware.","pos":[4663,4773]},{"pos":[4780,5101],"content":"The pixel shader, vertex shader, and multitexture features are used to define specific <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)]</ph> version levels, which, in turn, are used to define the different rendering tiers in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.","source":"The pixel shader, vertex shader, and multitexture features are used to define specific [!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)] version levels, which, in turn, are used to define the different rendering tiers in [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]."},{"content":"The features of the graphics hardware determine the rendering capability of a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> application.","pos":[5108,5280],"source":"The features of the graphics hardware determine the rendering capability of a [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] application."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> system defines three rendering tiers:","pos":[5281,5404],"source":" The [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] system defines three rendering tiers:"},{"content":"<bpt id=\"p1\">**</bpt>Rendering Tier 0<ept id=\"p1\">**</ept> No graphics hardware acceleration.","pos":[5414,5469],"source":"**Rendering Tier 0** No graphics hardware acceleration."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)]</ph> version level is less than version 7.0.","pos":[5470,5581],"source":" The [!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)] version level is less than version 7.0."},{"content":"<bpt id=\"p1\">**</bpt>Rendering Tier 1<ept id=\"p1\">**</ept> Partial graphics hardware acceleration.","pos":[5591,5651],"source":"**Rendering Tier 1** Partial graphics hardware acceleration."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)]</ph> version level is greater than or equal to version 7.0, and <bpt id=\"p1\">**</bpt>lesser<ept id=\"p1\">**</ept> than version 9.0.","pos":[5652,5811],"source":" The [!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)] version level is greater than or equal to version 7.0, and **lesser** than version 9.0."},{"content":"<bpt id=\"p1\">**</bpt>Rendering Tier 2<ept id=\"p1\">**</ept> Most graphics features use graphics hardware acceleration.","pos":[5821,5900],"source":"**Rendering Tier 2** Most graphics features use graphics hardware acceleration."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)]</ph> version level is greater than or equal to version 9.0.","pos":[5901,6027],"source":" The [!INCLUDE[TLA2#tla_dx](../../../../includes/tla2sharptla-dx-md.md)] version level is greater than or equal to version 9.0."},{"pos":[6034,6217],"content":"For more information on <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> rendering tiers, see <bpt id=\"p1\">[</bpt>Graphics Rendering Tiers<ept id=\"p1\">](graphics-rendering-tiers.md)</ept>.","source":"For more information on [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] rendering tiers, see [Graphics Rendering Tiers](graphics-rendering-tiers.md)."},{"pos":[6226,6234],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[6238,6321],"content":"<bpt id=\"p1\">[</bpt>Optimizing WPF Application Performance<ept id=\"p1\">](optimizing-wpf-application-performance.md)</ept>","source":"[Optimizing WPF Application Performance](optimizing-wpf-application-performance.md)"},{"pos":[6324,6403],"content":"<bpt id=\"p1\">[</bpt>Planning for Application Performance<ept id=\"p1\">](planning-for-application-performance.md)</ept>","source":"[Planning for Application Performance](planning-for-application-performance.md)"},{"pos":[6406,6470],"content":"<bpt id=\"p1\">[</bpt>Layout and Design<ept id=\"p1\">](optimizing-performance-layout-and-design.md)</ept>","source":"[Layout and Design](optimizing-performance-layout-and-design.md)"},{"pos":[6473,6549],"content":"<bpt id=\"p1\">[</bpt>2D Graphics and Imaging<ept id=\"p1\">](optimizing-performance-2d-graphics-and-imaging.md)</ept>","source":"[2D Graphics and Imaging](optimizing-performance-2d-graphics-and-imaging.md)"},{"pos":[6552,6612],"content":"<bpt id=\"p1\">[</bpt>Object Behavior<ept id=\"p1\">](optimizing-performance-object-behavior.md)</ept>","source":"[Object Behavior](optimizing-performance-object-behavior.md)"},{"pos":[6615,6687],"content":"<bpt id=\"p1\">[</bpt>Application Resources<ept id=\"p1\">](optimizing-performance-application-resources.md)</ept>","source":"[Application Resources](optimizing-performance-application-resources.md)"},{"pos":[6690,6728],"content":"<bpt id=\"p1\">[</bpt>Text<ept id=\"p1\">](optimizing-performance-text.md)</ept>","source":"[Text](optimizing-performance-text.md)"},{"pos":[6731,6785],"content":"<bpt id=\"p1\">[</bpt>Data Binding<ept id=\"p1\">](optimizing-performance-data-binding.md)</ept>","source":"[Data Binding](optimizing-performance-data-binding.md)"},{"pos":[6788,6872],"content":"<bpt id=\"p1\">[</bpt>Other Performance Recommendations<ept id=\"p1\">](optimizing-performance-other-recommendations.md)</ept>","source":"[Other Performance Recommendations](optimizing-performance-other-recommendations.md)"}]}