<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-query-an-arraylist-with-linq.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9276ebe02858d7a7e295430b0125c590b9c2f308</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\concepts\linq\how-to-query-an-arraylist-with-linq.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e93105d76109e90873bd9a003dd3f276a49b5422</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d724d70ee8fb8fd6fd72e546ec975c475a3b22d4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Query an ArrayList with LINQ (C#)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Query an ArrayList with LINQ (C#)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When using LINQ to query non-generic <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> collections such as <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>, you must explicitly declare the type of the range variable to reflect the specific type of the objects in the collection.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, if you have an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> of <ph id="ph2">`Student`</ph> objects, your <bpt id="p1">[</bpt>from clause<ept id="p1">](../../../../csharp/language-reference/keywords/from-clause.md)</ept> should look like this:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By specifying the type of the range variable, you are casting each item in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> to a <ph id="ph2">`Student`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The use of an explicitly typed range variable in a query expression is equivalent to calling the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Cast%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.Cast%2A&gt;</ph> throws an exception if the specified cast cannot be performed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.Cast%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Linq.Enumerable.OfType%2A&gt;</ph> are the two Standard Query Operator methods that operate on non-generic <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> types.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Type Relationships in LINQ Query Operations<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/type-relationships-in-linq-query-operations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example shows a simple query over an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Note that this example uses object initializers when the code calls the <ph id="ph1">&lt;xref:System.Collections.ArrayList.Add%2A&gt;</ph> method, but this is not a requirement.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to Objects (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/linq-to-objects.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>