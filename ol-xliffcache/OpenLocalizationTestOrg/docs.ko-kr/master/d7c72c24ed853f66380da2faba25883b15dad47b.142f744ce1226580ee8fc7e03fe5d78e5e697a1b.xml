{"content":"---\ntitle: \"Compiler Error CS0413\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS0413\"\nhelpviewer_keywords: \n  - \"CS0413\"\nms.assetid: a01bd1ec-015b-433b-be55-b91db268d6a5\n---\n# Compiler Error CS0413\nThe type parameter 'type parameter' cannot be used with the 'as' operator because it does not have a class type constraint nor a 'class' constraint  \n  \n This error occurs if a generic type uses the [as](../../../csharp/language-reference/keywords/as.md) operator, but that generic type does not have a class type constraint. The `as` operator is only allowed with reference types, so the type parameter must be constrained to guarantee that it is not a value type. To avoid this error, use a class type constraint or a reference type constraint.  \n  \n This is because the `as` operator could return `null`, which is not a possible value for a value type, and the type parameter must be treated as a value type unless it is a class type constraint or a reference type constraint.  \n  \n## Example  \n The following sample generates CS0413.  \n  \n```csharp  \n// CS0413.cs  \n// compile with: /target:library  \nclass A {}  \nclass B : A {}  \n  \nclass CMain  \n{  \n   A a = null;  \n   public void G<T>()  \n   {  \n      a = new A();  \n      System.Console.WriteLine (a as T);  // CS0413  \n   }  \n  \n   // OK  \n   public void H<T>() where T : A  \n   {  \n      a = new A();  \n      System.Console.WriteLine (a as T);  \n   }  \n}  \n```\n","nodes":[{"pos":[4,165],"embed":true,"restype":"x-metadata","content":"title: \"Compiler Error CS0413\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS0413\"\nhelpviewer_keywords: \n  - \"CS0413\"\nms.assetid: a01bd1ec-015b-433b-be55-b91db268d6a5","nodes":[{"content":"Compiler Error CS0413","nodes":[{"pos":[0,21],"content":"Compiler Error CS0413","nodes":[{"content":"Compiler Error CS0413","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[172,193],"content":"Compiler Error CS0413","linkify":"Compiler Error CS0413","nodes":[{"content":"Compiler Error CS0413","pos":[0,21]}]},{"content":"The type parameter 'type parameter' cannot be used with the 'as' operator because it does not have a class type constraint nor a 'class' constraint","pos":[194,341]},{"content":"This error occurs if a generic type uses the <bpt id=\"p1\">[</bpt>as<ept id=\"p1\">](../../../csharp/language-reference/keywords/as.md)</ept> operator, but that generic type does not have a class type constraint.","pos":[348,519],"source":"This error occurs if a generic type uses the [as](../../../csharp/language-reference/keywords/as.md) operator, but that generic type does not have a class type constraint."},{"content":"The <ph id=\"ph1\">`as`</ph> operator is only allowed with reference types, so the type parameter must be constrained to guarantee that it is not a value type.","pos":[520,659],"source":" The `as` operator is only allowed with reference types, so the type parameter must be constrained to guarantee that it is not a value type."},{"content":"To avoid this error, use a class type constraint or a reference type constraint.","pos":[660,740]},{"pos":[747,973],"content":"This is because the <ph id=\"ph1\">`as`</ph> operator could return <ph id=\"ph2\">`null`</ph>, which is not a possible value for a value type, and the type parameter must be treated as a value type unless it is a class type constraint or a reference type constraint.","source":"This is because the `as` operator could return `null`, which is not a possible value for a value type, and the type parameter must be treated as a value type unless it is a class type constraint or a reference type constraint."},{"pos":[982,989],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample generates CS0413.","pos":[993,1031]}]}