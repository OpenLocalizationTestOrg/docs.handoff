{"content":"---\ntitle: \"'<derivedtypename>' cannot inherit from <type> '<constructedbasetypename>' because it expands the access of type '<internaltypename>' outside the assembly\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"BC30922\"\n  - \"vbc30922\"\nhelpviewer_keywords: \n  - \"BC30922\"\nms.assetid: 81909654-7e67-4b89-81a3-25ae57f678f7\n---\n# '\\<derivedtypename>' cannot inherit from \\<type> '\\<constructedbasetypename>' because it expands the access of type '\\<internaltypename>' outside the assembly\nA derived class or interface attempts to expand the access level of a restricted type by using it as a type argument to a base class or interface.  \n  \n The following code can generate this error.  \n  \n```  \nPublic Class baseClass(Of t)  \nEnd Class  \nPublic Class derivedClass  \n    Inherits baseClass(Of restrictedStructure)  \nEnd Class  \nFriend Structure restrictedStructure  \n    Dim firstMember As Integer  \nEnd Structure  \n```  \n  \n Code outside the assembly is not allowed to access `restrictedStructure`. However, `derivedClass` can be accessed from any code that can reference it. Therefore, `derivedClass` cannot inherit `baseClass` if it uses `restrictedStructure` as a type argument, because that could expose `restrictedStructure` to code in any assembly.  \n  \n **Error ID:** BC30922  \n  \n## To correct this error  \n  \n-   Adjust the access levels of the classes or interfaces so the derived type does not expand the access level of the restricted type.  \n  \n     -or-  \n  \n-   If you cannot adjust the access levels, do not use the restricted type as a type argument when constructing the base class or interface.  \n  \n## See also\n\n- [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md)\n- [Inheritance Basics](../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)\n- [Access levels in Visual Basic](../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)\n- [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n- [Type List](../../visual-basic/language-reference/statements/type-list.md)\n","nodes":[{"pos":[4,315],"embed":true,"restype":"x-metadata","content":"title: \"'<derivedtypename>' cannot inherit from <type> '<constructedbasetypename>' because it expands the access of type '<internaltypename>' outside the assembly\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"BC30922\"\n  - \"vbc30922\"\nhelpviewer_keywords: \n  - \"BC30922\"\nms.assetid: 81909654-7e67-4b89-81a3-25ae57f678f7","nodes":[{"content":"'<derivedtypename>' cannot inherit from <type> '<constructedbasetypename>' because it expands the access of type '<internaltypename>' outside the assembly","nodes":[{"pos":[0,154],"content":"'<ph id=\"ph1\">&lt;derivedtypename&gt;</ph>' cannot inherit from <ph id=\"ph2\">&lt;type&gt;</ph> '<ph id=\"ph3\">&lt;constructedbasetypename&gt;</ph>' because it expands the access of type '<ph id=\"ph4\">&lt;internaltypename&gt;</ph>' outside the assembly","source":"'<derivedtypename>' cannot inherit from <type> '<constructedbasetypename>' because it expands the access of type '<internaltypename>' outside the assembly"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[322,480],"content":"'\\<derivedtypename>' cannot inherit from \\<type> '\\<constructedbasetypename>' because it expands the access of type '\\<internaltypename>' outside the assembly","linkify":"'\\<derivedtypename>' cannot inherit from \\<type> '\\<constructedbasetypename>' because it expands the access of type '\\<internaltypename>' outside the assembly","nodes":[{"content":"'<ph id=\"ph1\">\\&lt;</ph>derivedtypename&gt;' cannot inherit from <ph id=\"ph2\">\\&lt;</ph>type&gt; '<ph id=\"ph3\">\\&lt;</ph>constructedbasetypename&gt;' because it expands the access of type '<ph id=\"ph4\">\\&lt;</ph>internaltypename&gt;' outside the assembly","pos":[0,158],"source":"'\\<derivedtypename>' cannot inherit from \\<type> '\\<constructedbasetypename>' because it expands the access of type '\\<internaltypename>' outside the assembly"}]},{"content":"A derived class or interface attempts to expand the access level of a restricted type by using it as a type argument to a base class or interface.","pos":[481,627]},{"content":"The following code can generate this error.","pos":[634,677]},{"content":"Code outside the assembly is not allowed to access <ph id=\"ph1\">`restrictedStructure`</ph>.","pos":[919,992],"source":"Code outside the assembly is not allowed to access `restrictedStructure`."},{"content":"However, <ph id=\"ph1\">`derivedClass`</ph> can be accessed from any code that can reference it.","pos":[993,1069],"source":" However, `derivedClass` can be accessed from any code that can reference it."},{"content":"Therefore, <ph id=\"ph1\">`derivedClass`</ph> cannot inherit <ph id=\"ph2\">`baseClass`</ph> if it uses <ph id=\"ph3\">`restrictedStructure`</ph> as a type argument, because that could expose <ph id=\"ph4\">`restrictedStructure`</ph> to code in any assembly.","pos":[1070,1248],"source":" Therefore, `derivedClass` cannot inherit `baseClass` if it uses `restrictedStructure` as a type argument, because that could expose `restrictedStructure` to code in any assembly."},{"pos":[1255,1276],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC30922","source":"**Error ID:** BC30922"},{"pos":[1285,1306],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Adjust the access levels of the classes or interfaces so the derived type does not expand the access level of the restricted type.","pos":[1316,1446]},{"content":"-or-","pos":[1457,1461]},{"content":"If you cannot adjust the access levels, do not use the restricted type as a type argument when constructing the base class or interface.","pos":[1471,1607]},{"pos":[1616,1624],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1628,1720],"content":"<bpt id=\"p1\">[</bpt>Inherits Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/inherits-statement.md)</ept>","source":"[Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md)"},{"pos":[1723,1841],"content":"<bpt id=\"p1\">[</bpt>Inheritance Basics<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept>","source":"[Inheritance Basics](../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)"},{"pos":[1844,1966],"content":"<bpt id=\"p1\">[</bpt>Access levels in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>","source":"[Access levels in Visual Basic](../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)"},{"pos":[1969,2084],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"},{"pos":[2087,2161],"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../visual-basic/language-reference/statements/type-list.md)</ept>","source":"[Type List](../../visual-basic/language-reference/statements/type-list.md)"}]}