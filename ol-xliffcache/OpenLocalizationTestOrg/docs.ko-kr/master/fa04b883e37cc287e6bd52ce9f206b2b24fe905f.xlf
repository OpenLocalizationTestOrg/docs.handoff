<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-a-custom-claim.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa04b883e37cc287e6bd52ce9f206b2b24fe905f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\how-to-create-a-custom-claim.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce439dec9f5bd99ed581707bd549373dcd9f8d42</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">159c7cdedcdbeb7254d66759923b52d7d53e8a12</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create a Custom Claim</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Custom Claim</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Identity Model infrastructure in Windows Communication Foundation (WCF) provides a set of built-in claim types and rights with the helper functions for creating <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> instances with those types and rights.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These built-in claims are designed to model information found in client credential types that WCF supports by default.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In many cases, the built-in claims are sufficient; however some applications may require custom claims.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A claim consists of the claim type, the resource for which the claim applies to and the right that is asserted over that resource.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic describes how to create a custom claim.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To create a custom claim that is based on a primitive data type</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Create a custom claim by passing the claim type, resource value and right to the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim.%23ctor%28System.String%2CSystem.Object%2CSystem.String%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Decide on a unique value for the claim type.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The claim type is a unique string identifier.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It is the custom claim designer's responsibility to ensure that the string identifier that is used for the claim type is unique.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For a list of claim types that are defined by WCF, see the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimTypes&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Choose the primitive data type and value for the resource.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A resource is an object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The CLR type of the resource can be a primitive, such as <ph id="ph1">&lt;xref:System.String&gt;</ph> or <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, or any serializable type.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The CLR type of the resource must be serializable, because claims are serialized at various points by WCF.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Primitive types are serializable.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Choose a right that is defined by WCF or a unique value for a custom right.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A right is a unique string identifier.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The rights that are defined by WCF are defined in the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Rights&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It is the custom claim designer's responsibility to ensure that the string identifier that is used for the right is unique.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following code example creates a custom claim with a claim type of <ph id="ph1">`http://example.org/claims/simplecustomclaim`</ph>, for a resource named <ph id="ph2">`Driver's License`</ph>, and with the <ph id="ph3">&lt;xref:System.IdentityModel.Claims.Rights.PossessProperty%2A&gt;</ph> right.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To create a custom claim that is based on a non-primitive data type</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Create a custom claim by passing the claim type, resource value and right to the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim.%23ctor%28System.String%2CSystem.Object%2CSystem.String%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Decide on a unique value for the claim type.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The claim type is a unique string identifier.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It is the custom claim designer's responsibility to ensure that the string identifier that is used for the claim type is unique.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For a list of claim types that are defined by WCF, see the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimTypes&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Choose or define a serializable non-primitive type for the resource.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A resource is an object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The CLR type of the resource must be serializable, because claims are serialized at various points by WCF.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Primitive types are already serializable.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When a new type is defined, apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to the class.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Also apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> attribute to the all members of the new type that need to be serialized as part of the claim.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following code example defines a custom resource type named <ph id="ph1">`MyResourceType`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Choose a right that is defined by WCF or a unique value for a custom right.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A right is a unique string identifier.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The rights that are defined by WCF are defined in the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Rights&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>It is the custom claim designer's responsibility to ensure that the string identifier that is used for the right is unique.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following code example creates a custom claim with a claim type of <ph id="ph1">`http://example.org/claims/complexcustomclaim`</ph>, a custom resource type of <ph id="ph2">`MyResourceType`</ph>, and with the <ph id="ph3">&lt;xref:System.IdentityModel.Claims.Rights.PossessProperty%2A&gt;</ph> right.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to create a custom claim with a primitive resource type and a custom claim with a non-primitive resource type.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Managing Claims and Authorization with the Identity Model<ept id="p1">](../../../../docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>