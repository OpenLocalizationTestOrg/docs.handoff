{"content":"---\ntitle: \"ICorDebugProcess::GetThreadContext Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugProcess.GetThreadContext\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugProcess::GetThreadContext\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorDebugProcess::GetThreadContext method [.NET Framework debugging]\"\n  - \"GetThreadContext method, ICorDebugProcess interface [.NET Framework debugging]\"\nms.assetid: 5b132ef1-8d4b-4525-89b3-54123596c194\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugProcess::GetThreadContext Method\nGets the context for the given thread in this process.  \n  \n## Syntax  \n  \n```  \nHRESULT GetThreadContext(  \n    [in] DWORD threadID,  \n    [in] ULONG32 contextSize,  \n    [in, out, length_is(contextSize), size_is(contextSize)]  \n    BYTE context[]);  \n```  \n  \n#### Parameters  \n `threadID`  \n [in] The ID of the thread for which to retrieve the context.  \n  \n `contextSize`  \n [in] The size of the `context` array.  \n  \n `context`  \n [in, out] An array of bytes that describe the thread's context.  \n  \n The context specifies the architecture of the processor on which the thread is executing.  \n  \n## Remarks  \n The debugger should call this method rather than the Win32 `GetThreadContext` method, because the thread may actually be in a \"hijacked\" state, in which its context has been temporarily changed. This method should be used only when a thread is in native code. Use [ICorDebugRegisterSet](../../../../docs/framework/unmanaged-api/debugging/icordebugregisterset-interface.md) for threads in managed code.  \n  \n The data returned is a context structure for the current platform. Just as with the Win32 `GetThreadContext` method, the caller should initialize the `context` parameter before calling this method.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]","nodes":[{"pos":[12,70],"content":"ICorDebugProcess::GetThreadContext Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICorDebugProcess::GetThreadContext Method | Microsoft Docs","pos":[0,58]}]},{"pos":[767,808],"content":"ICorDebugProcess::GetThreadContext Method","linkify":"ICorDebugProcess::GetThreadContext Method","nodes":[{"content":"ICorDebugProcess::GetThreadContext Method","pos":[0,41]}]},{"content":"Gets the context for the given thread in this process.","pos":[809,863]},{"pos":[872,878],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1076,1086],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The ID of the thread for which to retrieve the context.","pos":[1104,1164]},{"content":"[in] The size of the <ph id=\"ph1\">`context`</ph> array.","pos":[1188,1225],"source":" [in] The size of the `context` array."},{"content":"[in, out] An array of bytes that describe the thread's context.","pos":[1245,1308]},{"content":"The context specifies the architecture of the processor on which the thread is executing.","pos":[1315,1404]},{"pos":[1413,1420],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The debugger should call this method rather than the Win32 <ph id=\"ph1\">`GetThreadContext`</ph> method, because the thread may actually be in a \"hijacked\" state, in which its context has been temporarily changed.","pos":[1424,1618],"source":"The debugger should call this method rather than the Win32 `GetThreadContext` method, because the thread may actually be in a \"hijacked\" state, in which its context has been temporarily changed."},{"content":"This method should be used only when a thread is in native code.","pos":[1619,1683]},{"content":"Use <bpt id=\"p1\">[</bpt>ICorDebugRegisterSet<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugregisterset-interface.md)</ept> for threads in managed code.","pos":[1684,1825],"source":" Use [ICorDebugRegisterSet](../../../../docs/framework/unmanaged-api/debugging/icordebugregisterset-interface.md) for threads in managed code."},{"content":"The data returned is a context structure for the current platform.","pos":[1832,1898]},{"content":"Just as with the Win32 <ph id=\"ph1\">`GetThreadContext`</ph> method, the caller should initialize the <ph id=\"ph2\">`context`</ph> parameter before calling this method.","pos":[1899,2029],"source":" Just as with the Win32 `GetThreadContext` method, the caller should initialize the `context` parameter before calling this method."},{"pos":[2038,2050],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2054,2158],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2165,2201],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2208,2233],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2240,2348],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"}]}