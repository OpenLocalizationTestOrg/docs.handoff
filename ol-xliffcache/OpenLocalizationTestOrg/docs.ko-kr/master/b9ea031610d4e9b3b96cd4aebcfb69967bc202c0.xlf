<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9ea031610d4e9b3b96cd4aebcfb69967bc202c0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\controls\adorners-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc872b2f76dcd58956aa805cf4dda54c539ad42a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">234eb3f05e3abeeb3521623696a6318a4debf5be</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adorners Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Adorners Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Adorners are a special type of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, used to provide visual cues to a user.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Among other uses, Adorners can be used to add functional handles to elements or provide state information about a control.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>About Adorners</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Documents.Adorner&gt;</ph> is a custom <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that is bound to a <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Adorners are rendered in an <ph id="ph1">&lt;xref:System.Windows.Documents.AdornerLayer&gt;</ph>, which is a rendering surface that is always on top of the adorned element or a collection of adorned elements.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Rendering of an adorner is independent from rendering of the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> that the adorner is bound to.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An adorner is typically positioned relative to the element to which it is bound, using the standard 2-D coordinate origin located at the upper-left of the adorned element.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Common applications for adorners include:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Adding functional handles to a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> that enable a user to manipulate the element in some way (resize, rotate, reposition, etc.).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Provide visual feedback to indicate various states, or in response to various events.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Overlay visual decorations on a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Visually mask or override part or all of a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> provides a basic framework for adorning visual elements.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following table lists the primary types used when adorning objects, and their purpose.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Several usage examples follow.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An abstract base class from which all concrete adorner implementations inherit.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A class representing a rendering layer for the adorner(s) of one or more adorned elements.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A class that enables an adorner layer to be associated with a collection of elements.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implementing a Custom Adorner</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The adorners framework provided by <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> is intended primarily to support the creation of custom adorners.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A custom adorner is created by implementing a class that inherits from the abstract <ph id="ph1">&lt;xref:System.Windows.Documents.Adorner&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The parent of an <ph id="ph1">&lt;xref:System.Windows.Documents.Adorner&gt;</ph> is the <ph id="ph2">&lt;xref:System.Windows.Documents.AdornerLayer&gt;</ph> that renders the <ph id="ph3">&lt;xref:System.Windows.Documents.Adorner&gt;</ph>, not the element being adorned.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following example shows a class that implements a simple adorner.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The example adorner simply adorns the corners of a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> with circles.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Adorners_SimpleCircleAdorner#_SimpleCircleAdornerBody<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/Adorners_SimpleCircleAdorner/CSharp/Window1.xaml.cs#_simplecircleadornerbody)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Adorners_SimpleCircleAdorner#_SimpleCircleAdornerBody<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_SimpleCircleAdorner/VisualBasic/Window1.xaml.vb#_simplecircleadornerbody)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following image shows the SimpleCircleAdorner applied to a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Adorners Example: An adorned TextBox<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/controls/media/adornedtextbox.png "</bpt>AdornedTextBox<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Rendering Behavior for Adorners</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It is important to note that adorners do not include any inherent rendering behavior; ensuring that an adorner renders is the responsibility of the adorner implementer.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A common way of implementing rendering behavior is to override the <ph id="ph1">&lt;xref:System.Windows.UIElement.OnRender%2A&gt;</ph> method and use one or more <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> objects to render the adorner's visuals as needed (as shown in the example above).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Anything placed in the adorner layer is rendered on top of the rest of any styles you have set.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In other words, adorners are always visually on top and cannot be overridden using z-order.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Events and Hit Testing</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adorners receive input events just like any other <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Because an adorner always has a higher z-order than the element it adorns, the adorner receives input events (such as <ph id="ph1">&lt;xref:System.Windows.UIElement.Drop&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.UIElement.MouseMove&gt;</ph>) that may be intended for the underlying adorned element.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An adorner can listen for certain input events and pass these on to the underlying adorned element by re-raising the event.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To enable pass-through hit testing of elements under an adorner, set the hit test <ph id="ph1">&lt;xref:System.Windows.UIElement.IsHitTestVisible%2A&gt;</ph> property to <bpt id="p1">**</bpt>false<ept id="p1">**</ept> on the adorner.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information about hit testing, see</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hit Testing in the Visual Layer<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Adorning a Single UIElement</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To bind an adorner to a particular <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, follow these steps:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Call the static method <ph id="ph1">&lt;xref:System.Windows.Documents.AdornerLayer.GetAdornerLayer%2A&gt;</ph> to get an <ph id="ph2">&lt;xref:System.Windows.Documents.AdornerLayer&gt;</ph> object for the <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> to be adorned.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.AdornerLayer.GetAdornerLayer%2A&gt;</ph> walks up the visual tree, starting at the specified <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>, and returns the first adorner layer it finds.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>(If no adorner layers are found, the method returns null.)</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Documents.AdornerLayer.Add%2A&gt;</ph> method to bind the adorner to the target <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example binds a SimpleCircleAdorner (shown above) to a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> named <bpt id="p1">*</bpt>myTextBox<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Adorners_SimpleCircleAdorner#_AdornSingleElement<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/Adorners_SimpleCircleAdorner/CSharp/Window1.xaml.cs#_adornsingleelement)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Adorners_SimpleCircleAdorner#_AdornSingleElement<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_SimpleCircleAdorner/VisualBasic/Window1.xaml.vb#_adornsingleelement)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> to bind an adorner to another element is currently not supported.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Adorning the Children of a Panel</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To bind an adorner to the children of a <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph>, follow these steps:</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">`static`</ph> method <ph id="ph2">&lt;xref:System.Windows.Documents.AdornerLayer.GetAdornerLayer%2A&gt;</ph> to find an adorner layer for the element whose children are to be adorned.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Enumerate through the children of the parent element and call the <ph id="ph1">&lt;xref:System.Windows.Documents.AdornerLayer.Add%2A&gt;</ph> method to bind an adorner to each child element.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example binds a SimpleCircleAdorner (shown above) to the children of a <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> named <bpt id="p1">*</bpt>myStackPanel<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Adorners_SimpleCircleAdorner#_AdornChildren<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/Adorners_SimpleCircleAdorner/CSharp/Window1.xaml.cs#_adornchildren)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Adorners_SimpleCircleAdorner#_AdornChildren<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_SimpleCircleAdorner/VisualBasic/Window1.xaml.vb#_adornchildren)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.AdornerHitTestResult&gt;</ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shapes and Basic Drawing in WPF Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/shapes-and-basic-drawing-in-wpf-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Painting with Images, Drawings, and Visuals<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-images-drawings-and-visuals.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Drawing Objects Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/drawing-objects-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/controls/adorners-how-to-topics.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>