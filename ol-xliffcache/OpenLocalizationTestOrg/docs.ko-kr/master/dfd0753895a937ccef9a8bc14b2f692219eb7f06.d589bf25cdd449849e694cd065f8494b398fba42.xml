{"content":"---\ntitle: \"Walkthrough: Handling Errors that Occur During Data Entry in the Windows Forms DataGridView Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"error handling [Windows Forms], dataGridView control\"\n  - \"data grids [Windows Forms], error handling\"\n  - \"DataGridView control [Windows Forms], error handling\"\n  - \"data entry [Windows Forms], error handling\"\n  - \"error handling [Windows Forms], data entry\"\n  - \"walkthroughs [Windows Forms], DataGridView control\"\nms.assetid: 30a68b85-d3af-4946-83c1-1e2d010d0511\n---\n# Walkthrough: Handling Errors that Occur During Data Entry in the Windows Forms DataGridView Control\nHandling errors from the underlying data store is a required feature for a data-entry application. The Windows Forms <xref:System.Windows.Forms.DataGridView> control makes this easy by exposing the <xref:System.Windows.Forms.DataGridView.DataError> event, which is raised when the data store detects a constraint violation or a broken business rule.  \n  \n In this walkthrough, you will retrieve rows from the `Customers` table in the Northwind sample database and display them in a <xref:System.Windows.Forms.DataGridView> control. When a duplicate `CustomerID` value is detected in a new row or an edited existing row, the <xref:System.Windows.Forms.DataGridView.DataError> event will occur, which will be handled by displaying a <xref:System.Windows.Forms.MessageBox> that describes the exception.  \n  \n To copy the code in this topic as a single listing, see [How to: Handle Errors That Occur During Data Entry in the Windows Forms DataGridView Control](handle-errors-that-occur-during-data-entry-in-the-datagrid.md).  \n  \n## Prerequisites  \n In order to complete this walkthrough, you will need:  \n  \n-   Access to a server that has the Northwind SQL Server sample database.  \n  \n## Creating the Form  \n  \n#### To handle data-entry errors in the DataGridView control  \n  \n1.  Create a class that derives from <xref:System.Windows.Forms.Form> and contains a <xref:System.Windows.Forms.DataGridView> control and a <xref:System.Windows.Forms.BindingSource> component.  \n  \n     The following code example provides basic initialization and includes a `Main` method.  \n  \n     [!code-csharp[System.Windows.Forms.DataGridView.DataError#01](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#01)]\n     [!code-vb[System.Windows.Forms.DataGridView.DataError#01](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#01)]  \n    [!code-csharp[System.Windows.Forms.DataGridView.DataError#02](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#02)]\n    [!code-vb[System.Windows.Forms.DataGridView.DataError#02](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#02)]  \n  \n2.  Implement a method in your form's class definition for handling the details of connecting to the database.  \n  \n     This code example uses a `GetData` method that returns a populated <xref:System.Data.DataTable> object. Be sure that you set the `connectionString` variable to a value that is appropriate for your database.  \n  \n    > [!IMPORTANT]\n    >  Storing sensitive information, such as a password, within the connection string can affect the security of your application. Using Windows Authentication (also known as integrated security) is a more secure way to control access to a database. For more information, see [Protecting Connection Information](../../data/adonet/protecting-connection-information.md).  \n  \n     [!code-csharp[System.Windows.Forms.DataGridView.DataError#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#30)]\n     [!code-vb[System.Windows.Forms.DataGridView.DataError#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#30)]  \n  \n3.  Implement a handler for your form's <xref:System.Windows.Forms.Form.Load> event that initializes the <xref:System.Windows.Forms.DataGridView> and <xref:System.Windows.Forms.BindingSource> and sets up the data binding.  \n  \n     [!code-csharp[System.Windows.Forms.DataGridView.DataError#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#10)]\n     [!code-vb[System.Windows.Forms.DataGridView.DataError#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#10)]  \n  \n4.  Handle the <xref:System.Windows.Forms.DataGridView.DataError> event on the <xref:System.Windows.Forms.DataGridView>.  \n  \n     If the context for the error is a commit operation, display the error in a <xref:System.Windows.Forms.MessageBox>.  \n  \n     [!code-csharp[System.Windows.Forms.DataGridView.DataError#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#20)]\n     [!code-vb[System.Windows.Forms.DataGridView.DataError#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#20)]  \n  \n## Testing the Application  \n You can now test the form to make sure it behaves as expected.  \n  \n#### To test the form  \n  \n-   Press F5 to run the application.  \n  \n     You will see a <xref:System.Windows.Forms.DataGridView> control filled with data from the Customers table. If you enter a duplicate value for `CustomerID` and commit the edit, the cell value will revert automatically and you will see a <xref:System.Windows.Forms.MessageBox> that displays the data entry error.  \n  \n## Next Steps  \n This application gives you a basic understanding of the <xref:System.Windows.Forms.DataGridView> control's capabilities. You can customize the appearance and behavior of the <xref:System.Windows.Forms.DataGridView> control in several ways:  \n  \n-   Change border and header styles. For more information, see [How to: Change the Border and Gridline Styles in the Windows Forms DataGridView Control](change-the-border-and-gridline-styles-in-the-datagrid.md).  \n  \n-   Enable or restrict user input to the <xref:System.Windows.Forms.DataGridView> control. For more information, see [How to: Prevent Row Addition and Deletion in the Windows Forms DataGridView Control](prevent-row-addition-and-deletion-datagridview.md), and [How to: Make Columns Read-Only in the Windows Forms DataGridView Control](how-to-make-columns-read-only-in-the-windows-forms-datagridview-control.md).  \n  \n-   Validate user input to the <xref:System.Windows.Forms.DataGridView> control. For more information, see [Walkthrough: Validating Data in the Windows Forms DataGridView Control](walkthrough-validating-data-in-the-windows-forms-datagridview-control.md).  \n  \n-   Handle very large data sets using virtual mode. For more information, see [Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control](implementing-virtual-mode-wf-datagridview-control.md).  \n  \n-   Customize the appearance of cells. For more information, see [How to: Customize the Appearance of Cells in the Windows Forms DataGridView Control](customize-the-appearance-of-cells-in-the-datagrid.md) and [How to: Set Default Cell Styles for the Windows Forms DataGridView Control](how-to-set-default-cell-styles-for-the-windows-forms-datagridview-control.md).  \n  \n## See also\n\n- <xref:System.Windows.Forms.DataGridView>\n- <xref:System.Windows.Forms.BindingSource>\n- [Data Entry in the Windows Forms DataGridView Control](data-entry-in-the-windows-forms-datagridview-control.md)\n- [How to: Handle Errors That Occur During Data Entry in the Windows Forms DataGridView Control](handle-errors-that-occur-during-data-entry-in-the-datagrid.md)\n- [Walkthrough: Validating Data in the Windows Forms DataGridView Control](walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)\n- [Protecting Connection Information](../../data/adonet/protecting-connection-information.md)\n","nodes":[{"pos":[4,561],"embed":true,"restype":"x-metadata","content":"title: \"Walkthrough: Handling Errors that Occur During Data Entry in the Windows Forms DataGridView Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"error handling [Windows Forms], dataGridView control\"\n  - \"data grids [Windows Forms], error handling\"\n  - \"DataGridView control [Windows Forms], error handling\"\n  - \"data entry [Windows Forms], error handling\"\n  - \"error handling [Windows Forms], data entry\"\n  - \"walkthroughs [Windows Forms], DataGridView control\"\nms.assetid: 30a68b85-d3af-4946-83c1-1e2d010d0511","nodes":[{"content":"Walkthrough: Handling Errors that Occur During Data Entry in the Windows Forms DataGridView Control","nodes":[{"pos":[0,99],"content":"Walkthrough: Handling Errors that Occur During Data Entry in the Windows Forms DataGridView Control","nodes":[{"content":"Walkthrough: Handling Errors that Occur During Data Entry in the Windows Forms DataGridView Control","pos":[0,99]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[568,667],"content":"Walkthrough: Handling Errors that Occur During Data Entry in the Windows Forms DataGridView Control","linkify":"Walkthrough: Handling Errors that Occur During Data Entry in the Windows Forms DataGridView Control","nodes":[{"content":"Walkthrough: Handling Errors that Occur During Data Entry in the Windows Forms DataGridView Control","pos":[0,99]}]},{"content":"Handling errors from the underlying data store is a required feature for a data-entry application.","pos":[668,766]},{"content":"The Windows Forms <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control makes this easy by exposing the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event, which is raised when the data store detects a constraint violation or a broken business rule.","pos":[767,1017],"source":" The Windows Forms <xref:System.Windows.Forms.DataGridView> control makes this easy by exposing the <xref:System.Windows.Forms.DataGridView.DataError> event, which is raised when the data store detects a constraint violation or a broken business rule."},{"content":"In this walkthrough, you will retrieve rows from the <ph id=\"ph1\">`Customers`</ph> table in the Northwind sample database and display them in a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.","pos":[1024,1199],"source":"In this walkthrough, you will retrieve rows from the `Customers` table in the Northwind sample database and display them in a <xref:System.Windows.Forms.DataGridView> control."},{"content":"When a duplicate <ph id=\"ph1\">`CustomerID`</ph> value is detected in a new row or an edited existing row, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event will occur, which will be handled by displaying a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> that describes the exception.","pos":[1200,1467],"source":" When a duplicate `CustomerID` value is detected in a new row or an edited existing row, the <xref:System.Windows.Forms.DataGridView.DataError> event will occur, which will be handled by displaying a <xref:System.Windows.Forms.MessageBox> that describes the exception."},{"pos":[1474,1688],"content":"To copy the code in this topic as a single listing, see <bpt id=\"p1\">[</bpt>How to: Handle Errors That Occur During Data Entry in the Windows Forms DataGridView Control<ept id=\"p1\">](handle-errors-that-occur-during-data-entry-in-the-datagrid.md)</ept>.","source":"To copy the code in this topic as a single listing, see [How to: Handle Errors That Occur During Data Entry in the Windows Forms DataGridView Control](handle-errors-that-occur-during-data-entry-in-the-datagrid.md)."},{"pos":[1697,1710],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"In order to complete this walkthrough, you will need:","pos":[1714,1767]},{"content":"Access to a server that has the Northwind SQL Server sample database.","pos":[1777,1846]},{"pos":[1855,1872],"content":"Creating the Form","linkify":"Creating the Form","nodes":[{"content":"Creating the Form","pos":[0,17]}]},{"pos":[1883,1938],"content":"To handle data-entry errors in the DataGridView control","linkify":"To handle data-entry errors in the DataGridView control","nodes":[{"content":"To handle data-entry errors in the DataGridView control","pos":[0,55]}]},{"pos":[1948,2136],"content":"Create a class that derives from <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> and contains a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control and a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.","source":"Create a class that derives from <xref:System.Windows.Forms.Form> and contains a <xref:System.Windows.Forms.DataGridView> control and a <xref:System.Windows.Forms.BindingSource> component."},{"pos":[2147,2233],"content":"The following code example provides basic initialization and includes a <ph id=\"ph1\">`Main`</ph> method.","source":"The following code example provides basic initialization and includes a `Main` method."},{"pos":[2244,2972],"content":"[!code-csharp[System.Windows.Forms.DataGridView.DataError#01](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#01)]\n [!code-vb[System.Windows.Forms.DataGridView.DataError#01](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#01)]  \n[!code-csharp[System.Windows.Forms.DataGridView.DataError#02](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#02)]\n[!code-vb[System.Windows.Forms.DataGridView.DataError#02](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#02)]","leadings":["","    ","    ","    "],"nodes":[]},{"content":"Implement a method in your form's class definition for handling the details of connecting to the database.","pos":[2982,3088]},{"content":"This code example uses a <ph id=\"ph1\">`GetData`</ph> method that returns a populated <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> object.","pos":[3099,3202],"source":"This code example uses a `GetData` method that returns a populated <xref:System.Data.DataTable> object."},{"content":"Be sure that you set the <ph id=\"ph1\">`connectionString`</ph> variable to a value that is appropriate for your database.","pos":[3203,3305],"source":" Be sure that you set the `connectionString` variable to a value that is appropriate for your database."},{"pos":[3317,3699],"content":"[!IMPORTANT]\nStoring sensitive information, such as a password, within the connection string can affect the security of your application. Using Windows Authentication (also known as integrated security) is a more secure way to control access to a database. For more information, see [Protecting Connection Information](../../data/adonet/protecting-connection-information.md).","leadings":["","    >  "],"nodes":[{"content":"Storing sensitive information, such as a password, within the connection string can affect the security of your application. Using Windows Authentication (also known as integrated security) is a more secure way to control access to a database. For more information, see [Protecting Connection Information](../../data/adonet/protecting-connection-information.md).","pos":[13,375],"nodes":[{"content":"Storing sensitive information, such as a password, within the connection string can affect the security of your application.","pos":[0,124]},{"content":"Using Windows Authentication (also known as integrated security) is a more secure way to control access to a database.","pos":[125,243]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Protecting Connection Information<ept id=\"p1\">](../../data/adonet/protecting-connection-information.md)</ept>.","pos":[244,362],"source":" For more information, see [Protecting Connection Information](../../data/adonet/protecting-connection-information.md)."}]}]},{"pos":[3710,4071],"content":"[!code-csharp[System.Windows.Forms.DataGridView.DataError#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#30)]\n [!code-vb[System.Windows.Forms.DataGridView.DataError#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#30)]","leadings":["","    "],"nodes":[]},{"pos":[4081,4298],"content":"Implement a handler for your form's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event that initializes the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> and sets up the data binding.","source":"Implement a handler for your form's <xref:System.Windows.Forms.Form.Load> event that initializes the <xref:System.Windows.Forms.DataGridView> and <xref:System.Windows.Forms.BindingSource> and sets up the data binding."},{"pos":[4309,4670],"content":"[!code-csharp[System.Windows.Forms.DataGridView.DataError#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#10)]\n [!code-vb[System.Windows.Forms.DataGridView.DataError#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#10)]","leadings":["","    "],"nodes":[]},{"pos":[4680,4796],"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.","source":"Handle the <xref:System.Windows.Forms.DataGridView.DataError> event on the <xref:System.Windows.Forms.DataGridView>."},{"pos":[4807,4921],"content":"If the context for the error is a commit operation, display the error in a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.","source":"If the context for the error is a commit operation, display the error in a <xref:System.Windows.Forms.MessageBox>."},{"pos":[4932,5293],"content":"[!code-csharp[System.Windows.Forms.DataGridView.DataError#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/CS/errorhandling.cs#20)]\n [!code-vb[System.Windows.Forms.DataGridView.DataError#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DataError/VB/errorhandling.vb#20)]","leadings":["","    "],"nodes":[]},{"pos":[5302,5325],"content":"Testing the Application","linkify":"Testing the Application","nodes":[{"content":"Testing the Application","pos":[0,23]}]},{"content":"You can now test the form to make sure it behaves as expected.","pos":[5329,5391]},{"pos":[5402,5418],"content":"To test the form","linkify":"To test the form","nodes":[{"content":"To test the form","pos":[0,16]}]},{"content":"Press F5 to run the application.","pos":[5428,5460]},{"content":"You will see a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control filled with data from the Customers table.","pos":[5471,5577],"source":"You will see a <xref:System.Windows.Forms.DataGridView> control filled with data from the Customers table."},{"content":"If you enter a duplicate value for <ph id=\"ph1\">`CustomerID`</ph> and commit the edit, the cell value will revert automatically and you will see a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> that displays the data entry error.","pos":[5578,5781],"source":" If you enter a duplicate value for `CustomerID` and commit the edit, the cell value will revert automatically and you will see a <xref:System.Windows.Forms.MessageBox> that displays the data entry error."},{"pos":[5790,5800],"content":"Next Steps","linkify":"Next Steps","nodes":[{"content":"Next Steps","pos":[0,10]}]},{"content":"This application gives you a basic understanding of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control's capabilities.","pos":[5804,5924],"source":"This application gives you a basic understanding of the <xref:System.Windows.Forms.DataGridView> control's capabilities."},{"content":"You can customize the appearance and behavior of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control in several ways:","pos":[5925,6043],"source":" You can customize the appearance and behavior of the <xref:System.Windows.Forms.DataGridView> control in several ways:"},{"content":"Change border and header styles.","pos":[6053,6085]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Change the Border and Gridline Styles in the Windows Forms DataGridView Control<ept id=\"p1\">](change-the-border-and-gridline-styles-in-the-datagrid.md)</ept>.","pos":[6086,6260],"source":" For more information, see [How to: Change the Border and Gridline Styles in the Windows Forms DataGridView Control](change-the-border-and-gridline-styles-in-the-datagrid.md)."},{"content":"Enable or restrict user input to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.","pos":[6270,6356],"source":"Enable or restrict user input to the <xref:System.Windows.Forms.DataGridView> control."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Prevent Row Addition and Deletion in the Windows Forms DataGridView Control<ept id=\"p1\">](prevent-row-addition-and-deletion-datagridview.md)</ept>, and <bpt id=\"p2\">[</bpt>How to: Make Columns Read-Only in the Windows Forms DataGridView Control<ept id=\"p2\">](how-to-make-columns-read-only-in-the-windows-forms-datagridview-control.md)</ept>.","pos":[6357,6676],"source":" For more information, see [How to: Prevent Row Addition and Deletion in the Windows Forms DataGridView Control](prevent-row-addition-and-deletion-datagridview.md), and [How to: Make Columns Read-Only in the Windows Forms DataGridView Control](how-to-make-columns-read-only-in-the-windows-forms-datagridview-control.md)."},{"content":"Validate user input to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.","pos":[6686,6762],"source":"Validate user input to the <xref:System.Windows.Forms.DataGridView> control."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Validating Data in the Windows Forms DataGridView Control<ept id=\"p1\">](walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)</ept>.","pos":[6763,6936],"source":" For more information, see [Walkthrough: Validating Data in the Windows Forms DataGridView Control](walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)."},{"content":"Handle very large data sets using virtual mode.","pos":[6946,6993]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control<ept id=\"p1\">](implementing-virtual-mode-wf-datagridview-control.md)</ept>.","pos":[6994,7157],"source":" For more information, see [Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control](implementing-virtual-mode-wf-datagridview-control.md)."},{"content":"Customize the appearance of cells.","pos":[7167,7201]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Customize the Appearance of Cells in the Windows Forms DataGridView Control<ept id=\"p1\">](customize-the-appearance-of-cells-in-the-datagrid.md)</ept> and <bpt id=\"p2\">[</bpt>How to: Set Default Cell Styles for the Windows Forms DataGridView Control<ept id=\"p2\">](how-to-set-default-cell-styles-for-the-windows-forms-datagridview-control.md)</ept>.","pos":[7202,7527],"source":" For more information, see [How to: Customize the Appearance of Cells in the Windows Forms DataGridView Control](customize-the-appearance-of-cells-in-the-datagrid.md) and [How to: Set Default Cell Styles for the Windows Forms DataGridView Control](how-to-set-default-cell-styles-for-the-windows-forms-datagridview-control.md)."},{"pos":[7536,7544],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[7635,7746],"content":"<bpt id=\"p1\">[</bpt>Data Entry in the Windows Forms DataGridView Control<ept id=\"p1\">](data-entry-in-the-windows-forms-datagridview-control.md)</ept>","source":"[Data Entry in the Windows Forms DataGridView Control](data-entry-in-the-windows-forms-datagridview-control.md)"},{"pos":[7749,7906],"content":"<bpt id=\"p1\">[</bpt>How to: Handle Errors That Occur During Data Entry in the Windows Forms DataGridView Control<ept id=\"p1\">](handle-errors-that-occur-during-data-entry-in-the-datagrid.md)</ept>","source":"[How to: Handle Errors That Occur During Data Entry in the Windows Forms DataGridView Control](handle-errors-that-occur-during-data-entry-in-the-datagrid.md)"},{"pos":[7909,8055],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Validating Data in the Windows Forms DataGridView Control<ept id=\"p1\">](walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)</ept>","source":"[Walkthrough: Validating Data in the Windows Forms DataGridView Control](walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)"},{"pos":[8058,8149],"content":"<bpt id=\"p1\">[</bpt>Protecting Connection Information<ept id=\"p1\">](../../data/adonet/protecting-connection-information.md)</ept>","source":"[Protecting Connection Information](../../data/adonet/protecting-connection-information.md)"}]}