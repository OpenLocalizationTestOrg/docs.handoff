{"content":"---\ntitle: \"partial type - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"partialtype\"\n  - \"partialtype_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"partial types [C#]\"\nms.assetid: 27320743-a22e-4c7b-b0b3-53afe3607334\n---\n# partial type (C# Reference)\n\nPartial type definitions allow for the definition of a class, struct, or interface to be split into multiple files.\n\nIn *File1.cs*:\n\n[!code-csharp[csrefKeywordsContextual#3](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsContextual/CS/csrefKeywordsContextual.cs#3)]  \n\nIn *File2.cs* the declaration:\n\n[!code-csharp[csrefKeywordsContextual#4](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsContextual/CS/csrefKeywordsContextual.cs#4)]  \n\n## Remarks\n\nSplitting a class, struct or interface type over several files can be useful when you are working with large projects, or with automatically generated code such as that provided by the [Windows Forms Designer](../../../framework/winforms/controls/developing-windows-forms-controls-at-design-time.md). A partial type may contain a [partial method](partial-method.md). For more information, see [Partial Classes and Methods](../../programming-guide/classes-and-structs/partial-classes-and-methods.md).\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [Modifiers](modifiers.md)\n- [Introduction to Generics](../../programming-guide/generics/introduction-to-generics.md)","nodes":[{"pos":[4,241],"embed":true,"restype":"x-metadata","content":"title: \"partial type - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"partialtype\"\n  - \"partialtype_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"partial types [C#]\"\nms.assetid: 27320743-a22e-4c7b-b0b3-53afe3607334","nodes":[{"content":"partial type - C# Reference","nodes":[{"pos":[0,27],"content":"partial type - C# Reference","nodes":[{"content":"partial type - C# Reference","pos":[0,27]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[248,275],"content":"partial type (C# Reference)","linkify":"partial type (C# Reference)","nodes":[{"content":"partial type (C# Reference)","pos":[0,27]}]},{"content":"Partial type definitions allow for the definition of a class, struct, or interface to be split into multiple files.","pos":[277,392]},{"pos":[394,408],"content":"In <bpt id=\"p1\">*</bpt>File1.cs<ept id=\"p1\">*</ept>:","source":"In *File1.cs*:"},{"pos":[559,589],"content":"In <bpt id=\"p1\">*</bpt>File2.cs<ept id=\"p1\">*</ept> the declaration:","source":"In *File2.cs* the declaration:"},{"pos":[743,750],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Splitting a class, struct or interface type over several files can be useful when you are working with large projects, or with automatically generated code such as that provided by the <bpt id=\"p1\">[</bpt>Windows Forms Designer<ept id=\"p1\">](../../../framework/winforms/controls/developing-windows-forms-controls-at-design-time.md)</ept>.","pos":[752,1052],"source":"Splitting a class, struct or interface type over several files can be useful when you are working with large projects, or with automatically generated code such as that provided by the [Windows Forms Designer](../../../framework/winforms/controls/developing-windows-forms-controls-at-design-time.md)."},{"content":"A partial type may contain a <bpt id=\"p1\">[</bpt>partial method<ept id=\"p1\">](partial-method.md)</ept>.","pos":[1053,1118],"source":" A partial type may contain a [partial method](partial-method.md)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Partial Classes and Methods<ept id=\"p1\">](../../programming-guide/classes-and-structs/partial-classes-and-methods.md)</ept>.","pos":[1119,1251],"source":" For more information, see [Partial Classes and Methods](../../programming-guide/classes-and-structs/partial-classes-and-methods.md)."},{"pos":[1256,1281],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[1347,1355],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1359,1386],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1389,1445],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1448,1473],"content":"<bpt id=\"p1\">[</bpt>Modifiers<ept id=\"p1\">](modifiers.md)</ept>","source":"[Modifiers](modifiers.md)"},{"pos":[1476,1564],"content":"<bpt id=\"p1\">[</bpt>Introduction to Generics<ept id=\"p1\">](../../programming-guide/generics/introduction-to-generics.md)</ept>","source":"[Introduction to Generics](../../programming-guide/generics/introduction-to-generics.md)"}]}