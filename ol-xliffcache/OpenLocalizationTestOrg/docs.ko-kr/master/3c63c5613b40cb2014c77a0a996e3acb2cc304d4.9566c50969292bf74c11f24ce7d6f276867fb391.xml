{"content":"---\ntitle: \"REM Statement (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.'\"\n  - \"vb.Rem\"\n  - \"Rem\"\n  - \"'\"\nhelpviewer_keywords: \n  - \"REM statement [Visual Basic]\"\n  - \"comments, Visual Basic code\"\n  - \"code comments, Visual Basic\"\n  - \"Visual Basic code, comments\"\n  - \"' comment marker character [Visual Basic]\"\nms.assetid: 34126d7f-e0f9-476d-91e6-b31b398615dc\n---\n# REM Statement (Visual Basic)\nUsed to include explanatory remarks in the source code of a program.  \n  \n## Syntax  \n  \n```  \nREM comment  \n' comment  \n```  \n  \n## Parts  \n `comment`  \n Optional. The text of any comment you want to include. A space is required between the `REM` keyword and `comment`.  \n  \n## Remarks  \n You can put a `REM` statement alone on a line, or you can put it on a line following another statement. The `REM` statement must be the last statement on the line. If it follows another statement, the `REM` must be separated from that statement by a space.  \n  \n You can use a single quotation mark (`'`) instead of `REM`. This is true whether your comment follows another statement on the same line or sits alone on a line.  \n  \n> [!NOTE]\n>  You cannot continue a `REM` statement by using a line-continuation sequence (`_`). Once a comment begins, the compiler does not examine the characters for special meaning. For a multiple-line comment, use another `REM` statement or a comment symbol (`'`) on each line.  \n  \n## Example  \n The following example illustrates the `REM` statement, which is used to include explanatory remarks in a program. It also shows the alternative of using the single quotation-mark character (`'`) instead of `REM`.  \n  \n [!code-vb[VbVbalrStatements#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStatements/VB/Class1.vb#6)]  \n  \n## See also\n\n- [Comments in Code](../../../visual-basic/programming-guide/program-structure/comments-in-code.md)\n- [How to: Break and Combine Statements in Code](../../../visual-basic/programming-guide/program-structure/how-to-break-and-combine-statements-in-code.md)\n","nodes":[{"pos":[4,373],"embed":true,"restype":"x-metadata","content":"title: \"REM Statement (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.'\"\n  - \"vb.Rem\"\n  - \"Rem\"\n  - \"'\"\nhelpviewer_keywords: \n  - \"REM statement [Visual Basic]\"\n  - \"comments, Visual Basic code\"\n  - \"code comments, Visual Basic\"\n  - \"Visual Basic code, comments\"\n  - \"' comment marker character [Visual Basic]\"\nms.assetid: 34126d7f-e0f9-476d-91e6-b31b398615dc","nodes":[{"content":"REM Statement (Visual Basic)","nodes":[{"pos":[0,28],"content":"REM Statement (Visual Basic)","nodes":[{"content":"REM Statement (Visual Basic)","pos":[0,28]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[380,408],"content":"REM Statement (Visual Basic)","linkify":"REM Statement (Visual Basic)","nodes":[{"content":"REM Statement (Visual Basic)","pos":[0,28]}]},{"content":"Used to include explanatory remarks in the source code of a program.","pos":[409,477]},{"pos":[486,492],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[542,547],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Optional.","pos":[564,573]},{"content":"The text of any comment you want to include.","pos":[574,618]},{"content":"A space is required between the <ph id=\"ph1\">`REM`</ph> keyword and <ph id=\"ph2\">`comment`</ph>.","pos":[619,679],"source":" A space is required between the `REM` keyword and `comment`."},{"pos":[688,695],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can put a <ph id=\"ph1\">`REM`</ph> statement alone on a line, or you can put it on a line following another statement.","pos":[699,802],"source":"You can put a `REM` statement alone on a line, or you can put it on a line following another statement."},{"content":"The <ph id=\"ph1\">`REM`</ph> statement must be the last statement on the line.","pos":[803,862],"source":" The `REM` statement must be the last statement on the line."},{"content":"If it follows another statement, the <ph id=\"ph1\">`REM`</ph> must be separated from that statement by a space.","pos":[863,955],"source":" If it follows another statement, the `REM` must be separated from that statement by a space."},{"content":"You can use a single quotation mark (<ph id=\"ph1\">`'`</ph>) instead of <ph id=\"ph2\">`REM`</ph>.","pos":[962,1021],"source":"You can use a single quotation mark (`'`) instead of `REM`."},{"content":"This is true whether your comment follows another statement on the same line or sits alone on a line.","pos":[1022,1123]},{"pos":[1131,1410],"content":"[!NOTE]\n You cannot continue a `REM` statement by using a line-continuation sequence (`_`). Once a comment begins, the compiler does not examine the characters for special meaning. For a multiple-line comment, use another `REM` statement or a comment symbol (`'`) on each line.","leadings":["","> "],"nodes":[{"content":"You cannot continue a `REM` statement by using a line-continuation sequence (`_`). Once a comment begins, the compiler does not examine the characters for special meaning. For a multiple-line comment, use another `REM` statement or a comment symbol (`'`) on each line.","pos":[9,277],"nodes":[{"content":"You cannot continue a <ph id=\"ph1\">`REM`</ph> statement by using a line-continuation sequence (<ph id=\"ph2\">`_`</ph>).","pos":[0,82],"source":"You cannot continue a `REM` statement by using a line-continuation sequence (`_`)."},{"content":"Once a comment begins, the compiler does not examine the characters for special meaning.","pos":[83,171]},{"content":"For a multiple-line comment, use another <ph id=\"ph1\">`REM`</ph> statement or a comment symbol (<ph id=\"ph2\">`'`</ph>) on each line.","pos":[172,268],"source":" For a multiple-line comment, use another `REM` statement or a comment symbol (`'`) on each line."}]}]},{"pos":[1419,1426],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example illustrates the <ph id=\"ph1\">`REM`</ph> statement, which is used to include explanatory remarks in a program.","pos":[1430,1543],"source":"The following example illustrates the `REM` statement, which is used to include explanatory remarks in a program."},{"content":"It also shows the alternative of using the single quotation-mark character (<ph id=\"ph1\">`'`</ph>) instead of <ph id=\"ph2\">`REM`</ph>.","pos":[1544,1642],"source":" It also shows the alternative of using the single quotation-mark character (`'`) instead of `REM`."},{"pos":[1775,1783],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1787,1884],"content":"<bpt id=\"p1\">[</bpt>Comments in Code<ept id=\"p1\">](../../../visual-basic/programming-guide/program-structure/comments-in-code.md)</ept>","source":"[Comments in Code](../../../visual-basic/programming-guide/program-structure/comments-in-code.md)"},{"pos":[1887,2039],"content":"<bpt id=\"p1\">[</bpt>How to: Break and Combine Statements in Code<ept id=\"p1\">](../../../visual-basic/programming-guide/program-structure/how-to-break-and-combine-statements-in-code.md)</ept>","source":"[How to: Break and Combine Statements in Code](../../../visual-basic/programming-guide/program-structure/how-to-break-and-combine-statements-in-code.md)"}]}