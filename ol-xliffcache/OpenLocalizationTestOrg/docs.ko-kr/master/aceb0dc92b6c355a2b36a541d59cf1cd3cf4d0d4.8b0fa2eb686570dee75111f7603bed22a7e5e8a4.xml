{"content":"---\ntitle: Running selective unit tests | Microsoft Docs\ndescription: Shows you how to use a filter expression to run selective unit tests with the dotnet test command.\nkeywords: .NET, .NET Core, unit test, selective test\nauthor: smadala\nms.author: mairaw\nms.date: 03/22/2017\nms.topic: article\nms.prod: .net-core\nms.devlang: dotnet\nms.assetid: 13d01272-bbf8-456c-a97a-560001d1a7f2\n---\n\n# Running selective unit tests\n\nThe following examples use `dotnet test`. If you're using `vstest.console.exe`, replace `--filter ` with `--testcasefilter:`.\n\n## MSTest\n\n```csharp\nnamespace MSTestNamespace\n{\n    using Microsoft.VisualStudio.TestTools.UnitTesting;\n\n    [TestClass]\n    public class UnitTestClass1\n    {\n        [Priority(2)]\n        [TestMethod]\n        public void TestMethod1()\n        {\n        }\n\n        [TestCategory(\"CategoryA\")]\n        [Priority(3)]\n        [TestMethod]\n        public void TestMethod2()\n        {\n        }\n    }\n}\n```\n\n| Expression | Result |\n| ---------- | ------ |\n| `dotnet test --filter Method` | Runs tests whose `FullyQualifiedName` contains `Method`. Available in `vstest 15.1+`. |\n| `dotnet test --filter Name~TestMethod1` | Runs tests whose name contains `TestMethod1`. |\n| `dotnet test --filter ClassName=MSTestNamespace.UnitTestClass1` | Runs tests which are in class `MSTestNamespace.UnitTestClass1`.<br>**Note:** The `ClassName` value should have a namespace, so `ClassName=UnitTestClass1` won't work. |\n| `dotnet test --filter FullyQualifiedName!=MSTestNamespace.UnitTestClass1.TestMethod1` | Runs all tests except `MSTestNamespace.UnitTestClass1.TestMethod1`. |\n| `dotnet test --filter TestCategory=CategoryA` | Runs tests which are annotated with `[TestCategory(\"CategoryA\")]`. |\n| `dotnet test --filter Priority=3` | Runs tests which are annotated with `[Priority(3)]`.<br>**Note:** `Priority~3` is an invalid value, as it isn't a string. |\n\n**Using conditional operators | and &amp;**\n\n| Expression | Result |\n| ---------- | ------ |\n| <code>dotnet test --filter \"FullyQualifiedName~UnitTestClass1&#124;TestCategory=CategoryA\"</code> | Runs tests which have `UnitTestClass1` in `FullyQualifiedName` **or** `TestCategory` is `CategoryA`. |\n| `dotnet test --filter \"FullyQualifiedName~UnitTestClass1&TestCategory=CategoryA\"` | Runs tests which have `UnitTestClass1` in `FullyQualifiedName` **and** `TestCategory` is `CategoryA`. |\n| <code>dotnet test --filter \"(FullyQualifiedName~UnitTestClass1&TestCategory=CategoryA)&#124;Priority=1\"</code> | Runs tests which have either `FullyQualifiedName` containing `UnitTestClass1` **and** `TestCategory` is `CategoryA` **or** `Priority` is 1. |\n\n## xUnit\n\n```csharp\nnamespace XUnitNamespace\n{\n    public class TestClass1\n    {\n        [Trait(\"Category\", \"bvt\")]\n        [Trait(\"Priority\", \"1\")]\n        [Fact]\n        public void foo()\n        {\n        }\n\n        [Trait(\"Category\", \"Nightly\")]\n        [Trait(\"Priority\", \"2\")]\n        [Fact]\n        public void bar()\n        {\n        }\n    }\n}\n```\n\n| Expression | Result |\n| ---------- | ------ |\n| `dotnet test --filter DisplayName=XUnitNamespace.TestClass1.Test1` | Runs only one test, `XUnitNamespace.TestClass1.Test1`. |\n| `dotnet test --filter FullyQualifiedName!=XUnitNamespace.TestClass1.Test1` | Runs all tests except `XUnitNamespace.TestClass1.Test1`. |\n| `dotnet test --filter DisplayName~TestClass1` | Runs tests whose display name contains `TestClass1`. |\n\nIn the code example, the defined traits with keys `Category` and `Priority` can be used for filtering.\n\n| Expression | Result |\n| ---------- | ------ |\n| `dotnet test --filter XUnit` | Runs tests whose `FullyQualifiedName` contains `XUnit`.  Available in `vstest 15.1+`. |\n| `dotnet test --filter Category=bvt` | Runs tests which have `[Trait(\"Category\", \"bvt\")]`. |\n\n**Using conditional operators | and &amp;**\n\n| Expression | Result |\n| ---------- | ------ |\n| <code>dotnet test --filter \"FullyQualifiedName~TestClass1&#124;Category=Nightly\"</code> | Runs tests which has `TestClass1` in `FullyQualifiedName` **or** `Category` is `Nightly`. |\n| `dotnet test --filter \"FullyQualifiedName~TestClass1&Category=Nightly\"` | Runs tests which has `TestClass1` in `FullyQualifiedName` **and** `Category` is `Nightly`. |\n| <code>dotnet test --filter \"(FullyQualifiedName~TestClass1&Category=Nightly)&#124;Priority=1\"</code> | Runs tests which have either `FullyQualifiedName` containing `TestClass1` **and** `Category` is `CategoryA` **or** `Priority` is 1. |\n","nodes":[{"pos":[11,56],"content":"Running selective unit tests | Microsoft Docs","needQuote":true,"needEscape":true,"nodes":[{"content":"Running selective unit tests | Microsoft Docs","pos":[0,45]}]},{"pos":[70,168],"content":"Shows you how to use a filter expression to run selective unit tests with the dotnet test command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Shows you how to use a filter expression to run selective unit tests with the dotnet test command.","pos":[0,98]}]},{"pos":[179,221],"content":".NET, .NET Core, unit test, selective test","needQuote":true,"needEscape":true,"nodes":[{"content":".NET, .NET Core, unit test, selective test","pos":[0,42]}]},{"pos":[388,416],"content":"Running selective unit tests","linkify":"Running selective unit tests","nodes":[{"content":"Running selective unit tests","pos":[0,28]}]},{"content":"The following examples use <ph id=\"ph1\">`dotnet test`</ph>.","pos":[418,459],"source":"The following examples use `dotnet test`."},{"content":"If you're using <ph id=\"ph1\">`vstest.console.exe`</ph>, replace <ph id=\"ph2\">`--filter `</ph> with <ph id=\"ph3\">`--testcasefilter:`</ph>.","pos":[460,543],"source":" If you're using `vstest.console.exe`, replace `--filter ` with `--testcasefilter:`."},{"pos":[548,554],"content":"MSTest","linkify":"MSTest","nodes":[{"content":"MSTest","pos":[0,6]}]},{"content":"Expression","pos":[951,961]},{"content":"Result","pos":[964,970]},{"content":"Runs tests whose <ph id=\"ph1\">`FullyQualifiedName`</ph> contains <ph id=\"ph2\">`Method`</ph>.","pos":[1031,1087],"source":"Runs tests whose `FullyQualifiedName` contains `Method`."},{"content":"Available in <ph id=\"ph1\">`vstest 15.1+`</ph>.","pos":[1088,1116],"source":" Available in `vstest 15.1+`."},{"pos":[1163,1208],"content":"Runs tests whose name contains <ph id=\"ph1\">`TestMethod1`</ph>.","source":"Runs tests whose name contains `TestMethod1`."},{"content":"Runs tests which are in class <ph id=\"ph1\">`MSTestNamespace.UnitTestClass1`</ph>.","pos":[1279,1342],"source":"Runs tests which are in class `MSTestNamespace.UnitTestClass1`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> The <ph id=\"ph1\">`ClassName`</ph> value should have a namespace, so <ph id=\"ph2\">`ClassName=UnitTestClass1`</ph> won't work.","pos":[1346,1444],"source":"**Note:** The `ClassName` value should have a namespace, so `ClassName=UnitTestClass1` won't work."},{"pos":[1537,1604],"content":"Runs all tests except <ph id=\"ph1\">`MSTestNamespace.UnitTestClass1.TestMethod1`</ph>.","source":"Runs all tests except `MSTestNamespace.UnitTestClass1.TestMethod1`."},{"pos":[1657,1723],"content":"Runs tests which are annotated with <ph id=\"ph1\">`[TestCategory(\"CategoryA\")]`</ph>.","source":"Runs tests which are annotated with `[TestCategory(\"CategoryA\")]`."},{"content":"Runs tests which are annotated with <ph id=\"ph1\">`[Priority(3)]`</ph>.","pos":[1764,1816],"source":"Runs tests which are annotated with `[Priority(3)]`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`Priority~3`</ph> is an invalid value, as it isn't a string.","pos":[1820,1885],"source":"**Note:** `Priority~3` is an invalid value, as it isn't a string."},{"pos":[1889,1932],"content":"<bpt id=\"p1\">**</bpt>Using conditional operators | and <ph id=\"ph1\">&amp;amp;</ph><ept id=\"p1\">**</ept>","source":"**Using conditional operators | and &amp;**"},{"content":"Expression","pos":[1936,1946]},{"content":"Result","pos":[1949,1955]},{"pos":[2084,2184],"content":"Runs tests which have <ph id=\"ph1\">`UnitTestClass1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>or<ept id=\"p1\">**</ept> <ph id=\"ph3\">`TestCategory`</ph> is <ph id=\"ph4\">`CategoryA`</ph>.","source":"Runs tests which have `UnitTestClass1` in `FullyQualifiedName` **or** `TestCategory` is `CategoryA`."},{"pos":[2273,2374],"content":"Runs tests which have <ph id=\"ph1\">`UnitTestClass1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`TestCategory`</ph> is <ph id=\"ph4\">`CategoryA`</ph>.","source":"Runs tests which have `UnitTestClass1` in `FullyQualifiedName` **and** `TestCategory` is `CategoryA`."},{"pos":[2492,2631],"content":"Runs tests which have either <ph id=\"ph1\">`FullyQualifiedName`</ph> containing <ph id=\"ph2\">`UnitTestClass1`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`TestCategory`</ph> is <ph id=\"ph4\">`CategoryA`</ph> <bpt id=\"p2\">**</bpt>or<ept id=\"p2\">**</ept> <ph id=\"ph5\">`Priority`</ph> is 1.","source":"Runs tests which have either `FullyQualifiedName` containing `UnitTestClass1` **and** `TestCategory` is `CategoryA` **or** `Priority` is 1."},{"pos":[2638,2643],"content":"xUnit","linkify":"xUnit","nodes":[{"content":"xUnit","pos":[0,5]}]},{"content":"Expression","pos":[2994,3004]},{"content":"Result","pos":[3007,3013]},{"pos":[3111,3165],"content":"Runs only one test, <ph id=\"ph1\">`XUnitNamespace.TestClass1.Test1`</ph>.","source":"Runs only one test, `XUnitNamespace.TestClass1.Test1`."},{"pos":[3247,3303],"content":"Runs all tests except <ph id=\"ph1\">`XUnitNamespace.TestClass1.Test1`</ph>.","source":"Runs all tests except `XUnitNamespace.TestClass1.Test1`."},{"pos":[3356,3408],"content":"Runs tests whose display name contains <ph id=\"ph1\">`TestClass1`</ph>.","source":"Runs tests whose display name contains `TestClass1`."},{"pos":[3412,3514],"content":"In the code example, the defined traits with keys <ph id=\"ph1\">`Category`</ph> and <ph id=\"ph2\">`Priority`</ph> can be used for filtering.","source":"In the code example, the defined traits with keys `Category` and `Priority` can be used for filtering."},{"content":"Expression","pos":[3518,3528]},{"content":"Result","pos":[3531,3537]},{"content":"Runs tests whose <ph id=\"ph1\">`FullyQualifiedName`</ph> contains <ph id=\"ph2\">`XUnit`</ph>.","pos":[3597,3652],"source":"Runs tests whose `FullyQualifiedName` contains `XUnit`."},{"content":"Available in <ph id=\"ph1\">`vstest 15.1+`</ph>.","pos":[3654,3682],"source":"  Available in `vstest 15.1+`."},{"pos":[3725,3776],"content":"Runs tests which have <ph id=\"ph1\">`[Trait(\"Category\", \"bvt\")]`</ph>.","source":"Runs tests which have `[Trait(\"Category\", \"bvt\")]`."},{"pos":[3780,3823],"content":"<bpt id=\"p1\">**</bpt>Using conditional operators | and <ph id=\"ph1\">&amp;amp;</ph><ept id=\"p1\">**</ept>","source":"**Using conditional operators | and &amp;**"},{"content":"Expression","pos":[3827,3837]},{"content":"Result","pos":[3840,3846]},{"pos":[3965,4054],"content":"Runs tests which has <ph id=\"ph1\">`TestClass1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>or<ept id=\"p1\">**</ept> <ph id=\"ph3\">`Category`</ph> is <ph id=\"ph4\">`Nightly`</ph>.","source":"Runs tests which has `TestClass1` in `FullyQualifiedName` **or** `Category` is `Nightly`."},{"pos":[4133,4223],"content":"Runs tests which has <ph id=\"ph1\">`TestClass1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`Category`</ph> is <ph id=\"ph4\">`Nightly`</ph>.","source":"Runs tests which has `TestClass1` in `FullyQualifiedName` **and** `Category` is `Nightly`."},{"pos":[4331,4462],"content":"Runs tests which have either <ph id=\"ph1\">`FullyQualifiedName`</ph> containing <ph id=\"ph2\">`TestClass1`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`Category`</ph> is <ph id=\"ph4\">`CategoryA`</ph> <bpt id=\"p2\">**</bpt>or<ept id=\"p2\">**</ept> <ph id=\"ph5\">`Priority`</ph> is 1.","source":"Runs tests which have either `FullyQualifiedName` containing `TestClass1` **and** `Category` is `CategoryA` **or** `Priority` is 1."}]}