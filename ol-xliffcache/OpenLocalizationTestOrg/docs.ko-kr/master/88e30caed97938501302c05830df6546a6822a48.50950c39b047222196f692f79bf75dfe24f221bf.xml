{"content":"---\ntitle: \"How to: Create a Procedure that Returns a Value (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"procedures [Visual Basic], defining\"\n  - \"Visual Basic code, procedures\"\n  - \"procedures [Visual Basic], returning a value\"\nms.assetid: 8ee19f95-a9ef-4033-963b-d224dca207c4\n---\n# How to: Create a Procedure that Returns a Value (Visual Basic)\nYou use a `Function` procedure to return a value to the calling code.  \n  \n### To create a procedure that returns a value  \n  \n1.  Outside any other procedure, use a `Function` statement, followed by an `End Function` statement.  \n  \n2.  In the `Function` statement, follow the `Function` keyword with the name of the procedure, and then the parameter list in parentheses.  \n  \n3.  Follow the parentheses with an `As` clause to specify the data type of the returned value.  \n  \n4.  Place the procedure's code statements between the `Function` and `End Function` statements.  \n  \n5.  Use a `Return` statement to return the value to the calling code.  \n  \n     The following `Function` procedure calculates the longest side, or hypotenuse, of a right triangle, given the values for the other two sides.  \n  \n     [!code-vb[VbVbcnProcedures#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnProcedures/VB/Class1.vb#1)]  \n  \n     The following example shows a typical call to `hypotenuse`.  \n  \n     [!code-vb[VbVbcnProcedures#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnProcedures/VB/Class1.vb#6)]  \n  \n## See also\n\n- [Procedures](./index.md)\n- [Sub Procedures](./sub-procedures.md)\n- [Property Procedures](./property-procedures.md)\n- [Operator Procedures](./operator-procedures.md)\n- [Procedure Parameters and Arguments](./procedure-parameters-and-arguments.md)\n- [Function Statement](../../../../visual-basic/language-reference/statements/function-statement.md)\n- [How to: Return a Value from a Procedure](./how-to-return-a-value-from-a-procedure.md)\n- [How to: Call a Procedure That Returns a Value](./how-to-call-a-procedure-that-returns-a-value.md)\n","nodes":[{"pos":[4,295],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create a Procedure that Returns a Value (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"procedures [Visual Basic], defining\"\n  - \"Visual Basic code, procedures\"\n  - \"procedures [Visual Basic], returning a value\"\nms.assetid: 8ee19f95-a9ef-4033-963b-d224dca207c4","nodes":[{"content":"How to: Create a Procedure that Returns a Value (Visual Basic)","nodes":[{"pos":[0,62],"content":"How to: Create a Procedure that Returns a Value (Visual Basic)","nodes":[{"content":"How to: Create a Procedure that Returns a Value (Visual Basic)","pos":[0,62]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[302,364],"content":"How to: Create a Procedure that Returns a Value (Visual Basic)","linkify":"How to: Create a Procedure that Returns a Value (Visual Basic)","nodes":[{"content":"How to: Create a Procedure that Returns a Value (Visual Basic)","pos":[0,62]}]},{"pos":[365,434],"content":"You use a <ph id=\"ph1\">`Function`</ph> procedure to return a value to the calling code.","source":"You use a `Function` procedure to return a value to the calling code."},{"pos":[444,486],"content":"To create a procedure that returns a value","linkify":"To create a procedure that returns a value","nodes":[{"content":"To create a procedure that returns a value","pos":[0,42]}]},{"pos":[496,593],"content":"Outside any other procedure, use a <ph id=\"ph1\">`Function`</ph> statement, followed by an <ph id=\"ph2\">`End Function`</ph> statement.","source":"Outside any other procedure, use a `Function` statement, followed by an `End Function` statement."},{"pos":[603,737],"content":"In the <ph id=\"ph1\">`Function`</ph> statement, follow the <ph id=\"ph2\">`Function`</ph> keyword with the name of the procedure, and then the parameter list in parentheses.","source":"In the `Function` statement, follow the `Function` keyword with the name of the procedure, and then the parameter list in parentheses."},{"pos":[747,837],"content":"Follow the parentheses with an <ph id=\"ph1\">`As`</ph> clause to specify the data type of the returned value.","source":"Follow the parentheses with an `As` clause to specify the data type of the returned value."},{"pos":[847,938],"content":"Place the procedure's code statements between the <ph id=\"ph1\">`Function`</ph> and <ph id=\"ph2\">`End Function`</ph> statements.","source":"Place the procedure's code statements between the `Function` and `End Function` statements."},{"pos":[948,1013],"content":"Use a <ph id=\"ph1\">`Return`</ph> statement to return the value to the calling code.","source":"Use a `Return` statement to return the value to the calling code."},{"pos":[1024,1165],"content":"The following <ph id=\"ph1\">`Function`</ph> procedure calculates the longest side, or hypotenuse, of a right triangle, given the values for the other two sides.","source":"The following `Function` procedure calculates the longest side, or hypotenuse, of a right triangle, given the values for the other two sides."},{"pos":[1302,1361],"content":"The following example shows a typical call to <ph id=\"ph1\">`hypotenuse`</ph>.","source":"The following example shows a typical call to `hypotenuse`."},{"pos":[1496,1504],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1508,1532],"content":"<bpt id=\"p1\">[</bpt>Procedures<ept id=\"p1\">](./index.md)</ept>","source":"[Procedures](./index.md)"},{"pos":[1535,1572],"content":"<bpt id=\"p1\">[</bpt>Sub Procedures<ept id=\"p1\">](./sub-procedures.md)</ept>","source":"[Sub Procedures](./sub-procedures.md)"},{"pos":[1575,1622],"content":"<bpt id=\"p1\">[</bpt>Property Procedures<ept id=\"p1\">](./property-procedures.md)</ept>","source":"[Property Procedures](./property-procedures.md)"},{"pos":[1625,1672],"content":"<bpt id=\"p1\">[</bpt>Operator Procedures<ept id=\"p1\">](./operator-procedures.md)</ept>","source":"[Operator Procedures](./operator-procedures.md)"},{"pos":[1675,1752],"content":"<bpt id=\"p1\">[</bpt>Procedure Parameters and Arguments<ept id=\"p1\">](./procedure-parameters-and-arguments.md)</ept>","source":"[Procedure Parameters and Arguments](./procedure-parameters-and-arguments.md)"},{"pos":[1755,1853],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[1856,1942],"content":"<bpt id=\"p1\">[</bpt>How to: Return a Value from a Procedure<ept id=\"p1\">](./how-to-return-a-value-from-a-procedure.md)</ept>","source":"[How to: Return a Value from a Procedure](./how-to-return-a-value-from-a-procedure.md)"},{"pos":[1945,2043],"content":"<bpt id=\"p1\">[</bpt>How to: Call a Procedure That Returns a Value<ept id=\"p1\">](./how-to-call-a-procedure-that-returns-a-value.md)</ept>","source":"[How to: Call a Procedure That Returns a Value](./how-to-call-a-procedure-that-returns-a-value.md)"}]}