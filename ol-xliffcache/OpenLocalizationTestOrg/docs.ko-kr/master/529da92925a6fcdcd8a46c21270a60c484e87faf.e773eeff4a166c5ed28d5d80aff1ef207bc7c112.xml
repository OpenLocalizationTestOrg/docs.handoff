{"content":"---\ntitle: \"Operator '<operator>' must have a return type of Boolean\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc33023\"\n  - \"bc33023\"\nhelpviewer_keywords: \n  - \"BC33023\"\nms.assetid: 18e066f4-d71e-4e38-b0bc-8af9145f6015\n---\n# Operator '\\<operator>' must have a return type of Boolean\nA comparison or logical operator is declared with a return type other than the [Boolean Data Type](../../visual-basic/language-reference/data-types/boolean-data-type.md).  \n  \n The result of a comparison operator (`=`, `<>`, `<`, `<=`, `>`, `>=`, `Is`, `IsNot`, `IsFalse`, `IsTrue`, `Like`, `TypeOf`) can be only `True` or `False`. For more information, see [Comparison Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md).  \n  \n Logical operators (`And`, `AndAlso`, `Not`, `Or`, `OrElse`, `Xor`) work entirely within the domain of Boolean values. For more information, see [Logical and Bitwise Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/logical-and-bitwise-operators.md).  \n  \n **Error ID:** BC33023  \n  \n## To correct this error  \n  \n-   Replace the return type of this comparison or logical operator with `Boolean`.  \n  \n## See also\n\n- [Operator Procedures](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)\n- [Operator Statement](../../visual-basic/language-reference/statements/operator-statement.md)\n- [How to: Define an Operator](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)\n- [How to: Define a Conversion Operator](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)\n","nodes":[{"pos":[4,217],"embed":true,"restype":"x-metadata","content":"title: \"Operator '<operator>' must have a return type of Boolean\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc33023\"\n  - \"bc33023\"\nhelpviewer_keywords: \n  - \"BC33023\"\nms.assetid: 18e066f4-d71e-4e38-b0bc-8af9145f6015","nodes":[{"content":"Operator '<operator>' must have a return type of Boolean","nodes":[{"pos":[0,56],"content":"Operator '<ph id=\"ph1\">&lt;operator&gt;</ph>' must have a return type of Boolean","source":"Operator '<operator>' must have a return type of Boolean"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[224,281],"content":"Operator '\\<operator>' must have a return type of Boolean","linkify":"Operator '\\<operator>' must have a return type of Boolean","nodes":[{"content":"Operator '<ph id=\"ph1\">\\&lt;</ph>operator&gt;' must have a return type of Boolean","pos":[0,57],"source":"Operator '\\<operator>' must have a return type of Boolean"}]},{"pos":[282,452],"content":"A comparison or logical operator is declared with a return type other than the <bpt id=\"p1\">[</bpt>Boolean Data Type<ept id=\"p1\">](../../visual-basic/language-reference/data-types/boolean-data-type.md)</ept>.","source":"A comparison or logical operator is declared with a return type other than the [Boolean Data Type](../../visual-basic/language-reference/data-types/boolean-data-type.md)."},{"content":"The result of a comparison operator (<ph id=\"ph1\">`=`</ph>, <ph id=\"ph2\">`&lt;&gt;`</ph>, <ph id=\"ph3\">`&lt;`</ph>, <ph id=\"ph4\">`&lt;=`</ph>, <ph id=\"ph5\">`&gt;`</ph>, <ph id=\"ph6\">`&gt;=`</ph>, <ph id=\"ph7\">`Is`</ph>, <ph id=\"ph8\">`IsNot`</ph>, <ph id=\"ph9\">`IsFalse`</ph>, <ph id=\"ph10\">`IsTrue`</ph>, <ph id=\"ph11\">`Like`</ph>, <ph id=\"ph12\">`TypeOf`</ph>) can be only <ph id=\"ph13\">`True`</ph> or <ph id=\"ph14\">`False`</ph>.","pos":[459,613],"source":"The result of a comparison operator (`=`, `<>`, `<`, `<=`, `>`, `>=`, `Is`, `IsNot`, `IsFalse`, `IsTrue`, `Like`, `TypeOf`) can be only `True` or `False`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>.","pos":[614,785],"source":" For more information, see [Comparison Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)."},{"content":"Logical operators (<ph id=\"ph1\">`And`</ph>, <ph id=\"ph2\">`AndAlso`</ph>, <ph id=\"ph3\">`Not`</ph>, <ph id=\"ph4\">`Or`</ph>, <ph id=\"ph5\">`OrElse`</ph>, <ph id=\"ph6\">`Xor`</ph>) work entirely within the domain of Boolean values.","pos":[792,909],"source":"Logical operators (`And`, `AndAlso`, `Not`, `Or`, `OrElse`, `Xor`) work entirely within the domain of Boolean values."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Logical and Bitwise Operators in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/operators-and-expressions/logical-and-bitwise-operators.md)</ept>.","pos":[910,1099],"source":" For more information, see [Logical and Bitwise Operators in Visual Basic](../../visual-basic/programming-guide/language-features/operators-and-expressions/logical-and-bitwise-operators.md)."},{"pos":[1106,1127],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC33023","source":"**Error ID:** BC33023"},{"pos":[1136,1157],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1167,1245],"content":"Replace the return type of this comparison or logical operator with <ph id=\"ph1\">`Boolean`</ph>.","source":"Replace the return type of this comparison or logical operator with `Boolean`."},{"pos":[1254,1262],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1266,1377],"content":"<bpt id=\"p1\">[</bpt>Operator Procedures<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>","source":"[Operator Procedures](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)"},{"pos":[1380,1472],"content":"<bpt id=\"p1\">[</bpt>Operator Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/operator-statement.md)</ept>","source":"[Operator Statement](../../visual-basic/language-reference/statements/operator-statement.md)"},{"pos":[1475,1599],"content":"<bpt id=\"p1\">[</bpt>How to: Define an Operator<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)</ept>","source":"[How to: Define an Operator](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)"},{"pos":[1602,1746],"content":"<bpt id=\"p1\">[</bpt>How to: Define a Conversion Operator<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept>","source":"[How to: Define a Conversion Operator](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)"}]}