{"content":"---\ntitle: \"How to: Create a Supporting Credential | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: d0952919-8bb4-4978-926c-9cc108f89806\ncaps.latest.revision: 9\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Create a Supporting Credential\nIt is possible to have a custom security scheme that requires more than one credential. For example, a service may demand from the client not just a user name and password, but also a credential that proves the client is over the age of 18. The second credential is a *supporting credential*. This topic explains how to implement such credentials in an [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] client.  \n  \n> [!NOTE]\n>  The specification for supporting credentials is part of the WS-SecurityPolicy specification. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][Web Services Security Specifications](http://go.microsoft.com/fwlink/?LinkId=88537).  \n  \n## Supporting Tokens  \n In brief, when you use message security, a *primary credential* is always used to secure the message (for example, an X.509 certificate or a Kerberos ticket).  \n  \n As defined by the specification, a security binding uses *tokens* to secure the message exchange. A *token* is a representation of a security credential.  \n  \n The security binding uses a primary token identified in the security binding policy to create a signature. This signature is referred to as the *message signature*.  \n  \n Additional tokens can be specified to augment the claims provided by the token associated with the message signature.  \n  \n## Endorsing, Signing, and Encrypting  \n A supporting credential results in a *supporting token* transmitted inside the message. The WS-SecurityPolicy specification defines four ways to attach a supporting token to the message, as described in the following table.  \n  \n|Purpose|Description|  \n|-------------|-----------------|  \n|Signed|The supporting token is included in the security header and is signed by the message signature.|  \n|Endorsing|An *endorsing token* signs the message signature.|  \n|Signed and Endorsing|Signed, endorsing tokens sign the entire `ds:Signature` element produced from the message signature and are themselves signed by that message signature; that is, both tokens (the token used for the message signature and the signed endorsing token) sign each other.|  \n|Signed and Encrypting|Signed, encrypted supporting tokens are signed supporting tokens that are also encrypted when they appear in the `wsse:SecurityHeader`.|  \n  \n## Programming Supporting Credentials  \n To create a service that uses supporting tokens you must create a [\\<customBinding>](../../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md). ([!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][How to: Create a Custom Binding Using the SecurityBindingElement](../../../../docs/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement.md).)  \n  \n The first step when creating a custom binding is to create a security binding element, which can be one of three types:  \n  \n-   <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement>  \n  \n-   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>  \n  \n-   <xref:System.ServiceModel.Channels.TransportSecurityBindingElement>  \n  \n All classes inherit from the <xref:System.ServiceModel.Channels.SecurityBindingElement>, which includes four relevant properties:  \n  \n-   <xref:System.ServiceModel.Channels.SecurityBindingElement.EndpointSupportingTokenParameters%2A>  \n  \n-   <xref:System.ServiceModel.Channels.SecurityBindingElement.OperationSupportingTokenParameters%2A>  \n  \n-   <xref:System.ServiceModel.Channels.SecurityBindingElement.OptionalEndpointSupportingTokenParameters%2A>  \n  \n-   <xref:System.ServiceModel.Channels.SecurityBindingElement.OptionalOperationSupportingTokenParameters%2A>  \n  \n#### Scopes  \n Two scopes exist for supporting credentials:  \n  \n-   *Endpoint supporting tokens* support all operations of an endpoint. That is, the credential that the supporting token represents can be used whenever any endpoint operations are invoked.  \n  \n-   *Operation supporting tokens* support only a specific endpoint operation.  \n  \n As indicated by the property names, supporting credentials can be either required or optional. That is, if the supporting credential is used if it is present, although it is not necessary, but the authentication will not fail if it is not present.  \n  \n## Procedures  \n  \n#### To create a custom binding that includes supporting credentials  \n  \n1.  Create a security binding element. The example below creates a <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> with the `UserNameForCertificate` authentication mode. Use the <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForCertificateBindingElement%2A> method.  \n  \n2.  Add the supporting parameter to the collection of types returned by the appropriate property (`Endorsing`, `Signed`, `SignedEncrypted`, or `SignedEndorsed`). The types in the <xref:System.ServiceModel.Security.Tokens> namespace include commonly used types, such as the <xref:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters>.  \n  \n## Example  \n  \n### Description  \n The following example creates an instance of the <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> and adds an instance of the <xref:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters> class to the collection the Endorsing property returned.  \n  \n### Code  \n [!code-csharp[c_SupportingCredential#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_supportingcredential/cs/source.cs#1)]  \n  \n## See Also  \n [How to: Create a Custom Binding Using the SecurityBindingElement](../../../../docs/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement.md)","nodes":[{"pos":[12,67],"content":"How to: Create a Supporting Credential | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Create a Supporting Credential | Microsoft Docs","pos":[0,55]}]},{"pos":[365,403],"content":"How to: Create a Supporting Credential","linkify":"How to: Create a Supporting Credential","nodes":[{"content":"How to: Create a Supporting Credential","pos":[0,38]}]},{"content":"It is possible to have a custom security scheme that requires more than one credential.","pos":[404,491]},{"content":"For example, a service may demand from the client not just a user name and password, but also a credential that proves the client is over the age of 18.","pos":[492,644]},{"content":"The second credential is a <bpt id=\"p1\">*</bpt>supporting credential<ept id=\"p1\">*</ept>.","pos":[645,696],"source":" The second credential is a *supporting credential*."},{"content":"This topic explains how to implement such credentials in an <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> client.","pos":[697,820],"source":" This topic explains how to implement such credentials in an [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] client."},{"pos":[828,1076],"content":"[!NOTE]\n The specification for supporting credentials is part of the WS-SecurityPolicy specification. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][Web Services Security Specifications](http://go.microsoft.com/fwlink/?LinkId=88537).","leadings":["","> "],"nodes":[{"content":" The specification for supporting credentials is part of the WS-SecurityPolicy specification. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][Web Services Security Specifications](http://go.microsoft.com/fwlink/?LinkId=88537).","pos":[8,246],"nodes":[{"content":"The specification for supporting credentials is part of the WS-SecurityPolicy specification.","pos":[1,93]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>Web Services Security Specifications<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=88537)</ept>.","pos":[94,238],"source":"[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][Web Services Security Specifications](http://go.microsoft.com/fwlink/?LinkId=88537)."}]}]},{"pos":[1085,1102],"content":"Supporting Tokens","linkify":"Supporting Tokens","nodes":[{"content":"Supporting Tokens","pos":[0,17]}]},{"pos":[1106,1264],"content":"In brief, when you use message security, a <bpt id=\"p1\">*</bpt>primary credential<ept id=\"p1\">*</ept> is always used to secure the message (for example, an X.509 certificate or a Kerberos ticket).","source":"In brief, when you use message security, a *primary credential* is always used to secure the message (for example, an X.509 certificate or a Kerberos ticket)."},{"content":"As defined by the specification, a security binding uses <bpt id=\"p1\">*</bpt>tokens<ept id=\"p1\">*</ept> to secure the message exchange.","pos":[1271,1368],"source":"As defined by the specification, a security binding uses *tokens* to secure the message exchange."},{"content":"A <bpt id=\"p1\">*</bpt>token<ept id=\"p1\">*</ept> is a representation of a security credential.","pos":[1369,1424],"source":" A *token* is a representation of a security credential."},{"content":"The security binding uses a primary token identified in the security binding policy to create a signature.","pos":[1431,1537]},{"content":"This signature is referred to as the <bpt id=\"p1\">*</bpt>message signature<ept id=\"p1\">*</ept>.","pos":[1538,1595],"source":" This signature is referred to as the *message signature*."},{"content":"Additional tokens can be specified to augment the claims provided by the token associated with the message signature.","pos":[1602,1719]},{"pos":[1728,1762],"content":"Endorsing, Signing, and Encrypting","linkify":"Endorsing, Signing, and Encrypting","nodes":[{"content":"Endorsing, Signing, and Encrypting","pos":[0,34]}]},{"content":"A supporting credential results in a <bpt id=\"p1\">*</bpt>supporting token<ept id=\"p1\">*</ept> transmitted inside the message.","pos":[1766,1853],"source":"A supporting credential results in a *supporting token* transmitted inside the message."},{"content":"The WS-SecurityPolicy specification defines four ways to attach a supporting token to the message, as described in the following table.","pos":[1854,1989]},{"content":"Purpose","pos":[1996,2003]},{"content":"Description","pos":[2004,2015]},{"content":"Signed","pos":[2056,2062]},{"content":"The supporting token is included in the security header and is signed by the message signature.","pos":[2063,2158]},{"content":"Endorsing","pos":[2163,2172]},{"pos":[2173,2222],"content":"An <bpt id=\"p1\">*</bpt>endorsing token<ept id=\"p1\">*</ept> signs the message signature.","source":"An *endorsing token* signs the message signature."},{"content":"Signed and Endorsing","pos":[2227,2247]},{"pos":[2248,2512],"content":"Signed, endorsing tokens sign the entire <ph id=\"ph1\">`ds:Signature`</ph> element produced from the message signature and are themselves signed by that message signature; that is, both tokens (the token used for the message signature and the signed endorsing token) sign each other.","source":"Signed, endorsing tokens sign the entire `ds:Signature` element produced from the message signature and are themselves signed by that message signature; that is, both tokens (the token used for the message signature and the signed endorsing token) sign each other."},{"content":"Signed and Encrypting","pos":[2517,2538]},{"pos":[2539,2674],"content":"Signed, encrypted supporting tokens are signed supporting tokens that are also encrypted when they appear in the <ph id=\"ph1\">`wsse:SecurityHeader`</ph>.","source":"Signed, encrypted supporting tokens are signed supporting tokens that are also encrypted when they appear in the `wsse:SecurityHeader`."},{"pos":[2684,2718],"content":"Programming Supporting Credentials","linkify":"Programming Supporting Credentials","nodes":[{"content":"Programming Supporting Credentials","pos":[0,34]}]},{"content":"To create a service that uses supporting tokens you must create a <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>customBinding&gt;<ept id=\"p1\">](../../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md)</ept>.","pos":[2722,2883],"source":"To create a service that uses supporting tokens you must create a [\\<customBinding>](../../../../docs/framework/configure-apps/file-schema/wcf/custombinding.md)."},{"content":"(<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>How to: Create a Custom Binding Using the SecurityBindingElement<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement.md)</ept>.)","pos":[2884,3127],"source":" ([!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][How to: Create a Custom Binding Using the SecurityBindingElement](../../../../docs/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement.md).)"},{"content":"The first step when creating a custom binding is to create a security binding element, which can be one of three types:","pos":[3134,3253]},{"content":"All classes inherit from the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>, which includes four relevant properties:","pos":[3492,3621],"source":"All classes inherit from the <xref:System.ServiceModel.Channels.SecurityBindingElement>, which includes four relevant properties:"},{"pos":[4070,4076],"content":"Scopes","linkify":"Scopes","nodes":[{"content":"Scopes","pos":[0,6]}]},{"content":"Two scopes exist for supporting credentials:","pos":[4080,4124]},{"content":"<bpt id=\"p1\">*</bpt>Endpoint supporting tokens<ept id=\"p1\">*</ept> support all operations of an endpoint.","pos":[4134,4201],"source":"*Endpoint supporting tokens* support all operations of an endpoint."},{"content":"That is, the credential that the supporting token represents can be used whenever any endpoint operations are invoked.","pos":[4202,4320]},{"pos":[4330,4403],"content":"<bpt id=\"p1\">*</bpt>Operation supporting tokens<ept id=\"p1\">*</ept> support only a specific endpoint operation.","source":"*Operation supporting tokens* support only a specific endpoint operation."},{"content":"As indicated by the property names, supporting credentials can be either required or optional.","pos":[4410,4504]},{"content":"That is, if the supporting credential is used if it is present, although it is not necessary, but the authentication will not fail if it is not present.","pos":[4505,4657]},{"pos":[4666,4676],"content":"Procedures","linkify":"Procedures","nodes":[{"content":"Procedures","pos":[0,10]}]},{"pos":[4687,4750],"content":"To create a custom binding that includes supporting credentials","linkify":"To create a custom binding that includes supporting credentials","nodes":[{"content":"To create a custom binding that includes supporting credentials","pos":[0,63]}]},{"content":"Create a security binding element.","pos":[4760,4794]},{"content":"The example below creates a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;</ph> with the <ph id=\"ph2\">`UserNameForCertificate`</ph> authentication mode.","pos":[4795,4945],"source":" The example below creates a <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> with the `UserNameForCertificate` authentication mode."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForCertificateBindingElement%2A&gt;</ph> method.","pos":[4946,5066],"source":" Use the <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForCertificateBindingElement%2A> method."},{"content":"Add the supporting parameter to the collection of types returned by the appropriate property (<ph id=\"ph1\">`Endorsing`</ph>, <ph id=\"ph2\">`Signed`</ph>, <ph id=\"ph3\">`SignedEncrypted`</ph>, or <ph id=\"ph4\">`SignedEndorsed`</ph>).","pos":[5076,5233],"source":"Add the supporting parameter to the collection of types returned by the appropriate property (`Endorsing`, `Signed`, `SignedEncrypted`, or `SignedEndorsed`)."},{"content":"The types in the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.Tokens&gt;</ph> namespace include commonly used types, such as the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters&gt;</ph>.","pos":[5234,5416],"source":" The types in the <xref:System.ServiceModel.Security.Tokens> namespace include commonly used types, such as the <xref:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters>."},{"pos":[5425,5432],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5442,5453],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"content":"The following example creates an instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement&gt;</ph> and adds an instance of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters&gt;</ph> class to the collection the Endorsing property returned.","pos":[5457,5733],"source":"The following example creates an instance of the <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> and adds an instance of the <xref:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters> class to the collection the Endorsing property returned."},{"pos":[5743,5747],"content":"Code","linkify":"Code","nodes":[{"content":"Code","pos":[0,4]}]},{"pos":[5751,5882],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_SupportingCredential#1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_supportingcredential/cs/source.cs#1)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[c_SupportingCredential#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_supportingcredential/cs/source.cs#1)]"},{"pos":[5891,5899],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[5903,6084],"content":"<bpt id=\"p1\">[</bpt>How to: Create a Custom Binding Using the SecurityBindingElement<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement.md)</ept>","source":"[How to: Create a Custom Binding Using the SecurityBindingElement](../../../../docs/framework/wcf/feature-details/how-to-create-a-custom-binding-using-the-securitybindingelement.md)"}]}