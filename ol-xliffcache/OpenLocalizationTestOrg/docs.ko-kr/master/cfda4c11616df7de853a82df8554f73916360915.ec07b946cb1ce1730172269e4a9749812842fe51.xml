{"content":"---\ntitle: \"Optional (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.Optional\"\n  - \"vb.optional\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Optional keyword, contexts\"\n  - \"Optional keyword\"\nms.assetid: 4571ce88-a539-4115-b230-54eb277c6aa7\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Optional (Visual Basic)\nSpecifies that a procedure argument can be omitted when the procedure is called.  \n  \n## Remarks  \n For each optional parameter, you must specify a constant expression as the default value of that parameter. If the expression evaluates to [Nothing](../../../visual-basic/language-reference/nothing.md), the default value of the value data type is used as the default value of the parameter.  \n  \n If the parameter list contains an optional parameter, every parameter that follows it must also be optional.  \n  \n The `Optional` modifier can be used in these contexts:  \n  \n-   [Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)  \n  \n-   [Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)  \n  \n-   [Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)  \n  \n-   [Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)  \n  \n> [!NOTE]\n>  When calling a procedure with or without optional parameters, you can pass arguments by position or by name. For more information, see [Passing Arguments by Position and by Name](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-position-and-by-name.md).  \n  \n> [!NOTE]\n>  You can also define a procedure with optional parameters by using overloading. If you have one optional parameter, you can define two overloaded versions of the procedure, one that accepts the parameter and one that doesn’t. For more information, see [Procedure Overloading](../../../visual-basic/programming-guide/language-features/procedures/procedure-overloading.md).  \n  \n## Example  \n The following example defines a procedure that has an optional parameter.  \n  \n```  \nPublic Function FindMatches(ByRef values As List(Of String),  \n                            ByVal searchString As String,  \n                            Optional ByVal matchCase As Boolean = False) As List(Of String)  \n  \n    Dim results As IEnumerable(Of String)  \n  \n    If matchCase Then  \n        results = From v In values  \n                  Where v.Contains(searchString)  \n    Else  \n        results = From v In values  \n                  Where UCase(v).Contains(UCase(searchString))  \n    End If  \n  \n    Return results.ToList()  \nEnd Function  \n```  \n  \n## Example  \n The following example demonstrates how to call a procedure with arguments passed by position and with arguments passed by name. The procedure has two optional parameters.  \n  \n [!code-vb[VbVbalrKeywords#21](../../../visual-basic/language-reference/codesnippet/VisualBasic/optional_1.vb)]  \n  \n## See Also  \n [Parameter List](../../../visual-basic/language-reference/statements/parameter-list.md)   \n [Optional Parameters](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)   \n [Keywords](../../../visual-basic/language-reference/keywords/index.md)","nodes":[{"pos":[4,618],"nodes":[{"content":"Optional (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,40],"content":"Optional (Visual Basic) | Microsoft Docs","nodes":[{"content":"Optional (Visual Basic) | Microsoft Docs","pos":[0,40]}]}],"pos":[6,49],"yaml":true}],"content":"title: \"Optional (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.Optional\"\n  - \"vb.optional\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Optional keyword, contexts\"\n  - \"Optional keyword\"\nms.assetid: 4571ce88-a539-4115-b230-54eb277c6aa7\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[625,648],"content":"Optional (Visual Basic)","linkify":"Optional (Visual Basic)","nodes":[{"content":"Optional (Visual Basic)","pos":[0,23]}]},{"content":"Specifies that a procedure argument can be omitted when the procedure is called.","pos":[649,729]},{"pos":[738,745],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For each optional parameter, you must specify a constant expression as the default value of that parameter.","pos":[749,856]},{"content":"If the expression evaluates to <bpt id=\"p1\">[</bpt>Nothing<ept id=\"p1\">](../../../visual-basic/language-reference/nothing.md)</ept>, the default value of the value data type is used as the default value of the parameter.","pos":[857,1039],"source":" If the expression evaluates to [Nothing](../../../visual-basic/language-reference/nothing.md), the default value of the value data type is used as the default value of the parameter."},{"content":"If the parameter list contains an optional parameter, every parameter that follows it must also be optional.","pos":[1046,1154]},{"pos":[1161,1215],"content":"The <ph id=\"ph1\">`Optional`</ph> modifier can be used in these contexts:","source":"The `Optional` modifier can be used in these contexts:"},{"pos":[1225,1318],"content":"<bpt id=\"p1\">[</bpt>Declare Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept>","source":"[Declare Statement](../../../visual-basic/language-reference/statements/declare-statement.md)"},{"pos":[1328,1423],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[1433,1528],"content":"<bpt id=\"p1\">[</bpt>Property Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/property-statement.md)</ept>","source":"[Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)"},{"pos":[1538,1623],"content":"<bpt id=\"p1\">[</bpt>Sub Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept>","source":"[Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)"},{"pos":[1631,1936],"content":"[!NOTE]\n When calling a procedure with or without optional parameters, you can pass arguments by position or by name. For more information, see [Passing Arguments by Position and by Name](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-position-and-by-name.md).","leadings":["","> "],"nodes":[{"content":"When calling a procedure with or without optional parameters, you can pass arguments by position or by name. For more information, see [Passing Arguments by Position and by Name](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-position-and-by-name.md).","pos":[9,303],"nodes":[{"content":"When calling a procedure with or without optional parameters, you can pass arguments by position or by name.","pos":[0,108]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Passing Arguments by Position and by Name<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-position-and-by-name.md)</ept>.","pos":[109,294],"source":" For more information, see [Passing Arguments by Position and by Name](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-position-and-by-name.md)."}]}]},{"pos":[1944,2325],"content":"[!NOTE]\n You can also define a procedure with optional parameters by using overloading. If you have one optional parameter, you can define two overloaded versions of the procedure, one that accepts the parameter and one that doesn’t. For more information, see [Procedure Overloading](../../../visual-basic/programming-guide/language-features/procedures/procedure-overloading.md).","leadings":["","> "],"nodes":[{"content":"You can also define a procedure with optional parameters by using overloading. If you have one optional parameter, you can define two overloaded versions of the procedure, one that accepts the parameter and one that doesn’t. For more information, see [Procedure Overloading](../../../visual-basic/programming-guide/language-features/procedures/procedure-overloading.md).","pos":[9,379],"nodes":[{"content":"You can also define a procedure with optional parameters by using overloading.","pos":[0,78]},{"content":"If you have one optional parameter, you can define two overloaded versions of the procedure, one that accepts the parameter and one that doesn’t.","pos":[79,224]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Procedure Overloading<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/procedure-overloading.md)</ept>.","pos":[225,370],"source":" For more information, see [Procedure Overloading](../../../visual-basic/programming-guide/language-features/procedures/procedure-overloading.md)."}]}]},{"pos":[2334,2341],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example defines a procedure that has an optional parameter.","pos":[2345,2418]},{"pos":[2995,3002],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to call a procedure with arguments passed by position and with arguments passed by name.","pos":[3006,3133]},{"content":"The procedure has two optional parameters.","pos":[3134,3176]},{"pos":[3183,3293],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrKeywords#21<ept id=\"p2\">](../../../visual-basic/language-reference/codesnippet/VisualBasic/optional_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrKeywords#21](../../../visual-basic/language-reference/codesnippet/VisualBasic/optional_1.vb)]"},{"pos":[3302,3310],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Parameter List<ept id=\"p1\">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept><ph id=\"ph1\"> </ph>","pos":[3314,3402],"source":"[Parameter List](../../../visual-basic/language-reference/statements/parameter-list.md) "},{"content":"<bpt id=\"p1\">[</bpt>Optional Parameters<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)</ept><ph id=\"ph1\"> </ph>","pos":[3406,3521],"source":"[Optional Parameters](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md) "},{"content":"<bpt id=\"p1\">[</bpt>Keywords<ept id=\"p1\">](../../../visual-basic/language-reference/keywords/index.md)</ept>","pos":[3525,3595],"source":"[Keywords](../../../visual-basic/language-reference/keywords/index.md)"}]}