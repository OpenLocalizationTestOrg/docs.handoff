<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="interfaces.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3085812f2467c1e73d94335530441d6bb12db6af</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\generics\interfaces.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2972e76690a9920e5a06101f35c2c623d3ca2027</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92497f142f8d236b1060f12a6f06339568bd4bd7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Generic Interfaces</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Generic Interfaces</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic provides an overview of generic interfaces that provide common functionality across families of generic types.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Generic Interfaces</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Generic interfaces provide type-safe counterparts to nongeneric interfaces for ordering and equality comparisons and for functionality that is shared by generic collection types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph>, the type parameters of several generic interfaces are marked covariant or contravariant, providing greater flexibility in assigning and using types that implement these interfaces.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Covariance and Contravariance<ept id="p1">](../../../docs/standard/generics/covariance-and-contravariance.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Equality and Ordering Comparisons</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System&gt;</ph> namespace, the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interfaces, like their nongeneric counterparts, define methods for ordering comparisons and equality comparisons, respectively.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Types implement these interfaces to provide the ability to perform such comparisons.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.Collections.Generic&gt;</ph> namespace, the <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interfaces offer a way to define an ordering or equality comparison for types that do not implement the <ph id="ph4">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> or <ph id="ph5">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, and they provide a way to redefine those relationships for types that do.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These interfaces are used by methods and constructors of many of the generic collection classes.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, you can pass a generic <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> object to the constructor of the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class to specify a sort order for a type that does not implement generic <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are overloads of the <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph> generic static method and the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType&gt;</ph> instance method for sorting arrays and lists using generic <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementations.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> generic classes provide base classes for implementations of the <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interfaces, and also provide default ordering and equality comparisons through their respective <ph id="ph5">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph6">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Collection Functionality</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> generic interface is the basic interface for generic collection types.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It provides basic functionality for adding, removing, copying, and enumerating elements.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> inherits from both generic <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> and nongeneric <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface extends the <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> generic interface with methods for indexed retrieval.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generic interface extends the <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> generic interface with methods for keyed retrieval.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Generic dictionary types in the .NET Framework base class library also implement the nongeneric <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> generic interface provides a generic enumerator structure.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> generic interface implemented by generic enumerators inherits the nongeneric <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface; the <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> members, which do not depend on the type parameter <ph id="ph5">`T`</ph>, appear only on the nongeneric interface.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This means that any consumer of the nongeneric interface can also consume the generic interface.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generics<ept id="p1">](../../../docs/standard/generics/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Collections in the .NET Framework<ept id="p1">](../../../docs/standard/generics/collections.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Delegates for Manipulating Arrays and Lists<ept id="p1">](../../../docs/standard/generics/delegates-for-manipulating-arrays-and-lists.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Covariance and Contravariance<ept id="p1">](../../../docs/standard/generics/covariance-and-contravariance.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>