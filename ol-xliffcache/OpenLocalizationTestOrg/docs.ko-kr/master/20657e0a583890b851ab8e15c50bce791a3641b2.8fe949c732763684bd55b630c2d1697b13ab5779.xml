{"content":"---\ntitle: \"<Property> Element (.NET Native)\"\nms.date: \"03/30/2017\"\nms.assetid: ad4ba56d-3bcb-4c10-ba90-1cc66e2175a1\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# \\<Property> Element (.NET Native)\nApplies runtime reflection policy to a property.  \n  \n## Syntax  \n  \n```xml  \n<Property Name=\"property_name\"  \n          Browse=\"policy_type\"  \n          Dynamic=\"policy_type\"  \n          Serialize=\"policy_type\" />  \n```  \n  \n## Attributes and Elements  \n The following sections describe attributes, child elements, and parent elements.  \n  \n### Attributes  \n  \n|Attribute|Attribute type|Description|  \n|---------------|--------------------|-----------------|  \n|`Name`|General|Required attribute. Specifies the property name.|  \n|`Browse`|Reflection|Optional attribute. Controls querying for information about or enumerating the property but does not enable any dynamic access at run time.|  \n|`Dynamic`|Reflection|Optional attribute. Controls runtime access to the property to enable dynamic programming. This policy ensures that a property can be set or retrieved dynamically at run time.|  \n|`Serialize`|Serialization|Optional attribute. Controls runtime access to a property to enable type instances to be serialized by libraries such as the Newtonsoft JSON serializer or to be used for data binding.|  \n  \n## Name attribute  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*method_name*|The property name. The type of the property is defined by the parent [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element.|  \n  \n## All other attributes  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|*policy_setting*|The setting to apply to this policy type for the property. Possible values are `Auto`, `Excluded`, `Included`, and `Required`. For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md).|  \n  \n### Child Elements  \n None.  \n  \n### Parent Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|[\\<Type>](../../../docs/framework/net-native/type-element-net-native.md)|Applies reflection policy to a type and all its members.|  \n|[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)|Applies reflection policy to a constructed generic type and all its members.|  \n  \n## Remarks  \n If a property's policy is not explicitly defined, it inherits the runtime policy of its parent element.  \n  \n## Example  \n The following example uses reflection to instantiate a `Book` object and display its property values. The original default.rd.xml file for the project appears as follows:  \n  \n```xml  \n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">  \n   <Application>  \n      <Namespace Name=\"LibraryApplications\"  Browse=\"Required Public\" >  \n         <Type Name=\"Book\"   Activate=\"All\" />  \n      </Namespace>  \n   </Application>  \n</Directives>  \n```  \n  \n The file applies the `All` value to the `Activate` policy for the `Book` class, which allows access to class constructors through reflection. The `Browse` policy for the `Book` class is inherited from its parent namespace. This is set to `Required Public`, which makes metadata available at runtime.  \n  \n The following is the source code for the example. The `outputBlock` variable represents a <xref:Windows.UI.Xaml.Controls.TextBlock> control.  \n  \n [!code-csharp[ProjectN_Reflection#6](../../../samples/snippets/csharp/VS_Snippets_CLR/projectn_reflection/cs/property1.cs#6)]  \n  \n However, compiling and executing this example throws a [MissingRuntimeArtifactException](../../../docs/framework/net-native/missingruntimeartifactexception-class-net-native.md) exception. Although we've made metadata for the `Book` type available, we've failed to make the implementations of the property getters available dynamically. We can correct this error by either in one of two ways:  \n  \n-   by defining the `Dynamic` policy for the `Book` type in its [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) element.  \n  \n-   By adding a nested [\\<Property>](../../../docs/framework/net-native/property-element-net-native.md) element for each property whose getter we'd like to invoke, as the following default.rd.xml file does.  \n  \n    ```xml  \n    <Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">  \n       <Application>  \n          <Namespace Name=\"LibraryApplications\"  Browse=\"Required Public\" >  \n             <Type Name=\"Book\"   Activate=\"All\" >  \n                <Property Name=\"Title\" Dynamic=\"Required\" />  \n                <Property Name=\"Author\" Dynamic=\"Required\" />  \n                  <Property Name=\"ISBN\" Dynamic=\"Required\" />  \n             </Type>  \n          </Namespace>  \n       </Application>  \n    </Directives>  \n    ```  \n  \n## See also\n\n- [Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)\n- [Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md)\n- [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)\n","nodes":[{"pos":[4,156],"embed":true,"restype":"x-metadata","content":"title: \"<Property> Element (.NET Native)\"\nms.date: \"03/30/2017\"\nms.assetid: ad4ba56d-3bcb-4c10-ba90-1cc66e2175a1\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"<Property> Element (.NET Native)","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;Property&gt;</ph> Element (.NET Native)","source":"<Property> Element (.NET Native)"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[163,196],"content":"\\<Property> Element (.NET Native)","linkify":"\\<Property> Element (.NET Native)","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Property&gt; Element (.NET Native)","pos":[0,33],"source":"\\<Property> Element (.NET Native)"}]},{"content":"Applies runtime reflection policy to a property.","pos":[197,245]},{"pos":[254,260],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[426,449],"content":"Attributes and Elements","linkify":"Attributes and Elements","nodes":[{"content":"Attributes and Elements","pos":[0,23]}]},{"content":"The following sections describe attributes, child elements, and parent elements.","pos":[453,533]},{"pos":[543,553],"content":"Attributes","linkify":"Attributes","nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"Attribute","pos":[560,569]},{"content":"Attribute type","pos":[570,584]},{"content":"Description","pos":[585,596]},{"content":"General","pos":[667,674]},{"content":"Required attribute.","pos":[675,694]},{"content":"Specifies the property name.","pos":[695,723]},{"content":"Reflection","pos":[737,747]},{"content":"Optional attribute.","pos":[748,767]},{"content":"Controls querying for information about or enumerating the property but does not enable any dynamic access at run time.","pos":[768,887]},{"content":"Reflection","pos":[902,912]},{"content":"Optional attribute.","pos":[913,932]},{"content":"Controls runtime access to the property to enable dynamic programming.","pos":[933,1003]},{"content":"This policy ensures that a property can be set or retrieved dynamically at run time.","pos":[1004,1088]},{"content":"Serialization","pos":[1105,1118]},{"content":"Optional attribute.","pos":[1119,1138]},{"content":"Controls runtime access to a property to enable type instances to be serialized by libraries such as the Newtonsoft JSON serializer or to be used for data binding.","pos":[1139,1302]},{"pos":[1312,1326],"content":"Name attribute","linkify":"Name attribute","nodes":[{"content":"Name attribute","pos":[0,14]}]},{"content":"Value","pos":[1333,1338]},{"content":"Description","pos":[1339,1350]},{"pos":[1389,1402],"content":"<bpt id=\"p1\">*</bpt>method_name<ept id=\"p1\">*</ept>","source":"*method_name*"},{"content":"The property name.","pos":[1403,1421]},{"content":"The type of the property is defined by the parent <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept> or <bpt id=\"p2\">[</bpt><ph id=\"ph2\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p2\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept> element.","pos":[1422,1655],"source":" The type of the property is defined by the parent [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) or [\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md) element."},{"pos":[1665,1685],"content":"All other attributes","linkify":"All other attributes","nodes":[{"content":"All other attributes","pos":[0,20]}]},{"content":"Value","pos":[1692,1697]},{"content":"Description","pos":[1698,1709]},{"pos":[1748,1764],"content":"<bpt id=\"p1\">*</bpt>policy_setting<ept id=\"p1\">*</ept>","source":"*policy_setting*"},{"content":"The setting to apply to this policy type for the property.","pos":[1765,1823]},{"content":"Possible values are <ph id=\"ph1\">`Auto`</ph>, <ph id=\"ph2\">`Excluded`</ph>, <ph id=\"ph3\">`Included`</ph>, and <ph id=\"ph4\">`Required`</ph>.","pos":[1824,1891],"source":" Possible values are `Auto`, `Excluded`, `Included`, and `Required`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>.","pos":[1892,2027],"source":" For more information, see [Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)."},{"pos":[2038,2052],"content":"Child Elements","linkify":"Child Elements","nodes":[{"content":"Child Elements","pos":[0,14]}]},{"content":"None.","pos":[2056,2061]},{"pos":[2071,2086],"content":"Parent Elements","linkify":"Parent Elements","nodes":[{"content":"Parent Elements","pos":[0,15]}]},{"content":"Element","pos":[2093,2100]},{"content":"Description","pos":[2101,2112]},{"pos":[2153,2225],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept>","source":"[\\<Type>](../../../docs/framework/net-native/type-element-net-native.md)"},{"content":"Applies reflection policy to a type and all its members.","pos":[2226,2282]},{"pos":[2287,2385],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>TypeInstantiation&gt;<ept id=\"p1\">](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)</ept>","source":"[\\<TypeInstantiation>](../../../docs/framework/net-native/typeinstantiation-element-net-native.md)"},{"content":"Applies reflection policy to a constructed generic type and all its members.","pos":[2386,2462]},{"pos":[2472,2479],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If a property's policy is not explicitly defined, it inherits the runtime policy of its parent element.","pos":[2483,2586]},{"pos":[2595,2602],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example uses reflection to instantiate a <ph id=\"ph1\">`Book`</ph> object and display its property values.","pos":[2606,2707],"source":"The following example uses reflection to instantiate a `Book` object and display its property values."},{"content":"The original default.rd.xml file for the project appears as follows:","pos":[2708,2776]},{"content":"The file applies the <ph id=\"ph1\">`All`</ph> value to the <ph id=\"ph2\">`Activate`</ph> policy for the <ph id=\"ph3\">`Book`</ph> class, which allows access to class constructors through reflection.","pos":[3075,3216],"source":"The file applies the `All` value to the `Activate` policy for the `Book` class, which allows access to class constructors through reflection."},{"content":"The <ph id=\"ph1\">`Browse`</ph> policy for the <ph id=\"ph2\">`Book`</ph> class is inherited from its parent namespace.","pos":[3217,3297],"source":" The `Browse` policy for the `Book` class is inherited from its parent namespace."},{"content":"This is set to <ph id=\"ph1\">`Required Public`</ph>, which makes metadata available at runtime.","pos":[3298,3374],"source":" This is set to `Required Public`, which makes metadata available at runtime."},{"content":"The following is the source code for the example.","pos":[3381,3430]},{"content":"The <ph id=\"ph1\">`outputBlock`</ph> variable represents a <ph id=\"ph2\">&lt;xref:Windows.UI.Xaml.Controls.TextBlock&gt;</ph> control.","pos":[3431,3521],"source":" The `outputBlock` variable represents a <xref:Windows.UI.Xaml.Controls.TextBlock> control."},{"content":"However, compiling and executing this example throws a <bpt id=\"p1\">[</bpt>MissingRuntimeArtifactException<ept id=\"p1\">](../../../docs/framework/net-native/missingruntimeartifactexception-class-net-native.md)</ept> exception.","pos":[3660,3847],"source":"However, compiling and executing this example throws a [MissingRuntimeArtifactException](../../../docs/framework/net-native/missingruntimeartifactexception-class-net-native.md) exception."},{"content":"Although we've made metadata for the <ph id=\"ph1\">`Book`</ph> type available, we've failed to make the implementations of the property getters available dynamically.","pos":[3848,3995],"source":" Although we've made metadata for the `Book` type available, we've failed to make the implementations of the property getters available dynamically."},{"content":"We can correct this error by either in one of two ways:","pos":[3996,4051]},{"pos":[4061,4202],"content":"by defining the <ph id=\"ph1\">`Dynamic`</ph> policy for the <ph id=\"ph2\">`Book`</ph> type in its <bpt id=\"p1\">[</bpt><ph id=\"ph3\">\\&lt;</ph>Type&gt;<ept id=\"p1\">](../../../docs/framework/net-native/type-element-net-native.md)</ept> element.","source":"by defining the `Dynamic` policy for the `Book` type in its [\\<Type>](../../../docs/framework/net-native/type-element-net-native.md) element."},{"pos":[4212,4414],"content":"By adding a nested <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>Property&gt;<ept id=\"p1\">](../../../docs/framework/net-native/property-element-net-native.md)</ept> element for each property whose getter we'd like to invoke, as the following default.rd.xml file does.","source":"By adding a nested [\\<Property>](../../../docs/framework/net-native/property-element-net-native.md) element for each property whose getter we'd like to invoke, as the following default.rd.xml file does."},{"pos":[4964,4972],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4976,5128],"content":"<bpt id=\"p1\">[</bpt>Runtime Directives (rd.xml) Configuration File Reference<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)</ept>","source":"[Runtime Directives (rd.xml) Configuration File Reference](../../../docs/framework/net-native/runtime-directives-rd-xml-configuration-file-reference.md)"},{"pos":[5131,5225],"content":"<bpt id=\"p1\">[</bpt>Runtime Directive Elements<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-elements.md)</ept>","source":"[Runtime Directive Elements](../../../docs/framework/net-native/runtime-directive-elements.md)"},{"pos":[5228,5336],"content":"<bpt id=\"p1\">[</bpt>Runtime Directive Policy Settings<ept id=\"p1\">](../../../docs/framework/net-native/runtime-directive-policy-settings.md)</ept>","source":"[Runtime Directive Policy Settings](../../../docs/framework/net-native/runtime-directive-policy-settings.md)"}]}