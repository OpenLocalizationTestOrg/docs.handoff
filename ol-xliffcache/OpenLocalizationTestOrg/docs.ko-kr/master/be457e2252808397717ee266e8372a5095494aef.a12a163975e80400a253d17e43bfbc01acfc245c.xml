{"content":"---\ntitle: \"Type Conversion Tables in .NET | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"widening conversions\"\n  - \"narrowing conversions\"\n  - \"type conversion, table\"\n  - \"converting types, narrowing conversions\"\n  - \"converting types, widening conversions\"\n  - \"base types, converting\"\n  - \"tables [.NET Framework], type conversions\"\n  - \"data types [.NET Framework], converting\"\nms.assetid: 0ea65c59-85eb-4a52-94ca-c36d3bd13058\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# Type Conversion Tables in .NET\nWidening conversion occurs when a value of one type is converted to another type that is of equal or greater size. A narrowing conversion occurs when a value of one type is converted to a value of another type that is of a smaller size. The tables in this topic illustrate the behaviors exhibited by both types of conversions.  \n  \n## Widening Conversions  \n The following table describes the widening conversions that can be performed without the loss of information.  \n  \n|Type|Can be converted without data loss to|  \n|----------|-------------------------------------------|  \n|<xref:System.Byte>|<xref:System.UInt16>, <xref:System.Int16>, <xref:System.UInt32>, <xref:System.Int32>, <xref:System.UInt64>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>|  \n|<xref:System.SByte>|<xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>|  \n|<xref:System.Int16>|<xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>|  \n|<xref:System.UInt16>|<xref:System.UInt32>, <xref:System.Int32>, <xref:System.UInt64>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>|  \n|<xref:System.Char>|<xref:System.UInt16>, <xref:System.UInt32>, <xref:System.Int32>, <xref:System.UInt64>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>|  \n|<xref:System.Int32>|<xref:System.Int64>, <xref:System.Double>, <xref:System.Decimal>|  \n|<xref:System.UInt32>|<xref:System.Int64>, <xref:System.UInt64>, <xref:System.Double>, <xref:System.Decimal>|  \n|<xref:System.Int64>|<xref:System.Decimal>|  \n|<xref:System.UInt64>|<xref:System.Decimal>|  \n|<xref:System.Single>|<xref:System.Double>|  \n  \n Some widening conversions to <xref:System.Single> or <xref:System.Double> can cause a loss of precision. The following table describes the widening conversions that sometimes result in a loss of information.  \n  \n|Type|Can be converted to|  \n|----------|-------------------------|  \n|<xref:System.Int32>|<xref:System.Single>|  \n|<xref:System.UInt32>|<xref:System.Single>|  \n|<xref:System.Int64>|<xref:System.Single>, <xref:System.Double>|  \n|<xref:System.UInt64>|<xref:System.Single>, <xref:System.Double>|  \n|<xref:System.Decimal>|<xref:System.Single>, <xref:System.Double>|  \n  \n## Narrowing Conversions  \n A narrowing conversion to <xref:System.Single> or <xref:System.Double> can cause a loss of information. If the target type cannot properly express the magnitude of the source, the resulting type is set to the constant `PositiveInfinity` or `NegativeInfinity`. `PositiveInfinity` results from dividing a positive number by zero and is also returned when the value of a <xref:System.Single> or <xref:System.Double> exceeds the value of the `MaxValue` field. `NegativeInfinity` results from dividing a negative number by zero and is also returned when the value of a <xref:System.Single> or <xref:System.Double> falls below the value of the `MinValue` field. A conversion from a <xref:System.Double> to a <xref:System.Single> might result in `PositiveInfinity` or `NegativeInfinity`.  \n  \n A narrowing conversion can also result in a loss of information for other data types. However, an <xref:System.OverflowException> is thrown if the value of a type that is being converted falls outside of the range specified by the target type's `MaxValue` and `MinValue` fields, and the conversion is checked by the runtime to ensure that the value of the target type does not exceed its `MaxValue` or `MinValue`. Conversions that are performed with the <xref:System.Convert?displayProperty=fullName> class are always checked in this manner.  \n  \n The following table lists conversions that throw an <xref:System.OverflowException> using <xref:System.Convert?displayProperty=fullName> or any checked conversion if the value of the type being converted is outside the defined range of the resulting type.  \n  \n|Type|Can be converted to|  \n|----------|-------------------------|  \n|<xref:System.Byte>|<xref:System.SByte>|  \n|<xref:System.SByte>|<xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>|  \n|<xref:System.Int16>|<xref:System.Byte>, <xref:System.SByte>, <xref:System.UInt16>|  \n|<xref:System.UInt16>|<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>|  \n|<xref:System.Int32>|<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>,<xref:System.UInt32>|  \n|<xref:System.UInt32>|<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>|  \n|<xref:System.Int64>|<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>,<xref:System.UInt32>,<xref:System.UInt64>|  \n|<xref:System.UInt64>|<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>|  \n|<xref:System.Decimal>|<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>|  \n|<xref:System.Single>|<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>|  \n|<xref:System.Double>|<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>|  \n  \n## See Also  \n <xref:System.Convert?displayProperty=fullName>   \n [Type Conversion in .NET](../../../docs/standard/base-types/type-conversion.md)","nodes":[{"pos":[12,59],"content":"Type Conversion Tables in .NET | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Type Conversion Tables in .NET | Microsoft Docs","pos":[0,47]}]},{"pos":[671,701],"content":"Type Conversion Tables in .NET","linkify":"Type Conversion Tables in .NET","nodes":[{"content":"Type Conversion Tables in .NET","pos":[0,30]}]},{"content":"Widening conversion occurs when a value of one type is converted to another type that is of equal or greater size.","pos":[702,816]},{"content":"A narrowing conversion occurs when a value of one type is converted to a value of another type that is of a smaller size.","pos":[817,938]},{"content":"The tables in this topic illustrate the behaviors exhibited by both types of conversions.","pos":[939,1028]},{"pos":[1037,1057],"content":"Widening Conversions","linkify":"Widening Conversions","nodes":[{"content":"Widening Conversions","pos":[0,20]}]},{"content":"The following table describes the widening conversions that can be performed without the loss of information.","pos":[1061,1170]},{"content":"Type","pos":[1177,1181]},{"content":"Can be converted without data loss to","pos":[1182,1219]},{"content":"<ph id=\"ph1\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.UInt64&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Decimal&gt;</ph>","pos":[1302,1496],"source":"<xref:System.UInt16>, <xref:System.Int16>, <xref:System.UInt32>, <xref:System.Int32>, <xref:System.UInt64>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Decimal&gt;</ph>","pos":[1521,1649],"source":"<xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Decimal&gt;</ph>","pos":[1674,1781],"source":"<xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>"},{"content":"<ph id=\"ph1\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.UInt64&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Decimal&gt;</ph>","pos":[1807,1958],"source":"<xref:System.UInt32>, <xref:System.Int32>, <xref:System.UInt64>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>"},{"content":"<ph id=\"ph1\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt64&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Decimal&gt;</ph>","pos":[1982,2155],"source":"<xref:System.UInt16>, <xref:System.UInt32>, <xref:System.Int32>, <xref:System.UInt64>, <xref:System.Int64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Decimal>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Decimal&gt;</ph>","pos":[2180,2244],"source":"<xref:System.Int64>, <xref:System.Double>, <xref:System.Decimal>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.UInt64&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Decimal&gt;</ph>","pos":[2270,2356],"source":"<xref:System.Int64>, <xref:System.UInt64>, <xref:System.Double>, <xref:System.Decimal>"},{"content":"Some widening conversions to <ph id=\"ph1\">&lt;xref:System.Single&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph> can cause a loss of precision.","pos":[2503,2607],"source":"Some widening conversions to <xref:System.Single> or <xref:System.Double> can cause a loss of precision."},{"content":"The following table describes the widening conversions that sometimes result in a loss of information.","pos":[2608,2710]},{"content":"Type","pos":[2717,2721]},{"content":"Can be converted to","pos":[2722,2741]},{"content":"<ph id=\"ph1\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph>","pos":[2898,2940],"source":"<xref:System.Single>, <xref:System.Double>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph>","pos":[2966,3008],"source":"<xref:System.Single>, <xref:System.Double>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph>","pos":[3035,3077],"source":"<xref:System.Single>, <xref:System.Double>"},{"pos":[3087,3108],"content":"Narrowing Conversions","linkify":"Narrowing Conversions","nodes":[{"content":"Narrowing Conversions","pos":[0,21]}]},{"content":"A narrowing conversion to <ph id=\"ph1\">&lt;xref:System.Single&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph> can cause a loss of information.","pos":[3112,3215],"source":"A narrowing conversion to <xref:System.Single> or <xref:System.Double> can cause a loss of information."},{"content":"If the target type cannot properly express the magnitude of the source, the resulting type is set to the constant <ph id=\"ph1\">`PositiveInfinity`</ph> or <ph id=\"ph2\">`NegativeInfinity`</ph>.","pos":[3216,3371],"source":" If the target type cannot properly express the magnitude of the source, the resulting type is set to the constant `PositiveInfinity` or `NegativeInfinity`."},{"content":"<ph id=\"ph1\">`PositiveInfinity`</ph> results from dividing a positive number by zero and is also returned when the value of a <ph id=\"ph2\">&lt;xref:System.Single&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Double&gt;</ph> exceeds the value of the <ph id=\"ph4\">`MaxValue`</ph> field.","pos":[3372,3567],"source":"`PositiveInfinity` results from dividing a positive number by zero and is also returned when the value of a <xref:System.Single> or <xref:System.Double> exceeds the value of the `MaxValue` field."},{"content":"<ph id=\"ph1\">`NegativeInfinity`</ph> results from dividing a negative number by zero and is also returned when the value of a <ph id=\"ph2\">&lt;xref:System.Single&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Double&gt;</ph> falls below the value of the <ph id=\"ph4\">`MinValue`</ph> field.","pos":[3568,3767],"source":"`NegativeInfinity` results from dividing a negative number by zero and is also returned when the value of a <xref:System.Single> or <xref:System.Double> falls below the value of the `MinValue` field."},{"content":"A conversion from a <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> to a <ph id=\"ph2\">&lt;xref:System.Single&gt;</ph> might result in <ph id=\"ph3\">`PositiveInfinity`</ph> or <ph id=\"ph4\">`NegativeInfinity`</ph>.","pos":[3768,3892],"source":" A conversion from a <xref:System.Double> to a <xref:System.Single> might result in `PositiveInfinity` or `NegativeInfinity`."},{"content":"A narrowing conversion can also result in a loss of information for other data types.","pos":[3899,3984]},{"content":"However, an <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> is thrown if the value of a type that is being converted falls outside of the range specified by the target type's <ph id=\"ph2\">`MaxValue`</ph> and <ph id=\"ph3\">`MinValue`</ph> fields, and the conversion is checked by the runtime to ensure that the value of the target type does not exceed its <ph id=\"ph4\">`MaxValue`</ph> or <ph id=\"ph5\">`MinValue`</ph>.","pos":[3985,4312],"source":" However, an <xref:System.OverflowException> is thrown if the value of a type that is being converted falls outside of the range specified by the target type's `MaxValue` and `MinValue` fields, and the conversion is checked by the runtime to ensure that the value of the target type does not exceed its `MaxValue` or `MinValue`."},{"content":"Conversions that are performed with the <ph id=\"ph1\">&lt;xref:System.Convert?displayProperty=fullName&gt;</ph> class are always checked in this manner.","pos":[4313,4440],"source":" Conversions that are performed with the <xref:System.Convert?displayProperty=fullName> class are always checked in this manner."},{"content":"The following table lists conversions that throw an <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> using <ph id=\"ph2\">&lt;xref:System.Convert?displayProperty=fullName&gt;</ph> or any checked conversion if the value of the type being converted is outside the defined range of the resulting type.","pos":[4447,4702],"source":"The following table lists conversions that throw an <xref:System.OverflowException> using <xref:System.Convert?displayProperty=fullName> or any checked conversion if the value of the type being converted is outside the defined range of the resulting type."},{"content":"Type","pos":[4709,4713]},{"content":"Can be converted to","pos":[4714,4733]},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt64&gt;</ph>","pos":[4842,4926],"source":"<xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.UInt16&gt;</ph>","pos":[4951,5012],"source":"<xref:System.Byte>, <xref:System.SByte>, <xref:System.UInt16>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>","pos":[5038,5098],"source":"<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt16&gt;</ph>,<ph id=\"ph5\">&lt;xref:System.UInt32&gt;</ph>","pos":[5123,5226],"source":"<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>,<xref:System.UInt32>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int32&gt;</ph>","pos":[5252,5355],"source":"<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int32&gt;</ph>,<ph id=\"ph6\">&lt;xref:System.UInt32&gt;</ph>,<ph id=\"ph7\">&lt;xref:System.UInt64&gt;</ph>","pos":[5380,5525],"source":"<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>,<xref:System.UInt32>,<xref:System.UInt64>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Int64&gt;</ph>","pos":[5551,5697],"source":"<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.UInt64&gt;</ph>","pos":[5724,5892],"source":"<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.UInt64&gt;</ph>","pos":[5918,6086],"source":"<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>"},{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.UInt64&gt;</ph>","pos":[6112,6280],"source":"<xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>"},{"pos":[6290,6298],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>Type Conversion in .NET<ept id=\"p1\">](../../../docs/standard/base-types/type-conversion.md)</ept>","pos":[6352,6432],"source":" [Type Conversion in .NET](../../../docs/standard/base-types/type-conversion.md)"}]}