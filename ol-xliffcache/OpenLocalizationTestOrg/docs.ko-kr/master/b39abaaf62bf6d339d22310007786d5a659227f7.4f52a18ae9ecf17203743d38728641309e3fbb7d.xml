{"content":"---\ntitle: \"COR_GC_STATS Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"COR_GC_STATS\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_GC_STATS\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COR_GC_STATS structure [.NET Framework hosting]\"\nms.assetid: 8d4ff73e-739b-40f6-9349-359fbc99c2f9\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 16\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# COR_GC_STATS Structure\nProvides statistics about the garbage collection mechanism of the common language runtime (CLR).  \n  \n## Syntax  \n  \n```  \ntypedef struct _COR_GC_STATS {  \n    ULONG   Flags;   \n    SIZE_T  ExplicitGCCount;  \n    SIZE_T  GenCollectionsTaken[3];  \n    SIZE_T  CommittedKBytes;   \n    SIZE_T  ReservedKBytes;  \n    SIZE_T  Gen0HeapSizeKBytes;  \n    SIZE_T  Gen1HeapSizeKBytes;  \n    SIZE_T  Gen2HeapSizeKBytes;  \n    SIZE_T  LargeObjectHeapSizeKBytes;  \n    SIZE_T  KBytesPromotedFromGen0;  \n    SIZE_T  KBytesPromotedFromGen1;  \n} COR_GC_STATS;  \n```  \n  \n## Members  \n  \n|Member|Description|  \n|------------|-----------------|  \n|`Flags`|Indicates which field values should be calculated and returned.|  \n|`ExplicitGCCount`|Indicates the number of garbage collections that were forced by external request.|  \n|`GenCollectionsTaken`|Indicates the number of garbage collections performed for each generation.|  \n|`CommittedKBytes`|The total number of kilobytes committed in all heaps.|  \n|`ReservedKBytes`|The total number of kilobytes reserved in all heaps.|  \n|`Gen0HeapSizeKBytes`|The size, in kilobytes, of the generation-zero heap.|  \n|`Gen1HeapSizeKBytes`|The size, in kilobytes, of the generation-one heap.|  \n|`Gen2HeapSizeKBytes`|The size, in kilobytes, of the generation-two heap.|  \n|`LargeObjectHeapSizeKBytes`|The size, in kilobytes, of the large object heap.|  \n|`KBytesPromotedFromGen0`|The size, in kilobytes, of the objects promoted from generation zero to generation one.|  \n|`KBytesPromotedFromGen1`|The size, in kilobytes, of the objects promoted from generation one to generation two.|  \n  \n## Remarks  \n The [ICLRGCManager::GetStats](../../../../docs/framework/unmanaged-api/hosting/iclrgcmanager-getstats-method.md) method requires the `Flags` field of the `COR_GC_STATS` structure to be set to one or more values of the [COR_GC_STAT_TYPES](../../../../docs/framework/unmanaged-api/hosting/cor-gc-stat-types-enumeration.md) enumeration to specify which statistics are to be set.  \n  \n The following table maps the statistics provided by this structure to the two [COR_GC_STAT_TYPES](../../../../docs/framework/unmanaged-api/hosting/cor-gc-stat-types-enumeration.md) enumeration values, `COR_GC_COUNTS` and `COR_GC_MEMORYUSAGE`.  \n  \n|Specified by COR_GC_COUNTS|Specified by COR_GC_MEMORYUSAGE|  \n|----------------------------------|---------------------------------------|  \n|`ExplicitGCCount`<br /><br /> `GenCollectionsTaken`|`CommittedKBytes`<br /><br /> `ReservedKBytes`<br /><br /> `Gen0HeapSizeKBytes`<br /><br /> `Gen1HeapSizeKBytes`<br /><br /> `Gen2HeapSizeKBytes`<br /><br /> `LargeObjectHeapSizeKBytes`<br /><br /> `KBytesPromotedFromGen0`<br /><br /> `KBytesPromotedFromGen1`|  \n  \n An example of the usage is as follows:  \n  \n```  \nCOR_GC_STATS GCStats;  \nGCStats.Flags = COR_GC_COUNTS | COR_GC_MEMORYUSAGE;  \npCLRGCManager->GetStats(&GCStats);  \n```  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** GCHost.idl  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See Also  \n [Hosting Structures](../../../../docs/framework/unmanaged-api/hosting/hosting-structures.md)   \n [Automatic Memory Management](../../../../docs/standard/automatic-memory-management.md)   \n [Garbage Collection](../../../../docs/standard/garbage-collection/index.md)","nodes":[{"pos":[4,591],"nodes":[{"content":"COR_GC_STATS Structure | Microsoft Docs","nodes":[{"pos":[0,39],"content":"COR_GC_STATS Structure | Microsoft Docs","nodes":[{"content":"COR_GC_STATS Structure | Microsoft Docs","pos":[0,39]}]}],"pos":[6,48],"yaml":true}],"content":"title: \"COR_GC_STATS Structure | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"COR_GC_STATS\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_GC_STATS\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"COR_GC_STATS structure [.NET Framework hosting]\"\nms.assetid: 8d4ff73e-739b-40f6-9349-359fbc99c2f9\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 16\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[598,620],"content":"COR_GC_STATS Structure","linkify":"COR_GC_STATS Structure","nodes":[{"content":"COR_GC_STATS Structure","pos":[0,22]}]},{"content":"Provides statistics about the garbage collection mechanism of the common language runtime (CLR).","pos":[621,717]},{"pos":[726,732],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1179,1186],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Member","pos":[1193,1199]},{"content":"Description","pos":[1200,1211]},{"content":"Indicates which field values should be calculated and returned.","pos":[1259,1322]},{"content":"Indicates the number of garbage collections that were forced by external request.","pos":[1345,1426]},{"content":"Indicates the number of garbage collections performed for each generation.","pos":[1453,1527]},{"content":"The total number of kilobytes committed in all heaps.","pos":[1550,1603]},{"content":"The total number of kilobytes reserved in all heaps.","pos":[1625,1677]},{"content":"The size, in kilobytes, of the generation-zero heap.","pos":[1703,1755]},{"content":"The size, in kilobytes, of the generation-one heap.","pos":[1781,1832]},{"content":"The size, in kilobytes, of the generation-two heap.","pos":[1858,1909]},{"content":"The size, in kilobytes, of the large object heap.","pos":[1942,1991]},{"content":"The size, in kilobytes, of the objects promoted from generation zero to generation one.","pos":[2021,2108]},{"content":"The size, in kilobytes, of the objects promoted from generation one to generation two.","pos":[2138,2224]},{"pos":[2234,2241],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2245,2620],"content":"The <bpt id=\"p1\">[</bpt>ICLRGCManager::GetStats<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrgcmanager-getstats-method.md)</ept> method requires the <ph id=\"ph1\">`Flags`</ph> field of the <ph id=\"ph2\">`COR_GC_STATS`</ph> structure to be set to one or more values of the <bpt id=\"p2\">[</bpt>COR_GC_STAT_TYPES<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/hosting/cor-gc-stat-types-enumeration.md)</ept> enumeration to specify which statistics are to be set.","source":"The [ICLRGCManager::GetStats](../../../../docs/framework/unmanaged-api/hosting/iclrgcmanager-getstats-method.md) method requires the `Flags` field of the `COR_GC_STATS` structure to be set to one or more values of the [COR_GC_STAT_TYPES](../../../../docs/framework/unmanaged-api/hosting/cor-gc-stat-types-enumeration.md) enumeration to specify which statistics are to be set."},{"pos":[2627,2869],"content":"The following table maps the statistics provided by this structure to the two <bpt id=\"p1\">[</bpt>COR_GC_STAT_TYPES<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/cor-gc-stat-types-enumeration.md)</ept> enumeration values, <ph id=\"ph1\">`COR_GC_COUNTS`</ph> and <ph id=\"ph2\">`COR_GC_MEMORYUSAGE`</ph>.","source":"The following table maps the statistics provided by this structure to the two [COR_GC_STAT_TYPES](../../../../docs/framework/unmanaged-api/hosting/cor-gc-stat-types-enumeration.md) enumeration values, `COR_GC_COUNTS` and `COR_GC_MEMORYUSAGE`."},{"content":"Specified by COR_GC_COUNTS","pos":[2876,2902]},{"content":"Specified by COR_GC_MEMORYUSAGE","pos":[2903,2934]},{"content":"An example of the usage is as follows:","pos":[3337,3375]},{"pos":[3514,3526],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3530,3634],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3641,3663],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> GCHost.idl","source":"**Header:** GCHost.idl"},{"pos":[3670,3720],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[3727,3835],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[3844,3852],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Hosting Structures<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/hosting-structures.md)</ept><ph id=\"ph1\"> </ph>","pos":[3856,3949],"source":"[Hosting Structures](../../../../docs/framework/unmanaged-api/hosting/hosting-structures.md) "},{"content":"<bpt id=\"p1\">[</bpt>Automatic Memory Management<ept id=\"p1\">](../../../../docs/standard/automatic-memory-management.md)</ept><ph id=\"ph1\"> </ph>","pos":[3953,4041],"source":"[Automatic Memory Management](../../../../docs/standard/automatic-memory-management.md) "},{"content":"<bpt id=\"p1\">[</bpt>Garbage Collection<ept id=\"p1\">](../../../../docs/standard/garbage-collection/index.md)</ept>","pos":[4045,4120],"source":"[Garbage Collection](../../../../docs/standard/garbage-collection/index.md)"}]}