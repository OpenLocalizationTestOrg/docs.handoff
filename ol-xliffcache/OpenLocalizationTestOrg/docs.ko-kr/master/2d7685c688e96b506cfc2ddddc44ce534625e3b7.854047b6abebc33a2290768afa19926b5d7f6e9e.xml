{"content":"---\ntitle: \"Nothing and Strings in Visual Basic | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"strings [Visual Basic], Nothing\"\nms.assetid: 261380af-2024-4ecf-823b-43b1034d92cd\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Nothing and Strings in Visual Basic\nThe [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] runtime and the [!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)] evaluate `Nothing` differently when it comes to strings.  \n  \n## Visual Basic Runtime and the .NET Framework  \n Consider the following example:  \n  \n [!code-vb[VbVbalrStrings#47](../../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/nothing-and-strings_1.vb)]  \n  \n The [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] runtime usually evaluates `Nothing` as an empty string (\"\"). The [!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)] does not, however, and throws an exception whenever an attempt is made to perform a string operation on `Nothing`.  \n  \n## See Also  \n [Introduction to Strings in Visual Basic](../../../../visual-basic/programming-guide/language-features/strings/introduction-to-strings.md)","nodes":[{"pos":[12,64],"content":"Nothing and Strings in Visual Basic | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Nothing and Strings in Visual Basic | Microsoft Docs","pos":[0,52]}]},{"pos":[596,631],"content":"Nothing and Strings in Visual Basic","linkify":"Nothing and Strings in Visual Basic","nodes":[{"content":"Nothing and Strings in Visual Basic","pos":[0,35]}]},{"pos":[632,888],"content":"The <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> runtime and the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> evaluate <ph id=\"ph3\">`Nothing`</ph> differently when it comes to strings.","source":"The [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] runtime and the [!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)] evaluate `Nothing` differently when it comes to strings."},{"pos":[897,940],"content":"Visual Basic Runtime and the .NET Framework","linkify":"Visual Basic Runtime and the .NET Framework","nodes":[{"content":"Visual Basic Runtime and the .NET Framework","pos":[0,43]}]},{"content":"Consider the following example:","pos":[944,975]},{"pos":[982,1115],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrStrings#47<ept id=\"p2\">](../../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/nothing-and-strings_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrStrings#47](../../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/nothing-and-strings_1.vb)]"},{"content":"The <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> runtime usually evaluates <ph id=\"ph2\">`Nothing`</ph> as an empty string (\"\").","pos":[1122,1279],"source":"The [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] runtime usually evaluates `Nothing` as an empty string (\"\")."},{"content":"The <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> does not, however, and throws an exception whenever an attempt is made to perform a string operation on <ph id=\"ph2\">`Nothing`</ph>.","pos":[1280,1485],"source":" The [!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)] does not, however, and throws an exception whenever an attempt is made to perform a string operation on `Nothing`."},{"pos":[1494,1502],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1506,1644],"content":"<bpt id=\"p1\">[</bpt>Introduction to Strings in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/strings/introduction-to-strings.md)</ept>","source":"[Introduction to Strings in Visual Basic](../../../../visual-basic/programming-guide/language-features/strings/introduction-to-strings.md)"}]}