<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46c28a67aa4d939a66a03f910a46bb2f10741073</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\linq\how-to-generate-the-object-model-in-visual-basic-or-csharp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f86e0fb40947bcfb0a663727b1a29cd796adba32</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b2c0f72141538a15471cc4d2700559526d0867e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Generate the Object Model in Visual Basic or C# | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Generate the Object Model in Visual Basic or C#</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, an object model in your own programming language is mapped to a relational database.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Two tools are available for automatically generating a <ph id="ph1">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph> or C# model from the metadata of an existing database.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you are using <ph id="ph1">[!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)]</ph>, you can use the <ph id="ph2">[!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)]</ph> to generate an object model.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vs_ordesigner_short](../../../../../../includes/vs-ordesigner-short-md.md)]</ph> provides a rich user interface to help you generate a <ph id="ph2">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> object model.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The SQLMetal command-line tool.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlMetal.exe (Code Generation Tool)<ept id="p1">](../../../../../../docs/framework/tools/sqlmetal-exe-code-generation-tool.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you do not have an existing database and want to create one from an object model, you can create your object model by using your code editor and <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Dynamically Create a Database<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/how-to-dynamically-create-a-database.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Documentation for the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](../../../../../../includes/vs-ordesigner-short-md.md)]</ph> provides examples of how to generate a <ph id="ph2">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph> or C# object model by using the <ph id="ph3">[!INCLUDE[vs_ordesigner_short](../../../../../../includes/vs-ordesigner-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following information provide examples of how to use the SQLMetal command-line tool.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlMetal.exe (Code Generation Tool)<ept id="p1">](../../../../../../docs/framework/tools/sqlmetal-exe-code-generation-tool.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The SQLMetal command line shown in the following example produces <ph id="ph1">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph> code as the attribute-based object model of the Northwind sample database.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Stored procedures and functions are also rendered.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The SQLMetal command line shown in the following example produces C# code as the attribute-based object model of the Northwind sample database.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Stored procedures and functions are also rendered, and table names are automatically pluralized.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Programming Guide<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/programming-guide.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>The LINQ to SQL Object Model<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/the-linq-to-sql-object-model.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Learning by Walkthroughs<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/learning-by-walkthroughs.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Customize Entity Classes by Using the Code Editor<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/how-to-customize-entity-classes-by-using-the-code-editor.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Attribute-Based Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/attribute-based-mapping.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>SqlMetal.exe (Code Generation Tool)<ept id="p1">](../../../../../../docs/framework/tools/sqlmetal-exe-code-generation-tool.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>External Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/external-mapping.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Downloading Sample Databases<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/downloading-sample-databases.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Creating the Object Model<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/creating-the-object-model.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>