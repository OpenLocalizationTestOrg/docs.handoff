{"content":"---\ntitle: \"BackgroundWorker Component\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"BackgroundWorker component\"\n  - \"background tasks\"\n  - \"Asynchronous Pattern\"\n  - \"forms [Windows Forms], multithreading\"\n  - \"components [Windows Forms], asynchronous\"\n  - \"forms [Windows Forms], background operations\"\n  - \"threading [Windows Forms], background operations\"\n  - \"background operations\"\nms.assetid: bef7b0ab-ce57-475a-a2d6-fb8a702a9417\n---\n# BackgroundWorker Component\nThe `BackgroundWorker` component enables your form or control to run an operation asynchronously.  \n  \n## In This Section  \n [BackgroundWorker Component Overview](backgroundworker-component-overview.md)  \n Describes the `BackgroundWorker` component, which gives you the ability to execute time-consuming operations asynchronously (\"in the background\"), on a thread different from your application's main UI thread.  \n  \n [Walkthrough: Running an Operation in the Background](walkthrough-running-an-operation-in-the-background.md)  \n Demonstrates how to use the `BackgroundWorker` component in the designer to run a time-consuming operation on a separate thread.  \n  \n [How to: Run an Operation in the Background](how-to-run-an-operation-in-the-background.md)  \n Demonstrates how to use the `BackgroundWorker` component to run a time-consuming operation on a separate thread.  \n  \n [Walkthrough: Implementing a Form That Uses a Background Operation](walkthrough-implementing-a-form-that-uses-a-background-operation.md)  \n Creates an application using the designer that does mathematical computations asynchronously.  \n  \n [How to: Implement a Form That Uses a Background Operation](how-to-implement-a-form-that-uses-a-background-operation.md)  \n Creates an application that does mathematical computations asynchronously.  \n  \n [How to: Download a File in the Background](how-to-download-a-file-in-the-background.md)  \n Demonstrates how to use the `BackgroundWorker` component to download a file on a separate thread.  \n  \n## Reference  \n <xref:System.ComponentModel.BackgroundWorker>  \n Describes this class and has links to all its members.  \n  \n <xref:System.ComponentModel.RunWorkerCompletedEventArgs>  \n Describes the type that holds data for the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event.  \n  \n <xref:System.ComponentModel.ProgressChangedEventArgs>  \n Describes the type that holds data for the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.  \n  \n## Related Sections  \n [Event-based Asynchronous Pattern Overview](../../../standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)  \n Describes how the asynchronous pattern makes available the advantages of multithreaded applications while hiding many of the complex issues inherent in multithreaded design.\n","nodes":[{"pos":[4,440],"embed":true,"restype":"x-metadata","content":"title: \"BackgroundWorker Component\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"BackgroundWorker component\"\n  - \"background tasks\"\n  - \"Asynchronous Pattern\"\n  - \"forms [Windows Forms], multithreading\"\n  - \"components [Windows Forms], asynchronous\"\n  - \"forms [Windows Forms], background operations\"\n  - \"threading [Windows Forms], background operations\"\n  - \"background operations\"\nms.assetid: bef7b0ab-ce57-475a-a2d6-fb8a702a9417","nodes":[{"content":"BackgroundWorker Component","nodes":[{"pos":[0,26],"content":"BackgroundWorker Component","nodes":[{"content":"BackgroundWorker Component","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[447,473],"content":"BackgroundWorker Component","linkify":"BackgroundWorker Component","nodes":[{"content":"BackgroundWorker Component","pos":[0,26]}]},{"pos":[474,571],"content":"The <ph id=\"ph1\">`BackgroundWorker`</ph> component enables your form or control to run an operation asynchronously.","source":"The `BackgroundWorker` component enables your form or control to run an operation asynchronously."},{"pos":[580,595],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>BackgroundWorker Component Overview<ept id=\"p1\">](backgroundworker-component-overview.md)</ept>","pos":[599,676],"source":"[BackgroundWorker Component Overview](backgroundworker-component-overview.md)"},{"content":"Describes the <ph id=\"ph1\">`BackgroundWorker`</ph> component, which gives you the ability to execute time-consuming operations asynchronously (\"in the background\"), on a thread different from your application's main UI thread.","pos":[680,888],"source":"Describes the `BackgroundWorker` component, which gives you the ability to execute time-consuming operations asynchronously (\"in the background\"), on a thread different from your application's main UI thread."},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Running an Operation in the Background<ept id=\"p1\">](walkthrough-running-an-operation-in-the-background.md)</ept>","pos":[895,1003],"source":"[Walkthrough: Running an Operation in the Background](walkthrough-running-an-operation-in-the-background.md)"},{"content":"Demonstrates how to use the <ph id=\"ph1\">`BackgroundWorker`</ph> component in the designer to run a time-consuming operation on a separate thread.","pos":[1007,1135],"source":"Demonstrates how to use the `BackgroundWorker` component in the designer to run a time-consuming operation on a separate thread."},{"content":"<bpt id=\"p1\">[</bpt>How to: Run an Operation in the Background<ept id=\"p1\">](how-to-run-an-operation-in-the-background.md)</ept>","pos":[1142,1232],"source":"[How to: Run an Operation in the Background](how-to-run-an-operation-in-the-background.md)"},{"content":"Demonstrates how to use the <ph id=\"ph1\">`BackgroundWorker`</ph> component to run a time-consuming operation on a separate thread.","pos":[1236,1348],"source":"Demonstrates how to use the `BackgroundWorker` component to run a time-consuming operation on a separate thread."},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Implementing a Form That Uses a Background Operation<ept id=\"p1\">](walkthrough-implementing-a-form-that-uses-a-background-operation.md)</ept>","pos":[1355,1491],"source":"[Walkthrough: Implementing a Form That Uses a Background Operation](walkthrough-implementing-a-form-that-uses-a-background-operation.md)"},{"content":"Creates an application using the designer that does mathematical computations asynchronously.","pos":[1495,1588]},{"content":"<bpt id=\"p1\">[</bpt>How to: Implement a Form That Uses a Background Operation<ept id=\"p1\">](how-to-implement-a-form-that-uses-a-background-operation.md)</ept>","pos":[1595,1715],"source":"[How to: Implement a Form That Uses a Background Operation](how-to-implement-a-form-that-uses-a-background-operation.md)"},{"content":"Creates an application that does mathematical computations asynchronously.","pos":[1719,1793]},{"content":"<bpt id=\"p1\">[</bpt>How to: Download a File in the Background<ept id=\"p1\">](how-to-download-a-file-in-the-background.md)</ept>","pos":[1800,1888],"source":"[How to: Download a File in the Background](how-to-download-a-file-in-the-background.md)"},{"content":"Demonstrates how to use the <ph id=\"ph1\">`BackgroundWorker`</ph> component to download a file on a separate thread.","pos":[1892,1989],"source":"Demonstrates how to use the `BackgroundWorker` component to download a file on a separate thread."},{"pos":[1998,2007],"content":"Reference","linkify":"Reference","nodes":[{"content":"Reference","pos":[0,9]}]},{"content":"Describes this class and has links to all its members.","pos":[2060,2114]},{"content":"Describes the type that holds data for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&gt;</ph> event.","pos":[2181,2295],"source":"Describes the type that holds data for the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event."},{"content":"Describes the type that holds data for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> event.","pos":[2359,2470],"source":"Describes the type that holds data for the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event."},{"pos":[2479,2495],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Event-based Asynchronous Pattern Overview<ept id=\"p1\">](../../../standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept>","pos":[2499,2640],"source":"[Event-based Asynchronous Pattern Overview](../../../standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)"},{"content":"Describes how the asynchronous pattern makes available the advantages of multithreaded applications while hiding many of the complex issues inherent in multithreaded design.","pos":[2644,2817]}]}