{"content":"---\ntitle: \"ToggleButton Syles and Templates | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"states [WPF], ToggleButton\"\n  - \"ToggleButton [WPF], styles and templates\"\n  - \"ControlTemplate [WPF], ToggleButton\"\n  - \"styles [WPF], ToggleButton\"\n  - \"templates [WPF], ToggleButton\"\n  - \"parts [WPF], ToggleButton\"\nms.assetid: 54f23f30-4bcb-4f09-8ce4-376a13a255a1\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# ToggleButton Syles and Templates\nThis topic describes the styles and templates for the <xref:System.Windows.Controls.Primitives.ToggleButton> control. You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance. For more information, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../../../../docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  \n  \n## ToggleButton Parts  \n The <xref:System.Windows.Controls.Primitives.ToggleButton> control does not have any named parts.  \n  \n## ToggleButton States  \n The following table lists the visual states for the <xref:System.Windows.Controls.Primitives.ToggleButton> control.  \n  \n|VisualState Name|VisualStateGroup Name|Description|  \n|-|-|-|  \n|Normal|CommonStates|The default state.|  \n|MouseOver|CommonStates|The mouse pointer is positioned over the control.|  \n|Pressed|CommonStates|The control is pressed.|  \n|Disabled|CommonStates|The control is disabled.|  \n|Focused|FocusStates|The control has focus.|  \n|Unfocused|FocusStates|The control does not have focus.|  \n|Checked|CheckStates|<xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> is `true`.|  \n|Unchecked|CheckStates|<xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> is `false`.|  \n|Indeterminate|CheckStates|<xref:System.Windows.Controls.Primitives.ToggleButton.IsThreeState%2A> is `true`, and <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> is `null`.|  \n|Valid|ValidationStates|The control uses the <xref:System.Windows.Controls.Validation> class and the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property is `false`.|  \n|InvalidFocused|ValidationStates|The <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property is `true` has the control has focus.|  \n|InvalidUnfocused|ValidationStates|The <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property is `true` has the control does not have focus.|  \n  \n> [!NOTE]\n>  If the Indeterminate visual state does not exist in your control template, then the Unchecked visual state will be used as default visual state.  \n  \n## ToggleButton ControlTemplate Example  \n The following example shows how to define a <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.Primitives.ToggleButton> control.  \n  \n [!code-xml[ControlTemplateExamples#ToggleButton](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#togglebutton)]  \n  \n The preceding example uses one or more of the following resources.  \n  \n [!code-xml[ControlTemplateExamples#Resources](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/shared.xaml#resources)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041).  \n  \n## See Also  \n <xref:System.Windows.FrameworkElement.Style%2A>   \n <xref:System.Windows.Controls.ControlTemplate>   \n [Control Styles and Templates](../../../../docs/framework/wpf/controls/control-styles-and-templates.md)   \n [Control Customization](../../../../docs/framework/wpf/controls/control-customization.md)   \n [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md)   \n [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../../../../docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)","nodes":[{"pos":[4,606],"embed":true,"restype":"x-metadata","content":"title: \"ToggleButton Syles and Templates | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"states [WPF], ToggleButton\"\n  - \"ToggleButton [WPF], styles and templates\"\n  - \"ControlTemplate [WPF], ToggleButton\"\n  - \"styles [WPF], ToggleButton\"\n  - \"templates [WPF], ToggleButton\"\n  - \"parts [WPF], ToggleButton\"\nms.assetid: 54f23f30-4bcb-4f09-8ce4-376a13a255a1\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"ToggleButton Syles and Templates | Microsoft Docs","nodes":[{"pos":[0,49],"content":"ToggleButton Syles and Templates | Microsoft Docs","nodes":[{"content":"ToggleButton Syles and Templates | Microsoft Docs","pos":[0,49]}]}],"path":["title"]}],"yml":true},{"pos":[613,645],"content":"ToggleButton Syles and Templates","linkify":"ToggleButton Syles and Templates","nodes":[{"content":"ToggleButton Syles and Templates","pos":[0,32]}]},{"content":"This topic describes the styles and templates for the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ToggleButton&gt;</ph> control.","pos":[646,763],"source":"This topic describes the styles and templates for the <xref:System.Windows.Controls.Primitives.ToggleButton> control."},{"content":"You can modify the default <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to give the control a unique appearance.","pos":[764,878],"source":" You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](../../../../docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.","pos":[879,1081],"source":" For more information, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../../../../docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)."},{"pos":[1090,1108],"content":"ToggleButton Parts","linkify":"ToggleButton Parts","nodes":[{"content":"ToggleButton Parts","pos":[0,18]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ToggleButton&gt;</ph> control does not have any named parts.","pos":[1112,1209],"source":"The <xref:System.Windows.Controls.Primitives.ToggleButton> control does not have any named parts."},{"pos":[1218,1237],"content":"ToggleButton States","linkify":"ToggleButton States","nodes":[{"content":"ToggleButton States","pos":[0,19]}]},{"content":"The following table lists the visual states for the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ToggleButton&gt;</ph> control.","pos":[1241,1356],"source":"The following table lists the visual states for the <xref:System.Windows.Controls.Primitives.ToggleButton> control."},{"content":"VisualState Name","pos":[1363,1379]},{"content":"VisualStateGroup Name","pos":[1380,1401]},{"content":"Description","pos":[1402,1413]},{"content":"Normal","pos":[1428,1434]},{"content":"CommonStates","pos":[1435,1447]},{"content":"The default state.","pos":[1448,1466]},{"content":"MouseOver","pos":[1471,1480]},{"content":"CommonStates","pos":[1481,1493]},{"content":"The mouse pointer is positioned over the control.","pos":[1494,1543]},{"content":"Pressed","pos":[1548,1555]},{"content":"CommonStates","pos":[1556,1568]},{"content":"The control is pressed.","pos":[1569,1592]},{"content":"Disabled","pos":[1597,1605]},{"content":"CommonStates","pos":[1606,1618]},{"content":"The control is disabled.","pos":[1619,1643]},{"content":"Focused","pos":[1648,1655]},{"content":"FocusStates","pos":[1656,1667]},{"content":"The control has focus.","pos":[1668,1690]},{"content":"Unfocused","pos":[1695,1704]},{"content":"FocusStates","pos":[1705,1716]},{"content":"The control does not have focus.","pos":[1717,1749]},{"content":"Checked","pos":[1754,1761]},{"content":"CheckStates","pos":[1762,1773]},{"pos":[1774,1852],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>.","source":"<xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> is `true`."},{"content":"Unchecked","pos":[1857,1866]},{"content":"CheckStates","pos":[1867,1878]},{"pos":[1879,1958],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"<xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> is `false`."},{"content":"Indeterminate","pos":[1963,1976]},{"content":"CheckStates","pos":[1977,1988]},{"pos":[1989,2153],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.IsThreeState%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<xref:System.Windows.Controls.Primitives.ToggleButton.IsThreeState%2A> is `true`, and <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> is `null`."},{"content":"Valid","pos":[2158,2163]},{"content":"ValidationStates","pos":[2164,2180]},{"pos":[2181,2366],"content":"The control uses the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Validation&gt;</ph> class and the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt;</ph> attached property is <ph id=\"ph3\">`false`</ph>.","source":"The control uses the <xref:System.Windows.Controls.Validation> class and the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property is `false`."},{"content":"InvalidFocused","pos":[2371,2385]},{"content":"ValidationStates","pos":[2386,2402]},{"pos":[2403,2540],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt;</ph> attached property is <ph id=\"ph2\">`true`</ph> has the control has focus.","source":"The <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property is `true` has the control has focus."},{"content":"InvalidUnfocused","pos":[2545,2561]},{"content":"ValidationStates","pos":[2562,2578]},{"pos":[2579,2726],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt;</ph> attached property is <ph id=\"ph2\">`true`</ph> has the control does not have focus.","source":"The <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property is `true` has the control does not have focus."},{"pos":[2735,2890],"content":"[!NOTE]\n If the Indeterminate visual state does not exist in your control template, then the Unchecked visual state will be used as default visual state.","leadings":["","> "],"nodes":[{"content":"If the Indeterminate visual state does not exist in your control template, then the Unchecked visual state will be used as default visual state.","pos":[9,153]}]},{"pos":[2899,2935],"content":"ToggleButton ControlTemplate Example","linkify":"ToggleButton ControlTemplate Example","nodes":[{"content":"ToggleButton ControlTemplate Example","pos":[0,36]}]},{"content":"The following example shows how to define a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Primitives.ToggleButton&gt;</ph> control.","pos":[2939,3101],"source":"The following example shows how to define a <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.Primitives.ToggleButton> control."},{"content":"The preceding example uses one or more of the following resources.","pos":[3281,3347]},{"pos":[3519,3634],"content":"For the complete sample, see <bpt id=\"p1\">[</bpt>Styling with ControlTemplates Sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=160041)</ept>.","source":"For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)."},{"pos":[3643,3651],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph>","pos":[3655,3702],"source":"<xref:System.Windows.FrameworkElement.Style%2A> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>","pos":[3707,3753],"source":"<xref:System.Windows.Controls.ControlTemplate> "},{"content":"<bpt id=\"p1\">[</bpt>Control Styles and Templates<ept id=\"p1\">](../../../../docs/framework/wpf/controls/control-styles-and-templates.md)</ept><ph id=\"ph1\"> </ph>","pos":[3758,3862],"source":"[Control Styles and Templates](../../../../docs/framework/wpf/controls/control-styles-and-templates.md) "},{"content":"<bpt id=\"p1\">[</bpt>Control Customization<ept id=\"p1\">](../../../../docs/framework/wpf/controls/control-customization.md)</ept><ph id=\"ph1\"> </ph>","pos":[3866,3956],"source":"[Control Customization](../../../../docs/framework/wpf/controls/control-customization.md) "},{"content":"<bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept><ph id=\"ph1\"> </ph>","pos":[3960,4052],"source":"[Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md) "},{"content":"<bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](../../../../docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>","pos":[4056,4231],"source":"[Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../../../../docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)"}]}