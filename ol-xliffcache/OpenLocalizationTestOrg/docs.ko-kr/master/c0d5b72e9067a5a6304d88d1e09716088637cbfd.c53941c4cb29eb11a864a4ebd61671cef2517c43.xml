{"content":"---\ntitle: \"How to: Access Hardware Encryption Devices\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"encryption\"\n  - \"key card\"\n  - \"cryptography\"\n  - \"hardware encryption\"\n  - \"CspParameters\"\nms.assetid: b0e734df-6eb4-4b16-b48c-6f0fe82d5f17\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# How to: Access Hardware Encryption Devices\nYou can use the <xref:System.Security.Cryptography.CspParameters> class to access hardware encryption devices. For example, you can use this class to integrate your application with a smart card, a hardware random number generator, or a hardware implementation of a particular cryptographic algorithm.  \n  \n The <xref:System.Security.Cryptography.CspParameters> class creates a cryptographic service provider (CSP) that accesses a properly installed hardware encryption device.  You can verify the availability of a CSP by inspecting the following registry key using the Registry Editor (Regedit.exe):  HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Cryptography\\Defaults\\Provider.  \n  \n### To sign data using a key card  \n  \n1.  Create a new instance of the <xref:System.Security.Cryptography.CspParameters> class, passing the integer provider type and the provider name to the constructor.  \n  \n2.  Pass the appropriate flags to the <xref:System.Security.Cryptography.CspParameters.Flags%2A> property of the newly created <xref:System.Security.Cryptography.CspParameters> object.  For example, pass the <xref:System.Security.Cryptography.CspProviderFlags.UseDefaultKeyContainer> flag.  \n  \n3.  Create a new instance of an <xref:System.Security.Cryptography.AsymmetricAlgorithm> class (for example, the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class), passing the <xref:System.Security.Cryptography.CspParameters> object to the constructor.  \n  \n4.  Sign your data using one of the `Sign` methods and verify your data using one of the `Verify` methods.  \n  \n### To generate a random number using a hardware random number generator  \n  \n1.  Create a new instance of the <xref:System.Security.Cryptography.CspParameters> class, passing the integer provider type and the provider name to the constructor.  \n  \n2.  Create a new instance of the <xref:System.Security.Cryptography.RNGCryptoServiceProvider>, passing the <xref:System.Security.Cryptography.CspParameters> object to the constructor.  \n  \n3.  Create a random value using the <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A> or <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes%2A> method.  \n  \n## Example  \n The following code example demonstrates how to sign data using a smart card.  The code example creates a <xref:System.Security.Cryptography.CspParameters> object that exposes a smart card, and then initializes an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object using the CSP.  The code example then signs and verifies some data.  \n  \n [!code-cpp[Cryptography.SmartCardCSP#1](../../../samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]\n [!code-csharp[Cryptography.SmartCardCSP#1](../../../samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]\n [!code-vb[Cryptography.SmartCardCSP#1](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  \n  \n## Compiling the Code  \n  \n-   Include the <xref:System> and <xref:System.Security.Cryptography> namespaces.  \n  \n-   You must have a smart card reader and drivers installed on your computer.  \n  \n-   You must initialize the <xref:System.Security.Cryptography.CspParameters> object using information specific to your card reader.  For more information, see the documentation of your card reader.\n","nodes":[{"pos":[4,357],"embed":true,"restype":"x-metadata","content":"title: \"How to: Access Hardware Encryption Devices\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"encryption\"\n  - \"key card\"\n  - \"cryptography\"\n  - \"hardware encryption\"\n  - \"CspParameters\"\nms.assetid: b0e734df-6eb4-4b16-b48c-6f0fe82d5f17\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"How to: Access Hardware Encryption Devices","nodes":[{"pos":[0,42],"content":"How to: Access Hardware Encryption Devices","nodes":[{"content":"How to: Access Hardware Encryption Devices","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[364,406],"content":"How to: Access Hardware Encryption Devices","linkify":"How to: Access Hardware Encryption Devices","nodes":[{"content":"How to: Access Hardware Encryption Devices","pos":[0,42]}]},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> class to access hardware encryption devices.","pos":[407,517],"source":"You can use the <xref:System.Security.Cryptography.CspParameters> class to access hardware encryption devices."},{"content":"For example, you can use this class to integrate your application with a smart card, a hardware random number generator, or a hardware implementation of a particular cryptographic algorithm.","pos":[518,708]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> class creates a cryptographic service provider (CSP) that accesses a properly installed hardware encryption device.","pos":[715,884],"source":"The <xref:System.Security.Cryptography.CspParameters> class creates a cryptographic service provider (CSP) that accesses a properly installed hardware encryption device."},{"content":"You can verify the availability of a CSP by inspecting the following registry key using the Registry Editor (Regedit.exe):  HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Cryptography\\Defaults\\Provider.","pos":[886,1079]},{"pos":[1089,1118],"content":"To sign data using a key card","linkify":"To sign data using a key card","nodes":[{"content":"To sign data using a key card","pos":[0,29]}]},{"pos":[1128,1289],"content":"Create a new instance of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> class, passing the integer provider type and the provider name to the constructor.","source":"Create a new instance of the <xref:System.Security.Cryptography.CspParameters> class, passing the integer provider type and the provider name to the constructor."},{"content":"Pass the appropriate flags to the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CspParameters.Flags%2A&gt;</ph> property of the newly created <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object.","pos":[1299,1479],"source":"Pass the appropriate flags to the <xref:System.Security.Cryptography.CspParameters.Flags%2A> property of the newly created <xref:System.Security.Cryptography.CspParameters> object."},{"content":"For example, pass the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CspProviderFlags.UseDefaultKeyContainer&gt;</ph> flag.","pos":[1481,1584],"source":"  For example, pass the <xref:System.Security.Cryptography.CspProviderFlags.UseDefaultKeyContainer> flag."},{"pos":[1594,1859],"content":"Create a new instance of an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> class (for example, the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class), passing the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object to the constructor.","source":"Create a new instance of an <xref:System.Security.Cryptography.AsymmetricAlgorithm> class (for example, the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class), passing the <xref:System.Security.Cryptography.CspParameters> object to the constructor."},{"pos":[1869,1971],"content":"Sign your data using one of the <ph id=\"ph1\">`Sign`</ph> methods and verify your data using one of the <ph id=\"ph2\">`Verify`</ph> methods.","source":"Sign your data using one of the `Sign` methods and verify your data using one of the `Verify` methods."},{"pos":[1981,2049],"content":"To generate a random number using a hardware random number generator","linkify":"To generate a random number using a hardware random number generator","nodes":[{"content":"To generate a random number using a hardware random number generator","pos":[0,68]}]},{"pos":[2059,2220],"content":"Create a new instance of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> class, passing the integer provider type and the provider name to the constructor.","source":"Create a new instance of the <xref:System.Security.Cryptography.CspParameters> class, passing the integer provider type and the provider name to the constructor."},{"pos":[2230,2409],"content":"Create a new instance of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>, passing the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object to the constructor.","source":"Create a new instance of the <xref:System.Security.Cryptography.RNGCryptoServiceProvider>, passing the <xref:System.Security.Cryptography.CspParameters> object to the constructor."},{"pos":[2419,2614],"content":"Create a random value using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes%2A&gt;</ph> method.","source":"Create a random value using the <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes%2A> or <xref:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes%2A> method."},{"pos":[2623,2630],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates how to sign data using a smart card.","pos":[2634,2710]},{"content":"The code example creates a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object that exposes a smart card, and then initializes an <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object using the CSP.","pos":[2712,2929],"source":"  The code example creates a <xref:System.Security.Cryptography.CspParameters> object that exposes a smart card, and then initializes an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object using the CSP."},{"content":"The code example then signs and verifies some data.","pos":[2931,2982]},{"pos":[3422,3440],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[3450,3527],"content":"Include the <ph id=\"ph1\">&lt;xref:System&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Cryptography&gt;</ph> namespaces.","source":"Include the <xref:System> and <xref:System.Security.Cryptography> namespaces."},{"content":"You must have a smart card reader and drivers installed on your computer.","pos":[3537,3610]},{"content":"You must initialize the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object using information specific to your card reader.","pos":[3620,3748],"source":"You must initialize the <xref:System.Security.Cryptography.CspParameters> object using information specific to your card reader."},{"content":"For more information, see the documentation of your card reader.","pos":[3750,3814]}]}