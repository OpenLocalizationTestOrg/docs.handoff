{"content":"---\ntitle: \"Entity SQL Quick Reference | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: e53dad9e-5e83-426e-abb4-be3e78e3d6dc\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Entity SQL Quick Reference\nThis topic provides a quick reference to [!INCLUDE[esql](../../../../../../includes/esql-md.md)] queries. The queries in this topic are based on the AdventureWorks Sales model.  \n  \n## Literals  \n  \n### String  \n There are Unicode and non-Unicode character string literals. Unicode strings are prepended with N. For example, `N'hello'`.  \n  \n The following is an example of a Non-Unicode string literal:  \n  \n```  \n'hello'  \n--same as  \n\"hello\"  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|hello|  \n  \n### DateTime  \n In DateTime literals, both date and time parts are mandatory. There are no default values.  \n  \n Example:  \n  \n```  \nDATETIME '2006-12-25 01:01:00.000'   \n--same as  \nDATETIME '2006-12-25 01:01'  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|12/25/2006 1:01:00 AM|  \n  \n### Integer  \n Integer literals can be of type Int32 (123), UInt32 (123U), Int64 (123L), and UInt64 (123UL).  \n  \n Example:  \n  \n```  \n--a collection of integers  \n{1, 2, 3}  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|1|  \n|2|  \n|3|  \n  \n### Other  \n Other literals supported by [!INCLUDE[esql](../../../../../../includes/esql-md.md)] are Guid, Binary, Float/Double, Decimal, and `null`. Null literals in [!INCLUDE[esql](../../../../../../includes/esql-md.md)] are considered to be compatible with every other type in the conceptual model.  \n  \n## Type Constructors  \n  \n### ROW  \n [ROW](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md) constructs an anonymous, structurally-typed (record) value as in: `ROW(1 AS myNumber, ‘Name’ AS myName).`  \n  \n Example:  \n  \n```  \nSELECT VALUE row (product.ProductID as ProductID, product.Name   \n    as ProductName) FROM AdventureWorksEntities.Product AS product  \n```  \n  \n Output:  \n  \n|ProductID|Name|  \n|---------------|----------|  \n|1|Adjustable Race|  \n|879|All-Purpose Bike Stand|  \n|712|AWC Logo Cap|  \n|...|...|  \n  \n### MULTISET  \n [MULTISET](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md) constructs collections, such as:  \n  \n `MULTISET(1,2,2,3)` `--same as`-`{1,2,2,3}.`  \n  \n Example:  \n  \n```  \nSELECT VALUE product FROM AdventureWorksEntities.Product AS product WHERE product.ListPrice IN MultiSet (125, 300)  \n```  \n  \n Output:  \n  \n|ProductID|Name|ProductNumber|…|  \n|---------------|----------|-------------------|-------|  \n|842|Touring-Panniers, Large|PA-T100|…|  \n  \n### Object  \n [Named Type Constructor](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md) constructs (named) user-defined objects, such as `person(\"abc\", 12)`.  \n  \n Example:  \n  \n```  \nSELECT VALUE AdventureWorksModel.SalesOrderDetail (o.SalesOrderDetailID, o.CarrierTrackingNumber, o.OrderQty,   \no.ProductID, o.SpecialOfferID, o.UnitPrice, o.UnitPriceDiscount,   \no.rowguid, o.ModifiedDate) FROM AdventureWorksEntities.SalesOrderDetail   \nAS o  \n```  \n  \n Output:  \n  \n|SalesOrderDetailID|CarrierTrackingNumber|OrderQty|ProductID|...|  \n|------------------------|---------------------------|--------------|---------------|---------|  \n|1|4911-403C-98|1|776|...|  \n|2|4911-403C-98|3|777|...|  \n|...|...|...|...|...|  \n  \n## References  \n  \n### REF  \n [REF](../../../../../../docs/framework/data/adonet/ef/language-reference/ref-entity-sql.md) creates a reference to an entity type instance. For example, the following query returns references to each Order entity in the Orders entity set:  \n  \n```  \nSELECT REF(o) AS OrderID FROM Orders AS o  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|1|  \n|2|  \n|3|  \n|...|  \n  \n The following example uses the property extraction operator (.) to access a property of an entity. When the property extraction operator is used, the reference is automatically dereferenced.  \n  \n Example:  \n  \n```  \nSELECT VALUE REF(p).Name FROM   \n    AdventureWorksEntities.Product as p  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|Adjustable Race|  \n|All-Purpose Bike Stand|  \n|AWC Logo Cap|  \n|...|  \n  \n### DEREF  \n [DEREF](../../../../../../docs/framework/data/adonet/ef/language-reference/deref-entity-sql.md) dereferences a reference value and produces the result of that dereference. For example, the following query produces the Order entities for each Order in the Orders entity set: `SELECT DEREF(o2.r) FROM (SELECT REF(o) AS r FROM LOB.Orders AS o) AS o2`..  \n  \n Example:  \n  \n```  \nSELECT VALUE DEREF(REF(p)).Name FROM   \n    AdventureWorksEntities.Product as p  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|Adjustable Race|  \n|All-Purpose Bike Stand|  \n|AWC Logo Cap|  \n|...|  \n  \n### CREATEREF AND KEY  \n [CREATEREF](../../../../../../docs/framework/data/adonet/ef/language-reference/createref-entity-sql.md) creates a reference passing a key. [KEY](../../../../../../docs/framework/data/adonet/ef/language-reference/key-entity-sql.md) extracts the key portion of an expression with type reference.  \n  \n Example:  \n  \n```  \nSELECT VALUE Key(CreateRef(AdventureWorksEntities.Product, row(p.ProductID)))   \n    FROM AdventureWorksEntities.Product as p  \n```  \n  \n Output:  \n  \n|ProductID|  \n|---------------|  \n|980|  \n|365|  \n|771|  \n|...|  \n  \n## Functions  \n  \n### Canonical  \n The namespace for [canonical functions](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md) is Edm, as in `Edm.Length(\"string\")`. You do not have to specify the namespace unless another namespace is imported that contains a function with the same name as a canonical function. If two namespaces have the same function, the user should specific the full name.  \n  \n Example:  \n  \n```  \nSELECT Length(c. FirstName) As NameLen FROM   \n    AdventureWorksEntities.Contact AS c   \n    WHERE c.ContactID BETWEEN 10 AND 12  \n```  \n  \n Output:  \n  \n|NameLen|  \n|-------------|  \n|6|  \n|6|  \n|5|  \n  \n### Microsoft Provider-Specific  \n [Microsoft provider-specific functions](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md) are in the `SqlServer` namespace.  \n  \n Example:  \n  \n```  \nSELECT SqlServer.LEN(c.EmailAddress) As EmailLen FROM   \n    AdventureWorksEntities.Contact AS c WHERE   \n    c.ContactID BETWEEN 10 AND 12  \n```  \n  \n Output:  \n  \n|EmailLen|  \n|--------------|  \n|27|  \n|27|  \n|26|  \n  \n## Namespaces  \n [USING](../../../../../../docs/framework/data/adonet/ef/language-reference/using-entity-sql.md) specifies namespaces used in a query expression.  \n  \n Example:  \n  \n```  \nusing SqlServer; LOWER('AA');  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|aa|  \n  \n## Paging  \n Paging can be expressed by declaring a [SKIP](../../../../../../docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) and [LIMIT](../../../../../../docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) sub-clauses to the [ORDER BY](../../../../../../docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause.  \n  \n Example:  \n  \n```  \nSELECT c.ContactID as ID, c.LastName as Name FROM   \n    AdventureWorks.Contact AS c ORDER BY c.ContactID SKIP 9 LIMIT 3;  \n```  \n  \n Output:  \n  \n|ID|Name|  \n|--------|----------|  \n|10|Adina|  \n|11|Agcaoili|  \n|12|Aguilar|  \n  \n## Grouping  \n [GROUPING BY](../../../../../../docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) specifies groups into which objects returned by a query ([SELECT](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)) expression are to be placed.  \n  \n Example:  \n  \n```  \nSELECT VALUE name FROM AdventureWorksEntities.Product as P   \n    GROUP BY P.Name HAVING MAX(P.ListPrice) > 5  \n```  \n  \n Output:  \n  \n|name|  \n|----------|  \n|LL Mountain Seat Assembly|  \n|ML Mountain Seat Assembly|  \n|HL Mountain Seat Assembly|  \n|...|  \n  \n## Navigation  \n The relationship navigation operator allows you to navigate over the relationship from one entity (from end) to another (to end). [NAVIGATE](../../../../../../docs/framework/data/adonet/ef/language-reference/navigate-entity-sql.md) takes the relationship type qualified as \\<namespace>.\\<relationship type name>. Navigate returns Ref\\<T> if the cardinality of the to end is 1. If the cardinality of the to end is n, the Collection<Ref\\<T>> will be returned.  \n  \n Example:  \n  \n```  \nSELECT a.AddressID, (SELECT VALUE DEREF(v) FROM   \n    NAVIGATE(a, AdventureWorksModel.FK_SalesOrderHeader_Address_BillToAddressID) AS v)   \n    FROM AdventureWorksEntities.Address AS a  \n```  \n  \n Output:  \n  \n|AddressID|  \n|---------------|  \n|1|  \n|2|  \n|3|  \n|...|  \n  \n## SELECT VALUE AND SELECT  \n  \n### SELECT VALUE  \n [!INCLUDE[esql](../../../../../../includes/esql-md.md)] provides the SELECT VALUE clause to skip the implicit row construction. Only one item can be specified in a SELECT VALUE clause. When such a clause is used, no row wrapper is constructed around the items in the SELECT clause, and a collection of the desired shape can be produced, for example: `SELECT VALUE a`.  \n  \n Example:  \n  \n```  \nSELECT VALUE p.Name FROM AdventureWorksEntities.Product as p  \n```  \n  \n Output:  \n  \n|Name|  \n|----------|  \n|Adjustable Race|  \n|All-Purpose Bike Stand|  \n|AWC Logo Cap|  \n|...|  \n  \n### SELECT  \n [!INCLUDE[esql](../../../../../../includes/esql-md.md)] also provides the row constructor to construct arbitrary rows. SELECT takes one or more elements in the projection and results in a data record with fields, for example: `SELECT a, b, c`.  \n  \n Example:  \n  \n SELECT p.Name, p.ProductID FROM AdventureWorksEntities.Product as p Output:  \n  \n|Name|ProductID|  \n|----------|---------------|  \n|Adjustable Race|1|  \n|All-Purpose Bike Stand|879|  \n|AWC Logo Cap|712|  \n|...|...|  \n  \n## CASE EXPRESSION  \n The [case expression](../../../../../../docs/framework/data/adonet/ef/language-reference/case-entity-sql.md) evaluates a set of Boolean expressions to determine the result.  \n  \n Example:  \n  \n```  \nCASE WHEN AVG({25,12,11}) < 100 THEN TRUE ELSE FALSE END  \n```  \n  \n Output:  \n  \n|Value|  \n|-----------|  \n|TRUE|  \n  \n## See Also  \n [Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)   \n [Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)","nodes":[{"pos":[4,401],"embed":true,"restype":"x-metadata","content":"title: \"Entity SQL Quick Reference | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: e53dad9e-5e83-426e-abb4-be3e78e3d6dc\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"Entity SQL Quick Reference | Microsoft Docs","nodes":[{"pos":[0,43],"content":"Entity SQL Quick Reference | Microsoft Docs","nodes":[{"content":"Entity SQL Quick Reference | Microsoft Docs","pos":[0,43]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[408,434],"content":"Entity SQL Quick Reference","linkify":"Entity SQL Quick Reference","nodes":[{"content":"Entity SQL Quick Reference","pos":[0,26]}]},{"content":"This topic provides a quick reference to <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> queries.","pos":[435,540],"source":"This topic provides a quick reference to [!INCLUDE[esql](../../../../../../includes/esql-md.md)] queries."},{"content":"The queries in this topic are based on the AdventureWorks Sales model.","pos":[541,611]},{"pos":[620,628],"content":"Literals","linkify":"Literals","nodes":[{"content":"Literals","pos":[0,8]}]},{"pos":[638,644],"content":"String","linkify":"String","nodes":[{"content":"String","pos":[0,6]}]},{"content":"There are Unicode and non-Unicode character string literals.","pos":[648,708]},{"content":"Unicode strings are prepended with N. For example, <ph id=\"ph1\">`N'hello'`</ph>.","pos":[709,771],"source":" Unicode strings are prepended with N. For example, `N'hello'`."},{"content":"The following is an example of a Non-Unicode string literal:","pos":[778,838]},{"content":"Output:","pos":[892,899]},{"content":"Value","pos":[906,911]},{"content":"hello","pos":[932,937]},{"pos":[948,956],"content":"DateTime","linkify":"DateTime","nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":"In DateTime literals, both date and time parts are mandatory.","pos":[960,1021]},{"content":"There are no default values.","pos":[1022,1050]},{"content":"Example:","pos":[1057,1065]},{"content":"Output:","pos":[1167,1174]},{"content":"Value","pos":[1181,1186]},{"content":"12/25/2006 1:01:00 AM","pos":[1207,1228]},{"pos":[1239,1246],"content":"Integer","linkify":"Integer","nodes":[{"content":"Integer","pos":[0,7]}]},{"content":"Integer literals can be of type Int32 (123), UInt32 (123U), Int64 (123L), and UInt64 (123UL).","pos":[1250,1343]},{"content":"Example:","pos":[1350,1358]},{"content":"Output:","pos":[1421,1428]},{"content":"Value","pos":[1435,1440]},{"content":"1","pos":[1461,1462]},{"content":"2","pos":[1467,1468]},{"content":"3","pos":[1473,1474]},{"pos":[1485,1490],"content":"Other","linkify":"Other","nodes":[{"content":"Other","pos":[0,5]}]},{"content":"Other literals supported by <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> are Guid, Binary, Float/Double, Decimal, and <ph id=\"ph2\">`null`</ph>.","pos":[1494,1630],"source":"Other literals supported by [!INCLUDE[esql](../../../../../../includes/esql-md.md)] are Guid, Binary, Float/Double, Decimal, and `null`."},{"content":"Null literals in <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> are considered to be compatible with every other type in the conceptual model.","pos":[1631,1782],"source":" Null literals in [!INCLUDE[esql](../../../../../../includes/esql-md.md)] are considered to be compatible with every other type in the conceptual model."},{"pos":[1791,1808],"content":"Type Constructors","linkify":"Type Constructors","nodes":[{"content":"Type Constructors","pos":[0,17]}]},{"pos":[1818,1821],"content":"ROW","linkify":"ROW","nodes":[{"content":"ROW","pos":[0,3]}]},{"pos":[1825,2022],"content":"<bpt id=\"p1\">[</bpt>ROW<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md)</ept> constructs an anonymous, structurally-typed (record) value as in: <ph id=\"ph1\">`ROW(1 AS myNumber, ‘Name’ AS myName).`</ph>","source":"[ROW](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md) constructs an anonymous, structurally-typed (record) value as in: `ROW(1 AS myNumber, ‘Name’ AS myName).`"},{"content":"Example:","pos":[2029,2037]},{"content":"Output:","pos":[2194,2201]},{"content":"ProductID","pos":[2208,2217]},{"content":"Name","pos":[2218,2222]},{"content":"1","pos":[2258,2259]},{"content":"Adjustable Race","pos":[2260,2275]},{"content":"879","pos":[2280,2283]},{"content":"All-Purpose Bike Stand","pos":[2284,2306]},{"content":"712","pos":[2311,2314]},{"content":"AWC Logo Cap","pos":[2315,2327]},{"content":"...","pos":[2332,2335]},{"content":"...","pos":[2336,2339]},{"pos":[2350,2358],"content":"MULTISET","linkify":"MULTISET","nodes":[{"content":"MULTISET","pos":[0,8]}]},{"pos":[2362,2496],"content":"<bpt id=\"p1\">[</bpt>MULTISET<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md)</ept> constructs collections, such as:","source":"[MULTISET](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md) constructs collections, such as:"},{"pos":[2503,2547],"content":"<ph id=\"ph1\">`MULTISET(1,2,2,3)`</ph> <ph id=\"ph2\">`--same as`</ph><ph id=\"ph3\">-</ph><ph id=\"ph4\">`{1,2,2,3}.`</ph>","source":"`MULTISET(1,2,2,3)` `--same as`-`{1,2,2,3}.`"},{"content":"Example:","pos":[2554,2562]},{"content":"Output:","pos":[2701,2708]},{"content":"ProductID","pos":[2715,2724]},{"content":"Name","pos":[2725,2729]},{"content":"ProductNumber","pos":[2730,2743]},{"content":"…","pos":[2744,2745]},{"content":"842","pos":[2809,2812]},{"content":"Touring-Panniers, Large","pos":[2813,2836]},{"content":"PA-T100","pos":[2837,2844]},{"content":"…","pos":[2845,2846]},{"pos":[2857,2863],"content":"Object","linkify":"Object","nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[2867,3066],"content":"<bpt id=\"p1\">[</bpt>Named Type Constructor<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md)</ept> constructs (named) user-defined objects, such as <ph id=\"ph1\">`person(\"abc\", 12)`</ph>.","source":"[Named Type Constructor](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md) constructs (named) user-defined objects, such as `person(\"abc\", 12)`."},{"content":"Example:","pos":[3073,3081]},{"content":"Output:","pos":[3366,3373]},{"content":"SalesOrderDetailID","pos":[3380,3398]},{"content":"CarrierTrackingNumber","pos":[3399,3420]},{"content":"OrderQty","pos":[3421,3429]},{"content":"ProductID","pos":[3430,3439]},{"content":"...","pos":[3440,3443]},{"content":"1","pos":[3546,3547]},{"content":"4911-403C-98","pos":[3548,3560]},{"content":"1","pos":[3561,3562]},{"content":"776","pos":[3563,3566]},{"content":"...","pos":[3567,3570]},{"content":"2","pos":[3575,3576]},{"content":"4911-403C-98","pos":[3577,3589]},{"content":"3","pos":[3590,3591]},{"content":"777","pos":[3592,3595]},{"content":"...","pos":[3596,3599]},{"content":"...","pos":[3604,3607]},{"content":"...","pos":[3608,3611]},{"content":"...","pos":[3612,3615]},{"content":"...","pos":[3616,3619]},{"content":"...","pos":[3620,3623]},{"pos":[3633,3643],"content":"References","linkify":"References","nodes":[{"content":"References","pos":[0,10]}]},{"pos":[3653,3656],"content":"REF","linkify":"REF","nodes":[{"content":"REF","pos":[0,3]}]},{"content":"<bpt id=\"p1\">[</bpt>REF<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/ref-entity-sql.md)</ept> creates a reference to an entity type instance.","pos":[3660,3799],"source":"[REF](../../../../../../docs/framework/data/adonet/ef/language-reference/ref-entity-sql.md) creates a reference to an entity type instance."},{"content":"For example, the following query returns references to each Order entity in the Orders entity set:","pos":[3800,3898]},{"content":"Output:","pos":[3964,3971]},{"content":"Value","pos":[3978,3983]},{"content":"1","pos":[4004,4005]},{"content":"2","pos":[4010,4011]},{"content":"3","pos":[4016,4017]},{"content":"...","pos":[4022,4025]},{"content":"The following example uses the property extraction operator (.) to access a property of an entity.","pos":[4033,4131]},{"content":"When the property extraction operator is used, the reference is automatically dereferenced.","pos":[4132,4223]},{"content":"Example:","pos":[4230,4238]},{"content":"Output:","pos":[4335,4342]},{"content":"Value","pos":[4349,4354]},{"content":"Adjustable Race","pos":[4375,4390]},{"content":"All-Purpose Bike Stand","pos":[4395,4417]},{"content":"AWC Logo Cap","pos":[4422,4434]},{"content":"...","pos":[4439,4442]},{"pos":[4453,4458],"content":"DEREF","linkify":"DEREF","nodes":[{"content":"DEREF","pos":[0,5]}]},{"content":"<bpt id=\"p1\">[</bpt>DEREF<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/deref-entity-sql.md)</ept> dereferences a reference value and produces the result of that dereference.","pos":[4462,4633],"source":"[DEREF](../../../../../../docs/framework/data/adonet/ef/language-reference/deref-entity-sql.md) dereferences a reference value and produces the result of that dereference."},{"content":"For example, the following query produces the Order entities for each Order in the Orders entity set: <ph id=\"ph1\">`SELECT DEREF(o2.r) FROM (SELECT REF(o) AS r FROM LOB.Orders AS o) AS o2`</ph>..","pos":[4634,4811],"source":" For example, the following query produces the Order entities for each Order in the Orders entity set: `SELECT DEREF(o2.r) FROM (SELECT REF(o) AS r FROM LOB.Orders AS o) AS o2`.."},{"content":"Example:","pos":[4818,4826]},{"content":"Output:","pos":[4930,4937]},{"content":"Value","pos":[4944,4949]},{"content":"Adjustable Race","pos":[4970,4985]},{"content":"All-Purpose Bike Stand","pos":[4990,5012]},{"content":"AWC Logo Cap","pos":[5017,5029]},{"content":"...","pos":[5034,5037]},{"pos":[5048,5065],"content":"CREATEREF AND KEY","linkify":"CREATEREF AND KEY","nodes":[{"content":"CREATEREF AND KEY","pos":[0,17]}]},{"content":"<bpt id=\"p1\">[</bpt>CREATEREF<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/createref-entity-sql.md)</ept> creates a reference passing a key.","pos":[5069,5207],"source":"[CREATEREF](../../../../../../docs/framework/data/adonet/ef/language-reference/createref-entity-sql.md) creates a reference passing a key."},{"content":"<bpt id=\"p1\">[</bpt>KEY<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/key-entity-sql.md)</ept> extracts the key portion of an expression with type reference.","pos":[5208,5362],"source":"[KEY](../../../../../../docs/framework/data/adonet/ef/language-reference/key-entity-sql.md) extracts the key portion of an expression with type reference."},{"content":"Example:","pos":[5369,5377]},{"content":"Output:","pos":[5527,5534]},{"content":"ProductID","pos":[5541,5550]},{"content":"980","pos":[5575,5578]},{"content":"365","pos":[5583,5586]},{"content":"771","pos":[5591,5594]},{"content":"...","pos":[5599,5602]},{"pos":[5612,5621],"content":"Functions","linkify":"Functions","nodes":[{"content":"Functions","pos":[0,9]}]},{"pos":[5631,5640],"content":"Canonical","linkify":"Canonical","nodes":[{"content":"Canonical","pos":[0,9]}]},{"content":"The namespace for <bpt id=\"p1\">[</bpt>canonical functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md)</ept> is Edm, as in <ph id=\"ph1\">`Edm.Length(\"string\")`</ph>.","pos":[5644,5812],"source":"The namespace for [canonical functions](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md) is Edm, as in `Edm.Length(\"string\")`."},{"content":"You do not have to specify the namespace unless another namespace is imported that contains a function with the same name as a canonical function.","pos":[5813,5959]},{"content":"If two namespaces have the same function, the user should specific the full name.","pos":[5960,6041]},{"content":"Example:","pos":[6048,6056]},{"content":"Output:","pos":[6210,6217]},{"content":"NameLen","pos":[6224,6231]},{"content":"6","pos":[6254,6255]},{"content":"6","pos":[6260,6261]},{"content":"5","pos":[6266,6267]},{"pos":[6278,6305],"content":"Microsoft Provider-Specific","linkify":"Microsoft Provider-Specific","nodes":[{"content":"Microsoft Provider-Specific","pos":[0,27]}]},{"pos":[6309,6461],"content":"<bpt id=\"p1\">[</bpt>Microsoft provider-specific functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)</ept> are in the <ph id=\"ph1\">`SqlServer`</ph> namespace.","source":"[Microsoft provider-specific functions](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md) are in the `SqlServer` namespace."},{"content":"Example:","pos":[6468,6476]},{"content":"Output:","pos":[6640,6647]},{"content":"EmailLen","pos":[6654,6662]},{"content":"27","pos":[6686,6688]},{"content":"27","pos":[6693,6695]},{"content":"26","pos":[6700,6702]},{"pos":[6712,6722],"content":"Namespaces","linkify":"Namespaces","nodes":[{"content":"Namespaces","pos":[0,10]}]},{"pos":[6726,6870],"content":"<bpt id=\"p1\">[</bpt>USING<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/using-entity-sql.md)</ept> specifies namespaces used in a query expression.","source":"[USING](../../../../../../docs/framework/data/adonet/ef/language-reference/using-entity-sql.md) specifies namespaces used in a query expression."},{"content":"Example:","pos":[6877,6885]},{"content":"Output:","pos":[6939,6946]},{"content":"Value","pos":[6953,6958]},{"content":"aa","pos":[6979,6981]},{"pos":[6991,6997],"content":"Paging","linkify":"Paging","nodes":[{"content":"Paging","pos":[0,6]}]},{"pos":[7001,7362],"content":"Paging can be expressed by declaring a <bpt id=\"p1\">[</bpt>SKIP<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md)</ept> and <bpt id=\"p2\">[</bpt>LIMIT<ept id=\"p2\">](../../../../../../docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)</ept> sub-clauses to the <bpt id=\"p3\">[</bpt>ORDER BY<ept id=\"p3\">](../../../../../../docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)</ept> clause.","source":"Paging can be expressed by declaring a [SKIP](../../../../../../docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) and [LIMIT](../../../../../../docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) sub-clauses to the [ORDER BY](../../../../../../docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause."},{"content":"Example:","pos":[7369,7377]},{"content":"Output:","pos":[7523,7530]},{"content":"ID","pos":[7537,7539]},{"content":"Name","pos":[7540,7544]},{"content":"10","pos":[7573,7575]},{"content":"Adina","pos":[7576,7581]},{"content":"11","pos":[7586,7588]},{"content":"Agcaoili","pos":[7589,7597]},{"content":"12","pos":[7602,7604]},{"content":"Aguilar","pos":[7605,7612]},{"pos":[7622,7630],"content":"Grouping","linkify":"Grouping","nodes":[{"content":"Grouping","pos":[0,8]}]},{"pos":[7634,7923],"content":"<bpt id=\"p1\">[</bpt>GROUPING BY<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md)</ept> specifies groups into which objects returned by a query (<bpt id=\"p2\">[</bpt>SELECT<ept id=\"p2\">](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept>) expression are to be placed.","source":"[GROUPING BY](../../../../../../docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) specifies groups into which objects returned by a query ([SELECT](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)) expression are to be placed."},{"content":"Example:","pos":[7930,7938]},{"content":"Output:","pos":[8072,8079]},{"content":"name","pos":[8086,8090]},{"content":"LL Mountain Seat Assembly","pos":[8110,8135]},{"content":"ML Mountain Seat Assembly","pos":[8140,8165]},{"content":"HL Mountain Seat Assembly","pos":[8170,8195]},{"content":"...","pos":[8200,8203]},{"pos":[8213,8223],"content":"Navigation","linkify":"Navigation","nodes":[{"content":"Navigation","pos":[0,10]}]},{"content":"The relationship navigation operator allows you to navigate over the relationship from one entity (from end) to another (to end).","pos":[8227,8356]},{"content":"<bpt id=\"p1\">[</bpt>NAVIGATE<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/navigate-entity-sql.md)</ept> takes the relationship type qualified as <ph id=\"ph1\">\\&lt;</ph>namespace&gt;.<ph id=\"ph2\">\\&lt;</ph>relationship type name&gt;.","pos":[8357,8539],"source":"[NAVIGATE](../../../../../../docs/framework/data/adonet/ef/language-reference/navigate-entity-sql.md) takes the relationship type qualified as \\<namespace>.\\<relationship type name>."},{"content":"Navigate returns Ref<ph id=\"ph1\">\\&lt;</ph>T&gt; if the cardinality of the to end is 1.","pos":[8540,8603],"source":" Navigate returns Ref\\<T> if the cardinality of the to end is 1."},{"content":"If the cardinality of the to end is n, the Collection&lt;Ref<ph id=\"ph1\">\\&lt;</ph>T&gt;&gt; will be returned.","pos":[8604,8684],"source":" If the cardinality of the to end is n, the Collection<Ref\\<T>> will be returned."},{"content":"Example:","pos":[8691,8699]},{"content":"Output:","pos":[8909,8916]},{"content":"AddressID","pos":[8923,8932]},{"content":"1","pos":[8957,8958]},{"content":"2","pos":[8963,8964]},{"content":"3","pos":[8969,8970]},{"content":"...","pos":[8975,8978]},{"pos":[8988,9011],"content":"SELECT VALUE AND SELECT","linkify":"SELECT VALUE AND SELECT","nodes":[{"content":"SELECT VALUE AND SELECT","pos":[0,23]}]},{"pos":[9021,9033],"content":"SELECT VALUE","linkify":"SELECT VALUE","nodes":[{"content":"SELECT VALUE","pos":[0,12]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> provides the SELECT VALUE clause to skip the implicit row construction.","pos":[9037,9164],"source":"[!INCLUDE[esql](../../../../../../includes/esql-md.md)] provides the SELECT VALUE clause to skip the implicit row construction."},{"content":"Only one item can be specified in a SELECT VALUE clause.","pos":[9165,9221]},{"content":"When such a clause is used, no row wrapper is constructed around the items in the SELECT clause, and a collection of the desired shape can be produced, for example: <ph id=\"ph1\">`SELECT VALUE a`</ph>.","pos":[9222,9404],"source":" When such a clause is used, no row wrapper is constructed around the items in the SELECT clause, and a collection of the desired shape can be produced, for example: `SELECT VALUE a`."},{"content":"Example:","pos":[9411,9419]},{"content":"Output:","pos":[9504,9511]},{"content":"Name","pos":[9518,9522]},{"content":"Adjustable Race","pos":[9542,9557]},{"content":"All-Purpose Bike Stand","pos":[9562,9584]},{"content":"AWC Logo Cap","pos":[9589,9601]},{"content":"...","pos":[9606,9609]},{"pos":[9620,9626],"content":"SELECT","linkify":"SELECT","nodes":[{"content":"SELECT","pos":[0,6]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> also provides the row constructor to construct arbitrary rows.","pos":[9630,9748],"source":"[!INCLUDE[esql](../../../../../../includes/esql-md.md)] also provides the row constructor to construct arbitrary rows."},{"content":"SELECT takes one or more elements in the projection and results in a data record with fields, for example: <ph id=\"ph1\">`SELECT a, b, c`</ph>.","pos":[9749,9873],"source":" SELECT takes one or more elements in the projection and results in a data record with fields, for example: `SELECT a, b, c`."},{"content":"Example:","pos":[9880,9888]},{"content":"SELECT p.Name, p.ProductID FROM AdventureWorksEntities.Product as p Output:","pos":[9895,9970]},{"content":"Name","pos":[9977,9981]},{"content":"ProductID","pos":[9982,9991]},{"content":"Adjustable Race","pos":[10027,10042]},{"content":"1","pos":[10043,10044]},{"content":"All-Purpose Bike Stand","pos":[10049,10071]},{"content":"879","pos":[10072,10075]},{"content":"AWC Logo Cap","pos":[10080,10092]},{"content":"712","pos":[10093,10096]},{"content":"...","pos":[10101,10104]},{"content":"...","pos":[10105,10108]},{"pos":[10118,10133],"content":"CASE EXPRESSION","linkify":"CASE EXPRESSION","nodes":[{"content":"CASE EXPRESSION","pos":[0,15]}]},{"pos":[10137,10309],"content":"The <bpt id=\"p1\">[</bpt>case expression<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/case-entity-sql.md)</ept> evaluates a set of Boolean expressions to determine the result.","source":"The [case expression](../../../../../../docs/framework/data/adonet/ef/language-reference/case-entity-sql.md) evaluates a set of Boolean expressions to determine the result."},{"content":"Example:","pos":[10316,10324]},{"content":"Output:","pos":[10405,10412]},{"content":"Value","pos":[10419,10424]},{"content":"TRUE","pos":[10445,10449]},{"pos":[10459,10467],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Entity SQL Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[10471,10586],"source":"[Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md) "},{"content":"<bpt id=\"p1\">[</bpt>Entity SQL Overview<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)</ept>","pos":[10590,10702],"source":"[Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)"}]}