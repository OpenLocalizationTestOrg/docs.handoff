{"content":"---\ntitle: \"Visual Basic Limitations | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"limits\"\n  - \"limitations, Visual Basic\"\n  - \"limitations\"\n  - \"limits, Visual Basic code\"\n  - \"Visual Basic code, limitations\"\nms.assetid: cf1646b7-5d24-48c6-9616-bda8a4849d91\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Visual Basic Limitations\nEarlier versions of [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] enforced boundaries in code, such as the length of variable names, the number of variables allowed in modules, and module size. In [!INCLUDE[vbprvblong](../../../visual-basic/developing-apps/customizing-extending-my/includes/vbprvblong_md.md)], these restrictions have been relaxed, giving you greater freedom in writing and arranging your code.  \n  \n Physical limits are dependent more on run-time memory than on compile-time considerations. If you use prudent programming practices, and divide large applications into multiple classes and modules, then there is very little chance of encountering an internal [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] limitation.  \n  \n The following are some limitations that you might encounter in extreme cases:  \n  \n-   **Name Length.** There is a maximum number of characters for the name of every declared programming element. This maximum applies to an entire qualification string if the element name is qualified. See [Declared Element Names](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md).  \n  \n-   **Line Length.** There is a maximum of 65535 characters in a physical line of source code. The logical source code line can be longer if you use line continuation characters. See [How to: Break and Combine Statements in Code](../../../visual-basic/programming-guide/program-structure/how-to-break-and-combine-statements-in-code.md).  \n  \n-   **Array Dimensions.** There is a maximum number of dimensions you can declare for an array. This limits how many indexes you can use to specify an array element. See [Array Dimensions in Visual Basic](../../../visual-basic/programming-guide/language-features/arrays/array-dimensions.md).  \n  \n-   **String Length.** There is a maximum number of Unicode characters you can store in a single string. See [String Data Type](../../../visual-basic/language-reference/data-types/string-data-type.md).  \n  \n-   **Environment String Length.** There is a maximum of 32768 characters for any environment string used as a command-line argument. This is a limitation on all platforms.  \n  \n## See Also  \n [Program Structure and Code Conventions](../../../visual-basic/programming-guide/program-structure/program-structure-and-code-conventions.md)   \n [Visual Basic Naming Conventions](../../../visual-basic/programming-guide/program-structure/naming-conventions.md)","nodes":[{"pos":[12,53],"content":"Visual Basic Limitations | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Visual Basic Limitations | Microsoft Docs","pos":[0,41]}]},{"pos":[680,704],"content":"Visual Basic Limitations","linkify":"Visual Basic Limitations","nodes":[{"content":"Visual Basic Limitations","pos":[0,24]}]},{"content":"Earlier versions of <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> enforced boundaries in code, such as the length of variable names, the number of variables allowed in modules, and module size.","pos":[705,942],"source":"Earlier versions of [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] enforced boundaries in code, such as the length of variable names, the number of variables allowed in modules, and module size."},{"content":"In <ph id=\"ph1\">[!INCLUDE[vbprvblong](../../../visual-basic/developing-apps/customizing-extending-my/includes/vbprvblong_md.md)]</ph>, these restrictions have been relaxed, giving you greater freedom in writing and arranging your code.","pos":[943,1160],"source":" In [!INCLUDE[vbprvblong](../../../visual-basic/developing-apps/customizing-extending-my/includes/vbprvblong_md.md)], these restrictions have been relaxed, giving you greater freedom in writing and arranging your code."},{"content":"Physical limits are dependent more on run-time memory than on compile-time considerations.","pos":[1167,1257]},{"content":"If you use prudent programming practices, and divide large applications into multiple classes and modules, then there is very little chance of encountering an internal <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> limitation.","pos":[1258,1527],"source":" If you use prudent programming practices, and divide large applications into multiple classes and modules, then there is very little chance of encountering an internal [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] limitation."},{"content":"The following are some limitations that you might encounter in extreme cases:","pos":[1534,1611]},{"content":"<bpt id=\"p1\">**</bpt>Name Length.<ept id=\"p1\">**</ept>","pos":[1621,1637],"source":"**Name Length.**"},{"content":"There is a maximum number of characters for the name of every declared programming element.","pos":[1638,1729]},{"content":"This maximum applies to an entire qualification string if the element name is qualified.","pos":[1730,1818]},{"content":"See <bpt id=\"p1\">[</bpt>Declared Element Names<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.","pos":[1819,1951],"source":" See [Declared Element Names](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)."},{"content":"<bpt id=\"p1\">**</bpt>Line Length.<ept id=\"p1\">**</ept>","pos":[1961,1977],"source":"**Line Length.**"},{"content":"There is a maximum of 65535 characters in a physical line of source code.","pos":[1978,2051]},{"content":"The logical source code line can be longer if you use line continuation characters.","pos":[2052,2135]},{"content":"See <bpt id=\"p1\">[</bpt>How to: Break and Combine Statements in Code<ept id=\"p1\">](../../../visual-basic/programming-guide/program-structure/how-to-break-and-combine-statements-in-code.md)</ept>.","pos":[2136,2293],"source":" See [How to: Break and Combine Statements in Code](../../../visual-basic/programming-guide/program-structure/how-to-break-and-combine-statements-in-code.md)."},{"content":"<bpt id=\"p1\">**</bpt>Array Dimensions.<ept id=\"p1\">**</ept>","pos":[2303,2324],"source":"**Array Dimensions.**"},{"content":"There is a maximum number of dimensions you can declare for an array.","pos":[2325,2394]},{"content":"This limits how many indexes you can use to specify an array element.","pos":[2395,2464]},{"content":"See <bpt id=\"p1\">[</bpt>Array Dimensions in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/arrays/array-dimensions.md)</ept>.","pos":[2465,2590],"source":" See [Array Dimensions in Visual Basic](../../../visual-basic/programming-guide/language-features/arrays/array-dimensions.md)."},{"content":"<bpt id=\"p1\">**</bpt>String Length.<ept id=\"p1\">**</ept>","pos":[2600,2618],"source":"**String Length.**"},{"content":"There is a maximum number of Unicode characters you can store in a single string.","pos":[2619,2700]},{"content":"See <bpt id=\"p1\">[</bpt>String Data Type<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/string-data-type.md)</ept>.","pos":[2701,2797],"source":" See [String Data Type](../../../visual-basic/language-reference/data-types/string-data-type.md)."},{"content":"<bpt id=\"p1\">**</bpt>Environment String Length.<ept id=\"p1\">**</ept>","pos":[2807,2837],"source":"**Environment String Length.**"},{"content":"There is a maximum of 32768 characters for any environment string used as a command-line argument.","pos":[2838,2936]},{"content":"This is a limitation on all platforms.","pos":[2937,2975]},{"pos":[2984,2992],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Program Structure and Code Conventions<ept id=\"p1\">](../../../visual-basic/programming-guide/program-structure/program-structure-and-code-conventions.md)</ept><ph id=\"ph1\"> </ph>","pos":[2996,3138],"source":"[Program Structure and Code Conventions](../../../visual-basic/programming-guide/program-structure/program-structure-and-code-conventions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Visual Basic Naming Conventions<ept id=\"p1\">](../../../visual-basic/programming-guide/program-structure/naming-conventions.md)</ept>","pos":[3141,3256],"source":" [Visual Basic Naming Conventions](../../../visual-basic/programming-guide/program-structure/naming-conventions.md)"}]}