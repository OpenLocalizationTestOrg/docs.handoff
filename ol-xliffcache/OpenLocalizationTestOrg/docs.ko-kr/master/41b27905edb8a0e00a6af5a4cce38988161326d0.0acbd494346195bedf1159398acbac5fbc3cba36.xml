{"content":"---\ntitle: \"Comparison Between Properties and Indexers - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"properties [C#], vs. indexers\"\n  - \"indexers [C#], vs. properties\"\nms.assetid: 3358a89f-44a0-4a4d-bf8c-07237a90af39\n---\n# Comparison Between Properties and Indexers (C# Programming Guide)\nIndexers are like properties. Except for the differences shown in the following table, all the rules that are defined for property accessors apply to indexer accessors also.  \n  \n|Property|Indexer|  \n|--------------|-------------|  \n|Allows methods to be called as if they were public data members.|Allows elements of an internal collection of an object to be accessed by using array notation on the object itself.|  \n|Accessed through a simple name.|Accessed through an index.|  \n|Can be a static or an instance member.|Must be an instance member.|  \n|A [get](../../../csharp/language-reference/keywords/get.md) accessor of a property has no parameters.|A `get` accessor of an indexer has the same formal parameter list as the indexer.|  \n|A [set](../../../csharp/language-reference/keywords/set.md) accessor of a property contains the implicit `value` parameter.|A `set` accessor of an indexer has the same formal parameter list as the indexer, and also to the [value](../../../csharp/language-reference/keywords/value.md) parameter.|  \n|Supports shortened syntax with [Auto-Implemented Properties](../../../csharp/programming-guide/classes-and-structs/auto-implemented-properties.md).|Does not support shortened syntax.|  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Indexers](../../../csharp/programming-guide/indexers/index.md)\n- [Properties](../../../csharp/programming-guide/classes-and-structs/properties.md)\n","nodes":[{"pos":[4,261],"embed":true,"restype":"x-metadata","content":"title: \"Comparison Between Properties and Indexers - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"properties [C#], vs. indexers\"\n  - \"indexers [C#], vs. properties\"\nms.assetid: 3358a89f-44a0-4a4d-bf8c-07237a90af39","nodes":[{"content":"Comparison Between Properties and Indexers - C# Programming Guide","nodes":[{"pos":[0,65],"content":"Comparison Between Properties and Indexers - C# Programming Guide","nodes":[{"content":"Comparison Between Properties and Indexers - C# Programming Guide","pos":[0,65]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[268,333],"content":"Comparison Between Properties and Indexers (C# Programming Guide)","linkify":"Comparison Between Properties and Indexers (C# Programming Guide)","nodes":[{"content":"Comparison Between Properties and Indexers (C# Programming Guide)","pos":[0,65]}]},{"content":"Indexers are like properties.","pos":[334,363]},{"content":"Except for the differences shown in the following table, all the rules that are defined for property accessors apply to indexer accessors also.","pos":[364,507]},{"content":"Property","pos":[514,522]},{"content":"Indexer","pos":[523,530]},{"content":"Allows methods to be called as if they were public data members.","pos":[568,632]},{"content":"Allows elements of an internal collection of an object to be accessed by using array notation on the object itself.","pos":[633,748]},{"content":"Accessed through a simple name.","pos":[753,784]},{"content":"Accessed through an index.","pos":[785,811]},{"content":"Can be a static or an instance member.","pos":[816,854]},{"content":"Must be an instance member.","pos":[855,882]},{"pos":[887,988],"content":"A <bpt id=\"p1\">[</bpt>get<ept id=\"p1\">](../../../csharp/language-reference/keywords/get.md)</ept> accessor of a property has no parameters.","source":"A [get](../../../csharp/language-reference/keywords/get.md) accessor of a property has no parameters."},{"pos":[989,1070],"content":"A <ph id=\"ph1\">`get`</ph> accessor of an indexer has the same formal parameter list as the indexer.","source":"A `get` accessor of an indexer has the same formal parameter list as the indexer."},{"pos":[1075,1198],"content":"A <bpt id=\"p1\">[</bpt>set<ept id=\"p1\">](../../../csharp/language-reference/keywords/set.md)</ept> accessor of a property contains the implicit <ph id=\"ph1\">`value`</ph> parameter.","source":"A [set](../../../csharp/language-reference/keywords/set.md) accessor of a property contains the implicit `value` parameter."},{"pos":[1199,1369],"content":"A <ph id=\"ph1\">`set`</ph> accessor of an indexer has the same formal parameter list as the indexer, and also to the <bpt id=\"p1\">[</bpt>value<ept id=\"p1\">](../../../csharp/language-reference/keywords/value.md)</ept> parameter.","source":"A `set` accessor of an indexer has the same formal parameter list as the indexer, and also to the [value](../../../csharp/language-reference/keywords/value.md) parameter."},{"pos":[1374,1521],"content":"Supports shortened syntax with <bpt id=\"p1\">[</bpt>Auto-Implemented Properties<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/auto-implemented-properties.md)</ept>.","source":"Supports shortened syntax with [Auto-Implemented Properties](../../../csharp/programming-guide/classes-and-structs/auto-implemented-properties.md)."},{"content":"Does not support shortened syntax.","pos":[1522,1556]},{"pos":[1566,1574],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1578,1644],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[1647,1710],"content":"<bpt id=\"p1\">[</bpt>Indexers<ept id=\"p1\">](../../../csharp/programming-guide/indexers/index.md)</ept>","source":"[Indexers](../../../csharp/programming-guide/indexers/index.md)"},{"pos":[1713,1794],"content":"<bpt id=\"p1\">[</bpt>Properties<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/properties.md)</ept>","source":"[Properties](../../../csharp/programming-guide/classes-and-structs/properties.md)"}]}