{"content":"---\ntitle: \"Adding Existing Constraints to a DataSet | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 307d2809-208b-4cf8-b6a9-5d16f15fc16c\ncaps.latest.revision: 4\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Adding Existing Constraints to a DataSet\nThe **Fill** method of the **DataAdapter** fills a <xref:System.Data.DataSet> only with table columns and rows from a data source; though constraints are commonly set by the data source, the **Fill** method does not add this schema information to the **DataSet** by default. To populate a **DataSet** with existing primary key constraint information from a data source, you can either call the **FillSchema** method of the **DataAdapter**, or set the **MissingSchemaAction** property of the **DataAdapter** to **AddWithKey** before calling **Fill**. This will ensure that primary key constraints in the **DataSet** reflect those at the data source. Foreign key constraint information is not included and must be created explicitly, as shown in [DataTable Constraints](../../../../docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).  \n  \n Adding schema information to a **DataSet** before filling it with data ensures that primary key constraints are included with the <xref:System.Data.DataTable> objects in the **DataSet**. As a result, when additional calls to fill the **DataSet** are made, the primary key column information is used to match new rows from the data source with current rows in each **DataTable**, and current data in the tables is overwritten with data from the data source. Without the schema information, the new rows from the data source are appended to the **DataSet**, resulting in duplicate rows.  \n  \n> [!NOTE]\n>  If a column in a data source is identified as auto-incrementing, the **FillSchema** method, or the **Fill** method with a **MissingSchemaAction** of **AddWithKey**, creates a **DataColumn** with an **AutoIncrement** property set to `true`. However, you will need to set the **AutoIncrementStep** and **AutoIncrementSeed** values yourself. For more information about auto-incrementing columns, see [Creating AutoIncrement Columns](../../../../docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).  \n  \n Using **FillSchema** or setting the **MissingSchemaAction** to **AddWithKey** requires extra processing at the data source to determine primary key column information. This additional processing can hinder performance. If you know the primary key information at design time, we recommend that you explicitly specify the primary key column or columns in order to achieve optimal performance. For information about explicitly setting primary key information for a table, see [Defining Primary Keys](../../../../docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).  \n  \n The following code example shows how to add schema information to a **DataSet** using **FillSchema**.  \n  \n```vb  \nDim custDataSet As DataSet = New DataSet()  \n  \ncustAdapter.FillSchema(custDataSet, SchemaType.Source, \"Customers\")  \ncustAdapter.Fill(custDataSet, \"Customers\")  \n```  \n  \n```csharp  \nDataSet custDataSet = new DataSet();  \n  \ncustAdapter.FillSchema(custDataSet, SchemaType.Source, \"Customers\");  \ncustAdapter.Fill(custDataSet, \"Customers\");  \n```  \n  \n The following code example shows how to add schema information to a **DataSet** using the **MissingSchemaAction.AddWithKey** property of the **Fill** method.  \n  \n```vb  \nDim custDataSet As DataSet = New DataSet()  \n  \ncustAdapter.MissingSchemaAction = MissingSchemaAction.AddWithKey  \ncustAdapter.Fill(custDataSet, \"Customers\")  \n```  \n  \n```csharp  \nDataSet custDataSet = new DataSet();  \n  \ncustAdapter.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \ncustAdapter.Fill(custDataSet, \"Customers\");  \n```  \n  \n## Handling Multiple Result Sets  \n If the **DataAdapter** encounters multiple result sets returned from the **SelectCommand**, it will create multiple tables in the **DataSet**. The tables will be given a zero-based incremental default name of **Table** *N*, starting with **Table** instead of \"Table0\". If a table name is passed as an argument to the **FillSchema** method, the tables will be given a zero-based incremental name of **TableName** *N*, starting with **TableName** instead of \"TableName0\".  \n  \n> [!NOTE]\n>  If the **FillSchema** method of the **OleDbDataAdapter** object is called for a command that returns multiple result sets, only the schema information from the first result set is returned. When returning schema information for multiple result sets using the **OleDbDataAdapter**, it is recommended that you specify a **MissingSchemaAction** of **AddWithKey** and obtain the schema information when calling the **Fill** method.  \n  \n## See Also  \n [DataAdapters and DataReaders](../../../../docs/framework/data/adonet/dataadapters-and-datareaders.md)   \n [DataSets, DataTables, and DataViews](../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)   \n [Retrieving and Modifying Data in ADO.NET](../../../../docs/framework/data/adonet/retrieving-and-modifying-data.md)   \n [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)","nodes":[{"pos":[12,69],"content":"Adding Existing Constraints to a DataSet | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Adding Existing Constraints to a DataSet | Microsoft Docs","pos":[0,57]}]},{"pos":[378,418],"content":"Adding Existing Constraints to a DataSet","linkify":"Adding Existing Constraints to a DataSet","nodes":[{"content":"Adding Existing Constraints to a DataSet","pos":[0,40]}]},{"content":"The <bpt id=\"p1\">**</bpt>Fill<ept id=\"p1\">**</ept> method of the <bpt id=\"p2\">**</bpt>DataAdapter<ept id=\"p2\">**</ept> fills a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> only with table columns and rows from a data source; though constraints are commonly set by the data source, the <bpt id=\"p3\">**</bpt>Fill<ept id=\"p3\">**</ept> method does not add this schema information to the <bpt id=\"p4\">**</bpt>DataSet<ept id=\"p4\">**</ept> by default.","pos":[419,693],"source":"The **Fill** method of the **DataAdapter** fills a <xref:System.Data.DataSet> only with table columns and rows from a data source; though constraints are commonly set by the data source, the **Fill** method does not add this schema information to the **DataSet** by default."},{"content":"To populate a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> with existing primary key constraint information from a data source, you can either call the <bpt id=\"p2\">**</bpt>FillSchema<ept id=\"p2\">**</ept> method of the <bpt id=\"p3\">**</bpt>DataAdapter<ept id=\"p3\">**</ept>, or set the <bpt id=\"p4\">**</bpt>MissingSchemaAction<ept id=\"p4\">**</ept> property of the <bpt id=\"p5\">**</bpt>DataAdapter<ept id=\"p5\">**</ept> to <bpt id=\"p6\">**</bpt>AddWithKey<ept id=\"p6\">**</ept> before calling <bpt id=\"p7\">**</bpt>Fill<ept id=\"p7\">**</ept>.","pos":[694,968],"source":" To populate a **DataSet** with existing primary key constraint information from a data source, you can either call the **FillSchema** method of the **DataAdapter**, or set the **MissingSchemaAction** property of the **DataAdapter** to **AddWithKey** before calling **Fill**."},{"content":"This will ensure that primary key constraints in the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> reflect those at the data source.","pos":[969,1067],"source":" This will ensure that primary key constraints in the **DataSet** reflect those at the data source."},{"content":"Foreign key constraint information is not included and must be created explicitly, as shown in <bpt id=\"p1\">[</bpt>DataTable Constraints<ept id=\"p1\">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>.","pos":[1068,1279],"source":" Foreign key constraint information is not included and must be created explicitly, as shown in [DataTable Constraints](../../../../docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)."},{"content":"Adding schema information to a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> before filling it with data ensures that primary key constraints are included with the <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept>.","pos":[1286,1472],"source":"Adding schema information to a **DataSet** before filling it with data ensures that primary key constraints are included with the <xref:System.Data.DataTable> objects in the **DataSet**."},{"content":"As a result, when additional calls to fill the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> are made, the primary key column information is used to match new rows from the data source with current rows in each <bpt id=\"p2\">**</bpt>DataTable<ept id=\"p2\">**</ept>, and current data in the tables is overwritten with data from the data source.","pos":[1473,1742],"source":" As a result, when additional calls to fill the **DataSet** are made, the primary key column information is used to match new rows from the data source with current rows in each **DataTable**, and current data in the tables is overwritten with data from the data source."},{"content":"Without the schema information, the new rows from the data source are appended to the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept>, resulting in duplicate rows.","pos":[1743,1870],"source":" Without the schema information, the new rows from the data source are appended to the **DataSet**, resulting in duplicate rows."},{"pos":[1878,2420],"content":"[!NOTE]\n If a column in a data source is identified as auto-incrementing, the **FillSchema** method, or the **Fill** method with a **MissingSchemaAction** of **AddWithKey**, creates a **DataColumn** with an **AutoIncrement** property set to `true`. However, you will need to set the **AutoIncrementStep** and **AutoIncrementSeed** values yourself. For more information about auto-incrementing columns, see [Creating AutoIncrement Columns](../../../../docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).","leadings":["","> "],"nodes":[{"content":" If a column in a data source is identified as auto-incrementing, the **FillSchema** method, or the **Fill** method with a **MissingSchemaAction** of **AddWithKey**, creates a **DataColumn** with an **AutoIncrement** property set to `true`. However, you will need to set the **AutoIncrementStep** and **AutoIncrementSeed** values yourself. For more information about auto-incrementing columns, see [Creating AutoIncrement Columns](../../../../docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).","pos":[8,540],"nodes":[{"content":"If a column in a data source is identified as auto-incrementing, the <bpt id=\"p1\">**</bpt>FillSchema<ept id=\"p1\">**</ept> method, or the <bpt id=\"p2\">**</bpt>Fill<ept id=\"p2\">**</ept> method with a <bpt id=\"p3\">**</bpt>MissingSchemaAction<ept id=\"p3\">**</ept> of <bpt id=\"p4\">**</bpt>AddWithKey<ept id=\"p4\">**</ept>, creates a <bpt id=\"p5\">**</bpt>DataColumn<ept id=\"p5\">**</ept> with an <bpt id=\"p6\">**</bpt>AutoIncrement<ept id=\"p6\">**</ept> property set to <ph id=\"ph1\">`true`</ph>.","pos":[1,240],"source":" If a column in a data source is identified as auto-incrementing, the **FillSchema** method, or the **Fill** method with a **MissingSchemaAction** of **AddWithKey**, creates a **DataColumn** with an **AutoIncrement** property set to `true`."},{"content":"However, you will need to set the <bpt id=\"p1\">**</bpt>AutoIncrementStep<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>AutoIncrementSeed<ept id=\"p2\">**</ept> values yourself.","pos":[241,339],"source":" However, you will need to set the **AutoIncrementStep** and **AutoIncrementSeed** values yourself."},{"content":"For more information about auto-incrementing columns, see <bpt id=\"p1\">[</bpt>Creating AutoIncrement Columns<ept id=\"p1\">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)</ept>.","pos":[340,532],"source":" For more information about auto-incrementing columns, see [Creating AutoIncrement Columns](../../../../docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)."}]}]},{"content":"Using <bpt id=\"p1\">**</bpt>FillSchema<ept id=\"p1\">**</ept> or setting the <bpt id=\"p2\">**</bpt>MissingSchemaAction<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>AddWithKey<ept id=\"p3\">**</ept> requires extra processing at the data source to determine primary key column information.","pos":[2427,2594],"source":"Using **FillSchema** or setting the **MissingSchemaAction** to **AddWithKey** requires extra processing at the data source to determine primary key column information."},{"content":"This additional processing can hinder performance.","pos":[2595,2645]},{"content":"If you know the primary key information at design time, we recommend that you explicitly specify the primary key column or columns in order to achieve optimal performance.","pos":[2646,2817]},{"content":"For information about explicitly setting primary key information for a table, see <bpt id=\"p1\">[</bpt>Defining Primary Keys<ept id=\"p1\">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.","pos":[2818,3016],"source":" For information about explicitly setting primary key information for a table, see [Defining Primary Keys](../../../../docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)."},{"pos":[3023,3124],"content":"The following code example shows how to add schema information to a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> using <bpt id=\"p2\">**</bpt>FillSchema<ept id=\"p2\">**</ept>.","source":"The following code example shows how to add schema information to a **DataSet** using **FillSchema**."},{"pos":[3491,3648],"content":"The following code example shows how to add schema information to a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> using the <bpt id=\"p2\">**</bpt>MissingSchemaAction.AddWithKey<ept id=\"p2\">**</ept> property of the <bpt id=\"p3\">**</bpt>Fill<ept id=\"p3\">**</ept> method.","source":"The following code example shows how to add schema information to a **DataSet** using the **MissingSchemaAction.AddWithKey** property of the **Fill** method."},{"pos":[4011,4040],"content":"Handling Multiple Result Sets","linkify":"Handling Multiple Result Sets","nodes":[{"content":"Handling Multiple Result Sets","pos":[0,29]}]},{"content":"If the <bpt id=\"p1\">**</bpt>DataAdapter<ept id=\"p1\">**</ept> encounters multiple result sets returned from the <bpt id=\"p2\">**</bpt>SelectCommand<ept id=\"p2\">**</ept>, it will create multiple tables in the <bpt id=\"p3\">**</bpt>DataSet<ept id=\"p3\">**</ept>.","pos":[4044,4186],"source":"If the **DataAdapter** encounters multiple result sets returned from the **SelectCommand**, it will create multiple tables in the **DataSet**."},{"content":"The tables will be given a zero-based incremental default name of <bpt id=\"p1\">**</bpt>Table<ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>N<ept id=\"p2\">*</ept>, starting with <bpt id=\"p3\">**</bpt>Table<ept id=\"p3\">**</ept> instead of \"Table0\".","pos":[4187,4312],"source":" The tables will be given a zero-based incremental default name of **Table** *N*, starting with **Table** instead of \"Table0\"."},{"content":"If a table name is passed as an argument to the <bpt id=\"p1\">**</bpt>FillSchema<ept id=\"p1\">**</ept> method, the tables will be given a zero-based incremental name of <bpt id=\"p2\">**</bpt>TableName<ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>N<ept id=\"p3\">*</ept>, starting with <bpt id=\"p4\">**</bpt>TableName<ept id=\"p4\">**</ept> instead of \"TableName0\".","pos":[4313,4513],"source":" If a table name is passed as an argument to the **FillSchema** method, the tables will be given a zero-based incremental name of **TableName** *N*, starting with **TableName** instead of \"TableName0\"."},{"pos":[4521,4959],"content":"[!NOTE]\n If the **FillSchema** method of the **OleDbDataAdapter** object is called for a command that returns multiple result sets, only the schema information from the first result set is returned. When returning schema information for multiple result sets using the **OleDbDataAdapter**, it is recommended that you specify a **MissingSchemaAction** of **AddWithKey** and obtain the schema information when calling the **Fill** method.","leadings":["","> "],"nodes":[{"content":" If the **FillSchema** method of the **OleDbDataAdapter** object is called for a command that returns multiple result sets, only the schema information from the first result set is returned. When returning schema information for multiple result sets using the **OleDbDataAdapter**, it is recommended that you specify a **MissingSchemaAction** of **AddWithKey** and obtain the schema information when calling the **Fill** method.","pos":[8,436],"nodes":[{"content":"If the <bpt id=\"p1\">**</bpt>FillSchema<ept id=\"p1\">**</ept> method of the <bpt id=\"p2\">**</bpt>OleDbDataAdapter<ept id=\"p2\">**</ept> object is called for a command that returns multiple result sets, only the schema information from the first result set is returned.","pos":[1,190],"source":" If the **FillSchema** method of the **OleDbDataAdapter** object is called for a command that returns multiple result sets, only the schema information from the first result set is returned."},{"content":"When returning schema information for multiple result sets using the <bpt id=\"p1\">**</bpt>OleDbDataAdapter<ept id=\"p1\">**</ept>, it is recommended that you specify a <bpt id=\"p2\">**</bpt>MissingSchemaAction<ept id=\"p2\">**</ept> of <bpt id=\"p3\">**</bpt>AddWithKey<ept id=\"p3\">**</ept> and obtain the schema information when calling the <bpt id=\"p4\">**</bpt>Fill<ept id=\"p4\">**</ept> method.","pos":[191,428],"source":" When returning schema information for multiple result sets using the **OleDbDataAdapter**, it is recommended that you specify a **MissingSchemaAction** of **AddWithKey** and obtain the schema information when calling the **Fill** method."}]}]},{"pos":[4968,4976],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>DataAdapters and DataReaders<ept id=\"p1\">](../../../../docs/framework/data/adonet/dataadapters-and-datareaders.md)</ept><ph id=\"ph1\"> </ph>","pos":[4980,5083],"source":"[DataAdapters and DataReaders](../../../../docs/framework/data/adonet/dataadapters-and-datareaders.md) "},{"content":"<bpt id=\"p1\"> [</bpt>DataSets, DataTables, and DataViews<ept id=\"p1\">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[5086,5201],"source":" [DataSets, DataTables, and DataViews](../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Retrieving and Modifying Data in ADO.NET<ept id=\"p1\">](../../../../docs/framework/data/adonet/retrieving-and-modifying-data.md)</ept><ph id=\"ph1\"> </ph>","pos":[5204,5321],"source":" [Retrieving and Modifying Data in ADO.NET](../../../../docs/framework/data/adonet/retrieving-and-modifying-data.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept>","pos":[5324,5428],"source":" [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)"}]}