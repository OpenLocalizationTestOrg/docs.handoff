{"content":"---\ntitle: \"Events - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"classes [C#], events\"\n  - \"C# language, events\"\n  - \"events [C#]\"\nms.assetid: a8e51b22-d294-44fb-9539-0072f06c4cb3\n---\n# Events (C# Programming Guide)\nEvents enable a [class](../../../csharp/language-reference/keywords/class.md) or object to notify other classes or objects when something of interest occurs. The class that sends (or *raises*) the event is called the *publisher* and the classes that receive (or *handle*) the event are called *subscribers*.  \n  \n In a typical C# Windows Forms or Web application, you subscribe to events raised by controls such as buttons and list boxes. You can use the Visual C# integrated development environment (IDE) to browse the events that a control publishes and select the ones that you want to handle. The IDE provides an easy way to automatically add an empty event handler method and the code to subscribe to the event. For more information, see [How to: Subscribe to and Unsubscribe from Events](../../../csharp/programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md).  \n  \n## Events Overview  \n Events have the following properties:  \n  \n-   The publisher determines when an event is raised; the subscribers determine what action is taken in response to the event.  \n  \n-   An event can have multiple subscribers. A subscriber can handle multiple events from multiple publishers.  \n  \n-   Events that have no subscribers are never raised.  \n  \n-   Events are typically used to signal user actions such as button clicks or menu selections in graphical user interfaces.  \n  \n-   When an event has multiple subscribers, the event handlers are invoked synchronously when an event is raised. To invoke events asynchronously, see [Calling Synchronous Methods Asynchronously](../../../../docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  \n  \n-   In the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] class library, events are based on the <xref:System.EventHandler> delegate and the <xref:System.EventArgs> base class.  \n  \n## Related Sections  \n For more information, see:  \n  \n-   [How to: Subscribe to and Unsubscribe from Events](../../../csharp/programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md)  \n  \n-   [How to: Publish Events that Conform to .NET Framework Guidelines](../../../csharp/programming-guide/events/how-to-publish-events-that-conform-to-net-framework-guidelines.md)  \n  \n-   [How to: Raise Base Class Events in Derived Classes](../../../csharp/programming-guide/events/how-to-raise-base-class-events-in-derived-classes.md)  \n  \n-   [How to:  Implement Interface Events](../../../csharp/programming-guide/events/how-to-implement-interface-events.md)  \n  \n-   [How to: Use a Dictionary to Store Event Instances](../../../csharp/programming-guide/events/how-to-use-a-dictionary-to-store-event-instances.md)  \n  \n-   [How to: Implement Custom Event Accessors](../../../csharp/programming-guide/events/how-to-implement-custom-event-accessors.md)  \n  \n## C# Language Specification  \n\nFor more information, see [Events](~/_csharplang/spec/classes.md#events) in the [C# Language Specification](../../language-reference/language-specification/index.md). The language specification is the definitive source for C# syntax and usage.\n  \n## Featured Book Chapters  \n [Delegates, Events, and Lambda Expressions](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff518994%28v=orm.10%29) in [C# 3.0 Cookbook, Third Edition: More than 250 solutions for C# 3.0 programmers](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff518995%28v=orm.10%29)  \n  \n [Delegates and Events](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff652490%28v=orm.10%29) in [Learning C# 3.0: Master the fundamentals of C# 3.0](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff652493%28v=orm.10%29)  \n  \n## See also\n\n- <xref:System.EventHandler>\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Delegates](../../../csharp/programming-guide/delegates/index.md)\n- [Creating Event Handlers in Windows Forms](../../../../docs/framework/winforms/creating-event-handlers-in-windows-forms.md)\n","nodes":[{"pos":[4,224],"embed":true,"restype":"x-metadata","content":"title: \"Events - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"classes [C#], events\"\n  - \"C# language, events\"\n  - \"events [C#]\"\nms.assetid: a8e51b22-d294-44fb-9539-0072f06c4cb3","nodes":[{"content":"Events - C# Programming Guide","nodes":[{"pos":[0,29],"content":"Events - C# Programming Guide","nodes":[{"content":"Events - C# Programming Guide","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[231,260],"content":"Events (C# Programming Guide)","linkify":"Events (C# Programming Guide)","nodes":[{"content":"Events (C# Programming Guide)","pos":[0,29]}]},{"content":"Events enable a <bpt id=\"p1\">[</bpt>class<ept id=\"p1\">](../../../csharp/language-reference/keywords/class.md)</ept> or object to notify other classes or objects when something of interest occurs.","pos":[261,418],"source":"Events enable a [class](../../../csharp/language-reference/keywords/class.md) or object to notify other classes or objects when something of interest occurs."},{"content":"The class that sends (or <bpt id=\"p1\">*</bpt>raises<ept id=\"p1\">*</ept>) the event is called the <bpt id=\"p2\">*</bpt>publisher<ept id=\"p2\">*</ept> and the classes that receive (or <bpt id=\"p3\">*</bpt>handle<ept id=\"p3\">*</ept>) the event are called <bpt id=\"p4\">*</bpt>subscribers<ept id=\"p4\">*</ept>.","pos":[419,568],"source":" The class that sends (or *raises*) the event is called the *publisher* and the classes that receive (or *handle*) the event are called *subscribers*."},{"content":"In a typical C# Windows Forms or Web application, you subscribe to events raised by controls such as buttons and list boxes.","pos":[575,699]},{"content":"You can use the Visual C# integrated development environment (IDE) to browse the events that a control publishes and select the ones that you want to handle.","pos":[700,857]},{"content":"The IDE provides an easy way to automatically add an empty event handler method and the code to subscribe to the event.","pos":[858,977]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Subscribe to and Unsubscribe from Events<ept id=\"p1\">](../../../csharp/programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md)</ept>.","pos":[978,1148],"source":" For more information, see [How to: Subscribe to and Unsubscribe from Events](../../../csharp/programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md)."},{"pos":[1157,1172],"content":"Events Overview","linkify":"Events Overview","nodes":[{"content":"Events Overview","pos":[0,15]}]},{"content":"Events have the following properties:","pos":[1176,1213]},{"content":"The publisher determines when an event is raised; the subscribers determine what action is taken in response to the event.","pos":[1223,1345]},{"content":"An event can have multiple subscribers.","pos":[1355,1394]},{"content":"A subscriber can handle multiple events from multiple publishers.","pos":[1395,1460]},{"content":"Events that have no subscribers are never raised.","pos":[1470,1519]},{"content":"Events are typically used to signal user actions such as button clicks or menu selections in graphical user interfaces.","pos":[1529,1648]},{"content":"When an event has multiple subscribers, the event handlers are invoked synchronously when an event is raised.","pos":[1658,1767]},{"content":"To invoke events asynchronously, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](../../../../docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.","pos":[1768,1957],"source":" To invoke events asynchronously, see [Calling Synchronous Methods Asynchronously](../../../../docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)."},{"pos":[1967,2146],"content":"In the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> class library, events are based on the <ph id=\"ph2\">&lt;xref:System.EventHandler&gt;</ph> delegate and the <ph id=\"ph3\">&lt;xref:System.EventArgs&gt;</ph> base class.","source":"In the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] class library, events are based on the <xref:System.EventHandler> delegate and the <xref:System.EventArgs> base class."},{"pos":[2155,2171],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"For more information, see:","pos":[2175,2201]},{"pos":[2211,2354],"content":"<bpt id=\"p1\">[</bpt>How to: Subscribe to and Unsubscribe from Events<ept id=\"p1\">](../../../csharp/programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md)</ept>","source":"[How to: Subscribe to and Unsubscribe from Events](../../../csharp/programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md)"},{"pos":[2364,2538],"content":"<bpt id=\"p1\">[</bpt>How to: Publish Events that Conform to .NET Framework Guidelines<ept id=\"p1\">](../../../csharp/programming-guide/events/how-to-publish-events-that-conform-to-net-framework-guidelines.md)</ept>","source":"[How to: Publish Events that Conform to .NET Framework Guidelines](../../../csharp/programming-guide/events/how-to-publish-events-that-conform-to-net-framework-guidelines.md)"},{"pos":[2548,2695],"content":"<bpt id=\"p1\">[</bpt>How to: Raise Base Class Events in Derived Classes<ept id=\"p1\">](../../../csharp/programming-guide/events/how-to-raise-base-class-events-in-derived-classes.md)</ept>","source":"[How to: Raise Base Class Events in Derived Classes](../../../csharp/programming-guide/events/how-to-raise-base-class-events-in-derived-classes.md)"},{"pos":[2705,2821],"content":"<bpt id=\"p1\">[</bpt>How to:  Implement Interface Events<ept id=\"p1\">](../../../csharp/programming-guide/events/how-to-implement-interface-events.md)</ept>","source":"[How to:  Implement Interface Events](../../../csharp/programming-guide/events/how-to-implement-interface-events.md)"},{"pos":[2831,2976],"content":"<bpt id=\"p1\">[</bpt>How to: Use a Dictionary to Store Event Instances<ept id=\"p1\">](../../../csharp/programming-guide/events/how-to-use-a-dictionary-to-store-event-instances.md)</ept>","source":"[How to: Use a Dictionary to Store Event Instances](../../../csharp/programming-guide/events/how-to-use-a-dictionary-to-store-event-instances.md)"},{"pos":[2986,3113],"content":"<bpt id=\"p1\">[</bpt>How to: Implement Custom Event Accessors<ept id=\"p1\">](../../../csharp/programming-guide/events/how-to-implement-custom-event-accessors.md)</ept>","source":"[How to: Implement Custom Event Accessors](../../../csharp/programming-guide/events/how-to-implement-custom-event-accessors.md)"},{"pos":[3122,3147],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/_csharplang/spec/classes.md#events)</ept> in the <bpt id=\"p2\">[</bpt>C# Language Specification<ept id=\"p2\">](../../language-reference/language-specification/index.md)</ept>.","pos":[3151,3317],"source":"For more information, see [Events](~/_csharplang/spec/classes.md#events) in the [C# Language Specification](../../language-reference/language-specification/index.md)."},{"content":"The language specification is the definitive source for C# syntax and usage.","pos":[3318,3394]},{"pos":[3401,3423],"content":"Featured Book Chapters","linkify":"Featured Book Chapters","nodes":[{"content":"Featured Book Chapters","pos":[0,22]}]},{"pos":[3427,3756],"content":"<bpt id=\"p1\">[</bpt>Delegates, Events, and Lambda Expressions<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff518994%28v=orm.10%29)</ept> in <bpt id=\"p2\">[</bpt>C# 3.0 Cookbook, Third Edition: More than 250 solutions for C# 3.0 programmers<ept id=\"p2\">](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff518995%28v=orm.10%29)</ept>","source":"[Delegates, Events, and Lambda Expressions](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff518994%28v=orm.10%29) in [C# 3.0 Cookbook, Third Edition: More than 250 solutions for C# 3.0 programmers](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff518995%28v=orm.10%29)"},{"pos":[3763,4043],"content":"<bpt id=\"p1\">[</bpt>Delegates and Events<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff652490%28v=orm.10%29)</ept> in <bpt id=\"p2\">[</bpt>Learning C# 3.0: Master the fundamentals of C# 3.0<ept id=\"p2\">](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff652493%28v=orm.10%29)</ept>","source":"[Delegates and Events](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff652490%28v=orm.10%29) in [Learning C# 3.0: Master the fundamentals of C# 3.0](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/ff652493%28v=orm.10%29)"},{"pos":[4052,4060],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4093,4159],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[4162,4227],"content":"<bpt id=\"p1\">[</bpt>Delegates<ept id=\"p1\">](../../../csharp/programming-guide/delegates/index.md)</ept>","source":"[Delegates](../../../csharp/programming-guide/delegates/index.md)"},{"pos":[4230,4353],"content":"<bpt id=\"p1\">[</bpt>Creating Event Handlers in Windows Forms<ept id=\"p1\">](../../../../docs/framework/winforms/creating-event-handlers-in-windows-forms.md)</ept>","source":"[Creating Event Handlers in Windows Forms](../../../../docs/framework/winforms/creating-event-handlers-in-windows-forms.md)"}]}