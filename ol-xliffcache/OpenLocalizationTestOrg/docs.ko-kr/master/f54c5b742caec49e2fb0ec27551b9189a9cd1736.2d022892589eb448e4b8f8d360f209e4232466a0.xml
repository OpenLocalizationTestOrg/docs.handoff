{"content":"---\ntitle: \"How to: Wrap EAP Patterns in a Task | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"tasks, how to wrap EAP patterns\"\nms.assetid: f11ed467-af2f-4504-8a2e-299a6c36d44e\ncaps.latest.revision: 9\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# How to: Wrap EAP Patterns in a Task\nThe following example shows how to expose an arbitrary sequence of Event-Based Asynchronous Pattern (EAP) operations as one task by using a <xref:System.Threading.Tasks.TaskCompletionSource%601>. The example also shows how to use a <xref:System.Threading.CancellationToken> to invoke the built-in cancellation methods on the <xref:System.Net.WebClient> objects.  \n  \n## Example  \n [!code-csharp[FromAsync#08](../../../samples/snippets/csharp/VS_Snippets_Misc/fromasync/cs/fromasync.cs#08)]\n [!code-vb[FromAsync#08](../../../samples/snippets/visualbasic/VS_Snippets_Misc/fromasync/vb/module1.vb#08)]  \n  \n## See Also  \n [TPL and Traditional .NET Framework Asynchronous Programming](../../../docs/standard/parallel-programming/tpl-and-traditional-async-programming.md)","nodes":[{"pos":[4,408],"embed":true,"restype":"x-metadata","content":"title: \"How to: Wrap EAP Patterns in a Task | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"tasks, how to wrap EAP patterns\"\nms.assetid: f11ed467-af2f-4504-8a2e-299a6c36d44e\ncaps.latest.revision: 9\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"How to: Wrap EAP Patterns in a Task | Microsoft Docs","nodes":[{"pos":[0,52],"content":"How to: Wrap EAP Patterns in a Task | Microsoft Docs","nodes":[{"content":"How to: Wrap EAP Patterns in a Task | Microsoft Docs","pos":[0,52]}]}],"path":["title"]}],"yml":true},{"pos":[415,450],"content":"How to: Wrap EAP Patterns in a Task","linkify":"How to: Wrap EAP Patterns in a Task","nodes":[{"content":"How to: Wrap EAP Patterns in a Task","pos":[0,35]}]},{"content":"The following example shows how to expose an arbitrary sequence of Event-Based Asynchronous Pattern (EAP) operations as one task by using a <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601&gt;</ph>.","pos":[451,646],"source":"The following example shows how to expose an arbitrary sequence of Event-Based Asynchronous Pattern (EAP) operations as one task by using a <xref:System.Threading.Tasks.TaskCompletionSource%601>."},{"content":"The example also shows how to use a <ph id=\"ph1\">&lt;xref:System.Threading.CancellationToken&gt;</ph> to invoke the built-in cancellation methods on the <ph id=\"ph2\">&lt;xref:System.Net.WebClient&gt;</ph> objects.","pos":[647,812],"source":" The example also shows how to use a <xref:System.Threading.CancellationToken> to invoke the built-in cancellation methods on the <xref:System.Net.WebClient> objects."},{"pos":[821,828],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1058,1066],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[1070,1217],"content":"<bpt id=\"p1\">[</bpt>TPL and Traditional .NET Framework Asynchronous Programming<ept id=\"p1\">](../../../docs/standard/parallel-programming/tpl-and-traditional-async-programming.md)</ept>","source":"[TPL and Traditional .NET Framework Asynchronous Programming](../../../docs/standard/parallel-programming/tpl-and-traditional-async-programming.md)"}]}