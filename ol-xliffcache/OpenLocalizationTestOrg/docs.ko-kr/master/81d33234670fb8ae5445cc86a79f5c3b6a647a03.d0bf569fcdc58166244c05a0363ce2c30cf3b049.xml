{"content":"---\ntitle: \"How to: Modify Keyboard Input to a Standard Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"keyboard input [Windows Forms], modifying\"\n  - \"modifying keyboard input\"\n  - \"Windows Forms, modifying keyboard input\"\n  - \"keyboards [Windows Forms], keyboard input\"\nms.assetid: 626d3712-d866-4988-bcda-a2d5b36ec0ba\n---\n# How to: Modify Keyboard Input to a Standard Control\nWindows Forms provides the ability to consume and modify keyboard input. Consuming a key refers to handling a key within a method or event handler so that other methods and events further down the message queue do not receive the key value. Modifying a key refers to modifying the value of a key so that methods and event handlers further down the message queue receive a different key value. This topic shows how to accomplish these tasks.  \n  \n### To consume a key  \n  \n-   In a <xref:System.Windows.Forms.Control.KeyPress> event handler, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property of the <xref:System.Windows.Forms.KeyPressEventArgs> class to `true`.  \n  \n     -or-  \n  \n     In a <xref:System.Windows.Forms.Control.KeyDown> event handler, set the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property of the <xref:System.Windows.Forms.KeyEventArgs> class to `true`.  \n  \n    > [!NOTE]\n    >  Setting the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property in the <xref:System.Windows.Forms.Control.KeyDown> event handler does not prevent the <xref:System.Windows.Forms.Control.KeyPress> and <xref:System.Windows.Forms.Control.KeyUp> events from being raised for the current keystroke. Use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property for this purpose.  \n  \n     The following example is an excerpt from a `switch` statement that examines the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property of the <xref:System.Windows.Forms.KeyPressEventArgs> received by a <xref:System.Windows.Forms.Control.KeyPress> event handler. This code consumes the 'A' and 'a' character keys.  \n  \n     [!code-csharp[System.Windows.Forms.KeyBoardInput#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/CS/form1.cs#6)]\n     [!code-vb[System.Windows.Forms.KeyBoardInput#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/VB/form1.vb#6)]  \n  \n### To modify a standard character key  \n  \n-   In a <xref:System.Windows.Forms.Control.KeyPress> event handler, set the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property of the <xref:System.Windows.Forms.KeyPressEventArgs> class to the value of the new character key.  \n  \n     The following example is an excerpt from a `switch` statement that modifies 'B' to 'A' and 'b' to 'a'. Note that the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property of the <xref:System.Windows.Forms.KeyPressEventArgs> parameter is set to `false`, so that the new key value is propagated to other methods and events in the message queue.  \n  \n     [!code-csharp[System.Windows.Forms.KeyBoardInput#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/CS/form1.cs#7)]\n     [!code-vb[System.Windows.Forms.KeyBoardInput#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/VB/form1.vb#7)]  \n  \n### To modify a noncharacter key  \n  \n-   Override a <xref:System.Windows.Forms.Control> method that processes Windows messages, detect the WM_KEYDOWN or WM_SYSKEYDOWN message, and set the <xref:System.Windows.Forms.Message.WParam%2A> property of the <xref:System.Windows.Forms.Message> parameter to the <xref:System.Windows.Forms.Keys> value that represents the new noncharacter key.  \n  \n     The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method of a control to detect keys F1 through F9 and modify any F3 key press to F1. For more information on <xref:System.Windows.Forms.Control> methods that you can override to intercept keyboard messages, see [User Input in a Windows Forms Application](user-input-in-a-windows-forms-application.md) and [How Keyboard Input Works](how-keyboard-input-works.md).  \n  \n     [!code-csharp[System.Windows.Forms.KeyBoardInput#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/CS/form1.cs#12)]\n     [!code-vb[System.Windows.Forms.KeyBoardInput#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/VB/form1.vb#12)]  \n  \n## Example  \n The following code example is the complete application for the code examples in the previous sections. The application uses a custom control derived from the <xref:System.Windows.Forms.TextBox> class to consume and modify keyboard input.  \n  \n [!code-csharp[System.Windows.Forms.KeyBoardInput#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/CS/form1.cs#0)]\n [!code-vb[System.Windows.Forms.KeyBoardInput#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/VB/form1.vb#0)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Drawing and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project.  \n  \n## See also\n\n- [Keyboard Input in a Windows Forms Application](keyboard-input-in-a-windows-forms-application.md)\n- [User Input in a Windows Forms Application](user-input-in-a-windows-forms-application.md)\n- [How Keyboard Input Works](how-keyboard-input-works.md)\n","nodes":[{"pos":[4,364],"embed":true,"restype":"x-metadata","content":"title: \"How to: Modify Keyboard Input to a Standard Control\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"keyboard input [Windows Forms], modifying\"\n  - \"modifying keyboard input\"\n  - \"Windows Forms, modifying keyboard input\"\n  - \"keyboards [Windows Forms], keyboard input\"\nms.assetid: 626d3712-d866-4988-bcda-a2d5b36ec0ba","nodes":[{"content":"How to: Modify Keyboard Input to a Standard Control","nodes":[{"pos":[0,51],"content":"How to: Modify Keyboard Input to a Standard Control","nodes":[{"content":"How to: Modify Keyboard Input to a Standard Control","pos":[0,51]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[371,422],"content":"How to: Modify Keyboard Input to a Standard Control","linkify":"How to: Modify Keyboard Input to a Standard Control","nodes":[{"content":"How to: Modify Keyboard Input to a Standard Control","pos":[0,51]}]},{"content":"Windows Forms provides the ability to consume and modify keyboard input.","pos":[423,495]},{"content":"Consuming a key refers to handling a key within a method or event handler so that other methods and events further down the message queue do not receive the key value.","pos":[496,663]},{"content":"Modifying a key refers to modifying the value of a key so that methods and event handlers further down the message queue receive a different key value.","pos":[664,815]},{"content":"This topic shows how to accomplish these tasks.","pos":[816,863]},{"pos":[873,889],"content":"To consume a key","linkify":"To consume a key","nodes":[{"content":"To consume a key","pos":[0,16]}]},{"pos":[899,1107],"content":"In a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event handler, set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.KeyPressEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"In a <xref:System.Windows.Forms.Control.KeyPress> event handler, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property of the <xref:System.Windows.Forms.KeyPressEventArgs> class to `true`."},{"content":"-or-","pos":[1118,1122]},{"pos":[1133,1330],"content":"In a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event handler, set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"In a <xref:System.Windows.Forms.Control.KeyDown> event handler, set the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property of the <xref:System.Windows.Forms.KeyEventArgs> class to `true`."},{"pos":[1342,1754],"content":"[!NOTE]\nSetting the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property in the <xref:System.Windows.Forms.Control.KeyDown> event handler does not prevent the <xref:System.Windows.Forms.Control.KeyPress> and <xref:System.Windows.Forms.Control.KeyUp> events from being raised for the current keystroke. Use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property for this purpose.","leadings":["","    >  "],"nodes":[{"content":"Setting the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property in the <xref:System.Windows.Forms.Control.KeyDown> event handler does not prevent the <xref:System.Windows.Forms.Control.KeyPress> and <xref:System.Windows.Forms.Control.KeyUp> events from being raised for the current keystroke. Use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property for this purpose.","pos":[8,405],"nodes":[{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> property in the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event handler does not prevent the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> events from being raised for the current keystroke.","pos":[0,301],"source":"Setting the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property in the <xref:System.Windows.Forms.Control.KeyDown> event handler does not prevent the <xref:System.Windows.Forms.Control.KeyPress> and <xref:System.Windows.Forms.Control.KeyUp> events from being raised for the current keystroke."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt;</ph> property for this purpose.","pos":[302,397],"source":" Use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property for this purpose."}]}]},{"content":"The following example is an excerpt from a <ph id=\"ph1\">`switch`</ph> statement that examines the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.KeyPressEventArgs&gt;</ph> received by a <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event handler.","pos":[1765,2037],"source":"The following example is an excerpt from a `switch` statement that examines the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property of the <xref:System.Windows.Forms.KeyPressEventArgs> received by a <xref:System.Windows.Forms.Control.KeyPress> event handler."},{"content":"This code consumes the 'A' and 'a' character keys.","pos":[2038,2088]},{"pos":[2099,2404],"content":"[!code-csharp[System.Windows.Forms.KeyBoardInput#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/CS/form1.cs#6)]\n [!code-vb[System.Windows.Forms.KeyBoardInput#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/VB/form1.vb#6)]","leadings":["","    "],"nodes":[]},{"pos":[2414,2448],"content":"To modify a standard character key","linkify":"To modify a standard character key","nodes":[{"content":"To modify a standard character key","pos":[0,34]}]},{"pos":[2458,2694],"content":"In a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event handler, set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.KeyPressEventArgs&gt;</ph> class to the value of the new character key.","source":"In a <xref:System.Windows.Forms.Control.KeyPress> event handler, set the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property of the <xref:System.Windows.Forms.KeyPressEventArgs> class to the value of the new character key."},{"content":"The following example is an excerpt from a <ph id=\"ph1\">`switch`</ph> statement that modifies 'B' to 'A' and 'b' to 'a'.","pos":[2705,2807],"source":"The following example is an excerpt from a `switch` statement that modifies 'B' to 'A' and 'b' to 'a'."},{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.KeyPressEventArgs&gt;</ph> parameter is set to <ph id=\"ph3\">`false`</ph>, so that the new key value is propagated to other methods and events in the message queue.","pos":[2808,3059],"source":" Note that the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property of the <xref:System.Windows.Forms.KeyPressEventArgs> parameter is set to `false`, so that the new key value is propagated to other methods and events in the message queue."},{"pos":[3070,3375],"content":"[!code-csharp[System.Windows.Forms.KeyBoardInput#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/CS/form1.cs#7)]\n [!code-vb[System.Windows.Forms.KeyBoardInput#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/VB/form1.vb#7)]","leadings":["","    "],"nodes":[]},{"pos":[3385,3413],"content":"To modify a noncharacter key","linkify":"To modify a noncharacter key","nodes":[{"content":"To modify a noncharacter key","pos":[0,28]}]},{"pos":[3423,3765],"content":"Override a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> method that processes Windows messages, detect the WM_KEYDOWN or WM_SYSKEYDOWN message, and set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Message.WParam%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Message&gt;</ph> parameter to the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Keys&gt;</ph> value that represents the new noncharacter key.","source":"Override a <xref:System.Windows.Forms.Control> method that processes Windows messages, detect the WM_KEYDOWN or WM_SYSKEYDOWN message, and set the <xref:System.Windows.Forms.Message.WParam%2A> property of the <xref:System.Windows.Forms.Message> parameter to the <xref:System.Windows.Forms.Keys> value that represents the new noncharacter key."},{"content":"The following code example demonstrates how to override the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> method of a control to detect keys F1 through F9 and modify any F3 key press to F1.","pos":[3776,3976],"source":"The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method of a control to detect keys F1 through F9 and modify any F3 key press to F1."},{"content":"For more information on <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> methods that you can override to intercept keyboard messages, see <bpt id=\"p1\">[</bpt>User Input in a Windows Forms Application<ept id=\"p1\">](user-input-in-a-windows-forms-application.md)</ept> and <bpt id=\"p2\">[</bpt>How Keyboard Input Works<ept id=\"p2\">](how-keyboard-input-works.md)</ept>.","pos":[3977,4253],"source":" For more information on <xref:System.Windows.Forms.Control> methods that you can override to intercept keyboard messages, see [User Input in a Windows Forms Application](user-input-in-a-windows-forms-application.md) and [How Keyboard Input Works](how-keyboard-input-works.md)."},{"pos":[4264,4573],"content":"[!code-csharp[System.Windows.Forms.KeyBoardInput#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/CS/form1.cs#12)]\n [!code-vb[System.Windows.Forms.KeyBoardInput#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.KeyboardInput/VB/form1.vb#12)]","leadings":["","    "],"nodes":[]},{"pos":[4582,4589],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example is the complete application for the code examples in the previous sections.","pos":[4593,4695]},{"content":"The application uses a custom control derived from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class to consume and modify keyboard input.","pos":[4696,4830],"source":" The application uses a custom control derived from the <xref:System.Windows.Forms.TextBox> class to consume and modify keyboard input."},{"pos":[5147,5165],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[5169,5191]},{"content":"References to the System, System.Drawing and System.Windows.Forms assemblies.","pos":[5201,5278]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[5285,5633],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[5634,5722]},{"pos":[5731,5739],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5743,5840],"content":"<bpt id=\"p1\">[</bpt>Keyboard Input in a Windows Forms Application<ept id=\"p1\">](keyboard-input-in-a-windows-forms-application.md)</ept>","source":"[Keyboard Input in a Windows Forms Application](keyboard-input-in-a-windows-forms-application.md)"},{"pos":[5843,5932],"content":"<bpt id=\"p1\">[</bpt>User Input in a Windows Forms Application<ept id=\"p1\">](user-input-in-a-windows-forms-application.md)</ept>","source":"[User Input in a Windows Forms Application](user-input-in-a-windows-forms-application.md)"},{"pos":[5935,5990],"content":"<bpt id=\"p1\">[</bpt>How Keyboard Input Works<ept id=\"p1\">](how-keyboard-input-works.md)</ept>","source":"[How Keyboard Input Works](how-keyboard-input-works.md)"}]}