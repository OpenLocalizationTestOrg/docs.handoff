{"content":"---\ntitle: \"Null Literals and Type Inference (Entity SQL) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: edd56afb-af1b-4e7d-b210-cb8998143426\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Null Literals and Type Inference (Entity SQL)\nNull literals are compatible with any type in the [!INCLUDE[esql](../../../../../../includes/esql-md.md)] type system. However, for the type of a null literal to be inferred correctly, [!INCLUDE[esql](../../../../../../includes/esql-md.md)] imposes certain constraints on where a null literal can be used.  \n  \n## Typed Nulls  \n Typed nulls can be used anywhere. Type inference is not required for typed nulls because the type is known. For example, you can construct a null of type Int16 with the following [!INCLUDE[esql](../../../../../../includes/esql-md.md)] construct:  \n  \n `(cast(null as Int16))`  \n  \n## Free-Floating Null Literals  \n Free-floating null literals can be used in the following contexts:  \n  \n-   As an argument to a CAST or TREAT expression. This is the recommended way to produce a typed null expression.  \n  \n-   As an argument to a method or a function. Standard overload rules apply.  \n  \n-   As one of the arguments to an arithmetic expression such as +, -, or /. The other arguments cannot be null literals, otherwise type inference is not possible.  \n  \n-   As any of the arguments to a logical expression (AND, OR, or NOT). All the arguments are known to be of type Boolean.  \n  \n-   As the argument to an IS NULL or IS NOT NULL expression.  \n  \n-   As one or more of the arguments to a LIKE expression. All arguments are expected to be strings.  \n  \n-   As one or more of the arguments to a named-type constructor.  \n  \n-   As one or more of the arguments to a multiset constructor. At least one argument to the multiset constructor must be an expression that is not a null literal.  \n  \n-   As one or more of the THEN or ELSE expressions in a CASE expression. At least one of the THEN or ELSE expressions in the CASE expression must be an expression other than a null literal.  \n  \n Free-floating null literals cannot be used in other scenarios. For example,  they cannot be used as arguments to a row constructor.  \n  \n## See Also  \n [Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)","nodes":[{"pos":[12,74],"content":"Null Literals and Type Inference (Entity SQL) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Null Literals and Type Inference (Entity SQL) | Microsoft Docs","pos":[0,62]}]},{"pos":[427,472],"content":"Null Literals and Type Inference (Entity SQL)","linkify":"Null Literals and Type Inference (Entity SQL)","nodes":[{"content":"Null Literals and Type Inference (Entity SQL)","pos":[0,45]}]},{"content":"Null literals are compatible with any type in the <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> type system.","pos":[473,591],"source":"Null literals are compatible with any type in the [!INCLUDE[esql](../../../../../../includes/esql-md.md)] type system."},{"content":"However, for the type of a null literal to be inferred correctly, <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> imposes certain constraints on where a null literal can be used.","pos":[592,778],"source":" However, for the type of a null literal to be inferred correctly, [!INCLUDE[esql](../../../../../../includes/esql-md.md)] imposes certain constraints on where a null literal can be used."},{"pos":[787,798],"content":"Typed Nulls","linkify":"Typed Nulls","nodes":[{"content":"Typed Nulls","pos":[0,11]}]},{"content":"Typed nulls can be used anywhere.","pos":[802,835]},{"content":"Type inference is not required for typed nulls because the type is known.","pos":[836,909]},{"content":"For example, you can construct a null of type Int16 with the following <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> construct:","pos":[910,1047],"source":" For example, you can construct a null of type Int16 with the following [!INCLUDE[esql](../../../../../../includes/esql-md.md)] construct:"},{"pos":[1086,1113],"content":"Free-Floating Null Literals","linkify":"Free-Floating Null Literals","nodes":[{"content":"Free-Floating Null Literals","pos":[0,27]}]},{"content":"Free-floating null literals can be used in the following contexts:","pos":[1117,1183]},{"content":"As an argument to a CAST or TREAT expression.","pos":[1193,1238]},{"content":"This is the recommended way to produce a typed null expression.","pos":[1239,1302]},{"content":"As an argument to a method or a function.","pos":[1312,1353]},{"content":"Standard overload rules apply.","pos":[1354,1384]},{"content":"As one of the arguments to an arithmetic expression such as +, -, or /.","pos":[1394,1465]},{"content":"The other arguments cannot be null literals, otherwise type inference is not possible.","pos":[1466,1552]},{"content":"As any of the arguments to a logical expression (AND, OR, or NOT).","pos":[1562,1628]},{"content":"All the arguments are known to be of type Boolean.","pos":[1629,1679]},{"content":"As the argument to an IS NULL or IS NOT NULL expression.","pos":[1689,1745]},{"content":"As one or more of the arguments to a LIKE expression.","pos":[1755,1808]},{"content":"All arguments are expected to be strings.","pos":[1809,1850]},{"content":"As one or more of the arguments to a named-type constructor.","pos":[1860,1920]},{"content":"As one or more of the arguments to a multiset constructor.","pos":[1930,1988]},{"content":"At least one argument to the multiset constructor must be an expression that is not a null literal.","pos":[1989,2088]},{"content":"As one or more of the THEN or ELSE expressions in a CASE expression.","pos":[2098,2166]},{"content":"At least one of the THEN or ELSE expressions in the CASE expression must be an expression other than a null literal.","pos":[2167,2283]},{"content":"Free-floating null literals cannot be used in other scenarios.","pos":[2290,2352]},{"content":"For example,  they cannot be used as arguments to a row constructor.","pos":[2353,2421]},{"pos":[2430,2438],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2442,2554],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Overview<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)</ept>","source":"[Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)"}]}