<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2558494e73382478cae48552c8543a851594497</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\startup-time-of-wcf-client-applications-using-the-xmlserializer.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">417b51a6a4e5fe081b4fe3ee4aa524cebb5db7ff</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34237c4436c8ff83f8d5bb4a43afe3bbd7d67365</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Improve the Startup Time of WCF Client Applications using the XmlSerializer | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Improve the Startup Time of WCF Client Applications using the XmlSerializer</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Services and client applications that use data types that are serializable using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> generate and compile serialization code for those data types at runtime, which can result in slow start-up performance.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Pre-generated serialization code can only be used in client applications and not in services.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> can improve start-up performance for these applications by generating the necessary serialization code from the compiled assemblies for the application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Svcutil.exe generates serialization code for all data types used in service contracts in the compiled application assembly that can be serialized using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Service and operation contracts that use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> are marked with the <ph id="ph2">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To generate XmlSerializer serialization code</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Compile your service or client code into one or more assemblies.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Open an SDK command prompt.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>At the command prompt, launch the Svcutil.exe tool using the following format.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`assemblyPath`</ph> argument specifies the path to an assembly that contains service contract types.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Svcutil.exe generates serialization code for all data types used in service contracts in the compiled application assembly that can be serialized using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Svcutil.exe can only generate C# serialization code.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>One source code file is generated for each input assembly.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">**</bpt>/language<ept id="p1">**</ept> switch to change the language of the generated code.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To specify the path to dependent assemblies, use the <bpt id="p1">**</bpt>/reference<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Make the generated serialization code available to your application by using one of the following options:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Compile the generated serialization code into a separate assembly with the name [<bpt id="p1">*</bpt>original assembly<ept id="p1">*</ept>].XmlSerializers.dll (for example, MyApp.XmlSerializers.dll).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Your application must be able to load the assembly, which must be signed with the same key as the original assembly.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you recompile the original assembly, you must regenerate the serialization assembly.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Compile the generated serialization code into a separate assembly and use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> on the service contract that uses the <ph id="ph2">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase%2A&gt;</ph> properties to point to the compiled serialization assembly.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Compile the generated serialization code into your application assembly and add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> to the service contract that uses the <ph id="ph2">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Do not set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default serialization assembly is assumed to be the current assembly.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To generate XmlSerializer serialization code in Visual Studio</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create the WCF service and client projects in Visual Studio.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Then, add a service reference to the client project.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add an <ph id="ph1">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute&gt;</ph> to the service contract in the <bpt id="p1">*</bpt>reference.cs<ept id="p1">*</ept> file in the client app project under <bpt id="p2">**</bpt>serviceReference<ept id="p2">**</ept><ph id="ph2"> -&gt; </ph><bpt id="p3">**</bpt>reference.svcmap<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Note that you need to show all files in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> to see these files.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Build the client app.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> to create a pre-generated serializer <bpt id="p2">*</bpt>.cs<ept id="p2">*</ept> file by using the command:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The assemblyPath argument specifies the path to the WCF client assembly.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Such as:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>WCFClient.XmlSerializers.dll.cs<ept id="p1">*</ept> file will be generated.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compile the pre-generated serialization assembly.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Based on the example in the previous step, the compile command would be the following:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Make sure the generated <bpt id="p1">*</bpt>WCFClient.XmlSerializers.dll<ept id="p1">*</ept> is in the same directory as the client app, which is <bpt id="p2">*</bpt>WCFClient.exe<ept id="p2">*</ept> in this case.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Run the client app as usual.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The pre-generated serialization assembly will be used.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following command generates serialization types for <ph id="ph1">`XmlSerializer`</ph> types that any service contracts in the assembly use.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>