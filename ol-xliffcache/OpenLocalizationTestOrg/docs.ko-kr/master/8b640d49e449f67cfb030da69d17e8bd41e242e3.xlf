<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="the-linq-to-sql-object-model.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b640d49e449f67cfb030da69d17e8bd41e242e3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\sql\linq\the-linq-to-sql-object-model.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a8b1ca7c612444379d3cb44f73d7c659e12215c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f1d290ec7c69a81ff49780f1f95e403bdfd6777</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>The LINQ to SQL Object Model | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The LINQ to SQL Object Model</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, an object model expressed in the programming language of the developer is mapped to the data model of a relational database.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Operations on the data are then conducted according to the object model.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this scenario, you do not issue database commands (for example, <ph id="ph1">`INSERT`</ph>) to the database.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Instead, you change values and execute methods within your object model.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you want to query the database or send it changes, <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> translates your requests into the correct SQL commands and sends those commands to the database.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>DLinqObjectModel<ept id="p1">]</ept><bpt id="p2">(../../../../../../docs/framework/data/adonet/sql/linq/media/dlinqobjectmodel.png "</bpt>DLinqObjectModel<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The most fundamental elements in the <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> object model and their relationship to elements in the relational data model are summarized in the following table:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>LINQ to SQL Object Model</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Relational Data Model</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Entity class</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Table</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Class member</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Column</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Association</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Foreign-key relationship</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Stored Procedure or Function</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following descriptions assume that you have a basic knowledge of the relational data model and rules.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>LINQ to SQL Entity Classes and Database Tables</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, a database table is represented by an <bpt id="p1">*</bpt>entity class<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An entity class is like any other class you might create except that you annotate the class by using special information that associates the class with a database table.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You make this annotation by adding a custom attribute (<ph id="ph1">&lt;xref:System.Data.Linq.Mapping.TableAttribute&gt;</ph>) to your class declaration, as in the following example:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Only instances of classes declared as tables (that is, entity classes) can be saved to the database.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see the Table Attribute section of <bpt id="p1">[</bpt>Attribute-Based Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/attribute-based-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>LINQ to SQL Class Members and Database Columns</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In addition to associating classes with tables, you designate fields or properties to represent database columns.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For this purpose, <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> defines the <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;</ph> attribute, as in the following example:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Only fields and properties mapped to columns are persisted to or retrieved from the database.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Those not declared as columns are considered as transient parts of your application logic.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;</ph> attribute has a variety of properties that you can use to customize these members that represent columns (for example, designating a member as representing a primary key column).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see the Column Attribute section of <bpt id="p1">[</bpt>Attribute-Based Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/attribute-based-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>LINQ to SQL Associations and Database Foreign-key Relationships</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, you represent database associations (such as foreign-key to primary-key relationships) by applying the <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.AssociationAttribute&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the following segment of code, the <ph id="ph1">`Order`</ph> class contains a <ph id="ph2">`Customer`</ph> property that has an <ph id="ph3">&lt;xref:System.Data.Linq.Mapping.AssociationAttribute&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This property and its attribute provide the <ph id="ph1">`Order`</ph> class with a relationship to the <ph id="ph2">`Customer`</ph> class.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following code example shows the <ph id="ph1">`Customer`</ph> property from the <ph id="ph2">`Order`</ph> class.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see the Association Attribute section of <bpt id="p1">[</bpt>Attribute-Based Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/attribute-based-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>LINQ to SQL Methods and Database Stored Procedures</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>supports stored procedures and user-defined functions.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, you map these database-defined abstractions to client objects so that you can access them in a strongly typed manner from client code.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The method signatures resemble as closely as possible the signatures of the procedures and functions defined in the database.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can use IntelliSense to discover these methods.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A result set that is returned by a call to a mapped procedure is a strongly typed collection.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>maps stored procedures and functions to methods by using the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.FunctionAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ParameterAttribute&gt;</ph> attributes.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Methods representing stored procedures are distinguished from those representing user-defined functions by the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.FunctionAttribute.IsComposable%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If this property is set to <ph id="ph1">`false`</ph> (the default), the method represents a stored procedure.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If it is set to <ph id="ph1">`true`</ph>, the method represents a database function.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you are using <ph id="ph1">[!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)]</ph>, you can use the <ph id="ph2">[!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)]</ph> to create methods mapped to stored procedures and user-defined functions.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see the Function Attribute, Stored Procedure Attribute, and Parameter Attribute sections of <bpt id="p1">[</bpt>Attribute-Based Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/attribute-based-mapping.md)</ept> and <bpt id="p2">[</bpt>Stored Procedures<ept id="p2">](../../../../../../docs/framework/data/adonet/sql/linq/stored-procedures.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Attribute-Based Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/attribute-based-mapping.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Background Information<ept id="p1">](../../../../../../docs/framework/data/adonet/sql/linq/background-information.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>