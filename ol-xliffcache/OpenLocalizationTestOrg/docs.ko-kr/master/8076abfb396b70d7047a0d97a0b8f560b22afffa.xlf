<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8076abfb396b70d7047a0d97a0b8f560b22afffa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\discovery-binding-element-sample.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">530ec7b3a0c102073f82b68c0f0015204daa3659</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88d8ca901005924c77c5509f01227fd2f35234a5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Discovery Binding Element Sample | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Discovery Binding Element Sample</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to use the discovery client binding element to discover a service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This feature enables developers to add a discovery client channel to their existing client channel stack, making the programming model very intuitive.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When the associated channel is opened, the address of the service is resolved using discovery.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This sample consists of the following projects:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CalculatorService<ept id="p1">**</ept>: A discoverable <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CalculatorClient<ept id="p1">**</ept>: A <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> client application that uses the discovery client channel to search for and call the CalculatorService.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DynamicCalculatorClient<ept id="p1">**</ept>: A <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> client application that uses a dynamic endpoint to search for and call the CalculatorService.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CalculatorService</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This project contains a simple calculator service that implements the <ph id="ph1">`ICalculatorService`</ph> contract.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following App.config file is used to add a <ph id="ph1">`&lt;serviceDiscovery&gt;`</ph> behavior in the service behaviors as well as the discovery endpoint.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This makes the service and its endpoints discoverable.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The CalculatorService is a self-hosted service that adds one endpoint using the NetTcpBinding binding.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It also adds an <ph id="ph1">`EndpointDiscoveryBehavior`</ph> to the endpoint and specifies a scope as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CalculatorClient</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This project contains a client implementation that sends messages to the CalculatorService.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This program uses the <ph id="ph1">`CreateCustomBindingWithDiscoveryElement()`</ph> method to create a custom binding that uses the Discovery Client Channel.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>After the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> is instantiated, the developer specifies the criteria to use when searching for a service.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this case, the discovery find criterion is the <ph id="ph1">`ICalculatorService`</ph> type.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Additionally, the developer specifies a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryEndpointProvider&gt;</ph> which returns a <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryEndpoint&gt;</ph> that specifies where to look for the services.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryEndpointProvider&gt;</ph> returns a new <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryEndpoint&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Using a Custom Binding with the Discovery Client Channel<ept id="p1">](../../../../docs/framework/wcf/feature-details/using-a-custom-binding-with-the-discovery-client-channel.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In this case, the client uses the UDP multicast mechanism defined by the Discovery protocol to search for services on the local subnet.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The remainder of the method creates a custom binding and inserts the Discovery binding element at the top of the stack.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> must be placed on the top of the binding stack.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Any <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> on top of <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClientBindingElement&gt;</ph> must make sure that the channel factory or channel it creates does not use the <ph id="ph3">`EndpointAddress`</ph> or <ph id="ph4">`Via`</ph> properties, because the actual address is found only at the Discovery client channel.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Next, the <ph id="ph1">`CalculatorClient`</ph> can be instantiated by passing in this custom binding as well as an endpoint address.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When using the Discovery Client Channel, the constant endpoint address specified previously is passed in.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Now at runtime, the Discovery Client Channel finds the service specified by the find criteria and connects to it.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For the service and the client to establish a connection, they must also have the same underlying binding stack.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Open the solution in <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Build the solution.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Run the service application and each of the client applications.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Observe that the client was able to find the service without knowing its address.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>