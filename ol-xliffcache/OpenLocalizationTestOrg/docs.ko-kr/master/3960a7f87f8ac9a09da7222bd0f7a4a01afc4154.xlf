<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-a-windowsprincipal-object.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3960a7f87f8ac9a09da7222bd0f7a4a01afc4154</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\security\how-to-create-a-windowsprincipal-object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a1671abae60a4374fddab6109cfc3bd58c428b9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06d3920205c2779f0ae531557e920bdfed3584c0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create a WindowsPrincipal Object</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a WindowsPrincipal Object</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There are two ways to create a <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> object, depending on whether code must repeatedly perform role-based validation or must perform it only once.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If code must repeatedly perform role-based validation, the first of the following procedures produces less overhead.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When code needs to make role-based validations only once, you can create a <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> object by using the second of the following procedures.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a WindowsPrincipal object for repeated validation</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Call the <ph id="ph1">&lt;xref:System.AppDomain.SetPrincipalPolicy%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> object that is returned by the static <ph id="ph3">&lt;xref:System.AppDomain.CurrentDomain%2A?displayProperty=nameWithType&gt;</ph> property, passing the method a <ph id="ph4">&lt;xref:System.Security.Principal.PrincipalPolicy&gt;</ph> enumeration value that indicates what the new policy should be.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Supported values are <ph id="ph1">&lt;xref:System.Security.Principal.PrincipalPolicy.NoPrincipal&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following code demonstrates this method call.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>With the policy set, use the static <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> property to retrieve the principal that encapsulates the current Windows user.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Because the property return type is <ph id="ph1">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph>, you must cast the result to a <ph id="ph2">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following code initializes a new <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> object to the value of the principal associated with the current thread.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When the principal object has been created, you can use one of several methods to validate it.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To create a WindowsPrincipal object for a single validation</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initialize a new <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object by calling the static <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A?displayProperty=nameWithType&gt;</ph> method, which queries the current Windows account and places information about that account into the newly created identity object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code creates a new <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object and initializes it to the current authenticated user.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create a new <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> object and pass it the value of the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object created in the preceding step.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the principal object has been created, you can use one of several methods to validate it.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Principal and Identity Objects<ept id="p1">](../../../docs/standard/security/principal-and-identity-objects.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>