{"content":"---\ntitle: \"Extension methods must declare at least one parameter\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc36552\"\n  - \"bc36552\"\nhelpviewer_keywords: \n  - \"BC36552\"\nms.assetid: a8cc8cdd-cdb5-42ca-b5a1-c9a71abd46eb\n---\n# Extension methods must declare at least one parameter\nExtension methods must declare at least one parameter. The first parameter specifies which type to extend.  \n  \n An extension method without parameters is not valid because the first parameter specifies which data type the method extends. The first parameter is bound to the instance of the data type that invokes the method.  \n  \n **Error ID:** BC36552  \n  \n## To correct this error  \n  \n-   Add a parameter of the type that your method extends.  \n  \n## Example  \n The first parameter in the following example indicates that the `Print` method extends the `String` data type.  \n  \n```  \n<Extension()> _  \nPublic Sub Print (ByVal str As String)  \n    Console.WriteLine(str)  \nEnd Sub  \n```  \n  \n When the extension method is called as follows, parameter `str` in the method is bound to `greeting`, the instance of `String` that calls `Print`. The compiler will use `greeting` as the argument to extension method `Print`.  \n  \n```  \nDim greeting As String = \"Hello\"  \ngreeting.Print()  \n```  \n  \n## See also\n\n- [Extension Methods](../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)\n- [Procedure Parameters and Arguments](../../visual-basic/programming-guide/language-features/procedures/procedure-parameters-and-arguments.md)\n- [Procedures](../../visual-basic/programming-guide/language-features/procedures/index.md)\n","nodes":[{"pos":[4,214],"embed":true,"restype":"x-metadata","content":"title: \"Extension methods must declare at least one parameter\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc36552\"\n  - \"bc36552\"\nhelpviewer_keywords: \n  - \"BC36552\"\nms.assetid: a8cc8cdd-cdb5-42ca-b5a1-c9a71abd46eb","nodes":[{"content":"Extension methods must declare at least one parameter","nodes":[{"pos":[0,53],"content":"Extension methods must declare at least one parameter","nodes":[{"content":"Extension methods must declare at least one parameter","pos":[0,53]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[221,274],"content":"Extension methods must declare at least one parameter","linkify":"Extension methods must declare at least one parameter","nodes":[{"content":"Extension methods must declare at least one parameter","pos":[0,53]}]},{"content":"Extension methods must declare at least one parameter.","pos":[275,329]},{"content":"The first parameter specifies which type to extend.","pos":[330,381]},{"content":"An extension method without parameters is not valid because the first parameter specifies which data type the method extends.","pos":[388,513]},{"content":"The first parameter is bound to the instance of the data type that invokes the method.","pos":[514,600]},{"pos":[607,628],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36552","source":"**Error ID:** BC36552"},{"pos":[637,658],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Add a parameter of the type that your method extends.","pos":[668,721]},{"pos":[730,737],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[741,851],"content":"The first parameter in the following example indicates that the <ph id=\"ph1\">`Print`</ph> method extends the <ph id=\"ph2\">`String`</ph> data type.","source":"The first parameter in the following example indicates that the `Print` method extends the `String` data type."},{"content":"When the extension method is called as follows, parameter <ph id=\"ph1\">`str`</ph> in the method is bound to <ph id=\"ph2\">`greeting`</ph>, the instance of <ph id=\"ph3\">`String`</ph> that calls <ph id=\"ph4\">`Print`</ph>.","pos":[971,1117],"source":"When the extension method is called as follows, parameter `str` in the method is bound to `greeting`, the instance of `String` that calls `Print`."},{"content":"The compiler will use <ph id=\"ph1\">`greeting`</ph> as the argument to extension method <ph id=\"ph2\">`Print`</ph>.","pos":[1118,1195],"source":" The compiler will use `greeting` as the argument to extension method `Print`."},{"pos":[1273,1281],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1285,1392],"content":"<bpt id=\"p1\">[</bpt>Extension Methods<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)</ept>","source":"[Extension Methods](../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)"},{"pos":[1395,1536],"content":"<bpt id=\"p1\">[</bpt>Procedure Parameters and Arguments<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/procedure-parameters-and-arguments.md)</ept>","source":"[Procedure Parameters and Arguments](../../visual-basic/programming-guide/language-features/procedures/procedure-parameters-and-arguments.md)"},{"pos":[1539,1627],"content":"<bpt id=\"p1\">[</bpt>Procedures<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/index.md)</ept>","source":"[Procedures](../../visual-basic/programming-guide/language-features/procedures/index.md)"}]}