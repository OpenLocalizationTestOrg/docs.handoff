{"content":"---\ntitle: \"How to: Write Text to a File | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"writing text to files\"\n  - \"I/O [.NET Framework], writing text to files\"\n  - \"streams, writing text to files\"\n  - \"data streams, writing text to files\"\nms.assetid: 060cbe06-2adf-4337-9e7b-961a5c840208\ncaps.latest.revision: 29\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# How to: Write Text to a File\nThis topic shows different ways you can write text to a file for .NET Framework applications or [!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)] apps. The following classes and methods are typically used to write text to a file:  \n  \n-   <xref:System.IO.StreamWriter> - it contains methods to write to a file synchronously (<xref:System.IO.StreamWriter.Write%2A> or <xref:System.IO.TextWriter.WriteLine%2A>) or asynchronously (<xref:System.IO.StreamWriter.WriteAsync%2A> and <xref:System.IO.StreamWriter.WriteLineAsync%2A>).  \n  \n-   <xref:System.IO.File> â€“ to be used with .NET Framework applications. It provides static methods to write text to a file such as <xref:System.IO.File.WriteAllLines%2A> and <xref:System.IO.File.WriteAllText%2A>, or to append text to a file (<xref:System.IO.File.AppendAllLines%2A>, <xref:System.IO.File.AppendAllText%2A> or <xref:System.IO.File.AppendText%2A>).  \n  \n-   [FileIO](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.aspx) - to be used with [!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)] apps. It contains asynchronous methods to write text to a file ([WriteLinesAsync](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.writelinesasync.aspx) or [WriteTextAsync](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.writetextasync.aspx)) or to append text to a file ([AppendLinesAsync](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.appendlinesasync.aspx) or [AppendTextAsync](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.appendtextasync.aspx)).  \n  \n The samples have been kept simple in order to focus on the task being performed. For this reason, the samples perform minimal error checking and exception handling, if any. A real-world application generally provides more robust error checking and exception handling.  \n  \n## Example  \n The following example shows how to synchronously write text to a new file using the <xref:System.IO.StreamWriter> class, one line at a time. The new text file is saved to the user's My Documents folder. Because the <xref:System.IO.StreamWriter> object is declared and instantiated in a `using` statement, the <xref:System.IO.StreamWriter.Dispose%2A> method is invoked which automatically flushes and closes the stream.  \n  \n [!code-csharp[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#writeline)] \n [!code-vb[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#writeline)]   \n  \n## Example  \n The following example shows how to append text to an existing file using the <xref:System.IO.StreamWriter> class. It uses the same text file from the previous example.  \n  \n [!code-csharp[Conceptual.BasicIO.TextFiles#AppendText](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#appendtext)] \n [!code-vb[Conceptual.BasicIO.TextFiles#AppendText](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#appendtext)]     \n  \n## Example  \n The following example shows how to asynchronously write text to a new file using the <xref:System.IO.StreamWriter> class. In order to invoke the <xref:System.IO.StreamWriter.WriteAsync%2A> method, the method call needs to be within an `async` method. The new text file is saved to the user's My Documents folder.  \n  \n [!code-csharp[Conceptual.BasicIO.TextFiles#WriteAsync](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#writeasync)] \n [!code-vb[Conceptual.BasicIO.TextFiles#WriteAsync](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#writeasync)]  \n  \n## Example  \n The following example shows how to write text to a new file and append new lines of text to the same file using the <xref:System.IO.File> class. The <xref:System.IO.File.WriteAllText%2A> and <xref:System.IO.File.AppendAllLines%2A> methods open and close the file automatically. If the path you provide to the <xref:System.IO.File.WriteAllText%2A> method already exists, the file will be overwritten.  \n  \n [!code-csharp[Conceptual.BasicIO.TextFiles#WriteFile](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#writefile)] \n [!code-vb[Conceptual.BasicIO.TextFiles#WriteFile](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#writefile)]  \n  \n## Example  \n The following example shows how to asynchronously write user input to a text file in a [!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)] app. Because of security considerations, opening a file from a [!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)] app typically requires the use of a [FileOpenPicker](http://msdn.microsoft.com/library/windows/apps/windows.storage.pickers.fileopenpicker.aspx) control. In this example, the `FileOpenPicker` is filtered to show text files.  \n  \n```xaml  \n<Page  \n    x:Class=\"OpenFileWindowsStore.MainPage\"  \n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"  \n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"  \n    xmlns:local=\"using:OpenFileWindowsStore\"  \n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"  \n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"  \n    mc:Ignorable=\"d\">  \n  \n    <Grid Background=\"{ThemeResource ApplicationPageBackgroundThemeBrush}\">  \n        <Button Content=\"save text to a file\" HorizontalAlignment=\"Left\" Margin=\"103,417,0,0\" VerticalAlignment=\"Top\"   \n                Width=\"329\" Height=\"86\" FontSize=\"35\" Click=\"Button_Click\"/>  \n        <TextBox Name=\"UserInputTextBox\"  FontSize=\"18\" HorizontalAlignment=\"Left\" Margin=\"106,146,0,0\"   \n                 TextWrapping=\"Wrap\" Text=\"Write some text here, and select a file to write it to.\" VerticalAlignment=\"Top\"   \n                 Height=\"201\" Width=\"558\" AcceptsReturn=\"True\"/>  \n        <TextBlock Name=\"StatusTextBox\" HorizontalAlignment=\"Left\" Margin=\"106,570,0,147\" TextWrapping=\"Wrap\" Text=\"Status:\"   \n                   VerticalAlignment=\"Center\" Height=\"51\" Width=\"1074\" FontSize=\"18\" />  \n    </Grid>  \n</Page>  \n```  \n  \n [!code-csharp[OpenFileWindowsStore#Code](../../../samples/snippets/csharp/VS_Snippets_CLR/openfilewindowsstore/cs/mainpage.xaml.cs#code)]\n [!code-vb[OpenFileWindowsStore#Code](../../../samples/snippets/visualbasic/VS_Snippets_CLR/openfilewindowsstore/vb/mainpage.xaml.vb#code)]  \n  \n## See Also  \n <xref:System.IO.StreamWriter>   \n <xref:System.IO.File.CreateText%2A?displayProperty=fullName>   \n [How to: Enumerate Directories and Files](../../../docs/standard/io/how-to-enumerate-directories-and-files.md)   \n [How to: Read and Write to a Newly Created Data File](../../../docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)   \n [How to: Open and Append to a Log File](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md)   \n [How to: Read Text from a File](../../../docs/standard/io/how-to-read-text-from-a-file.md)   \n [File and Stream I-O](../../../docs/standard/io/index.md)\n","nodes":[{"pos":[4,518],"embed":true,"restype":"x-metadata","content":"title: \"How to: Write Text to a File | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"writing text to files\"\n  - \"I/O [.NET Framework], writing text to files\"\n  - \"streams, writing text to files\"\n  - \"data streams, writing text to files\"\nms.assetid: 060cbe06-2adf-4337-9e7b-961a5c840208\ncaps.latest.revision: 29\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"How to: Write Text to a File | Microsoft Docs","nodes":[{"pos":[0,45],"content":"How to: Write Text to a File | Microsoft Docs","nodes":[{"content":"How to: Write Text to a File | Microsoft Docs","pos":[0,45]}]}],"path":["title"]}],"yml":true},{"pos":[525,553],"content":"How to: Write Text to a File","linkify":"How to: Write Text to a File","nodes":[{"content":"How to: Write Text to a File","pos":[0,28]}]},{"content":"This topic shows different ways you can write text to a file for .NET Framework applications or <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> apps.","pos":[554,728],"source":"This topic shows different ways you can write text to a file for .NET Framework applications or [!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)] apps."},{"content":"The following classes and methods are typically used to write text to a file:","pos":[729,806]},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> - it contains methods to write to a file synchronously (<ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.Write%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>) or asynchronously (<ph id=\"ph4\">&lt;xref:System.IO.StreamWriter.WriteAsync%2A&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A&gt;</ph>).","pos":[816,1102],"source":"<xref:System.IO.StreamWriter> - it contains methods to write to a file synchronously (<xref:System.IO.StreamWriter.Write%2A> or <xref:System.IO.TextWriter.WriteLine%2A>) or asynchronously (<xref:System.IO.StreamWriter.WriteAsync%2A> and <xref:System.IO.StreamWriter.WriteLineAsync%2A>)."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> â€“ to be used with .NET Framework applications.","pos":[1112,1180],"source":"<xref:System.IO.File> â€“ to be used with .NET Framework applications."},{"content":"It provides static methods to write text to a file such as <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllLines%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.File.WriteAllText%2A&gt;</ph>, or to append text to a file (<ph id=\"ph3\">&lt;xref:System.IO.File.AppendAllLines%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.IO.File.AppendAllText%2A&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.IO.File.AppendText%2A&gt;</ph>).","pos":[1181,1471],"source":" It provides static methods to write text to a file such as <xref:System.IO.File.WriteAllLines%2A> and <xref:System.IO.File.WriteAllText%2A>, or to append text to a file (<xref:System.IO.File.AppendAllLines%2A>, <xref:System.IO.File.AppendAllText%2A> or <xref:System.IO.File.AppendText%2A>)."},{"content":"<bpt id=\"p1\">[</bpt>FileIO<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.aspx)</ept> - to be used with <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> apps.","pos":[1481,1663],"source":"[FileIO](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.aspx) - to be used with [!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)] apps."},{"content":"It contains asynchronous methods to write text to a file (<bpt id=\"p1\">[</bpt>WriteLinesAsync<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.writelinesasync.aspx)</ept> or <bpt id=\"p2\">[</bpt>WriteTextAsync<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.writetextasync.aspx)</ept>) or to append text to a file (<bpt id=\"p3\">[</bpt>AppendLinesAsync<ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.appendlinesasync.aspx)</ept> or <bpt id=\"p4\">[</bpt>AppendTextAsync<ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.appendtextasync.aspx)</ept>).","pos":[1664,2203],"source":" It contains asynchronous methods to write text to a file ([WriteLinesAsync](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.writelinesasync.aspx) or [WriteTextAsync](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.writetextasync.aspx)) or to append text to a file ([AppendLinesAsync](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.appendlinesasync.aspx) or [AppendTextAsync](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.appendtextasync.aspx))."},{"content":"The samples have been kept simple in order to focus on the task being performed.","pos":[2210,2290]},{"content":"For this reason, the samples perform minimal error checking and exception handling, if any.","pos":[2291,2382]},{"content":"A real-world application generally provides more robust error checking and exception handling.","pos":[2383,2477]},{"pos":[2486,2493],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to synchronously write text to a new file using the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> class, one line at a time.","pos":[2497,2637],"source":"The following example shows how to synchronously write text to a new file using the <xref:System.IO.StreamWriter> class, one line at a time."},{"content":"The new text file is saved to the user's My Documents folder.","pos":[2638,2699]},{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> object is declared and instantiated in a <ph id=\"ph2\">`using`</ph> statement, the <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter.Dispose%2A&gt;</ph> method is invoked which automatically flushes and closes the stream.","pos":[2700,2915],"source":" Because the <xref:System.IO.StreamWriter> object is declared and instantiated in a `using` statement, the <xref:System.IO.StreamWriter.Dispose%2A> method is invoked which automatically flushes and closes the stream."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>Conceptual.BasicIO.TextFiles#WriteLine<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#writeline)</ept><ept id=\"p1\">]</ept>","pos":[2922,3078],"source":"[!code-csharp[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#writeline)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>Conceptual.BasicIO.TextFiles#WriteLine<ept id=\"p2\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#writeline)</ept><ept id=\"p1\">]</ept>","pos":[3081,3238],"source":"[!code-vb[Conceptual.BasicIO.TextFiles#WriteLine](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#writeline)]"},{"pos":[3248,3255],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to append text to an existing file using the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> class.","pos":[3259,3372],"source":"The following example shows how to append text to an existing file using the <xref:System.IO.StreamWriter> class."},{"content":"It uses the same text file from the previous example.","pos":[3373,3426]},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>Conceptual.BasicIO.TextFiles#AppendText<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#appendtext)</ept><ept id=\"p1\">]</ept>","pos":[3433,3591],"source":"[!code-csharp[Conceptual.BasicIO.TextFiles#AppendText](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#appendtext)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>Conceptual.BasicIO.TextFiles#AppendText<ept id=\"p2\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#appendtext)</ept><ept id=\"p1\">]</ept>","pos":[3594,3753],"source":"[!code-vb[Conceptual.BasicIO.TextFiles#AppendText](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#appendtext)]"},{"pos":[3765,3772],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to asynchronously write text to a new file using the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> class.","pos":[3776,3897],"source":"The following example shows how to asynchronously write text to a new file using the <xref:System.IO.StreamWriter> class."},{"content":"In order to invoke the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.WriteAsync%2A&gt;</ph> method, the method call needs to be within an <ph id=\"ph2\">`async`</ph> method.","pos":[3898,4026],"source":" In order to invoke the <xref:System.IO.StreamWriter.WriteAsync%2A> method, the method call needs to be within an `async` method."},{"content":"The new text file is saved to the user's My Documents folder.","pos":[4027,4088]},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>Conceptual.BasicIO.TextFiles#WriteAsync<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#writeasync)</ept><ept id=\"p1\">]</ept>","pos":[4095,4253],"source":"[!code-csharp[Conceptual.BasicIO.TextFiles#WriteAsync](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#writeasync)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>Conceptual.BasicIO.TextFiles#WriteAsync<ept id=\"p2\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#writeasync)</ept><ept id=\"p1\">]</ept>","pos":[4256,4415],"source":"[!code-vb[Conceptual.BasicIO.TextFiles#WriteAsync](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#writeasync)]"},{"pos":[4424,4431],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to write text to a new file and append new lines of text to the same file using the <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> class.","pos":[4435,4579],"source":"The following example shows how to write text to a new file and append new lines of text to the same file using the <xref:System.IO.File> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllText%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.File.AppendAllLines%2A&gt;</ph> methods open and close the file automatically.","pos":[4580,4712],"source":" The <xref:System.IO.File.WriteAllText%2A> and <xref:System.IO.File.AppendAllLines%2A> methods open and close the file automatically."},{"content":"If the path you provide to the <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllText%2A&gt;</ph> method already exists, the file will be overwritten.","pos":[4713,4834],"source":" If the path you provide to the <xref:System.IO.File.WriteAllText%2A> method already exists, the file will be overwritten."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>Conceptual.BasicIO.TextFiles#WriteFile<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#writefile)</ept><ept id=\"p1\">]</ept>","pos":[4841,4997],"source":"[!code-csharp[Conceptual.BasicIO.TextFiles#WriteFile](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.basicio.textfiles/cs/source.cs#writefile)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>Conceptual.BasicIO.TextFiles#WriteFile<ept id=\"p2\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#writefile)</ept><ept id=\"p1\">]</ept>","pos":[5000,5157],"source":"[!code-vb[Conceptual.BasicIO.TextFiles#WriteFile](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.basicio.textfiles/vb/source.vb#writefile)]"},{"pos":[5166,5173],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to asynchronously write user input to a text file in a <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> app.","pos":[5177,5341],"source":"The following example shows how to asynchronously write user input to a text file in a [!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)] app."},{"content":"Because of security considerations, opening a file from a <ph id=\"ph1\">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> app typically requires the use of a <bpt id=\"p1\">[</bpt>FileOpenPicker<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/windows.storage.pickers.fileopenpicker.aspx)</ept> control.","pos":[5342,5626],"source":" Because of security considerations, opening a file from a [!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)] app typically requires the use of a [FileOpenPicker](http://msdn.microsoft.com/library/windows/apps/windows.storage.pickers.fileopenpicker.aspx) control."},{"content":"In this example, the <ph id=\"ph1\">`FileOpenPicker`</ph> is filtered to show text files.","pos":[5627,5696],"source":" In this example, the `FileOpenPicker` is filtered to show text files."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>OpenFileWindowsStore#Code<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/openfilewindowsstore/cs/mainpage.xaml.cs#code)</ept><ept id=\"p1\">]</ept>","pos":[6948,7085],"source":"[!code-csharp[OpenFileWindowsStore#Code](../../../samples/snippets/csharp/VS_Snippets_CLR/openfilewindowsstore/cs/mainpage.xaml.cs#code)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>OpenFileWindowsStore#Code<ept id=\"p2\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/openfilewindowsstore/vb/mainpage.xaml.vb#code)</ept><ept id=\"p1\">]</ept>","pos":[7087,7225],"source":"[!code-vb[OpenFileWindowsStore#Code](../../../samples/snippets/visualbasic/VS_Snippets_CLR/openfilewindowsstore/vb/mainpage.xaml.vb#code)]"},{"pos":[7234,7242],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph>","pos":[7246,7275],"source":"<xref:System.IO.StreamWriter> "},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.File.CreateText%2A?displayProperty=fullName&gt;</ph>","pos":[7280,7340],"source":"<xref:System.IO.File.CreateText%2A?displayProperty=fullName> "},{"content":"<bpt id=\"p1\">[</bpt>How to: Enumerate Directories and Files<ept id=\"p1\">](../../../docs/standard/io/how-to-enumerate-directories-and-files.md)</ept><ph id=\"ph1\"> </ph>","pos":[7345,7456],"source":"[How to: Enumerate Directories and Files](../../../docs/standard/io/how-to-enumerate-directories-and-files.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](../../../docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept><ph id=\"ph1\"> </ph>","pos":[7460,7595],"source":"[How to: Read and Write to a Newly Created Data File](../../../docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Open and Append to a Log File<ept id=\"p1\">](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept><ph id=\"ph1\"> </ph>","pos":[7599,7706],"source":"[How to: Open and Append to a Log File](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Read Text from a File<ept id=\"p1\">](../../../docs/standard/io/how-to-read-text-from-a-file.md)</ept><ph id=\"ph1\"> </ph>","pos":[7710,7801],"source":"[How to: Read Text from a File](../../../docs/standard/io/how-to-read-text-from-a-file.md) "},{"content":"<bpt id=\"p1\">[</bpt>File and Stream I-O<ept id=\"p1\">](../../../docs/standard/io/index.md)</ept>","pos":[7805,7862],"source":"[File and Stream I-O](../../../docs/standard/io/index.md)"}]}