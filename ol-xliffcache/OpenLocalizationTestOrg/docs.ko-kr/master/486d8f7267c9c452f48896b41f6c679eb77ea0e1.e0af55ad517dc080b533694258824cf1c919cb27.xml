{"content":"---\ntitle: \"ASP.NET Caching Integration | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: f581923a-8a72-42fc-bd6a-46de2aaeecc1\ncaps.latest.revision: 8\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# ASP.NET Caching Integration\nThis sample demonstrates how to utilize the ASP.NET output cache with the WCF WEB HTTP programming model. Please see the [Basic Resource Service](../../../../docs/framework/wcf/samples/basic-resource-service.md) sample for a self-hosted version of this scenario that discusses the service implementation in depth. This topic focuses on the ASP.NET output cache integration feature.  \n  \n## Demonstrates  \n Integration with the ASP.NET Output Cache  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Basic\\Web\\AspNetCachingIntegration`  \n  \n## Discussion  \n The sample uses the <xref:System.ServiceModel.Web.AspNetCacheProfileAttribute> to utilize ASP.NET output caching with the [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] service. The <xref:System.ServiceModel.Web.AspNetCacheProfileAttribute> is applied to service operations, and provides the name of a cache profile in a configuration file that should be applied to responses from the given operation.  \n  \n In the Service.cs file of the sample Service project, both the `GetCustomer` and `GetCustomers` operations are marked with the <xref:System.ServiceModel.Web.AspNetCacheProfileAttribute>, which provides the cache profile name \"CacheFor60Seconds\". In the Web.config file of the Service project, the cache profile \"CacheFor60Seconds\" is provided under the <`caching`> element of <`system.web`>. For this cache profile, the value of the `duration` attribute is \"60\", so responses associated with this profile are cached in the ASP.NET output cache for 60 seconds. Also, for this cache profile, the `varmByParam` attribute is set to \"format\" so requests with different values for the `format` query string parameter have their responses cached separately. Lastly, the cache profileâ€™s `varyByHeader` attribute is set to \"Accept\", so requests with different Accept header values have their responses cached separately.  \n  \n Program.cs in the Client project demonstrates how such a client can be authored using <xref:System.Net.HttpWebRequest>. Note that this is just one way to access a WCF service. It is also possible to access the service using other .NET Framework classes like the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] channel factory and <xref:System.Net.WebClient>. Other samples in the SDK (such as the [Basic HTTP Service](../../../../docs/framework/wcf/samples/basic-http-service.md) sample and the [Automatic Format Selection](../../../../docs/framework/wcf/samples/automatic-format-selection.md) sample) illustrate how to use these classes to communicate with a [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] service.  \n  \n## To run the sample  \n The sample consists of three projects:  \n  \n-   **Service**: A Web Application project that includes a WCF HTTP service hosted in ASP.NET.  \n  \n-   **Client**: A console application project that makes calls to the service.  \n  \n-   **Common**: A shared library that contains the Customer type used by the client and service.  \n  \n As the Client console application runs, the client makes requests to the service and writes the pertinent information from the responses to the console window.  \n  \n#### To run the sample  \n  \n1.  Open the solution for the ASP.NET Caching Integration Sample.  \n  \n2.  Press CTRL+SHIFT+B to build the solution.  \n  \n3.  If the **Solution Explorer** window is not already open, press CTRL+W+S.  \n  \n4.  From the **Solution Explorer** window, right click the **Service** project and select **Start New Instance**. This launches the ASP.NET development server, which hosts the service.  \n  \n5.  From the **Solution Explorer** window, right click the **Client** project and select **Start New Instance**.  \n  \n6.  The client console window appears and provides the URI of the running service and the URI of the HTML help page for the running service. At any point in time you can view the HTML help page by typing the URI of the help page in a browser.  \n  \n7.  As the sample runs, the client writes the status of the current activity.  \n  \n8.  Press any key to terminate the client console application.  \n  \n9. Press SHIFT+F5 to stop debugging the service.  \n  \n10. In the Windows Notification Area, right click the ASP.NET development server icon and select **Stop**.","nodes":[{"pos":[12,56],"content":"ASP.NET Caching Integration | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ASP.NET Caching Integration | Microsoft Docs","pos":[0,44]}]},{"pos":[354,381],"content":"ASP.NET Caching Integration","linkify":"ASP.NET Caching Integration","nodes":[{"content":"ASP.NET Caching Integration","pos":[0,27]}]},{"content":"This sample demonstrates how to utilize the ASP.NET output cache with the WCF WEB HTTP programming model.","pos":[382,487]},{"content":"Please see the <bpt id=\"p1\">[</bpt>Basic Resource Service<ept id=\"p1\">](../../../../docs/framework/wcf/samples/basic-resource-service.md)</ept> sample for a self-hosted version of this scenario that discusses the service implementation in depth.","pos":[488,695],"source":" Please see the [Basic Resource Service](../../../../docs/framework/wcf/samples/basic-resource-service.md) sample for a self-hosted version of this scenario that discusses the service implementation in depth."},{"content":"This topic focuses on the ASP.NET output cache integration feature.","pos":[696,763]},{"pos":[772,784],"content":"Demonstrates","linkify":"Demonstrates","nodes":[{"content":"Demonstrates","pos":[0,12]}]},{"content":"Integration with the ASP.NET Output Cache","pos":[788,829]},{"pos":[837,969],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[1023,1349],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[1350,1400]},{"pos":[1491,1501],"content":"Discussion","linkify":"Discussion","nodes":[{"content":"Discussion","pos":[0,10]}]},{"content":"The sample uses the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.AspNetCacheProfileAttribute&gt;</ph> to utilize ASP.NET output caching with the <ph id=\"ph2\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> service.","pos":[1505,1691],"source":"The sample uses the <xref:System.ServiceModel.Web.AspNetCacheProfileAttribute> to utilize ASP.NET output caching with the [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] service."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.AspNetCacheProfileAttribute&gt;</ph> is applied to service operations, and provides the name of a cache profile in a configuration file that should be applied to responses from the given operation.","pos":[1692,1915],"source":" The <xref:System.ServiceModel.Web.AspNetCacheProfileAttribute> is applied to service operations, and provides the name of a cache profile in a configuration file that should be applied to responses from the given operation."},{"content":"In the Service.cs file of the sample Service project, both the <ph id=\"ph1\">`GetCustomer`</ph> and <ph id=\"ph2\">`GetCustomers`</ph> operations are marked with the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Web.AspNetCacheProfileAttribute&gt;</ph>, which provides the cache profile name \"CacheFor60Seconds\".","pos":[1922,2167],"source":"In the Service.cs file of the sample Service project, both the `GetCustomer` and `GetCustomers` operations are marked with the <xref:System.ServiceModel.Web.AspNetCacheProfileAttribute>, which provides the cache profile name \"CacheFor60Seconds\"."},{"content":"In the Web.config file of the Service project, the cache profile \"CacheFor60Seconds\" is provided under the &lt;<ph id=\"ph1\">`caching`</ph>&gt; element of &lt;<ph id=\"ph2\">`system.web`</ph>&gt;.","pos":[2168,2313],"source":" In the Web.config file of the Service project, the cache profile \"CacheFor60Seconds\" is provided under the <`caching`> element of <`system.web`>."},{"content":"For this cache profile, the value of the <ph id=\"ph1\">`duration`</ph> attribute is \"60\", so responses associated with this profile are cached in the ASP.NET output cache for 60 seconds.","pos":[2314,2481],"source":" For this cache profile, the value of the `duration` attribute is \"60\", so responses associated with this profile are cached in the ASP.NET output cache for 60 seconds."},{"content":"Also, for this cache profile, the <ph id=\"ph1\">`varmByParam`</ph> attribute is set to \"format\" so requests with different values for the <ph id=\"ph2\">`format`</ph> query string parameter have their responses cached separately.","pos":[2482,2672],"source":" Also, for this cache profile, the `varmByParam` attribute is set to \"format\" so requests with different values for the `format` query string parameter have their responses cached separately."},{"content":"Lastly, the cache profileâ€™s <ph id=\"ph1\">`varyByHeader`</ph> attribute is set to \"Accept\", so requests with different Accept header values have their responses cached separately.","pos":[2673,2833],"source":" Lastly, the cache profileâ€™s `varyByHeader` attribute is set to \"Accept\", so requests with different Accept header values have their responses cached separately."},{"content":"Program.cs in the Client project demonstrates how such a client can be authored using <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.","pos":[2840,2959],"source":"Program.cs in the Client project demonstrates how such a client can be authored using <xref:System.Net.HttpWebRequest>."},{"content":"Note that this is just one way to access a WCF service.","pos":[2960,3015]},{"content":"It is also possible to access the service using other .NET Framework classes like the <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> channel factory and <ph id=\"ph2\">&lt;xref:System.Net.WebClient&gt;</ph>.","pos":[3016,3206],"source":" It is also possible to access the service using other .NET Framework classes like the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] channel factory and <xref:System.Net.WebClient>."},{"content":"Other samples in the SDK (such as the <bpt id=\"p1\">[</bpt>Basic HTTP Service<ept id=\"p1\">](../../../../docs/framework/wcf/samples/basic-http-service.md)</ept> sample and the <bpt id=\"p2\">[</bpt>Automatic Format Selection<ept id=\"p2\">](../../../../docs/framework/wcf/samples/automatic-format-selection.md)</ept> sample) illustrate how to use these classes to communicate with a <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service.","pos":[3207,3572],"source":" Other samples in the SDK (such as the [Basic HTTP Service](../../../../docs/framework/wcf/samples/basic-http-service.md) sample and the [Automatic Format Selection](../../../../docs/framework/wcf/samples/automatic-format-selection.md) sample) illustrate how to use these classes to communicate with a [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] service."},{"pos":[3581,3598],"content":"To run the sample","linkify":"To run the sample","nodes":[{"content":"To run the sample","pos":[0,17]}]},{"content":"The sample consists of three projects:","pos":[3602,3640]},{"pos":[3650,3740],"content":"<bpt id=\"p1\">**</bpt>Service<ept id=\"p1\">**</ept>: A Web Application project that includes a WCF HTTP service hosted in ASP.NET.","source":"**Service**: A Web Application project that includes a WCF HTTP service hosted in ASP.NET."},{"pos":[3750,3824],"content":"<bpt id=\"p1\">**</bpt>Client<ept id=\"p1\">**</ept>: A console application project that makes calls to the service.","source":"**Client**: A console application project that makes calls to the service."},{"pos":[3834,3926],"content":"<bpt id=\"p1\">**</bpt>Common<ept id=\"p1\">**</ept>: A shared library that contains the Customer type used by the client and service.","source":"**Common**: A shared library that contains the Customer type used by the client and service."},{"content":"As the Client console application runs, the client makes requests to the service and writes the pertinent information from the responses to the console window.","pos":[3933,4092]},{"pos":[4103,4120],"content":"To run the sample","linkify":"To run the sample","nodes":[{"content":"To run the sample","pos":[0,17]}]},{"content":"Open the solution for the ASP.NET Caching Integration Sample.","pos":[4130,4191]},{"content":"Press CTRL+SHIFT+B to build the solution.","pos":[4201,4242]},{"pos":[4252,4324],"content":"If the <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> window is not already open, press CTRL+W+S.","source":"If the **Solution Explorer** window is not already open, press CTRL+W+S."},{"content":"From the <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> window, right click the <bpt id=\"p2\">**</bpt>Service<ept id=\"p2\">**</ept> project and select <bpt id=\"p3\">**</bpt>Start New Instance<ept id=\"p3\">**</ept>.","pos":[4334,4443],"source":"From the **Solution Explorer** window, right click the **Service** project and select **Start New Instance**."},{"content":"This launches the ASP.NET development server, which hosts the service.","pos":[4444,4514]},{"pos":[4524,4632],"content":"From the <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> window, right click the <bpt id=\"p2\">**</bpt>Client<ept id=\"p2\">**</ept> project and select <bpt id=\"p3\">**</bpt>Start New Instance<ept id=\"p3\">**</ept>.","source":"From the **Solution Explorer** window, right click the **Client** project and select **Start New Instance**."},{"content":"The client console window appears and provides the URI of the running service and the URI of the HTML help page for the running service.","pos":[4642,4778]},{"content":"At any point in time you can view the HTML help page by typing the URI of the help page in a browser.","pos":[4779,4880]},{"content":"As the sample runs, the client writes the status of the current activity.","pos":[4890,4963]},{"content":"Press any key to terminate the client console application.","pos":[4973,5031]},{"content":"Press SHIFT+F5 to stop debugging the service.","pos":[5040,5085]},{"pos":[5095,5197],"content":"In the Windows Notification Area, right click the ASP.NET development server icon and select <bpt id=\"p1\">**</bpt>Stop<ept id=\"p1\">**</ept>.","source":"In the Windows Notification Area, right click the ASP.NET development server icon and select **Stop**."}]}