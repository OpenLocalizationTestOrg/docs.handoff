{"content":"---\ntitle: \"Contextual Keywords - C# Reference\"\nms.custom: seodec18\n\nms.date: 03/07/2017\nhelpviewer_keywords: \n  - \"contextual keywords [C#]\"\nms.assetid: 7c76bc29-a754-4389-b0ab-f6b441018298\n---\n# Contextual Keywords (C# Reference)\nA contextual keyword is used to provide a specific meaning in the code, but it is not a reserved word in C#. The following contextual keywords are introduced in this section:  \n  \n|Keyword|Description|  \n|-------------|-----------------|  \n|[add](../../../csharp/language-reference/keywords/add.md)|Defines a custom event accessor that is invoked when client code subscribes to the event.|  \n|[async](../../../csharp/language-reference/keywords/async.md)|Indicates that the modified method, lambda expression, or anonymous method is asynchronous.|  \n|[await](../../../csharp/language-reference/keywords/await.md)|Suspends an async method until an awaited task is completed.|  \n|[dynamic](../../../csharp/language-reference/keywords/dynamic.md)|Defines a reference type that enables operations in which it occurs to bypass compile-time type checking.|  \n|[get](../../../csharp/language-reference/keywords/get.md)|Defines an accessor method for a property or an indexer.|  \n|[global](../../../csharp/language-reference/keywords/global.md)|Specifies the default global namespace, which is otherwise unnamed.|  \n|[partial](../../../csharp/language-reference/keywords/partial-type.md)|Defines partial classes, structs, and interfaces throughout the same compilation unit.|  \n|[remove](../../../csharp/language-reference/keywords/remove.md)|Defines a custom event accessor that is invoked when client code unsubscribes from the event.|  \n|[set](../../../csharp/language-reference/keywords/set.md)|Defines an accessor method for a property or an indexer.|  \n|[value](../../../csharp/language-reference/keywords/value.md)|Used to set accessors and to add or remove event handlers.|  \n|[var](../../../csharp/language-reference/keywords/var.md)|Enables the type of a variable declared at method scope to be determined by the compiler.|  \n|[when](when.md)|Specifies a filter condition for a `catch` block or the `case` label of a `switch` statement.|\n|[where](../../../csharp/language-reference/keywords/where-generic-type-constraint.md)|Adds constraints to a generic declaration. (See also [where](../../../csharp/language-reference/keywords/where-clause.md)).|  \n|[yield](../../../csharp/language-reference/keywords/yield.md)|Used in an iterator block to return a value to the enumerator object or to signal the end of iteration.|  \n  \n All query keywords introduced in C# 3.0 are also contextual. For more information, see [Query Keywords (LINQ)](../../../csharp/language-reference/keywords/query-keywords.md).  \n  \n## See also\n\n- [C# Reference](../../../csharp/language-reference/index.md)\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [C# Keywords](../../../csharp/language-reference/keywords/index.md)\n","nodes":[{"pos":[4,190],"embed":true,"restype":"x-metadata","content":"title: \"Contextual Keywords - C# Reference\"\nms.custom: seodec18\n\nms.date: 03/07/2017\nhelpviewer_keywords: \n  - \"contextual keywords [C#]\"\nms.assetid: 7c76bc29-a754-4389-b0ab-f6b441018298","nodes":[{"content":"Contextual Keywords - C# Reference","nodes":[{"pos":[0,34],"content":"Contextual Keywords - C# Reference","nodes":[{"content":"Contextual Keywords - C# Reference","pos":[0,34]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[197,231],"content":"Contextual Keywords (C# Reference)","linkify":"Contextual Keywords (C# Reference)","nodes":[{"content":"Contextual Keywords (C# Reference)","pos":[0,34]}]},{"content":"A contextual keyword is used to provide a specific meaning in the code, but it is not a reserved word in C#.","pos":[232,340]},{"content":"The following contextual keywords are introduced in this section:","pos":[341,406]},{"content":"Keyword","pos":[413,420]},{"content":"Description","pos":[421,432]},{"pos":[473,530],"content":"<bpt id=\"p1\">[</bpt>add<ept id=\"p1\">](../../../csharp/language-reference/keywords/add.md)</ept>","source":"[add](../../../csharp/language-reference/keywords/add.md)"},{"content":"Defines a custom event accessor that is invoked when client code subscribes to the event.","pos":[531,620]},{"pos":[625,686],"content":"<bpt id=\"p1\">[</bpt>async<ept id=\"p1\">](../../../csharp/language-reference/keywords/async.md)</ept>","source":"[async](../../../csharp/language-reference/keywords/async.md)"},{"content":"Indicates that the modified method, lambda expression, or anonymous method is asynchronous.","pos":[687,778]},{"pos":[783,844],"content":"<bpt id=\"p1\">[</bpt>await<ept id=\"p1\">](../../../csharp/language-reference/keywords/await.md)</ept>","source":"[await](../../../csharp/language-reference/keywords/await.md)"},{"content":"Suspends an async method until an awaited task is completed.","pos":[845,905]},{"pos":[910,975],"content":"<bpt id=\"p1\">[</bpt>dynamic<ept id=\"p1\">](../../../csharp/language-reference/keywords/dynamic.md)</ept>","source":"[dynamic](../../../csharp/language-reference/keywords/dynamic.md)"},{"content":"Defines a reference type that enables operations in which it occurs to bypass compile-time type checking.","pos":[976,1081]},{"pos":[1086,1143],"content":"<bpt id=\"p1\">[</bpt>get<ept id=\"p1\">](../../../csharp/language-reference/keywords/get.md)</ept>","source":"[get](../../../csharp/language-reference/keywords/get.md)"},{"content":"Defines an accessor method for a property or an indexer.","pos":[1144,1200]},{"pos":[1205,1268],"content":"<bpt id=\"p1\">[</bpt>global<ept id=\"p1\">](../../../csharp/language-reference/keywords/global.md)</ept>","source":"[global](../../../csharp/language-reference/keywords/global.md)"},{"content":"Specifies the default global namespace, which is otherwise unnamed.","pos":[1269,1336]},{"pos":[1341,1411],"content":"<bpt id=\"p1\">[</bpt>partial<ept id=\"p1\">](../../../csharp/language-reference/keywords/partial-type.md)</ept>","source":"[partial](../../../csharp/language-reference/keywords/partial-type.md)"},{"content":"Defines partial classes, structs, and interfaces throughout the same compilation unit.","pos":[1412,1498]},{"pos":[1503,1566],"content":"<bpt id=\"p1\">[</bpt>remove<ept id=\"p1\">](../../../csharp/language-reference/keywords/remove.md)</ept>","source":"[remove](../../../csharp/language-reference/keywords/remove.md)"},{"content":"Defines a custom event accessor that is invoked when client code unsubscribes from the event.","pos":[1567,1660]},{"pos":[1665,1722],"content":"<bpt id=\"p1\">[</bpt>set<ept id=\"p1\">](../../../csharp/language-reference/keywords/set.md)</ept>","source":"[set](../../../csharp/language-reference/keywords/set.md)"},{"content":"Defines an accessor method for a property or an indexer.","pos":[1723,1779]},{"pos":[1784,1845],"content":"<bpt id=\"p1\">[</bpt>value<ept id=\"p1\">](../../../csharp/language-reference/keywords/value.md)</ept>","source":"[value](../../../csharp/language-reference/keywords/value.md)"},{"content":"Used to set accessors and to add or remove event handlers.","pos":[1846,1904]},{"pos":[1909,1966],"content":"<bpt id=\"p1\">[</bpt>var<ept id=\"p1\">](../../../csharp/language-reference/keywords/var.md)</ept>","source":"[var](../../../csharp/language-reference/keywords/var.md)"},{"content":"Enables the type of a variable declared at method scope to be determined by the compiler.","pos":[1967,2056]},{"pos":[2061,2076],"content":"<bpt id=\"p1\">[</bpt>when<ept id=\"p1\">](when.md)</ept>","source":"[when](when.md)"},{"pos":[2077,2170],"content":"Specifies a filter condition for a <ph id=\"ph1\">`catch`</ph> block or the <ph id=\"ph2\">`case`</ph> label of a <ph id=\"ph3\">`switch`</ph> statement.","source":"Specifies a filter condition for a `catch` block or the `case` label of a `switch` statement."},{"pos":[2173,2258],"content":"<bpt id=\"p1\">[</bpt>where<ept id=\"p1\">](../../../csharp/language-reference/keywords/where-generic-type-constraint.md)</ept>","source":"[where](../../../csharp/language-reference/keywords/where-generic-type-constraint.md)"},{"content":"Adds constraints to a generic declaration.","pos":[2259,2301]},{"content":"(See also <bpt id=\"p1\">[</bpt>where<ept id=\"p1\">](../../../csharp/language-reference/keywords/where-clause.md)</ept>).","pos":[2302,2382],"source":" (See also [where](../../../csharp/language-reference/keywords/where-clause.md))."},{"pos":[2387,2448],"content":"<bpt id=\"p1\">[</bpt>yield<ept id=\"p1\">](../../../csharp/language-reference/keywords/yield.md)</ept>","source":"[yield](../../../csharp/language-reference/keywords/yield.md)"},{"content":"Used in an iterator block to return a value to the enumerator object or to signal the end of iteration.","pos":[2449,2552]},{"content":"All query keywords introduced in C# 3.0 are also contextual.","pos":[2560,2620]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Query Keywords (LINQ)<ept id=\"p1\">](../../../csharp/language-reference/keywords/query-keywords.md)</ept>.","pos":[2621,2734],"source":" For more information, see [Query Keywords (LINQ)](../../../csharp/language-reference/keywords/query-keywords.md)."},{"pos":[2743,2751],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2755,2814],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept>","source":"[C# Reference](../../../csharp/language-reference/index.md)"},{"pos":[2817,2883],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[2886,2953],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept>","source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md)"}]}