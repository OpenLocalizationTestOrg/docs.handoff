{"content":"---\ntitle: \"Built-in types table - C# Reference\"\nms.custom: seodec18\n\ndescription: \"Keywords for built-in C# types\"\nms.date: 08/17/2018\nhelpviewer_keywords: \n  - \"types [C#], built-in\"\n  - \"built-in C# types\"\nms.assetid: 54f901f2-bf2f-472c-ae8d-73e8ecfc57fe\n---\n# Built-in types table (C# Reference)\n\nThe following table shows the keywords for built-in C# types, which are aliases of predefined types in the <xref:System> namespace.  \n  \n|C# type|.NET type|  \n|--------------|-------------------------|  \n|[bool](bool.md)|<xref:System.Boolean?displayProperty=nameWithType>|  \n|[byte](byte.md)|<xref:System.Byte?displayProperty=nameWithType>|  \n|[sbyte](sbyte.md)|<xref:System.SByte?displayProperty=nameWithType>|  \n|[char](char.md)|<xref:System.Char?displayProperty=nameWithType>|  \n|[decimal](decimal.md)|<xref:System.Decimal?displayProperty=nameWithType>|  \n|[double](double.md)|<xref:System.Double?displayProperty=nameWithType>|  \n|[float](float.md)|<xref:System.Single?displayProperty=nameWithType>|  \n|[int](int.md)|<xref:System.Int32?displayProperty=nameWithType>|  \n|[uint](uint.md)|<xref:System.UInt32?displayProperty=nameWithType>|  \n|[long](long.md)|<xref:System.Int64?displayProperty=nameWithType>|  \n|[ulong](ulong.md)|<xref:System.UInt64?displayProperty=nameWithType>|  \n|[object](object.md)|<xref:System.Object?displayProperty=nameWithType>|  \n|[short](short.md)|<xref:System.Int16?displayProperty=nameWithType>|  \n|[ushort](ushort.md)|<xref:System.UInt16?displayProperty=nameWithType>|  \n|[string](string.md)|<xref:System.String?displayProperty=nameWithType>|  \n  \n## Remarks\n\nAll of the types in the table, except `object` and `string`, are referred to as simple types.  \n  \nThe C# type keywords and their aliases are interchangeable. For example, you can declare an integer variable by using either of the following declarations:  \n\n```csharp\nint x = 123;\nSystem.Int32 y = 123;\n```\n\nUse the [typeof](typeof.md) operator to get the <xref:System.Type?displayProperty=nameWithType> instance that represents the specified type:\n\n```csharp\nType stringType = typeof(string);\nConsole.WriteLine(stringType.FullName);\n\nType doubleType = typeof(System.Double);\nConsole.WriteLine(doubleType.FullName);\n\n// Output:\n// System.String\n// System.Double\n```\n\n## See also\n\n- [C# Reference](../../../csharp/language-reference/index.md)\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Reference tables for types](reference-tables-for-types.md)\n- [Value types](value-types.md)\n- [Reference types](reference-types.md)\n- [Default values table](default-values-table.md)\n- [dynamic](dynamic.md)\n","nodes":[{"pos":[4,257],"embed":true,"restype":"x-metadata","content":"title: \"Built-in types table - C# Reference\"\nms.custom: seodec18\n\ndescription: \"Keywords for built-in C# types\"\nms.date: 08/17/2018\nhelpviewer_keywords: \n  - \"types [C#], built-in\"\n  - \"built-in C# types\"\nms.assetid: 54f901f2-bf2f-472c-ae8d-73e8ecfc57fe","nodes":[{"content":"Built-in types table - C# Reference","nodes":[{"pos":[0,35],"content":"Built-in types table - C# Reference","nodes":[{"content":"Built-in types table - C# Reference","pos":[0,35]}]}],"path":["title"],"nosxs":false},{"content":"Keywords for built-in C# types","nodes":[{"pos":[0,30],"content":"Keywords for built-in C# types","nodes":[{"content":"Keywords for built-in C# types","pos":[0,30]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[264,299],"content":"Built-in types table (C# Reference)","linkify":"Built-in types table (C# Reference)","nodes":[{"content":"Built-in types table (C# Reference)","pos":[0,35]}]},{"pos":[301,432],"content":"The following table shows the keywords for built-in C# types, which are aliases of predefined types in the <ph id=\"ph1\">&lt;xref:System&gt;</ph> namespace.","source":"The following table shows the keywords for built-in C# types, which are aliases of predefined types in the <xref:System> namespace."},{"content":"C# type","pos":[439,446]},{"content":".NET type","pos":[447,456]},{"pos":[506,521],"content":"<bpt id=\"p1\">[</bpt>bool<ept id=\"p1\">](bool.md)</ept>","source":"[bool](bool.md)"},{"pos":[577,592],"content":"<bpt id=\"p1\">[</bpt>byte<ept id=\"p1\">](byte.md)</ept>","source":"[byte](byte.md)"},{"pos":[645,662],"content":"<bpt id=\"p1\">[</bpt>sbyte<ept id=\"p1\">](sbyte.md)</ept>","source":"[sbyte](sbyte.md)"},{"pos":[716,731],"content":"<bpt id=\"p1\">[</bpt>char<ept id=\"p1\">](char.md)</ept>","source":"[char](char.md)"},{"pos":[784,805],"content":"<bpt id=\"p1\">[</bpt>decimal<ept id=\"p1\">](decimal.md)</ept>","source":"[decimal](decimal.md)"},{"pos":[861,880],"content":"<bpt id=\"p1\">[</bpt>double<ept id=\"p1\">](double.md)</ept>","source":"[double](double.md)"},{"pos":[935,952],"content":"<bpt id=\"p1\">[</bpt>float<ept id=\"p1\">](float.md)</ept>","source":"[float](float.md)"},{"pos":[1007,1020],"content":"<bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](int.md)</ept>","source":"[int](int.md)"},{"pos":[1074,1089],"content":"<bpt id=\"p1\">[</bpt>uint<ept id=\"p1\">](uint.md)</ept>","source":"[uint](uint.md)"},{"pos":[1144,1159],"content":"<bpt id=\"p1\">[</bpt>long<ept id=\"p1\">](long.md)</ept>","source":"[long](long.md)"},{"pos":[1213,1230],"content":"<bpt id=\"p1\">[</bpt>ulong<ept id=\"p1\">](ulong.md)</ept>","source":"[ulong](ulong.md)"},{"pos":[1285,1304],"content":"<bpt id=\"p1\">[</bpt>object<ept id=\"p1\">](object.md)</ept>","source":"[object](object.md)"},{"pos":[1359,1376],"content":"<bpt id=\"p1\">[</bpt>short<ept id=\"p1\">](short.md)</ept>","source":"[short](short.md)"},{"pos":[1430,1449],"content":"<bpt id=\"p1\">[</bpt>ushort<ept id=\"p1\">](ushort.md)</ept>","source":"[ushort](ushort.md)"},{"pos":[1504,1523],"content":"<bpt id=\"p1\">[</bpt>string<ept id=\"p1\">](string.md)</ept>","source":"[string](string.md)"},{"pos":[1583,1590],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1592,1685],"content":"All of the types in the table, except <ph id=\"ph1\">`object`</ph> and <ph id=\"ph2\">`string`</ph>, are referred to as simple types.","source":"All of the types in the table, except `object` and `string`, are referred to as simple types."},{"content":"The C# type keywords and their aliases are interchangeable.","pos":[1691,1750]},{"content":"For example, you can declare an integer variable by using either of the following declarations:","pos":[1751,1846]},{"pos":[1900,2040],"content":"Use the <bpt id=\"p1\">[</bpt>typeof<ept id=\"p1\">](typeof.md)</ept> operator to get the <ph id=\"ph1\">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> instance that represents the specified type:","source":"Use the [typeof](typeof.md) operator to get the <xref:System.Type?displayProperty=nameWithType> instance that represents the specified type:"},{"pos":[2262,2270],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2274,2333],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept>","source":"[C# Reference](../../../csharp/language-reference/index.md)"},{"pos":[2336,2402],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[2405,2428],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[2431,2490],"content":"<bpt id=\"p1\">[</bpt>Reference tables for types<ept id=\"p1\">](reference-tables-for-types.md)</ept>","source":"[Reference tables for types](reference-tables-for-types.md)"},{"pos":[2493,2522],"content":"<bpt id=\"p1\">[</bpt>Value types<ept id=\"p1\">](value-types.md)</ept>","source":"[Value types](value-types.md)"},{"pos":[2525,2562],"content":"<bpt id=\"p1\">[</bpt>Reference types<ept id=\"p1\">](reference-types.md)</ept>","source":"[Reference types](reference-types.md)"},{"pos":[2565,2612],"content":"<bpt id=\"p1\">[</bpt>Default values table<ept id=\"p1\">](default-values-table.md)</ept>","source":"[Default values table](default-values-table.md)"},{"pos":[2615,2636],"content":"<bpt id=\"p1\">[</bpt>dynamic<ept id=\"p1\">](dynamic.md)</ept>","source":"[dynamic](dynamic.md)"}]}