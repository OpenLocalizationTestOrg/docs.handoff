{"content":"---\ntitle: dotnet-nuget-push command - .NET Core CLI | Microsoft Docs\ndescription: The dotnet-nuget-push command pushes a package to the server and publishes it. \nkeywords: dotnet-nuget-push, CLI, CLI command, .NET Core\nauthor: karann-msft\nms.author: mairaw\nms.date: 03/15/2017\nms.topic: article\nms.prod: .net-core\nms.technology: dotnet-cli\nms.devlang: dotnet\nms.assetid: f54d9adf-94f8-41cc-bb52-42f7ca3be6ff\n---\n\n# dotnet-nuget push\n\n## Name\n\n`dotnet-nuget push` - Pushes a package to the server and publishes it.\n\n## Synopsis\n\n`dotnet nuget push [<ROOT>] [-s|--source] [-ss|--symbol-source] [-t|--timeout] [-k|--api-key] [-sk|--symbol-api-key] [-d|--disable-buffering] [-n|--no-symbols] [--force-english-output] [-h|--help]`\n\n## Description\n\nThe `dotnet nuget push` command pushes a package to the server and publishes it. The push command uses server and credential details found in the system's NuGet config file or chain of config files. For more information on config files, see [Configuring NuGet Behavior](https://docs.microsoft.com/nuget/consume-packages/configuring-nuget-behavior). NuGet's default configuration is obtained by loading *%AppData%\\NuGet\\NuGet.config* (Windows) or *$HOME/.local/share* (Linux/macOS), then loading any *nuget.config* or *.nuget\\nuget.config* starting from the root of drive and ending in the current directory.\n\n## Arguments\n\n`ROOT`\n\nSpecify the path to the package and your API key to push the package to the server.\n\n## Options\n\n`-h|--help`\n\nPrints out a short help for the command.  \n\n`-s|--source <SOURCE>`\n\nSpecifies the server URL. This option is required unless `DefaultPushSource` config value is set in the NuGet config file.\n\n`--symbols-source <SOURCE>`\n\nSpecifies the symbol server URL.\n\n`-t|--timeout <TIMEOUT>`\n\nSpecifies the timeout for pushing to a server in seconds. Defaults to 300 seconds (5 minutes). Specifying 0 (zero seconds) applies the default value.\n\n`-k|--api-key <API_KEY>`\n\nThe API key for the server.\n\n`--symbol-api-key <API_KEY>`\n\nThe API key for the symbol server.\n\n`-d|--disable-buffering`\n\nDisables buffering when pushing to an HTTP(S) server to decrease memory usage.\n\n`-n|--no-symbols`\n\nDoesn't push symbols (even if present).\n\n`--force-english-output`\n\nForces all logged output in English.\n\n## Examples\n\nPushes *foo.nupkg* to the default push source, providing an API key:\n\n`dotnet nuget push foo.nupkg -k 4003d786-cc37-4004-bfdf-c4f3e8ef9b3a`\n\nPush *foo.nupkg* to the custom push source `http://customsource`, providing an API key:\n\n`dotnet nuget push foo.nupkg -k 4003d786-cc37-4004-bfdf-c4f3e8ef9b3a -s http://customsource/` \n\nPushes *foo.nupkg* to the default push source:\n\n`dotnet nuget push foo.nupkg` \n\nPushes *foo.symbols.nupkg* to the default symbols source:\n\n`dotnet nuget push foo.symbols.nupkg`\n\nPushes *foo.nupkg* to the default push source, specifying a 360 second timeout:\n\n`dotnet nuget push foo.nupkg --timeout 360`\n\nPushes all *.nupkg* files in the current directory to the default push source:\n\n`dotnet nuget push *.nupkg`\n\nPushes all *.nupkg* files in the current directory to the default push source, specifying a custom config file *./config/My.Config*:\n\n`dotnet nuget push *.nupkg --config-file ./config/My.Config`\n\nPush all *.nupkg* files in the current directory to the default push source with maximum verbosity:\n\n`dotnet nuget push *.nupkg --verbosity detailed`\n","nodes":[{"pos":[11,69],"content":"dotnet-nuget-push command - .NET Core CLI | Microsoft Docs","needQuote":true,"needEscape":true,"nodes":[{"content":"dotnet-nuget-push command - .NET Core CLI | Microsoft Docs","pos":[0,58]}]},{"pos":[83,161],"content":"The dotnet-nuget-push command pushes a package to the server and publishes it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dotnet-nuget-push command pushes a package to the server and publishes it.","pos":[0,78]}]},{"pos":[173,219],"content":"dotnet-nuget-push, CLI, CLI command, .NET Core","needQuote":true,"needEscape":true,"nodes":[{"content":"dotnet-nuget-push, CLI, CLI command, .NET Core","pos":[0,46]}]},{"pos":[416,433],"content":"dotnet-nuget push","linkify":"dotnet-nuget push","nodes":[{"content":"dotnet-nuget push","pos":[0,17]}]},{"pos":[438,442],"content":"Name","linkify":"Name","nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[444,514],"content":"<ph id=\"ph1\">`dotnet-nuget push`</ph> - Pushes a package to the server and publishes it.","source":"`dotnet-nuget push` - Pushes a package to the server and publishes it."},{"pos":[519,527],"content":"Synopsis","linkify":"Synopsis","nodes":[{"content":"Synopsis","pos":[0,8]}]},{"pos":[731,742],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"content":"The <ph id=\"ph1\">`dotnet nuget push`</ph> command pushes a package to the server and publishes it.","pos":[744,824],"source":"The `dotnet nuget push` command pushes a package to the server and publishes it."},{"content":"The push command uses server and credential details found in the system's NuGet config file or chain of config files.","pos":[825,942]},{"content":"For more information on config files, see <bpt id=\"p1\">[</bpt>Configuring NuGet Behavior<ept id=\"p1\">](https://docs.microsoft.com/nuget/consume-packages/configuring-nuget-behavior)</ept>.","pos":[943,1092],"source":" For more information on config files, see [Configuring NuGet Behavior](https://docs.microsoft.com/nuget/consume-packages/configuring-nuget-behavior)."},{"content":"NuGet's default configuration is obtained by loading <bpt id=\"p1\">*</bpt>%AppData%\\NuGet\\NuGet.config<ept id=\"p1\">*</ept> (Windows) or <bpt id=\"p2\">*</bpt>$HOME/.local/share<ept id=\"p2\">*</ept> (Linux/macOS), then loading any <bpt id=\"p3\">*</bpt>nuget.config<ept id=\"p3\">*</ept> or <bpt id=\"p4\">*</bpt>.nuget\\nuget.config<ept id=\"p4\">*</ept> starting from the root of drive and ending in the current directory.","pos":[1093,1351],"source":" NuGet's default configuration is obtained by loading *%AppData%\\NuGet\\NuGet.config* (Windows) or *$HOME/.local/share* (Linux/macOS), then loading any *nuget.config* or *.nuget\\nuget.config* starting from the root of drive and ending in the current directory."},{"pos":[1356,1365],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"Specify the path to the package and your API key to push the package to the server.","pos":[1375,1458]},{"pos":[1463,1470],"content":"Options","linkify":"Options","nodes":[{"content":"Options","pos":[0,7]}]},{"content":"Prints out a short help for the command.","pos":[1485,1525]},{"content":"Specifies the server URL.","pos":[1553,1578]},{"content":"This option is required unless <ph id=\"ph1\">`DefaultPushSource`</ph> config value is set in the NuGet config file.","pos":[1579,1675],"source":" This option is required unless `DefaultPushSource` config value is set in the NuGet config file."},{"content":"Specifies the symbol server URL.","pos":[1706,1738]},{"content":"Specifies the timeout for pushing to a server in seconds.","pos":[1766,1823]},{"content":"Defaults to 300 seconds (5 minutes).","pos":[1824,1860]},{"content":"Specifying 0 (zero seconds) applies the default value.","pos":[1861,1915]},{"content":"The API key for the server.","pos":[1943,1970]},{"content":"The API key for the symbol server.","pos":[2002,2036]},{"content":"Disables buffering when pushing to an HTTP(S) server to decrease memory usage.","pos":[2064,2142]},{"content":"Doesn't push symbols (even if present).","pos":[2163,2202]},{"content":"Forces all logged output in English.","pos":[2230,2266]},{"pos":[2271,2279],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[2281,2349],"content":"Pushes <bpt id=\"p1\">*</bpt>foo.nupkg<ept id=\"p1\">*</ept> to the default push source, providing an API key:","source":"Pushes *foo.nupkg* to the default push source, providing an API key:"},{"pos":[2422,2509],"content":"Push <bpt id=\"p1\">*</bpt>foo.nupkg<ept id=\"p1\">*</ept> to the custom push source <ph id=\"ph1\">`http://customsource`</ph>, providing an API key:","source":"Push *foo.nupkg* to the custom push source `http://customsource`, providing an API key:"},{"pos":[2607,2653],"content":"Pushes <bpt id=\"p1\">*</bpt>foo.nupkg<ept id=\"p1\">*</ept> to the default push source:","source":"Pushes *foo.nupkg* to the default push source:"},{"pos":[2687,2744],"content":"Pushes <bpt id=\"p1\">*</bpt>foo.symbols.nupkg<ept id=\"p1\">*</ept> to the default symbols source:","source":"Pushes *foo.symbols.nupkg* to the default symbols source:"},{"pos":[2785,2864],"content":"Pushes <bpt id=\"p1\">*</bpt>foo.nupkg<ept id=\"p1\">*</ept> to the default push source, specifying a 360 second timeout:","source":"Pushes *foo.nupkg* to the default push source, specifying a 360 second timeout:"},{"pos":[2911,2989],"content":"Pushes all <bpt id=\"p1\">*</bpt>.nupkg<ept id=\"p1\">*</ept> files in the current directory to the default push source:","source":"Pushes all *.nupkg* files in the current directory to the default push source:"},{"pos":[3020,3152],"content":"Pushes all <bpt id=\"p1\">*</bpt>.nupkg<ept id=\"p1\">*</ept> files in the current directory to the default push source, specifying a custom config file <bpt id=\"p2\">*</bpt>./config/My.Config<ept id=\"p2\">*</ept>:","source":"Pushes all *.nupkg* files in the current directory to the default push source, specifying a custom config file *./config/My.Config*:"},{"pos":[3216,3315],"content":"Push all <bpt id=\"p1\">*</bpt>.nupkg<ept id=\"p1\">*</ept> files in the current directory to the default push source with maximum verbosity:","source":"Push all *.nupkg* files in the current directory to the default push source with maximum verbosity:"}]}