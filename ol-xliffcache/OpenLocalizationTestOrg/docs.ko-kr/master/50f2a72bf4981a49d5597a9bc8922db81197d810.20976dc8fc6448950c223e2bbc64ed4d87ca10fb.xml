{"content":"---\ntitle: \"Interoperability - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"COM interop\"\n  - \"interoperability\"\n  - \"platform invoke, accessing APIs with C#\"\n  - \"C# language, interoperability\"\nms.assetid: 238bb95a-e962-4026-bbd5-197055bdb8ee\n---\n# Interoperability (C# Programming Guide)\nInteroperability enables you to preserve and take advantage of existing investments in unmanaged code. Code that runs under the control of the common language runtime (CLR) is called *managed code*, and code that runs outside the CLR is called *unmanaged code*. COM, COM+, C++ components, ActiveX components, and Microsoft Windows API are examples of unmanaged code.  \n  \n The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] enables interoperability with unmanaged code through platform invoke services, the <xref:System.Runtime.InteropServices> namespace, C++ interoperability, and COM interoperability (COM interop).  \n  \n## In This Section  \n [Interoperability Overview](../../../csharp/programming-guide/interop/interoperability-overview.md)  \n Describes methods to interoperate between C# managed code and unmanaged code.  \n  \n [How to: Access Office Interop Objects by Using Visual C# Features](../../../csharp/programming-guide/interop/how-to-access-office-onterop-objects.md)  \n Describes features that are introduced in Visual C# to facilitate Office programming.  \n  \n [How to: Use Indexed Properties in COM Interop Programming](../../../csharp/programming-guide/interop/how-to-use-indexed-properties-in-com-interop-rogramming.md)  \n Describes how to use indexed properties to access COM properties that have parameters.  \n  \n [How to: Use Platform Invoke to Play a Wave File](../../../csharp/programming-guide/interop/how-to-use-platform-invoke-to-play-a-wave-file.md)  \n Describes how to use platform invoke services to play a .wav sound file on the Windows operating system.  \n  \n [Walkthrough: Office Programming](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)  \n Shows how to create an Excel workbook and a Word document that contains a link to the workbook.  \n  \n [Example COM Class](../../../csharp/programming-guide/interop/example-com-class.md)  \n Demonstrates how to expose a C# class as a COM object.  \n  \n## C# Language Specification  \n\nFor more information, see [Basic concepts](~/_csharplang/spec/unsafe-code.md) in the [C# Language Specification](../../language-reference/language-specification/index.md). The language specification is the definitive source for C# syntax and usage.\n  \n## See also\n\n- <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A?displayProperty=nameWithType>\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Interoperating with Unmanaged Code](../../../../docs/framework/interop/index.md)\n- [Walkthrough: Office Programming](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)\n","nodes":[{"pos":[4,286],"embed":true,"restype":"x-metadata","content":"title: \"Interoperability - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"COM interop\"\n  - \"interoperability\"\n  - \"platform invoke, accessing APIs with C#\"\n  - \"C# language, interoperability\"\nms.assetid: 238bb95a-e962-4026-bbd5-197055bdb8ee","nodes":[{"content":"Interoperability - C# Programming Guide","nodes":[{"pos":[0,39],"content":"Interoperability - C# Programming Guide","nodes":[{"content":"Interoperability - C# Programming Guide","pos":[0,39]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[293,332],"content":"Interoperability (C# Programming Guide)","linkify":"Interoperability (C# Programming Guide)","nodes":[{"content":"Interoperability (C# Programming Guide)","pos":[0,39]}]},{"content":"Interoperability enables you to preserve and take advantage of existing investments in unmanaged code.","pos":[333,435]},{"content":"Code that runs under the control of the common language runtime (CLR) is called <bpt id=\"p1\">*</bpt>managed code<ept id=\"p1\">*</ept>, and code that runs outside the CLR is called <bpt id=\"p2\">*</bpt>unmanaged code<ept id=\"p2\">*</ept>.","pos":[436,594],"source":" Code that runs under the control of the common language runtime (CLR) is called *managed code*, and code that runs outside the CLR is called *unmanaged code*."},{"content":"COM, COM+, C++ components, ActiveX components, and Microsoft Windows API are examples of unmanaged code.","pos":[595,699]},{"pos":[706,957],"content":"The <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> enables interoperability with unmanaged code through platform invoke services, the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices&gt;</ph> namespace, C++ interoperability, and COM interoperability (COM interop).","source":"The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] enables interoperability with unmanaged code through platform invoke services, the <xref:System.Runtime.InteropServices> namespace, C++ interoperability, and COM interoperability (COM interop)."},{"pos":[966,981],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Interoperability Overview<ept id=\"p1\">](../../../csharp/programming-guide/interop/interoperability-overview.md)</ept>","pos":[985,1084],"source":"[Interoperability Overview](../../../csharp/programming-guide/interop/interoperability-overview.md)"},{"content":"Describes methods to interoperate between C# managed code and unmanaged code.","pos":[1088,1165]},{"content":"<bpt id=\"p1\">[</bpt>How to: Access Office Interop Objects by Using Visual C# Features<ept id=\"p1\">](../../../csharp/programming-guide/interop/how-to-access-office-onterop-objects.md)</ept>","pos":[1172,1322],"source":"[How to: Access Office Interop Objects by Using Visual C# Features](../../../csharp/programming-guide/interop/how-to-access-office-onterop-objects.md)"},{"content":"Describes features that are introduced in Visual C# to facilitate Office programming.","pos":[1326,1411]},{"content":"<bpt id=\"p1\">[</bpt>How to: Use Indexed Properties in COM Interop Programming<ept id=\"p1\">](../../../csharp/programming-guide/interop/how-to-use-indexed-properties-in-com-interop-rogramming.md)</ept>","pos":[1418,1579],"source":"[How to: Use Indexed Properties in COM Interop Programming](../../../csharp/programming-guide/interop/how-to-use-indexed-properties-in-com-interop-rogramming.md)"},{"content":"Describes how to use indexed properties to access COM properties that have parameters.","pos":[1583,1669]},{"content":"<bpt id=\"p1\">[</bpt>How to: Use Platform Invoke to Play a Wave File<ept id=\"p1\">](../../../csharp/programming-guide/interop/how-to-use-platform-invoke-to-play-a-wave-file.md)</ept>","pos":[1676,1818],"source":"[How to: Use Platform Invoke to Play a Wave File](../../../csharp/programming-guide/interop/how-to-use-platform-invoke-to-play-a-wave-file.md)"},{"content":"Describes how to use platform invoke services to play a .wav sound file on the Windows operating system.","pos":[1822,1926]},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Office Programming<ept id=\"p1\">](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)</ept>","pos":[1933,2043],"source":"[Walkthrough: Office Programming](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)"},{"content":"Shows how to create an Excel workbook and a Word document that contains a link to the workbook.","pos":[2047,2142]},{"content":"<bpt id=\"p1\">[</bpt>Example COM Class<ept id=\"p1\">](../../../csharp/programming-guide/interop/example-com-class.md)</ept>","pos":[2149,2232],"source":"[Example COM Class](../../../csharp/programming-guide/interop/example-com-class.md)"},{"content":"Demonstrates how to expose a C# class as a COM object.","pos":[2236,2290]},{"pos":[2299,2324],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Basic concepts<ept id=\"p1\">](~/_csharplang/spec/unsafe-code.md)</ept> in the <bpt id=\"p2\">[</bpt>C# Language Specification<ept id=\"p2\">](../../language-reference/language-specification/index.md)</ept>.","pos":[2328,2499],"source":"For more information, see [Basic concepts](~/_csharplang/spec/unsafe-code.md) in the [C# Language Specification](../../language-reference/language-specification/index.md)."},{"content":"The language specification is the definitive source for C# syntax and usage.","pos":[2500,2576]},{"pos":[2583,2591],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2692,2758],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[2761,2842],"content":"<bpt id=\"p1\">[</bpt>Interoperating with Unmanaged Code<ept id=\"p1\">](../../../../docs/framework/interop/index.md)</ept>","source":"[Interoperating with Unmanaged Code](../../../../docs/framework/interop/index.md)"},{"pos":[2845,2955],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Office Programming<ept id=\"p1\">](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)</ept>","source":"[Walkthrough: Office Programming](../../../csharp/programming-guide/interop/walkthrough-office-programming.md)"}]}