<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">276f94ae06014f6bd0aec7ed41daaae4252ce499</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\discovery-with-scopes-sample.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df32f0d86219674ba1ddefae8783ee4290719868</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6d62208f5861c85245ccdb935500218324e97ba</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Discovery with Scopes Sample | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Discovery with Scopes Sample</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample shows how to use scopes to categorize discoverable endpoints as well how to use <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> to perform an asynchronous search for endpoints.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>On the service, this sample shows how to customize discovery for each endpoint by adding an endpoint discovery behavior and using it to add a scope to the endpoint as well as controlling the endpointâ€™s discoverability.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>On the client, the sample goes over how clients can create a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> and fine tune search parameters to include scopes by adding scopes to the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.FindCriteria&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This sample also shows how clients can restrict responses by adding a termination criterion.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Service Features</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This project shows two service endpoints being added to a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each endpoint has a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryBehavior&gt;</ph> associated with it.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This behavior is used to add URI scopes for both endpoints.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Scopes are used to distinguish each of these endpoints so that the clients can fine tune the search.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For the second endpoint, the discoverability can be disabled by setting the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This ensures that the discovery metadata associated with this endpoint is not sent as part of any discovery messages.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Client Features</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FindCalculatorServiceAddress()`</ph> method shows how to use a <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> and pass in a <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.FindCriteria&gt;</ph> with two restrictions.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A scope is added to the criteria and the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria.MaxResults%2A&gt;</ph> property is set to 1.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The scope limits the results to only the services that publish the same scope.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria.MaxResults%2A&gt;</ph> to 1 limits the responses the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> waits for to, at most, 1 endpoint.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Find%2A&gt;</ph> call is a synchronous operation that blocks the thread until a timeout is reached or one endpoint is found.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This sample uses HTTP endpoints and to run this sample, proper URL ACLs must be added.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Configuring HTTP and HTTPS<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=70353)</ept> for details.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Executing the following command at an elevated privilege should add the appropriate ACLs.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You may want to substitute your Domain and Username for the following arguments if the command does not work as is: <ph id="ph1">`netsh http add urlacl url=http://+:8000/ user=%DOMAIN%\%UserName%`</ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Build the solution.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Run the service executable from the build directory.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Run the client executable.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Note that the client is able to locate the service.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>