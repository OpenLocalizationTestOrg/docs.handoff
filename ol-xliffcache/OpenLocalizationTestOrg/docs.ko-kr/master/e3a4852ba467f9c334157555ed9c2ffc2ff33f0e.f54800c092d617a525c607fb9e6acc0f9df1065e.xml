{"content":"---\ntitle: \"Client\"\nms.date: \"03/30/2017\"\nms.assetid: fabb0c70-b79b-4e58-a5d3-9705de85ee5b\n---\n# Client\nThis section contains samples that demonstrate Windows Communication Foundation (WCF) client applications.  \n  \n## In This Section  \n [Client Interoperability](../../../../docs/framework/wcf/samples/client-interoperability.md)  \n Demonstrates interoperability between WCF and other technologies.  \n  \n [Address Headers](../../../../docs/framework/wcf/samples/address-headers.md)  \n Demonstrates how clients can pass reference parameters to a service using WCF.  \n  \n [Channel Factory](../../../../docs/framework/wcf/samples/channel-factory.md)  \n Demonstrates how a client application can create a channel with the <xref:System.ServiceModel.ChannelFactory> class instead of a generated client.  \n  \n [Expected Exceptions](../../../../docs/framework/wcf/samples/expected-exceptions.md)  \n Demonstrates how to catch expected exceptions when using a typed client.  \n  \n [Retrieve Metadata](../../../../docs/framework/wcf/samples/retrieve-metadata.md)  \n Demonstrates how to implement a client that dynamically retrieves metadata from a service to choose an endpoint with which to communicate.  \n  \n [Use Close and Abort to release WCF client resources](../../../../docs/framework/wcf/samples/use-close-abort-release-wcf-client-resources.md)  \n Demonstrates how you should not use the C# \"using\" statement to automatically clean up resources when using a typed client.  \n  \n [Typed Client](../../../../docs/framework/wcf/samples/typed-client.md)  \n Demonstrates how to obtain information from a typed client generated by the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).\n","nodes":[{"pos":[4,90],"embed":true,"restype":"x-metadata","content":"title: \"Client\"\nms.date: \"03/30/2017\"\nms.assetid: fabb0c70-b79b-4e58-a5d3-9705de85ee5b","nodes":[{"content":"Client","nodes":[{"pos":[0,6],"content":"Client","nodes":[{"content":"Client","pos":[0,6]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[97,103],"content":"Client","linkify":"Client","nodes":[{"content":"Client","pos":[0,6]}]},{"content":"This section contains samples that demonstrate Windows Communication Foundation (WCF) client applications.","pos":[104,210]},{"pos":[219,234],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Client Interoperability<ept id=\"p1\">](../../../../docs/framework/wcf/samples/client-interoperability.md)</ept>","pos":[238,330],"source":"[Client Interoperability](../../../../docs/framework/wcf/samples/client-interoperability.md)"},{"content":"Demonstrates interoperability between WCF and other technologies.","pos":[334,399]},{"content":"<bpt id=\"p1\">[</bpt>Address Headers<ept id=\"p1\">](../../../../docs/framework/wcf/samples/address-headers.md)</ept>","pos":[406,482],"source":"[Address Headers](../../../../docs/framework/wcf/samples/address-headers.md)"},{"content":"Demonstrates how clients can pass reference parameters to a service using WCF.","pos":[486,564]},{"content":"<bpt id=\"p1\">[</bpt>Channel Factory<ept id=\"p1\">](../../../../docs/framework/wcf/samples/channel-factory.md)</ept>","pos":[571,647],"source":"[Channel Factory](../../../../docs/framework/wcf/samples/channel-factory.md)"},{"content":"Demonstrates how a client application can create a channel with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> class instead of a generated client.","pos":[651,797],"source":"Demonstrates how a client application can create a channel with the <xref:System.ServiceModel.ChannelFactory> class instead of a generated client."},{"content":"<bpt id=\"p1\">[</bpt>Expected Exceptions<ept id=\"p1\">](../../../../docs/framework/wcf/samples/expected-exceptions.md)</ept>","pos":[804,888],"source":"[Expected Exceptions](../../../../docs/framework/wcf/samples/expected-exceptions.md)"},{"content":"Demonstrates how to catch expected exceptions when using a typed client.","pos":[892,964]},{"content":"<bpt id=\"p1\">[</bpt>Retrieve Metadata<ept id=\"p1\">](../../../../docs/framework/wcf/samples/retrieve-metadata.md)</ept>","pos":[971,1051],"source":"[Retrieve Metadata](../../../../docs/framework/wcf/samples/retrieve-metadata.md)"},{"content":"Demonstrates how to implement a client that dynamically retrieves metadata from a service to choose an endpoint with which to communicate.","pos":[1055,1193]},{"content":"<bpt id=\"p1\">[</bpt>Use Close and Abort to release WCF client resources<ept id=\"p1\">](../../../../docs/framework/wcf/samples/use-close-abort-release-wcf-client-resources.md)</ept>","pos":[1200,1341],"source":"[Use Close and Abort to release WCF client resources](../../../../docs/framework/wcf/samples/use-close-abort-release-wcf-client-resources.md)"},{"content":"Demonstrates how you should not use the C# \"using\" statement to automatically clean up resources when using a typed client.","pos":[1345,1468]},{"content":"<bpt id=\"p1\">[</bpt>Typed Client<ept id=\"p1\">](../../../../docs/framework/wcf/samples/typed-client.md)</ept>","pos":[1475,1545],"source":"[Typed Client](../../../../docs/framework/wcf/samples/typed-client.md)"},{"content":"Demonstrates how to obtain information from a typed client generated by the <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.","pos":[1549,1758],"source":"Demonstrates how to obtain information from a typed client generated by the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)."}]}