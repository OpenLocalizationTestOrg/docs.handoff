{"content":"---\ntitle: \"How to: Query for Files with a Specified Attribute or Name (C#)\"\nms.date: 07/20/2015\nms.assetid: 560e3879-b0b3-4549-ad02-0a53aff2f83c\n---\n# How to: Query for Files with a Specified Attribute or Name (C#)\nThis example shows how to find all files that have a specified file name extension (for example \".txt\") in a specified directory tree. It also shows how to return either the newest or oldest file in the tree based on the creation time.  \n  \n## Example  \n  \n```csharp  \nclass FindFileByExtension  \n{  \n    // This query will produce the full path for all .txt files  \n    // under the specified folder including subfolders.  \n    // It orders the list according to the file name.  \n    static void Main()  \n    {  \n        string startFolder = @\"c:\\program files\\Microsoft Visual Studio 9.0\\\";  \n  \n        // Take a snapshot of the file system.  \n        System.IO.DirectoryInfo dir = new System.IO.DirectoryInfo(startFolder);  \n  \n        // This method assumes that the application has discovery permissions  \n        // for all folders under the specified path.  \n        IEnumerable<System.IO.FileInfo> fileList = dir.GetFiles(\"*.*\", System.IO.SearchOption.AllDirectories);  \n  \n        //Create the query  \n        IEnumerable<System.IO.FileInfo> fileQuery =  \n            from file in fileList  \n            where file.Extension == \".txt\"  \n            orderby file.Name  \n            select file;  \n  \n        //Execute the query. This might write out a lot of files!  \n        foreach (System.IO.FileInfo fi in fileQuery)  \n        {  \n            Console.WriteLine(fi.FullName);  \n        }  \n  \n        // Create and execute a new query by using the previous   \n        // query as a starting point. fileQuery is not   \n        // executed again until the call to Last()  \n        var newestFile =  \n            (from file in fileQuery  \n             orderby file.CreationTime  \n             select new { file.FullName, file.CreationTime })  \n            .Last();  \n  \n        Console.WriteLine(\"\\r\\nThe newest .txt file is {0}. Creation time: {1}\",  \n            newestFile.FullName, newestFile.CreationTime);  \n  \n        // Keep the console window open in debug mode.  \n        Console.WriteLine(\"Press any key to exit\");  \n        Console.ReadKey();  \n    }  \n}  \n```  \n  \n## Compiling the Code  \n Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to   System.Core.dll and `using` directives for the System.Linq and System.IO namespaces.  \n  \n## See also\n\n- [LINQ to Objects (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-objects.md)\n- [LINQ and File Directories (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)\n","nodes":[{"pos":[4,145],"embed":true,"restype":"x-metadata","content":"title: \"How to: Query for Files with a Specified Attribute or Name (C#)\"\nms.date: 07/20/2015\nms.assetid: 560e3879-b0b3-4549-ad02-0a53aff2f83c","nodes":[{"content":"How to: Query for Files with a Specified Attribute or Name (C#)","nodes":[{"pos":[0,63],"content":"How to: Query for Files with a Specified Attribute or Name (C#)","nodes":[{"content":"How to: Query for Files with a Specified Attribute or Name (C#)","pos":[0,63]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[152,215],"content":"How to: Query for Files with a Specified Attribute or Name (C#)","linkify":"How to: Query for Files with a Specified Attribute or Name (C#)","nodes":[{"content":"How to: Query for Files with a Specified Attribute or Name (C#)","pos":[0,63]}]},{"content":"This example shows how to find all files that have a specified file name extension (for example \".txt\") in a specified directory tree.","pos":[216,350]},{"content":"It also shows how to return either the newest or oldest file in the tree based on the creation time.","pos":[351,451]},{"pos":[460,467],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2306,2324],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[2328,2507],"content":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to   System.Core.dll and <ph id=\"ph1\">`using`</ph> directives for the System.Linq and System.IO namespaces.","source":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to   System.Core.dll and `using` directives for the System.Linq and System.IO namespaces."},{"pos":[2516,2524],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2528,2621],"content":"<bpt id=\"p1\">[</bpt>LINQ to Objects (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-to-objects.md)</ept>","source":"[LINQ to Objects (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-objects.md)"},{"pos":[2624,2737],"content":"<bpt id=\"p1\">[</bpt>LINQ and File Directories (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)</ept>","source":"[LINQ and File Directories (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)"}]}