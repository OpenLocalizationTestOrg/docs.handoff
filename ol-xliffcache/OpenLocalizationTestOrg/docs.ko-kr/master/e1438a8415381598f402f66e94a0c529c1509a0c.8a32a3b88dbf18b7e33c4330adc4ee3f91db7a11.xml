{"content":"---\ntitle: \"Single-Dimensional Arrays (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"single-dimensional arrays [C#]\"\n  - \"arrays [C#], single-dimensional\"\nms.assetid: 2cec1196-1de0-49d2-baf2-c607c33310e8\ncaps.latest.revision: 18\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Single-Dimensional Arrays (C# Programming Guide)\nYou can declare a single-dimensional array of five integers as shown in the following example:  \n  \n [!code-cs[csProgGuideArrays#4](../../../csharp/programming-guide/arrays/codesnippet/CSharp/single-dimensional-arrays_1.cs)]  \n  \n This array contains the elements from `array[0]` to `array[4]`. The [new](../../../csharp/language-reference/keywords/new.md) operator is used to create the array and initialize the array elements to their default values. In this example, all the array elements are initialized to zero.  \n  \n An array that stores string elements can be declared in the same way. For example:  \n  \n [!code-cs[csProgGuideArrays#5](../../../csharp/programming-guide/arrays/codesnippet/CSharp/single-dimensional-arrays_2.cs)]  \n  \n## Array Initialization  \n It is possible to initialize an array upon declaration, in which case, the rank specifier is not needed because it is already supplied by the number of elements in the initialization list. For example:  \n  \n [!code-cs[csProgGuideArrays#6](../../../csharp/programming-guide/arrays/codesnippet/CSharp/single-dimensional-arrays_3.cs)]  \n  \n A string array can be initialized in the same way. The following is a declaration of a string array where each array element is initialized by a name of a day:  \n  \n [!code-cs[csProgGuideArrays#7](../../../csharp/programming-guide/arrays/codesnippet/CSharp/single-dimensional-arrays_4.cs)]  \n  \n When you initialize an array upon declaration, you can use the following shortcuts:  \n  \n [!code-cs[csProgGuideArrays#8](../../../csharp/programming-guide/arrays/codesnippet/CSharp/single-dimensional-arrays_5.cs)]  \n  \n It is possible to declare an array variable without initialization, but you must use the `new` operator when you assign an array to this variable. For example:  \n  \n [!code-cs[csProgGuideArrays#9](../../../csharp/programming-guide/arrays/codesnippet/CSharp/single-dimensional-arrays_6.cs)]  \n  \n C# 3.0 introduces implicitly typed arrays. For more information, see [Implicitly Typed Arrays](../../../csharp/programming-guide/arrays/implicitly-typed-arrays.md).  \n  \n## Value Type and Reference Type Arrays  \n Consider the following array declaration:  \n  \n [!code-cs[csProgGuideArrays#10](../../../csharp/programming-guide/arrays/codesnippet/CSharp/single-dimensional-arrays_7.cs)]  \n  \n The result of this statement depends on whether `SomeType` is a value type or a reference type. If it is a value type, the statement creates an array of 10 elements, each of which has the type `SomeType`. If `SomeType` is a reference type, the statement creates an array of 10 elements, each of which is initialized to a null reference.  \n  \n For more information about value types and reference types, see [Types](../../../csharp/language-reference/keywords/types.md).  \n  \n## See Also  \n <xref:System.Array>   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Arrays](../../../csharp/programming-guide/arrays/index.md)   \n [Multidimensional Arrays](../../../csharp/programming-guide/arrays/multidimensional-arrays.md)   \n [Jagged Arrays](../../../csharp/programming-guide/arrays/jagged-arrays.md)","nodes":[{"pos":[4,595],"embed":true,"restype":"x-metadata","content":"title: \"Single-Dimensional Arrays (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"single-dimensional arrays [C#]\"\n  - \"arrays [C#], single-dimensional\"\nms.assetid: 2cec1196-1de0-49d2-baf2-c607c33310e8\ncaps.latest.revision: 18\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"Single-Dimensional Arrays (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,65],"content":"Single-Dimensional Arrays (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"Single-Dimensional Arrays (C# Programming Guide) | Microsoft Docs","pos":[0,65]}]}],"path":["title"]}],"yml":true},{"pos":[602,650],"content":"Single-Dimensional Arrays (C# Programming Guide)","linkify":"Single-Dimensional Arrays (C# Programming Guide)","nodes":[{"content":"Single-Dimensional Arrays (C# Programming Guide)","pos":[0,48]}]},{"content":"You can declare a single-dimensional array of five integers as shown in the following example:","pos":[651,745]},{"content":"This array contains the elements from <ph id=\"ph1\">`array[0]`</ph> to <ph id=\"ph2\">`array[4]`</ph>.","pos":[882,945],"source":"This array contains the elements from `array[0]` to `array[4]`."},{"content":"The <bpt id=\"p1\">[</bpt>new<ept id=\"p1\">](../../../csharp/language-reference/keywords/new.md)</ept> operator is used to create the array and initialize the array elements to their default values.","pos":[946,1103],"source":" The [new](../../../csharp/language-reference/keywords/new.md) operator is used to create the array and initialize the array elements to their default values."},{"content":"In this example, all the array elements are initialized to zero.","pos":[1104,1168]},{"content":"An array that stores string elements can be declared in the same way.","pos":[1175,1244]},{"content":"For example:","pos":[1245,1257]},{"pos":[1396,1416],"content":"Array Initialization","linkify":"Array Initialization","nodes":[{"content":"Array Initialization","pos":[0,20]}]},{"content":"It is possible to initialize an array upon declaration, in which case, the rank specifier is not needed because it is already supplied by the number of elements in the initialization list.","pos":[1420,1608]},{"content":"For example:","pos":[1609,1621]},{"content":"A string array can be initialized in the same way.","pos":[1758,1808]},{"content":"The following is a declaration of a string array where each array element is initialized by a name of a day:","pos":[1809,1917]},{"content":"When you initialize an array upon declaration, you can use the following shortcuts:","pos":[2054,2137]},{"content":"It is possible to declare an array variable without initialization, but you must use the <ph id=\"ph1\">`new`</ph> operator when you assign an array to this variable.","pos":[2274,2420],"source":"It is possible to declare an array variable without initialization, but you must use the `new` operator when you assign an array to this variable."},{"content":"For example:","pos":[2421,2433]},{"content":"C# 3.0 introduces implicitly typed arrays.","pos":[2570,2612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Implicitly Typed Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/implicitly-typed-arrays.md)</ept>.","pos":[2613,2734],"source":" For more information, see [Implicitly Typed Arrays](../../../csharp/programming-guide/arrays/implicitly-typed-arrays.md)."},{"pos":[2743,2779],"content":"Value Type and Reference Type Arrays","linkify":"Value Type and Reference Type Arrays","nodes":[{"content":"Value Type and Reference Type Arrays","pos":[0,36]}]},{"content":"Consider the following array declaration:","pos":[2783,2824]},{"content":"The result of this statement depends on whether <ph id=\"ph1\">`SomeType`</ph> is a value type or a reference type.","pos":[2962,3057],"source":"The result of this statement depends on whether `SomeType` is a value type or a reference type."},{"content":"If it is a value type, the statement creates an array of 10 elements, each of which has the type <ph id=\"ph1\">`SomeType`</ph>.","pos":[3058,3166],"source":" If it is a value type, the statement creates an array of 10 elements, each of which has the type `SomeType`."},{"content":"If <ph id=\"ph1\">`SomeType`</ph> is a reference type, the statement creates an array of 10 elements, each of which is initialized to a null reference.","pos":[3167,3298],"source":" If `SomeType` is a reference type, the statement creates an array of 10 elements, each of which is initialized to a null reference."},{"pos":[3305,3431],"content":"For more information about value types and reference types, see <bpt id=\"p1\">[</bpt>Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/types.md)</ept>.","source":"For more information about value types and reference types, see [Types](../../../csharp/language-reference/keywords/types.md)."},{"pos":[3440,3448],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Array&gt;</ph>","pos":[3452,3471],"source":"<xref:System.Array> "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3476,3543],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3547,3607],"source":"[Arrays](../../../csharp/programming-guide/arrays/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Multidimensional Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/multidimensional-arrays.md)</ept><ph id=\"ph1\"> </ph>","pos":[3611,3706],"source":"[Multidimensional Arrays](../../../csharp/programming-guide/arrays/multidimensional-arrays.md) "},{"content":"<bpt id=\"p1\">[</bpt>Jagged Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/jagged-arrays.md)</ept>","pos":[3710,3784],"source":"[Jagged Arrays](../../../csharp/programming-guide/arrays/jagged-arrays.md)"}]}