{"content":"---\ntitle: \"How to: Reference a Strong-Named Assembly | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-bcl\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"strong-named assemblies, compile-time references\"\n  - \"compile-time assembly referencing\"\n  - \"assemblies [.NET Framework], strong-named\"\n  - \"assembly binding, strong-named\"\nms.assetid: 4c6a406a-b5eb-44fa-b4ed-4e95bb95a813\ncaps.latest.revision: 14\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# How to: Reference a Strong-Named Assembly\nThe process for referencing types or resources in a strong-named assembly is usually transparent. You can make the reference either at compile time (early binding) or at run time.  \n  \n A compile-time reference occurs when you indicate to the compiler that your assembly explicitly references another assembly. When you use compile-time referencing, the compiler automatically gets the public key of the targeted strong-named assembly and places it in the assembly reference of the assembly being compiled.  \n  \n> [!NOTE]\n>  A strong-named assembly can only use types from other strong-named assemblies. Otherwise, the security of the strong-named assembly would be compromised.  \n  \n### To make a compile-time reference to a strong-named assembly  \n  \n1.  At the command prompt, type the following command:  \n  \n     \\<*compiler command*> **/reference:**\\<*assembly name*>  \n  \n     In this command, *compiler command* is the compiler command for the language you are using, and *assembly name* is the name of the strong-named assembly being referenced. You can also use other compiler options, such as the **/t:library** option for creating a library assembly.  \n  \n The following example creates an assembly called `myAssembly.dll` that references a strong-named assembly called `myLibAssembly.dll` from a code module called `myAssembly.cs`.  \n  \n```  \ncsc /t:library myAssembly.cs /reference:myLibAssembly.dll  \n```  \n  \n### To make a run-time reference to a strong-named assembly  \n  \n1.  When you make a run-time reference to a strong-named assembly (for example, by using the <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> method), you must use the display name of the referenced strong-named assembly. The syntax of a display name is as follows:  \n  \n     \\<*assembly name*>**,** \\<*version number*>**,** \\<*culture*>**,** \\<*public key token*>  \n  \n     For example:  \n  \n    ```  \n    myDll, Version=1.1.0.0, Culture=en, PublicKeyToken=03689116d3a4ae33   \n    ```  \n  \n     In this example, `PublicKeyToken` is the hexadecimal form of the public key token. If there is no culture value, use `Culture=neutral`.  \n  \n The following code example shows how to use this information with the <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> method.  \n  \n [!code-cpp[Assembly.Load1#3](../../../samples/snippets/cpp/VS_Snippets_CLR/Assembly.Load1/CPP/load2.cpp#3)]\n [!code-csharp[Assembly.Load1#3](../../../samples/snippets/csharp/VS_Snippets_CLR/Assembly.Load1/CS/load2.cs#3)]\n [!code-vb[Assembly.Load1#3](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.Load1/VB/load2.vb#3)]  \n  \n You can print the hexadecimal format of the public key and public key token for a specific assembly by using the following [Strong Name (Sn.exe)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) command:  \n  \n **sn -Tp \\<** *assembly* **>**  \n  \n If you have a public key file, you can use the following command instead (note the difference in case on the command-line option):  \n  \n **sn -tp \\<** *assembly* **>**  \n  \n## See Also  \n [Creating and Using Strong-Named Assemblies](../../../docs/framework/app-domains/create-and-use-strong-named-assemblies.md)","nodes":[{"pos":[12,70],"content":"How to: Reference a Strong-Named Assembly | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Reference a Strong-Named Assembly | Microsoft Docs","pos":[0,58]}]},{"pos":[576,617],"content":"How to: Reference a Strong-Named Assembly","linkify":"How to: Reference a Strong-Named Assembly","nodes":[{"content":"How to: Reference a Strong-Named Assembly","pos":[0,41]}]},{"content":"The process for referencing types or resources in a strong-named assembly is usually transparent.","pos":[618,715]},{"content":"You can make the reference either at compile time (early binding) or at run time.","pos":[716,797]},{"content":"A compile-time reference occurs when you indicate to the compiler that your assembly explicitly references another assembly.","pos":[804,928]},{"content":"When you use compile-time referencing, the compiler automatically gets the public key of the targeted strong-named assembly and places it in the assembly reference of the assembly being compiled.","pos":[929,1124]},{"pos":[1132,1296],"content":"[!NOTE]\n A strong-named assembly can only use types from other strong-named assemblies. Otherwise, the security of the strong-named assembly would be compromised.","leadings":["","> "],"nodes":[{"content":" A strong-named assembly can only use types from other strong-named assemblies. Otherwise, the security of the strong-named assembly would be compromised.","pos":[8,162],"nodes":[{"content":"A strong-named assembly can only use types from other strong-named assemblies.","pos":[1,79]},{"content":"Otherwise, the security of the strong-named assembly would be compromised.","pos":[80,154]}]}]},{"pos":[1306,1365],"content":"To make a compile-time reference to a strong-named assembly","linkify":"To make a compile-time reference to a strong-named assembly","nodes":[{"content":"To make a compile-time reference to a strong-named assembly","pos":[0,59]}]},{"content":"At the command prompt, type the following command:","pos":[1375,1425]},{"pos":[1436,1491],"content":"<ph id=\"ph1\">\\&lt;</ph><bpt id=\"p1\">*</bpt>compiler command<ept id=\"p1\">*</ept><ph id=\"ph2\">&gt; </ph><bpt id=\"p2\">**</bpt>/reference:<ept id=\"p2\">**</ept><ph id=\"ph3\">\\&lt;</ph><bpt id=\"p3\">*</bpt>assembly name<ept id=\"p3\">*</ept><ph id=\"ph4\">&gt;</ph>","source":"\\<*compiler command*> **/reference:**\\<*assembly name*>"},{"content":"In this command, <bpt id=\"p1\">*</bpt>compiler command<ept id=\"p1\">*</ept> is the compiler command for the language you are using, and <bpt id=\"p2\">*</bpt>assembly name<ept id=\"p2\">*</ept> is the name of the strong-named assembly being referenced.","pos":[1502,1672],"source":"In this command, *compiler command* is the compiler command for the language you are using, and *assembly name* is the name of the strong-named assembly being referenced."},{"content":"You can also use other compiler options, such as the <bpt id=\"p1\">**</bpt>/t:library<ept id=\"p1\">**</ept> option for creating a library assembly.","pos":[1673,1780],"source":" You can also use other compiler options, such as the **/t:library** option for creating a library assembly."},{"pos":[1787,1962],"content":"The following example creates an assembly called <ph id=\"ph1\">`myAssembly.dll`</ph> that references a strong-named assembly called <ph id=\"ph2\">`myLibAssembly.dll`</ph> from a code module called <ph id=\"ph3\">`myAssembly.cs`</ph>.","source":"The following example creates an assembly called `myAssembly.dll` that references a strong-named assembly called `myLibAssembly.dll` from a code module called `myAssembly.cs`."},{"pos":[2047,2102],"content":"To make a run-time reference to a strong-named assembly","linkify":"To make a run-time reference to a strong-named assembly","nodes":[{"content":"To make a run-time reference to a strong-named assembly","pos":[0,55]}]},{"content":"When you make a run-time reference to a strong-named assembly (for example, by using the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName&gt;</ph> method), you must use the display name of the referenced strong-named assembly.","pos":[2112,2420],"source":"When you make a run-time reference to a strong-named assembly (for example, by using the <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName> method), you must use the display name of the referenced strong-named assembly."},{"content":"The syntax of a display name is as follows:","pos":[2421,2464]},{"pos":[2475,2563],"content":"<ph id=\"ph1\">\\&lt;</ph><bpt id=\"p1\">*</bpt>assembly name<ept id=\"p1\">*</ept><ph id=\"ph2\">&gt;</ph><bpt id=\"p2\">**</bpt>,<ept id=\"p2\">**</ept> <ph id=\"ph3\">\\&lt;</ph><bpt id=\"p3\">*</bpt>version number<ept id=\"p3\">*</ept><ph id=\"ph4\">&gt;</ph><bpt id=\"p4\">**</bpt>,<ept id=\"p4\">**</ept> <ph id=\"ph5\">\\&lt;</ph><bpt id=\"p5\">*</bpt>culture<ept id=\"p5\">*</ept><ph id=\"ph6\">&gt;</ph><bpt id=\"p6\">**</bpt>,<ept id=\"p6\">**</ept> <ph id=\"ph7\">\\&lt;</ph><bpt id=\"p7\">*</bpt>public key token<ept id=\"p7\">*</ept><ph id=\"ph8\">&gt;</ph>","source":"\\<*assembly name*>**,** \\<*version number*>**,** \\<*culture*>**,** \\<*public key token*>"},{"content":"For example:","pos":[2574,2586]},{"content":"In this example, <ph id=\"ph1\">`PublicKeyToken`</ph> is the hexadecimal form of the public key token.","pos":[2695,2777],"source":"In this example, `PublicKeyToken` is the hexadecimal form of the public key token."},{"content":"If there is no culture value, use <ph id=\"ph1\">`Culture=neutral`</ph>.","pos":[2778,2830],"source":" If there is no culture value, use `Culture=neutral`."},{"content":"The following code example shows how to use this information with the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName&gt;</ph> method.","pos":[2837,2981],"source":"The following code example shows how to use this information with the <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> method."},{"pos":[2988,3322],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>Assembly.Load1#3<ept id=\"p2\">](../../../samples/snippets/cpp/VS_Snippets_CLR/Assembly.Load1/CPP/load2.cpp#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>Assembly.Load1#3<ept id=\"p4\">](../../../samples/snippets/csharp/VS_Snippets_CLR/Assembly.Load1/CS/load2.cs#3)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>Assembly.Load1#3<ept id=\"p6\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.Load1/VB/load2.vb#3)</ept><ept id=\"p5\">]</ept>","leadings":[""," "," "],"source":"[!code-cpp[Assembly.Load1#3](../../../samples/snippets/cpp/VS_Snippets_CLR/Assembly.Load1/CPP/load2.cpp#3)]\n[!code-csharp[Assembly.Load1#3](../../../samples/snippets/csharp/VS_Snippets_CLR/Assembly.Load1/CS/load2.cs#3)]\n[!code-vb[Assembly.Load1#3](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.Load1/VB/load2.vb#3)]"},{"pos":[3329,3541],"content":"You can print the hexadecimal format of the public key and public key token for a specific assembly by using the following <bpt id=\"p1\">[</bpt>Strong Name (Sn.exe)<ept id=\"p1\">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept> command:","source":"You can print the hexadecimal format of the public key and public key token for a specific assembly by using the following [Strong Name (Sn.exe)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) command:"},{"pos":[3548,3578],"content":"<bpt id=\"p1\">**</bpt>sn -Tp <ph id=\"ph1\">\\&lt;</ph><ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>assembly<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p3\">**</ept>","source":"**sn -Tp \\<** *assembly* **>**"},{"content":"If you have a public key file, you can use the following command instead (note the difference in case on the command-line option):","pos":[3585,3715]},{"pos":[3722,3752],"content":"<bpt id=\"p1\">**</bpt>sn -tp <ph id=\"ph1\">\\&lt;</ph><ept id=\"p1\">**</ept> <bpt id=\"p2\">*</bpt>assembly<ept id=\"p2\">*</ept> <bpt id=\"p3\">**</bpt><ph id=\"ph2\">&gt;</ph><ept id=\"p3\">**</ept>","source":"**sn -tp \\<** *assembly* **>**"},{"pos":[3761,3769],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3773,3896],"content":"<bpt id=\"p1\">[</bpt>Creating and Using Strong-Named Assemblies<ept id=\"p1\">](../../../docs/framework/app-domains/create-and-use-strong-named-assemblies.md)</ept>","source":"[Creating and Using Strong-Named Assemblies](../../../docs/framework/app-domains/create-and-use-strong-named-assemblies.md)"}]}