<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce761911c83dcf7fb60f0d9cabdb87e858aad05d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\linq-to-entities.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa92ac0a8dfb5fa170f0ccd790c676c3e52324b3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">430649d7041724b51db92103d091005bc0f906e4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>LINQ to Entities | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>LINQ to Entities</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>LINQ to Entities provides Language-Integrated Query (LINQ) support that enables developers to write queries against the Entity Framework conceptual model using Visual Basic or Visual C#.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Queries against the Entity Framework are represented by command tree queries, which execute against the object context.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>LINQ to Entities converts Language-Integrated Queries (LINQ) queries to command tree queries, executes the queries against the Entity Framework, and returns objects that can be used by both the Entity Framework and LINQ.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following is the process for creating and executing a LINQ to Entities query:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Construct an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance from <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Compose a LINQ to Entities query in C# or Visual Basic by using the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Convert LINQ standard query operators and expressions to command trees.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Execute the query, in command tree representation, against the data source.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Any exceptions thrown on the data source during execution are passed directly up to the client.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Return query results back to the client.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Constructing an ObjectQuery Instance</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> generic class represents a query that returns a collection of zero or more typed entities.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An object query is typically constructed from an existing object context, instead of being manually constructed, and always belongs to that object context.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This context provides the connection and metadata information that is required to compose and execute the query.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> generic class implements the <ph id="ph2">&lt;xref:System.Linq.IQueryable%601&gt;</ph> generic interface, whose builder methods enable LINQ queries to be incrementally built.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also let the compiler infer the type of entities by using the C# <ph id="ph1">`var`</ph> keyword (<ph id="ph2">`Dim`</ph> in Visual Basic, with local type inference enabled).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Composing the Queries</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> generic class, which implements the generic <ph id="ph2">&lt;xref:System.Linq.IQueryable%601&gt;</ph> interface, serve as the data source for LINQ to Entities queries.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In a query, you specify exactly the information that you want to retrieve from the data source.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A query can also specify how that information should be sorted, grouped, and shaped before it is returned.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In LINQ, a query is stored in a variable.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This query variable takes no action and returns no data; it only stores the query information.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>After you create a query you must execute that query to retrieve any data.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>LINQ to Entities queries can be composed in two different syntaxes: query expression syntax and method-based query syntax.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Query expression syntax and method-based query syntax are new in C# 3.0 and Visual Basic 9.0.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Queries in LINQ to Entities<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/queries-in-linq-to-entities.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Query Conversion</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To execute a LINQ to Entities query against the Entity Framework, the LINQ query must be converted to a command tree representation that can be executed against the Entity Framework.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>LINQ to Entities queries are comprised of LINQ standard query operators (such as <ph id="ph1">&lt;xref:System.Linq.Queryable.Select%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Queryable.Where%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Linq.Queryable.GroupBy%2A&gt;</ph>) and expressions (x &gt; 10, Contact.LastName, and so on).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>LINQ operators are not defined by a class, but rather are methods on a class.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In LINQ, expressions can contain anything allowed by types within the <ph id="ph1">&lt;xref:System.Linq.Expressions&gt;</ph> namespace and, by extension, anything that can be represented in a lambda function.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This is a superset of the expressions that are allowed by the Entity Framework, which are by definition restricted to operations allowed on the database, and supported by <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the Entity Framework, both operators and expressions are represented by a single type hierarchy, which are then placed in a command tree.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The command tree is used by the Entity Framework to execute the query.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the LINQ query cannot be expressed as a command tree, an exception will be thrown when the query is being converted.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The conversion of LINQ to Entities queries involves two sub-conversions: the conversion of the standard query operators, and the conversion of the expressions.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>There are a number of LINQ standard query operators that do not have a valid translation in LINQ to Entities.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Attempts to use these operators will result in an exception at query translation time.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For a list of supported LINQ to Entities operators, see <bpt id="p1">[</bpt>Supported and Unsupported LINQ Methods (LINQ to Entities)<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/supported-and-unsupported-linq-methods-linq-to-entities.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about using the standard query operators in LINQ to Entities, see <bpt id="p1">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In general, expressions in LINQ to Entities are evaluated on the server, so the behavior of the expression should not be expected to follow CLR semantics.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Expressions in LINQ to Entities Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/expressions-in-linq-to-entities-queries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For information about how CLR method calls are mapped to canonical functions in the data source, see <bpt id="p1">[</bpt>CLR Method to Canonical Function Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/clr-method-to-canonical-function-mapping.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For information about how to call canonical, database, and custom functions from within <ph id="ph1">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph> queries, see <bpt id="p1">[</bpt>Calling Functions in LINQ to Entities Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/calling-functions-in-linq-to-entities-queries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Query Execution</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After the LINQ query is created by the user, it is converted to a representation that is compatible with the Entity Framework (in the form of command trees), which is then executed against the data source.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>At query execution time, all query expressions (or components of the query) are evaluated on the client or on the server.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This includes expressions that are used in result materialization or entity projections.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Query Execution<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/query-execution.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For information on how to improve performance by compiling a query once and then executing it several times with different parameters, see <bpt id="p1">[</bpt>Compiled Queries  (LINQ to Entities)<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Materialization</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Materialization is the process of returning query results back to the client as CLR types.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In LINQ to Entities, query results data records are never returned; there is always a backing CLR type, defined by the user or by the Entity Framework, or generated by the compiler (anonymous types).</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>All object materialization is performed by the Entity Framework.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Any errors that result from an inability to map between the Entity Framework and the CLR will cause exceptions to be thrown during object materialization.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Query results are usually returned as one of the following:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A collection of zero or more typed entity objects or a projection of complex types defined in the conceptual model.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CLR types that are supported by the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Inline collections.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Anonymous types.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Query Results<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/query-results.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Queries in LINQ to Entities<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/queries-in-linq-to-entities.md)</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Expressions in LINQ to Entities Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/expressions-in-linq-to-entities-queries.md)</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Calling Functions in LINQ to Entities Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/calling-functions-in-linq-to-entities-queries.md)</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Compiled Queries  (LINQ to Entities)<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md)</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Query Execution<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/query-execution.md)</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Query Results<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/query-results.md)</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CLR Method to Canonical Function Mapping<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/clr-method-to-canonical-function-mapping.md)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Supported and Unsupported LINQ Methods (LINQ to Entities)<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/supported-and-unsupported-linq-methods-linq-to-entities.md)</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Known Issues and Considerations in LINQ to Entities<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/known-issues-and-considerations-in-linq-to-entities.md)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Known Issues and Considerations in LINQ to Entities<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/known-issues-and-considerations-in-linq-to-entities.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ (Language-Integrated Query)<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ and ADO.NET<ept id="p1">](../../../../../../docs/framework/data/adonet/linq-and-ado-net.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ADO.NET Entity Framework<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>