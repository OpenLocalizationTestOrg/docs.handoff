{"content":"---\ntitle: \". Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"._CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"member access operator (.) [C#]\"\n  - \". operator [C#]\"\n  - \"dot operator (.) [C#]\"\nms.assetid: a1f54b52-b686-4ae5-a48e-a2a9ebd0eb7b\ncaps.latest.revision: 21\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# . Operator (C# Reference)\nThe dot operator (`.`) is used for member access. The dot operator specifies a member of a type or namespace. For example, the dot operator is used to access specific methods within the .NET Framework class libraries:  \n  \n [!code-cs[csRefOperators#16](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_1.cs)]  \n  \n For example, consider the following class:  \n  \n [!code-cs[csRefOperators#17](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_2.cs)]  \n  \n [!code-cs[csRefOperators#18](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_3.cs)]  \n  \n The variable `s` has two members, `a` and `b`; to access them, use the dot operator:  \n  \n [!code-cs[csRefOperators#19](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_4.cs)]  \n  \n The dot is also used to form qualified names, which are names that specify the namespace or interface, for example, to which they belong.  \n  \n [!code-cs[csRefOperators#20](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_5.cs)]  \n  \n The using directive makes some name qualification optional:  \n  \n [!code-cs[csRefOperators#21](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_6.cs)]  \n  \n But when an identifier is ambiguous, it must be qualified:  \n  \n [!code-cs[csRefOperators#22](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_7.cs)]  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](../../../csharp/language-reference/keywords/includes/csharplangspec_md.md)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Operators](../../../csharp/language-reference/operators/index.md)","nodes":[{"pos":[4,616],"nodes":[{"content":". Operator (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,42],"content":". Operator (C# Reference) | Microsoft Docs","nodes":[{"content":". Operator (C# Reference) | Microsoft Docs","pos":[0,42],"nodes":[{"content":".","pos":[0,1]},{"content":"Operator (C# Reference) | Microsoft Docs","pos":[2,42]}]}]}],"pos":[6,51],"yaml":true}],"content":"title: \". Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"._CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"member access operator (.) [C#]\"\n  - \". operator [C#]\"\n  - \"dot operator (.) [C#]\"\nms.assetid: a1f54b52-b686-4ae5-a48e-a2a9ebd0eb7b\ncaps.latest.revision: 21\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[623,648],"content":". Operator (C# Reference)","linkify":". Operator (C# Reference)","nodes":[{"content":". Operator (C# Reference)","pos":[0,25],"nodes":[{"content":".","pos":[0,1]},{"content":"Operator (C# Reference)","pos":[2,25]}]}]},{"content":"The dot operator (<ph id=\"ph1\">`.`</ph>) is used for member access.","pos":[649,698],"source":"The dot operator (`.`) is used for member access."},{"content":"The dot operator specifies a member of a type or namespace.","pos":[699,758]},{"content":"For example, the dot operator is used to access specific methods within the .NET Framework class libraries:","pos":[759,866]},{"pos":[873,995],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#16<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#16](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_1.cs)]"},{"content":"For example, consider the following class:","pos":[1002,1044]},{"pos":[1051,1173],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#17<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#17](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_2.cs)]"},{"pos":[1180,1302],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#18<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_3.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#18](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_3.cs)]"},{"pos":[1309,1393],"content":"The variable <ph id=\"ph1\">`s`</ph> has two members, <ph id=\"ph2\">`a`</ph> and <ph id=\"ph3\">`b`</ph>; to access them, use the dot operator:","source":"The variable `s` has two members, `a` and `b`; to access them, use the dot operator:"},{"pos":[1400,1522],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#19<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_4.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#19](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_4.cs)]"},{"content":"The dot is also used to form qualified names, which are names that specify the namespace or interface, for example, to which they belong.","pos":[1529,1666]},{"pos":[1673,1795],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#20<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_5.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#20](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_5.cs)]"},{"content":"The using directive makes some name qualification optional:","pos":[1802,1861]},{"pos":[1868,1990],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#21<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_6.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#21](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_6.cs)]"},{"content":"But when an identifier is ambiguous, it must be qualified:","pos":[1997,2055]},{"pos":[2062,2184],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#22<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_7.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#22](../../../csharp/language-reference/operators/codesnippet/CSharp/member-access-operator_7.cs)]"},{"pos":[2193,2218],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[2332,2340],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2344,2404],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2408,2475],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](../../../csharp/language-reference/operators/index.md)</ept>","pos":[2479,2548],"source":"[C# Operators](../../../csharp/language-reference/operators/index.md)"}]}