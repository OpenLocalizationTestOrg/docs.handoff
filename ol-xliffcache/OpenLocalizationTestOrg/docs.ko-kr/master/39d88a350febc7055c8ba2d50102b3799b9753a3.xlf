<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39d88a350febc7055c8ba2d50102b3799b9753a3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\configuring-tracking-for-a-workflow.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bdde3738fc7a559f9932d53deec3928652989310</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7d6e10a67356dba428a3f476ee10474103c19dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Configuring Tracking for a Workflow | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Configuring Tracking for a Workflow</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A workflow can execute in three ways:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Hosted in <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Executed as a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Executed directly using <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Depending on the workflow hosting option, a tracking participant can be added either through code or through a configuration file.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic describes how tracking is configured by adding a tracking participant to a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> and to a <ph id="ph2">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph>, and how to enable tracking when using <ph id="ph3">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Configuring Workflow Application Tracking</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A workflow can run using the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This topic demonstrates how tracking is configured for a <ph id="ph1">[!INCLUDE[netfx_current_long](../../../includes/netfx-current-long-md.md)]</ph> workflow application by adding a tracking participant to the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> workflow host.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this case, the workflow runs as a workflow application.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You configure a workflow application through code (rather than by using a configuration file), which is a self-hosted .exe file using the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The tracking participant is added as an extension to the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This is done by adding the <ph id="ph1">&lt;xref:System.Activities.Tracking.TrackingParticipant&gt;</ph> to the extensions collection for the WorkflowApplication instance.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For a workflow application, you can add the <ph id="ph1">&lt;xref:System.Activities.Tracking.EtwTrackingParticipant&gt;</ph> behavior extension as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Configuring Workflow Service Tracking</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A workflow can be exposed as a <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> service when hosted in the <ph id="ph2">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> service host.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> is a specialized .NET ServiceHost implementation for a workflow-based service.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This section explains how to configure tracking for a <ph id="ph1">[!INCLUDE[netfx_current_short](../../../includes/netfx-current-short-md.md)]</ph> workflow service running in <ph id="ph2">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It is configured through a Web.config file (for a Web-hosted service) or an App.config file (for a service hosted in a stand-alone application, such as a console application) by specifying a service behavior or through code by adding a tracking-specific behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> collection for the service host.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For a workflow service hosted in <ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph>, you can add the <ph id="ph2">&lt;xref:System.Activities.Tracking.EtwTrackingParticipant&gt;</ph> using the &lt;<ph id="ph3">`behavior`</ph>&gt; element in a configuration file, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Alternatively, for a workflow service hosted in <ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph>, you can add the <ph id="ph2">&lt;xref:System.Activities.Tracking.EtwTrackingParticipant&gt;</ph> behavior extension through code.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To add a custom tracking participant, create a new behavior extension and add it to the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> as shown in the following example code.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you want to view sample code that shows how to create a custom behavior element that adds a custom tracking participant, refer to the <bpt id="p1">[</bpt>Tracking<ept id="p1">](../../../docs/framework/windows-workflow-foundation/samples/tracking.md)</ept> samples.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The tracking participant is added to the workflow service host as an extension to the behavior.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This sample code below shows how to read a tracking profile from configuration file.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This sample code shows how to add a tracking profile to a workflow host.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information on tracking profiles, refer to <bpt id="p1">[</bpt>Tracking Profiles<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201310)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Configuring tracking using WorkflowInvoker</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To configure tracking for a workflow executed using <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph>, add the tracking provider as an extension to a <ph id="ph2">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following code example is from the <bpt id="p1">[</bpt>Custom Tracking<ept id="p1">](../../../docs/framework/windows-workflow-foundation/samples/custom-tracking.md)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Viewing tracking records in Event Viewer</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>There are two Event Viewer logs of particular interest to view when tracking WF execution - the Analytic log and the Debug log.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Both reside under the Microsoft&amp;#124;Windows&amp;#124;Application Server-Applications node.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Logs within this section contain events from a single application rather than events that have an impact on the entire system.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Debug trace events are written to the Debug Log.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To collect WF debug trace events in the Event Viewer, enable the Debug Log.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To open Event Viewer, click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Run.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the Run dialog, type <ph id="ph1">`eventvwr`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the Event Viewer dialog, expand the <bpt id="p1">**</bpt>Applications and Services Logs<ept id="p1">**</ept> node.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>Microsoft<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Application Server-Applications<ept id="p3">**</ept> nodes.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> node under the <bpt id="p2">**</bpt>Application Server-Applications<ept id="p2">**</ept> node, and select <bpt id="p3">**</bpt>Enable Log<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Execute your tracing-enabled application to generate tracing events.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> node and select <bpt id="p2">**</bpt>Refresh.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Tracing events should be visible in the center pane.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>WF 4 provides a tracking participant that writes tracking records to an ETW (Event Tracing for Windows) session.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The ETW tracking participant is configured with a tracking profile to subscribe to tracking records.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When tracking is enabled, errors tracking records are emitted to ETW.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>ETW tracking events (between the range of 100-113) corresponding to the tracking events emitted by the ETW tracking participant are written to the Analytic Log.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To view tracking records, follow these steps.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To open Event Viewer, click <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Run.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the Run dialog, type <ph id="ph1">`eventvwr`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the Event Viewer dialog, expand the <bpt id="p1">**</bpt>Applications and Services Logs<ept id="p1">**</ept> node.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>Microsoft<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Application Server-Applications<ept id="p3">**</ept> nodes.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Analytic<ept id="p1">**</ept> node under the <bpt id="p2">**</bpt>Application Server-Applications<ept id="p2">**</ept> node, and select <bpt id="p3">**</bpt>Enable Log<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Execute your tracking-enabled application to generate tracking records.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Analytic<ept id="p1">**</ept> node and select <bpt id="p2">**</bpt>Refresh.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Tracking records should be visible in the center pane.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following image shows tracking events in the event viewer.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Event Viewer showing tracking records<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/trackingeventviewer.PNG "</bpt>TrackingEventViewer<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Registering an application-specific provider ID</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If events need to be written to a specific application log, follow these steps to register the new provider manifest.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Declare the provider ID in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Copy the manifest file from %windir%\Microsoft.NET\Framework<ph id="ph1">\\</ph>&lt;latest version of <ph id="ph2">[!INCLUDE[netfx_current_short](../../../includes/netfx-current-short-md.md)]</ph>&gt;\Microsoft.Windows.ApplicationServer.Applications.man to a temporary location, and rename it to Microsoft.Windows.ApplicationServer.Applications_Provider1.man</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Change the GUID in the manifest file to the new GUID.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Change the provider name if you do not want to uninstall the default provider.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you changed the provider name in the previous step, change the channel names in the manifest file to the new provider name.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Generate the resource DLL by following these steps.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Install the Windows SDK.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The Windows SDK includes the message compiler (<bpt id="p1">[</bpt>mc.exe<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=184606)</ept>) and resource compiler (<bpt id="p2">[</bpt>rc.exe<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=184605)</ept>).</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In a Windows SDK command prompt, run mc.exe on the new manifest file.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Run rc.exe on the resource file generated in the previous step.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Create an empty cs file called NewProviderReg.cs.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Create a resource DLL using the C# compiler.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Change the resource and message dl namel in the manifest file from <ph id="ph1">`Microsoft.Windows.ApplicationServer.Applications.Provider1.man`</ph> to the new dll name.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>wevtutil<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=184608)</ept> to register the manifest.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Server App Fabric Monitoring<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201273)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Monitoring Applications with App Fabric<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=201275)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>