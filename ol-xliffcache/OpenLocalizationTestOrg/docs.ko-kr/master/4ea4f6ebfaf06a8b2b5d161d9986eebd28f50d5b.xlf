<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ea4f6ebfaf06a8b2b5d161d9986eebd28f50d5b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\developing-apps\programming\drives-directories-files\how-to-read-from-text-files.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46e3626db9d20709bd297b9ca5886cf6faf0f449</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d1ae9fcd4838966bc4b8203df2c37c87ca0032e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Read From Text Files in Visual Basic | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Read From Text Files in Visual Basic</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText%2A&gt;</ph> method of the <ph id="ph2">`My.Computer.FileSystem`</ph> object allows you to read from a text file.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The file encoding can be specified if the contents of the file use an encoding such as ASCII or UTF-8.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you are reading from a file with extended characters, you will need to specify the file encoding.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To read a file a single line of text at a time, use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader%2A&gt;</ph> method of the <ph id="ph2">`My.Computer.FileSystem`</ph> object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OpenTextFileReader`</ph> method returns a <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> method of the <ph id="ph2">`StreamReader`</ph> object to read a file one line at a time.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can test for the end of the file using the <ph id="ph1">&lt;xref:System.IO.StreamReader.EndOfStream%2A&gt;</ph> method of the <ph id="ph2">`StreamReader`</ph> object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To read from a text file</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`ReadAllText`</ph> method of the <ph id="ph2">`My.Computer.FileSystem`</ph> object to read the contents of a text file into a string, supplying the path.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example reads the contents of test.txt into a string and then displays it in a message box.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbFileIORead#2<ept id="p2">](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files_1.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To read from a text file that is encoded</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`ReadAllText`</ph> method of the <ph id="ph2">`My.Computer.FileSystem`</ph> object to read the contents of a text file into a string, supplying the path and file encoding type.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following example reads the contents of the UTF32 file test.txt into a string and then displays it in a message box.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbFileIORead#3<ept id="p2">](../../../../visual-basic/developing-apps/programming/drives-directories-files/codesnippet/VisualBasic/how-to-read-from-text-files_2.vb)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Robust Programming</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following conditions may cause an exception:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The path is not valid for one of the following reasons: it is a zero-length string, it contains only white space, it contains invalid characters, or it is a device path (<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The path is not valid because it is <ph id="ph1">`Nothing`</ph> (<ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The file does not exist (<ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The file is in use by another process or an I/O error occurs (<ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The path exceeds the system-defined maximum length (<ph id="ph1">&lt;xref:System.IO.PathTooLongException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A file or directory name in the path contains a colon (:) or is in an invalid format (<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>There is not enough memory to write the string to buffer (<ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The user lacks necessary permissions to view the path (<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Do not make decisions about the contents of the file based on the name of the file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, the file Form1.vb may not be a <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> source file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Verify all inputs before using the data in your application.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The contents of the file may not be what is expected, and methods to read from the file may fail.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Reading from Files<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Read From Text Files with Multiple Formats<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting: Reading from and Writing to Text Files<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/troubleshooting-reading-from-and-writing-to-text-files.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Manipulating Files and Directories in Visual Basic<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>File Encodings<ept id="p1">](../../../../visual-basic/developing-apps/programming/drives-directories-files/file-encodings.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>