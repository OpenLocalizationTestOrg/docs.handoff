<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95fc95fb2b949bcdb0a64c8ccea8f5b86d076207</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-programmatically-add-discoverability-to-a-wcf-service-and-client.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d5fa6550d4c4880156b206e4d76171a6e377f3a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83ae2c0139b99482b35a1ebf6bc0d6e0ffc1f56b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Programmatically Add Discoverability to a WCF Service and Client | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Programmatically Add Discoverability to a WCF Service and Client</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic explains how to make a <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> service discoverable.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It is based on the <bpt id="p1">[</bpt>Self-Host<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=145523)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To configure the existing Self-Host service sample for Discovery</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Open the Self-Host solution in <ph id="ph1">[!INCLUDE[vs_current_long](../../../../includes/vs-current-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The sample is located in the TechnologySamples\Basic\Service\Hosting\SelfHost directory.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Add a reference to <ph id="ph1">`System.ServiceModel.Discovery.dll`</ph> to the service project.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You may see an error message saying "System.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>ServiceModel.Discovery.dll or one of its dependencies requires a later version of the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> than the one specified in the project â€¦"</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you see this message, right-click the project in the Solution Explorer and choose <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Project Properties<ept id="p1">**</ept> window, make sure that the <bpt id="p2">**</bpt>Target Framework<ept id="p2">**</ept> is <ph id="ph1">[!INCLUDE[netfx_current_long](../../../../includes/netfx-current-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Open the Service.cs file and add the following <ph id="ph1">`using`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`Main()`</ph> method, inside the <ph id="ph2">`using`</ph> statement, add a <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> instance to the service host.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> specifies that the service it is applied to is discoverable.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph> to the service host right after the code that adds the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This code specifies that discovery messages should be sent to the standard UDP discovery endpoint.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To create a client application that uses discovery to call the service</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add a new console application to the solution called <ph id="ph1">`DiscoveryClientApp`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Add a reference to <ph id="ph1">`System.ServiceModel.dll`</ph> and <ph id="ph2">`System.ServiceModel.Discovery.dll`</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Copy the GeneratedClient.cs and App.config files from the existing client project to the new DiscoveryClientApp project.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To do this, right-click the files in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Copy<ept id="p2">**</ept>, and then select the <bpt id="p3">**</bpt>DiscoveryClientApp<ept id="p3">**</ept> project, right-click and select <bpt id="p4">**</bpt>Paste<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Open Program.cs.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`using`</ph> statements.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add a static method called <ph id="ph1">`FindCalculatorServiceAddress()`</ph> to the <ph id="ph2">`Program`</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method uses discovery to search for the <ph id="ph1">`CalculatorService`</ph> service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Inside the <ph id="ph1">`FindCalculatorServiceAddress`</ph> method, create a new <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> instance, passing in a <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph> to the constructor.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This tells <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> that the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> class should use the standard UDP discovery endpoint to send and receive discovery messages.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>On the next line, call the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Find%2A&gt;</ph> method and specify a <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.FindCriteria&gt;</ph> instance that contains the service contract you want to search for.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In this case, specify <ph id="ph1">`ICalculator`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After the call to <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Find%2A&gt;</ph>, check to see if there is at least one matching service and return the <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> of the first matching service.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Otherwise return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add a static method named <ph id="ph1">`InvokeCalculatorService`</ph> to the <ph id="ph2">`Program`</ph> class.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This method uses the endpoint address returned from <ph id="ph1">`FindCalculatorServiceAddress`</ph> to call the calculator service.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Inside the <ph id="ph1">`InvokeCalculatorService`</ph> method, create an instance of the <ph id="ph2">`CalculatorServiceClient`</ph> class.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This class is defined by the <bpt id="p1">[</bpt>Self-Host<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=145523)</ept> sample.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It was generated using Svcutil.exe.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>On the next line, set the endpoint address of the client to the endpoint address returned from <ph id="ph1">`FindCalculatorServiceAddress()`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Immediately after the code for the previous step, call the methods exposed by the calculator service.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Add code to the <ph id="ph1">`Main()`</ph> method in the <ph id="ph2">`Program`</ph> class to call <ph id="ph3">`FindCalculatorServiceAddress`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>On the next line, call the <ph id="ph1">`InvokeCalculatorService()`</ph> and pass in the endpoint address returned from <ph id="ph2">`FindCalculatorServiceAddress()`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To test the application</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Open an elevated command prompt and run Service.exe.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Open a command prompt and run Discoveryclientapp.exe.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The output from service.exe should look like the following output.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The output from Discoveryclientapp.exe should look like the following output.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following is a listing of the code for this sample.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Because this code is based on the <bpt id="p1">[</bpt>Self-Host<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=145523)</ept> sample, only those files that are changed are listed.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> the Self-Host sample, see <bpt id="p1">[</bpt>Setup Instructions<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=145522)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Discovery Overview<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-discovery-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>WCF Discovery Object Model<ept id="p1">](../../../../docs/framework/wcf/feature-details/wcf-discovery-object-model.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>