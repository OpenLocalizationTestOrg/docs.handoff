{"content":"---\ntitle: \"Binary Serialization | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"binary serialization\"\n  - \"serialization, about serialization\"\n  - \"deserialization\"\n  - \"binary serialization, about serialization\"\nms.assetid: 2b1ea3be-1152-4032-b2b3-07794054c405\ncaps.latest.revision: 5\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Binary Serialization\nSerialization can be defined as the process of storing the state of an object to a storage medium. During this process, the public and private fields of the object and the name of the class, including the assembly containing the class, are converted to a stream of bytes, which is then written to a data stream. When the object is subsequently deserialized, an exact clone of the original object is created.  \n  \n When implementing a serialization mechanism in an object-oriented environment, you have to make a number of tradeoffs between ease of use and flexibility. The process can be automated to a large extent, provided you are given sufficient control over the process. For example, situations may arise where simple binary serialization is not sufficient, or there might be a specific reason to decide which fields in a class need to be serialized. The following sections examine the robust serialization mechanism provided with the .NET Framework and highlight a number of important features that allow you to customize the process to meet your needs.  \n  \n> [!NOTE]\n>  The state of a UTF-8 or UTF-7 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.  \n  \n## In This Section  \n [Serialization Concepts](../../../docs/framework/serialization/serialization-concepts.md)  \n Discusses two scenarios where serialization is useful: when persisting data to storage and when passing objects across application domains.  \n  \n [Basic Serialization](../../../docs/framework/serialization/basic-serialization.md)  \n Describes how to use the binary and SOAP formatters to serialize objects.  \n  \n [Selective Serialization](../../../docs/framework/serialization/selective-serialization.md)  \n Describes how to prevent some members of a class from being serialized.  \n  \n [Custom Serialization](../../../docs/framework/serialization/custom-serialization.md)  \n Describes how to customize serialization for a class by using the <xref:System.Runtime.Serialization.ISerializable> interface.  \n  \n [Steps in the Serialization Process](../../../docs/framework/serialization/steps-in-the-serialization-process.md)  \n Describes the course of action serialization takes when the <xref:System.Runtime.Serialization.Formatter.Serialize%2A> method is called on a formatter.  \n  \n [Version Tolerant Serialization](../../../docs/framework/serialization/version-tolerant-serialization.md)  \n Explains how to create serializable types that can be modified over time without causing applications to throw exceptions.  \n  \n [Serialization Guidelines](../../../docs/framework/serialization/serialization-guidelines.md)  \n Provides some general guidelines for deciding when to serialize an object.  \n  \n## Reference  \n <xref:System.Runtime.Serialization>  \n Contains classes that can be used for serializing and deserializing objects.  \n  \n## Related Sections  \n [XML and SOAP Serialization](../../../docs/framework/serialization/xml-and-soap-serialization.md)  \n Describes the XML serialization mechanism that is included with the common language runtime.  \n  \n [Security and Serialization](../../../docs/framework/misc/security-and-serialization.md)  \n Describes the secure coding guidelines to follow when writing code that performs serialization.  \n  \n [Remote Objects](http://msdn.microsoft.com/en-us/515686e6-0a8d-42f7-8188-73abede57c58)  \n Describes the various communications methods available in the .NET Framework for remote communications.  \n  \n [XML Web Services Created Using ASP.NET and XML Web Service Clients](http://msdn.microsoft.com/en-us/1e64af78-d705-4384-b08d-591a45f4379c)  \n Provides topics that describe and explain how to program XML Web services created using ASP.NET.","nodes":[{"pos":[12,49],"content":"Binary Serialization | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Binary Serialization | Microsoft Docs","pos":[0,37]}]},{"pos":[531,551],"content":"Binary Serialization","linkify":"Binary Serialization","nodes":[{"content":"Binary Serialization","pos":[0,20]}]},{"content":"Serialization can be defined as the process of storing the state of an object to a storage medium.","pos":[552,650]},{"content":"During this process, the public and private fields of the object and the name of the class, including the assembly containing the class, are converted to a stream of bytes, which is then written to a data stream.","pos":[651,863]},{"content":"When the object is subsequently deserialized, an exact clone of the original object is created.","pos":[864,959]},{"content":"When implementing a serialization mechanism in an object-oriented environment, you have to make a number of tradeoffs between ease of use and flexibility.","pos":[966,1120]},{"content":"The process can be automated to a large extent, provided you are given sufficient control over the process.","pos":[1121,1228]},{"content":"For example, situations may arise where simple binary serialization is not sufficient, or there might be a specific reason to decide which fields in a class need to be serialized.","pos":[1229,1408]},{"content":"The following sections examine the robust serialization mechanism provided with the .NET Framework and highlight a number of important features that allow you to customize the process to meet your needs.","pos":[1409,1612]},{"pos":[1620,1778],"content":"[!NOTE]\n The state of a UTF-8 or UTF-7 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.","leadings":["","> "],"nodes":[{"content":"The state of a UTF-8 or UTF-7 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.","pos":[9,156]}]},{"pos":[1787,1802],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Serialization Concepts<ept id=\"p1\">](../../../docs/framework/serialization/serialization-concepts.md)</ept>","pos":[1806,1895],"source":"[Serialization Concepts](../../../docs/framework/serialization/serialization-concepts.md)"},{"content":"Discusses two scenarios where serialization is useful: when persisting data to storage and when passing objects across application domains.","pos":[1899,2038]},{"content":"<bpt id=\"p1\">[</bpt>Basic Serialization<ept id=\"p1\">](../../../docs/framework/serialization/basic-serialization.md)</ept>","pos":[2045,2128],"source":"[Basic Serialization](../../../docs/framework/serialization/basic-serialization.md)"},{"content":"Describes how to use the binary and SOAP formatters to serialize objects.","pos":[2132,2205]},{"content":"<bpt id=\"p1\">[</bpt>Selective Serialization<ept id=\"p1\">](../../../docs/framework/serialization/selective-serialization.md)</ept>","pos":[2212,2303],"source":"[Selective Serialization](../../../docs/framework/serialization/selective-serialization.md)"},{"content":"Describes how to prevent some members of a class from being serialized.","pos":[2307,2378]},{"content":"<bpt id=\"p1\">[</bpt>Custom Serialization<ept id=\"p1\">](../../../docs/framework/serialization/custom-serialization.md)</ept>","pos":[2385,2470],"source":"[Custom Serialization](../../../docs/framework/serialization/custom-serialization.md)"},{"content":"Describes how to customize serialization for a class by using the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.","pos":[2474,2600],"source":" Describes how to customize serialization for a class by using the <xref:System.Runtime.Serialization.ISerializable> interface."},{"content":"<bpt id=\"p1\">[</bpt>Steps in the Serialization Process<ept id=\"p1\">](../../../docs/framework/serialization/steps-in-the-serialization-process.md)</ept>","pos":[2607,2720],"source":"[Steps in the Serialization Process](../../../docs/framework/serialization/steps-in-the-serialization-process.md)"},{"content":"Describes the course of action serialization takes when the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Formatter.Serialize%2A&gt;</ph> method is called on a formatter.","pos":[2724,2875],"source":" Describes the course of action serialization takes when the <xref:System.Runtime.Serialization.Formatter.Serialize%2A> method is called on a formatter."},{"content":"<bpt id=\"p1\">[</bpt>Version Tolerant Serialization<ept id=\"p1\">](../../../docs/framework/serialization/version-tolerant-serialization.md)</ept>","pos":[2882,2987],"source":"[Version Tolerant Serialization](../../../docs/framework/serialization/version-tolerant-serialization.md)"},{"content":"Explains how to create serializable types that can be modified over time without causing applications to throw exceptions.","pos":[2991,3113]},{"content":"<bpt id=\"p1\">[</bpt>Serialization Guidelines<ept id=\"p1\">](../../../docs/framework/serialization/serialization-guidelines.md)</ept>","pos":[3120,3213],"source":"[Serialization Guidelines](../../../docs/framework/serialization/serialization-guidelines.md)"},{"content":"Provides some general guidelines for deciding when to serialize an object.","pos":[3217,3291]},{"pos":[3300,3309],"content":"Reference","linkify":"Reference","nodes":[{"content":"Reference","pos":[0,9]}]},{"content":"Contains classes that can be used for serializing and deserializing objects.","pos":[3352,3428]},{"pos":[3437,3453],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](../../../docs/framework/serialization/xml-and-soap-serialization.md)</ept>","pos":[3457,3554],"source":"[XML and SOAP Serialization](../../../docs/framework/serialization/xml-and-soap-serialization.md)"},{"content":"Describes the XML serialization mechanism that is included with the common language runtime.","pos":[3558,3650]},{"content":"<bpt id=\"p1\">[</bpt>Security and Serialization<ept id=\"p1\">](../../../docs/framework/misc/security-and-serialization.md)</ept>","pos":[3657,3745],"source":"[Security and Serialization](../../../docs/framework/misc/security-and-serialization.md)"},{"content":"Describes the secure coding guidelines to follow when writing code that performs serialization.","pos":[3749,3844]},{"content":"<bpt id=\"p1\">[</bpt>Remote Objects<ept id=\"p1\">](http://msdn.microsoft.com/en-us/515686e6-0a8d-42f7-8188-73abede57c58)</ept>","pos":[3851,3937],"source":"[Remote Objects](http://msdn.microsoft.com/en-us/515686e6-0a8d-42f7-8188-73abede57c58)"},{"content":"Describes the various communications methods available in the .NET Framework for remote communications.","pos":[3941,4044]},{"content":"<bpt id=\"p1\">[</bpt>XML Web Services Created Using ASP.NET and XML Web Service Clients<ept id=\"p1\">](http://msdn.microsoft.com/en-us/1e64af78-d705-4384-b08d-591a45f4379c)</ept>","pos":[4051,4189],"source":"[XML Web Services Created Using ASP.NET and XML Web Service Clients](http://msdn.microsoft.com/en-us/1e64af78-d705-4384-b08d-591a45f4379c)"},{"content":"Provides topics that describe and explain how to program XML Web services created using ASP.NET.","pos":[4193,4289]}]}