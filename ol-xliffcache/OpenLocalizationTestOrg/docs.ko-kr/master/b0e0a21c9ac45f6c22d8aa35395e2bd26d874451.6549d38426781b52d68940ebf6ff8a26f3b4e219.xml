{"content":"---\ntitle: \"Programming WCF Security | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"message security [WCF], programming overview\"\nms.assetid: 739ec222-4eda-4cc9-a470-67e64a7a3f10\ncaps.latest.revision: 25\nauthor: \"BrucePerlerMS\"\nms.author: \"bruceper\"\nmanager: \"mbaldwin\"\n---\n# Programming WCF Security\nThis topic describes the fundamental programming tasks used to create a secure [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] application. This topic covers only authentication, confidentiality, and integrity, collectively known as *transfer security*. This topic does not cover authorization (the control of access to resources or services); for information on authorization, see [Authorization](../../../../docs/framework/wcf/feature-details/authorization-in-wcf.md).  \n  \n> [!NOTE]\n>  For a valuable introduction to security concepts, especially in regard to [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], see the set of patterns and practices tutorials on MSDN at [Scenarios, Patterns, and Implementation Guidance for Web Services Enhancements (WSE) 3.0](http://go.microsoft.com/fwlink/?LinkID=88250).  \n  \n Programming [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] security is based on three steps setting the following: the security mode, a client credential type, and the credential values. You can perform these steps either through code or configuration.  \n  \n## Setting the Security Mode  \n The following explains the general steps for programming with the security mode in [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]:  \n  \n1.  Select one of the predefined bindings appropriate to your application requirements. For a list of the binding choices, see [System-Provided Bindings](../../../../docs/framework/wcf/system-provided-bindings.md). By default, nearly every binding has security enabled. The one exception is the <xref:System.ServiceModel.BasicHttpBinding> class (using configuration, the [\\<basicHttpBinding>](../../../../docs/framework/configure-apps/file-schema/wcf/basichttpbinding.md)).  \n  \n     The binding you select determines the transport. For example, <xref:System.ServiceModel.WSHttpBinding> uses HTTP as the transport; <xref:System.ServiceModel.NetTcpBinding> uses TCP.  \n  \n2.  Select one of the security modes for the binding. Note that the binding you select determines the available mode choices. For example, the <xref:System.ServiceModel.WSDualHttpBinding> does not allow transport security (it is not an option). Similarly, neither the <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding> nor the <xref:System.ServiceModel.NetNamedPipeBinding> allows message security.  \n  \n     You have three choices:  \n  \n    1.  `Transport`  \n  \n         Transport security depends on the mechanism that the binding you have selected uses. For example, if you are using `WSHttpBinding` then the security mechanism is Secure Sockets Layer (SSL) (also the mechanism for the HTTPS protocol). Generally speaking, the main advantage of transport security is that it delivers good throughput no matter which transport you are using. However, it does have two limitations: The first is that the transport mechanism dictates the credential type used to authenticate a user. This is a drawback only if a service needs to interoperate with other services that demand different types of credentials. The second is that, because the security is not applied at the message level, security is implemented in a hop-by-hop manner rather than end-to-end. This latter limitation is an issue only if the message path between client and service includes intermediaries. [!INCLUDE[crabout](../../../../includes/crabout-md.md)] which transport to use, see [Choosing a Transport](../../../../docs/framework/wcf/feature-details/choosing-a-transport.md). [!INCLUDE[crabout](../../../../includes/crabout-md.md)] using transport security, see [Transport Security Overview](../../../../docs/framework/wcf/feature-details/transport-security-overview.md).  \n  \n    2.  `Message`  \n  \n         Message security means that every message includes the necessary headers and data to keep the message secure. Because the composition of the headers varies, you can include any number of credentials. This becomes a factor if you are interoperating with other services that demand a specific credential type that a transport mechanism can't supply, or if the message must be used with more than one service, where each service demands a different credential type.  \n  \n         [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)] [Message Security](../../../../docs/framework/wcf/feature-details/message-security-in-wcf.md).  \n  \n    3.  `TransportWithMessageCredential`  \n  \n         This choice uses the transport layer to secure the message transfer, while every message includes the rich credentials other services need. This combines the performance advantage of transport security with the rich credentials advantage of message security. This is available with the following bindings: <xref:System.ServiceModel.BasicHttpBinding>, <xref:System.ServiceModel.WSFederationHttpBinding>, <xref:System.ServiceModel.NetPeerTcpBinding>, and <xref:System.ServiceModel.WSHttpBinding>.  \n  \n3.  If you decide to use transport security for HTTP (in other words, HTTPS), you must also configure the host with an SSL certificate and enable SSL on a port. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][HTTP Transport Security](../../../../docs/framework/wcf/feature-details/http-transport-security.md).  \n  \n4.  If you are using the <xref:System.ServiceModel.WSHttpBinding> and do not need to establish a secure session, set the <xref:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext%2A> property to `false`.  \n  \n     A secure session occurs when a client and service create a channel using a symmetric key (both client and server use the same key for the length of a conversation, until the dialog is closed).  \n  \n## Setting the Client Credential Type  \n Select a client credential type as appropriate. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][Selecting a Credential Type](../../../../docs/framework/wcf/feature-details/selecting-a-credential-type.md). The following client credential types are available:  \n  \n-   `Windows`  \n  \n-   `Certificate`  \n  \n-   `Digest`  \n  \n-   `Basic`  \n  \n-   `UserName`  \n  \n-   `NTLM`  \n  \n-   `IssuedToken`  \n  \n Depending on how you set the mode, you must set the credential type. For example, if you have selected the `wsHttpBinding`, and have set the mode to \"Message,\" then you can also set the `clientCredentialType` attribute of the Message element to one of the following values: `None`, `Windows`, `UserName`, `Certificate`, and `IssuedToken`, as shown in the following configuration example.  \n  \n```  \n<system.serviceModel>  \n<bindings>  \n  <wsHttpBinding>  \n    <binding name=\"myBinding\">  \n      <security mode=\"Message\"/>  \n      <message clientCredentialType=\"Windows\"/>  \n    </binding>  \n</bindings>  \n</system.serviceModel>  \n```  \n  \n Or in code:  \n  \n [!code-csharp[c_WsHttpService#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_wshttpservice/cs/source.cs#1)]\n [!code-vb[c_WsHttpService#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_wshttpservice/vb/source.vb#1)]  \n  \n## Setting Service Credential Values  \n Once you select a client credential type, you must set the actual credentials for the service and client to use. On the service, credentials are set using the <xref:System.ServiceModel.Description.ServiceCredentials> class and returned by the <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> property of the <xref:System.ServiceModel.ServiceHostBase> class. The binding in use implies the service credential type, the security mode chosen, and the type of the client credential. The following code sets a certificate for a service credential.  \n  \n [!code-csharp[c_tcpService#3](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_tcpservice/cs/source.cs#3)]\n [!code-vb[c_tcpService#3](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpservice/vb/source.vb#3)]  \n  \n## Setting Client Credential Values  \n On the client, set client credential values using the <xref:System.ServiceModel.Description.ClientCredentials> class and returned by the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property of the <xref:System.ServiceModel.ClientBase%601> class. The following code sets a certificate as a credential on a client using the TCP protocol.  \n  \n [!code-csharp[c_TcpClient#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_tcpclient/cs/source.cs#1)]\n [!code-vb[c_TcpClient#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpclient/vb/source.vb#1)]  \n  \n## See Also  \n [Basic WCF Programming](../../../../docs/framework/wcf/basic-wcf-programming.md)   \n [Common Security Scenarios](../../../../docs/framework/wcf/feature-details/common-security-scenarios.md)","nodes":[{"pos":[4,429],"nodes":[{"content":"Programming WCF Security | Microsoft Docs","nodes":[{"pos":[0,41],"content":"Programming WCF Security | Microsoft Docs","nodes":[{"content":"Programming WCF Security | Microsoft Docs","pos":[0,41]}]}],"pos":[6,50],"yaml":true}],"content":"title: \"Programming WCF Security | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"message security [WCF], programming overview\"\nms.assetid: 739ec222-4eda-4cc9-a470-67e64a7a3f10\ncaps.latest.revision: 25\nauthor: \"BrucePerlerMS\"\nms.author: \"bruceper\"\nmanager: \"mbaldwin\"","yamlblock":true},{"pos":[436,460],"content":"Programming WCF Security","linkify":"Programming WCF Security","nodes":[{"content":"Programming WCF Security","pos":[0,24]}]},{"content":"This topic describes the fundamental programming tasks used to create a secure <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> application.","pos":[461,608],"source":"This topic describes the fundamental programming tasks used to create a secure [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] application."},{"content":"This topic covers only authentication, confidentiality, and integrity, collectively known as <bpt id=\"p1\">*</bpt>transfer security<ept id=\"p1\">*</ept>.","pos":[609,722],"source":" This topic covers only authentication, confidentiality, and integrity, collectively known as *transfer security*."},{"content":"This topic does not cover authorization (the control of access to resources or services); for information on authorization, see <bpt id=\"p1\">[</bpt>Authorization<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/authorization-in-wcf.md)</ept>.","pos":[723,939],"source":" This topic does not cover authorization (the control of access to resources or services); for information on authorization, see [Authorization](../../../../docs/framework/wcf/feature-details/authorization-in-wcf.md)."},{"pos":[947,1285],"content":"[!NOTE]\n For a valuable introduction to security concepts, especially in regard to [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], see the set of patterns and practices tutorials on MSDN at [Scenarios, Patterns, and Implementation Guidance for Web Services Enhancements (WSE) 3.0](http://go.microsoft.com/fwlink/?LinkID=88250).","leadings":["","> "],"nodes":[{"content":"For a valuable introduction to security concepts, especially in regard to <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, see the set of patterns and practices tutorials on MSDN at <bpt id=\"p1\">[</bpt>Scenarios, Patterns, and Implementation Guidance for Web Services Enhancements (WSE) 3.0<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=88250)</ept>.","pos":[9,336],"source":"For a valuable introduction to security concepts, especially in regard to [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], see the set of patterns and practices tutorials on MSDN at [Scenarios, Patterns, and Implementation Guidance for Web Services Enhancements (WSE) 3.0](http://go.microsoft.com/fwlink/?LinkID=88250)."}]},{"content":"Programming <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> security is based on three steps setting the following: the security mode, a client credential type, and the credential values.","pos":[1292,1487],"source":"Programming [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] security is based on three steps setting the following: the security mode, a client credential type, and the credential values."},{"content":"You can perform these steps either through code or configuration.","pos":[1488,1553]},{"pos":[1562,1587],"content":"Setting the Security Mode","linkify":"Setting the Security Mode","nodes":[{"content":"Setting the Security Mode","pos":[0,25]}]},{"pos":[1591,1730],"content":"The following explains the general steps for programming with the security mode in <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>:","source":"The following explains the general steps for programming with the security mode in [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]:"},{"content":"Select one of the predefined bindings appropriate to your application requirements.","pos":[1740,1823]},{"content":"For a list of the binding choices, see <bpt id=\"p1\">[</bpt>System-Provided Bindings<ept id=\"p1\">](../../../../docs/framework/wcf/system-provided-bindings.md)</ept>.","pos":[1824,1950],"source":" For a list of the binding choices, see [System-Provided Bindings](../../../../docs/framework/wcf/system-provided-bindings.md)."},{"content":"By default, nearly every binding has security enabled.","pos":[1951,2005]},{"content":"The one exception is the <ph id=\"ph1\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> class (using configuration, the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&lt;</ph>basicHttpBinding&gt;<ept id=\"p1\">](../../../../docs/framework/configure-apps/file-schema/wcf/basichttpbinding.md)</ept>).","pos":[2006,2209],"source":" The one exception is the <xref:System.ServiceModel.BasicHttpBinding> class (using configuration, the [\\<basicHttpBinding>](../../../../docs/framework/configure-apps/file-schema/wcf/basichttpbinding.md))."},{"content":"The binding you select determines the transport.","pos":[2220,2268]},{"content":"For example, <ph id=\"ph1\">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> uses HTTP as the transport; <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> uses TCP.","pos":[2269,2401],"source":" For example, <xref:System.ServiceModel.WSHttpBinding> uses HTTP as the transport; <xref:System.ServiceModel.NetTcpBinding> uses TCP."},{"content":"Select one of the security modes for the binding.","pos":[2411,2460]},{"content":"Note that the binding you select determines the available mode choices.","pos":[2461,2532]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> does not allow transport security (it is not an option).","pos":[2533,2651],"source":" For example, the <xref:System.ServiceModel.WSDualHttpBinding> does not allow transport security (it is not an option)."},{"content":"Similarly, neither the <ph id=\"ph1\">&lt;xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding&gt;</ph> nor the <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetNamedPipeBinding&gt;</ph> allows message security.","pos":[2652,2820],"source":" Similarly, neither the <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding> nor the <xref:System.ServiceModel.NetNamedPipeBinding> allows message security."},{"content":"You have three choices:","pos":[2831,2854]},{"content":"Transport security depends on the mechanism that the binding you have selected uses.","pos":[2894,2978]},{"content":"For example, if you are using <ph id=\"ph1\">`WSHttpBinding`</ph> then the security mechanism is Secure Sockets Layer (SSL) (also the mechanism for the HTTPS protocol).","pos":[2979,3127],"source":" For example, if you are using `WSHttpBinding` then the security mechanism is Secure Sockets Layer (SSL) (also the mechanism for the HTTPS protocol)."},{"content":"Generally speaking, the main advantage of transport security is that it delivers good throughput no matter which transport you are using.","pos":[3128,3265]},{"content":"However, it does have two limitations: The first is that the transport mechanism dictates the credential type used to authenticate a user.","pos":[3266,3404]},{"content":"This is a drawback only if a service needs to interoperate with other services that demand different types of credentials.","pos":[3405,3527]},{"content":"The second is that, because the security is not applied at the message level, security is implemented in a hop-by-hop manner rather than end-to-end.","pos":[3528,3676]},{"content":"This latter limitation is an issue only if the message path between client and service includes intermediaries.","pos":[3677,3788]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> which transport to use, see <bpt id=\"p1\">[</bpt>Choosing a Transport<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/choosing-a-transport.md)</ept>.","pos":[3789,3968],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] which transport to use, see [Choosing a Transport](../../../../docs/framework/wcf/feature-details/choosing-a-transport.md)."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> using transport security, see <bpt id=\"p1\">[</bpt>Transport Security Overview<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/transport-security-overview.md)</ept>.","pos":[3969,4164],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] using transport security, see [Transport Security Overview](../../../../docs/framework/wcf/feature-details/transport-security-overview.md)."},{"content":"Message security means that every message includes the necessary headers and data to keep the message secure.","pos":[4202,4311]},{"content":"Because the composition of the headers varies, you can include any number of credentials.","pos":[4312,4401]},{"content":"This becomes a factor if you are interoperating with other services that demand a specific credential type that a transport mechanism can't supply, or if the message must be used with more than one service, where each service demands a different credential type.","pos":[4402,4664]},{"pos":[4679,4833],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph> <bpt id=\"p1\">[</bpt>Message Security<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/message-security-in-wcf.md)</ept>.","source":"[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)] [Message Security](../../../../docs/framework/wcf/feature-details/message-security-in-wcf.md)."},{"content":"This choice uses the transport layer to secure the message transfer, while every message includes the rich credentials other services need.","pos":[4894,5033]},{"content":"This combines the performance advantage of transport security with the rich credentials advantage of message security.","pos":[5034,5152]},{"content":"This is available with the following bindings: <ph id=\"ph1\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.WSFederationHttpBinding&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ServiceModel.NetPeerTcpBinding&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>.","pos":[5153,5388],"source":" This is available with the following bindings: <xref:System.ServiceModel.BasicHttpBinding>, <xref:System.ServiceModel.WSFederationHttpBinding>, <xref:System.ServiceModel.NetPeerTcpBinding>, and <xref:System.ServiceModel.WSHttpBinding>."},{"content":"If you decide to use transport security for HTTP (in other words, HTTPS), you must also configure the host with an SSL certificate and enable SSL on a port.","pos":[5398,5554]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>HTTP Transport Security<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/http-transport-security.md)</ept>.","pos":[5555,5715],"source":"[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][HTTP Transport Security](../../../../docs/framework/wcf/feature-details/http-transport-security.md)."},{"pos":[5725,5948],"content":"If you are using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> and do not need to establish a secure session, set the <ph id=\"ph2\">&lt;xref:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext%2A&gt;</ph> property to <ph id=\"ph3\">`false`</ph>.","source":"If you are using the <xref:System.ServiceModel.WSHttpBinding> and do not need to establish a secure session, set the <xref:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext%2A> property to `false`."},{"content":"A secure session occurs when a client and service create a channel using a symmetric key (both client and server use the same key for the length of a conversation, until the dialog is closed).","pos":[5959,6151]},{"pos":[6160,6194],"content":"Setting the Client Credential Type","linkify":"Setting the Client Credential Type","nodes":[{"content":"Setting the Client Credential Type","pos":[0,34]}]},{"content":"Select a client credential type as appropriate.","pos":[6198,6245]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>Selecting a Credential Type<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/selecting-a-credential-type.md)</ept>.","pos":[6246,6414],"source":"[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][Selecting a Credential Type](../../../../docs/framework/wcf/feature-details/selecting-a-credential-type.md)."},{"content":"The following client credential types are available:","pos":[6415,6467]},{"content":"Depending on how you set the mode, you must set the credential type.","pos":[6610,6678]},{"content":"For example, if you have selected the <ph id=\"ph1\">`wsHttpBinding`</ph>, and have set the mode to \"Message,\" then you can also set the <ph id=\"ph2\">`clientCredentialType`</ph> attribute of the Message element to one of the following values: <ph id=\"ph3\">`None`</ph>, <ph id=\"ph4\">`Windows`</ph>, <ph id=\"ph5\">`UserName`</ph>, <ph id=\"ph6\">`Certificate`</ph>, and <ph id=\"ph7\">`IssuedToken`</ph>, as shown in the following configuration example.","pos":[6679,6997],"source":" For example, if you have selected the `wsHttpBinding`, and have set the mode to \"Message,\" then you can also set the `clientCredentialType` attribute of the Message element to one of the following values: `None`, `Windows`, `UserName`, `Certificate`, and `IssuedToken`, as shown in the following configuration example."},{"content":"Or in code:","pos":[7250,7261]},{"pos":[7268,7505],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_WsHttpService#1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_wshttpservice/cs/source.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>c_WsHttpService#1<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_wshttpservice/vb/source.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[c_WsHttpService#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_wshttpservice/cs/source.cs#1)]\n [!code-vb[c_WsHttpService#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_wshttpservice/vb/source.vb#1)]"},{"pos":[7514,7547],"content":"Setting Service Credential Values","linkify":"Setting Service Credential Values","nodes":[{"content":"Setting Service Credential Values","pos":[0,33]}]},{"content":"Once you select a client credential type, you must set the actual credentials for the service and client to use.","pos":[7551,7663]},{"content":"On the service, credentials are set using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceCredentials&gt;</ph> class and returned by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHostBase.Credentials%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> class.","pos":[7664,7917],"source":" On the service, credentials are set using the <xref:System.ServiceModel.Description.ServiceCredentials> class and returned by the <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> property of the <xref:System.ServiceModel.ServiceHostBase> class."},{"content":"The binding in use implies the service credential type, the security mode chosen, and the type of the client credential.","pos":[7918,8038]},{"content":"The following code sets a certificate for a service credential.","pos":[8039,8102]},{"pos":[8109,8334],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_tcpService#3<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_tcpservice/cs/source.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>c_tcpService#3<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpservice/vb/source.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[c_tcpService#3](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_tcpservice/cs/source.cs#3)]\n [!code-vb[c_tcpService#3](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpservice/vb/source.vb#3)]"},{"pos":[8343,8375],"content":"Setting Client Credential Values","linkify":"Setting Client Credential Values","nodes":[{"content":"Setting Client Credential Values","pos":[0,32]}]},{"content":"On the client, set client credential values using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> class and returned by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class.","pos":[8379,8643],"source":"On the client, set client credential values using the <xref:System.ServiceModel.Description.ClientCredentials> class and returned by the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property of the <xref:System.ServiceModel.ClientBase%601> class."},{"content":"The following code sets a certificate as a credential on a client using the TCP protocol.","pos":[8644,8733]},{"pos":[8740,8961],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_TcpClient#1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_tcpclient/cs/source.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>c_TcpClient#1<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpclient/vb/source.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[c_TcpClient#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_tcpclient/cs/source.cs#1)]\n [!code-vb[c_TcpClient#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpclient/vb/source.vb#1)]"},{"pos":[8970,8978],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Basic WCF Programming<ept id=\"p1\">](../../../../docs/framework/wcf/basic-wcf-programming.md)</ept><ph id=\"ph1\"> </ph>","pos":[8982,9063],"source":"[Basic WCF Programming](../../../../docs/framework/wcf/basic-wcf-programming.md) "},{"content":"<bpt id=\"p1\">[</bpt>Common Security Scenarios<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/common-security-scenarios.md)</ept>","pos":[9067,9171],"source":"[Common Security Scenarios](../../../../docs/framework/wcf/feature-details/common-security-scenarios.md)"}]}