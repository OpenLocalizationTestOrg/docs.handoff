<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1b9a0e6bff672d92b91d6e9e12125f0a358843f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\debug-trace-profile\performance-counters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2b4bd554335bea9362a6e33acdbd746de412f88</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b7582c5e67809f363fee07f2ec18312c3744807</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Performance Counters in the .NET Framework | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Performance Counters in the .NET Framework</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic provides a list of performance counters you can find in the <bpt id="p1">[</bpt>Performance Monitor<ept id="p1">](http://technet.microsoft.com/library/cc749249.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Exception performance counters<ept id="p1">](#exception)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interop performance counters<ept id="p1">](#interop)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>JIT performance counters<ept id="p1">](#jit)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Loading performance counters<ept id="p1">](#loading)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lock and thread performance counters<ept id="p1">](#lockthread)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Memory performance counters<ept id="p1">](#memory)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Networking performance counters<ept id="p1">](#networking)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security performance counters<ept id="p1">](#security)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Exception performance counters</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Performance console .NET CLR Exceptions category includes counters that provide information about the exceptions thrown by an application.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following table describes these performance counters.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Performance counter</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of Exceps Thrown<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Displays the total number of exceptions thrown since the application started.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This includes both .NET exceptions and unmanaged exceptions that are converted into .NET exceptions.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, an HRESULT returned from unmanaged code is converted to an exception in managed code.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This counter includes both handled and unhandled exceptions.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Exceptions that are rethrown are counted again.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of Exceps Thrown / Sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Displays the number of exceptions thrown per second.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This includes both .NET exceptions and unmanaged exceptions that are converted into .NET exceptions.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, an HRESULT returned from unmanaged code is converted to an exception in managed code.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This counter includes both handled and unhandled exceptions.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This counter is an indicator of potential performance problems if a large (&gt;100s) number of exceptions are thrown.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of Filters / Sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Displays the number of .NET exception filters executed per second.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An exception filter evaluates regardless of whether an exception is handled.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of Finallys / Sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Displays the number of finally blocks executed per second.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A finally block is guaranteed to be executed regardless of how the try block was exited.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Only the finally blocks executed for an exception are counted; finally blocks on normal code paths are not counted by this counter.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Throw to Catch Depth / Sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Displays the number of stack frames traversed, from the frame that threw the exception to the frame that handled the exception, per second.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This counter resets to zero when an exception handler is entered, so nested exceptions show the handler-to-handler stack depth.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Interop performance counters</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The Performance console .NET CLR Interop category includes counters that provide information about an application's interaction with COM components, COM+ services, and external type libraries.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following table describes these performance counters.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Performance counter</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of CCWs<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Displays the current number of COM callable wrappers (CCWs).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A CCW is a proxy for a managed object being referenced from an unmanaged COM client.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This counter indicates the number of managed objects referenced by unmanaged COM code.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of marshaling<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Displays the total number of times arguments and return values have been marshaled from managed to unmanaged code, and vice versa, since the application started.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This counter is not incremented if the stubs are inlined.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>(Stubs are responsible for marshaling arguments and return values).</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Stubs are usually inlined if the marshaling overhead is small.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of Stubs<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Displays the current number of stubs created by the common language runtime.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Stubs are responsible for marshaling arguments and return values from managed to unmanaged code, and vice versa, during a COM interop call or a platform invoke call.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of TLB exports / sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of TLB imports / sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>JIT performance counters</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The Performance console .NET CLR JIT category includes counters that provide information about code that has been JIT-compiled.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following table describes these performance counters.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Performance counter</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of IL Bytes JITted<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Displays the total number of Microsoft intermediate language (MSIL) bytes compiled by the just-in-time (JIT) compiler since the application started.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This counter is equivalent to the <bpt id="p1">**</bpt>Total # of IL Bytes Jitted<ept id="p1">**</ept> counter.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of Methods JITted<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Displays the total number of methods JIT-compiled since the application started.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This counter does not include pre-JIT-compiled methods.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>% Time in Jit<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Displays the percentage of elapsed time spent in JIT compilation since the last JIT compilation phase.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This counter is updated at the end of every JIT compilation phase.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A JIT compilation phase occurs when a method and its dependencies are compiled.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IL Bytes Jitted / sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Displays the number of MSIL bytes that are JIT-compiled per second.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Standard Jit Failures<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Displays the peak number of methods the JIT compiler has failed to compile since the application started.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This failure can occur if the MSIL cannot be verified or if there is an internal error in the JIT compiler.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Total # of IL Bytes Jitted<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Displays the total MSIL bytes JIT-compiled since the application started.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This counter is equivalent to the <bpt id="p1">**</bpt># of IL Bytes Jitted<ept id="p1">**</ept> counter.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Loading performance counters</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The Performance console .NET CLR Loading category includes counters that provide information about assemblies, classes, and application domains that are loaded.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following table describes these performance counters.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Performance counter</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>% Time Loading<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Assembly Search Length<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bytes in Loader Heap<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Displays the current size, in bytes, of the memory committed by the class loader across all application domains.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Committed memory is the physical space reserved in the disk paging file.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Current appdomains<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Displays the current number of application domains loaded in this application.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Current Assemblies<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Displays the current number of assemblies loaded across all application domains in the currently running application.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If the assembly is loaded as domain-neutral from multiple application domains, this counter is incremented only once.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Current Classes Loaded<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Displays the current number of classes loaded in all assemblies.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Rate of appdomains<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Displays the number of application domains loaded per second.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Rate of appdomains unloaded<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Displays the number of application domains unloaded per second.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Rate of Assemblies<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Displays the number of assemblies loaded per second across all application domains.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If the assembly is loaded as domain-neutral from multiple application domains, this counter is incremented only once.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Rate of Classes Loaded<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Displays the number of classes loaded per second in all assemblies.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Rate of Load Failures<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Displays the number of classes that failed to load per second.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Load failures can occur for many reasons, such as inadequate security or invalid format.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For details, see the profiling services Help.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Total # of Load Failures<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Displays the peak number of classes that have failed to load since the application started.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Load failures can occur for many reasons, such as inadequate security or invalid format.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For details, see the profiling services Help.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Total Appdomains<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Displays the peak number of application domains loaded since the application started.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Total appdomains unloaded<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Displays the total number of application domains unloaded since the application started.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If an application domain is loaded and unloaded multiple times, this counter increments each time the application domain is unloaded.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Total Assemblies<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Displays the total number of assemblies loaded since the application started.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If the assembly is loaded as domain-neutral from multiple application domains, this counter is incremented only once.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Total Classes Loaded<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Displays the cumulative number of classes loaded in all assemblies since the application started.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Lock and thread performance counters</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The Performance console .NET CLR LocksAndThreads category includes counters that provide information about managed locks and threads that an application uses.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The following table describes these performance counters.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Performance counter</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of current logical Threads<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Displays the number of current managed thread objects in the application.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This counter maintains the count of both running and stopped threads.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays only the last observed value.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of current physical Threads<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Displays the number of native operating system threads created and owned by the common language runtime to act as underlying threads for managed thread objects.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This counter's value does not include the threads used by the runtime in its internal operations; it is a subset of the threads in the operating system process.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of current recognized threads<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Displays the number of threads that are currently recognized by the runtime.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>These threads are associated with a corresponding managed thread object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The runtime does not create these threads, but they have run inside the runtime at least once.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Only unique threads are tracked; threads with the same thread ID that reenter the runtime or are recreated after the thread exits are not counted twice.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of total recognized Threads<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Displays the total number of threads that have been recognized by the runtime since the application started.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>These threads are associated with a corresponding managed thread object.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The runtime does not create these threads, but they have run inside the runtime at least once.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Only unique threads are tracked; threads with the same thread ID that reenter the runtime or are recreated after the thread exits are not counted twice.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Contention Rate / Sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Displays the rate at which threads in the runtime attempt to acquire a managed lock unsuccessfully.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Current Queue Length<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Displays the total number of threads that are currently waiting to acquire a managed lock in the application.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the last observed value.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Queue Length / sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Displays the number of threads per second that are waiting to acquire a lock in the application.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Queue Length Peak<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Displays the total number of threads that waited to acquire a managed lock since the application started.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>rate of recognized threads / sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Displays the number of threads per second that have been recognized by the runtime.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>These threads are associated with a corresponding managed thread object.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The runtime does not create these threads, but they have run inside the runtime at least once.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Only unique threads are tracked; threads with the same thread ID that reenter the runtime or are recreated after the thread exits are not counted twice.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Total # of Contentions<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Displays the total number of times that threads in the runtime have attempted to acquire a managed lock unsuccessfully.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Memory performance counters</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The Performance console .NET CLR Memory category includes counters that provide information about the garbage collector.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The following table describes these performance counters.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Performance counter</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># Bytes in all Heaps<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Displays the sum of the <bpt id="p1">**</bpt>Gen 1 Heap Size<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Gen 2 Heap Size<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Large Object Heap Size<ept id="p3">**</ept> counters.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This counter indicates the current memory allocated in bytes on the garbage collection heaps.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># GC Handles<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Displays the current number of garbage collection handles in use.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Garbage collection handles are handles to resources external to the common language runtime and the managed environment.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># Gen 0 Collections<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Displays the number of times the generation 0 objects (that is, the youngest, most recently allocated objects) are garbage collected since the application started.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Generation 0 garbage collection occurs when the available memory in generation 0 is not sufficient to satisfy an allocation request.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This counter is incremented at the end of a generation 0 garbage collection.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Higher generation garbage collections include all lower generation collections.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This counter is explicitly incremented when a higher generation (generation 1 or 2) garbage collection occurs.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This counter displays the last observed value.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>_Global<ph id="ph1">\_</ph><ept id="p1">**</ept> counter value is not accurate and should be ignored.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># Gen 1 Collections<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Displays the number of times the generation 1 objects are garbage collected since the application started.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The counter is incremented at the end of a generation 1 garbage collection.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Higher generation garbage collections include all lower generation collections.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This counter is explicitly incremented when a higher generation (generation 2) garbage collection occurs.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This counter displays the last observed value.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>_Global<ph id="ph1">\_</ph><ept id="p1">**</ept> counter value is not accurate and should be ignored.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># Gen 2 Collections<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Displays the number of times the generation 2 objects are garbage collected since the application started.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The counter is incremented at the end of a generation 2 garbage collection (also called a full garbage collection).</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>This counter displays the last observed value.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>_Global<ph id="ph1">\_</ph><ept id="p1">**</ept> counter value is not accurate and should be ignored.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># Induced GC<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Displays the peak number of times garbage collection was performed because of an explicit call to <ph id="ph1">&lt;xref:System.GC.Collect%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>It is good practice to let the garbage collector tune the frequency of its collections.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of Pinned Objects<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Displays the number of pinned objects encountered in the last garbage collection.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>A pinned object is an object that the garbage collector cannot move in memory.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This counter tracks pinned objects only in the heaps that are garbage collected.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>For example, a generation 0 garbage collection causes enumeration of pinned objects only in the generation 0 heap.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># of Sink Blocks in use<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Displays the current number of synchronization blocks in use.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Synchronization blocks are per-object data structures allocated for storing synchronization information.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>They hold weak references to managed objects and must be scanned by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Synchronization blocks are not limited to storing synchronization information; they can also store COM interop metadata.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>This counter indicates performance problems with heavy use of synchronization primitives.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># Total committed Bytes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Displays the amount of virtual memory, in bytes, currently committed by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Committed memory is the physical memory for which space has been reserved in the disk paging file.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># Total reserved Bytes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Displays the amount of virtual memory, in bytes, currently reserved by the garbage collector.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Reserved memory is the virtual memory space reserved for the application when no disk or main memory pages have been used.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>% Time in GC<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Displays the percentage of elapsed time that was spent performing a garbage collection since the last garbage collection cycle.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>This counter usually indicates the work done by the garbage collector to collect and compact memory on behalf of the application.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This counter is updated only at the end of every garbage collection.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>This counter is not an average; its value reflects the last observed value.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Allocated Bytes/second<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Displays the number of bytes per second allocated on the garbage collection heap.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>This counter is updated at the end of every garbage collection, not at each allocation.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Finalization Survivors<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Displays the number of garbage-collected objects that survive a collection because they are waiting to be finalized.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>If these objects hold references to other objects, those objects also survive but are not counted by this counter.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Promoted Finalization-Memory from Gen 0<ept id="p1">**</ept> counter represents all the memory that survived due to finalization.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>This counter is not cumulative; it is updated at the end of every garbage collection with the count of the survivors during that particular collection only.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>This counter indicates the extra overhead that the application might incur because of finalization.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Gen 0 heap size<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Displays the maximum bytes that can be allocated in generation 0; it does not indicate the current number of bytes allocated in generation 0.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A generation 0 garbage collection occurs when the allocations since the last collection exceed this size.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The generation 0 size is tuned by the garbage collector and can change during the execution of the application.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>At the end of a generation 0 collection the size of the generation 0 heap is 0 bytes.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>This counter displays the size, in bytes, of allocations that invokes the next generation 0 garbage collection.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This counter is updated at the end of a garbage collection, not at each allocation.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Gen 0 Promoted Bytes/Sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Displays the bytes per second that are promoted from generation 0 to generation 1.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Memory is promoted when it survives a garbage collection.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This counter is an indicator of relatively long-lived objects being created per second.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This counter displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Gen 1 heap size<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Displays the current number of bytes in generation 1; this counter does not display the maximum size of generation 1.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Objects are not directly allocated in this generation; they are promoted from previous generation 0 garbage collections.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>This counter is updated at the end of a garbage collection, not at each allocation.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Gen 1 Promoted Bytes/Sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Displays the bytes per second that are promoted from generation 1 to generation 2.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Objects that are promoted only because they are waiting to be finalized are not included in this counter.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Memory is promoted when it survives a garbage collection.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Nothing is promoted from generation 2 because it is the oldest generation.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>This counter is an indicator of very long-lived objects being created per second.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>This counter displays the difference between the values observed in the last two samples divided by the duration of the sample interval.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Gen 2 heap size<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Displays the current number of bytes in generation 2.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Objects are not directly allocated in this generation; they are promoted from generation 1 during previous generation 1 garbage collections.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>This counter is updated at the end of a garbage collection, not at each allocation.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Large Object Heap size<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Displays the current size, in bytes, of the Large Object Heap.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Objects that are greater than approximately 85,000 bytes are treated as large objects by the garbage collector and are directly allocated in a special heap; they are not promoted through the generations.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>This counter is updated at the end of a garbage collection, not at each allocation.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Process ID<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Displays the process ID of the CLR process instance that is being monitored.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Promoted Finalization-Memory from Gen 0<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Displays the bytes of memory that are promoted from generation 0 to generation 1 only because they are waiting to be finalized.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>This counter is not cumulative; it displays the value observed at the end of the last garbage collection.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Promoted Memory from Gen 0<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Displays the bytes of memory that survive garbage collection and are promoted from generation 0 to generation 1.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Objects that are promoted only because they are waiting to be finalized are not included in this counter.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>This counter is not cumulative; it displays the value observed at the end of the last garbage collection.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Promoted Memory from Gen 1<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Displays the bytes of memory that survive garbage collection and are promoted from generation 1 to generation 2.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Objects that are promoted only because they are waiting to be finalized are not included in this counter.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>This counter is not cumulative; it displays the value observed at the end of the last garbage collection.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>This counter is reset to 0 if the last garbage collection was a generation 0 collection only.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Networking performance counters</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The Performance console .NET CLR Networking category includes counters that provide information about data that an application sends and receives over the network.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The following table describes these performance counters.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Performance counter</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bytes Received<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The cumulative total number of bytes received by all <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> objects within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> since the process started.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>This number includes data and any protocol information that is not defined by TCP/IP.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bytes Sent<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The cumulative number of bytes sent by all <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> objects within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> since the process started.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>This number includes data and any protocol information that is not defined by TCP/IP.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Connections Established<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The cumulative total number of <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> objects for stream sockets that were ever connected within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> since the process started.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Datagrams Received<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The cumulative total number of datagram packets received by all <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> objects within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> since the process started.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Datagrams Sent<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The cumulative total number of datagram packets sent by all <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> objects within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> since the process started.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequest Average Lifetime<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The average time to completion for all <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects that ended in the last interval within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> since the process started.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequest Average Queue Time<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The average time-on-queue for all <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects that left the queue in the last interval within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> since the process started.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequests Created/sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects created per second within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequests Queued/sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects that were added to the queue per second within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequests Aborted/sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects where the application called the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> method per second within the <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequests Failed/sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects that received a failed status code from the server per second within the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>There are several classes of networking performance counters supported:</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Event counters that measure the number of times some event occurred.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Data counters that measure the quantity of data sent or received.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Duration counters that measure how long different processes take.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The times are measured on the objects each interval (usually in seconds) after they come out of different states.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Per-Interval counters that measure the number of objects that are making a particular transition per interval (normally per second).</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The networking performance counters for events include the following:</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Connections Established<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Datagrams Received<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Datagrams Sent<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>These performance counters provide counts since the process started.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The counts of <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connections established includes explicit <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> method calls by an application for a stream socket connection that was established as well as internal calls made by other classes (<ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.FtpWebRequest&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.WebClient&gt;</ph>, and <ph id="ph6">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>, for example) to <ph id="ph7">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>The counts for <bpt id="p1">**</bpt>Datagrams Received<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Datagrams Sent<ept id="p2">**</ept> includes datagram packets sent or received using explicit <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> method calls by an application as well internal calls made by other classes (<ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, for example) to <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>class.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The counts <bpt id="p1">**</bpt>Datagrams Received<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Datagrams Sent<ept id="p2">**</ept> may also be used to provide a very crude measure of how many bytes were sent or received using datagrams by assuming an average size for a datagram.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The networking performance counters for data include the following:</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bytes Received<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bytes Sent<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The above counters provide counts of bytes since the process started.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>There are two duration counters that measure how long it took for <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects to pass through either their entire life cycle or just part of it:</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequest Average Lifetime<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequest Average Queue Time<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">**</bpt>HttpWebRequest Average Lifetime<ept id="p1">**</ept> counter, the lifetime of most <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects always starts with the time that the object is created up until the time that the response stream is closed by the application.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>There are two uncommon cases:</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>If the application never calls the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> methods, then the lifetime of the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object is ignored.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object throws a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> when calling the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> methods, the lifetime ends when the exception is thrown.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Technically, the underlying response stream is also closed at that point (the response stream returned to the user is really a memory stream containing a copy of the response stream).</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>There are four counters that track certain <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object issues per interval.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>These performance counters can help application developers, administrators, and support staff better understand what the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects are doing.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The counters include the following:</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequests Created/sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequests Queued/sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequests Aborted/sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HttpWebRequests Failed/sec<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">**</bpt>HttpWebRequests Aborted/sec<ept id="p1">**</ept> counter, internal calls to <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> are also counted.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>These internal calls are usually caused by timeouts that an application may want to measure.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>HttpWebRequests Failed/sec<ept id="p1">**</ept> counter contains the number of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects that received a failed status code from the server per second.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>This means that the status code received from the Http server at the end of the request was not in the range between 200 to 299.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Status codes that are handled and result in a new request (many of the 401 Unauthorized status codes, for example) will fail or not fail based on the result of the retry.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>If the application would see an error based on the retry, then this counter is incremented.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Networking performance counters can be accessed and managed using the <ph id="ph1">&lt;xref:System.Diagnostics.PerformanceCounter&gt;</ph> and related classes in the <ph id="ph2">&lt;xref:System.Diagnostics&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Networking performance counters can also be viewed with the Windows Performance Monitor console.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Networking performance counters need to be enabled in the configuration file to be used.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>All networking performance counters are enabled or disabled with a single setting in the configuration file.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Individual networking performance counters cannot be enabled or disabled.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>performanceCounter&gt; Element (Network Settings)<ept id="p1">](../../../docs/framework/configure-apps/file-schema/network/performancecounter-element-network-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>If networking counters are enabled, this will create and update both per-AppDomain and global performance counters.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>If disabled, the application will not provide any networking performance counter data.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Performance counters are grouped into Categories.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>An application can list all of the categories with the following example code:</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The networking performance counters are listed in two categories:</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>".NET CLR Networking" - the original performance counters introduced on .NET Framework Version 2 and supported on .NET Framework Version 2 and later.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>".NET CLR Networking 4.0.0.0" - All of the above socket counters plus the new performance counters supported on .NET Framework Version 4 and later.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>These new counters provide performance information on <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>For more information on accessing and managing performance counters in an application, see <bpt id="p1">[</bpt>Performance Counters<ept id="p1">](../../../docs/framework/debug-trace-profile/performance-counters.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Security performance counters</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The Performance console .NET CLR Security category includes counters that provide information about the security checks that the common language runtime performs for an application.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The following table describes these performance counters.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Performance counter</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt># Link Time Checks<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Displays the total number of link-time code access security checks since the application started.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Link-time code access security checks are performed when a caller demands a particular permission at just-in-time (JIT) compile time.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>A link-time check is performed once per caller.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>This count is not indicative of serious performance issues; it is merely indicative of the security system activity.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>% Time in RT checks<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Displays the percentage of elapsed time spent performing runtime code access security checks since the last sample.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>This counter is updated at the end of a .NET Framework security check.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>It is not an average; it represents the last observed value.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>% Time Sig Authenticating<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Stack Walk Depth<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Displays the depth of the stack during that last runtime code access security check.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Runtime code access security checks are performed by walking the stack.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>This counter is not an average; it displays only the last observed value.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Total Runtime Checks<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Displays the total number of runtime code access security checks performed since the application started.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Runtime code access security checks are performed when a caller demands a particular permission.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The runtime check is made on every call by the caller and examines the current thread stack of the caller.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>When used with the <bpt id="p1">**</bpt>Stack Walk Depth<ept id="p1">**</ept> counter, this counter indicates the performance penalty that occurs for security checks.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Performance Counters<ept id="p1">](../../../docs/framework/debug-trace-profile/performance-counters.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Runtime Profiling<ept id="p1">](../../../docs/framework/debug-trace-profile/runtime-profiling.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>