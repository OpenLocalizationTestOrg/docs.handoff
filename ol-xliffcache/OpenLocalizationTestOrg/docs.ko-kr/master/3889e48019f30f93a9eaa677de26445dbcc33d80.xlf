<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="iclrtask-reset-method.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3889e48019f30f93a9eaa677de26445dbcc33d80</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\hosting\iclrtask-reset-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a292447dc223a6f73337f71b3bab7ffee7e5d19</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e38908a48105b3889584a9bea4ed54f035148c6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICLRTask::Reset Method</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICLRTask::Reset Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Informs the common language runtime (CLR) that the host has completed a task, and enables the CLR to reuse the current <bpt id="p1">[</bpt>ICLRTask<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)</ept> instance to represent another task.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in] <ph id="ph1">`true`</ph>, if the runtime should reset all thread-related static values in addition to the security and locale information related to the current <ph id="ph2">`ICLRTask`</ph> instance; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the value is <ph id="ph1">`true`</ph>, the runtime resets data that was stored using <ph id="ph2">&lt;xref:System.Threading.Thread.AllocateDataSlot%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Threading.Thread.AllocateNamedDataSlot%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>HRESULT</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Reset`</ph> returned successfully.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>HOST_E_CLRNOTAVAILABLE</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The CLR has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>successfully</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>HOST_E_TIMEOUT</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The call timed out.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>HOST_E_NOT_OWNER</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The caller does not own the lock.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>HOST_E_ABANDONED</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An event was canceled while a blocked thread or fiber was waiting on it.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>E_FAIL</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An unknown catastrophic failure occurred.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When a method returns E_FAIL, the CLR is no longer usable within the process.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The CLR can recycle previously created <ph id="ph1">`ICLRTask`</ph> instances to avoid the overhead of repeatedly creating new instances every time it needs a fresh task.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The host enables this feature by calling <ph id="ph1">`ICLRTask::Reset`</ph> instead of <bpt id="p1">[</bpt>ICLRTask::ExitTask<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-exittask-method.md)</ept> when it has completed a task.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following list summarizes the normal life cycle of an <ph id="ph1">`ICLRTask`</ph> instance:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The runtime creates a new <ph id="ph1">`ICLRTask`</ph> instance.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The runtime calls <bpt id="p1">[</bpt>IHostTaskManager::GetCurrentTask<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-getcurrenttask-method.md)</ept> to get a reference to the current host task.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The runtime calls <bpt id="p1">[</bpt>IHostTask::SetCLRTask<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-setclrtask-method.md)</ept> to associate the new instance with the host task.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The task executes and completes.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The host destroys the task by calling <ph id="ph1">`ICLRTask::ExitTask`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Reset`</ph> alters this scenario in two ways.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In step 5 above, the host calls <ph id="ph1">`Reset`</ph> to reset the task to a clean state, and then decouples the <ph id="ph2">`ICLRTask`</ph> instance from its associated <bpt id="p1">[</bpt>IHostTask<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)</ept> instance.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If desired, the host can also cache the <ph id="ph1">`IHostTask`</ph> instance for reuse.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In step 1 above, the runtime pulls a recycled <ph id="ph1">`ICLRTask`</ph> from the cache instead of creating a new instance.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This approach works well when the host also has a pool of reusable worker tasks.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When the host destroys one of its <ph id="ph1">`IHostTask`</ph> instances, it destroys the corresponding <ph id="ph2">`ICLRTask`</ph> by calling <ph id="ph3">`ExitTask`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> MSCorEE.h</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> Included as a resource in MSCorEE.dll</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICLRTask Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICLRTaskManager Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IHostTask Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IHostTaskManager Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>