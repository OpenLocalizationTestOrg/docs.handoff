{"content":"---\ntitle: \"How to: Use Anonymous Pipes for Local Interprocess Communication\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"anonymous pipes [.NET Framework]\"\n  - \"parent-child communication [.NET Framework]\"\n  - \"pipes [.NET Framework]\"\n  - \"one-way communication [.NET Framework]\"\n  - \"local computer communication [.NET Framework], pipes\"\nms.assetid: e7773c77-c646-4a01-8a96-a003d59fc4c9\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# How to: Use Anonymous Pipes for Local Interprocess Communication\nAnonymous pipes provide interprocess communication on a local computer. They offer less functionality than named pipes, but also require less overhead. You can use anonymous pipes to make interprocess communication on a local computer easier. You cannot use anonymous pipes for communication over a network.  \n  \n To implement anonymous pipes, use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes.  \n  \n## Example  \n The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes. This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>. The parent process then creates a child process by using a client handle to create an <xref:System.IO.Pipes.AnonymousPipeClientStream> object. The child process has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.  \n  \n The parent process then sends a user-supplied string to the child process. The string is displayed to the console in the child process.  \n  \n The following example shows the server process.  \n  \n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](../../../samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]\n [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  \n  \n## Example  \n The following example shows the client process. The server process starts the client process and gives that process a client handle. The resulting executable from the client code should be named `pipeClient.exe` and be copied to the same directory as the server executable before running the server process.  \n  \n [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](../../../samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]\n [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](../../../samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](../../../samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  \n  \n## See also\n\n- [Pipes](../../../docs/standard/io/pipe-operations.md)\n- [How to: Use Named Pipes for Network Interprocess Communication](../../../docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)\n","nodes":[{"pos":[4,504],"embed":true,"restype":"x-metadata","content":"title: \"How to: Use Anonymous Pipes for Local Interprocess Communication\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"anonymous pipes [.NET Framework]\"\n  - \"parent-child communication [.NET Framework]\"\n  - \"pipes [.NET Framework]\"\n  - \"one-way communication [.NET Framework]\"\n  - \"local computer communication [.NET Framework], pipes\"\nms.assetid: e7773c77-c646-4a01-8a96-a003d59fc4c9\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"How to: Use Anonymous Pipes for Local Interprocess Communication","nodes":[{"pos":[0,64],"content":"How to: Use Anonymous Pipes for Local Interprocess Communication","nodes":[{"content":"How to: Use Anonymous Pipes for Local Interprocess Communication","pos":[0,64]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[511,575],"content":"How to: Use Anonymous Pipes for Local Interprocess Communication","linkify":"How to: Use Anonymous Pipes for Local Interprocess Communication","nodes":[{"content":"How to: Use Anonymous Pipes for Local Interprocess Communication","pos":[0,64]}]},{"content":"Anonymous pipes provide interprocess communication on a local computer.","pos":[576,647]},{"content":"They offer less functionality than named pipes, but also require less overhead.","pos":[648,727]},{"content":"You can use anonymous pipes to make interprocess communication on a local computer easier.","pos":[728,818]},{"content":"You cannot use anonymous pipes for communication over a network.","pos":[819,883]},{"pos":[890,1038],"content":"To implement anonymous pipes, use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> classes.","source":"To implement anonymous pipes, use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes."},{"pos":[1047,1054],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes.","pos":[1058,1179]},{"content":"This example creates an <ph id=\"ph1\">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object in a parent process with a <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.","pos":[1180,1374],"source":" This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>."},{"content":"The parent process then creates a child process by using a client handle to create an <ph id=\"ph1\">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object.","pos":[1375,1517],"source":" The parent process then creates a child process by using a client handle to create an <xref:System.IO.Pipes.AnonymousPipeClientStream> object."},{"content":"The child process has a <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.","pos":[1518,1628],"source":" The child process has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>."},{"content":"The parent process then sends a user-supplied string to the child process.","pos":[1635,1709]},{"content":"The string is displayed to the console in the child process.","pos":[1710,1770]},{"content":"The following example shows the server process.","pos":[1777,1824]},{"pos":[2411,2418],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the client process.","pos":[2422,2469]},{"content":"The server process starts the client process and gives that process a client handle.","pos":[2470,2554]},{"content":"The resulting executable from the client code should be named <ph id=\"ph1\">`pipeClient.exe`</ph> and be copied to the same directory as the server executable before running the server process.","pos":[2555,2729],"source":" The resulting executable from the client code should be named `pipeClient.exe` and be copied to the same directory as the server executable before running the server process."},{"pos":[3316,3324],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3328,3381],"content":"<bpt id=\"p1\">[</bpt>Pipes<ept id=\"p1\">](../../../docs/standard/io/pipe-operations.md)</ept>","source":"[Pipes](../../../docs/standard/io/pipe-operations.md)"},{"pos":[3384,3540],"content":"<bpt id=\"p1\">[</bpt>How to: Use Named Pipes for Network Interprocess Communication<ept id=\"p1\">](../../../docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)</ept>","source":"[How to: Use Named Pipes for Network Interprocess Communication](../../../docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)"}]}