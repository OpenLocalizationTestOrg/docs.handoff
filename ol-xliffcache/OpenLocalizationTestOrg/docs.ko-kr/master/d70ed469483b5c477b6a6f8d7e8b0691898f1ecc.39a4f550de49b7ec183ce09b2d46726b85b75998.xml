{"content":"---\ntitle: \"Return Values for the CStr Function (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"times, CStr Function return values\"\n  - \"type conversion\"\n  - \"dates [Visual Basic], CStr Function return values\"\n  - \"CStr function\"\n  - \"strings [Visual Basic], return value\"\n  - \"Date data type, converting\"\n  - \"dates [Visual Basic]\"\n  - \"String data type, converting\"\nms.assetid: 3aa744e7-1419-45d5-85e3-e5abc2953673\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Return Values for the CStr Function (Visual Basic)\nThe following table describes the return values for `CStr` for different data types of `expression`.  \n  \n|If `expression` type is|`CStr` returns|  \n|-----------------------------|--------------------|  \n|[Boolean Data Type](../../../visual-basic/language-reference/data-types/boolean-data-type.md)|A string containing \"True\" or \"False\".|  \n|[Date Data Type](../../../visual-basic/language-reference/data-types/date-data-type.md)|A string containing a `Date` value (date and time) in the short date format of your system.|  \n|[Numeric Data Types](../../../visual-basic/programming-guide/language-features/data-types/numeric-data-types.md)|A string representing the number.|  \n  \n## CStr and Date  \n The `Date` type always contains both date and time information. For purposes of type conversion, Visual Basic considers 1/1/0001 (January 1 of the year 1) to be a *neutral value* for the date, and 00:00:00 (midnight) to be a neutral value for the time. `CStr` does not include neutral values in the resulting string. For example, if you convert `#January 1, 0001 9:30:00#` to a string, the result is \"9:30:00 AM\"; the date information is suppressed. However, the date information is still present in the original `Date` value and can be recovered with functions such as <xref:Microsoft.VisualBasic.DateAndTime.DatePart%2A>.  \n  \n> [!NOTE]\n>  The `CStr` function performs its conversion based on the current culture settings for the application. To get the string representation of a number in a particular culture, use the number's `ToString(IFormatProvider)` method. For example, use <xref:System.Double.ToString%2A?displayProperty=fullName> when converting a value of type `Double` to a `String`.  \n  \n## See Also  \n <xref:Microsoft.VisualBasic.DateAndTime.DatePart%2A>   \n [Type Conversion Functions](../../../visual-basic/language-reference/functions/type-conversion-functions.md)   \n [Boolean Data Type](../../../visual-basic/language-reference/data-types/boolean-data-type.md)   \n [Date Data Type](../../../visual-basic/language-reference/data-types/date-data-type.md)","nodes":[{"pos":[4,816],"nodes":[{"content":"Return Values for the CStr Function (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,67],"content":"Return Values for the CStr Function (Visual Basic) | Microsoft Docs","nodes":[{"content":"Return Values for the CStr Function (Visual Basic) | Microsoft Docs","pos":[0,67]}]}],"pos":[6,76],"yaml":true}],"content":"title: \"Return Values for the CStr Function (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"times, CStr Function return values\"\n  - \"type conversion\"\n  - \"dates [Visual Basic], CStr Function return values\"\n  - \"CStr function\"\n  - \"strings [Visual Basic], return value\"\n  - \"Date data type, converting\"\n  - \"dates [Visual Basic]\"\n  - \"String data type, converting\"\nms.assetid: 3aa744e7-1419-45d5-85e3-e5abc2953673\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[823,873],"content":"Return Values for the CStr Function (Visual Basic)","linkify":"Return Values for the CStr Function (Visual Basic)","nodes":[{"content":"Return Values for the CStr Function (Visual Basic)","pos":[0,50]}]},{"pos":[874,974],"content":"The following table describes the return values for <ph id=\"ph1\">`CStr`</ph> for different data types of <ph id=\"ph2\">`expression`</ph>.","source":"The following table describes the return values for `CStr` for different data types of `expression`."},{"pos":[981,1004],"content":"If <ph id=\"ph1\">`expression`</ph> type is","source":"If `expression` type is"},{"pos":[1005,1019],"content":"<ph id=\"ph1\">`CStr`</ph> returns","source":"`CStr` returns"},{"pos":[1079,1172],"content":"<bpt id=\"p1\">[</bpt>Boolean Data Type<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/boolean-data-type.md)</ept>","source":"[Boolean Data Type](../../../visual-basic/language-reference/data-types/boolean-data-type.md)"},{"content":"A string containing \"True\" or \"False\".","pos":[1173,1211]},{"pos":[1216,1303],"content":"<bpt id=\"p1\">[</bpt>Date Data Type<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/date-data-type.md)</ept>","source":"[Date Data Type](../../../visual-basic/language-reference/data-types/date-data-type.md)"},{"pos":[1304,1395],"content":"A string containing a <ph id=\"ph1\">`Date`</ph> value (date and time) in the short date format of your system.","source":"A string containing a `Date` value (date and time) in the short date format of your system."},{"pos":[1400,1512],"content":"<bpt id=\"p1\">[</bpt>Numeric Data Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/numeric-data-types.md)</ept>","source":"[Numeric Data Types](../../../visual-basic/programming-guide/language-features/data-types/numeric-data-types.md)"},{"content":"A string representing the number.","pos":[1513,1546]},{"pos":[1556,1569],"content":"CStr and Date","linkify":"CStr and Date","nodes":[{"content":"CStr and Date","pos":[0,13]}]},{"content":"The <ph id=\"ph1\">`Date`</ph> type always contains both date and time information.","pos":[1573,1636],"source":"The `Date` type always contains both date and time information."},{"content":"For purposes of type conversion, Visual Basic considers 1/1/0001 (January 1 of the year 1) to be a <bpt id=\"p1\">*</bpt>neutral value<ept id=\"p1\">*</ept> for the date, and 00:00:00 (midnight) to be a neutral value for the time.","pos":[1637,1825],"source":" For purposes of type conversion, Visual Basic considers 1/1/0001 (January 1 of the year 1) to be a *neutral value* for the date, and 00:00:00 (midnight) to be a neutral value for the time."},{"content":"<ph id=\"ph1\">`CStr`</ph> does not include neutral values in the resulting string.","pos":[1826,1889],"source":"`CStr` does not include neutral values in the resulting string."},{"content":"For example, if you convert <ph id=\"ph1\">`#January 1, 0001 9:30:00#`</ph> to a string, the result is \"9:30:00 AM\"; the date information is suppressed.","pos":[1890,2022],"source":" For example, if you convert `#January 1, 0001 9:30:00#` to a string, the result is \"9:30:00 AM\"; the date information is suppressed."},{"content":"However, the date information is still present in the original <ph id=\"ph1\">`Date`</ph> value and can be recovered with functions such as <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.DateAndTime.DatePart%2A&gt;</ph>.","pos":[2023,2196],"source":" However, the date information is still present in the original `Date` value and can be recovered with functions such as <xref:Microsoft.VisualBasic.DateAndTime.DatePart%2A>."},{"pos":[2204,2571],"content":"[!NOTE]\n The `CStr` function performs its conversion based on the current culture settings for the application. To get the string representation of a number in a particular culture, use the number's `ToString(IFormatProvider)` method. For example, use <xref:System.Double.ToString%2A?displayProperty=fullName> when converting a value of type `Double` to a `String`.","leadings":["","> "],"nodes":[{"content":"The `CStr` function performs its conversion based on the current culture settings for the application. To get the string representation of a number in a particular culture, use the number's `ToString(IFormatProvider)` method. For example, use <xref:System.Double.ToString%2A?displayProperty=fullName> when converting a value of type `Double` to a `String`.","pos":[9,365],"nodes":[{"content":"The <ph id=\"ph1\">`CStr`</ph> function performs its conversion based on the current culture settings for the application.","pos":[0,102],"source":"The `CStr` function performs its conversion based on the current culture settings for the application."},{"content":"To get the string representation of a number in a particular culture, use the number's <ph id=\"ph1\">`ToString(IFormatProvider)`</ph> method.","pos":[103,225],"source":" To get the string representation of a number in a particular culture, use the number's `ToString(IFormatProvider)` method."},{"content":"For example, use <ph id=\"ph1\">&lt;xref:System.Double.ToString%2A?displayProperty=fullName&gt;</ph> when converting a value of type <ph id=\"ph2\">`Double`</ph> to a <ph id=\"ph3\">`String`</ph>.","pos":[226,356],"source":" For example, use <xref:System.Double.ToString%2A?displayProperty=fullName> when converting a value of type `Double` to a `String`."}]}]},{"pos":[2580,2588],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.DateAndTime.DatePart%2A&gt;</ph>","pos":[2592,2644],"source":"<xref:Microsoft.VisualBasic.DateAndTime.DatePart%2A> "},{"content":"<bpt id=\"p1\">[</bpt>Type Conversion Functions<ept id=\"p1\">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[2649,2758],"source":"[Type Conversion Functions](../../../visual-basic/language-reference/functions/type-conversion-functions.md) "},{"content":"<bpt id=\"p1\">[</bpt>Boolean Data Type<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/boolean-data-type.md)</ept><ph id=\"ph1\"> </ph>","pos":[2762,2856],"source":"[Boolean Data Type](../../../visual-basic/language-reference/data-types/boolean-data-type.md) "},{"content":"<bpt id=\"p1\">[</bpt>Date Data Type<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/date-data-type.md)</ept>","pos":[2860,2947],"source":"[Date Data Type](../../../visual-basic/language-reference/data-types/date-data-type.md)"}]}