{"content":"---\ntitle: \"How to: Impersonate a Client on a Service | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"WCF, impersonation\"\n  - \"impersonation\"\n  - \"WCF, security\"\nms.assetid: 431db851-a75b-4009-9fe2-247243d810d3\ncaps.latest.revision: 33\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Impersonate a Client on a Service\nImpersonating a client on a [!INCLUDE[indigo1](../../../includes/indigo1-md.md)] service enables the service to perform actions on behalf of the client. For actions subject to access control list (ACL) checks, such as access to directories and files on a machine or access to a SQL Server database, the ACL check is against the client user account. This topic shows the basic steps required to enable a client in a Windows domain to set a client impersonation level. For a working example of this, see [Impersonating the Client](../../../docs/framework/wcf/samples/impersonating-the-client.md). [!INCLUDE[crabout](../../../includes/crabout-md.md)] client impersonation, see [Delegation and Impersonation](../../../docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).  \n  \n> [!NOTE]\n>  When the client and service are running on the same computer and the client is running under a system account (that is, `Local System` or `Network Service`), the client cannot be impersonated when a secure session is established with stateful Security Context tokens. A WinForms or console application typically is run under the currently logged in account, so that account can be impersonated by default. However, when the client is an [!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)] page and that page is hosted in [!INCLUDE[iis601](../../../includes/iis601-md.md)] or IIS 7.0, then the client does run under the `Network Service` account by default. All of the system-provided bindings that support secure sessions use a stateless Security Context token by default. However, if the client is an [!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)] page and secure sessions with stateful Security Context tokens are used, the client cannot be impersonated. [!INCLUDE[crabout](../../../includes/crabout-md.md)] using stateful Security Context tokens in a secure session, see [How to: Create a Security Context Token for a Secure Session](../../../docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md).  \n  \n### To enable impersonation of a client from a cached Windows token on a service  \n  \n1.  Create the service. For a tutorial of this basic procedure, see [Getting Started Tutorial](../../../docs/framework/wcf/getting-started-tutorial.md).  \n  \n2.  Use a binding that uses Windows authentication and creates a session, such as <xref:System.ServiceModel.NetTcpBinding> or <xref:System.ServiceModel.WSHttpBinding>.  \n  \n3.  When creating the implementation of the service's interface, apply the <xref:System.ServiceModel.OperationBehaviorAttribute> class to the method that requires client impersonation. Set the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property to <xref:System.ServiceModel.ImpersonationOption>.  \n  \n     [!code-csharp[c_SimpleImpersonation#2](../../../samples/snippets/csharp/VS_Snippets_CFX/c_simpleimpersonation/cs/source.cs#2)]\n     [!code-vb[c_SimpleImpersonation#2](../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_simpleimpersonation/vb/source.vb#2)]  \n  \n### To set the allowed impersonation level on the client  \n  \n1.  Create service client code by using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). [!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Accessing Services Using a WCF Client](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md).  \n  \n2.  After creating the [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] client, set the <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> property of the <xref:System.ServiceModel.Security.WindowsClientCredential> class to one of the <xref:System.Security.Principal.TokenImpersonationLevel> enumeration values.  \n  \n    > [!NOTE]\n    >  To use <xref:System.Security.Principal.TokenImpersonationLevel>, negotiated Kerberos authentication (sometimes called *multi-leg* or *multi-step* Kerberos) must be used. For a description of how to implement this, see [Best Practices for Security](../../../docs/framework/wcf/feature-details/best-practices-for-security-in-wcf.md).  \n  \n     [!code-csharp[c_SimpleImpersonation#1](../../../samples/snippets/csharp/VS_Snippets_CFX/c_simpleimpersonation/cs/source.cs#1)]\n     [!code-vb[c_SimpleImpersonation#1](../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_simpleimpersonation/vb/source.vb#1)]  \n  \n## See Also  \n <xref:System.ServiceModel.OperationBehaviorAttribute>   \n <xref:System.Security.Principal.TokenImpersonationLevel>   \n [Impersonating the Client](../../../docs/framework/wcf/samples/impersonating-the-client.md)   \n [Delegation and Impersonation](../../../docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)","nodes":[{"pos":[12,70],"content":"How to: Impersonate a Client on a Service | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Impersonate a Client on a Service | Microsoft Docs","pos":[0,58]}]},{"pos":[456,497],"content":"How to: Impersonate a Client on a Service","linkify":"How to: Impersonate a Client on a Service","nodes":[{"content":"How to: Impersonate a Client on a Service","pos":[0,41]}]},{"content":"Impersonating a client on a <ph id=\"ph1\">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> service enables the service to perform actions on behalf of the client.","pos":[498,650],"source":"Impersonating a client on a [!INCLUDE[indigo1](../../../includes/indigo1-md.md)] service enables the service to perform actions on behalf of the client."},{"content":"For actions subject to access control list (ACL) checks, such as access to directories and files on a machine or access to a SQL Server database, the ACL check is against the client user account.","pos":[651,846]},{"content":"This topic shows the basic steps required to enable a client in a Windows domain to set a client impersonation level.","pos":[847,964]},{"content":"For a working example of this, see <bpt id=\"p1\">[</bpt>Impersonating the Client<ept id=\"p1\">](../../../docs/framework/wcf/samples/impersonating-the-client.md)</ept>.","pos":[965,1092],"source":" For a working example of this, see [Impersonating the Client](../../../docs/framework/wcf/samples/impersonating-the-client.md)."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> client impersonation, see <bpt id=\"p1\">[</bpt>Delegation and Impersonation<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)</ept>.","pos":[1093,1289],"source":"[!INCLUDE[crabout](../../../includes/crabout-md.md)] client impersonation, see [Delegation and Impersonation](../../../docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)."},{"pos":[1297,2564],"content":"[!NOTE]\n When the client and service are running on the same computer and the client is running under a system account (that is, `Local System` or `Network Service`), the client cannot be impersonated when a secure session is established with stateful Security Context tokens. A WinForms or console application typically is run under the currently logged in account, so that account can be impersonated by default. However, when the client is an [!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)] page and that page is hosted in [!INCLUDE[iis601](../../../includes/iis601-md.md)] or IIS 7.0, then the client does run under the `Network Service` account by default. All of the system-provided bindings that support secure sessions use a stateless Security Context token by default. However, if the client is an [!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)] page and secure sessions with stateful Security Context tokens are used, the client cannot be impersonated. [!INCLUDE[crabout](../../../includes/crabout-md.md)] using stateful Security Context tokens in a secure session, see [How to: Create a Security Context Token for a Secure Session](../../../docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md).","leadings":["","> "],"nodes":[{"content":" When the client and service are running on the same computer and the client is running under a system account (that is, `Local System` or `Network Service`), the client cannot be impersonated when a secure session is established with stateful Security Context tokens. A WinForms or console application typically is run under the currently logged in account, so that account can be impersonated by default. However, when the client is an [!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)] page and that page is hosted in [!INCLUDE[iis601](../../../includes/iis601-md.md)] or IIS 7.0, then the client does run under the `Network Service` account by default. All of the system-provided bindings that support secure sessions use a stateless Security Context token by default. However, if the client is an [!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)] page and secure sessions with stateful Security Context tokens are used, the client cannot be impersonated. [!INCLUDE[crabout](../../../includes/crabout-md.md)] using stateful Security Context tokens in a secure session, see [How to: Create a Security Context Token for a Secure Session](../../../docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md).","pos":[8,1265],"nodes":[{"content":"When the client and service are running on the same computer and the client is running under a system account (that is, <ph id=\"ph1\">`Local System`</ph> or <ph id=\"ph2\">`Network Service`</ph>), the client cannot be impersonated when a secure session is established with stateful Security Context tokens.","pos":[1,268],"source":" When the client and service are running on the same computer and the client is running under a system account (that is, `Local System` or `Network Service`), the client cannot be impersonated when a secure session is established with stateful Security Context tokens."},{"content":"A WinForms or console application typically is run under the currently logged in account, so that account can be impersonated by default.","pos":[269,406]},{"content":"However, when the client is an <ph id=\"ph1\">[!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)]</ph> page and that page is hosted in <ph id=\"ph2\">[!INCLUDE[iis601](../../../includes/iis601-md.md)]</ph> or IIS 7.0, then the client does run under the <ph id=\"ph3\">`Network Service`</ph> account by default.","pos":[407,660],"source":" However, when the client is an [!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)] page and that page is hosted in [!INCLUDE[iis601](../../../includes/iis601-md.md)] or IIS 7.0, then the client does run under the `Network Service` account by default."},{"content":"All of the system-provided bindings that support secure sessions use a stateless Security Context token by default.","pos":[661,776]},{"content":"However, if the client is an <ph id=\"ph1\">[!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)]</ph> page and secure sessions with stateful Security Context tokens are used, the client cannot be impersonated.","pos":[777,968],"source":" However, if the client is an [!INCLUDE[vstecasp](../../../includes/vstecasp-md.md)] page and secure sessions with stateful Security Context tokens are used, the client cannot be impersonated."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> using stateful Security Context tokens in a secure session, see <bpt id=\"p1\">[</bpt>How to: Create a Security Context Token for a Secure Session<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md)</ept>.","pos":[969,1257],"source":"[!INCLUDE[crabout](../../../includes/crabout-md.md)] using stateful Security Context tokens in a secure session, see [How to: Create a Security Context Token for a Secure Session](../../../docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md)."}]}]},{"pos":[2574,2650],"content":"To enable impersonation of a client from a cached Windows token on a service","linkify":"To enable impersonation of a client from a cached Windows token on a service","nodes":[{"content":"To enable impersonation of a client from a cached Windows token on a service","pos":[0,76]}]},{"content":"Create the service.","pos":[2660,2679]},{"content":"For a tutorial of this basic procedure, see <bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](../../../docs/framework/wcf/getting-started-tutorial.md)</ept>.","pos":[2680,2808],"source":" For a tutorial of this basic procedure, see [Getting Started Tutorial](../../../docs/framework/wcf/getting-started-tutorial.md)."},{"content":"Use a binding that uses Windows authentication and creates a session, such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>.","pos":[2818,2981],"source":"Use a binding that uses Windows authentication and creates a session, such as <xref:System.ServiceModel.NetTcpBinding> or <xref:System.ServiceModel.WSHttpBinding>."},{"content":"When creating the implementation of the service's interface, apply the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> class to the method that requires client impersonation.","pos":[2991,3171],"source":"When creating the implementation of the service's interface, apply the <xref:System.ServiceModel.OperationBehaviorAttribute> class to the method that requires client impersonation."},{"content":"Set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A&gt;</ph> property to <ph id=\"ph2\">&lt;xref:System.ServiceModel.ImpersonationOption&gt;</ph>.","pos":[3172,3310],"source":" Set the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property to <xref:System.ServiceModel.ImpersonationOption>."},{"pos":[3321,3580],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_SimpleImpersonation#2<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CFX/c_simpleimpersonation/cs/source.cs#2)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>c_SimpleImpersonation#2<ept id=\"p4\">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_simpleimpersonation/vb/source.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[c_SimpleImpersonation#2](../../../samples/snippets/csharp/VS_Snippets_CFX/c_simpleimpersonation/cs/source.cs#2)]\n [!code-vb[c_SimpleImpersonation#2](../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_simpleimpersonation/vb/source.vb#2)]"},{"pos":[3590,3642],"content":"To set the allowed impersonation level on the client","linkify":"To set the allowed impersonation level on the client","nodes":[{"content":"To set the allowed impersonation level on the client","pos":[0,52]}]},{"content":"Create service client code by using the <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.","pos":[3652,3822],"source":"Create service client code by using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>Accessing Services Using a WCF Client<ept id=\"p1\">](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept>.","pos":[3823,3989],"source":"[!INCLUDE[crdefault](../../../includes/crdefault-md.md)][Accessing Services Using a WCF Client](../../../docs/framework/wcf/accessing-services-using-a-wcf-client.md)."},{"pos":[3999,4348],"content":"After creating the <ph id=\"ph1\">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> client, set the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Security.WindowsClientCredential&gt;</ph> class to one of the <ph id=\"ph4\">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> enumeration values.","source":"After creating the [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] client, set the <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> property of the <xref:System.ServiceModel.Security.WindowsClientCredential> class to one of the <xref:System.Security.Principal.TokenImpersonationLevel> enumeration values."},{"pos":[4360,4706],"content":"[!NOTE]\nTo use <xref:System.Security.Principal.TokenImpersonationLevel>, negotiated Kerberos authentication (sometimes called *multi-leg* or *multi-step* Kerberos) must be used. For a description of how to implement this, see [Best Practices for Security](../../../docs/framework/wcf/feature-details/best-practices-for-security-in-wcf.md).","leadings":["","    >  "],"nodes":[{"content":"To use <xref:System.Security.Principal.TokenImpersonationLevel>, negotiated Kerberos authentication (sometimes called *multi-leg* or *multi-step* Kerberos) must be used. For a description of how to implement this, see [Best Practices for Security](../../../docs/framework/wcf/feature-details/best-practices-for-security-in-wcf.md).","pos":[8,339],"nodes":[{"content":"To use <ph id=\"ph1\">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph>, negotiated Kerberos authentication (sometimes called <bpt id=\"p1\">*</bpt>multi-leg<ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt>multi-step<ept id=\"p2\">*</ept> Kerberos) must be used.","pos":[0,169],"source":"To use <xref:System.Security.Principal.TokenImpersonationLevel>, negotiated Kerberos authentication (sometimes called *multi-leg* or *multi-step* Kerberos) must be used."},{"content":"For a description of how to implement this, see <bpt id=\"p1\">[</bpt>Best Practices for Security<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/best-practices-for-security-in-wcf.md)</ept>.","pos":[170,331],"source":" For a description of how to implement this, see [Best Practices for Security](../../../docs/framework/wcf/feature-details/best-practices-for-security-in-wcf.md)."}]}]},{"pos":[4717,4976],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>c_SimpleImpersonation#1<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CFX/c_simpleimpersonation/cs/source.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>c_SimpleImpersonation#1<ept id=\"p4\">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_simpleimpersonation/vb/source.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[c_SimpleImpersonation#1](../../../samples/snippets/csharp/VS_Snippets_CFX/c_simpleimpersonation/cs/source.cs#1)]\n [!code-vb[c_SimpleImpersonation#1](../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_simpleimpersonation/vb/source.vb#1)]"},{"pos":[4985,4993],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph>","pos":[4997,5050],"source":"<xref:System.ServiceModel.OperationBehaviorAttribute> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph>","pos":[5055,5111],"source":" <xref:System.Security.Principal.TokenImpersonationLevel> "},{"content":"<bpt id=\"p1\"> [</bpt>Impersonating the Client<ept id=\"p1\">](../../../docs/framework/wcf/samples/impersonating-the-client.md)</ept><ph id=\"ph1\"> </ph>","pos":[5115,5208],"source":" [Impersonating the Client](../../../docs/framework/wcf/samples/impersonating-the-client.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Delegation and Impersonation<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)</ept>","pos":[5211,5328],"source":" [Delegation and Impersonation](../../../docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)"}]}