<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="dotnet-run.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">effca44db19e512a01f858e7a149e3fc4fe076a2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-run.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a303fc8521b453602e04f5edf248971c3c39497</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2e962109ae438fc519ce4c7fbfa9a41117a8e8d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>dotnet run command</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>The dotnet run command provides a convenient option to run your application from the source code.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet run</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet run`</ph> - Runs source code without any explicit compile or launch commands.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 2.1<ept id="p1">](#tab/netcore21)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 2.0<ept id="p1">](#tab/netcore20)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 1.x<ept id="p1">](#tab/netcore1x)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet run`</ph> command provides a convenient option to run your application from the source code with one command.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It's useful for fast iterative development from the command line.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The command depends on the <bpt id="p1">[</bpt><ph id="ph1">`dotnet build`</ph><ept id="p1">](dotnet-build.md)</ept> command to build the code.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Any requirements for the build, such as that the project must be restored first, apply to <ph id="ph1">`dotnet run`</ph> as well.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Output files are written into the default location, which is <ph id="ph1">`bin/&lt;configuration&gt;/&lt;target&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example if you have a <ph id="ph1">`netcoreapp2.1`</ph> application and you run <ph id="ph2">`dotnet run`</ph>, the output is placed in <ph id="ph3">`bin/Debug/netcoreapp2.1`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Files are overwritten as needed.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Temporary files are placed in the <ph id="ph1">`obj`</ph> directory.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the project specifies multiple frameworks, executing <ph id="ph1">`dotnet run`</ph> results in an error unless the <ph id="ph2">`-f|--framework &lt;FRAMEWORK&gt;`</ph> option is used to specify the framework.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet run`</ph> command is used in the context of projects, not built assemblies.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you're trying to run a framework-dependent application DLL instead, you must use <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept> without a command.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, to run <ph id="ph1">`myapp.dll`</ph>, use:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information on the <ph id="ph1">`dotnet`</ph> driver, see the <bpt id="p1">[</bpt>.NET Core Command Line Tools (CLI)<ept id="p1">](index.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To run the application, the <ph id="ph1">`dotnet run`</ph> command resolves the dependencies of the application that are outside of the shared runtime from the NuGet cache.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because it uses cached dependencies, it's not recommended to use <ph id="ph1">`dotnet run`</ph> to run applications in production.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Instead, <bpt id="p1">[</bpt>create a deployment<ept id="p1">](../deploying/index.md)</ept> using the <bpt id="p2">[</bpt><ph id="ph1">`dotnet publish`</ph><ept id="p2">](dotnet-publish.md)</ept> command and deploy the published output.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Options</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 2.1<ept id="p1">](#tab/netcore21)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Delimits arguments to <ph id="ph1">`dotnet run`</ph> from arguments for the application being run.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>All arguments after this delimiter are passed to the application run.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Defines the build configuration.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`Debug`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Builds and runs the app using the specified <bpt id="p1">[</bpt>framework<ept id="p1">](../../standard/frameworks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The framework must be specified in the project file.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Forces all dependencies to be resolved even if the last restore was successful.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specifying this flag is the same as deleting the <bpt id="p1">*</bpt>project.assets.json<ept id="p1">*</ept> file.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name of the launch profile (if any) to use when launching the application.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Launch profiles are defined in the <bpt id="p1">*</bpt>launchSettings.json<ept id="p1">*</ept> file and are typically called <ph id="ph1">`Development`</ph>, <ph id="ph2">`Staging`</ph>, and <ph id="ph3">`Production`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with multiple environments<ept id="p1">](/aspnet/core/fundamentals/environments)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Doesn't build the project before running.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It also implicit sets the <ph id="ph1">`--no-restore`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When restoring a project with project-to-project (P2P) references, restores the root project and not the references.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Doesn't try to use <bpt id="p1">*</bpt>launchSettings.json<ept id="p1">*</ept> to configure the application.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Doesn't execute an implicit restore when running the command.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Specifies the path of the project file to run (folder name or full path).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If not specified, it defaults to the current directory.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifies the target runtime to restore packages for.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For a list of Runtime Identifiers (RIDs), see the <bpt id="p1">[</bpt>RID catalog<ept id="p1">](../rid-catalog.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Sets the verbosity level of the command.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Allowed values are <ph id="ph1">`q[uiet]`</ph>, <ph id="ph2">`m[inimal]`</ph>, <ph id="ph3">`n[ormal]`</ph>, <ph id="ph4">`d[etailed]`</ph>, and <ph id="ph5">`diag[nostic]`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 2.0<ept id="p1">](#tab/netcore20)</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Delimits arguments to <ph id="ph1">`dotnet run`</ph> from arguments for the application being run.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>All arguments after this delimiter are passed to the application run.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Defines the build configuration.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`Debug`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Builds and runs the app using the specified <bpt id="p1">[</bpt>framework<ept id="p1">](../../standard/frameworks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The framework must be specified in the project file.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Forces all dependencies to be resolved even if the last restore was successful.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Specifying this flag is the same as deleting the <bpt id="p1">*</bpt>project.assets.json<ept id="p1">*</ept> file.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The name of the launch profile (if any) to use when launching the application.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Launch profiles are defined in the <bpt id="p1">*</bpt>launchSettings.json<ept id="p1">*</ept> file and are typically called <ph id="ph1">`Development`</ph>, <ph id="ph2">`Staging`</ph>, and <ph id="ph3">`Production`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with multiple environments<ept id="p1">](/aspnet/core/fundamentals/environments)</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Doesn't build the project before running.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It also implicit sets the <ph id="ph1">`--no-restore`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When restoring a project with project-to-project (P2P) references, restores the root project and not the references.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Doesn't try to use <bpt id="p1">*</bpt>launchSettings.json<ept id="p1">*</ept> to configure the application.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Doesn't execute an implicit restore when running the command.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Specifies the path of the project file to run (folder name or full path).</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If not specified, it defaults to the current directory.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies the target runtime to restore packages for.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For a list of Runtime Identifiers (RIDs), see the <bpt id="p1">[</bpt>RID catalog<ept id="p1">](../rid-catalog.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 1.x<ept id="p1">](#tab/netcore1x)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Delimits arguments to <ph id="ph1">`dotnet run`</ph> from arguments for the application being run.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>All arguments after this delimiter are passed to the application run.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Defines the build configuration.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`Debug`</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Builds and runs the app using the specified <bpt id="p1">[</bpt>framework<ept id="p1">](../../standard/frameworks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The framework must be specified in the project file.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the path and name of the project file.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>(See the NOTE.) If not specified, it defaults to the current directory.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Use the path and name of the project file with the <ph id="ph1">`-p|--project`</ph> option.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A regression in the CLI prevents providing a folder path with .NET Core SDK 1.x.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information about this issue, see <bpt id="p1">[</bpt>dotnet run -p, can not start a project (dotnet/cli #5992)<ept id="p1">](https://github.com/dotnet/cli/issues/5992)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Run the project in the current directory:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Run the specified project:</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Run the project in the current directory (the <ph id="ph1">`--help`</ph> argument in this example is passed to the application, since the blank <ph id="ph2">`--`</ph> option is used):</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Restore dependencies and tools for the project in the current directory only showing minimal output and then run the project: (.NET Core SDK 2.0 and later versions):</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>