{"content":"---\ntitle: \"ICorDebugType::EnumerateTypeParameters Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugType.EnumerateTypeParameters\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugType::EnumerateTypeParameters\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"EnumerateTypeParameters method, ICorDebugType interface [.NET Framework debugging]\"\n  - \"ICorDebugType::EnumerateTypeParameters method [.NET Framework debugging]\"\nms.assetid: 1ee1f6e6-1bd7-4ebb-83b8-ff9a08ca03de\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugType::EnumerateTypeParameters Method\nGets an interface pointer to an ICorDebugTypeEnum that contains the <xref:System.Type> parameters of the class referenced by this ICorDebugType.  \n  \n## Syntax  \n  \n```  \nHRESULT EnumerateTypeParameters (  \n    [out] ICorDebugTypeEnum   **ppTyParEnum  \n);  \n```  \n  \n#### Parameters  \n `ppTyParEnum`  \n [out] A pointer to the address of an `ICorDebugTypeEnum` that contains the parameters of the type.  \n  \n## Remarks  \n You can use `EnumerateTypeParameters` if the CorElementType value returned by [ICorDebugType::GetType](../../../../docs/framework/unmanaged-api/debugging/icordebugtype-gettype-method.md) is ELEMENT_TYPE_CLASS, ELEMENT_TYPE_VALUETYPE, ELEMENT_TYPE_ARRAY, ELEMENT_TYPE_SZARRAY, ELEMENT_TYPE_BYREF, ELEMENT_TYPE_PTR, or ELEMENT_TYPE_FNPTR. The number of parameters and their order depends on the type:  \n  \n-   ELEMENT_TYPE_CLASS or ELEMENT_TYPE_VALUETYPE: The number of type parameters contained in the `ICorDebugTypeEnum` that this method returns, will depend on the number of formal type parameters for the corresponding class. For example, if the type is `class Dict<String,int32>`, then `EnumerateTypeParameters` will return an `ICorDebugTypeEnum` that contains objects representing `String` and `int32` in sequence.  \n  \n-   ELEMENT_TYPE_FNPTR: The number of type parameters contained in the `ICorDebugTypeEnum` will be one greater than the number of arguments accepted by the function. The first type parameter contained in the `ICorDebugTypeEnum` is the return type for the function, and the subsequent type parameters are the function's parameters.  \n  \n-   ELEMENT_TYPE_ARRAY, ELEMENT_TYPE_SZARRAY, ELEMENT_TYPE_BYREF, or ELEMENT_TYPE_PTR: One type parameter will be returned. For example, if the type is an array type such as `int32[]`,`EnumerateTypeParameters` will return an `ICorDebugTypeEnum` that contains an object representing `int32`.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]","nodes":[{"pos":[4,780],"embed":true,"restype":"x-metadata","content":"title: \"ICorDebugType::EnumerateTypeParameters Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugType.EnumerateTypeParameters\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugType::EnumerateTypeParameters\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"EnumerateTypeParameters method, ICorDebugType interface [.NET Framework debugging]\"\n  - \"ICorDebugType::EnumerateTypeParameters method [.NET Framework debugging]\"\nms.assetid: 1ee1f6e6-1bd7-4ebb-83b8-ff9a08ca03de\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"ICorDebugType::EnumerateTypeParameters Method | Microsoft Docs","nodes":[{"pos":[0,62],"content":"ICorDebugType::EnumerateTypeParameters Method | Microsoft Docs","nodes":[{"content":"ICorDebugType::EnumerateTypeParameters Method | Microsoft Docs","pos":[0,62]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[787,832],"content":"ICorDebugType::EnumerateTypeParameters Method","linkify":"ICorDebugType::EnumerateTypeParameters Method","nodes":[{"content":"ICorDebugType::EnumerateTypeParameters Method","pos":[0,45]}]},{"content":"Gets an interface pointer to an ICorDebugTypeEnum that contains the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> parameters of the class referenced by this ICorDebugType.","pos":[833,977],"source":"Gets an interface pointer to an ICorDebugTypeEnum that contains the <xref:System.Type> parameters of the class referenced by this ICorDebugType."},{"pos":[986,992],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1105,1115],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] A pointer to the address of an <ph id=\"ph1\">`ICorDebugTypeEnum`</ph> that contains the parameters of the type.","pos":[1136,1234],"source":"[out] A pointer to the address of an `ICorDebugTypeEnum` that contains the parameters of the type."},{"pos":[1243,1250],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use <ph id=\"ph1\">`EnumerateTypeParameters`</ph> if the CorElementType value returned by <bpt id=\"p1\">[</bpt>ICorDebugType::GetType<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugtype-gettype-method.md)</ept> is ELEMENT_TYPE_CLASS, ELEMENT_TYPE_VALUETYPE, ELEMENT_TYPE_ARRAY, ELEMENT_TYPE_SZARRAY, ELEMENT_TYPE_BYREF, ELEMENT_TYPE_PTR, or ELEMENT_TYPE_FNPTR.","pos":[1254,1590],"source":"You can use `EnumerateTypeParameters` if the CorElementType value returned by [ICorDebugType::GetType](../../../../docs/framework/unmanaged-api/debugging/icordebugtype-gettype-method.md) is ELEMENT_TYPE_CLASS, ELEMENT_TYPE_VALUETYPE, ELEMENT_TYPE_ARRAY, ELEMENT_TYPE_SZARRAY, ELEMENT_TYPE_BYREF, ELEMENT_TYPE_PTR, or ELEMENT_TYPE_FNPTR."},{"content":"The number of parameters and their order depends on the type:","pos":[1591,1652]},{"content":"ELEMENT_TYPE_CLASS or ELEMENT_TYPE_VALUETYPE: The number of type parameters contained in the <ph id=\"ph1\">`ICorDebugTypeEnum`</ph> that this method returns, will depend on the number of formal type parameters for the corresponding class.","pos":[1662,1881],"source":"ELEMENT_TYPE_CLASS or ELEMENT_TYPE_VALUETYPE: The number of type parameters contained in the `ICorDebugTypeEnum` that this method returns, will depend on the number of formal type parameters for the corresponding class."},{"content":"For example, if the type is <ph id=\"ph1\">`class Dict&lt;String,int32&gt;`</ph>, then <ph id=\"ph2\">`EnumerateTypeParameters`</ph> will return an <ph id=\"ph3\">`ICorDebugTypeEnum`</ph> that contains objects representing <ph id=\"ph4\">`String`</ph> and <ph id=\"ph5\">`int32`</ph> in sequence.","pos":[1882,2072],"source":" For example, if the type is `class Dict<String,int32>`, then `EnumerateTypeParameters` will return an `ICorDebugTypeEnum` that contains objects representing `String` and `int32` in sequence."},{"content":"ELEMENT_TYPE_FNPTR: The number of type parameters contained in the <ph id=\"ph1\">`ICorDebugTypeEnum`</ph> will be one greater than the number of arguments accepted by the function.","pos":[2082,2243],"source":"ELEMENT_TYPE_FNPTR: The number of type parameters contained in the `ICorDebugTypeEnum` will be one greater than the number of arguments accepted by the function."},{"content":"The first type parameter contained in the <ph id=\"ph1\">`ICorDebugTypeEnum`</ph> is the return type for the function, and the subsequent type parameters are the function's parameters.","pos":[2244,2408],"source":" The first type parameter contained in the `ICorDebugTypeEnum` is the return type for the function, and the subsequent type parameters are the function's parameters."},{"content":"ELEMENT_TYPE_ARRAY, ELEMENT_TYPE_SZARRAY, ELEMENT_TYPE_BYREF, or ELEMENT_TYPE_PTR: One type parameter will be returned.","pos":[2418,2537]},{"content":"For example, if the type is an array type such as <ph id=\"ph1\">`int32[]`</ph>,<ph id=\"ph2\">`EnumerateTypeParameters`</ph> will return an <ph id=\"ph3\">`ICorDebugTypeEnum`</ph> that contains an object representing <ph id=\"ph4\">`int32`</ph>.","pos":[2538,2704],"source":" For example, if the type is an array type such as `int32[]`,`EnumerateTypeParameters` will return an `ICorDebugTypeEnum` that contains an object representing `int32`."},{"pos":[2713,2725],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2729,2833],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2840,2876],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2883,2908],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2915,2943],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept>","source":"**.NET Framework Versions:**"}]}