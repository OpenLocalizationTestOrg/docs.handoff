{"content":"---\ntitle: \"~ Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"~_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"tilde (~) one's complement operator [C#]\"\n  - \"~ operator [C#]\"\n  - \"~ [C#], bitwise complement operator\"\n  - \"bitwise complement operator [C#]\"\nms.assetid: 11bc078a-50e2-4d7e-9896-67ef669dc602\ncaps.latest.revision: 18\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# ~ Operator (C# Reference)\nThe `~` operator performs a bitwise complement operation on its operand, which has the effect of reversing each bit. Bitwise complement operators are predefined for [int](../../../csharp/language-reference/keywords/int.md), [uint](../../../csharp/language-reference/keywords/uint.md), [long](../../../csharp/language-reference/keywords/long.md), and [ulong](../../../csharp/language-reference/keywords/ulong.md).  \n  \n> [!NOTE]\n>  The `~` symbol also is used to declare finalizers. For more information, see [Finalizers](../../../csharp/programming-guide/classes-and-structs/destructors.md).  \n  \n## Remarks  \n User-defined types can overload the `~` operator. For more information, see [operator](../../../csharp/language-reference/keywords/operator.md). Operations on integral types are generally allowed on enumeration.  \n  \n## Example  \n [!code-cs[csRefOperators#25](../../../csharp/language-reference/operators/codesnippet/CSharp/bitwise-complement-operator_1.cs)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Operators](../../../csharp/language-reference/operators/index.md)   \n [Finalizers](../../../csharp/programming-guide/classes-and-structs/destructors.md)","nodes":[{"pos":[12,54],"content":"~ Operator (C# Reference) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"~ Operator (C# Reference) | Microsoft Docs","pos":[0,42]}]},{"pos":[685,710],"content":"~ Operator (C# Reference)","linkify":"~ Operator (C# Reference)","nodes":[{"content":"~ Operator (C# Reference)","pos":[0,25]}]},{"content":"The <ph id=\"ph1\">`~`</ph> operator performs a bitwise complement operation on its operand, which has the effect of reversing each bit.","pos":[711,827],"source":"The `~` operator performs a bitwise complement operation on its operand, which has the effect of reversing each bit."},{"content":"Bitwise complement operators are predefined for <bpt id=\"p1\">[</bpt>int<ept id=\"p1\">](../../../csharp/language-reference/keywords/int.md)</ept>, <bpt id=\"p2\">[</bpt>uint<ept id=\"p2\">](../../../csharp/language-reference/keywords/uint.md)</ept>, <bpt id=\"p3\">[</bpt>long<ept id=\"p3\">](../../../csharp/language-reference/keywords/long.md)</ept>, and <bpt id=\"p4\">[</bpt>ulong<ept id=\"p4\">](../../../csharp/language-reference/keywords/ulong.md)</ept>.","pos":[828,1123],"source":" Bitwise complement operators are predefined for [int](../../../csharp/language-reference/keywords/int.md), [uint](../../../csharp/language-reference/keywords/uint.md), [long](../../../csharp/language-reference/keywords/long.md), and [ulong](../../../csharp/language-reference/keywords/ulong.md)."},{"pos":[1131,1302],"content":"[!NOTE]\n The `~` symbol also is used to declare finalizers. For more information, see [Finalizers](../../../csharp/programming-guide/classes-and-structs/destructors.md).","leadings":["","> "],"nodes":[{"content":" The `~` symbol also is used to declare finalizers. For more information, see [Finalizers](../../../csharp/programming-guide/classes-and-structs/destructors.md).","pos":[8,169],"nodes":[{"content":"The <ph id=\"ph1\">`~`</ph> symbol also is used to declare finalizers.","pos":[1,51],"source":" The `~` symbol also is used to declare finalizers."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Finalizers<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/destructors.md)</ept>.","pos":[52,161],"source":" For more information, see [Finalizers](../../../csharp/programming-guide/classes-and-structs/destructors.md)."}]}]},{"pos":[1311,1318],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"User-defined types can overload the <ph id=\"ph1\">`~`</ph> operator.","pos":[1322,1371],"source":"User-defined types can overload the `~` operator."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>operator<ept id=\"p1\">](../../../csharp/language-reference/keywords/operator.md)</ept>.","pos":[1372,1466],"source":" For more information, see [operator](../../../csharp/language-reference/keywords/operator.md)."},{"content":"Operations on integral types are generally allowed on enumeration.","pos":[1467,1533]},{"pos":[1542,1549],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1553,1680],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#25<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/bitwise-complement-operator_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#25](../../../csharp/language-reference/operators/codesnippet/CSharp/bitwise-complement-operator_1.cs)]"},{"pos":[1689,1697],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1701,1761],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1764,1832],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Operators<ept id=\"p1\">](../../../csharp/language-reference/operators/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1835,1906],"source":" [C# Operators](../../../csharp/language-reference/operators/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Finalizers<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/destructors.md)</ept>","pos":[1909,1992],"source":" [Finalizers](../../../csharp/programming-guide/classes-and-structs/destructors.md)"}]}