<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="path-markup-syntax.md" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcf890e38e6d9a85eaa44bea448f87dc8df249c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\path-markup-syntax.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48115bd9cdc99ac5a92bb5b6ce77adb99500d19f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d35239774d25ccb4d8af5db073a08e81cce77081</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Path Markup Syntax | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Path Markup Syntax</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Paths are discussed in              <bpt id="p1">[</bpt>Shapes and Basic Drawing in WPF Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/shapes-and-basic-drawing-in-wpf-overview.md)</ept> and the              <bpt id="p2">[</bpt>Geometry Overview<ept id="p2">](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept>, however, this topic describes in detail the powerful and complex mini-language you can use to specify path geometries more compactly using              <ph id="ph1">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic contains the following sections.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To understand this topic, you should be familiar with the basic features of                  <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see the                  <bpt id="p1">[</bpt>Geometry Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>StreamGeometry and PathFigureCollection Mini-Languages</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides two classes that provide mini-languages for describing geometric paths:                  <ph id="ph2">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> and                  <ph id="ph3">&lt;xref:System.Windows.Media.PathFigureCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You use the                          <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> mini-language when setting a property of type                          <ph id="ph2">&lt;xref:System.Windows.Media.Geometry&gt;</ph>, such as the                          <ph id="ph3">&lt;xref:System.Windows.UIElement.Clip%2A&gt;</ph> property of a                          <ph id="ph4">&lt;xref:System.Windows.UIElement&gt;</ph> or the                          <ph id="ph5">&lt;xref:System.Windows.Shapes.Path.Data%2A&gt;</ph> property of a                          <ph id="ph6">&lt;xref:System.Windows.Shapes.Path&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example uses attribute syntax to create a                          <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You use the                          <ph id="ph1">&lt;xref:System.Windows.Media.PathFigureCollection&gt;</ph> mini-language when setting the                          <ph id="ph2">&lt;xref:System.Windows.Media.PathGeometry.Figures%2A&gt;</ph> property of a                          <ph id="ph3">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example uses a attribute syntax to create a                          <ph id="ph1">&lt;xref:System.Windows.Media.PathFigureCollection&gt;</ph> for a                          <ph id="ph2">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As you can see from the preceding examples, the two mini-languages are very similar.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It's always possible to use a                  <ph id="ph1">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> in any situation where you could use a                  <ph id="ph2">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph>; so which one should you use?</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use a                  <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> when you don't need to modify the path after creating it; use a                  <ph id="ph2">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> if you do need to modify the path.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about the differences between                  <ph id="ph1">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> and                  <ph id="ph2">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> objects, see the                  <bpt id="p1">[</bpt>Geometry Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A Note about White Space</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For brevity, a single space is shown in the syntax sections that follow, but multiple spaces are also acceptable wherever a single space is shown.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Two numbers donâ€™t actually have to be separated by a comma or whitespace, but this can only be done when the resulting string is unambiguous.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For instance,                          <ph id="ph1">`2..3`</ph> is actually two numbers: "2."</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>And ".3".</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Similarly,                          <ph id="ph1">`2-3`</ph> is "2" and "-3".</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Spaces are not required before or after commands, either.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> attribute usage syntax for a                          <ph id="ph2">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> is composed of an optional                          <ph id="ph3">&lt;xref:System.Windows.Media.FillRule&gt;</ph> value and one or more figure descriptions.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>StreamGeometry XAML Attribute Usage</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;`</ph> <bpt id="p1">*</bpt>object<ept id="p1">*</ept> <bpt id="p2">*</bpt>property<ept id="p2">*</ept> <ph id="ph2">`="`</ph>[                                         <ph id="ph3">`fillRule`</ph>]                                          <ph id="ph4">`figureDescription`</ph>[                                         <ph id="ph5">`figureDescription`</ph>]*                                         <ph id="ph6">`" ... /&gt;`</ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> attribute usage syntax for a                          <ph id="ph2">&lt;xref:System.Windows.Media.PathFigureCollection&gt;</ph> is composed of one or more figure descriptions.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>PathFigureCollection XAML Attribute Usage</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;`</ph> <bpt id="p1">*</bpt>object<ept id="p1">*</ept> <bpt id="p2">*</bpt>property<ept id="p2">*</ept> <ph id="ph2">`="`</ph> <ph id="ph3">`figureDescription`</ph>[                                         <ph id="ph4">`figureDescription`</ph>]*                                         <ph id="ph5">`" ... /&gt;`</ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>fillRule<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Specifies whether the                                          <ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph> uses the                                          <ph id="ph2">&lt;xref:System.Windows.Media.FillRule&gt;</ph> or                                          <ph id="ph3">&lt;xref:System.Windows.Media.FillRule&gt;</ph><ph id="ph4">&lt;xref:System.Windows.Media.PathGeometry.FillRule%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">`F0`</ph> specifies the                                                  <ph id="ph3">&lt;xref:System.Windows.Media.FillRule&gt;</ph> fill rule.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">`F1`</ph> specifies the                                                  <ph id="ph3">&lt;xref:System.Windows.Media.FillRule&gt;</ph> fill rule.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you omit this command, the subpath uses the default behavior, which is                                          <ph id="ph1">&lt;xref:System.Windows.Media.FillRule&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you specify this command, you must place it first.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>figureDescription<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A figure composed of a move command, draw commands, and an optional close command.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`moveCommand`</ph> <ph id="ph2">`drawCommands`</ph>  <ph id="ph3">`[`</ph> <ph id="ph4">`closeCommand`</ph> <ph id="ph5">`]`</ph></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>moveCommand<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A move command that specifies the start point of the figure.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See the                                          <bpt id="p1">[</bpt>Move Command<ept id="p1">](#themovecommand)</ept> section.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>drawCommands<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>One or more drawing commands that describe the figure's contents.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See the                                          <bpt id="p1">[</bpt>Draw Commands<ept id="p1">](#drawcommands)</ept> section.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>closeCommand<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An optional close command that closes figure.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See the                                          <bpt id="p1">[</bpt>Close Command<ept id="p1">](#closecommand)</ept> section.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Move Command</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Specifies the start point of a new figure.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`M`</ph> <bpt id="p1">*</bpt>startPoint<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`m`</ph> <bpt id="p1">*</bpt>startPoint<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>startPoint<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The start point of a new figure.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An uppercase                  <ph id="ph1">`M`</ph> indicates that                  <ph id="ph2">`startPoint`</ph> is an absolute value; a lowercase                  <ph id="ph3">`m`</ph> indicates that                  <ph id="ph4">`startPoint`</ph> is an offset to the previous point, or (0,0) if none exists.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you list multiple points after the move command, a line is drawn to those points though you specified the line command.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Draw Commands</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A draw command can consist of several shape commands.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following shape commands are available: line, horizontal line, vertical line, cubic Bezier curve, quadratic Bezier curve, smooth cubic Bezier curve, smooth quadratic Bezier curve, and elliptical arc.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You enter each command by using either an uppercase or a lowercase letter: uppercase letters denote absolute values and lowercase letters denote relative values: the control points for that segment are relative to the end point of the preceding example.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When sequentially entering more than one command of the same type, you can omit the duplicate command entry; for example,                  <ph id="ph1">`L 100,200 300,400`</ph> is equivalent to                  <ph id="ph2">`L 100,200 L 300,400`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following table describes the                  <bpt id="p1">**</bpt>move<ept id="p1">**</ept> and                  <bpt id="p2">**</bpt>draw<ept id="p2">**</ept> commands.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Line Command</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Creates a straight line between the current point and the specified end point.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`l 20 30`</ph> and                          <ph id="ph2">`L 20,30`</ph> are examples of valid                          <bpt id="p1">**</bpt>line<ept id="p1">**</ept> commands.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`L`</ph> <bpt id="p1">*</bpt>endPoint<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`l`</ph> <bpt id="p1">*</bpt>endPoint<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>endPoint<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The end point of the line.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Horizontal Line Command</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Creates a horizontal line between the current point and the specified x-coordinate.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`H 90`</ph> is an example of a valid horizontal line command.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`H`</ph>  <bpt id="p1">*</bpt>x<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`h`</ph>  <bpt id="p1">*</bpt>x<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>x<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the end point of the line.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Vertical Line Command</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Creates a vertical line between the current point and the specified y-coordinate.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`v 90`</ph> is an example of a valid vertical line command.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`V`</ph>  <bpt id="p1">*</bpt>y<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`v`</ph>  <bpt id="p1">*</bpt>y<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>y<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the end point of the line.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Cubic Bezier Curve Command</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Creates a cubic Bezier curve between the current point and the specified end point by using the two specified control points (                         <ph id="ph1">`controlPoint`</ph>1 and                          <ph id="ph2">`controlPoint`</ph>2).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`C 100,200 200,400 300,200`</ph> is an example of a valid curve command.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`C`</ph> <ph id="ph2">`controlPoint`</ph>1<ph id="ph3">`controlPoint`</ph>2<ph id="ph4">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`c`</ph> <ph id="ph2">`controlPoint`</ph>1<ph id="ph3">`controlPoint`</ph>2<ph id="ph4">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`controlPoint`</ph>1</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The first control point of the curve, which determines the starting tangent of the curve.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`controlPoint`</ph>2</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The second control point of the curve, which determines the ending tangent of the curve.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The point to which the curve is drawn.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Quadratic Bezier Curve Command</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Creates a quadratic Bezier curve between the current point and the specified end point by using the specified control point (                         <ph id="ph1">`controlPoint`</ph>).</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`q 100,200 300,200`</ph> is an example of a valid quadratic Bezier curve command.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Q`</ph> <ph id="ph2">`controlPoint`</ph> <ph id="ph3">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`q`</ph> <ph id="ph2">`controlPoint`</ph> <ph id="ph3">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The control point of the curve, which determines the starting and ending tangents of the curve.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The point to which the curve is drawn.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Smooth cubic Bezier curve Command</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Creates a cubic Bezier curve between the current point and the specified end point.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The first control point is assumed to be the reflection of the second control point of the previous command relative to the current point.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>If there is no previous command or if the previous command was not a cubic Bezier curve command or a smooth cubic Bezier curve command, assume the first control point is coincident with the current point.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The second control point, the control point for the end of the curve, is specified by                          <ph id="ph1">`controlPoint`</ph>2.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For example,                          <ph id="ph1">`S 100,200 200,300`</ph> is a valid smooth cubic Bezier curve command.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`S`</ph> <ph id="ph2">`controlPoint`</ph>2<ph id="ph3">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`s`</ph> <ph id="ph2">`controlPoint`</ph>2<ph id="ph3">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`controlPoint`</ph>2</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The control point of the curve, which determines the ending tangent of the curve.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The point to which the curve is drawn.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Smooth quadratic Bezier curve Command</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Creates a quadratic Bezier curve between the current point and the specified end point.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The control point is assumed to be the reflection of the control point of the previous command relative to the current point.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If there is no previous command or if the previous command was not a quadratic Bezier curve command or a smooth quadratic Bezier curve command, the control point is coincident with the current point.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`T`</ph> <ph id="ph2">`controlPoint`</ph> <ph id="ph3">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`t`</ph> <ph id="ph2">`controlPoint`</ph> <ph id="ph3">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The control point of the curve, which determines the starting and tangent of the curve.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The point to which the curve is drawn.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Elliptical Arc Command</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Creates an elliptical arc between the current point and the specified end point.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`A`</ph> <ph id="ph2">`size`</ph> <ph id="ph3">`rotationAngle`</ph> <ph id="ph4">`isLargeArcFlag`</ph> <ph id="ph5">`sweepDirectionFlag`</ph> <ph id="ph6">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`a`</ph> <ph id="ph2">`size`</ph> <ph id="ph3">`rotationAngle`</ph> <ph id="ph4">`isLargeArcFlag`</ph> <ph id="ph5">`sweepDirectionFlag`</ph> <ph id="ph6">`endPoint`</ph></source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The x- and y-radius of the arc.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The rotation of the ellipse, in degrees.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Set to 1 if the angle of the arc should be 180 degrees or greater; otherwise, set to 0.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Set to 1 if the arc is drawn in a positive-angle direction; otherwise, set to 0.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The point to which the arc is drawn.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The Close Command</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Ends the current figure and creates a line that connects the current point to the starting point of the figure.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This command creates a line-join (corner) between the last segment and the first segment of the figure.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Point Syntax</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Describes the x- and y-coordinates of a point.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`x`</ph> <ph id="ph2">`,`</ph> <ph id="ph3">`y`</ph></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`x`</ph> <ph id="ph2">`y`</ph></source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Term</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the point.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the point.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Special Values</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Instead of a standard numerical value, you can also use the following special values.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>These values are case-sensitive.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Infinity</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Represents                          <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>-Infinity</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Represents                          <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>NaN</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Represents                          <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>You may also use scientific notation.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>For example,                  <ph id="ph1">`+1.e17`</ph> is a valid value.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Shapes.Path&gt;</ph></source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.StreamGeometry&gt;</ph></source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph></source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.PathFigureCollection&gt;</ph></source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shapes and Basic Drawing in WPF Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/shapes-and-basic-drawing-in-wpf-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Geometry Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/geometries-how-to-topics.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>