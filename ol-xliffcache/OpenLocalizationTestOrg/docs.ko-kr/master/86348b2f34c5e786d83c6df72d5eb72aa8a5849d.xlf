<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86348b2f34c5e786d83c6df72d5eb72aa8a5849d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\xaml-services\x-code-intrinsic-xaml-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">077e7fdbb3d81ed5d5578f713246d4b61b7d39b9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fcecb07051a765111a1b9b1ba6d576702cb56de5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>x:Code Intrinsic XAML Type | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>x:Code Intrinsic XAML Type</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Allows placement of code within a XAML production.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Such code can either be compiled by any XAML processor implementation that compiles XAML, or left in the XAML production for later uses such as interpretation by a runtime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>XAML Object Element Usage</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The code within the <ph id="ph1">`x:Code`</ph> XAML directive element is still interpreted within the general XML namespace and the XAML namespaces provided.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Therefore, it is usually necessary to enclose the code used for <ph id="ph1">`x:Code`</ph> inside a <ph id="ph2">`CDATA`</ph> segment.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`x:Code`</ph> is not permitted for all possible deployment mechanisms of a XAML production.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In specific frameworks (for example WPF) the code must be compiled.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In other frameworks, <ph id="ph1">`x:Code`</ph> usage might be generally disallowed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For frameworks that permit managed <ph id="ph1">`x:Code`</ph> content, the correct language compiler to use for <ph id="ph2">`x:Code`</ph> content is determined by settings and targets of the containing project that is used to compile the application.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>WPF Usage Notes</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Code declared within <ph id="ph1">`x:Code`</ph> for WPF has several notable limitations:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`x:Code`</ph> directive element must be an immediate child element of the root element of the XAML production.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>x:Class Directive<ept id="p1">](../../../docs/framework/xaml-services/x-class-directive.md)</ept> must be provided on the parent root element.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The code placed within <ph id="ph1">`x:Code`</ph> will be treated by compilation to be within the scope of the partial class that is already being created for that XAML page.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Therefore all code you define must be members or variables of that partial class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You cannot define additional classes, other than by nesting a class inside the partial class (nesting is allowed, but it is not typical because nested classes cannot be referenced in XAML).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CLR namespaces other than the namespace that is used for the existing partial class cannot be defined or added to.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>References to code entities outside the partial class CLR namespace must all be fully qualified.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If members being declared are overrides to the partial class overridable members, this must be specified with the language-specific override keyword.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If members declared in <ph id="ph1">`x:Code`</ph> scope conflict with members of the partial class created out of the XAML, in such a way that the compiler reports the conflict, the XAML file cannot compile or load.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>x:Class Directive<ept id="p1">](../../../docs/framework/xaml-services/x-class-directive.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Code-Behind and XAML in WPF<ept id="p1">](../../../docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML Overview (WPF)<ept id="p1">](../../../docs/framework/wpf/advanced/xaml-overview-wpf.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>