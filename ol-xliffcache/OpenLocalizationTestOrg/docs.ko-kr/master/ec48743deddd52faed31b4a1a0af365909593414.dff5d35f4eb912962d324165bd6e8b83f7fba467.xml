{"content":"---\ntitle: \"Configuration Channel Factory\"\nms.date: \"03/30/2017\"\nms.assetid: 3b749493-bd8a-4ccb-893e-5948901a1486\n---\n# Configuration Channel Factory\nThis sample covers the usage of the <xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601>. The <xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601> allows central management of WCF client configuration. This can also be useful in scenarios in which configuration is selected or changed after the application domain load time.\n\n## Demonstrates\n <xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601>\n\n## Discussion\n This sample shows how to use <xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601> to add a particular configuration file to a client application, without having to use the default application configuration file.\n\n The sample consists of two projects. The first project is a simple service that runs to reply to messages coming from the clients. The second project is a client application that builds two <xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601> objects using a <xref:System.Configuration.ExeConfigurationFileMap> for the Test.config configuration file and uses them to communicate with the service. Both clients communicate with the service using the configuration specified in Test.config.\n\n The following code adds a custom configuration file to a client application.\n\n```csharp\nExeConfigurationFileMap fileMap = new ExeConfigurationFileMap();\nfileMap.ExeConfigFilename = \"Test.config\";\nConfiguration newConfiguration = ConfigurationManager.OpenMappedExeConfiguration(fileMap, ConfigurationUserLevel.None);\n\nConfigurationChannelFactory<ICalculatorChannel> factory1 = new ConfigurationChannelFactory<ICalculatorChannel>(\"endpoint1\", newConfiguration, new EndpointAddress(\"http://localhost:8000/servicemodelsamples/service\"));\nICalculatorChannel client1 = factory1.CreateChannel();\n```\n\n#### To set up, build, and run the sample\n\n1.  Open Visual Studio 2012 with administrator privileges.\n\n2.  Right-click the ConfigurationChannelFactory solution (2 projects) and then select **Properties**.\n\n3.  In **Common Properties**, select **Startup Project**, and then click **Multiple startup projects**.\n\n4.  Move the **Service** project to the beginning of the list, with the **Action ‘Start’**, and then move the **Client** project after the **Service** project, also with the **Action ‘Start’**, so the **Client** project is executed after the **Service** project.\n\n5.  Click **OK**, and then press F5 (or CTRL+F5) to run the sample.\n\n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Basic\\Services\\ConfigurationChannelFactory`\n","nodes":[{"pos":[4,113],"embed":true,"restype":"x-metadata","content":"title: \"Configuration Channel Factory\"\nms.date: \"03/30/2017\"\nms.assetid: 3b749493-bd8a-4ccb-893e-5948901a1486","nodes":[{"content":"Configuration Channel Factory","nodes":[{"pos":[0,29],"content":"Configuration Channel Factory","nodes":[{"content":"Configuration Channel Factory","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[120,149],"content":"Configuration Channel Factory","linkify":"Configuration Channel Factory","nodes":[{"content":"Configuration Channel Factory","pos":[0,29]}]},{"content":"This sample covers the usage of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601&gt;</ph>.","pos":[150,259],"source":"This sample covers the usage of the <xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601&gt;</ph> allows central management of WCF client configuration.","pos":[260,391],"source":" The <xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601> allows central management of WCF client configuration."},{"content":"This can also be useful in scenarios in which configuration is selected or changed after the application domain load time.","pos":[392,514]},{"pos":[519,531],"content":"Demonstrates","linkify":"Demonstrates","nodes":[{"content":"Demonstrates","pos":[0,12]}]},{"pos":[610,620],"content":"Discussion","linkify":"Discussion","nodes":[{"content":"Discussion","pos":[0,10]}]},{"pos":[622,853],"content":"This sample shows how to use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601&gt;</ph> to add a particular configuration file to a client application, without having to use the default application configuration file.","source":"This sample shows how to use <xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601> to add a particular configuration file to a client application, without having to use the default application configuration file."},{"content":"The sample consists of two projects.","pos":[856,892]},{"content":"The first project is a simple service that runs to reply to messages coming from the clients.","pos":[893,986]},{"content":"The second project is a client application that builds two <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601&gt;</ph> objects using a <ph id=\"ph2\">&lt;xref:System.Configuration.ExeConfigurationFileMap&gt;</ph> for the Test.config configuration file and uses them to communicate with the service.","pos":[987,1272],"source":" The second project is a client application that builds two <xref:System.ServiceModel.Configuration.ConfigurationChannelFactory%601> objects using a <xref:System.Configuration.ExeConfigurationFileMap> for the Test.config configuration file and uses them to communicate with the service."},{"content":"Both clients communicate with the service using the configuration specified in Test.config.","pos":[1273,1364]},{"content":"The following code adds a custom configuration file to a client application.","pos":[1367,1443]},{"pos":[1966,2002],"content":"To set up, build, and run the sample","linkify":"To set up, build, and run the sample","nodes":[{"content":"To set up, build, and run the sample","pos":[0,36]}]},{"content":"Open Visual Studio 2012 with administrator privileges.","pos":[2008,2062]},{"pos":[2068,2165],"content":"Right-click the ConfigurationChannelFactory solution (2 projects) and then select <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept>.","source":"Right-click the ConfigurationChannelFactory solution (2 projects) and then select **Properties**."},{"pos":[2171,2270],"content":"In <bpt id=\"p1\">**</bpt>Common Properties<ept id=\"p1\">**</ept>, select <bpt id=\"p2\">**</bpt>Startup Project<ept id=\"p2\">**</ept>, and then click <bpt id=\"p3\">**</bpt>Multiple startup projects<ept id=\"p3\">**</ept>.","source":"In **Common Properties**, select **Startup Project**, and then click **Multiple startup projects**."},{"pos":[2276,2534],"content":"Move the <bpt id=\"p1\">**</bpt>Service<ept id=\"p1\">**</ept> project to the beginning of the list, with the <bpt id=\"p2\">**</bpt>Action ‘Start’<ept id=\"p2\">**</ept>, and then move the <bpt id=\"p3\">**</bpt>Client<ept id=\"p3\">**</ept> project after the <bpt id=\"p4\">**</bpt>Service<ept id=\"p4\">**</ept> project, also with the <bpt id=\"p5\">**</bpt>Action ‘Start’<ept id=\"p5\">**</ept>, so the <bpt id=\"p6\">**</bpt>Client<ept id=\"p6\">**</ept> project is executed after the <bpt id=\"p7\">**</bpt>Service<ept id=\"p7\">**</ept> project.","source":"Move the **Service** project to the beginning of the list, with the **Action ‘Start’**, and then move the **Client** project after the **Service** project, also with the **Action ‘Start’**, so the **Client** project is executed after the **Service** project."},{"pos":[2540,2603],"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>, and then press F5 (or CTRL+F5) to run the sample.","source":"Click **OK**, and then press F5 (or CTRL+F5) to run the sample."},{"pos":[2607,2739],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":"The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[14,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[0,53]},{"content":"Check for the following (default) directory before continuing.","pos":[54,116]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all Windows Communication Foundation (WCF) and <ph id=\"ph1\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[2793,3103],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[3104,3154]}]}