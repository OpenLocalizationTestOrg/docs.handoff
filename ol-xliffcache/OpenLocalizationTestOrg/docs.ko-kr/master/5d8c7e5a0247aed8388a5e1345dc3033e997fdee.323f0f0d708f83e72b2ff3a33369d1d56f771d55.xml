{"content":"---\ntitle: \"Single Data Type (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.Single\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Single data type\"\n  - \"F literal type character\"\n  - \"trailing zeros\"\n  - \"real numbers\"\n  - \"literal type characters, F\"\n  - \"trailing 0 characters\"\n  - \"identifier type characters, !\"\n  - \"single-precision numbers\"\n  - \"! identifier type character\"\n  - \"0 characters, trailing\"\n  - \"data types [Visual Basic], assigning\"\n  - \"floating-point numbers, Single data type\"\n  - \"numbers, real\"\n  - \"zeros, trailing\"\n  - \"numbers, floating point\"\nms.assetid: 224a2795-4cd5-496c-8f7a-a4f05a06d45d\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Single Data Type (Visual Basic)\nHolds signed IEEE 32-bit (4-byte) single-precision floating-point numbers ranging in value from -3.4028235E+38 through -1.401298E-45 for negative values and from 1.401298E-45 through 3.4028235E+38 for positive values. Single-precision numbers store an approximation of a real number.  \n  \n## Remarks  \n Use the `Single` data type to contain floating-point values that do not require the full data width of `Double`. In some cases the common language runtime might be able to pack your `Single` variables closely together and save memory consumption.  \n  \n The default value of `Single` is 0.  \n  \n## Programming Tips  \n  \n-   **Precision.** When you work with floating-point numbers, keep in mind that they do not always have a precise representation in memory. This could lead to unexpected results from certain operations, such as value comparison and the `Mod` operator. For more information, see [Troubleshooting Data Types](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md).  \n  \n-   **Widening.** The `Single` data type widens to `Double`. This means you can convert `Single` to `Double` without encountering a <xref:System.OverflowException?displayProperty=fullName> error.  \n  \n-   **Trailing Zeros.** The floating-point data types do not have any internal representation of trailing 0 characters. For example, they do not distinguish between 4.2000 and 4.2. Consequently, trailing 0 characters do not appear when you display or print floating-point values.  \n  \n-   **Type Characters.** Appending the literal type character `F` to a literal forces it to the `Single` data type. Appending the identifier type character `!` to any identifier forces it to `Single`.  \n  \n-   **Framework Type.** The corresponding type in the .NET Framework is the <xref:System.Single?displayProperty=fullName> structure.  \n  \n## See Also  \n <xref:System.Single?displayProperty=fullName>   \n [Data Types](../../../visual-basic/language-reference/data-types/data-type-summary.md)   \n [Decimal Data Type](../../../visual-basic/language-reference/data-types/decimal-data-type.md)   \n [Double Data Type](../../../visual-basic/language-reference/data-types/double-data-type.md)   \n [Type Conversion Functions](../../../visual-basic/language-reference/functions/type-conversion-functions.md)   \n [Conversion Summary](../../../visual-basic/language-reference/keywords/conversion-summary.md)   \n [Efficient Use of Data Types](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)   \n [Troubleshooting Data Types](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)","nodes":[{"pos":[4,997],"nodes":[{"content":"Single Data Type (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,48],"content":"Single Data Type (Visual Basic) | Microsoft Docs","nodes":[{"content":"Single Data Type (Visual Basic) | Microsoft Docs","pos":[0,48]}]}],"pos":[6,57],"yaml":true}],"content":"title: \"Single Data Type (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.Single\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Single data type\"\n  - \"F literal type character\"\n  - \"trailing zeros\"\n  - \"real numbers\"\n  - \"literal type characters, F\"\n  - \"trailing 0 characters\"\n  - \"identifier type characters, !\"\n  - \"single-precision numbers\"\n  - \"! identifier type character\"\n  - \"0 characters, trailing\"\n  - \"data types [Visual Basic], assigning\"\n  - \"floating-point numbers, Single data type\"\n  - \"numbers, real\"\n  - \"zeros, trailing\"\n  - \"numbers, floating point\"\nms.assetid: 224a2795-4cd5-496c-8f7a-a4f05a06d45d\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[1004,1035],"content":"Single Data Type (Visual Basic)","linkify":"Single Data Type (Visual Basic)","nodes":[{"content":"Single Data Type (Visual Basic)","pos":[0,31]}]},{"content":"Holds signed IEEE 32-bit (4-byte) single-precision floating-point numbers ranging in value from -3.4028235E+38 through -1.401298E-45 for negative values and from 1.401298E-45 through 3.4028235E+38 for positive values.","pos":[1036,1253]},{"content":"Single-precision numbers store an approximation of a real number.","pos":[1254,1319]},{"pos":[1328,1335],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the <ph id=\"ph1\">`Single`</ph> data type to contain floating-point values that do not require the full data width of <ph id=\"ph2\">`Double`</ph>.","pos":[1339,1451],"source":"Use the `Single` data type to contain floating-point values that do not require the full data width of `Double`."},{"content":"In some cases the common language runtime might be able to pack your <ph id=\"ph1\">`Single`</ph> variables closely together and save memory consumption.","pos":[1452,1585],"source":" In some cases the common language runtime might be able to pack your `Single` variables closely together and save memory consumption."},{"pos":[1592,1627],"content":"The default value of <ph id=\"ph1\">`Single`</ph> is 0.","source":"The default value of `Single` is 0."},{"pos":[1636,1652],"content":"Programming Tips","linkify":"Programming Tips","nodes":[{"content":"Programming Tips","pos":[0,16]}]},{"content":"<bpt id=\"p1\">**</bpt>Precision.<ept id=\"p1\">**</ept>","pos":[1662,1676],"source":"**Precision.**"},{"content":"When you work with floating-point numbers, keep in mind that they do not always have a precise representation in memory.","pos":[1677,1797]},{"content":"This could lead to unexpected results from certain operations, such as value comparison and the <ph id=\"ph1\">`Mod`</ph> operator.","pos":[1798,1909],"source":" This could lead to unexpected results from certain operations, such as value comparison and the `Mod` operator."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Troubleshooting Data Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept>.","pos":[1910,2065],"source":" For more information, see [Troubleshooting Data Types](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)."},{"content":"<bpt id=\"p1\">**</bpt>Widening.<ept id=\"p1\">**</ept>","pos":[2075,2088],"source":"**Widening.**"},{"content":"The <ph id=\"ph1\">`Single`</ph> data type widens to <ph id=\"ph2\">`Double`</ph>.","pos":[2089,2131],"source":" The `Single` data type widens to `Double`."},{"content":"This means you can convert <ph id=\"ph1\">`Single`</ph> to <ph id=\"ph2\">`Double`</ph> without encountering a <ph id=\"ph3\">&lt;xref:System.OverflowException?displayProperty=fullName&gt;</ph> error.","pos":[2132,2266],"source":" This means you can convert `Single` to `Double` without encountering a <xref:System.OverflowException?displayProperty=fullName> error."},{"content":"<bpt id=\"p1\">**</bpt>Trailing Zeros.<ept id=\"p1\">**</ept>","pos":[2276,2295],"source":"**Trailing Zeros.**"},{"content":"The floating-point data types do not have any internal representation of trailing 0 characters.","pos":[2296,2391]},{"content":"For example, they do not distinguish between 4.2000 and 4.2.","pos":[2392,2452]},{"content":"Consequently, trailing 0 characters do not appear when you display or print floating-point values.","pos":[2453,2551]},{"content":"<bpt id=\"p1\">**</bpt>Type Characters.<ept id=\"p1\">**</ept>","pos":[2561,2581],"source":"**Type Characters.**"},{"content":"Appending the literal type character <ph id=\"ph1\">`F`</ph> to a literal forces it to the <ph id=\"ph2\">`Single`</ph> data type.","pos":[2582,2672],"source":" Appending the literal type character `F` to a literal forces it to the `Single` data type."},{"content":"Appending the identifier type character <ph id=\"ph1\">`!`</ph> to any identifier forces it to <ph id=\"ph2\">`Single`</ph>.","pos":[2673,2757],"source":" Appending the identifier type character `!` to any identifier forces it to `Single`."},{"content":"<bpt id=\"p1\">**</bpt>Framework Type.<ept id=\"p1\">**</ept>","pos":[2767,2786],"source":"**Framework Type.**"},{"content":"The corresponding type in the .NET Framework is the <ph id=\"ph1\">&lt;xref:System.Single?displayProperty=fullName&gt;</ph> structure.","pos":[2787,2895],"source":" The corresponding type in the .NET Framework is the <xref:System.Single?displayProperty=fullName> structure."},{"pos":[2904,2912],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Single?displayProperty=fullName&gt;</ph>","pos":[2916,2961],"source":"<xref:System.Single?displayProperty=fullName> "},{"content":"<bpt id=\"p1\">[</bpt>Data Types<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id=\"ph1\"> </ph>","pos":[2966,3053],"source":"[Data Types](../../../visual-basic/language-reference/data-types/data-type-summary.md) "},{"content":"<bpt id=\"p1\">[</bpt>Decimal Data Type<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/decimal-data-type.md)</ept><ph id=\"ph1\"> </ph>","pos":[3057,3151],"source":"[Decimal Data Type](../../../visual-basic/language-reference/data-types/decimal-data-type.md) "},{"content":"<bpt id=\"p1\">[</bpt>Double Data Type<ept id=\"p1\">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept><ph id=\"ph1\"> </ph>","pos":[3155,3247],"source":"[Double Data Type](../../../visual-basic/language-reference/data-types/double-data-type.md) "},{"content":"<bpt id=\"p1\">[</bpt>Type Conversion Functions<ept id=\"p1\">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[3251,3360],"source":"[Type Conversion Functions](../../../visual-basic/language-reference/functions/type-conversion-functions.md) "},{"content":"<bpt id=\"p1\">[</bpt>Conversion Summary<ept id=\"p1\">](../../../visual-basic/language-reference/keywords/conversion-summary.md)</ept><ph id=\"ph1\"> </ph>","pos":[3364,3458],"source":"[Conversion Summary](../../../visual-basic/language-reference/keywords/conversion-summary.md) "},{"content":"<bpt id=\"p1\">[</bpt>Efficient Use of Data Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[3462,3593],"source":"[Efficient Use of Data Types](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Troubleshooting Data Types<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept>","pos":[3597,3725],"source":"[Troubleshooting Data Types](../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)"}]}