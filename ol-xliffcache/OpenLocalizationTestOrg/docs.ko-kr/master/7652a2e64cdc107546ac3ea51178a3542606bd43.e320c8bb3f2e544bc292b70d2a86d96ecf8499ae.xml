{"content":"---\ntitle: \"Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"controls [WPF], about WPF controls\"\nms.assetid: 3f255a8a-35a8-4712-9065-472ff7d75599\ncaps.latest.revision: 13\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Controls\n<a name=\"introduction\"></a> [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] ships with many of the common UI components that are used in almost every Windows application, such as              <xref:System.Windows.Controls.Button>,              <xref:System.Windows.Controls.Label>,              <xref:System.Windows.Controls.TextBox>,              <xref:System.Windows.Controls.Menu>, and              <xref:System.Windows.Controls.ListBox>. Historically, these objects have been referred to as controls. While the              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] SDK continues to use the term \"control\" to loosely mean any class that represents a visible object in an application, it is important to note that a class does not need to inherit from the              <xref:System.Windows.Controls.Control> class to have a visible presence. Classes that inherit from the              <xref:System.Windows.Controls.Control> class contain a              <xref:System.Windows.Controls.ControlTemplate>, which allows the consumer of a control to radically change the control's appearance without having to create a new subclass.  This topic discusses how controls (both those that do inherit from the              <xref:System.Windows.Controls.Control> class and those that do not) are commonly used in              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)].  \n  \n \n  \n<a name=\"creating_an_instance_of_a_control\"></a>   \n## Creating an Instance of a Control  \n You can add a control to an application by using either                  [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] or code.  The following example shows how to create a simple application that asks a user for their first and last name.  This example creates six controls: two labels, two text boxes, and two buttons, in                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]. All controls can be created similarly.  \n  \n [!code-xml[ControlsOverview#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/Window1.xaml#1)]  \n  \n The following example creates the same application in code. For brevity, the creation of the                  <xref:System.Windows.Controls.Grid>,                  `grid1`, has been excluded from the sample.                   `grid1` has the same column and row definitions as shown in the preceding                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] example.  \n  \n [!code-csharp[ControlsOverview#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#2)]\n [!code-vb[ControlsOverview#2](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#2)]  \n  \n<a name=\"changing_the_appearance_of_a_control\"></a>   \n## Changing the Appearance of a Control  \n It is common to change the appearance of a control to fit the look and feel of your application. You can change the appearance of a control by doing one of the following, depending on what you want to accomplish:  \n  \n-   Change the value of a property of the control.  \n  \n-   Create a                          <xref:System.Windows.Style> for the control.  \n  \n-   Create a new                          <xref:System.Windows.Controls.ControlTemplate> for the control.  \n  \n### Changing a Control's Property Value  \n Many controls have properties that allow you to change how the control appears, such as the                          <xref:System.Windows.Controls.Control.Background%2A> of a                          <xref:System.Windows.Controls.Button>. You can set the value properties in both                          [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] and code. The following example sets the                          <xref:System.Windows.Controls.Control.Background%2A>,                          <xref:System.Windows.Controls.Control.FontSize%2A>, and                          <xref:System.Windows.Controls.Control.FontWeight%2A> properties on a                          <xref:System.Windows.Controls.Button> in                          [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)].  \n  \n [!code-xml[ControlsOverview#3](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml#3)]  \n  \n The following example sets the same properties in code.  \n  \n [!code-csharp[ControlsOverview#4](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#4)]\n [!code-vb[ControlsOverview#4](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#4)]  \n  \n### Creating a Style for a Control  \n [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] gives you the ability to specify the appearance of controls wholesale, instead of setting properties on each instance in the application, by creating a                          <xref:System.Windows.Style>.                           The following example                          creates a                          <xref:System.Windows.Style> that is applied to each                          <xref:System.Windows.Controls.Button> in the application.                          <xref:System.Windows.Style> definitions are typically defined in                          [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] in a                          <xref:System.Windows.ResourceDictionary>, such as the                          <xref:System.Windows.FrameworkElement.Resources%2A> property of the                          <xref:System.Windows.FrameworkElement>.  \n  \n [!code-xml[ControlsOverview#5](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml#5)]  \n  \n You can also apply a style to only certain controls of a specific type by assigning a key to the style and specifying that key in the                          `Style` property of your control.  For more information about styles, see                          [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md).  \n  \n### Creating a ControlTemplate  \n A                          <xref:System.Windows.Style> allows you to set properties on multiple controls at a time, but sometimes you might want to customize the appearance of a                          <xref:System.Windows.Controls.Control> beyond what you can do by creating a                          <xref:System.Windows.Style>. Classes that inherit from the                          <xref:System.Windows.Controls.Control> class have a                          <xref:System.Windows.Controls.ControlTemplate>, which defines the structure and appearance of a                          <xref:System.Windows.Controls.Control>. The                          <xref:System.Windows.Controls.Control.Template%2A> property of a                          <xref:System.Windows.Controls.Control> is public, so you can give a                          <xref:System.Windows.Controls.Control> a                          <xref:System.Windows.Controls.ControlTemplate> that is different than its default. You can often specify a new                          <xref:System.Windows.Controls.ControlTemplate> for a                          <xref:System.Windows.Controls.Control> instead of inheriting from a control to customize the appearance of a                          <xref:System.Windows.Controls.Control>.  \n  \n Consider the very common control,                          <xref:System.Windows.Controls.Button>.  The primary behavior of a                          <xref:System.Windows.Controls.Button> is to enable an application to take some action when the user clicks it.  By default, the                          <xref:System.Windows.Controls.Button> in                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] appears as a raised rectangle.  While developing an application, you might want to take advantage of the behavior of a                          <xref:System.Windows.Controls.Button>--that is, by handling the button's click event--but you might change the button's appearance beyond what you can do by changing the button's properties.  In this case, you can create a new                          <xref:System.Windows.Controls.ControlTemplate>.  \n  \n The following example creates a                          <xref:System.Windows.Controls.ControlTemplate> for a                          <xref:System.Windows.Controls.Button>.  The                          <xref:System.Windows.Controls.ControlTemplate> creates a                          <xref:System.Windows.Controls.Button> with rounded corners and a gradient background.  The                          <xref:System.Windows.Controls.ControlTemplate> contains a                          <xref:System.Windows.Controls.Border> whose                          <xref:System.Windows.Controls.Border.Background%2A> is a                          <xref:System.Windows.Media.LinearGradientBrush> with two                          <xref:System.Windows.Media.GradientStop> objects.  The first                          <xref:System.Windows.Media.GradientStop> uses data binding to bind the                          <xref:System.Windows.Media.GradientStop.Color%2A> property of the                          <xref:System.Windows.Media.GradientStop> to the color of the button's background.  When you set the                          <xref:System.Windows.Controls.Control.Background%2A> property of the                          <xref:System.Windows.Controls.Button>, the color of that value will be used as the first                          <xref:System.Windows.Media.GradientStop>. For more information about data binding, see                          [Data Binding Overview](../../../../docs/framework/wpf/data/data-binding-overview.md). The example also creates a                          <xref:System.Windows.Trigger> that changes the appearance of the                          <xref:System.Windows.Controls.Button> when                          <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is                          `true`.  \n  \n [!code-xml[ControlsOverview#6](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/Window1.xaml#6)]  \n[!code-xml[ControlsOverview#7](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml#7)]  \n  \n> [!NOTE]\n>  The                              <xref:System.Windows.Controls.Control.Background%2A> property of the                              <xref:System.Windows.Controls.Button> must be set to a                              <xref:System.Windows.Media.SolidColorBrush> for the example to work properly.  \n  \n<a name=\"subscribing_to_events\"></a>   \n## Subscribing to Events  \n You can subscribe to a control's event by using either                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] or code, but you can only handle an event in code.  The following example shows how to subscribe to the                  `Click` event of a                  <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[ControlsOverview#10](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/Window1.xaml#10)]  \n  \n [!code-csharp[ControlsOverview#8](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#8)]\n [!code-vb[ControlsOverview#8](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#8)]  \n  \n The following example handles the                  `Click` event of a                  <xref:System.Windows.Controls.Button>.  \n  \n [!code-csharp[ControlsOverview#9](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#9)]\n [!code-vb[ControlsOverview#9](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#9)]  \n  \n<a name=\"rich_content_in_controls\"></a>   \n## Rich Content in Controls  \n Most classes that inherit from the                  <xref:System.Windows.Controls.Control> class have the capacity to contain rich content. For example, a                  <xref:System.Windows.Controls.Label> can contain any object, such as a string, an                  <xref:System.Windows.Controls.Image>, or a                  <xref:System.Windows.Controls.Panel>.  The following classes provide support for rich content and act as base classes for most of the controls in                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)].  \n  \n-   <xref:System.Windows.Controls.ContentControl>-- Some examples of classes that inherit from this class are                          <xref:System.Windows.Controls.Label>,                          <xref:System.Windows.Controls.Button>, and                          <xref:System.Windows.Controls.ToolTip>.  \n  \n-   <xref:System.Windows.Controls.ItemsControl>-- Some examples of classes that inherit from this class are                          <xref:System.Windows.Controls.ListBox>,                          <xref:System.Windows.Controls.Menu>, and                          <xref:System.Windows.Controls.Primitives.StatusBar>.  \n  \n-   <xref:System.Windows.Controls.HeaderedContentControl>-- Some examples of classes that inherit from this class are                          <xref:System.Windows.Controls.TabItem>,                          <xref:System.Windows.Controls.GroupBox>, and                          <xref:System.Windows.Controls.Expander>.  \n  \n-   <xref:System.Windows.Controls.HeaderedItemsControl>--Some examples of classes that inherit from this class are                          <xref:System.Windows.Controls.MenuItem>,                          <xref:System.Windows.Controls.TreeViewItem>, and                          <xref:System.Windows.Controls.ToolBar>.  \n  \n-  \n  \n For more information about these base classes, see                  [WPF Content Model](../../../../docs/framework/wpf/controls/wpf-content-model.md).  \n  \n## See Also  \n [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md)   \n [Controls by Category](../../../../docs/framework/wpf/controls/controls-by-category.md)   \n [Control Library](../../../../docs/framework/wpf/controls/control-library.md)   \n [Data Templating Overview](../../../../docs/framework/wpf/data/data-templating-overview.md)   \n [Data Binding Overview](../../../../docs/framework/wpf/data/data-binding-overview.md)   \n [Input](../../../../docs/framework/wpf/advanced/input-wpf.md)   \n [Enable a Command](../../../../docs/framework/wpf/advanced/how-to-enable-a-command.md)   \n [Walkthroughs: Create a Custom Animated Button](../../../../docs/framework/wpf/controls/walkthroughs-create-a-custom-animated-button.md)   \n [Control Customization](../../../../docs/framework/wpf/controls/control-customization.md)","nodes":[{"pos":[4,401],"embed":true,"restype":"x-metadata","content":"title: \"Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"controls [WPF], about WPF controls\"\nms.assetid: 3f255a8a-35a8-4712-9065-472ff7d75599\ncaps.latest.revision: 13\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"Controls | Microsoft Docs","nodes":[{"pos":[0,25],"content":"Controls | Microsoft Docs","nodes":[{"content":"Controls | Microsoft Docs","pos":[0,25]}]}],"path":["title"]}],"yml":true},{"pos":[408,416],"content":"Controls","linkify":"Controls","nodes":[{"content":"Controls","pos":[0,8]}]},{"content":"<bpt id=\"p1\">&lt;a name=\"introduction\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept> <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> ships with many of the common UI components that are used in almost every Windows application, such as              <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>,              <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Label&gt;</ph>,              <ph id=\"ph4\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>,              <ph id=\"ph5\">&lt;xref:System.Windows.Controls.Menu&gt;</ph>, and              <ph id=\"ph6\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.","pos":[417,890],"source":"<a name=\"introduction\"></a> [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] ships with many of the common UI components that are used in almost every Windows application, such as              <xref:System.Windows.Controls.Button>,              <xref:System.Windows.Controls.Label>,              <xref:System.Windows.Controls.TextBox>,              <xref:System.Windows.Controls.Menu>, and              <xref:System.Windows.Controls.ListBox>."},{"content":"Historically, these objects have been referred to as controls.","pos":[891,953]},{"content":"While the              <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> SDK continues to use the term \"control\" to loosely mean any class that represents a visible object in an application, it is important to note that a class does not need to inherit from the              <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Control&gt;</ph> class to have a visible presence.","pos":[954,1333],"source":" While the              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] SDK continues to use the term \"control\" to loosely mean any class that represents a visible object in an application, it is important to note that a class does not need to inherit from the              <xref:System.Windows.Controls.Control> class to have a visible presence."},{"content":"Classes that inherit from the              <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control&gt;</ph> class contain a              <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, which allows the consumer of a control to radically change the control's appearance without having to create a new subclass.","pos":[1334,1617],"source":" Classes that inherit from the              <xref:System.Windows.Controls.Control> class contain a              <xref:System.Windows.Controls.ControlTemplate>, which allows the consumer of a control to radically change the control's appearance without having to create a new subclass."},{"content":"This topic discusses how controls (both those that do inherit from the              <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control&gt;</ph> class and those that do not) are commonly used in              <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.","pos":[1619,1887],"source":"  This topic discusses how controls (both those that do inherit from the              <xref:System.Windows.Controls.Control> class and those that do not) are commonly used in              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]."},{"pos":[1953,1986],"content":"Creating an Instance of a Control","linkify":"Creating an Instance of a Control","nodes":[{"content":"Creating an Instance of a Control","pos":[0,33]}]},{"content":"You can add a control to an application by using either                  <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> or code.","pos":[1990,2141],"source":"You can add a control to an application by using either                  [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] or code."},{"content":"The following example shows how to create a simple application that asks a user for their first and last name.","pos":[2143,2253]},{"content":"This example creates six controls: two labels, two text boxes, and two buttons, in                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[2255,2427],"source":"  This example creates six controls: two labels, two text boxes, and two buttons, in                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]."},{"content":"All controls can be created similarly.","pos":[2428,2466]},{"pos":[2473,2596],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#1<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/Window1.xaml#1)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[ControlsOverview#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/Window1.xaml#1)]"},{"content":"The following example creates the same application in code.","pos":[2603,2662]},{"content":"For brevity, the creation of the                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>,                  <ph id=\"ph2\">`grid1`</ph>, has been excluded from the sample.","pos":[2663,2810],"source":" For brevity, the creation of the                  <xref:System.Windows.Controls.Grid>,                  `grid1`, has been excluded from the sample."},{"content":"<ph id=\"ph1\">`grid1`</ph> has the same column and row definitions as shown in the preceding                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> example.","pos":[2829,3000],"source":"`grid1` has the same column and row definitions as shown in the preceding                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] example."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#2<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#2)</ept><ept id=\"p1\">]</ept>","pos":[3007,3138],"source":"[!code-csharp[ControlsOverview#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#2)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#2<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#2)</ept><ept id=\"p1\">]</ept>","pos":[3140,3277],"source":"[!code-vb[ControlsOverview#2](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#2)]"},{"pos":[3341,3377],"content":"Changing the Appearance of a Control","linkify":"Changing the Appearance of a Control","nodes":[{"content":"Changing the Appearance of a Control","pos":[0,36]}]},{"content":"It is common to change the appearance of a control to fit the look and feel of your application.","pos":[3381,3477]},{"content":"You can change the appearance of a control by doing one of the following, depending on what you want to accomplish:","pos":[3478,3593]},{"content":"Change the value of a property of the control.","pos":[3603,3649]},{"content":"Create a                          <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> for the control.","pos":[3659,3737],"source":"Create a                          <xref:System.Windows.Style> for the control."},{"content":"Create a new                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for the control.","pos":[3747,3848],"source":"Create a new                          <xref:System.Windows.Controls.ControlTemplate> for the control."},{"pos":[3858,3893],"content":"Changing a Control's Property Value","linkify":"Changing a Control's Property Value","nodes":[{"content":"Changing a Control's Property Value","pos":[0,35]}]},{"content":"Many controls have properties that allow you to change how the control appears, such as the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control.Background%2A&gt;</ph> of a                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>.","pos":[3897,4135],"source":"Many controls have properties that allow you to change how the control appears, such as the                          <xref:System.Windows.Controls.Control.Background%2A> of a                          <xref:System.Windows.Controls.Button>."},{"content":"You can set the value properties in both                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> and code.","pos":[4136,4283],"source":" You can set the value properties in both                          [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] and code."},{"content":"The following example sets the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control.Background%2A&gt;</ph>,                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Control.FontSize%2A&gt;</ph>, and                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Control.FontWeight%2A&gt;</ph> properties on a                          <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Button&gt;</ph> in                          <ph id=\"ph5\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[4284,4732],"source":" The following example sets the                          <xref:System.Windows.Controls.Control.Background%2A>,                          <xref:System.Windows.Controls.Control.FontSize%2A>, and                          <xref:System.Windows.Controls.Control.FontWeight%2A> properties on a                          <xref:System.Windows.Controls.Button> in                          [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]."},{"pos":[4739,4864],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#3<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml#3)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[ControlsOverview#3](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml#3)]"},{"content":"The following example sets the same properties in code.","pos":[4871,4926]},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#4<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#4)</ept><ept id=\"p1\">]</ept>","pos":[4933,5064],"source":"[!code-csharp[ControlsOverview#4](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#4)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#4<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#4)</ept><ept id=\"p1\">]</ept>","pos":[5066,5203],"source":"[!code-vb[ControlsOverview#4](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#4)]"},{"pos":[5213,5243],"content":"Creating a Style for a Control","linkify":"Creating a Style for a Control","nodes":[{"content":"Creating a Style for a Control","pos":[0,30]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> gives you the ability to specify the appearance of controls wholesale, instead of setting properties on each instance in the application, by creating a                          <ph id=\"ph2\">&lt;xref:System.Windows.Style&gt;</ph>.","pos":[5247,5534],"source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] gives you the ability to specify the appearance of controls wholesale, instead of setting properties on each instance in the application, by creating a                          <xref:System.Windows.Style>."},{"content":"The following example                          creates a                          <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> that is applied to each                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph> in the application.","pos":[5561,5777],"source":"                           The following example                          creates a                          <xref:System.Windows.Style> that is applied to each                          <xref:System.Windows.Controls.Button> in the application."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> definitions are typically defined in                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> in a                          <ph id=\"ph3\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, such as the                          <ph id=\"ph4\">&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;</ph> property of the                          <ph id=\"ph5\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.","pos":[5803,6206],"source":"                          <xref:System.Windows.Style> definitions are typically defined in                          [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] in a                          <xref:System.Windows.ResourceDictionary>, such as the                          <xref:System.Windows.FrameworkElement.Resources%2A> property of the                          <xref:System.Windows.FrameworkElement>."},{"pos":[6213,6338],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#5<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml#5)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[ControlsOverview#5](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml#5)]"},{"content":"You can also apply a style to only certain controls of a specific type by assigning a key to the style and specifying that key in the                          <ph id=\"ph1\">`Style`</ph> property of your control.","pos":[6345,6537],"source":"You can also apply a style to only certain controls of a specific type by assigning a key to the style and specifying that key in the                          `Style` property of your control."},{"content":"For more information about styles, see                          <bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept>.","pos":[6539,6695],"source":"  For more information about styles, see                          [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md)."},{"pos":[6705,6731],"content":"Creating a ControlTemplate","linkify":"Creating a ControlTemplate","nodes":[{"content":"Creating a ControlTemplate","pos":[0,26]}]},{"content":"A                          <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> allows you to set properties on multiple controls at a time, but sometimes you might want to customize the appearance of a                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Control&gt;</ph> beyond what you can do by creating a                          <ph id=\"ph3\">&lt;xref:System.Windows.Style&gt;</ph>.","pos":[6735,7067],"source":"A                          <xref:System.Windows.Style> allows you to set properties on multiple controls at a time, but sometimes you might want to customize the appearance of a                          <xref:System.Windows.Controls.Control> beyond what you can do by creating a                          <xref:System.Windows.Style>."},{"content":"Classes that inherit from the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control&gt;</ph> class have a                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, which defines the structure and appearance of a                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Control&gt;</ph>.","pos":[7068,7360],"source":" Classes that inherit from the                          <xref:System.Windows.Controls.Control> class have a                          <xref:System.Windows.Controls.ControlTemplate>, which defines the structure and appearance of a                          <xref:System.Windows.Controls.Control>."},{"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control.Template%2A&gt;</ph> property of a                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Control&gt;</ph> is public, so you can give a                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Control&gt;</ph> a                          <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> that is different than its default.","pos":[7361,7721],"source":" The                          <xref:System.Windows.Controls.Control.Template%2A> property of a                          <xref:System.Windows.Controls.Control> is public, so you can give a                          <xref:System.Windows.Controls.Control> a                          <xref:System.Windows.Controls.ControlTemplate> that is different than its default."},{"content":"You can often specify a new                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for a                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Control&gt;</ph> instead of inheriting from a control to customize the appearance of a                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Control&gt;</ph>.","pos":[7722,8026],"source":" You can often specify a new                          <xref:System.Windows.Controls.ControlTemplate> for a                          <xref:System.Windows.Controls.Control> instead of inheriting from a control to customize the appearance of a                          <xref:System.Windows.Controls.Control>."},{"content":"Consider the very common control,                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph>.","pos":[8033,8130],"source":"Consider the very common control,                          <xref:System.Windows.Controls.Button>."},{"content":"The primary behavior of a                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> is to enable an application to take some action when the user clicks it.","pos":[8132,8293],"source":"  The primary behavior of a                          <xref:System.Windows.Controls.Button> is to enable an application to take some action when the user clicks it."},{"content":"By default, the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> in                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> appears as a raised rectangle.","pos":[8295,8514],"source":"  By default, the                          <xref:System.Windows.Controls.Button> in                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] appears as a raised rectangle."},{"content":"While developing an application, you might want to take advantage of the behavior of a                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph>--that is, by handling the button's click event--but you might change the button's appearance beyond what you can do by changing the button's properties.","pos":[8516,8818],"source":"  While developing an application, you might want to take advantage of the behavior of a                          <xref:System.Windows.Controls.Button>--that is, by handling the button's click event--but you might change the button's appearance beyond what you can do by changing the button's properties."},{"content":"In this case, you can create a new                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.","pos":[8820,8927],"source":"  In this case, you can create a new                          <xref:System.Windows.Controls.ControlTemplate>."},{"content":"The following example creates a                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for a                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>.","pos":[8934,9107],"source":"The following example creates a                          <xref:System.Windows.Controls.ControlTemplate> for a                          <xref:System.Windows.Controls.Button>."},{"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> creates a                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph> with rounded corners and a gradient background.","pos":[9109,9305],"source":"  The                          <xref:System.Windows.Controls.ControlTemplate> creates a                          <xref:System.Windows.Controls.Button> with rounded corners and a gradient background."},{"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> contains a                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Border&gt;</ph> whose                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Border.Background%2A&gt;</ph> is a                          <ph id=\"ph4\">&lt;xref:System.Windows.Media.LinearGradientBrush&gt;</ph> with two                          <ph id=\"ph5\">&lt;xref:System.Windows.Media.GradientStop&gt;</ph> objects.","pos":[9307,9701],"source":"  The                          <xref:System.Windows.Controls.ControlTemplate> contains a                          <xref:System.Windows.Controls.Border> whose                          <xref:System.Windows.Controls.Border.Background%2A> is a                          <xref:System.Windows.Media.LinearGradientBrush> with two                          <xref:System.Windows.Media.GradientStop> objects."},{"content":"The first                          <ph id=\"ph1\">&lt;xref:System.Windows.Media.GradientStop&gt;</ph> uses data binding to bind the                          <ph id=\"ph2\">&lt;xref:System.Windows.Media.GradientStop.Color%2A&gt;</ph> property of the                          <ph id=\"ph3\">&lt;xref:System.Windows.Media.GradientStop&gt;</ph> to the color of the button's background.","pos":[9703,10006],"source":"  The first                          <xref:System.Windows.Media.GradientStop> uses data binding to bind the                          <xref:System.Windows.Media.GradientStop.Color%2A> property of the                          <xref:System.Windows.Media.GradientStop> to the color of the button's background."},{"content":"When you set the                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control.Background%2A&gt;</ph> property of the                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>, the color of that value will be used as the first                          <ph id=\"ph3\">&lt;xref:System.Windows.Media.GradientStop&gt;</ph>.","pos":[10008,10299],"source":"  When you set the                          <xref:System.Windows.Controls.Control.Background%2A> property of the                          <xref:System.Windows.Controls.Button>, the color of that value will be used as the first                          <xref:System.Windows.Media.GradientStop>."},{"content":"For more information about data binding, see                          <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept>.","pos":[10300,10456],"source":" For more information about data binding, see                          [Data Binding Overview](../../../../docs/framework/wpf/data/data-binding-overview.md)."},{"content":"The example also creates a                          <ph id=\"ph1\">&lt;xref:System.Windows.Trigger&gt;</ph> that changes the appearance of the                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph> when                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;</ph> is                          <ph id=\"ph4\">`true`</ph>.","pos":[10457,10768],"source":" The example also creates a                          <xref:System.Windows.Trigger> that changes the appearance of the                          <xref:System.Windows.Controls.Button> when                          <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is                          `true`."},{"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#6<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/Window1.xaml#6)</ept><ept id=\"p1\">]</ept>","pos":[10775,10898],"source":"[!code-xml[ControlsOverview#6](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/Window1.xaml#6)]"},{"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#7<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml#7)</ept><ept id=\"p1\">]</ept>","pos":[10901,11026],"source":"[!code-xml[ControlsOverview#7](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml#7)]"},{"pos":[11034,11337],"content":"[!NOTE]\n The                              <xref:System.Windows.Controls.Control.Background%2A> property of the                              <xref:System.Windows.Controls.Button> must be set to a                              <xref:System.Windows.Media.SolidColorBrush> for the example to work properly.","leadings":["","> "],"nodes":[{"content":"The                              <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control.Background%2A&gt;</ph> property of the                              <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph> must be set to a                              <ph id=\"ph3\">&lt;xref:System.Windows.Media.SolidColorBrush&gt;</ph> for the example to work properly.","pos":[9,301],"source":"The                              <xref:System.Windows.Controls.Control.Background%2A> property of the                              <xref:System.Windows.Controls.Button> must be set to a                              <xref:System.Windows.Media.SolidColorBrush> for the example to work properly."}]},{"pos":[11386,11407],"content":"Subscribing to Events","linkify":"Subscribing to Events","nodes":[{"content":"Subscribing to Events","pos":[0,21]}]},{"content":"You can subscribe to a control's event by using either                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> or code, but you can only handle an event in code.","pos":[11411,11605],"source":"You can subscribe to a control's event by using either                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] or code, but you can only handle an event in code."},{"content":"The following example shows how to subscribe to the                  <ph id=\"ph1\">`Click`</ph> event of a                  <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>.","pos":[11607,11750],"source":"  The following example shows how to subscribe to the                  `Click` event of a                  <xref:System.Windows.Controls.Button>."},{"pos":[11757,11882],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#10<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/Window1.xaml#10)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[ControlsOverview#10](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/Window1.xaml#10)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#8<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#8)</ept><ept id=\"p1\">]</ept>","pos":[11889,12020],"source":"[!code-csharp[ControlsOverview#8](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#8)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#8<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#8)</ept><ept id=\"p1\">]</ept>","pos":[12022,12159],"source":"[!code-vb[ControlsOverview#8](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#8)]"},{"pos":[12166,12291],"content":"The following example handles the                  <ph id=\"ph1\">`Click`</ph> event of a                  <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>.","source":"The following example handles the                  `Click` event of a                  <xref:System.Windows.Controls.Button>."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#9<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#9)</ept><ept id=\"p1\">]</ept>","pos":[12298,12429],"source":"[!code-csharp[ControlsOverview#9](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ControlsOverview/CSharp/AppInCode.xaml.cs#9)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>ControlsOverview#9<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#9)</ept><ept id=\"p1\">]</ept>","pos":[12431,12568],"source":"[!code-vb[ControlsOverview#9](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ControlsOverview/VisualBasic/AppInCode.xaml.vb#9)]"},{"pos":[12620,12644],"content":"Rich Content in Controls","linkify":"Rich Content in Controls","nodes":[{"content":"Rich Content in Controls","pos":[0,24]}]},{"content":"Most classes that inherit from the                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control&gt;</ph> class have the capacity to contain rich content.","pos":[12648,12787],"source":"Most classes that inherit from the                  <xref:System.Windows.Controls.Control> class have the capacity to contain rich content."},{"content":"For example, a                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Label&gt;</ph> can contain any object, such as a string, an                  <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Image&gt;</ph>, or a                  <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Panel&gt;</ph>.","pos":[12788,13016],"source":" For example, a                  <xref:System.Windows.Controls.Label> can contain any object, such as a string, an                  <xref:System.Windows.Controls.Image>, or a                  <xref:System.Windows.Controls.Panel>."},{"content":"The following classes provide support for rich content and act as base classes for most of the controls in                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>.","pos":[13018,13224],"source":"  The following classes provide support for rich content and act as base classes for most of the controls in                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>-- Some examples of classes that inherit from this class are                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Label&gt;</ph>,                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Button&gt;</ph>, and                          <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>.","pos":[13234,13535],"source":"<xref:System.Windows.Controls.ContentControl>-- Some examples of classes that inherit from this class are                          <xref:System.Windows.Controls.Label>,                          <xref:System.Windows.Controls.Button>, and                          <xref:System.Windows.Controls.ToolTip>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>-- Some examples of classes that inherit from this class are                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>,                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Menu&gt;</ph>, and                          <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Primitives.StatusBar&gt;</ph>.","pos":[13545,13857],"source":"<xref:System.Windows.Controls.ItemsControl>-- Some examples of classes that inherit from this class are                          <xref:System.Windows.Controls.ListBox>,                          <xref:System.Windows.Controls.Menu>, and                          <xref:System.Windows.Controls.Primitives.StatusBar>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.HeaderedContentControl&gt;</ph>-- Some examples of classes that inherit from this class are                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TabItem&gt;</ph>,                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.GroupBox&gt;</ph>, and                          <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Expander&gt;</ph>.","pos":[13867,14181],"source":"<xref:System.Windows.Controls.HeaderedContentControl>-- Some examples of classes that inherit from this class are                          <xref:System.Windows.Controls.TabItem>,                          <xref:System.Windows.Controls.GroupBox>, and                          <xref:System.Windows.Controls.Expander>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph>--Some examples of classes that inherit from this class are                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>,                          <ph id=\"ph3\">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph>, and                          <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ToolBar&gt;</ph>.","pos":[14191,14506],"source":"<xref:System.Windows.Controls.HeaderedItemsControl>--Some examples of classes that inherit from this class are                          <xref:System.Windows.Controls.MenuItem>,                          <xref:System.Windows.Controls.TreeViewItem>, and                          <xref:System.Windows.Controls.ToolBar>."},{"pos":[14520,14670],"content":"For more information about these base classes, see                  <bpt id=\"p1\">[</bpt>WPF Content Model<ept id=\"p1\">](../../../../docs/framework/wpf/controls/wpf-content-model.md)</ept>.","source":"For more information about these base classes, see                  [WPF Content Model](../../../../docs/framework/wpf/controls/wpf-content-model.md)."},{"pos":[14679,14687],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept><ph id=\"ph1\"> </ph>","pos":[14691,14783],"source":"[Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md) "},{"content":"<bpt id=\"p1\">[</bpt>Controls by Category<ept id=\"p1\">](../../../../docs/framework/wpf/controls/controls-by-category.md)</ept><ph id=\"ph1\"> </ph>","pos":[14787,14875],"source":"[Controls by Category](../../../../docs/framework/wpf/controls/controls-by-category.md) "},{"content":"<bpt id=\"p1\">[</bpt>Control Library<ept id=\"p1\">](../../../../docs/framework/wpf/controls/control-library.md)</ept><ph id=\"ph1\"> </ph>","pos":[14879,14957],"source":"[Control Library](../../../../docs/framework/wpf/controls/control-library.md) "},{"content":"<bpt id=\"p1\">[</bpt>Data Templating Overview<ept id=\"p1\">](../../../../docs/framework/wpf/data/data-templating-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[14961,15053],"source":"[Data Templating Overview](../../../../docs/framework/wpf/data/data-templating-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[15057,15143],"source":"[Data Binding Overview](../../../../docs/framework/wpf/data/data-binding-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Input<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/input-wpf.md)</ept><ph id=\"ph1\"> </ph>","pos":[15147,15209],"source":"[Input](../../../../docs/framework/wpf/advanced/input-wpf.md) "},{"content":"<bpt id=\"p1\">[</bpt>Enable a Command<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/how-to-enable-a-command.md)</ept><ph id=\"ph1\"> </ph>","pos":[15213,15300],"source":"[Enable a Command](../../../../docs/framework/wpf/advanced/how-to-enable-a-command.md) "},{"content":"<bpt id=\"p1\">[</bpt>Walkthroughs: Create a Custom Animated Button<ept id=\"p1\">](../../../../docs/framework/wpf/controls/walkthroughs-create-a-custom-animated-button.md)</ept><ph id=\"ph1\"> </ph>","pos":[15304,15441],"source":"[Walkthroughs: Create a Custom Animated Button](../../../../docs/framework/wpf/controls/walkthroughs-create-a-custom-animated-button.md) "},{"content":"<bpt id=\"p1\">[</bpt>Control Customization<ept id=\"p1\">](../../../../docs/framework/wpf/controls/control-customization.md)</ept>","pos":[15445,15534],"source":"[Control Customization](../../../../docs/framework/wpf/controls/control-customization.md)"}]}