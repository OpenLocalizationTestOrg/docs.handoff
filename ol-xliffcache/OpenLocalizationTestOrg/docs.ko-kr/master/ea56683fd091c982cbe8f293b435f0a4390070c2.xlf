<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea56683fd091c982cbe8f293b435f0a4390070c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\reflection-and-codedom\how-to-create-an-xml-documentation-file-using-codedom.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef82e9302400b8ce8819a13273576f9827924cef</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb73776a0b73e2bf62d0b14f7fbe26875c9fbdd7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create an XML Documentation File Using CodeDOM | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create an XML Documentation File Using CodeDOM</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>CodeDOM can be used to create code that generates XML documentation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The process involves creating the CodeDOM graph that contains the XML documentation comments, generating the code, and compiling the generated code with the compiler option that creates the XML documentation output.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To create a CodeDOM graph that contains XML documentation comments</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> containing the CodeDOM graph for the sample application.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement.%23ctor%2A&gt;</ph> constructor with the <ph id="ph2">`docComment`</ph> parameter set to <ph id="ph3">`true`</ph> to create the XML documentation comment elements and text.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CodeDomHelloWorldSample#4<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/CodeDomHelloWorldSample/cs/program.cs#4)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CodeDomHelloWorldSample#4<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomHelloWorldSample/vb/program.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To generate the code from the CodeCompileUnit</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A&gt;</ph> method to generate the code and create a source file to be compiled.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CodeDomHelloWorldSample#5<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/CodeDomHelloWorldSample/cs/program.cs#5)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CodeDomHelloWorldSample#5<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomHelloWorldSample/vb/program.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To compile the code and generate the documentation file</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Add the <bpt id="p1">**</bpt>/doc<ept id="p1">**</ept> compiler option to the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> object and pass the object to the <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile%2A&gt;</ph> method to create the XML documentation file when the code is compiled.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CodeDomHelloWorldSample#6<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/CodeDomHelloWorldSample/cs/program.cs#6)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CodeDomHelloWorldSample#6<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomHelloWorldSample/vb/program.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code example creates a CodeDOM graph with documentation comments, generates a code file from the graph, and compiles the file and creates an associated XML documentation file.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CodeDomHelloWorldSample#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/CodeDomHelloWorldSample/cs/program.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CodeDomHelloWorldSample#1<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomHelloWorldSample/vb/program.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The code example creates the following XML documentation in the HelloWorldDoc.xml file.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This code example requires the <ph id="ph1">`FullTrust`</ph> permission set to execute successfully.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Documenting Your Code with XML<ept id="p1">](~/docs/visual-basic/programming-guide/program-structure/documenting-your-code-with-xml.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Documentation Comments<ept id="p1">](~/docs/csharp/programming-guide/xmldoc/xml-documentation-comments.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Documentation<ept id="p1">](/cpp/ide/xml-documentation-visual-cpp)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>