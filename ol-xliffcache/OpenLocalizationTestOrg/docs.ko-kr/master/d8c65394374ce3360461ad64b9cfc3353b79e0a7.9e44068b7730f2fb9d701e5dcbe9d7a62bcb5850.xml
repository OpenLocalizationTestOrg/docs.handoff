{"content":"---\ntitle: \"-moduleassemblyname (C# Compiler Option) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"/moduleassemblyname\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"moduleassemblyname compiler option [C#]\"\n  - \"/moduleassemblyname compiler option [C#]\"\n  - \".moduleassemblyname compiler option [C#]\"\nms.assetid: d464d9b9-f18d-423b-95e9-66c7878fd53a\ncaps.latest.revision: 10\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /moduleassemblyname (C# Compiler Option)\nSpecifies an assembly whose non-public types a .netmodule can access.  \n  \n## Syntax  \n  \n```  \n/moduleassemblyname:assembly_name  \n```  \n  \n## Arguments  \n `assembly_name`  \n The name of the assembly whose non-public types the .netmodule can access.  \n  \n## Remarks  \n **/moduleassemblyname** should be used when building a .netmodule, and where the following conditions are true:  \n  \n-   The .netmodule needs access to non-public types in an existing assembly.  \n  \n-   You know the name of the assembly into which the .netmodule will be built.  \n  \n-   The existing assembly has granted friend assembly access to the assembly into which the .netmodule will be built.  \n  \n For more information on building a .netmodule, see [/target:module (C# Compiler Options)](../../../csharp/language-reference/compiler-options/target-module-compiler-option.md).  \n  \n For more information on friend assemblies, see [Friend Assemblies](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055).  \n  \n This option is not available from within the development environment; it is only available when compiling from the command line.  \n  \n This compiler option is unavailable in Visual Studio and cannot be changed programmatically.  \n  \n## Example  \n This sample builds an assembly with a private type, and that gives friend assembly access to an assembly called csman_an_assembly.  \n  \n```  \n// moduleassemblyname_1.cs  \n// compile with: /target:library  \nusing System;  \nusing System.Runtime.CompilerServices;  \n  \n[assembly:InternalsVisibleTo (\"csman_an_assembly\")]  \n  \nclass An_Internal_Class   \n{  \n    public void Test()   \n    {   \n        Console.WriteLine(\"An_Internal_Class.Test called\");   \n    }  \n}  \n```  \n  \n## Example  \n This sample builds a .netmodule that accesses a non-public type in the assembly moduleassemblyname_1.dll. By knowing that this .netmodule will be built into an assembly called csman_an_assembly, we can specify **/moduleassemblyname**, allowing the .netmodule to access non-public types in an assembly that has granted friend assembly access to csman_an_assembly.  \n  \n```  \n// moduleassemblyname_2.cs  \n// compile with: /moduleassemblyname:csman_an_assembly /target:module /reference:moduleassemblyname_1.dll  \nclass B {  \n    public void Test() {  \n        An_Internal_Class x = new An_Internal_Class();  \n        x.Test();  \n    }  \n}  \n```  \n  \n## Example  \n This code sample builds the assembly csman_an_assembly, referencing the previously-built assembly and .netmodule.  \n  \n```  \n// csman_an_assembly.cs  \n// compile with: /addmodule:moduleassemblyname_2.netmodule /reference:moduleassemblyname_1.dll  \nclass A {  \n    public static void Main() {  \n        B bb = new B();  \n        bb.Test();  \n    }  \n}  \n```  \n  \n **An_Internal_Class.Test called**   \n## See Also  \n [C# Compiler Options](../../../csharp/language-reference/compiler-options/index.md)   \n [NIB How to: Modify Project Properties and Configuration Settings](http://msdn.microsoft.com/en-us/e7184bc5-2f2b-4b4f-aa9a-3ecfcbc48b67)","nodes":[{"pos":[12,69],"content":"-moduleassemblyname (C# Compiler Option) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-moduleassemblyname (C# Compiler Option) | Microsoft Docs","pos":[0,57]}]},{"pos":[694,734],"content":"/moduleassemblyname (C# Compiler Option)","linkify":"/moduleassemblyname (C# Compiler Option)","nodes":[{"content":"/moduleassemblyname (C# Compiler Option)","pos":[0,40]}]},{"content":"Specifies an assembly whose non-public types a .netmodule can access.","pos":[735,804]},{"pos":[813,819],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[879,888],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"The name of the assembly whose non-public types the .netmodule can access.","pos":[911,985]},{"pos":[994,1001],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1005,1116],"content":"<bpt id=\"p1\">**</bpt>/moduleassemblyname<ept id=\"p1\">**</ept> should be used when building a .netmodule, and where the following conditions are true:","source":"**/moduleassemblyname** should be used when building a .netmodule, and where the following conditions are true:"},{"content":"The .netmodule needs access to non-public types in an existing assembly.","pos":[1126,1198]},{"content":"You know the name of the assembly into which the .netmodule will be built.","pos":[1208,1282]},{"content":"The existing assembly has granted friend assembly access to the assembly into which the .netmodule will be built.","pos":[1292,1405]},{"pos":[1412,1588],"content":"For more information on building a .netmodule, see <bpt id=\"p1\">[</bpt>/target:module (C# Compiler Options)<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/target-module-compiler-option.md)</ept>.","source":"For more information on building a .netmodule, see [/target:module (C# Compiler Options)](../../../csharp/language-reference/compiler-options/target-module-compiler-option.md)."},{"pos":[1595,1734],"content":"For more information on friend assemblies, see <bpt id=\"p1\">[</bpt>Friend Assemblies<ept id=\"p1\">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept>.","source":"For more information on friend assemblies, see [Friend Assemblies](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)."},{"content":"This option is not available from within the development environment; it is only available when compiling from the command line.","pos":[1741,1869]},{"content":"This compiler option is unavailable in Visual Studio and cannot be changed programmatically.","pos":[1876,1968]},{"pos":[1977,1984],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This sample builds an assembly with a private type, and that gives friend assembly access to an assembly called csman_an_assembly.","pos":[1988,2118]},{"pos":[2464,2471],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This sample builds a .netmodule that accesses a non-public type in the assembly moduleassemblyname_1.dll.","pos":[2475,2580]},{"content":"By knowing that this .netmodule will be built into an assembly called csman_an_assembly, we can specify <bpt id=\"p1\">**</bpt>/moduleassemblyname<ept id=\"p1\">**</ept>, allowing the .netmodule to access non-public types in an assembly that has granted friend assembly access to csman_an_assembly.","pos":[2581,2837],"source":" By knowing that this .netmodule will be built into an assembly called csman_an_assembly, we can specify **/moduleassemblyname**, allowing the .netmodule to access non-public types in an assembly that has granted friend assembly access to csman_an_assembly."},{"pos":[3126,3133],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This code sample builds the assembly csman_an_assembly, referencing the previously-built assembly and .netmodule.","pos":[3137,3250]},{"pos":[3500,3533],"content":"<bpt id=\"p1\">**</bpt>An_Internal_Class.Test called<ept id=\"p1\">**</ept>","source":"**An_Internal_Class.Test called**"},{"pos":[3540,3548],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Compiler Options<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3552,3636],"source":"[C# Compiler Options](../../../csharp/language-reference/compiler-options/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>NIB How to: Modify Project Properties and Configuration Settings<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e7184bc5-2f2b-4b4f-aa9a-3ecfcbc48b67)</ept>","pos":[3639,3776],"source":" [NIB How to: Modify Project Properties and Configuration Settings](http://msdn.microsoft.com/en-us/e7184bc5-2f2b-4b4f-aa9a-3ecfcbc48b67)"}]}