{"content":"---\ntitle: \"ISymUnmanagedMethod::GetSequencePointCount Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedMethod.GetSequencePointCount\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedMethod::GetSequencePointCount\"\nhelpviewer_keywords: \n  - \"ISymUnmanagedMethod::GetSequencePointCount method [.NET Framework debugging]\"\n  - \"GetSequencePointCount method [.NET Framework debugging]\"\nms.assetid: 836133e8-6108-4b9b-b0a9-bce4e08dccda\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ISymUnmanagedMethod::GetSequencePointCount Method\nGets the count of sequence points within this method.  \n  \n## Syntax  \n  \n```  \nHRESULT GetSequencePointCount(  \n    [out, retval] ULONG32* pRetVal);  \n```  \n  \n## Parameters  \n `pRetVal`  \n [out] A pointer to a `ULONG32` that receives the size of the buffer required to contain the sequence points.  \n  \n## Return Value  \n S_OK if the method succeeds; otherwise, E_FAIL or some other error code.  \n  \n## Requirements  \n **Header:** CorSym.idl, CorSym.h  \n  \n## See also\n\n- [ISymUnmanagedMethod Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md)\n","nodes":[{"pos":[4,544],"embed":true,"restype":"x-metadata","content":"title: \"ISymUnmanagedMethod::GetSequencePointCount Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedMethod.GetSequencePointCount\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedMethod::GetSequencePointCount\"\nhelpviewer_keywords: \n  - \"ISymUnmanagedMethod::GetSequencePointCount method [.NET Framework debugging]\"\n  - \"GetSequencePointCount method [.NET Framework debugging]\"\nms.assetid: 836133e8-6108-4b9b-b0a9-bce4e08dccda\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ISymUnmanagedMethod::GetSequencePointCount Method","nodes":[{"pos":[0,49],"content":"ISymUnmanagedMethod::GetSequencePointCount Method","nodes":[{"content":"ISymUnmanagedMethod::GetSequencePointCount Method","pos":[0,49]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[551,600],"content":"ISymUnmanagedMethod::GetSequencePointCount Method","linkify":"ISymUnmanagedMethod::GetSequencePointCount Method","nodes":[{"content":"ISymUnmanagedMethod::GetSequencePointCount Method","pos":[0,49]}]},{"content":"Gets the count of sequence points within this method.","pos":[601,654]},{"pos":[663,669],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[765,775],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] A pointer to a <ph id=\"ph1\">`ULONG32`</ph> that receives the size of the buffer required to contain the sequence points.","pos":[792,900],"source":"[out] A pointer to a `ULONG32` that receives the size of the buffer required to contain the sequence points."},{"pos":[909,921],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the method succeeds; otherwise, E_FAIL or some other error code.","pos":[925,997]},{"pos":[1006,1018],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1022,1054],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl, CorSym.h","source":"**Header:** CorSym.idl, CorSym.h"},{"pos":[1063,1071],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1075,1193],"content":"<bpt id=\"p1\">[</bpt>ISymUnmanagedMethod Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md)</ept>","source":"[ISymUnmanagedMethod Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md)"}]}