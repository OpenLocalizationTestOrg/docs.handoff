{"content":"---\ntitle: \"How to: Create an Add-In That Returns a UI\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"creating an add-in that returns a UI [WPF]\"\n  - \"implementing add-in pipeline segments [WPF]\"\n  - \"add-in [WPF], returns a UI\"\nms.assetid: 57f274b7-4c66-4b72-92eb-81939a393776\n---\n# How to: Create an Add-In That Returns a UI\nThis example shows how to create an add-in that returns a Windows Presentation Foundation (WPF) to a host WPF standalone application.  \n  \n The add-in returns a UI that is a WPF user control. The content of the user control is a single button that, when clicked, displays a message box. The WPF standalone application hosts the add-in and displays the user control (returned by the add-in) as the content of the main application window.  \n  \n **Prerequisites**  \n  \n This example highlights the WPF extensions to the .NET Framework add-in model that enable this scenario, and assumes the following:  \n  \n-   Knowledge of the .NET Framework add-in model, including pipeline, add-in, and host development. If you are unfamiliar with these concepts, see [Add-ins and Extensibility](/previous-versions/dotnet/netframework-4.0/bb384200(v%3dvs.100)). For a tutorial that demonstrates the implementation of a pipeline, an add-in, and a host application, see [Walkthrough: Creating an Extensible Application](../../add-ins/walkthrough-create-extensible-app.md).  \n  \n-   Knowledge of the WPF extensions to the .NET Framework add-in model, which can be found here: [WPF Add-Ins Overview](wpf-add-ins-overview.md).  \n  \n## Example  \n To create an add-in that returns a WPF UI requires specific code for each pipeline segment, the add-in, and the host application.  \n\n<a name=\"Contract\"></a>   \n## Implementing the Contract Pipeline Segment  \n A method must be defined by the contract for returning a UI, and its return value must be of type <xref:System.AddIn.Contract.INativeHandleContract>. This is demonstrated by the `GetAddInUI` method of the `IWPFAddInContract` contract in the following code.  \n  \n [!code-csharp[SimpleAddInReturnsAUISample#ContractCode](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/CSharp/Contracts/IWPFAddInContract.cs#contractcode)]\n [!code-vb[SimpleAddInReturnsAUISample#ContractCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/VisualBasic/Contracts/IWPFAddInContract.vb#contractcode)]  \n  \n<a name=\"AddInView\"></a>   \n## Implementing the Add-In View Pipeline Segment  \n Because the add-in implements the [!INCLUDE[TLA2#tla_ui#plural](../../../../includes/tla2sharptla-uisharpplural-md.md)] it provides as subclasses of <xref:System.Windows.FrameworkElement>, the method on the add-in view that correlates to `IWPFAddInView.GetAddInUI` must return a value of type <xref:System.Windows.FrameworkElement>. The following code shows the add-in view of the contract, implemented as an interface.  \n  \n [!code-csharp[SimpleAddInReturnsAUISample#AddInViewCode](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/CSharp/AddInViews/IWPFAddInView.cs#addinviewcode)]\n [!code-vb[SimpleAddInReturnsAUISample#AddInViewCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/VisualBasic/AddInViews/IWPFAddInView.vb#addinviewcode)]  \n  \n<a name=\"AddInSideAdapter\"></a>   \n## Implementing the Add-In-Side Adapter Pipeline Segment  \n The contract method returns an <xref:System.AddIn.Contract.INativeHandleContract>, but the add-in returns a <xref:System.Windows.FrameworkElement> (as specified by the add-in view). Consequently, the <xref:System.Windows.FrameworkElement> must be converted to an <xref:System.AddIn.Contract.INativeHandleContract> before crossing the isolation boundary. This work is performed by the add-in-side adapter by calling <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A>, as shown in the following code.  \n  \n [!code-csharp[SimpleAddInReturnsAUISample#AddInSideAdapterCode](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/CSharp/AddInSideAdapters/WPFAddIn_ViewToContractAddInSideAdapter.cs#addinsideadaptercode)]\n [!code-vb[SimpleAddInReturnsAUISample#AddInSideAdapterCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/VisualBasic/AddInSideAdapters/WPFAddIn_ViewToContractAddInSideAdapter.vb#addinsideadaptercode)]  \n  \n<a name=\"HostView\"></a>   \n## Implementing the Host View Pipeline Segment  \n Because the host application will display a <xref:System.Windows.FrameworkElement>, the method on the host view that correlates to `IWPFAddInHostView.GetAddInUI` must return a value of type <xref:System.Windows.FrameworkElement>. The following code shows the host view of the contract, implemented as an interface.  \n  \n [!code-csharp[SimpleAddInReturnsAUISample#HostViewCode](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/CSharp/HostViews/IWPFAddInHostView.cs#hostviewcode)]\n [!code-vb[SimpleAddInReturnsAUISample#HostViewCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/VisualBasic/HostViews/IWPFAddInHostView.vb#hostviewcode)]  \n  \n<a name=\"HostSideAdapter\"></a>   \n## Implementing the Host-Side Adapter Pipeline Segment  \n The contract method returns an <xref:System.AddIn.Contract.INativeHandleContract>, but the host application expects a <xref:System.Windows.FrameworkElement> (as specified by the host view). Consequently, the <xref:System.AddIn.Contract.INativeHandleContract> must be converted to a <xref:System.Windows.FrameworkElement> after crossing the isolation boundary. This work is performed by the host-side adapter by calling <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A>, as shown in the following code.  \n  \n [!code-csharp[SimpleAddInReturnsAUISample#HostSideAdapterCode](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/CSharp/HostSideAdapters/WPFAddIn_ContractToViewHostSideAdapter.cs#hostsideadaptercode)]\n [!code-vb[SimpleAddInReturnsAUISample#HostSideAdapterCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/VisualBasic/HostSideAdapters/WPFAddIn_ContractToViewHostSideAdapter.vb#hostsideadaptercode)]  \n  \n<a name=\"AddIn\"></a>   \n## Implementing the Add-In  \n With the add-in-side adapter and add-in view created, the add-in (`WPFAddIn1.AddIn`) must implement the `IWPFAddInView.GetAddInUI` method to return a <xref:System.Windows.FrameworkElement> object (a <xref:System.Windows.Controls.UserControl> in this example). The implementation of the <xref:System.Windows.Controls.UserControl>, `AddInUI`, is shown by the following code.  \n  \n [!code-xaml[SimpleAddInReturnsAUISample#AddInUIMarkup](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/CSharp/WPFAddIn1/AddInUI.xaml#addinuimarkup)]  \n  \n [!code-csharp[SimpleAddInReturnsAUISample#AddInUICodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/CSharp/WPFAddIn1/AddInUI.xaml.cs#addinuicodebehind)]\n [!code-vb[SimpleAddInReturnsAUISample#AddInUICodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/VisualBasic/WPFAddIn1/AddInUI.xaml.vb#addinuicodebehind)]  \n  \n The implementation of the `IWPFAddInView.GetAddInUI` by the add-in simply needs to return a new instance of `AddInUI`, as shown by the following code.  \n  \n [!code-csharp[SimpleAddInReturnsAUISample#AddInCode](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/CSharp/WPFAddIn1/AddIn.cs#addincode)]\n [!code-vb[SimpleAddInReturnsAUISample#AddInCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/VisualBasic/WPFAddIn1/AddIn.vb#addincode)]  \n  \n<a name=\"App\"></a>   \n## Implementing the Host Application  \n With the host-side adapter and host view created, the host application can use the .NET Framework add-in model to open the pipeline, acquire a host view of the add-in, and call the `IWPFAddInHostView.GetAddInUI` method. These steps are shown in the following code.  \n  \n [!code-csharp[SimpleAddInReturnsAUISample#GetUICode](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/CSharp/Host/MainWindow.xaml.cs#getuicode)]\n [!code-vb[SimpleAddInReturnsAUISample#GetUICode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleAddInReturnsAUISample/VisualBasic/Host/MainWindow.xaml.vb#getuicode)]  \n  \n## See also\n\n- [Add-ins and Extensibility](/previous-versions/dotnet/netframework-4.0/bb384200(v%3dvs.100))\n- [WPF Add-Ins Overview](wpf-add-ins-overview.md)\n","nodes":[{"pos":[4,314],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create an Add-In That Returns a UI\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"creating an add-in that returns a UI [WPF]\"\n  - \"implementing add-in pipeline segments [WPF]\"\n  - \"add-in [WPF], returns a UI\"\nms.assetid: 57f274b7-4c66-4b72-92eb-81939a393776","nodes":[{"content":"How to: Create an Add-In That Returns a UI","nodes":[{"pos":[0,42],"content":"How to: Create an Add-In That Returns a UI","nodes":[{"content":"How to: Create an Add-In That Returns a UI","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[321,363],"content":"How to: Create an Add-In That Returns a UI","linkify":"How to: Create an Add-In That Returns a UI","nodes":[{"content":"How to: Create an Add-In That Returns a UI","pos":[0,42]}]},{"content":"This example shows how to create an add-in that returns a Windows Presentation Foundation (WPF) to a host WPF standalone application.","pos":[364,497]},{"content":"The add-in returns a UI that is a WPF user control.","pos":[504,555]},{"content":"The content of the user control is a single button that, when clicked, displays a message box.","pos":[556,650]},{"content":"The WPF standalone application hosts the add-in and displays the user control (returned by the add-in) as the content of the main application window.","pos":[651,800]},{"pos":[807,824],"content":"<bpt id=\"p1\">**</bpt>Prerequisites<ept id=\"p1\">**</ept>","source":"**Prerequisites**"},{"content":"This example highlights the WPF extensions to the .NET Framework add-in model that enable this scenario, and assumes the following:","pos":[831,962]},{"content":"Knowledge of the .NET Framework add-in model, including pipeline, add-in, and host development.","pos":[972,1067]},{"content":"If you are unfamiliar with these concepts, see <bpt id=\"p1\">[</bpt>Add-ins and Extensibility<ept id=\"p1\">](/previous-versions/dotnet/netframework-4.0/bb384200(v%3dvs.100))</ept>.","pos":[1068,1208],"source":" If you are unfamiliar with these concepts, see [Add-ins and Extensibility](/previous-versions/dotnet/netframework-4.0/bb384200(v%3dvs.100))."},{"content":"For a tutorial that demonstrates the implementation of a pipeline, an add-in, and a host application, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating an Extensible Application<ept id=\"p1\">](../../add-ins/walkthrough-create-extensible-app.md)</ept>.","pos":[1209,1417],"source":" For a tutorial that demonstrates the implementation of a pipeline, an add-in, and a host application, see [Walkthrough: Creating an Extensible Application](../../add-ins/walkthrough-create-extensible-app.md)."},{"pos":[1427,1568],"content":"Knowledge of the WPF extensions to the .NET Framework add-in model, which can be found here: <bpt id=\"p1\">[</bpt>WPF Add-Ins Overview<ept id=\"p1\">](wpf-add-ins-overview.md)</ept>.","source":"Knowledge of the WPF extensions to the .NET Framework add-in model, which can be found here: [WPF Add-Ins Overview](wpf-add-ins-overview.md)."},{"pos":[1577,1584],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"To create an add-in that returns a WPF UI requires specific code for each pipeline segment, the add-in, and the host application.","pos":[1588,1717]},{"pos":[1751,1793],"content":"Implementing the Contract Pipeline Segment","linkify":"Implementing the Contract Pipeline Segment","nodes":[{"content":"Implementing the Contract Pipeline Segment","pos":[0,42]}]},{"content":"A method must be defined by the contract for returning a UI, and its return value must be of type <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.INativeHandleContract&gt;</ph>.","pos":[1797,1946],"source":"A method must be defined by the contract for returning a UI, and its return value must be of type <xref:System.AddIn.Contract.INativeHandleContract>."},{"content":"This is demonstrated by the <ph id=\"ph1\">`GetAddInUI`</ph> method of the <ph id=\"ph2\">`IWPFAddInContract`</ph> contract in the following code.","pos":[1947,2053],"source":" This is demonstrated by the `GetAddInUI` method of the `IWPFAddInContract` contract in the following code."},{"pos":[2461,2506],"content":"Implementing the Add-In View Pipeline Segment","linkify":"Implementing the Add-In View Pipeline Segment","nodes":[{"content":"Implementing the Add-In View Pipeline Segment","pos":[0,45]}]},{"content":"Because the add-in implements the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui#plural](../../../../includes/tla2sharptla-uisharpplural-md.md)]</ph> it provides as subclasses of <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, the method on the add-in view that correlates to <ph id=\"ph3\">`IWPFAddInView.GetAddInUI`</ph> must return a value of type <ph id=\"ph4\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.","pos":[2510,2842],"source":"Because the add-in implements the [!INCLUDE[TLA2#tla_ui#plural](../../../../includes/tla2sharptla-uisharpplural-md.md)] it provides as subclasses of <xref:System.Windows.FrameworkElement>, the method on the add-in view that correlates to `IWPFAddInView.GetAddInUI` must return a value of type <xref:System.Windows.FrameworkElement>."},{"content":"The following code shows the add-in view of the contract, implemented as an interface.","pos":[2843,2929]},{"pos":[3342,3395],"content":"Implementing the Add-In-Side Adapter Pipeline Segment","linkify":"Implementing the Add-In-Side Adapter Pipeline Segment","nodes":[{"content":"Implementing the Add-In-Side Adapter Pipeline Segment","pos":[0,53]}]},{"content":"The contract method returns an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.INativeHandleContract&gt;</ph>, but the add-in returns a <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> (as specified by the add-in view).","pos":[3399,3580],"source":"The contract method returns an <xref:System.AddIn.Contract.INativeHandleContract>, but the add-in returns a <xref:System.Windows.FrameworkElement> (as specified by the add-in view)."},{"content":"Consequently, the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> must be converted to an <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.INativeHandleContract&gt;</ph> before crossing the isolation boundary.","pos":[3581,3752],"source":" Consequently, the <xref:System.Windows.FrameworkElement> must be converted to an <xref:System.AddIn.Contract.INativeHandleContract> before crossing the isolation boundary."},{"content":"This work is performed by the add-in-side adapter by calling <ph id=\"ph1\">&lt;xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A&gt;</ph>, as shown in the following code.","pos":[3753,3925],"source":" This work is performed by the add-in-side adapter by calling <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A>, as shown in the following code."},{"pos":[4424,4467],"content":"Implementing the Host View Pipeline Segment","linkify":"Implementing the Host View Pipeline Segment","nodes":[{"content":"Implementing the Host View Pipeline Segment","pos":[0,43]}]},{"content":"Because the host application will display a <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, the method on the host view that correlates to <ph id=\"ph2\">`IWPFAddInHostView.GetAddInUI`</ph> must return a value of type <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.","pos":[4471,4700],"source":"Because the host application will display a <xref:System.Windows.FrameworkElement>, the method on the host view that correlates to `IWPFAddInHostView.GetAddInUI` must return a value of type <xref:System.Windows.FrameworkElement>."},{"content":"The following code shows the host view of the contract, implemented as an interface.","pos":[4701,4785]},{"pos":[5199,5250],"content":"Implementing the Host-Side Adapter Pipeline Segment","linkify":"Implementing the Host-Side Adapter Pipeline Segment","nodes":[{"content":"Implementing the Host-Side Adapter Pipeline Segment","pos":[0,51]}]},{"content":"The contract method returns an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.INativeHandleContract&gt;</ph>, but the host application expects a <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> (as specified by the host view).","pos":[5254,5443],"source":"The contract method returns an <xref:System.AddIn.Contract.INativeHandleContract>, but the host application expects a <xref:System.Windows.FrameworkElement> (as specified by the host view)."},{"content":"Consequently, the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.INativeHandleContract&gt;</ph> must be converted to a <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> after crossing the isolation boundary.","pos":[5444,5613],"source":" Consequently, the <xref:System.AddIn.Contract.INativeHandleContract> must be converted to a <xref:System.Windows.FrameworkElement> after crossing the isolation boundary."},{"content":"This work is performed by the host-side adapter by calling <ph id=\"ph1\">&lt;xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A&gt;</ph>, as shown in the following code.","pos":[5614,5784],"source":" This work is performed by the host-side adapter by calling <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A>, as shown in the following code."},{"pos":[6272,6295],"content":"Implementing the Add-In","linkify":"Implementing the Add-In","nodes":[{"content":"Implementing the Add-In","pos":[0,23]}]},{"content":"With the add-in-side adapter and add-in view created, the add-in (<ph id=\"ph1\">`WPFAddIn1.AddIn`</ph>) must implement the <ph id=\"ph2\">`IWPFAddInView.GetAddInUI`</ph> method to return a <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> object (a <ph id=\"ph4\">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> in this example).","pos":[6299,6558],"source":"With the add-in-side adapter and add-in view created, the add-in (`WPFAddIn1.AddIn`) must implement the `IWPFAddInView.GetAddInUI` method to return a <xref:System.Windows.FrameworkElement> object (a <xref:System.Windows.Controls.UserControl> in this example)."},{"content":"The implementation of the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.UserControl&gt;</ph>, <ph id=\"ph2\">`AddInUI`</ph>, is shown by the following code.","pos":[6559,6671],"source":" The implementation of the <xref:System.Windows.Controls.UserControl>, `AddInUI`, is shown by the following code."},{"pos":[7236,7386],"content":"The implementation of the <ph id=\"ph1\">`IWPFAddInView.GetAddInUI`</ph> by the add-in simply needs to return a new instance of <ph id=\"ph2\">`AddInUI`</ph>, as shown by the following code.","source":"The implementation of the `IWPFAddInView.GetAddInUI` by the add-in simply needs to return a new instance of `AddInUI`, as shown by the following code."},{"pos":[7752,7785],"content":"Implementing the Host Application","linkify":"Implementing the Host Application","nodes":[{"content":"Implementing the Host Application","pos":[0,33]}]},{"content":"With the host-side adapter and host view created, the host application can use the .NET Framework add-in model to open the pipeline, acquire a host view of the add-in, and call the <ph id=\"ph1\">`IWPFAddInHostView.GetAddInUI`</ph> method.","pos":[7789,8008],"source":"With the host-side adapter and host view created, the host application can use the .NET Framework add-in model to open the pipeline, acquire a host view of the add-in, and call the `IWPFAddInHostView.GetAddInUI` method."},{"content":"These steps are shown in the following code.","pos":[8009,8053]},{"pos":[8407,8415],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[8419,8511],"content":"<bpt id=\"p1\">[</bpt>Add-ins and Extensibility<ept id=\"p1\">](/previous-versions/dotnet/netframework-4.0/bb384200(v%3dvs.100))</ept>","source":"[Add-ins and Extensibility](/previous-versions/dotnet/netframework-4.0/bb384200(v%3dvs.100))"},{"pos":[8514,8561],"content":"<bpt id=\"p1\">[</bpt>WPF Add-Ins Overview<ept id=\"p1\">](wpf-add-ins-overview.md)</ept>","source":"[WPF Add-Ins Overview](wpf-add-ins-overview.md)"}]}