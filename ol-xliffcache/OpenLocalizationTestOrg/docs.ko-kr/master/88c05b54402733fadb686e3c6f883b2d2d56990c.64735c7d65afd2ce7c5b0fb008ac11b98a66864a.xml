{"content":"---\ntitle: \"Common Tasks Performed with Visual Basic Operators\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"operators [Visual Basic], logical\"\n  - \"operators [Visual Basic], string concatenation\"\n  - \"operators [Visual Basic], bitwise\"\n  - \"operators [Visual Basic], bit-shift\"\n  - \"operators [Visual Basic], arithmetic\"\n  - \"operators [Visual Basic], string comparison\"\n  - \"operators [Visual Basic], concatenation\"\n  - \"Visual Basic code, operators\"\n  - \"operators [Visual Basic], comparison\"\n  - \"operators [Visual Basic], short-circuiting logical\"\nms.assetid: d181afe5-fafa-460f-a13b-81203f6f4587\n---\n# Common Tasks Performed with Visual Basic Operators\nOperators perform many common tasks involving one or more expressions called *operands*.  \n  \n## Arithmetic and Bit-shift Tasks  \n The following table summarizes the available arithmetic and bit-shift operations.  \n  \n|To|See|  \n|---|---|  \n|Add one numeric value to another|[+ Operator](../../../../visual-basic/language-reference/operators/addition-operator.md)|  \n|Subtract one numeric value from another|[- Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/subtraction-operator.md)|  \n|Reverse the sign of a numeric value|[- Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/subtraction-operator.md)|  \n|Multiply one numeric value by another|[* Operator](../../../../visual-basic/language-reference/operators/multiplication-operator.md)|  \n|Divide one numeric value into another|[/ Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/floating-point-division-operator.md)|  \n|Find the quotient of one numeric value divided by another (without the remainder)|[\\ Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/integer-division-operator.md)|  \n|Find the remainder of one numeric value divided by another (without the quotient)|[Mod Operator](../../../../visual-basic/language-reference/operators/mod-operator.md)|  \n|Raise one numeric value to the power of another|[^ Operator](../../../../visual-basic/language-reference/operators/exponentiation-operator.md)|  \n|Shift the bit pattern of a numeric value to the left|[<\\< Operator](../../../../visual-basic/language-reference/operators/left-shift-operator.md)|  \n|Shift the bit pattern of a numeric value to the right|[>> Operator](../../../../visual-basic/language-reference/operators/right-shift-operator.md)|  \n  \n## Comparison Tasks  \n The following table summarizes the available comparison operations.  \n  \n|To|See|  \n|---|---|  \n|Determine whether two values are equal|`=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether two values are unequal|`<>` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether one value is less than another|`<` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether one value is greater than another|`>` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether one value is less than or equal to another|`<=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether one value is greater than or equal to another|`>=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))|  \n|Determine whether two object variables refer to the same object instance|[Is Operator](../../../../visual-basic/language-reference/operators/is-operator.md)|  \n|Determine whether two object variables refer to different object instances|[IsNot Operator](../../../../visual-basic/language-reference/operators/isnot-operator.md)|  \n|Determine whether an object is of a specific type|[TypeOf Operator](../../../../visual-basic/language-reference/operators/typeof-operator.md)|  \n  \n## Concatenation Tasks  \n The following table summarizes the available concatenation operations.  \n  \n|To|See|  \n|---|---|  \n|Join multiple strings into a single string|`&` Operator ([Concatenation Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md))|  \n|Join numeric values with string values|`+` Operator ([Concatenation Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md))|  \n  \n## Logical and Bitwise Tasks  \n The following table summarizes the available logical and bitwise operations.  \n  \n|To|See|  \n|---|---|  \n|Perform logical negation on a Boolean value|[Not Operator](../../../../visual-basic/language-reference/operators/not-operator.md)|  \n|Perform logical conjunction on two Boolean values|[And Operator](../../../../visual-basic/language-reference/operators/and-operator.md)|  \n|Perform inclusive logical disjunction on two Boolean values|[Or Operator](../../../../visual-basic/language-reference/operators/or-operator.md)|  \n|Perform exclusive logical disjunction on two Boolean values|[Xor Operator](../../../../visual-basic/language-reference/operators/xor-operator.md)|  \n|Perform short-circuited logical conjunction on two Boolean values|[AndAlso Operator](../../../../visual-basic/language-reference/operators/andalso-operator.md)|  \n|Perform short-circuited inclusive logical disjunction on two Boolean values|[OrElse Operator](../../../../visual-basic/language-reference/operators/orelse-operator.md)|  \n|Perform bit-by-bit logical conjunction on two integral values|[And Operator](../../../../visual-basic/language-reference/operators/and-operator.md)|  \n|Perform bit-by-bit inclusive logical disjunction on two integral values|[Or Operator](../../../../visual-basic/language-reference/operators/or-operator.md)|  \n|Perform bit-by-bit exclusive logical disjunction on two integral values|[Xor Operator](../../../../visual-basic/language-reference/operators/xor-operator.md)|  \n|Perform bit-by-bit logical negation on an integral value|[Not Operator](../../../../visual-basic/language-reference/operators/not-operator.md)|  \n  \n## See also\n\n- [Operators and Expressions](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)\n- [Operators Listed by Functionality](../../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)\n","nodes":[{"pos":[4,603],"embed":true,"restype":"x-metadata","content":"title: \"Common Tasks Performed with Visual Basic Operators\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"operators [Visual Basic], logical\"\n  - \"operators [Visual Basic], string concatenation\"\n  - \"operators [Visual Basic], bitwise\"\n  - \"operators [Visual Basic], bit-shift\"\n  - \"operators [Visual Basic], arithmetic\"\n  - \"operators [Visual Basic], string comparison\"\n  - \"operators [Visual Basic], concatenation\"\n  - \"Visual Basic code, operators\"\n  - \"operators [Visual Basic], comparison\"\n  - \"operators [Visual Basic], short-circuiting logical\"\nms.assetid: d181afe5-fafa-460f-a13b-81203f6f4587","nodes":[{"content":"Common Tasks Performed with Visual Basic Operators","nodes":[{"pos":[0,50],"content":"Common Tasks Performed with Visual Basic Operators","nodes":[{"content":"Common Tasks Performed with Visual Basic Operators","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[610,660],"content":"Common Tasks Performed with Visual Basic Operators","linkify":"Common Tasks Performed with Visual Basic Operators","nodes":[{"content":"Common Tasks Performed with Visual Basic Operators","pos":[0,50]}]},{"pos":[661,749],"content":"Operators perform many common tasks involving one or more expressions called <bpt id=\"p1\">*</bpt>operands<ept id=\"p1\">*</ept>.","source":"Operators perform many common tasks involving one or more expressions called *operands*."},{"pos":[758,788],"content":"Arithmetic and Bit-shift Tasks","linkify":"Arithmetic and Bit-shift Tasks","nodes":[{"content":"Arithmetic and Bit-shift Tasks","pos":[0,30]}]},{"content":"The following table summarizes the available arithmetic and bit-shift operations.","pos":[792,873]},{"content":"To","pos":[880,882]},{"content":"See","pos":[883,886]},{"content":"Add one numeric value to another","pos":[903,935]},{"pos":[936,1024],"content":"<bpt id=\"p1\">[</bpt>+ Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/addition-operator.md)</ept>","source":"[+ Operator](../../../../visual-basic/language-reference/operators/addition-operator.md)"},{"content":"Subtract one numeric value from another","pos":[1029,1068]},{"pos":[1069,1175],"content":"<bpt id=\"p1\">[</bpt>- Operator (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/subtraction-operator.md)</ept>","source":"[- Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/subtraction-operator.md)"},{"content":"Reverse the sign of a numeric value","pos":[1180,1215]},{"pos":[1216,1322],"content":"<bpt id=\"p1\">[</bpt>- Operator (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/subtraction-operator.md)</ept>","source":"[- Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/subtraction-operator.md)"},{"content":"Multiply one numeric value by another","pos":[1327,1364]},{"pos":[1365,1459],"content":"<bpt id=\"p1\">[</bpt>* Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/multiplication-operator.md)</ept>","source":"[* Operator](../../../../visual-basic/language-reference/operators/multiplication-operator.md)"},{"content":"Divide one numeric value into another","pos":[1464,1501]},{"pos":[1502,1620],"content":"<bpt id=\"p1\">[</bpt>/ Operator (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept>","source":"[/ Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/floating-point-division-operator.md)"},{"content":"Find the quotient of one numeric value divided by another (without the remainder)","pos":[1625,1706]},{"pos":[1707,1818],"content":"<bpt id=\"p1\">[</bpt>\\ Operator (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/integer-division-operator.md)</ept>","source":"[\\ Operator (Visual Basic)](../../../../visual-basic/language-reference/operators/integer-division-operator.md)"},{"content":"Find the remainder of one numeric value divided by another (without the quotient)","pos":[1823,1904]},{"pos":[1905,1990],"content":"<bpt id=\"p1\">[</bpt>Mod Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/mod-operator.md)</ept>","source":"[Mod Operator](../../../../visual-basic/language-reference/operators/mod-operator.md)"},{"content":"Raise one numeric value to the power of another","pos":[1995,2042]},{"pos":[2043,2137],"content":"<bpt id=\"p1\">[</bpt>^ Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/exponentiation-operator.md)</ept>","source":"[^ Operator](../../../../visual-basic/language-reference/operators/exponentiation-operator.md)"},{"content":"Shift the bit pattern of a numeric value to the left","pos":[2142,2194]},{"pos":[2195,2287],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">&lt;</ph><ph id=\"ph2\">\\&lt;</ph> Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/left-shift-operator.md)</ept>","source":"[<\\< Operator](../../../../visual-basic/language-reference/operators/left-shift-operator.md)"},{"content":"Shift the bit pattern of a numeric value to the right","pos":[2292,2345]},{"pos":[2346,2438],"content":"<bpt id=\"p1\">[</bpt>&gt;&gt; Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/right-shift-operator.md)</ept>","source":"[>> Operator](../../../../visual-basic/language-reference/operators/right-shift-operator.md)"},{"pos":[2448,2464],"content":"Comparison Tasks","linkify":"Comparison Tasks","nodes":[{"content":"Comparison Tasks","pos":[0,16]}]},{"content":"The following table summarizes the available comparison operations.","pos":[2468,2535]},{"content":"To","pos":[2542,2544]},{"content":"See","pos":[2545,2548]},{"content":"Determine whether two values are equal","pos":[2565,2603]},{"pos":[2604,2769],"content":"<ph id=\"ph1\">`=`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether two values are unequal","pos":[2774,2814]},{"pos":[2815,2981],"content":"<ph id=\"ph1\">`&lt;&gt;`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`<>` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether one value is less than another","pos":[2986,3034]},{"pos":[3035,3200],"content":"<ph id=\"ph1\">`&lt;`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`<` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether one value is greater than another","pos":[3205,3256]},{"pos":[3257,3422],"content":"<ph id=\"ph1\">`&gt;`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`>` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether one value is less than or equal to another","pos":[3427,3487]},{"pos":[3488,3654],"content":"<ph id=\"ph1\">`&lt;=`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`<=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether one value is greater than or equal to another","pos":[3659,3722]},{"pos":[3723,3889],"content":"<ph id=\"ph1\">`&gt;=`</ph> Operator (<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>)","source":"`>=` Operator ([Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md))"},{"content":"Determine whether two object variables refer to the same object instance","pos":[3894,3966]},{"pos":[3967,4050],"content":"<bpt id=\"p1\">[</bpt>Is Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/is-operator.md)</ept>","source":"[Is Operator](../../../../visual-basic/language-reference/operators/is-operator.md)"},{"content":"Determine whether two object variables refer to different object instances","pos":[4055,4129]},{"pos":[4130,4219],"content":"<bpt id=\"p1\">[</bpt>IsNot Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/isnot-operator.md)</ept>","source":"[IsNot Operator](../../../../visual-basic/language-reference/operators/isnot-operator.md)"},{"content":"Determine whether an object is of a specific type","pos":[4224,4273]},{"pos":[4274,4365],"content":"<bpt id=\"p1\">[</bpt>TypeOf Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/typeof-operator.md)</ept>","source":"[TypeOf Operator](../../../../visual-basic/language-reference/operators/typeof-operator.md)"},{"pos":[4375,4394],"content":"Concatenation Tasks","linkify":"Concatenation Tasks","nodes":[{"content":"Concatenation Tasks","pos":[0,19]}]},{"content":"The following table summarizes the available concatenation operations.","pos":[4398,4468]},{"content":"To","pos":[4475,4477]},{"content":"See","pos":[4478,4481]},{"content":"Join multiple strings into a single string","pos":[4498,4540]},{"pos":[4541,4712],"content":"<ph id=\"ph1\">`&amp;`</ph> Operator (<bpt id=\"p1\">[</bpt>Concatenation Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md)</ept>)","source":"`&` Operator ([Concatenation Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md))"},{"content":"Join numeric values with string values","pos":[4717,4755]},{"pos":[4756,4927],"content":"<ph id=\"ph1\">`+`</ph> Operator (<bpt id=\"p1\">[</bpt>Concatenation Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md)</ept>)","source":"`+` Operator ([Concatenation Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/concatenation-operators.md))"},{"pos":[4937,4962],"content":"Logical and Bitwise Tasks","linkify":"Logical and Bitwise Tasks","nodes":[{"content":"Logical and Bitwise Tasks","pos":[0,25]}]},{"content":"The following table summarizes the available logical and bitwise operations.","pos":[4966,5042]},{"content":"To","pos":[5049,5051]},{"content":"See","pos":[5052,5055]},{"content":"Perform logical negation on a Boolean value","pos":[5072,5115]},{"pos":[5116,5201],"content":"<bpt id=\"p1\">[</bpt>Not Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/not-operator.md)</ept>","source":"[Not Operator](../../../../visual-basic/language-reference/operators/not-operator.md)"},{"content":"Perform logical conjunction on two Boolean values","pos":[5206,5255]},{"pos":[5256,5341],"content":"<bpt id=\"p1\">[</bpt>And Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/and-operator.md)</ept>","source":"[And Operator](../../../../visual-basic/language-reference/operators/and-operator.md)"},{"content":"Perform inclusive logical disjunction on two Boolean values","pos":[5346,5405]},{"pos":[5406,5489],"content":"<bpt id=\"p1\">[</bpt>Or Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/or-operator.md)</ept>","source":"[Or Operator](../../../../visual-basic/language-reference/operators/or-operator.md)"},{"content":"Perform exclusive logical disjunction on two Boolean values","pos":[5494,5553]},{"pos":[5554,5639],"content":"<bpt id=\"p1\">[</bpt>Xor Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/xor-operator.md)</ept>","source":"[Xor Operator](../../../../visual-basic/language-reference/operators/xor-operator.md)"},{"content":"Perform short-circuited logical conjunction on two Boolean values","pos":[5644,5709]},{"pos":[5710,5803],"content":"<bpt id=\"p1\">[</bpt>AndAlso Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/andalso-operator.md)</ept>","source":"[AndAlso Operator](../../../../visual-basic/language-reference/operators/andalso-operator.md)"},{"content":"Perform short-circuited inclusive logical disjunction on two Boolean values","pos":[5808,5883]},{"pos":[5884,5975],"content":"<bpt id=\"p1\">[</bpt>OrElse Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/orelse-operator.md)</ept>","source":"[OrElse Operator](../../../../visual-basic/language-reference/operators/orelse-operator.md)"},{"content":"Perform bit-by-bit logical conjunction on two integral values","pos":[5980,6041]},{"pos":[6042,6127],"content":"<bpt id=\"p1\">[</bpt>And Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/and-operator.md)</ept>","source":"[And Operator](../../../../visual-basic/language-reference/operators/and-operator.md)"},{"content":"Perform bit-by-bit inclusive logical disjunction on two integral values","pos":[6132,6203]},{"pos":[6204,6287],"content":"<bpt id=\"p1\">[</bpt>Or Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/or-operator.md)</ept>","source":"[Or Operator](../../../../visual-basic/language-reference/operators/or-operator.md)"},{"content":"Perform bit-by-bit exclusive logical disjunction on two integral values","pos":[6292,6363]},{"pos":[6364,6449],"content":"<bpt id=\"p1\">[</bpt>Xor Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/xor-operator.md)</ept>","source":"[Xor Operator](../../../../visual-basic/language-reference/operators/xor-operator.md)"},{"content":"Perform bit-by-bit logical negation on an integral value","pos":[6454,6510]},{"pos":[6511,6596],"content":"<bpt id=\"p1\">[</bpt>Not Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/not-operator.md)</ept>","source":"[Not Operator](../../../../visual-basic/language-reference/operators/not-operator.md)"},{"pos":[6606,6614],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[6618,6742],"content":"<bpt id=\"p1\">[</bpt>Operators and Expressions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)</ept>","source":"[Operators and Expressions](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)"},{"pos":[6745,6872],"content":"<bpt id=\"p1\">[</bpt>Operators Listed by Functionality<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept>","source":"[Operators Listed by Functionality](../../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)"}]}