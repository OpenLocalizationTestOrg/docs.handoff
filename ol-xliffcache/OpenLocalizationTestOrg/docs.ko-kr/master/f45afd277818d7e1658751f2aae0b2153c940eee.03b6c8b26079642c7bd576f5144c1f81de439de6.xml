{"content":"---\ntitle: \"-addmodule (C# Compiler Options)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"/addmodule\"\nhelpviewer_keywords: \n  - \"/addmodule compiler option [C#]\"\n  - \"-addmodule compiler option [C#]\"\n  - \"addmodule compiler option [C#]\"\nms.assetid: ed604546-0dc2-4bd4-9a3e-610a8d973e58\n---\n# -addmodule (C# Compiler Options)\nThis option adds a module that was created with the target:module switch to the current compilation.  \n  \n## Syntax  \n  \n```console  \n-addmodule:file[;file2]  \n```  \n  \n## Arguments  \n `file`, `file2`  \n An output file that contains metadata. The file cannot contain an assembly manifest. To import more than one file, separate file names with either a comma or a semicolon.  \n  \n## Remarks  \n All modules added with **-addmodule** must be in the same directory as the output file at run time. That is, you can specify a module in any directory at compile time but the module must be in the application directory at run time. If the module is not in the application directory at run time, you will get a <xref:System.TypeLoadException>.  \n  \n `file` cannot contain an assembly. For example, if the output file was created with [-target:module](../../../csharp/language-reference/compiler-options/target-module-compiler-option.md), its metadata can be imported with **-addmodule**.  \n  \n If the output file was created with a **-target** option other than **-target:module**, its metadata cannot be imported with **-addmodule** but can be imported with [-reference](../../../csharp/language-reference/compiler-options/reference-compiler-option.md).  \n  \n This compiler option is unavailable in Visual Studio; a project cannot reference a module. In addition, this compiler option cannot be changed programmatically.  \n  \n## Example  \n Compile source file `input.cs` and add metadata from `metad1.netmodule` and `metad2.netmodule` to produce `out.exe`:  \n  \n```console  \ncsc -addmodule:metad1.netmodule;metad2.netmodule -out:out.exe input.cs  \n```  \n  \n## See also\n\n- [C# Compiler Options](../../../csharp/language-reference/compiler-options/index.md)\n- [Managing Project and Solution Properties](/visualstudio/ide/managing-project-and-solution-properties)\n- [Multifile Assemblies](../../../framework/app-domains/multifile-assemblies.md)\n- [How to: Build a Multifile Assembly](../../../framework/app-domains/how-to-build-a-multifile-assembly.md)\n","nodes":[{"pos":[4,280],"embed":true,"restype":"x-metadata","content":"title: \"-addmodule (C# Compiler Options)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"/addmodule\"\nhelpviewer_keywords: \n  - \"/addmodule compiler option [C#]\"\n  - \"-addmodule compiler option [C#]\"\n  - \"addmodule compiler option [C#]\"\nms.assetid: ed604546-0dc2-4bd4-9a3e-610a8d973e58","nodes":[{"content":"-addmodule (C# Compiler Options)","nodes":[{"pos":[0,32],"content":"-addmodule (C# Compiler Options)","nodes":[{"content":"-addmodule (C# Compiler Options)","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[287,319],"content":"-addmodule (C# Compiler Options)","linkify":"-addmodule (C# Compiler Options)","nodes":[{"content":"-addmodule (C# Compiler Options)","pos":[0,32]}]},{"content":"This option adds a module that was created with the target:module switch to the current compilation.","pos":[320,420]},{"pos":[429,435],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[492,501],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"<ph id=\"ph1\">`file`</ph>, <ph id=\"ph2\">`file2`</ph>","pos":[505,520],"source":"`file`, `file2`"},{"content":"An output file that contains metadata.","pos":[524,562]},{"content":"The file cannot contain an assembly manifest.","pos":[563,608]},{"content":"To import more than one file, separate file names with either a comma or a semicolon.","pos":[609,694]},{"pos":[703,710],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"All modules added with <bpt id=\"p1\">**</bpt>-addmodule<ept id=\"p1\">**</ept> must be in the same directory as the output file at run time.","pos":[714,813],"source":"All modules added with **-addmodule** must be in the same directory as the output file at run time."},{"content":"That is, you can specify a module in any directory at compile time but the module must be in the application directory at run time.","pos":[814,945]},{"content":"If the module is not in the application directory at run time, you will get a <ph id=\"ph1\">&lt;xref:System.TypeLoadException&gt;</ph>.","pos":[946,1056],"source":" If the module is not in the application directory at run time, you will get a <xref:System.TypeLoadException>."},{"content":"<ph id=\"ph1\">`file`</ph> cannot contain an assembly.","pos":[1063,1097],"source":"`file` cannot contain an assembly."},{"content":"For example, if the output file was created with <bpt id=\"p1\">[</bpt>-target:module<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/target-module-compiler-option.md)</ept>, its metadata can be imported with <bpt id=\"p2\">**</bpt>-addmodule<ept id=\"p2\">**</ept>.","pos":[1098,1300],"source":" For example, if the output file was created with [-target:module](../../../csharp/language-reference/compiler-options/target-module-compiler-option.md), its metadata can be imported with **-addmodule**."},{"pos":[1307,1567],"content":"If the output file was created with a <bpt id=\"p1\">**</bpt>-target<ept id=\"p1\">**</ept> option other than <bpt id=\"p2\">**</bpt>-target:module<ept id=\"p2\">**</ept>, its metadata cannot be imported with <bpt id=\"p3\">**</bpt>-addmodule<ept id=\"p3\">**</ept> but can be imported with <bpt id=\"p4\">[</bpt>-reference<ept id=\"p4\">](../../../csharp/language-reference/compiler-options/reference-compiler-option.md)</ept>.","source":"If the output file was created with a **-target** option other than **-target:module**, its metadata cannot be imported with **-addmodule** but can be imported with [-reference](../../../csharp/language-reference/compiler-options/reference-compiler-option.md)."},{"content":"This compiler option is unavailable in Visual Studio; a project cannot reference a module.","pos":[1574,1664]},{"content":"In addition, this compiler option cannot be changed programmatically.","pos":[1665,1734]},{"pos":[1743,1750],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1754,1870],"content":"Compile source file <ph id=\"ph1\">`input.cs`</ph> and add metadata from <ph id=\"ph2\">`metad1.netmodule`</ph> and <ph id=\"ph3\">`metad2.netmodule`</ph> to produce <ph id=\"ph4\">`out.exe`</ph>:","source":"Compile source file `input.cs` and add metadata from `metad1.netmodule` and `metad2.netmodule` to produce `out.exe`:"},{"pos":[1974,1982],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1986,2069],"content":"<bpt id=\"p1\">[</bpt>C# Compiler Options<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/index.md)</ept>","source":"[C# Compiler Options](../../../csharp/language-reference/compiler-options/index.md)"},{"pos":[2072,2174],"content":"<bpt id=\"p1\">[</bpt>Managing Project and Solution Properties<ept id=\"p1\">](/visualstudio/ide/managing-project-and-solution-properties)</ept>","source":"[Managing Project and Solution Properties](/visualstudio/ide/managing-project-and-solution-properties)"},{"pos":[2177,2255],"content":"<bpt id=\"p1\">[</bpt>Multifile Assemblies<ept id=\"p1\">](../../../framework/app-domains/multifile-assemblies.md)</ept>","source":"[Multifile Assemblies](../../../framework/app-domains/multifile-assemblies.md)"},{"pos":[2258,2363],"content":"<bpt id=\"p1\">[</bpt>How to: Build a Multifile Assembly<ept id=\"p1\">](../../../framework/app-domains/how-to-build-a-multifile-assembly.md)</ept>","source":"[How to: Build a Multifile Assembly](../../../framework/app-domains/how-to-build-a-multifile-assembly.md)"}]}