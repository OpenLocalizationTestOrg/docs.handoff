<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55d1654258661ca98132e4eb34dcfae0e3998fdf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\auto-confirm-pattern.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cc3d14ac3ab7dc8edecede8bcc1ce84368b768c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24f3b2af224f414a69ea5156ecf30df4e24de038</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Auto-Confirm Pattern | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Auto-Confirm Pattern</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample consists of three scenarios that run illustrating a custom <ph id="ph1">`AutoConfirmScope`</ph> activity.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The first sample shows the successful execution of a sequence of four compensable activities where the second and third are nested in an <ph id="ph1">`AutoConfirmScope`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The second sample shows the same sequence with an exception occurring after the execution of the fourth <ph id="ph1">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The third scenario shows the same sequence with an exception occurring in the <ph id="ph1">`AutoConfirmScope`</ph> after the second <ph id="ph2">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph> completes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The sample demonstrates the auto-confirm pattern where all child compensable activities are confirmed upon successful completion of the scope.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This pattern defines the lifetime of all child compensable activities, as they can no longer be compensated or confirmed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The scope consists of a <ph id="ph1">&lt;xref:System.Activities.Statements.TryCatch&gt;</ph> where the <ph id="ph2">&lt;xref:System.Activities.Statements.TryCatch.Try%2A&gt;</ph> is an internal <ph id="ph3">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The user-specified body of the <ph id="ph1">`AutoConfirmScope`</ph> is the body of the inner <ph id="ph2">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When this internal <ph id="ph1">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph> completes, it produces a <ph id="ph2">&lt;xref:System.Activities.Statements.CompensationToken&gt;</ph> as an out-argument.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AutoConfirmScope`</ph> uses a <ph id="ph2">&lt;xref:System.Activities.Statements.TryCatch.Finally%2A&gt;</ph> to check whether the token has been produced and if it has then it confirms the inner <ph id="ph3">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The inner <ph id="ph1">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph> invokes the default compensation for any compensable activities that may exist in its body.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The first scenario shows successful execution of the workflow and demonstrates that the second and third compensable activities are already confirmed when the workflow completes and the first and fourth are confirmed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This produces a confirmation order of three, two, four, and one.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The second scenario shows an exception after the four compensable activities have completed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Because compensable activities two and three are already confirmed they are unaffected but one and four are compensated.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This produces confirm three, confirm two, compensate four and compensate one.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The final scenario shows unsuccessful execution of the <ph id="ph1">`AutoConfirmScope`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this scenario, an exception occurs after the completion of the second <ph id="ph1">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Because the third and fourth compensable activities have not executed, they are unaffected.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Because the scope did not complete successfully, the second <ph id="ph1">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph> does not get confirmed.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This produces and compensation order of two then one.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, open the AutoConfirmSample.sln solution file.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To build the solution, press CTRL+SHIFT+B.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To run the solution, press CTRL+F5.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>