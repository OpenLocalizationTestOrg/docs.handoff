{"content":"---\ntitle: \"C# Walkthroughs | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"walkthroughs [C#]\"\n  - \"walkthroughs [Visual Studio], Visual C#\"\n  - \"Visual C#, walkthroughs\"\nms.assetid: 2d07b972-ef69-4676-9aef-e1784728e1ff\ncaps.latest.revision: 28\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# C# Walkthroughs\nWalkthroughs give step-by-step instructions for common scenarios, which makes them a good place to start learning about the product or a particular feature area.  \n  \n This section contains links to C# programming walkthroughs.  \n  \n## In This Section  \n\n [Accessing the Web by Using Async and Await](./programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)  \n Shows how to create an asynchronous solution by using [async](../csharp/language-reference/keywords/async.md) and [await](../csharp/language-reference/keywords/await.md).  \n  \n [Creating a Windows Runtime Component in C# or Visual Basic and Calling it from JavaScript](https://msdn.microsoft.com/library/windows/apps/hh779077.aspx)  \n Shows how to create a [!INCLUDE[wrt](../csharp/includes/wrt_md.md)] type, package it in a [!INCLUDE[wrt](../csharp/includes/wrt_md.md)] component, and then call the component from a [!INCLUDE[win8_appname_long](../csharp/includes/win8_appname_long_md.md)] app that's built for Windows by using JavaScript.  \n  \n [Office Programming (C# and Visual Basic)](../csharp/programming-guide/interop/walkthrough-office-programming.md)  \n Shows how to create an Excel workbook and a Word document by using C# and Visual Basic.  \n  \n [Creating and Using Dynamic Objects (C# and Visual Basic)](../csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md)  \n Shows how to create a custom object that dynamically exposes the contents of a text file, and how to create a project that uses the `IronPython` library.  \n   \n [Authoring a Composite Control with Visual C#](https://msdn.microsoft.com/library/a6h7e207.aspx)  \n Demonstrates creating a simple composite control and extending its functionality through inheritance.  \n  \n [Creating a Windows Forms Control that Takes Advantage of Visual Studio Design-Time Features](https://msdn.microsoft.com/library/35ea88wb.aspx)  \n Illustrates how to create a custom designer for a custom control.  \n  \n [Inheriting from a Windows Forms Control with Visual C#](https://msdn.microsoft.com/library/5h0k2e6x.aspx)  \n Demonstrates creating a simple inherited button control. This button inherits functionality from the standard Windows Forms button and exposes a custom member.  \n  \n [Debugging Custom Windows Forms Controls at Design Time](https://msdn.microsoft.com/library/5ytx0z24.aspx)  \n Describes how to debug the design-time behavior of your custom control.\n\n [Performing Common Tasks Using Smart Tags on Windows Forms Controls](https://msdn.microsoft.com/library/xhz359sc.aspx)  \n Demonstrates some of the commonly performed tasks such as adding or removing a tab on a `TabControl`, docking a control to its parent, and changing the orientation of a `SplitContainer` control.  \n  \n [Writing Queries in C# (LINQ)](../csharp/programming-guide/concepts/linq/walkthrough-writing-queries-linq.md)  \n Demonstrates the C# language features that are used to write [!INCLUDE[vbteclinq](../csharp/includes/vbteclinq_md.md)] query expressions.  \n  \n [Manipulating Data (C#) (LINQ to SQL)](https://msdn.microsoft.com/library/bb386927.aspx)  \n Describes a [!INCLUDE[vbtecdlinq](../csharp/includes/vbtecdlinq_md.md)] scenario for adding, modifying, and deleting data in a database.  \n  \n [Simple Object Model and Query (C#) (LINQ to SQL)](https://msdn.microsoft.com/library/bb386940.aspx)  \n Demonstrates how to create an entity class and a simple query to filter the entity class.  \n  \n [Using Only Stored Procedures (C#) (LINQ to SQL)](https://msdn.microsoft.com/library/bb399407.aspx)  \n Demonstrates how to use LINQ to SQL to access data by executing only stored procedures.  \n  \n [Querying Across Relationships (C#) (LINQ to SQL)](https://msdn.microsoft.com/library/bb386951.aspx)  \n Demonstrates the use of [!INCLUDE[vbtecdlinq](../csharp/includes/vbtecdlinq_md.md)] associations to represent foreign-key relationships in a database.  \n\n [Writing a Visualizer in C#](https://docs.microsoft.com/visualstudio/debugger/walkthrough-writing-a-visualizer-in-csharp)  \n Shows how to write a simple visualizer by using C#.  \n  \n## Related Sections  \n [Deployment Samples and Walkthroughs](https://docs.microsoft.com/visualstudio/deployment/clickonce-deployment-samples-and-walkthroughs)  \n Provides step-by-step examples of common deployment scenarios.  \n  \n## See Also  \n [C# Programming Guide](../csharp/programming-guide/index.md)   \n [Visual Studio Samples](https://docs.microsoft.com/visualstudio/ide/visual-studio-samples)","nodes":[{"pos":[4,587],"nodes":[{"content":"C# Walkthroughs | Microsoft Docs","nodes":[{"pos":[0,32],"content":"C# Walkthroughs | Microsoft Docs","nodes":[{"content":"C# Walkthroughs | Microsoft Docs","pos":[0,32]}]}],"pos":[6,41],"yaml":true}],"content":"title: \"C# Walkthroughs | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"walkthroughs [C#]\"\n  - \"walkthroughs [Visual Studio], Visual C#\"\n  - \"Visual C#, walkthroughs\"\nms.assetid: 2d07b972-ef69-4676-9aef-e1784728e1ff\ncaps.latest.revision: 28\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[594,609],"content":"C# Walkthroughs","linkify":"C# Walkthroughs","nodes":[{"content":"C# Walkthroughs","pos":[0,15]}]},{"content":"Walkthroughs give step-by-step instructions for common scenarios, which makes them a good place to start learning about the product or a particular feature area.","pos":[610,771]},{"content":"This section contains links to C# programming walkthroughs.","pos":[778,837]},{"pos":[846,861],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Accessing the Web by Using Async and Await<ept id=\"p1\">](./programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>","pos":[866,1004],"source":"[Accessing the Web by Using Async and Await](./programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)"},{"content":"Shows how to create an asynchronous solution by using <bpt id=\"p1\">[</bpt>async<ept id=\"p1\">](../csharp/language-reference/keywords/async.md)</ept> and <bpt id=\"p2\">[</bpt>await<ept id=\"p2\">](../csharp/language-reference/keywords/await.md)</ept>.","pos":[1008,1178],"source":"Shows how to create an asynchronous solution by using [async](../csharp/language-reference/keywords/async.md) and [await](../csharp/language-reference/keywords/await.md)."},{"content":"<bpt id=\"p1\">[</bpt>Creating a Windows Runtime Component in C# or Visual Basic and Calling it from JavaScript<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh779077.aspx)</ept>","pos":[1185,1339],"source":"[Creating a Windows Runtime Component in C# or Visual Basic and Calling it from JavaScript](https://msdn.microsoft.com/library/windows/apps/hh779077.aspx)"},{"content":"Shows how to create a <ph id=\"ph1\">[!INCLUDE[wrt](../csharp/includes/wrt_md.md)]</ph> type, package it in a <ph id=\"ph2\">[!INCLUDE[wrt](../csharp/includes/wrt_md.md)]</ph> component, and then call the component from a <ph id=\"ph3\">[!INCLUDE[win8_appname_long](../csharp/includes/win8_appname_long_md.md)]</ph> app that's built for Windows by using JavaScript.","pos":[1343,1648],"source":"Shows how to create a [!INCLUDE[wrt](../csharp/includes/wrt_md.md)] type, package it in a [!INCLUDE[wrt](../csharp/includes/wrt_md.md)] component, and then call the component from a [!INCLUDE[win8_appname_long](../csharp/includes/win8_appname_long_md.md)] app that's built for Windows by using JavaScript."},{"content":"<bpt id=\"p1\">[</bpt>Office Programming (C# and Visual Basic)<ept id=\"p1\">](../csharp/programming-guide/interop/walkthrough-office-programming.md)</ept>","pos":[1655,1768],"source":"[Office Programming (C# and Visual Basic)](../csharp/programming-guide/interop/walkthrough-office-programming.md)"},{"content":"Shows how to create an Excel workbook and a Word document by using C# and Visual Basic.","pos":[1772,1859]},{"content":"<bpt id=\"p1\">[</bpt>Creating and Using Dynamic Objects (C# and Visual Basic)<ept id=\"p1\">](../csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md)</ept>","pos":[1866,2009],"source":"[Creating and Using Dynamic Objects (C# and Visual Basic)](../csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md)"},{"content":"Shows how to create a custom object that dynamically exposes the contents of a text file, and how to create a project that uses the <ph id=\"ph1\">`IronPython`</ph> library.","pos":[2013,2166],"source":"Shows how to create a custom object that dynamically exposes the contents of a text file, and how to create a project that uses the `IronPython` library."},{"content":"<bpt id=\"p1\">[</bpt>Authoring a Composite Control with Visual C#<ept id=\"p1\">](https://msdn.microsoft.com/library/a6h7e207.aspx)</ept>","pos":[2174,2270],"source":"[Authoring a Composite Control with Visual C#](https://msdn.microsoft.com/library/a6h7e207.aspx)"},{"content":"Demonstrates creating a simple composite control and extending its functionality through inheritance.","pos":[2274,2375]},{"content":"<bpt id=\"p1\">[</bpt>Creating a Windows Forms Control that Takes Advantage of Visual Studio Design-Time Features<ept id=\"p1\">](https://msdn.microsoft.com/library/35ea88wb.aspx)</ept>","pos":[2382,2525],"source":"[Creating a Windows Forms Control that Takes Advantage of Visual Studio Design-Time Features](https://msdn.microsoft.com/library/35ea88wb.aspx)"},{"content":"Illustrates how to create a custom designer for a custom control.","pos":[2529,2594]},{"content":"<bpt id=\"p1\">[</bpt>Inheriting from a Windows Forms Control with Visual C#<ept id=\"p1\">](https://msdn.microsoft.com/library/5h0k2e6x.aspx)</ept>","pos":[2601,2707],"source":"[Inheriting from a Windows Forms Control with Visual C#](https://msdn.microsoft.com/library/5h0k2e6x.aspx)"},{"content":"Demonstrates creating a simple inherited button control.","pos":[2711,2767]},{"content":"This button inherits functionality from the standard Windows Forms button and exposes a custom member.","pos":[2768,2870]},{"content":"<bpt id=\"p1\">[</bpt>Debugging Custom Windows Forms Controls at Design Time<ept id=\"p1\">](https://msdn.microsoft.com/library/5ytx0z24.aspx)</ept>","pos":[2877,2983],"source":"[Debugging Custom Windows Forms Controls at Design Time](https://msdn.microsoft.com/library/5ytx0z24.aspx)"},{"content":"Describes how to debug the design-time behavior of your custom control.","pos":[2987,3058]},{"content":"<bpt id=\"p1\">[</bpt>Performing Common Tasks Using Smart Tags on Windows Forms Controls<ept id=\"p1\">](https://msdn.microsoft.com/library/xhz359sc.aspx)</ept>","pos":[3061,3179],"source":"[Performing Common Tasks Using Smart Tags on Windows Forms Controls](https://msdn.microsoft.com/library/xhz359sc.aspx)"},{"content":"Demonstrates some of the commonly performed tasks such as adding or removing a tab on a <ph id=\"ph1\">`TabControl`</ph>, docking a control to its parent, and changing the orientation of a <ph id=\"ph2\">`SplitContainer`</ph> control.","pos":[3183,3377],"source":"Demonstrates some of the commonly performed tasks such as adding or removing a tab on a `TabControl`, docking a control to its parent, and changing the orientation of a `SplitContainer` control."},{"content":"<bpt id=\"p1\">[</bpt>Writing Queries in C# (LINQ)<ept id=\"p1\">](../csharp/programming-guide/concepts/linq/walkthrough-writing-queries-linq.md)</ept>","pos":[3384,3493],"source":"[Writing Queries in C# (LINQ)](../csharp/programming-guide/concepts/linq/walkthrough-writing-queries-linq.md)"},{"content":"Demonstrates the C# language features that are used to write <ph id=\"ph1\">[!INCLUDE[vbteclinq](../csharp/includes/vbteclinq_md.md)]</ph> query expressions.","pos":[3497,3634],"source":"Demonstrates the C# language features that are used to write [!INCLUDE[vbteclinq](../csharp/includes/vbteclinq_md.md)] query expressions."},{"content":"<bpt id=\"p1\">[</bpt>Manipulating Data (C#) (LINQ to SQL)<ept id=\"p1\">](https://msdn.microsoft.com/library/bb386927.aspx)</ept>","pos":[3641,3729],"source":"[Manipulating Data (C#) (LINQ to SQL)](https://msdn.microsoft.com/library/bb386927.aspx)"},{"content":"Describes a <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../csharp/includes/vbtecdlinq_md.md)]</ph> scenario for adding, modifying, and deleting data in a database.","pos":[3733,3869],"source":"Describes a [!INCLUDE[vbtecdlinq](../csharp/includes/vbtecdlinq_md.md)] scenario for adding, modifying, and deleting data in a database."},{"content":"<bpt id=\"p1\">[</bpt>Simple Object Model and Query (C#) (LINQ to SQL)<ept id=\"p1\">](https://msdn.microsoft.com/library/bb386940.aspx)</ept>","pos":[3876,3976],"source":"[Simple Object Model and Query (C#) (LINQ to SQL)](https://msdn.microsoft.com/library/bb386940.aspx)"},{"content":"Demonstrates how to create an entity class and a simple query to filter the entity class.","pos":[3980,4069]},{"content":"<bpt id=\"p1\">[</bpt>Using Only Stored Procedures (C#) (LINQ to SQL)<ept id=\"p1\">](https://msdn.microsoft.com/library/bb399407.aspx)</ept>","pos":[4076,4175],"source":"[Using Only Stored Procedures (C#) (LINQ to SQL)](https://msdn.microsoft.com/library/bb399407.aspx)"},{"content":"Demonstrates how to use LINQ to SQL to access data by executing only stored procedures.","pos":[4179,4266]},{"content":"<bpt id=\"p1\">[</bpt>Querying Across Relationships (C#) (LINQ to SQL)<ept id=\"p1\">](https://msdn.microsoft.com/library/bb386951.aspx)</ept>","pos":[4273,4373],"source":"[Querying Across Relationships (C#) (LINQ to SQL)](https://msdn.microsoft.com/library/bb386951.aspx)"},{"content":"Demonstrates the use of <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../csharp/includes/vbtecdlinq_md.md)]</ph> associations to represent foreign-key relationships in a database.","pos":[4377,4527],"source":"Demonstrates the use of [!INCLUDE[vbtecdlinq](../csharp/includes/vbtecdlinq_md.md)] associations to represent foreign-key relationships in a database."},{"content":"<bpt id=\"p1\">[</bpt>Writing a Visualizer in C#<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/debugger/walkthrough-writing-a-visualizer-in-csharp)</ept>","pos":[4532,4653],"source":"[Writing a Visualizer in C#](https://docs.microsoft.com/visualstudio/debugger/walkthrough-writing-a-visualizer-in-csharp)"},{"content":"Shows how to write a simple visualizer by using C#.","pos":[4657,4708]},{"pos":[4717,4733],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Deployment Samples and Walkthroughs<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/deployment/clickonce-deployment-samples-and-walkthroughs)</ept>","pos":[4737,4872],"source":"[Deployment Samples and Walkthroughs](https://docs.microsoft.com/visualstudio/deployment/clickonce-deployment-samples-and-walkthroughs)"},{"content":"Provides step-by-step examples of common deployment scenarios.","pos":[4876,4938]},{"pos":[4947,4955],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[4959,5020],"source":"[C# Programming Guide](../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Visual Studio Samples<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/ide/visual-studio-samples)</ept>","pos":[5024,5114],"source":"[Visual Studio Samples](https://docs.microsoft.com/visualstudio/ide/visual-studio-samples)"}]}