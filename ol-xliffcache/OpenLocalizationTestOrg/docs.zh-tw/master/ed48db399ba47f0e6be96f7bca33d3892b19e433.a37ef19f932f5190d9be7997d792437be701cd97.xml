{"content":"---\ntitle: \"Walkthrough: Creating New WPF Content on Windows Forms at Design Time\"\nms.date: 08/18/2018\nhelpviewer_keywords:\n  - \"interoperability [Windows Forms], WPF and Windows Forms\"\n  - \"WPF content [Windows Forms], hosting in Windows Forms\"\n  - \"hosting WPF content in Windows Forms\"\n  - \"ElementHost control\"\n  - \"WPF user control [Windows Forms], hosting in Windows Forms\"\nms.assetid: 2e92d8e8-f0e4-4df7-9f07-2acf35cd798c\n---\n# Walkthrough: Creating New WPF Content on Windows Forms at Design Time\n\nThis topic shows you how to create a Windows Presentation Foundation (WPF) control for use in your Windows Forms-based applications.\n\nIn this walkthrough, you perform the following tasks:\n\n- Create the project.\n\n- Create a new WPF control.\n\n- Add the new WPF control to a Windows Form. The WPF control is hosted in an <xref:System.Windows.Forms.Integration.ElementHost> control.\n\n## Prerequisites\n\nYou need the following components to complete this walkthrough:\n\n- Visual Studio 2017\n\n## Creating the Project\n\nThe first step is to create the Windows Forms project. Open Visual Studio and create a new **Windows Forms App (.NET Framework)** project in Visual Basic or Visual C# named `HostingWpf`.\n\n> [!NOTE]\n> When hosting WPF content, only C# and Visual Basic projects are supported.\n\n## Creating a New WPF Control\n\nCreating a new WPF control and adding it to your project is as easy as adding any other item to your project. The Windows Forms Designer works with a particular kind of control named *composite control*, or *user control*. For more information about WPF user controls, see <xref:System.Windows.Controls.UserControl>.\n\n> [!NOTE]\n> The <xref:System.Windows.Controls.UserControl?displayProperty=nameWithType> type for WPF is distinct from the user control type provided by Windows Forms, which is also named <xref:System.Windows.Forms.UserControl?displayProperty=nameWithType>.\n\n### To create a new WPF control\n\n1. In **Solution Explorer**, add a new **WPF User Control Library (.NET Framework)** project to the solution. Use the default name for the control library, `WpfControlLibrary1`. The default control name is `UserControl1.xaml`.\n\n     Adding the new control has the following effects:\n\n    - File UserControl1.xaml is added.\n\n    - Either file UserControl1.xaml.cs or UserControl1.xaml.vb is added. This file contains the code-behind for event handlers and other implementation.\n\n    - References to WPF assemblies are added.\n\n    - File UserControl1.xaml opens in the [!INCLUDE[wpfdesigner_current_long](../../../../includes/wpfdesigner-current-long-md.md)].\n\n2. In Design view, make sure that `UserControl1` is selected. For more information, see [How to: Select and Move Elements on the Design Surface](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb514527(v=vs.100)).\n\n3. In the **Properties** window, set the value of the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties to **200**.\n\n4. From the **Toolbox**, drag a <xref:System.Windows.Controls.TextBox?displayProperty=nameWithType> control onto the design surface.\n\n5. In the **Properties** window, set the value of the <xref:System.Windows.Controls.TextBox.Text%2A> property to **Hosted Content**.\n\n    > [!NOTE]\n    > In general, you should host more sophisticated WPF content. The <xref:System.Windows.Controls.TextBox?displayProperty=nameWithType> control is used here for illustrative purposes only.\n\n6. Build the project.\n\n## Adding a WPF Control to a Windows Form\n\nYour new WPF control is ready for use on the form. Windows Forms uses the <xref:System.Windows.Forms.Integration.ElementHost> control to host WPF content.\n\n### To add a WPF control to a Windows Form\n\n1. Open `Form1` in the Windows Forms Designer.\n\n2. In the **Toolbox**, find the tab labeled **WPFUserControlLibrary WPF User Controls**.\n\n3. Drag an instance of `UserControl1` onto the form.\n\n    - An <xref:System.Windows.Forms.Integration.ElementHost> control is created automatically on the form to host the WPF control.\n\n    - The <xref:System.Windows.Forms.Integration.ElementHost> control is named `elementHost1` and in the **Properties** window, you can see its <xref:System.Windows.Forms.Integration.ElementHost.Child%2A> property is set to **UserControl1**.\n\n    - References to WPF assemblies are added to the project.\n\n    - The `elementHost1` control has a smart tag panel that shows the available hosting options.\n\n4. In the **ElementHost Tasks** smart tag panel, select **Dock in parent container**.\n\n5. Press **F5** to build and run the application.\n\n## Next Steps\n\nWindows Forms and WPF are different technologies, but they are designed to interoperate closely. To provide richer appearance and behavior in your applications, try the following:\n\n- Host a Windows Forms control in a WPF page. For more information, see [Walkthrough: Hosting a Windows Forms Control in WPF](../../wpf/advanced/walkthrough-hosting-a-windows-forms-control-in-wpf.md).\n\n- Apply Windows Forms visual styles to your WPF content. For more information, see [How to: Enable Visual Styles in a Hybrid Application](../../wpf/advanced/how-to-enable-visual-styles-in-a-hybrid-application.md).\n\n- Change the style of your WPF content. For more information, see [Walkthrough: Styling WPF Content](walkthrough-styling-wpf-content.md).\n\n## See also\n\n- <xref:System.Windows.Forms.Integration.ElementHost>\n- <xref:System.Windows.Forms.Integration.WindowsFormsHost>\n- [Migration and Interoperability](../../wpf/advanced/migration-and-interoperability.md)\n- [Using WPF Controls](using-wpf-controls.md)\n- [Design XAML in Visual Studio](/visualstudio/designers/designing-xaml-in-visual-studio)\n","nodes":[{"pos":[4,428],"embed":true,"restype":"x-metadata","content":"title: \"Walkthrough: Creating New WPF Content on Windows Forms at Design Time\"\nms.date: 08/18/2018\nhelpviewer_keywords:\n  - \"interoperability [Windows Forms], WPF and Windows Forms\"\n  - \"WPF content [Windows Forms], hosting in Windows Forms\"\n  - \"hosting WPF content in Windows Forms\"\n  - \"ElementHost control\"\n  - \"WPF user control [Windows Forms], hosting in Windows Forms\"\nms.assetid: 2e92d8e8-f0e4-4df7-9f07-2acf35cd798c","nodes":[{"content":"Walkthrough: Creating New WPF Content on Windows Forms at Design Time","nodes":[{"pos":[0,69],"content":"Walkthrough: Creating New WPF Content on Windows Forms at Design Time","nodes":[{"content":"Walkthrough: Creating New WPF Content on Windows Forms at Design Time","pos":[0,69]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[435,504],"content":"Walkthrough: Creating New WPF Content on Windows Forms at Design Time","linkify":"Walkthrough: Creating New WPF Content on Windows Forms at Design Time","nodes":[{"content":"Walkthrough: Creating New WPF Content on Windows Forms at Design Time","pos":[0,69]}]},{"content":"This topic shows you how to create a Windows Presentation Foundation (WPF) control for use in your Windows Forms-based applications.","pos":[506,638]},{"content":"In this walkthrough, you perform the following tasks:","pos":[640,693]},{"content":"Create the project.","pos":[697,716]},{"content":"Create a new WPF control.","pos":[720,745]},{"content":"Add the new WPF control to a Windows Form.","pos":[749,791]},{"content":"The WPF control is hosted in an <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control.","pos":[792,884],"source":" The WPF control is hosted in an <xref:System.Windows.Forms.Integration.ElementHost> control."},{"pos":[889,902],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"You need the following components to complete this walkthrough:","pos":[904,967]},{"content":"Visual Studio 2017","pos":[971,989]},{"pos":[994,1014],"content":"Creating the Project","linkify":"Creating the Project","nodes":[{"content":"Creating the Project","pos":[0,20]}]},{"content":"The first step is to create the Windows Forms project.","pos":[1016,1070]},{"content":"Open Visual Studio and create a new <bpt id=\"p1\">**</bpt>Windows Forms App (.NET Framework)<ept id=\"p1\">**</ept> project in Visual Basic or Visual C# named <ph id=\"ph1\">`HostingWpf`</ph>.","pos":[1071,1202],"source":" Open Visual Studio and create a new **Windows Forms App (.NET Framework)** project in Visual Basic or Visual C# named `HostingWpf`."},{"pos":[1206,1290],"content":"[!NOTE]\nWhen hosting WPF content, only C# and Visual Basic projects are supported.","leadings":["","> "],"nodes":[{"content":"When hosting WPF content, only C# and Visual Basic projects are supported.","pos":[8,82]}]},{"pos":[1295,1321],"content":"Creating a New WPF Control","linkify":"Creating a New WPF Control","nodes":[{"content":"Creating a New WPF Control","pos":[0,26]}]},{"content":"Creating a new WPF control and adding it to your project is as easy as adding any other item to your project.","pos":[1323,1432]},{"content":"The Windows Forms Designer works with a particular kind of control named <bpt id=\"p1\">*</bpt>composite control<ept id=\"p1\">*</ept>, or <bpt id=\"p2\">*</bpt>user control<ept id=\"p2\">*</ept>.","pos":[1433,1545],"source":" The Windows Forms Designer works with a particular kind of control named *composite control*, or *user control*."},{"content":"For more information about WPF user controls, see <ph id=\"ph1\">&lt;xref:System.Windows.Controls.UserControl&gt;</ph>.","pos":[1546,1639],"source":" For more information about WPF user controls, see <xref:System.Windows.Controls.UserControl>."},{"pos":[1643,1897],"content":"[!NOTE]\nThe <xref:System.Windows.Controls.UserControl?displayProperty=nameWithType> type for WPF is distinct from the user control type provided by Windows Forms, which is also named <xref:System.Windows.Forms.UserControl?displayProperty=nameWithType>.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.UserControl?displayProperty=nameWithType&gt;</ph> type for WPF is distinct from the user control type provided by Windows Forms, which is also named <ph id=\"ph2\">&lt;xref:System.Windows.Forms.UserControl?displayProperty=nameWithType&gt;</ph>.","pos":[8,252],"source":"The <xref:System.Windows.Controls.UserControl?displayProperty=nameWithType> type for WPF is distinct from the user control type provided by Windows Forms, which is also named <xref:System.Windows.Forms.UserControl?displayProperty=nameWithType>."}]},{"pos":[1903,1930],"content":"To create a new WPF control","linkify":"To create a new WPF control","nodes":[{"content":"To create a new WPF control","pos":[0,27]}]},{"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, add a new <bpt id=\"p2\">**</bpt>WPF User Control Library (.NET Framework)<ept id=\"p2\">**</ept> project to the solution.","pos":[1935,2041],"source":"In **Solution Explorer**, add a new **WPF User Control Library (.NET Framework)** project to the solution."},{"content":"Use the default name for the control library, <ph id=\"ph1\">`WpfControlLibrary1`</ph>.","pos":[2042,2109],"source":" Use the default name for the control library, `WpfControlLibrary1`."},{"content":"The default control name is <ph id=\"ph1\">`UserControl1.xaml`</ph>.","pos":[2110,2158],"source":" The default control name is `UserControl1.xaml`."},{"content":"Adding the new control has the following effects:","pos":[2165,2214]},{"content":"File UserControl1.xaml is added.","pos":[2222,2254]},{"content":"Either file UserControl1.xaml.cs or UserControl1.xaml.vb is added.","pos":[2262,2328]},{"content":"This file contains the code-behind for event handlers and other implementation.","pos":[2329,2408]},{"content":"References to WPF assemblies are added.","pos":[2416,2455]},{"pos":[2463,2589],"content":"File UserControl1.xaml opens in the <ph id=\"ph1\">[!INCLUDE[wpfdesigner_current_long](../../../../includes/wpfdesigner-current-long-md.md)]</ph>.","source":"File UserControl1.xaml opens in the [!INCLUDE[wpfdesigner_current_long](../../../../includes/wpfdesigner-current-long-md.md)]."},{"content":"In Design view, make sure that <ph id=\"ph1\">`UserControl1`</ph> is selected.","pos":[2594,2652],"source":"In Design view, make sure that `UserControl1` is selected."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Select and Move Elements on the Design Surface<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb514527(v=vs.100))</ept>.","pos":[2653,2833],"source":" For more information, see [How to: Select and Move Elements on the Design Surface](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb514527(v=vs.100))."},{"pos":[2838,3012],"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, set the value of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> properties to <bpt id=\"p2\">**</bpt>200<ept id=\"p2\">**</ept>.","source":"In the **Properties** window, set the value of the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties to **200**."},{"pos":[3017,3146],"content":"From the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept>, drag a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox?displayProperty=nameWithType&gt;</ph> control onto the design surface.","source":"From the **Toolbox**, drag a <xref:System.Windows.Controls.TextBox?displayProperty=nameWithType> control onto the design surface."},{"pos":[3151,3280],"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, set the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property to <bpt id=\"p2\">**</bpt>Hosted Content<ept id=\"p2\">**</ept>.","source":"In the **Properties** window, set the value of the <xref:System.Windows.Controls.TextBox.Text%2A> property to **Hosted Content**."},{"pos":[3288,3486],"content":"[!NOTE]\nIn general, you should host more sophisticated WPF content. The <xref:System.Windows.Controls.TextBox?displayProperty=nameWithType> control is used here for illustrative purposes only.","leadings":["","    > "],"nodes":[{"content":"In general, you should host more sophisticated WPF content. The <xref:System.Windows.Controls.TextBox?displayProperty=nameWithType> control is used here for illustrative purposes only.","pos":[8,192],"nodes":[{"content":"In general, you should host more sophisticated WPF content.","pos":[0,59]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox?displayProperty=nameWithType&gt;</ph> control is used here for illustrative purposes only.","pos":[60,184],"source":" The <xref:System.Windows.Controls.TextBox?displayProperty=nameWithType> control is used here for illustrative purposes only."}]}]},{"content":"Build the project.","pos":[3491,3509]},{"pos":[3514,3552],"content":"Adding a WPF Control to a Windows Form","linkify":"Adding a WPF Control to a Windows Form","nodes":[{"content":"Adding a WPF Control to a Windows Form","pos":[0,38]}]},{"content":"Your new WPF control is ready for use on the form.","pos":[3554,3604]},{"content":"Windows Forms uses the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control to host WPF content.","pos":[3605,3708],"source":" Windows Forms uses the <xref:System.Windows.Forms.Integration.ElementHost> control to host WPF content."},{"pos":[3714,3752],"content":"To add a WPF control to a Windows Form","linkify":"To add a WPF control to a Windows Form","nodes":[{"content":"To add a WPF control to a Windows Form","pos":[0,38]}]},{"pos":[3757,3800],"content":"Open <ph id=\"ph1\">`Form1`</ph> in the Windows Forms Designer.","source":"Open `Form1` in the Windows Forms Designer."},{"pos":[3805,3890],"content":"In the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept>, find the tab labeled <bpt id=\"p2\">**</bpt>WPFUserControlLibrary WPF User Controls<ept id=\"p2\">**</ept>.","source":"In the **Toolbox**, find the tab labeled **WPFUserControlLibrary WPF User Controls**."},{"pos":[3895,3944],"content":"Drag an instance of <ph id=\"ph1\">`UserControl1`</ph> onto the form.","source":"Drag an instance of `UserControl1` onto the form."},{"pos":[3952,4076],"content":"An <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control is created automatically on the form to host the WPF control.","source":"An <xref:System.Windows.Forms.Integration.ElementHost> control is created automatically on the form to host the WPF control."},{"pos":[4084,4319],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control is named <ph id=\"ph2\">`elementHost1`</ph> and in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, you can see its <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Integration.ElementHost.Child%2A&gt;</ph> property is set to <bpt id=\"p2\">**</bpt>UserControl1<ept id=\"p2\">**</ept>.","source":"The <xref:System.Windows.Forms.Integration.ElementHost> control is named `elementHost1` and in the **Properties** window, you can see its <xref:System.Windows.Forms.Integration.ElementHost.Child%2A> property is set to **UserControl1**."},{"content":"References to WPF assemblies are added to the project.","pos":[4327,4381]},{"pos":[4389,4479],"content":"The <ph id=\"ph1\">`elementHost1`</ph> control has a smart tag panel that shows the available hosting options.","source":"The `elementHost1` control has a smart tag panel that shows the available hosting options."},{"pos":[4484,4566],"content":"In the <bpt id=\"p1\">**</bpt>ElementHost Tasks<ept id=\"p1\">**</ept> smart tag panel, select <bpt id=\"p2\">**</bpt>Dock in parent container<ept id=\"p2\">**</ept>.","source":"In the **ElementHost Tasks** smart tag panel, select **Dock in parent container**."},{"pos":[4571,4617],"content":"Press <bpt id=\"p1\">**</bpt>F5<ept id=\"p1\">**</ept> to build and run the application.","source":"Press **F5** to build and run the application."},{"pos":[4622,4632],"content":"Next Steps","linkify":"Next Steps","nodes":[{"content":"Next Steps","pos":[0,10]}]},{"content":"Windows Forms and WPF are different technologies, but they are designed to interoperate closely.","pos":[4634,4730]},{"content":"To provide richer appearance and behavior in your applications, try the following:","pos":[4731,4813]},{"content":"Host a Windows Forms control in a WPF page.","pos":[4817,4860]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Hosting a Windows Forms Control in WPF<ept id=\"p1\">](../../wpf/advanced/walkthrough-hosting-a-windows-forms-control-in-wpf.md)</ept>.","pos":[4861,5015],"source":" For more information, see [Walkthrough: Hosting a Windows Forms Control in WPF](../../wpf/advanced/walkthrough-hosting-a-windows-forms-control-in-wpf.md)."},{"content":"Apply Windows Forms visual styles to your WPF content.","pos":[5019,5073]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Enable Visual Styles in a Hybrid Application<ept id=\"p1\">](../../wpf/advanced/how-to-enable-visual-styles-in-a-hybrid-application.md)</ept>.","pos":[5074,5230],"source":" For more information, see [How to: Enable Visual Styles in a Hybrid Application](../../wpf/advanced/how-to-enable-visual-styles-in-a-hybrid-application.md)."},{"content":"Change the style of your WPF content.","pos":[5234,5271]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Styling WPF Content<ept id=\"p1\">](walkthrough-styling-wpf-content.md)</ept>.","pos":[5272,5369],"source":" For more information, see [Walkthrough: Styling WPF Content](walkthrough-styling-wpf-content.md)."},{"pos":[5374,5382],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5499,5585],"content":"<bpt id=\"p1\">[</bpt>Migration and Interoperability<ept id=\"p1\">](../../wpf/advanced/migration-and-interoperability.md)</ept>","source":"[Migration and Interoperability](../../wpf/advanced/migration-and-interoperability.md)"},{"pos":[5588,5631],"content":"<bpt id=\"p1\">[</bpt>Using WPF Controls<ept id=\"p1\">](using-wpf-controls.md)</ept>","source":"[Using WPF Controls](using-wpf-controls.md)"},{"pos":[5634,5721],"content":"<bpt id=\"p1\">[</bpt>Design XAML in Visual Studio<ept id=\"p1\">](/visualstudio/designers/designing-xaml-in-visual-studio)</ept>","source":"[Design XAML in Visual Studio](/visualstudio/designers/designing-xaml-in-visual-studio)"}]}