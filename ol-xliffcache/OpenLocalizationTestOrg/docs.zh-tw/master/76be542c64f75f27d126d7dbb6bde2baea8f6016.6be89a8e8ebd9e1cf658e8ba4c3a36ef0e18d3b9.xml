{"content":"---\ntitle: \"EXISTS (Entity SQL)\"\nms.date: \"03/30/2017\"\nms.assetid: d28ead43-4afb-4bdc-af64-efd2e05005d7\n---\n# EXISTS (Entity SQL)\nDetermines if a collection is empty.  \n  \n## Syntax  \n  \n```  \n[NOT] EXISTS ( expression )  \n```  \n  \n## Arguments  \n `expression`  \n Any valid expression that returns a collection.  \n  \n NOT  \n Specifies that the result of EXISTS be negated.  \n  \n## Return Value  \n `true` if the collection is not empty; otherwise, `false`.  \n  \n## Remarks  \n EXISTS is one of the [!INCLUDE[esql](../../../../../../includes/esql-md.md)] set operators. All [!INCLUDE[esql](../../../../../../includes/esql-md.md)] set operators are evaluated from left to right. For precedence information for the [!INCLUDE[esql](../../../../../../includes/esql-md.md)] set operators, see [EXCEPT](../../../../../../docs/framework/data/adonet/ef/language-reference/except-entity-sql.md).  \n  \n## Example  \n The following Entity SQL query uses the EXISTS operator to determine whether the collection is empty. The query is based on the AdventureWorks Sales Model. To compile and run this query, follow these steps:  \n  \n1.  Follow the procedure in [How to: Execute a Query that Returns StructuralType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md).  \n  \n2.  Pass the following query as an argument to the `ExecuteStructuralTypeQuery` method:  \n  \n [!code-csharp[DP EntityServices Concepts 2#EXISTS](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts 2/cs/entitysql.cs#exists)]  \n  \n## See also\n\n- [Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)\n","nodes":[{"pos":[4,103],"embed":true,"restype":"x-metadata","content":"title: \"EXISTS (Entity SQL)\"\nms.date: \"03/30/2017\"\nms.assetid: d28ead43-4afb-4bdc-af64-efd2e05005d7","nodes":[{"content":"EXISTS (Entity SQL)","nodes":[{"pos":[0,19],"content":"EXISTS (Entity SQL)","nodes":[{"content":"EXISTS (Entity SQL)","pos":[0,19]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[110,129],"content":"EXISTS (Entity SQL)","linkify":"EXISTS (Entity SQL)","nodes":[{"content":"EXISTS (Entity SQL)","pos":[0,19]}]},{"content":"Determines if a collection is empty.","pos":[130,166]},{"pos":[175,181],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[235,244],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"Any valid expression that returns a collection.","pos":[264,311]},{"content":"NOT","pos":[318,321]},{"content":"Specifies that the result of EXISTS be negated.","pos":[325,372]},{"pos":[381,393],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[397,455],"content":"<ph id=\"ph1\">`true`</ph> if the collection is not empty; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the collection is not empty; otherwise, `false`."},{"pos":[464,471],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"EXISTS is one of the <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> set operators.","pos":[475,566],"source":"EXISTS is one of the [!INCLUDE[esql](../../../../../../includes/esql-md.md)] set operators."},{"content":"All <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> set operators are evaluated from left to right.","pos":[567,674],"source":" All [!INCLUDE[esql](../../../../../../includes/esql-md.md)] set operators are evaluated from left to right."},{"content":"For precedence information for the <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> set operators, see <bpt id=\"p1\">[</bpt>EXCEPT<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/except-entity-sql.md)</ept>.","pos":[675,883],"source":" For precedence information for the [!INCLUDE[esql](../../../../../../includes/esql-md.md)] set operators, see [EXCEPT](../../../../../../docs/framework/data/adonet/ef/language-reference/except-entity-sql.md)."},{"pos":[892,899],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following Entity SQL query uses the EXISTS operator to determine whether the collection is empty.","pos":[903,1004]},{"content":"The query is based on the AdventureWorks Sales Model.","pos":[1005,1058]},{"content":"To compile and run this query, follow these steps:","pos":[1059,1109]},{"pos":[1119,1316],"content":"Follow the procedure in <bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns StructuralType Results<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)</ept>.","source":"Follow the procedure in [How to: Execute a Query that Returns StructuralType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)."},{"pos":[1326,1409],"content":"Pass the following query as an argument to the <ph id=\"ph1\">`ExecuteStructuralTypeQuery`</ph> method:","source":"Pass the following query as an argument to the `ExecuteStructuralTypeQuery` method:"},{"pos":[1588,1596],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1600,1714],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept>","source":"[Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)"}]}