<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="program-structure-and-code-conventions.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b79e339ebe81a7228a02837e5c0c23c80a8132e9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\program-structure\program-structure-and-code-conventions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf35f8c5d4d49324d93208b11399dfd9ffec80cf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ad6b939ca4092d98341397ec2cf60b824ed218c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Program Structure and Code Conventions (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Program Structure and Code Conventions (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section introduces the typical Visual Basic program structure, provides a simple Visual Basic program, "Hello, World", and discusses Visual Basic code conventions.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Code conventions are suggestions that focus not on a program's logic but on its physical structure and appearance.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Following them makes your code easier to read, understand, and maintain.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Code conventions can include, among others:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Standardized formats for labeling and commenting code.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Guidelines for spacing, formatting, and indenting code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Naming conventions for objects, variables, and procedures.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following topics present a set of programming guidelines for Visual Basic programs, along with examples of good usage.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Structure of a Visual Basic Program<ept id="p1">](../../../visual-basic/programming-guide/program-structure/structure-of-a-visual-basic-program.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Provides an overview of the elements that make up a Visual Basic program.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Main Procedure in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/program-structure/main-procedure.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Discusses the procedure that serves as the starting point and overall control for your application.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>References and the Imports Statement<ept id="p1">](../../../visual-basic/programming-guide/program-structure/references-and-the-imports-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Discusses how to reference objects in other assemblies.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Namespaces in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Describes how namespaces organize objects within assemblies.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Basic Naming Conventions<ept id="p1">](../../../visual-basic/programming-guide/program-structure/naming-conventions.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Includes general guidelines for naming procedures, constants, variables, arguments, and objects.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Basic Coding Conventions<ept id="p1">](../../../visual-basic/programming-guide/program-structure/coding-conventions.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Reviews the guidelines used in developing the samples in this documentation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Conditional Compilation<ept id="p1">](../../../visual-basic/programming-guide/program-structure/conditional-compilation.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Describes how to compile particular blocks of code selectively while directing the compiler to ignore others.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Break and Combine Statements in Code<ept id="p1">](../../../visual-basic/programming-guide/program-structure/how-to-break-and-combine-statements-in-code.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Shows how to divide long statements into multiple lines and combine short statements on one line.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Collapse and Hide Sections of Code<ept id="p1">](../../../visual-basic/programming-guide/program-structure/how-to-collapse-and-hide-sections-of-code.md)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Shows how to collapse and hide sections of code in the Visual Basic code editor.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Label Statements<ept id="p1">](../../../visual-basic/programming-guide/program-structure/how-to-label-statements.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Shows how to mark a line of code to identify it for use with statements such as <ph id="ph1">`On Error Goto`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Special Characters in Code<ept id="p1">](../../../visual-basic/programming-guide/program-structure/special-characters-in-code.md)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Shows how and where to use non-numeric and non-alphabetic characters.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Comments in Code<ept id="p1">](../../../visual-basic/programming-guide/program-structure/comments-in-code.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Discusses how to add descriptive comments to your code.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Keywords as Element Names in Code<ept id="p1">](../../../visual-basic/programming-guide/program-structure/keywords-as-element-names-in-code.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Describes how to use brackets (<ph id="ph1">`[]`</ph>) to delimit variable names that are also Visual Basic keywords.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Me, My, MyBase, and MyClass<ept id="p1">](../../../visual-basic/programming-guide/program-structure/me-my-mybase-and-myclass.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Describes various ways to refer to elements of a Visual Basic program.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Basic Limitations<ept id="p1">](../../../visual-basic/programming-guide/program-structure/limitations.md)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Discusses the removal of known coding limits within Visual Basic.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Related Sections</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Typographic and Code Conventions<ept id="p1">](../../../visual-basic/language-reference/typographic-and-code-conventions.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Provides standard coding conventions for Visual Basic.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Writing Code<ept id="p1">](/visualstudio/ide/writing-code-in-the-code-and-text-editor)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Describes features that make it easier for you to write and manage your code.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>