{"content":"---\ntitle: .NET Core Command-Line Interface (CLI) Tools\ndescription: An overview of the .NET Core Command-Line Interface (CLI) tools and features.\nms.date: 08/14/2017\nms.custom: \"seodec18\"\n---\n# .NET Core command-line interface (CLI) tools\n\nThe .NET Core command-line interface (CLI) is a new cross-platform toolchain for developing .NET applications. The CLI is a foundation upon which higher-level tools, such as Integrated Development Environments (IDEs), editors, and build orchestrators, can rest.\n\n## Installation\n\nEither use the native installers or use the installation shell scripts:\n\n* The native installers are primarily used on developer's machines and use each supported platform's native install mechanism, for instance, DEB packages on Ubuntu or MSI bundles on Windows. These installers install and configure the environment for immediate use by the developer but require administrative privileges on the machine. You can view the installation instructions in the [.NET Core installation guide](https://aka.ms/dotnetcoregs).\n* Shell scripts are primarily used for setting up build servers or when you wish to install the tools without administrative privileges. Install scripts don't install prerequisites on the machine, which must be installed manually. For more information, see the [install script reference topic](dotnet-install-script.md). For information on how to set up CLI on your continuous integration (CI) build server, see [Using .NET Core SDK and tools in Continuous Integration (CI)](using-ci-with-cli.md).\n\nBy default, the CLI installs in a side-by-side (SxS) manner, so multiple versions of the CLI tools can coexist on a single machine. Determining which version is used on a machine where multiple versions are installed is explained in more detail in the [Driver](#driver) section.\n\n## CLI commands\n\nThe following commands are installed by default:\n\n# [.NET Core 2.x](#tab/netcore2x)\n\n**Basic commands**\n\n* [new](dotnet-new.md)\n* [restore](dotnet-restore.md)\n* [build](dotnet-build.md)\n* [publish](dotnet-publish.md)\n* [run](dotnet-run.md)\n* [test](dotnet-test.md)\n* [vstest](dotnet-vstest.md)\n* [pack](dotnet-pack.md)\n* [migrate](dotnet-migrate.md)\n* [clean](dotnet-clean.md)\n* [sln](dotnet-sln.md)\n* [help](dotnet-help.md)\n* [store](dotnet-store.md)\n\n**Project modification commands**\n\n* [add package](dotnet-add-package.md)\n* [add reference](dotnet-add-reference.md)\n* [remove package](dotnet-remove-package.md)\n* [remove reference](dotnet-remove-reference.md)\n* [list reference](dotnet-list-reference.md)\n\n**Advanced commands**\n\n* [nuget delete](dotnet-nuget-delete.md)\n* [nuget locals](dotnet-nuget-locals.md)\n* [nuget push](dotnet-nuget-push.md)\n* [msbuild](dotnet-msbuild.md)\n* [dotnet install script](dotnet-install-script.md)\n\n# [.NET Core 1.x](#tab/netcore1x)\n\n**Basic commands**\n\n* [new](dotnet-new.md)\n* [restore](dotnet-restore.md)\n* [build](dotnet-build.md)\n* [publish](dotnet-publish.md)\n* [run](dotnet-run.md)\n* [test](dotnet-test.md)\n* [vstest](dotnet-vstest.md)\n* [pack](dotnet-pack.md)\n* [migrate](dotnet-migrate.md)\n* [clean](dotnet-clean.md)\n* [sln](dotnet-sln.md)\n\n**Project modification commands**\n\n* [add package](dotnet-add-package.md)\n* [add reference](dotnet-add-reference.md)\n* [remove package](dotnet-remove-package.md)\n* [remove reference](dotnet-remove-reference.md)\n* [list reference](dotnet-list-reference.md)\n\n**Advanced commands**\n\n* [nuget delete](dotnet-nuget-delete.md)\n* [nuget locals](dotnet-nuget-locals.md)\n* [nuget push](dotnet-nuget-push.md)\n* [msbuild](dotnet-msbuild.md)\n* [dotnet install script](dotnet-install-script.md)\n\n---\n\nThe CLI adopts an extensibility model that allows you to specify additional tools for your projects. For more information, see the [.NET Core CLI extensibility model](extensibility.md) topic.\n\n## Command structure\n\nCLI command structure consists of [the driver (\"dotnet\")](#driver), [the command (or \"verb\")](#command-verb), and possibly command [arguments](#arguments) and [options](#options). You see this pattern in most CLI operations, such as creating a new console app and running it from the command line as the following commands show when executed from a directory named *my_app*:\n\n# [.NET Core 2.x](#tab/netcore2x)\n\n```console\ndotnet new console\ndotnet build --output /build_output\ndotnet /build_output/my_app.dll\n```\n\n# [.NET Core 1.x](#tab/netcore1x)\n\n```console\ndotnet new console\ndotnet restore\ndotnet build --output /build_output\ndotnet /build_output/my_app.dll\n```\n\n---\n\n### Driver\n\nThe driver is named [dotnet](dotnet.md) and has two responsibilities, either running a [framework-dependent app](../deploying/index.md) or executing a command. \n\nTo run a framework-dependent app, specify the app after the driver, for example, `dotnet /path/to/my_app.dll`. When executing the command from the folder where the app's DLL resides, simply execute `dotnet my_app.dll`. If you want to use a specific version of the .NET Core Runtime, use the `--fx-version <VERSION>` option (see the [dotnet command](dotnet.md) reference).\n\nWhen you supply a command to the driver, `dotnet.exe` starts the CLI command execution process. For example:\n\n```bash\n> dotnet build\n```\n\nFirst, the driver determines the version of the SDK to use. If there is no ['global.json'](global-json.md), the latest version of the SDK available is used. This might be either a preview or stable version, depending on what is latest on the machine.  Once the SDK version is determined, it executes the command.\n\n### Command (\"verb\")\n\nThe command (or \"verb\") is simply a command that performs an action. For example, `dotnet build` builds your code. `dotnet publish` publishes your code. The commands are implemented as a console application using a `dotnet {verb}` convention.\n\n### Arguments\n\nThe arguments you pass on the command line are the arguments to the command invoked. For example when you execute `dotnet publish my_app.csproj`, the `my_app.csproj` argument indicates the project to publish and is passed to the `publish` command.\n\n### Options\n\nThe options you pass on the command line are the options to the command invoked. For example when you execute `dotnet publish --output /build_output`, the `--output` option and its value are passed to the `publish` command.\n\n## Migration from project.json\n\nIf you used Preview 2 tooling to produce *project.json*-based projects, consult the [dotnet migrate](dotnet-migrate.md) topic for information on migrating your project to MSBuild/*.csproj* for use with release tooling. For .NET Core projects created prior to the release of Preview 2 tooling, either manually update the project following the guidance in [Migrating from DNX to .NET Core CLI (project.json)](../migration/from-dnx.md) and then use `dotnet migrate` or directly upgrade your projects.\n\n## See also\n\n- [dotnet/CLI GitHub Repository](https://github.com/dotnet/cli/)\n- [.NET Core installation guide](https://aka.ms/dotnetcoregs)\n","nodes":[{"pos":[4,188],"embed":true,"restype":"x-metadata","content":"title: .NET Core Command-Line Interface (CLI) Tools\ndescription: An overview of the .NET Core Command-Line Interface (CLI) tools and features.\nms.date: 08/14/2017\nms.custom: \"seodec18\"","nodes":[{"content":".NET Core Command-Line Interface (CLI) Tools","nodes":[{"pos":[0,44],"content":".NET Core Command-Line Interface (CLI) Tools","nodes":[{"content":".NET Core Command-Line Interface (CLI) Tools","pos":[0,44]}]}],"path":["title"],"nosxs":false},{"content":"An overview of the .NET Core Command-Line Interface (CLI) tools and features.","nodes":[{"pos":[0,77],"content":"An overview of the .NET Core Command-Line Interface (CLI) tools and features.","nodes":[{"content":"An overview of the .NET Core Command-Line Interface (CLI) tools and features.","pos":[0,77]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[195,239],"content":".NET Core command-line interface (CLI) tools","linkify":".NET Core command-line interface (CLI) tools","nodes":[{"content":".NET Core command-line interface (CLI) tools","pos":[0,44]}]},{"content":"The .NET Core command-line interface (CLI) is a new cross-platform toolchain for developing .NET applications.","pos":[241,351]},{"content":"The CLI is a foundation upon which higher-level tools, such as Integrated Development Environments (IDEs), editors, and build orchestrators, can rest.","pos":[352,502]},{"pos":[507,519],"content":"Installation","linkify":"Installation","nodes":[{"content":"Installation","pos":[0,12]}]},{"content":"Either use the native installers or use the installation shell scripts:","pos":[521,592]},{"content":"The native installers are primarily used on developer's machines and use each supported platform's native install mechanism, for instance, DEB packages on Ubuntu or MSI bundles on Windows.","pos":[596,784]},{"content":"These installers install and configure the environment for immediate use by the developer but require administrative privileges on the machine.","pos":[785,928]},{"content":"You can view the installation instructions in the <bpt id=\"p1\">[</bpt>.NET Core installation guide<ept id=\"p1\">](https://aka.ms/dotnetcoregs)</ept>.","pos":[929,1039],"source":" You can view the installation instructions in the [.NET Core installation guide](https://aka.ms/dotnetcoregs)."},{"content":"Shell scripts are primarily used for setting up build servers or when you wish to install the tools without administrative privileges.","pos":[1042,1176]},{"content":"Install scripts don't install prerequisites on the machine, which must be installed manually.","pos":[1177,1270]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>install script reference topic<ept id=\"p1\">](dotnet-install-script.md)</ept>.","pos":[1271,1360],"source":" For more information, see the [install script reference topic](dotnet-install-script.md)."},{"content":"For information on how to set up CLI on your continuous integration (CI) build server, see <bpt id=\"p1\">[</bpt>Using .NET Core SDK and tools in Continuous Integration (CI)<ept id=\"p1\">](using-ci-with-cli.md)</ept>.","pos":[1361,1537],"source":" For information on how to set up CLI on your continuous integration (CI) build server, see [Using .NET Core SDK and tools in Continuous Integration (CI)](using-ci-with-cli.md)."},{"content":"By default, the CLI installs in a side-by-side (SxS) manner, so multiple versions of the CLI tools can coexist on a single machine.","pos":[1539,1670]},{"content":"Determining which version is used on a machine where multiple versions are installed is explained in more detail in the <bpt id=\"p1\">[</bpt>Driver<ept id=\"p1\">](#driver)</ept> section.","pos":[1671,1817],"source":" Determining which version is used on a machine where multiple versions are installed is explained in more detail in the [Driver](#driver) section."},{"pos":[1822,1834],"content":"CLI commands","linkify":"CLI commands","nodes":[{"content":"CLI commands","pos":[0,12]}]},{"content":"The following commands are installed by default:","pos":[1836,1884]},{"pos":[1888,1919],"content":"<bpt id=\"p1\">[</bpt>.NET Core 2.x<ept id=\"p1\">](#tab/netcore2x)</ept>","linkify":"[.NET Core 2.x](#tab/netcore2x)","source":"[.NET Core 2.x](#tab/netcore2x)"},{"pos":[1921,1939],"content":"<bpt id=\"p1\">**</bpt>Basic commands<ept id=\"p1\">**</ept>","source":"**Basic commands**"},{"pos":[1943,1963],"content":"<bpt id=\"p1\">[</bpt>new<ept id=\"p1\">](dotnet-new.md)</ept>","source":"[new](dotnet-new.md)"},{"pos":[1966,1994],"content":"<bpt id=\"p1\">[</bpt>restore<ept id=\"p1\">](dotnet-restore.md)</ept>","source":"[restore](dotnet-restore.md)"},{"pos":[1997,2021],"content":"<bpt id=\"p1\">[</bpt>build<ept id=\"p1\">](dotnet-build.md)</ept>","source":"[build](dotnet-build.md)"},{"pos":[2024,2052],"content":"<bpt id=\"p1\">[</bpt>publish<ept id=\"p1\">](dotnet-publish.md)</ept>","source":"[publish](dotnet-publish.md)"},{"pos":[2055,2075],"content":"<bpt id=\"p1\">[</bpt>run<ept id=\"p1\">](dotnet-run.md)</ept>","source":"[run](dotnet-run.md)"},{"pos":[2078,2100],"content":"<bpt id=\"p1\">[</bpt>test<ept id=\"p1\">](dotnet-test.md)</ept>","source":"[test](dotnet-test.md)"},{"pos":[2103,2129],"content":"<bpt id=\"p1\">[</bpt>vstest<ept id=\"p1\">](dotnet-vstest.md)</ept>","source":"[vstest](dotnet-vstest.md)"},{"pos":[2132,2154],"content":"<bpt id=\"p1\">[</bpt>pack<ept id=\"p1\">](dotnet-pack.md)</ept>","source":"[pack](dotnet-pack.md)"},{"pos":[2157,2185],"content":"<bpt id=\"p1\">[</bpt>migrate<ept id=\"p1\">](dotnet-migrate.md)</ept>","source":"[migrate](dotnet-migrate.md)"},{"pos":[2188,2212],"content":"<bpt id=\"p1\">[</bpt>clean<ept id=\"p1\">](dotnet-clean.md)</ept>","source":"[clean](dotnet-clean.md)"},{"pos":[2215,2235],"content":"<bpt id=\"p1\">[</bpt>sln<ept id=\"p1\">](dotnet-sln.md)</ept>","source":"[sln](dotnet-sln.md)"},{"pos":[2238,2260],"content":"<bpt id=\"p1\">[</bpt>help<ept id=\"p1\">](dotnet-help.md)</ept>","source":"[help](dotnet-help.md)"},{"pos":[2263,2287],"content":"<bpt id=\"p1\">[</bpt>store<ept id=\"p1\">](dotnet-store.md)</ept>","source":"[store](dotnet-store.md)"},{"pos":[2289,2322],"content":"<bpt id=\"p1\">**</bpt>Project modification commands<ept id=\"p1\">**</ept>","source":"**Project modification commands**"},{"pos":[2326,2362],"content":"<bpt id=\"p1\">[</bpt>add package<ept id=\"p1\">](dotnet-add-package.md)</ept>","source":"[add package](dotnet-add-package.md)"},{"pos":[2365,2405],"content":"<bpt id=\"p1\">[</bpt>add reference<ept id=\"p1\">](dotnet-add-reference.md)</ept>","source":"[add reference](dotnet-add-reference.md)"},{"pos":[2408,2450],"content":"<bpt id=\"p1\">[</bpt>remove package<ept id=\"p1\">](dotnet-remove-package.md)</ept>","source":"[remove package](dotnet-remove-package.md)"},{"pos":[2453,2499],"content":"<bpt id=\"p1\">[</bpt>remove reference<ept id=\"p1\">](dotnet-remove-reference.md)</ept>","source":"[remove reference](dotnet-remove-reference.md)"},{"pos":[2502,2544],"content":"<bpt id=\"p1\">[</bpt>list reference<ept id=\"p1\">](dotnet-list-reference.md)</ept>","source":"[list reference](dotnet-list-reference.md)"},{"pos":[2546,2567],"content":"<bpt id=\"p1\">**</bpt>Advanced commands<ept id=\"p1\">**</ept>","source":"**Advanced commands**"},{"pos":[2571,2609],"content":"<bpt id=\"p1\">[</bpt>nuget delete<ept id=\"p1\">](dotnet-nuget-delete.md)</ept>","source":"[nuget delete](dotnet-nuget-delete.md)"},{"pos":[2612,2650],"content":"<bpt id=\"p1\">[</bpt>nuget locals<ept id=\"p1\">](dotnet-nuget-locals.md)</ept>","source":"[nuget locals](dotnet-nuget-locals.md)"},{"pos":[2653,2687],"content":"<bpt id=\"p1\">[</bpt>nuget push<ept id=\"p1\">](dotnet-nuget-push.md)</ept>","source":"[nuget push](dotnet-nuget-push.md)"},{"pos":[2690,2718],"content":"<bpt id=\"p1\">[</bpt>msbuild<ept id=\"p1\">](dotnet-msbuild.md)</ept>","source":"[msbuild](dotnet-msbuild.md)"},{"pos":[2721,2770],"content":"<bpt id=\"p1\">[</bpt>dotnet install script<ept id=\"p1\">](dotnet-install-script.md)</ept>","source":"[dotnet install script](dotnet-install-script.md)"},{"pos":[2774,2805],"content":"<bpt id=\"p1\">[</bpt>.NET Core 1.x<ept id=\"p1\">](#tab/netcore1x)</ept>","linkify":"[.NET Core 1.x](#tab/netcore1x)","source":"[.NET Core 1.x](#tab/netcore1x)"},{"pos":[2807,2825],"content":"<bpt id=\"p1\">**</bpt>Basic commands<ept id=\"p1\">**</ept>","source":"**Basic commands**"},{"pos":[2829,2849],"content":"<bpt id=\"p1\">[</bpt>new<ept id=\"p1\">](dotnet-new.md)</ept>","source":"[new](dotnet-new.md)"},{"pos":[2852,2880],"content":"<bpt id=\"p1\">[</bpt>restore<ept id=\"p1\">](dotnet-restore.md)</ept>","source":"[restore](dotnet-restore.md)"},{"pos":[2883,2907],"content":"<bpt id=\"p1\">[</bpt>build<ept id=\"p1\">](dotnet-build.md)</ept>","source":"[build](dotnet-build.md)"},{"pos":[2910,2938],"content":"<bpt id=\"p1\">[</bpt>publish<ept id=\"p1\">](dotnet-publish.md)</ept>","source":"[publish](dotnet-publish.md)"},{"pos":[2941,2961],"content":"<bpt id=\"p1\">[</bpt>run<ept id=\"p1\">](dotnet-run.md)</ept>","source":"[run](dotnet-run.md)"},{"pos":[2964,2986],"content":"<bpt id=\"p1\">[</bpt>test<ept id=\"p1\">](dotnet-test.md)</ept>","source":"[test](dotnet-test.md)"},{"pos":[2989,3015],"content":"<bpt id=\"p1\">[</bpt>vstest<ept id=\"p1\">](dotnet-vstest.md)</ept>","source":"[vstest](dotnet-vstest.md)"},{"pos":[3018,3040],"content":"<bpt id=\"p1\">[</bpt>pack<ept id=\"p1\">](dotnet-pack.md)</ept>","source":"[pack](dotnet-pack.md)"},{"pos":[3043,3071],"content":"<bpt id=\"p1\">[</bpt>migrate<ept id=\"p1\">](dotnet-migrate.md)</ept>","source":"[migrate](dotnet-migrate.md)"},{"pos":[3074,3098],"content":"<bpt id=\"p1\">[</bpt>clean<ept id=\"p1\">](dotnet-clean.md)</ept>","source":"[clean](dotnet-clean.md)"},{"pos":[3101,3121],"content":"<bpt id=\"p1\">[</bpt>sln<ept id=\"p1\">](dotnet-sln.md)</ept>","source":"[sln](dotnet-sln.md)"},{"pos":[3123,3156],"content":"<bpt id=\"p1\">**</bpt>Project modification commands<ept id=\"p1\">**</ept>","source":"**Project modification commands**"},{"pos":[3160,3196],"content":"<bpt id=\"p1\">[</bpt>add package<ept id=\"p1\">](dotnet-add-package.md)</ept>","source":"[add package](dotnet-add-package.md)"},{"pos":[3199,3239],"content":"<bpt id=\"p1\">[</bpt>add reference<ept id=\"p1\">](dotnet-add-reference.md)</ept>","source":"[add reference](dotnet-add-reference.md)"},{"pos":[3242,3284],"content":"<bpt id=\"p1\">[</bpt>remove package<ept id=\"p1\">](dotnet-remove-package.md)</ept>","source":"[remove package](dotnet-remove-package.md)"},{"pos":[3287,3333],"content":"<bpt id=\"p1\">[</bpt>remove reference<ept id=\"p1\">](dotnet-remove-reference.md)</ept>","source":"[remove reference](dotnet-remove-reference.md)"},{"pos":[3336,3378],"content":"<bpt id=\"p1\">[</bpt>list reference<ept id=\"p1\">](dotnet-list-reference.md)</ept>","source":"[list reference](dotnet-list-reference.md)"},{"pos":[3380,3401],"content":"<bpt id=\"p1\">**</bpt>Advanced commands<ept id=\"p1\">**</ept>","source":"**Advanced commands**"},{"pos":[3405,3443],"content":"<bpt id=\"p1\">[</bpt>nuget delete<ept id=\"p1\">](dotnet-nuget-delete.md)</ept>","source":"[nuget delete](dotnet-nuget-delete.md)"},{"pos":[3446,3484],"content":"<bpt id=\"p1\">[</bpt>nuget locals<ept id=\"p1\">](dotnet-nuget-locals.md)</ept>","source":"[nuget locals](dotnet-nuget-locals.md)"},{"pos":[3487,3521],"content":"<bpt id=\"p1\">[</bpt>nuget push<ept id=\"p1\">](dotnet-nuget-push.md)</ept>","source":"[nuget push](dotnet-nuget-push.md)"},{"pos":[3524,3552],"content":"<bpt id=\"p1\">[</bpt>msbuild<ept id=\"p1\">](dotnet-msbuild.md)</ept>","source":"[msbuild](dotnet-msbuild.md)"},{"pos":[3555,3604],"content":"<bpt id=\"p1\">[</bpt>dotnet install script<ept id=\"p1\">](dotnet-install-script.md)</ept>","source":"[dotnet install script](dotnet-install-script.md)"},{"content":"The CLI adopts an extensibility model that allows you to specify additional tools for your projects.","pos":[3611,3711]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>.NET Core CLI extensibility model<ept id=\"p1\">](extensibility.md)</ept> topic.","pos":[3712,3802],"source":" For more information, see the [.NET Core CLI extensibility model](extensibility.md) topic."},{"pos":[3807,3824],"content":"Command structure","linkify":"Command structure","nodes":[{"content":"Command structure","pos":[0,17]}]},{"content":"CLI command structure consists of <bpt id=\"p1\">[</bpt>the driver (\"dotnet\")<ept id=\"p1\">](#driver)</ept>, <bpt id=\"p2\">[</bpt>the command (or \"verb\")<ept id=\"p2\">](#command-verb)</ept>, and possibly command <bpt id=\"p3\">[</bpt>arguments<ept id=\"p3\">](#arguments)</ept> and <bpt id=\"p4\">[</bpt>options<ept id=\"p4\">](#options)</ept>.","pos":[3826,4005],"source":"CLI command structure consists of [the driver (\"dotnet\")](#driver), [the command (or \"verb\")](#command-verb), and possibly command [arguments](#arguments) and [options](#options)."},{"content":"You see this pattern in most CLI operations, such as creating a new console app and running it from the command line as the following commands show when executed from a directory named <bpt id=\"p1\">*</bpt>my_app<ept id=\"p1\">*</ept>:","pos":[4006,4200],"source":" You see this pattern in most CLI operations, such as creating a new console app and running it from the command line as the following commands show when executed from a directory named *my_app*:"},{"pos":[4204,4235],"content":"<bpt id=\"p1\">[</bpt>.NET Core 2.x<ept id=\"p1\">](#tab/netcore2x)</ept>","linkify":"[.NET Core 2.x](#tab/netcore2x)","source":"[.NET Core 2.x](#tab/netcore2x)"},{"pos":[4342,4373],"content":"<bpt id=\"p1\">[</bpt>.NET Core 1.x<ept id=\"p1\">](#tab/netcore1x)</ept>","linkify":"[.NET Core 1.x](#tab/netcore1x)","source":"[.NET Core 1.x](#tab/netcore1x)"},{"pos":[4502,4508],"content":"Driver","linkify":"Driver","nodes":[{"content":"Driver","pos":[0,6]}]},{"pos":[4510,4669],"content":"The driver is named <bpt id=\"p1\">[</bpt>dotnet<ept id=\"p1\">](dotnet.md)</ept> and has two responsibilities, either running a <bpt id=\"p2\">[</bpt>framework-dependent app<ept id=\"p2\">](../deploying/index.md)</ept> or executing a command.","source":"The driver is named [dotnet](dotnet.md) and has two responsibilities, either running a [framework-dependent app](../deploying/index.md) or executing a command."},{"content":"To run a framework-dependent app, specify the app after the driver, for example, <ph id=\"ph1\">`dotnet /path/to/my_app.dll`</ph>.","pos":[4672,4782],"source":"To run a framework-dependent app, specify the app after the driver, for example, `dotnet /path/to/my_app.dll`."},{"content":"When executing the command from the folder where the app's DLL resides, simply execute <ph id=\"ph1\">`dotnet my_app.dll`</ph>.","pos":[4783,4890],"source":" When executing the command from the folder where the app's DLL resides, simply execute `dotnet my_app.dll`."},{"content":"If you want to use a specific version of the .NET Core Runtime, use the <ph id=\"ph1\">`--fx-version &lt;VERSION&gt;`</ph> option (see the <bpt id=\"p1\">[</bpt>dotnet command<ept id=\"p1\">](dotnet.md)</ept> reference).","pos":[4891,5043],"source":" If you want to use a specific version of the .NET Core Runtime, use the `--fx-version <VERSION>` option (see the [dotnet command](dotnet.md) reference)."},{"content":"When you supply a command to the driver, <ph id=\"ph1\">`dotnet.exe`</ph> starts the CLI command execution process.","pos":[5045,5140],"source":"When you supply a command to the driver, `dotnet.exe` starts the CLI command execution process."},{"content":"For example:","pos":[5141,5153]},{"content":"First, the driver determines the version of the SDK to use.","pos":[5183,5242]},{"content":"If there is no <bpt id=\"p1\">[</bpt>'global.json'<ept id=\"p1\">](global-json.md)</ept>, the latest version of the SDK available is used.","pos":[5243,5339],"source":" If there is no ['global.json'](global-json.md), the latest version of the SDK available is used."},{"content":"This might be either a preview or stable version, depending on what is latest on the machine.","pos":[5340,5433]},{"content":"Once the SDK version is determined, it executes the command.","pos":[5435,5495]},{"pos":[5501,5517],"content":"Command (\"verb\")","linkify":"Command (\"verb\")","nodes":[{"content":"Command (\"verb\")","pos":[0,16]}]},{"content":"The command (or \"verb\") is simply a command that performs an action.","pos":[5519,5587]},{"content":"For example, <ph id=\"ph1\">`dotnet build`</ph> builds your code.","pos":[5588,5633],"source":" For example, `dotnet build` builds your code."},{"content":"<ph id=\"ph1\">`dotnet publish`</ph> publishes your code.","pos":[5634,5671],"source":"`dotnet publish` publishes your code."},{"content":"The commands are implemented as a console application using a <ph id=\"ph1\">`dotnet {verb}`</ph> convention.","pos":[5672,5761],"source":" The commands are implemented as a console application using a `dotnet {verb}` convention."},{"pos":[5767,5776],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"The arguments you pass on the command line are the arguments to the command invoked.","pos":[5778,5862]},{"content":"For example when you execute <ph id=\"ph1\">`dotnet publish my_app.csproj`</ph>, the <ph id=\"ph2\">`my_app.csproj`</ph> argument indicates the project to publish and is passed to the <ph id=\"ph3\">`publish`</ph> command.","pos":[5863,6025],"source":" For example when you execute `dotnet publish my_app.csproj`, the `my_app.csproj` argument indicates the project to publish and is passed to the `publish` command."},{"pos":[6031,6038],"content":"Options","linkify":"Options","nodes":[{"content":"Options","pos":[0,7]}]},{"content":"The options you pass on the command line are the options to the command invoked.","pos":[6040,6120]},{"content":"For example when you execute <ph id=\"ph1\">`dotnet publish --output /build_output`</ph>, the <ph id=\"ph2\">`--output`</ph> option and its value are passed to the <ph id=\"ph3\">`publish`</ph> command.","pos":[6121,6263],"source":" For example when you execute `dotnet publish --output /build_output`, the `--output` option and its value are passed to the `publish` command."},{"pos":[6268,6295],"content":"Migration from project.json","linkify":"Migration from project.json","nodes":[{"content":"Migration from project.json","pos":[0,27]}]},{"content":"If you used Preview 2 tooling to produce <bpt id=\"p1\">*</bpt>project.json<ept id=\"p1\">*</ept>-based projects, consult the <bpt id=\"p2\">[</bpt>dotnet migrate<ept id=\"p2\">](dotnet-migrate.md)</ept> topic for information on migrating your project to MSBuild/<bpt id=\"p3\">*</bpt>.csproj<ept id=\"p3\">*</ept> for use with release tooling.","pos":[6297,6515],"source":"If you used Preview 2 tooling to produce *project.json*-based projects, consult the [dotnet migrate](dotnet-migrate.md) topic for information on migrating your project to MSBuild/*.csproj* for use with release tooling."},{"content":"For .NET Core projects created prior to the release of Preview 2 tooling, either manually update the project following the guidance in <bpt id=\"p1\">[</bpt>Migrating from DNX to .NET Core CLI (project.json)<ept id=\"p1\">](../migration/from-dnx.md)</ept> and then use <ph id=\"ph1\">`dotnet migrate`</ph> or directly upgrade your projects.","pos":[6516,6794],"source":" For .NET Core projects created prior to the release of Preview 2 tooling, either manually update the project following the guidance in [Migrating from DNX to .NET Core CLI (project.json)](../migration/from-dnx.md) and then use `dotnet migrate` or directly upgrade your projects."},{"pos":[6799,6807],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[6811,6873],"content":"<bpt id=\"p1\">[</bpt>dotnet/CLI GitHub Repository<ept id=\"p1\">](https://github.com/dotnet/cli/)</ept>","source":"[dotnet/CLI GitHub Repository](https://github.com/dotnet/cli/)"},{"pos":[6876,6935],"content":"<bpt id=\"p1\">[</bpt>.NET Core installation guide<ept id=\"p1\">](https://aka.ms/dotnetcoregs)</ept>","source":"[.NET Core installation guide](https://aka.ms/dotnetcoregs)"}]}