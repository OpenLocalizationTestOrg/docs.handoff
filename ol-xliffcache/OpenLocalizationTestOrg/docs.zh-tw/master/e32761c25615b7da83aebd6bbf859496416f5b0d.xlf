<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e32761c25615b7da83aebd6bbf859496416f5b0d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\network-programming\listening-with-sockets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bac9a3cea2a85d5abdce5fdd5c207535d5667911</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dee3c424c67381b8cf7081343c19c7cb574ecbe3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Listening with Sockets | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Listening with Sockets</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Listener or server sockets open a port on the network and then wait for a client to connect to that port.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Although other network address families and protocols exist, this example shows how to create remote service for a TCP/IP network.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The unique address of a TCP/IP service is defined by combining the IP address of the host with the port number of the service to create an endpoint for the service.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Net.Dns&gt;</ph> class provides methods that return information about the network addresses supported by the local network device.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When the local network device has more than one network address, or if the local system supports more than one network device, the <bpt id="p1">**</bpt>Dns<ept id="p1">**</ept> class returns information about all network addresses, and the application must choose the proper address for the service.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Internet Assigned Numbers Authority (Iana) defines port numbers for common services (for more information, see www.iana.org/assignments/port-numbers).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Other services can have registered port numbers in the range 1,024 to 65,535.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> for a server by combining the first IP address returned by <bpt id="p1">**</bpt>Dns<ept id="p1">**</ept> for the host computer with a port number chosen from the registered port numbers range.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>After the local endpoint is determined, the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> must be associated with that endpoint using the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Bind%2A&gt;</ph> method and set to listen on the endpoint using the <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.Listen%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Bind<ept id="p1">**</ept> throws an exception if the specific address and port combination is already in use.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example demonstrates associating a <bpt id="p1">**</bpt>Socket<ept id="p1">**</ept> with an <bpt id="p2">**</bpt>IPEndPoint<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Listen<ept id="p1">**</ept> method takes a single parameter that specifies how many pending connections to the <bpt id="p2">**</bpt>Socket<ept id="p2">**</ept> are allowed before a server busy error is returned to the connecting client.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this case, up to 100 clients are placed in the connection queue before a server busy response is returned to client number 101.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using a Synchronous Server Socket<ept id="p1">](../../../docs/framework/network-programming/using-a-synchronous-server-socket.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Using an Asynchronous Server Socket<ept id="p1">](../../../docs/framework/network-programming/using-an-asynchronous-server-socket.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Using Client Sockets<ept id="p1">](../../../docs/framework/network-programming/using-client-sockets.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Socket<ept id="p1">](../../../docs/framework/network-programming/how-to-create-a-socket.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sockets<ept id="p1">](../../../docs/framework/network-programming/sockets.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>