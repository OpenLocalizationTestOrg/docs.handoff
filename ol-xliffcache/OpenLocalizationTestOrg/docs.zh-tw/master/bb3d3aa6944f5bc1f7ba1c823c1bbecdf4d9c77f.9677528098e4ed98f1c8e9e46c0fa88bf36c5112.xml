{"content":"---\ntitle: \"Flowchart Workflows | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: b0a3475c-d22f-49eb-8912-973c960aebf5\ncaps.latest.revision: 22\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Flowchart Workflows\nA flowchart is a well-known paradigm for designing programs. The Flowchart activity is typically used to implement non-sequential workflows, but can be used for sequential workflows if no `FlowDecision` nodes are used.  \n  \n## Flowchart Workflow Structure  \n A Flowchart activity is an activity that contains a collection of activities to be executed.  Flowcharts also contain flow control elements such as <xref:System.Activities.Statements.FlowDecision> and <xref:System.Activities.Statements.FlowSwitch%601> that direct execution between contained activities based on the values of variables.  \n  \n## Types of Flow Nodes  \n Different types of elements are used depending on the type of flow control required when the element executes. Types of flowchart elements include:  \n  \n-   `FlowStep` - Models one step of execution in the flowchart.  \n  \n-   `FlowDecision` - Branches execution based on a Boolean condition, similar to <xref:System.Activities.Statements.If>.  \n  \n-   `FlowSwitch` – Branches execution based on an exclusive switch, similar to <xref:System.Activities.Statements.Switch%601>.  \n  \n Each link has an `Action` property that defines a <xref:System.Activities.ActivityAction> that can be used to execute child activities, and one or more `Next` properties that define which element or elements to execute when the current element finishes execution.  \n  \n### Creating a Basic Activity Sequence with a FlowStep Node  \n To model a basic sequence in which two activities execute in turn, the `FlowStep` element is used. In the following example, two `FlowStep` elements are used to execute two activities in sequence.  \n  \n```  \n<Flowchart>  \n  <FlowStep>      \n  <Assign DisplayName=\"Get Name\">  \n    <Assign.To>  \n      <OutArgument x:TypeArguments=\"x:String\">[result]</OutArgument>  \n    </Assign.To>  \n    <Assign.Value>  \n      <InArgument x:TypeArguments=\"x:String\">[\"User\"]</InArgument>  \n    </Assign.Value>  \n  </Assign>  \n    <FlowStep.Next>  \n      <FlowStep>  \n        <WriteLine Text=\"[\"Hello, \" & result]\"/>  \n</FlowStep>  \n    </FlowStep.Next>  \n  </FlowStep>  \n</Flowchart>  \n  \n```  \n  \n### Creating a Conditional Flowchart with a FlowDecision Node  \n To model a conditional flow node in a flowchart workflow (that is, to create a link that functions as a traditional flowchart's decision symbol), a <xref:System.Activities.Statements.FlowDecision> node is used. The <xref:System.Activities.Statements.FlowDecision.Condition%2A> property of the node is set to an expression that defines the condition, and the <xref:System.Activities.Statements.FlowDecision.True%2A> and <xref:System.Activities.Statements.FlowDecision.False%2A> properties are set to <xref:System.Activities.Statements.FlowNode> instances to be executed if the expression evaluates to `true` or `false`. The following example shows how to define a workflow that uses a <xref:System.Activities.Statements.FlowDecision> node.  \n  \n```  \n<Flowchart>  \n  <FlowStep>  \n    <Read Result=\"[s]\"/>  \n    <FlowStep.Next>  \n      <FlowDecision>  \n        <IsEmpty Input=\"[s]\" />  \n        <FlowDecision.True>  \n    <FlowStep>  \n            <Write Text=\"Empty\"/>  \n    </FlowStep>  \n        </FlowDecision.True>  \n        <FlowDecision.False>  \n    <FlowStep>  \n            <Write Text=\"Non-Empty\"/>  \n          </FlowStep>  \n        </FlowDecision.False>  \n      </FlowDecision>  \n    </FlowStep.Next>  \n  </FlowStep>  \n</Flowchart>  \n  \n```  \n  \n### Creating an Exclusive Switch with a FlowSwitch Node  \n To model a flowchart in which one exclusive path is selected based on a matching value, the <xref:System.Activities.Statements.FlowSwitch%601> node is used. The <xref:System.Activities.Statements.FlowSwitch%601.Expression%2A> property is set to a <xref:System.Activities.Activity%601> with a type parameter of <xref:System.Object> that defines the value to match choices against. The <xref:System.Activities.Statements.FlowSwitch%601.Cases%2A> property defines a dictionary of keys and <xref:System.Activities.Statements.FlowNode> objects to match against the conditional expression, and a set of <xref:System.Activities.Statements.FlowNode> objects that define how execution should flow if the given case matches the conditional expression. The <xref:System.Activities.Statements.FlowSwitch%601> also defines a <xref:System.Activities.Statements.FlowSwitch%601.Default%2A> property that defines how execution should flow if no cases match the condition expression. The following example demonstrates how to define a workflow that uses a <xref:System.Activities.Statements.FlowSwitch%601> element.  \n  \n```  \n<Flowchart>  \n    <FlowSwitch>  \n      <FlowStep x:Key=\"Red\">  \n        <WriteRed/>  \n      </FlowStep>  \n      <FlowStep x:Key=\"Blue\">  \n        <WriteBlue/>  \n      </FlowStep>  \n      <FlowStep x:Key=\"Green\">  \n        <WriteGreen/>  \n      </FlowStep>  \n    </FlowSwitch>  \n</Flowchart>  \n  \n```","nodes":[{"pos":[12,48],"content":"Flowchart Workflows | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Flowchart Workflows | Microsoft Docs","pos":[0,36]}]},{"pos":[314,333],"content":"Flowchart Workflows","linkify":"Flowchart Workflows","nodes":[{"content":"Flowchart Workflows","pos":[0,19]}]},{"content":"A flowchart is a well-known paradigm for designing programs.","pos":[334,394]},{"content":"The Flowchart activity is typically used to implement non-sequential workflows, but can be used for sequential workflows if no <ph id=\"ph1\">`FlowDecision`</ph> nodes are used.","pos":[395,552],"source":" The Flowchart activity is typically used to implement non-sequential workflows, but can be used for sequential workflows if no `FlowDecision` nodes are used."},{"pos":[561,589],"content":"Flowchart Workflow Structure","linkify":"Flowchart Workflow Structure","nodes":[{"content":"Flowchart Workflow Structure","pos":[0,28]}]},{"content":"A Flowchart activity is an activity that contains a collection of activities to be executed.","pos":[593,685]},{"content":"Flowcharts also contain flow control elements such as <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph> that direct execution between contained activities based on the values of variables.","pos":[687,929],"source":"  Flowcharts also contain flow control elements such as <xref:System.Activities.Statements.FlowDecision> and <xref:System.Activities.Statements.FlowSwitch%601> that direct execution between contained activities based on the values of variables."},{"pos":[938,957],"content":"Types of Flow Nodes","linkify":"Types of Flow Nodes","nodes":[{"content":"Types of Flow Nodes","pos":[0,19]}]},{"content":"Different types of elements are used depending on the type of flow control required when the element executes.","pos":[961,1071]},{"content":"Types of flowchart elements include:","pos":[1072,1108]},{"pos":[1118,1177],"content":"<ph id=\"ph1\">`FlowStep`</ph> - Models one step of execution in the flowchart.","source":"`FlowStep` - Models one step of execution in the flowchart."},{"pos":[1187,1303],"content":"<ph id=\"ph1\">`FlowDecision`</ph> - Branches execution based on a Boolean condition, similar to <ph id=\"ph2\">&lt;xref:System.Activities.Statements.If&gt;</ph>.","source":"`FlowDecision` - Branches execution based on a Boolean condition, similar to <xref:System.Activities.Statements.If>."},{"pos":[1313,1435],"content":"<ph id=\"ph1\">`FlowSwitch`</ph> – Branches execution based on an exclusive switch, similar to <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Switch%601&gt;</ph>.","source":"`FlowSwitch` – Branches execution based on an exclusive switch, similar to <xref:System.Activities.Statements.Switch%601>."},{"pos":[1442,1705],"content":"Each link has an <ph id=\"ph1\">`Action`</ph> property that defines a <ph id=\"ph2\">&lt;xref:System.Activities.ActivityAction&gt;</ph> that can be used to execute child activities, and one or more <ph id=\"ph3\">`Next`</ph> properties that define which element or elements to execute when the current element finishes execution.","source":"Each link has an `Action` property that defines a <xref:System.Activities.ActivityAction> that can be used to execute child activities, and one or more `Next` properties that define which element or elements to execute when the current element finishes execution."},{"pos":[1715,1770],"content":"Creating a Basic Activity Sequence with a FlowStep Node","linkify":"Creating a Basic Activity Sequence with a FlowStep Node","nodes":[{"content":"Creating a Basic Activity Sequence with a FlowStep Node","pos":[0,55]}]},{"content":"To model a basic sequence in which two activities execute in turn, the <ph id=\"ph1\">`FlowStep`</ph> element is used.","pos":[1774,1872],"source":"To model a basic sequence in which two activities execute in turn, the `FlowStep` element is used."},{"content":"In the following example, two <ph id=\"ph1\">`FlowStep`</ph> elements are used to execute two activities in sequence.","pos":[1873,1970],"source":" In the following example, two `FlowStep` elements are used to execute two activities in sequence."},{"pos":[2461,2518],"content":"Creating a Conditional Flowchart with a FlowDecision Node","linkify":"Creating a Conditional Flowchart with a FlowDecision Node","nodes":[{"content":"Creating a Conditional Flowchart with a FlowDecision Node","pos":[0,57]}]},{"content":"To model a conditional flow node in a flowchart workflow (that is, to create a link that functions as a traditional flowchart's decision symbol), a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> node is used.","pos":[2522,2732],"source":"To model a conditional flow node in a flowchart workflow (that is, to create a link that functions as a traditional flowchart's decision symbol), a <xref:System.Activities.Statements.FlowDecision> node is used."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowDecision.Condition%2A&gt;</ph> property of the node is set to an expression that defines the condition, and the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.FlowDecision.True%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Activities.Statements.FlowDecision.False%2A&gt;</ph> properties are set to <ph id=\"ph4\">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> instances to be executed if the expression evaluates to <ph id=\"ph5\">`true`</ph> or <ph id=\"ph6\">`false`</ph>.","pos":[2733,3140],"source":" The <xref:System.Activities.Statements.FlowDecision.Condition%2A> property of the node is set to an expression that defines the condition, and the <xref:System.Activities.Statements.FlowDecision.True%2A> and <xref:System.Activities.Statements.FlowDecision.False%2A> properties are set to <xref:System.Activities.Statements.FlowNode> instances to be executed if the expression evaluates to `true` or `false`."},{"content":"The following example shows how to define a workflow that uses a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> node.","pos":[3141,3260],"source":" The following example shows how to define a workflow that uses a <xref:System.Activities.Statements.FlowDecision> node."},{"pos":[3777,3828],"content":"Creating an Exclusive Switch with a FlowSwitch Node","linkify":"Creating an Exclusive Switch with a FlowSwitch Node","nodes":[{"content":"Creating an Exclusive Switch with a FlowSwitch Node","pos":[0,51]}]},{"content":"To model a flowchart in which one exclusive path is selected based on a matching value, the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph> node is used.","pos":[3832,3988],"source":"To model a flowchart in which one exclusive path is selected based on a matching value, the <xref:System.Activities.Statements.FlowSwitch%601> node is used."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowSwitch%601.Expression%2A&gt;</ph> property is set to a <ph id=\"ph2\">&lt;xref:System.Activities.Activity%601&gt;</ph> with a type parameter of <ph id=\"ph3\">&lt;xref:System.Object&gt;</ph> that defines the value to match choices against.","pos":[3989,4211],"source":" The <xref:System.Activities.Statements.FlowSwitch%601.Expression%2A> property is set to a <xref:System.Activities.Activity%601> with a type parameter of <xref:System.Object> that defines the value to match choices against."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowSwitch%601.Cases%2A&gt;</ph> property defines a dictionary of keys and <ph id=\"ph2\">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> objects to match against the conditional expression, and a set of <ph id=\"ph3\">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> objects that define how execution should flow if the given case matches the conditional expression.","pos":[4212,4573],"source":" The <xref:System.Activities.Statements.FlowSwitch%601.Cases%2A> property defines a dictionary of keys and <xref:System.Activities.Statements.FlowNode> objects to match against the conditional expression, and a set of <xref:System.Activities.Statements.FlowNode> objects that define how execution should flow if the given case matches the conditional expression."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph> also defines a <ph id=\"ph2\">&lt;xref:System.Activities.Statements.FlowSwitch%601.Default%2A&gt;</ph> property that defines how execution should flow if no cases match the condition expression.","pos":[4574,4797],"source":" The <xref:System.Activities.Statements.FlowSwitch%601> also defines a <xref:System.Activities.Statements.FlowSwitch%601.Default%2A> property that defines how execution should flow if no cases match the condition expression."},{"content":"The following example demonstrates how to define a workflow that uses a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph> element.","pos":[4798,4929],"source":" The following example demonstrates how to define a workflow that uses a <xref:System.Activities.Statements.FlowSwitch%601> element."}]}