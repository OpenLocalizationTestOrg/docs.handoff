{"content":"---\ntitle: \"CorBindToRuntime Function | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"CorBindToRuntime\"\napi_location: \n  - \"mscoree.dll\"\n  - \"mscoreei.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"CorBindToRuntime\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CorBindToRuntime function [.NET Framework hosting]\"\nms.assetid: 799740aa-46ec-4532-95da-6444565b4971\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 20\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# CorBindToRuntime Function\nEnables unmanaged hosts to load the common language runtime (CLR) into a process.  \n  \n This function has been deprecated in the [!INCLUDE[net_v40_long](../../../../includes/net-v40-long-md.md)].  \n  \n## Syntax  \n  \n```  \nHRESULT CorBindToRuntime (  \n    [in]  LPCWSTR     pwszVersion,   \n    [in]  LPCWSTR     pwszBuildFlavor,   \n    [in]  REFCLSID    rclsid,   \n    [in]  REFIID      riid,   \n    [out] LPVOID FAR  *ppv  \n);  \n```  \n  \n#### Parameters  \n `pwszVersion`  \n [in] A string describing the version of the CLR you want to load.  \n  \n A version number in the .NET Framework consists of four parts separated by periods: *major.minor.build.revision*. The string passed as `pwszVersion` must start with the character \"v\" followed by the first three parts of the version number (for example, \"v1.0.1529\").  \n  \n Some versions of the CLR are installed with a policy statement that specifies compatibility with previous versions of the CLR. By default, the startup shim evaluates `pwszVersion` against policy statements and loads the latest version of the runtime that is compatible with the version being requested. A host can force the shim to skip policy evaluation and load the exact version specified in `pwszVersion` by passing a value of  `STARTUP_LOADER_SAFEMODE` for the `flags` parameter, as described below.  \n  \n If the caller specifies null for `pwszVersion`, the latest version of the runtime is loaded. Passing null gives the host no control over which version of the runtime is loaded. Although this approach may be appropriate in some scenarios, it is strongly recommended that the host supply a specific version to load.  \n  \n `pwszBuildFlavor`  \n [in] A string that specifies whether to load the server or the workstation build of the CLR. Valid values are `svr` and `wks`. The server build is optimized to take advantage of multiple processors for garbage collections, and the workstation build is optimized for client applications running on a single-processor machine.  \n  \n If `pwszBuildFlavor`is set to null, the workstation build is loaded. When running on a single-processor machine, the workstation build is always loaded, even if `pwszBuildFlavor`is set to `svr`. However, if `pwszBuildFlavor`is set to `svr` and concurrent garbage collection is specified (see the description of the `flags` parameter), the server build is loaded.  \n  \n `rclsid`  \n [in] The `CLSID` of the coclass that implements either the [ICorRuntimeHost](../../../../docs/framework/unmanaged-api/hosting/icorruntimehost-interface.md) or the [ICLRRuntimeHost](../../../../docs/framework/unmanaged-api/hosting/iclrruntimehost-interface.md) interface. Supported values are CLSID_CorRuntimeHost or CLSID_CLRRuntimeHost.  \n  \n `riid`  \n [in] The `IID` of the requested interface from `rclsid`. Supported values are IID_ICorRuntimeHost or IID_ICLRRuntimeHost.  \n  \n `ppv`  \n [out] The returned interface pointer to `riid`.  \n  \n## Remarks  \n If `pwszVersion` specifies a runtime version that does not exist, `CorBindToRuntimeEx` returns an HRESULT value of CLR_E_SHIM_RUNTIMELOAD.  \n  \n## Execution Context and Flow of Windows Identity  \n In version 1 of the CLR, the <xref:System.Security.Principal.WindowsIdentity> object does not flow across asynchronous points such as new threads, thread pools, or timer callbacks. In version 2.0 of the CLR, an <xref:System.Threading.ExecutionContext> object wraps some information about the currently executing thread and flows it across any asynchronous point, but not across application domain boundaries. Similarly, the <xref:System.Security.Principal.WindowsIdentity> object also flows across any asynchronous point. Therefore, the current impersonation on the thread, if any, flows too.  \n  \n You can alter the flow in two ways:  \n  \n1.  By modifying the <xref:System.Threading.ExecutionContext> settings to suppress the flow on a per-thread basis (see the <xref:System.Threading.ExecutionContext.SuppressFlow%2A>, <xref:System.Security.SecurityContext.SuppressFlow%2A>, and <xref:System.Security.SecurityContext.SuppressFlowWindowsIdentity%2A> methods).  \n  \n2.  By changing the process default mode to the version 1 compatibility mode, where the <xref:System.Security.Principal.WindowsIdentity> object does not flow across any asynchronous point, regardless of the <xref:System.Threading.ExecutionContext> settings on the current thread. How you change the default mode depends on whether you use a managed executable or an unmanaged hosting interface to load the CLR:  \n  \n    1.  For managed executables, you must set the `enabled` attribute of the [\\<legacyImpersonationPolicy>](../../../../docs/framework/configure-apps/file-schema/runtime/legacyimpersonationpolicy-element.md) element to `true`.  \n  \n    2.  For unmanaged hosting interfaces, set the `STARTUP_LEGACY_IMPERSONATION` flag in the `flags` parameter when calling the `CorBindToRuntimeEx` function.  \n  \n     The version 1 compatibility mode applies to the entire process and to all the application domains in the process.  \n  \n## Remarks  \n [CorBindToRuntimeEx](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimeex-function.md) and `CorBindToRuntime` perform the same operation, but the `CorBindToRuntimeEx` function allows you to set flags to specify the behavior of the CLR.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See Also  \n [CorBindToCurrentRuntime Function](../../../../docs/framework/unmanaged-api/hosting/corbindtocurrentruntime-function.md)   \n [CorBindToRuntimeByCfg Function](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimebycfg-function.md)   \n [CorBindToRuntimeEx Function](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimeex-function.md)   \n [CorBindToRuntimeHost Function](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimehost-function.md)   \n [ICorRuntimeHost Interface](../../../../docs/framework/unmanaged-api/hosting/icorruntimehost-interface.md)   \n [Deprecated CLR Hosting Functions](../../../../docs/framework/unmanaged-api/hosting/deprecated-clr-hosting-functions.md)","nodes":[{"pos":[4,630],"embed":true,"restype":"x-metadata","content":"title: \"CorBindToRuntime Function | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"CorBindToRuntime\"\napi_location: \n  - \"mscoree.dll\"\n  - \"mscoreei.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"CorBindToRuntime\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"CorBindToRuntime function [.NET Framework hosting]\"\nms.assetid: 799740aa-46ec-4532-95da-6444565b4971\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 20\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"CorBindToRuntime Function | Microsoft Docs","nodes":[{"pos":[0,42],"content":"CorBindToRuntime Function | Microsoft Docs","nodes":[{"content":"CorBindToRuntime Function | Microsoft Docs","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[637,662],"content":"CorBindToRuntime Function","linkify":"CorBindToRuntime Function","nodes":[{"content":"CorBindToRuntime Function","pos":[0,25]}]},{"content":"Enables unmanaged hosts to load the common language runtime (CLR) into a process.","pos":[663,744]},{"pos":[751,858],"content":"This function has been deprecated in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](../../../../includes/net-v40-long-md.md)]</ph>.","source":"This function has been deprecated in the [!INCLUDE[net_v40_long](../../../../includes/net-v40-long-md.md)]."},{"pos":[867,873],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1106,1116],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A string describing the version of the CLR you want to load.","pos":[1137,1202]},{"content":"A version number in the .NET Framework consists of four parts separated by periods: <bpt id=\"p1\">*</bpt>major.minor.build.revision<ept id=\"p1\">*</ept>.","pos":[1209,1322],"source":"A version number in the .NET Framework consists of four parts separated by periods: *major.minor.build.revision*."},{"content":"The string passed as <ph id=\"ph1\">`pwszVersion`</ph> must start with the character \"v\" followed by the first three parts of the version number (for example, \"v1.0.1529\").","pos":[1323,1475],"source":" The string passed as `pwszVersion` must start with the character \"v\" followed by the first three parts of the version number (for example, \"v1.0.1529\")."},{"content":"Some versions of the CLR are installed with a policy statement that specifies compatibility with previous versions of the CLR.","pos":[1482,1608]},{"content":"By default, the startup shim evaluates <ph id=\"ph1\">`pwszVersion`</ph> against policy statements and loads the latest version of the runtime that is compatible with the version being requested.","pos":[1609,1784],"source":" By default, the startup shim evaluates `pwszVersion` against policy statements and loads the latest version of the runtime that is compatible with the version being requested."},{"content":"A host can force the shim to skip policy evaluation and load the exact version specified in <ph id=\"ph1\">`pwszVersion`</ph> by passing a value of  <ph id=\"ph2\">`STARTUP_LOADER_SAFEMODE`</ph> for the <ph id=\"ph3\">`flags`</ph> parameter, as described below.","pos":[1785,1986],"source":" A host can force the shim to skip policy evaluation and load the exact version specified in `pwszVersion` by passing a value of  `STARTUP_LOADER_SAFEMODE` for the `flags` parameter, as described below."},{"content":"If the caller specifies null for <ph id=\"ph1\">`pwszVersion`</ph>, the latest version of the runtime is loaded.","pos":[1993,2085],"source":"If the caller specifies null for `pwszVersion`, the latest version of the runtime is loaded."},{"content":"Passing null gives the host no control over which version of the runtime is loaded.","pos":[2086,2169]},{"content":"Although this approach may be appropriate in some scenarios, it is strongly recommended that the host supply a specific version to load.","pos":[2170,2306]},{"content":"[in] A string that specifies whether to load the server or the workstation build of the CLR.","pos":[2334,2426]},{"content":"Valid values are <ph id=\"ph1\">`svr`</ph> and <ph id=\"ph2\">`wks`</ph>.","pos":[2427,2460],"source":" Valid values are `svr` and `wks`."},{"content":"The server build is optimized to take advantage of multiple processors for garbage collections, and the workstation build is optimized for client applications running on a single-processor machine.","pos":[2461,2658]},{"content":"If <ph id=\"ph1\">`pwszBuildFlavor`</ph>is set to null, the workstation build is loaded.","pos":[2665,2733],"source":"If `pwszBuildFlavor`is set to null, the workstation build is loaded."},{"content":"When running on a single-processor machine, the workstation build is always loaded, even if <ph id=\"ph1\">`pwszBuildFlavor`</ph>is set to <ph id=\"ph2\">`svr`</ph>.","pos":[2734,2859],"source":" When running on a single-processor machine, the workstation build is always loaded, even if `pwszBuildFlavor`is set to `svr`."},{"content":"However, if <ph id=\"ph1\">`pwszBuildFlavor`</ph>is set to <ph id=\"ph2\">`svr`</ph> and concurrent garbage collection is specified (see the description of the <ph id=\"ph3\">`flags`</ph> parameter), the server build is loaded.","pos":[2860,3027],"source":" However, if `pwszBuildFlavor`is set to `svr` and concurrent garbage collection is specified (see the description of the `flags` parameter), the server build is loaded."},{"content":"[in] The <ph id=\"ph1\">`CLSID`</ph> of the coclass that implements either the <bpt id=\"p1\">[</bpt>ICorRuntimeHost<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/icorruntimehost-interface.md)</ept> or the <bpt id=\"p2\">[</bpt>ICLRRuntimeHost<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/hosting/iclrruntimehost-interface.md)</ept> interface.","pos":[3046,3316],"source":"[in] The `CLSID` of the coclass that implements either the [ICorRuntimeHost](../../../../docs/framework/unmanaged-api/hosting/icorruntimehost-interface.md) or the [ICLRRuntimeHost](../../../../docs/framework/unmanaged-api/hosting/iclrruntimehost-interface.md) interface."},{"content":"Supported values are CLSID_CorRuntimeHost or CLSID_CLRRuntimeHost.","pos":[3317,3383]},{"content":"[in] The <ph id=\"ph1\">`IID`</ph> of the requested interface from <ph id=\"ph2\">`rclsid`</ph>.","pos":[3400,3456],"source":"[in] The `IID` of the requested interface from `rclsid`."},{"content":"Supported values are IID_ICorRuntimeHost or IID_ICLRRuntimeHost.","pos":[3457,3521]},{"content":"[out] The returned interface pointer to <ph id=\"ph1\">`riid`</ph>.","pos":[3537,3584],"source":"[out] The returned interface pointer to `riid`."},{"pos":[3593,3600],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3604,3742],"content":"If <ph id=\"ph1\">`pwszVersion`</ph> specifies a runtime version that does not exist, <ph id=\"ph2\">`CorBindToRuntimeEx`</ph> returns an HRESULT value of CLR_E_SHIM_RUNTIMELOAD.","source":"If `pwszVersion` specifies a runtime version that does not exist, `CorBindToRuntimeEx` returns an HRESULT value of CLR_E_SHIM_RUNTIMELOAD."},{"pos":[3751,3797],"content":"Execution Context and Flow of Windows Identity","linkify":"Execution Context and Flow of Windows Identity","nodes":[{"content":"Execution Context and Flow of Windows Identity","pos":[0,46]}]},{"content":"In version 1 of the CLR, the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object does not flow across asynchronous points such as new threads, thread pools, or timer callbacks.","pos":[3801,3981],"source":"In version 1 of the CLR, the <xref:System.Security.Principal.WindowsIdentity> object does not flow across asynchronous points such as new threads, thread pools, or timer callbacks."},{"content":"In version 2.0 of the CLR, an <ph id=\"ph1\">&lt;xref:System.Threading.ExecutionContext&gt;</ph> object wraps some information about the currently executing thread and flows it across any asynchronous point, but not across application domain boundaries.","pos":[3982,4209],"source":" In version 2.0 of the CLR, an <xref:System.Threading.ExecutionContext> object wraps some information about the currently executing thread and flows it across any asynchronous point, but not across application domain boundaries."},{"content":"Similarly, the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object also flows across any asynchronous point.","pos":[4210,4322],"source":" Similarly, the <xref:System.Security.Principal.WindowsIdentity> object also flows across any asynchronous point."},{"content":"Therefore, the current impersonation on the thread, if any, flows too.","pos":[4323,4393]},{"content":"You can alter the flow in two ways:","pos":[4400,4435]},{"content":"By modifying the <ph id=\"ph1\">&lt;xref:System.Threading.ExecutionContext&gt;</ph> settings to suppress the flow on a per-thread basis (see the <ph id=\"ph2\">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.SecurityContext.SuppressFlow%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Security.SecurityContext.SuppressFlowWindowsIdentity%2A&gt;</ph> methods).","pos":[4445,4761],"source":"By modifying the <xref:System.Threading.ExecutionContext> settings to suppress the flow on a per-thread basis (see the <xref:System.Threading.ExecutionContext.SuppressFlow%2A>, <xref:System.Security.SecurityContext.SuppressFlow%2A>, and <xref:System.Security.SecurityContext.SuppressFlowWindowsIdentity%2A> methods)."},{"content":"By changing the process default mode to the version 1 compatibility mode, where the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object does not flow across any asynchronous point, regardless of the <ph id=\"ph2\">&lt;xref:System.Threading.ExecutionContext&gt;</ph> settings on the current thread.","pos":[4771,5046],"source":"By changing the process default mode to the version 1 compatibility mode, where the <xref:System.Security.Principal.WindowsIdentity> object does not flow across any asynchronous point, regardless of the <xref:System.Threading.ExecutionContext> settings on the current thread."},{"content":"How you change the default mode depends on whether you use a managed executable or an unmanaged hosting interface to load the CLR:","pos":[5047,5177]},{"pos":[5191,5409],"content":"For managed executables, you must set the <ph id=\"ph1\">`enabled`</ph> attribute of the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&lt;</ph>legacyImpersonationPolicy&gt;<ept id=\"p1\">](../../../../docs/framework/configure-apps/file-schema/runtime/legacyimpersonationpolicy-element.md)</ept> element to <ph id=\"ph3\">`true`</ph>.","source":"For managed executables, you must set the `enabled` attribute of the [\\<legacyImpersonationPolicy>](../../../../docs/framework/configure-apps/file-schema/runtime/legacyimpersonationpolicy-element.md) element to `true`."},{"pos":[5423,5573],"content":"For unmanaged hosting interfaces, set the <ph id=\"ph1\">`STARTUP_LEGACY_IMPERSONATION`</ph> flag in the <ph id=\"ph2\">`flags`</ph> parameter when calling the <ph id=\"ph3\">`CorBindToRuntimeEx`</ph> function.","source":"For unmanaged hosting interfaces, set the `STARTUP_LEGACY_IMPERSONATION` flag in the `flags` parameter when calling the `CorBindToRuntimeEx` function."},{"content":"The version 1 compatibility mode applies to the entire process and to all the application domains in the process.","pos":[5584,5697]},{"pos":[5706,5713],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5717,5967],"content":"<bpt id=\"p1\">[</bpt>CorBindToRuntimeEx<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimeex-function.md)</ept> and <ph id=\"ph1\">`CorBindToRuntime`</ph> perform the same operation, but the <ph id=\"ph2\">`CorBindToRuntimeEx`</ph> function allows you to set flags to specify the behavior of the CLR.","source":"[CorBindToRuntimeEx](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimeex-function.md) and `CorBindToRuntime` perform the same operation, but the `CorBindToRuntimeEx` function allows you to set flags to specify the behavior of the CLR."},{"pos":[5976,5988],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[5992,6096],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[6103,6124],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[6131,6155],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> MSCorEE.dll","source":"**Library:** MSCorEE.dll"},{"pos":[6162,6270],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[6279,6287],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>CorBindToCurrentRuntime Function<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/corbindtocurrentruntime-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[6291,6412],"source":"[CorBindToCurrentRuntime Function](../../../../docs/framework/unmanaged-api/hosting/corbindtocurrentruntime-function.md) "},{"content":"<bpt id=\"p1\">[</bpt>CorBindToRuntimeByCfg Function<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimebycfg-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[6416,6533],"source":"[CorBindToRuntimeByCfg Function](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimebycfg-function.md) "},{"content":"<bpt id=\"p1\">[</bpt>CorBindToRuntimeEx Function<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimeex-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[6537,6648],"source":"[CorBindToRuntimeEx Function](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimeex-function.md) "},{"content":"<bpt id=\"p1\">[</bpt>CorBindToRuntimeHost Function<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimehost-function.md)</ept><ph id=\"ph1\"> </ph>","pos":[6652,6767],"source":"[CorBindToRuntimeHost Function](../../../../docs/framework/unmanaged-api/hosting/corbindtoruntimehost-function.md) "},{"content":"<bpt id=\"p1\">[</bpt>ICorRuntimeHost Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/icorruntimehost-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[6771,6878],"source":"[ICorRuntimeHost Interface](../../../../docs/framework/unmanaged-api/hosting/icorruntimehost-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>Deprecated CLR Hosting Functions<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/deprecated-clr-hosting-functions.md)</ept>","pos":[6882,7002],"source":"[Deprecated CLR Hosting Functions](../../../../docs/framework/unmanaged-api/hosting/deprecated-clr-hosting-functions.md)"}]}