{"content":"---\ntitle: \"ISymUnmanagedReader2::GetMethodByVersionPreRemap Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedReader2.GetMethodByVersionPreRemap\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedReader2::GetMethodByVersionPreRemap\"\nhelpviewer_keywords: \n  - \"GetMethodByVersionPreRemap method [.NET Framework debugging]\"\n  - \"ISymUnmanagedReader2::GetMethodByVersionPreRemap method [.NET Framework debugging]\"\nms.assetid: 0d144ed4-bdb0-4cac-960c-cb90f4dca173\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ISymUnmanagedReader2::GetMethodByVersionPreRemap Method\nGets a symbol reader method, given a method token and an edit-and-continue version number. Version numbers start at 1 and are incremented each time the method is changed as a result of an edit-and-continue operation.  \n  \n## Syntax  \n  \n```  \nHRESULT GetMethodByVersionPreRemap(  \n    [in]  mdMethodDef token,  \n    [in]  int version,  \n    [out, retval] ISymUnmanagedMethod** pRetVal);  \n```  \n  \n## Parameters  \n `token`  \n [in] The method metadata token.  \n  \n `version`  \n [in] The method version.  \n  \n `pRetVal`  \n [out] A pointer to the returned [ISymUnmanagedMethod](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md) interface.  \n  \n## Return Value  \n S_OK if the method succeeds; otherwise, E_FAIL or some other error code.  \n  \n## Requirements  \n **Header:** CorSym.idl. CorSym.h  \n  \n## See also\n\n- [ISymUnmanagedReader2 Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader2-interface.md)\n","nodes":[{"pos":[4,573],"embed":true,"restype":"x-metadata","content":"title: \"ISymUnmanagedReader2::GetMethodByVersionPreRemap Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ISymUnmanagedReader2.GetMethodByVersionPreRemap\"\napi_location: \n  - \"diasymreader.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ISymUnmanagedReader2::GetMethodByVersionPreRemap\"\nhelpviewer_keywords: \n  - \"GetMethodByVersionPreRemap method [.NET Framework debugging]\"\n  - \"ISymUnmanagedReader2::GetMethodByVersionPreRemap method [.NET Framework debugging]\"\nms.assetid: 0d144ed4-bdb0-4cac-960c-cb90f4dca173\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ISymUnmanagedReader2::GetMethodByVersionPreRemap Method","nodes":[{"pos":[0,55],"content":"ISymUnmanagedReader2::GetMethodByVersionPreRemap Method","nodes":[{"content":"ISymUnmanagedReader2::GetMethodByVersionPreRemap Method","pos":[0,55]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[580,635],"content":"ISymUnmanagedReader2::GetMethodByVersionPreRemap Method","linkify":"ISymUnmanagedReader2::GetMethodByVersionPreRemap Method","nodes":[{"content":"ISymUnmanagedReader2::GetMethodByVersionPreRemap Method","pos":[0,55]}]},{"content":"Gets a symbol reader method, given a method token and an edit-and-continue version number.","pos":[636,726]},{"content":"Version numbers start at 1 and are incremented each time the method is changed as a result of an edit-and-continue operation.","pos":[727,852]},{"pos":[861,867],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1037,1047],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The method metadata token.","pos":[1062,1093]},{"content":"[in] The method version.","pos":[1113,1137]},{"content":"[out] A pointer to the returned <bpt id=\"p1\">[</bpt>ISymUnmanagedMethod<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md)</ept> interface.","pos":[1157,1308],"source":"[out] A pointer to the returned [ISymUnmanagedMethod](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md) interface."},{"pos":[1317,1329],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"S_OK if the method succeeds; otherwise, E_FAIL or some other error code.","pos":[1333,1405]},{"pos":[1414,1426],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorSym.idl.","pos":[1430,1453],"source":"**Header:** CorSym.idl."},{"content":"CorSym.h","pos":[1454,1462]},{"pos":[1471,1479],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1483,1603],"content":"<bpt id=\"p1\">[</bpt>ISymUnmanagedReader2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader2-interface.md)</ept>","source":"[ISymUnmanagedReader2 Interface](../../../../docs/framework/unmanaged-api/diagnostics/isymunmanagedreader2-interface.md)"}]}