<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-read-from-a-text-file.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">560453a81124a3ee52a2ffd794ddac026c7394a5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\file-system\how-to-read-from-a-text-file.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68ae7cf308f497ad761ce8f66d8e8a621c31f230</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb49b8a3e77d72ba669d58d602a47cb25c9f74ae</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Read From a Text File - C# Programming Guide</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Read From a Text File (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example reads the contents of a text file by using the static methods <ph id="ph1">&lt;xref:System.IO.File.ReadAllText%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.File.ReadAllLines%2A&gt;</ph> from the <ph id="ph3">&lt;xref:System.IO.File?displayProperty=nameWithType&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For an example that uses <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph>, see <bpt id="p1">[</bpt>How to: Read a Text File One Line at a Time<ept id="p1">](../../../csharp/programming-guide/file-system/how-to-read-a-text-file-one-line-at-a-time.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The files that are used in this example are created in the topic <bpt id="p1">[</bpt>How to: Write to a Text File<ept id="p1">](../../../csharp/programming-guide/file-system/how-to-write-to-a-text-file.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Copy the code and paste it into a C# console application.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you are not using the text files from <bpt id="p1">[</bpt>How to: Write to a Text File<ept id="p1">](../../../csharp/programming-guide/file-system/how-to-write-to-a-text-file.md)</ept>, replace the argument to <ph id="ph1">`ReadAllText`</ph> and <ph id="ph2">`ReadAllLines`</ph> with the appropriate path and file name on your computer.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Robust Programming</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following conditions may cause an exception:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The file doesn't exist or doesn't exist at the specified location.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Check the path and the spelling of the file name.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>.NET Framework Security</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Do not rely on the name of a file to determine the contents of the file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, the file <ph id="ph1">`myFile.cs`</ph> might not be a C# source file.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>File System and the Registry (C# Programming Guide)<ept id="p1">](../../../csharp/programming-guide/file-system/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>