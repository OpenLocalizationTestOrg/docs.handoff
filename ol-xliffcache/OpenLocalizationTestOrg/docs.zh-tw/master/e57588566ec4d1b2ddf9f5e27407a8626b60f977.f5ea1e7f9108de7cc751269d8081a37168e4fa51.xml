{"content":"---\ntitle: \"You must reference at least one range variable on both sides of the &#39;Equals&#39; operator | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc36622\"\n  - \"bc36622\"\nhelpviewer_keywords: \n  - \"BC36622\"\nms.assetid: 8d301227-131d-4977-b3ff-1fc4e427f8fa\ncaps.latest.revision: 4\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# You must reference at least one range variable on both sides of the &#39;Equals&#39; operator\nYou must reference at least one range variable on both sides of the 'Equals' operator. Range variable(s) \\<variable(s)> must appear on one side of the 'Equals' operator, and range variable(s) \\<variable(s)> must appear on the other.  \n  \n Range variables identified for collections to be joined in a LINQ query must be on opposite sides of the `Equals` operator, depending on the collection they are identified for. That is, range variables identified for one of the collections being joined must be on the opposite side of the `Equals` operator from range variables for the other collection being joined. Range variables from separate collections cannot be mixed on the same side of the `Equals` operator.  \n  \n At least one variable from each collection being joined must be referenced on each side of the `Equals` operator.  \n  \n **Error ID:** BC36622  \n  \n## See Also  \n [Introduction to LINQ in Visual Basic](../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)   \n [LINQ](../../visual-basic/programming-guide/language-features/linq/index.md)   \n [Join Clause](../../visual-basic/language-reference/queries/join-clause.md)   \n [Group Join Clause](../../visual-basic/language-reference/queries/group-join-clause.md)   \n [From Clause](../../visual-basic/language-reference/queries/from-clause.md)   \n [Select Clause](../../visual-basic/language-reference/queries/select-clause.md)","nodes":[{"pos":[4,631],"nodes":[{"content":"You must reference at least one range variable on both sides of the &#39;Equals&#39; operator | Microsoft Docs","nodes":[{"pos":[0,110],"content":"You must reference at least one range variable on both sides of the &#39;Equals&#39; operator | Microsoft Docs","nodes":[{"content":"You must reference at least one range variable on both sides of the &amp;#39;Equals&amp;#39; operator | Microsoft Docs","pos":[0,110],"source":"You must reference at least one range variable on both sides of the &#39;Equals&#39; operator | Microsoft Docs"}]}],"pos":[6,119],"yaml":true}],"content":"title: \"You must reference at least one range variable on both sides of the &#39;Equals&#39; operator | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc36622\"\n  - \"bc36622\"\nhelpviewer_keywords: \n  - \"BC36622\"\nms.assetid: 8d301227-131d-4977-b3ff-1fc4e427f8fa\ncaps.latest.revision: 4\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","yamlblock":true},{"pos":[638,731],"content":"You must reference at least one range variable on both sides of the &#39;Equals&#39; operator","linkify":"You must reference at least one range variable on both sides of the &#39;Equals&#39; operator","nodes":[{"content":"You must reference at least one range variable on both sides of the &amp;#39;Equals&amp;#39; operator","pos":[0,93],"source":"You must reference at least one range variable on both sides of the &#39;Equals&#39; operator"}]},{"content":"You must reference at least one range variable on both sides of the 'Equals' operator.","pos":[732,818]},{"content":"Range variable(s) <ph id=\"ph1\">\\&lt;</ph>variable(s)&gt; must appear on one side of the 'Equals' operator, and range variable(s) <ph id=\"ph2\">\\&lt;</ph>variable(s)&gt; must appear on the other.","pos":[819,964],"source":" Range variable(s) \\<variable(s)> must appear on one side of the 'Equals' operator, and range variable(s) \\<variable(s)> must appear on the other."},{"content":"Range variables identified for collections to be joined in a LINQ query must be on opposite sides of the <ph id=\"ph1\">`Equals`</ph> operator, depending on the collection they are identified for.","pos":[971,1147],"source":"Range variables identified for collections to be joined in a LINQ query must be on opposite sides of the `Equals` operator, depending on the collection they are identified for."},{"content":"That is, range variables identified for one of the collections being joined must be on the opposite side of the <ph id=\"ph1\">`Equals`</ph> operator from range variables for the other collection being joined.","pos":[1148,1337],"source":" That is, range variables identified for one of the collections being joined must be on the opposite side of the `Equals` operator from range variables for the other collection being joined."},{"content":"Range variables from separate collections cannot be mixed on the same side of the <ph id=\"ph1\">`Equals`</ph> operator.","pos":[1338,1438],"source":" Range variables from separate collections cannot be mixed on the same side of the `Equals` operator."},{"pos":[1445,1558],"content":"At least one variable from each collection being joined must be referenced on each side of the <ph id=\"ph1\">`Equals`</ph> operator.","source":"At least one variable from each collection being joined must be referenced on each side of the `Equals` operator."},{"pos":[1565,1586],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36622","source":"**Error ID:** BC36622"},{"pos":[1595,1603],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Introduction to LINQ in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id=\"ph1\"> </ph>","pos":[1607,1731],"source":"[Introduction to LINQ in Visual Basic](../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md) "},{"content":"<bpt id=\"p1\">[</bpt>LINQ<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/linq/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1735,1812],"source":"[LINQ](../../visual-basic/programming-guide/language-features/linq/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Join Clause<ept id=\"p1\">](../../visual-basic/language-reference/queries/join-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[1816,1892],"source":"[Join Clause](../../visual-basic/language-reference/queries/join-clause.md) "},{"content":"<bpt id=\"p1\">[</bpt>Group Join Clause<ept id=\"p1\">](../../visual-basic/language-reference/queries/group-join-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[1896,1984],"source":"[Group Join Clause](../../visual-basic/language-reference/queries/group-join-clause.md) "},{"content":"<bpt id=\"p1\">[</bpt>From Clause<ept id=\"p1\">](../../visual-basic/language-reference/queries/from-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[1988,2064],"source":"[From Clause](../../visual-basic/language-reference/queries/from-clause.md) "},{"content":"<bpt id=\"p1\">[</bpt>Select Clause<ept id=\"p1\">](../../visual-basic/language-reference/queries/select-clause.md)</ept>","pos":[2068,2147],"source":"[Select Clause](../../visual-basic/language-reference/queries/select-clause.md)"}]}