{"content":"---\ntitle: \"How to: Display Error Icons for Form Validation with the Windows Forms ErrorProvider Component | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"errors [Windows Forms], displaying to users\"\n  - \"error icons\"\n  - \"ErrorProvider component [Windows Forms], displaying error icons\"\n  - \"error messages, displaying icons\"\nms.assetid: 3b681a32-9db4-497b-a34b-34980eabee46\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Display Error Icons for Form Validation with the Windows Forms ErrorProvider Component\nYou can use a Windows Forms <xref:System.Windows.Forms.ErrorProvider> component to display an error icon when the user enters invalid data. You must have at least two controls on the form in order to tab between them and thereby invoke the validation code.  \n  \n### To display an error icon when a control's value is invalid  \n  \n1.  Add two controls — for example, text boxes — to a Windows Form.  \n  \n2.  Add an <xref:System.Windows.Forms.ErrorProvider> component to the form.  \n  \n3.  Select the first control and add code to its <xref:System.Windows.Forms.Control.Validating> event handler. In order for this code to run properly, the procedure must be connected to the event. For more information, see [How to: Create Event Handlers at Run Time for Windows Forms](../../../../docs/framework/winforms/how-to-create-event-handlers-at-run-time-for-windows-forms.md).  \n  \n     The following code tests the validity of the data the user has entered; if the data is invalid, the <xref:System.Windows.Forms.ErrorProvider.SetError%2A> method is called. The first argument of the <xref:System.Windows.Forms.ErrorProvider.SetError%2A> method specifies which control to display the icon next to. The second argument is the error text to display.  \n  \n    ```vb  \n    Private Sub TextBox1_Validating(ByVal Sender As Object, _  \n       ByVal e As System.ComponentModel.CancelEventArgs) Handles _  \n       TextBox1.Validating  \n          If Not IsNumeric(TextBox1.Text) Then  \n             ErrorProvider1.SetError(TextBox1, \"Not a numeric value.\")  \n          Else  \n             ' Clear the error.  \n             ErrorProvider1.SetError(TextBox1, \"\")  \n          End If  \n    End Sub  \n  \n    ```  \n  \n    ```csharp  \n    protected void textBox1_Validating (object sender,  \n       System.ComponentModel.CancelEventArgs e)  \n    {  \n       try  \n       {  \n          int x = Int32.Parse(textBox1.Text);  \n          errorProvider1.SetError(textBox1, \"\");  \n       }  \n       catch (Exception ex)  \n       {  \n          errorProvider1.SetError(textBox1, \"Not an integer value.\");  \n       }  \n    }  \n  \n    ```  \n  \n    ```cpp  \n    private:  \n       System::Void textBox1_Validating(System::Object ^  sender,  \n          System::ComponentModel::CancelEventArgs ^  e)  \n       {  \n          try  \n          {  \n             int x = Int32::Parse(textBox1->Text);  \n             errorProvider1->SetError(textBox1, \"\");  \n          }  \n          catch (System::Exception ^ ex)  \n          {  \n             errorProvider1->SetError(textBox1, \"Not an integer value.\");  \n          }  \n       }  \n    ```  \n  \n     ([!INCLUDE[csprcs](../../../../includes/csprcs-md.md)], [!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]) Place the following code in the form's constructor to register the event handler.  \n  \n    ```csharp  \n    this.textBox1.Validating += new  \n    System.ComponentModel.CancelEventHandler(this.textBox1_Validating);  \n  \n    ```  \n  \n    ```cpp  \n    this->textBox1->Validating += gcnew  \n       System::ComponentModel::CancelEventHandler  \n       (this, &Form1::textBox1_Validating);  \n    ```  \n  \n4.  Run the project. Type invalid (in this example, non-numeric) data into the first control, and then tab to the second. When the error icon is displayed, point at it with the mouse pointer to see the error text.  \n  \n## See Also  \n <xref:System.Windows.Forms.ErrorProvider.SetError%2A>   \n [ErrorProvider Component Overview](../../../../docs/framework/winforms/controls/errorprovider-component-overview-windows-forms.md)   \n [How to: View Errors Within a DataSet with the Windows Forms ErrorProvider Component](../../../../docs/framework/winforms/controls/view-errors-within-a-dataset-with-wf-errorprovider-component.md)","nodes":[{"pos":[12,123],"content":"How to: Display Error Icons for Form Validation with the Windows Forms ErrorProvider Component | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Display Error Icons for Form Validation with the Windows Forms ErrorProvider Component | Microsoft Docs","pos":[0,111]}]},{"pos":[660,754],"content":"How to: Display Error Icons for Form Validation with the Windows Forms ErrorProvider Component","linkify":"How to: Display Error Icons for Form Validation with the Windows Forms ErrorProvider Component","nodes":[{"content":"How to: Display Error Icons for Form Validation with the Windows Forms ErrorProvider Component","pos":[0,94]}]},{"content":"You can use a Windows Forms <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> component to display an error icon when the user enters invalid data.","pos":[755,894],"source":"You can use a Windows Forms <xref:System.Windows.Forms.ErrorProvider> component to display an error icon when the user enters invalid data."},{"content":"You must have at least two controls on the form in order to tab between them and thereby invoke the validation code.","pos":[895,1011]},{"pos":[1021,1079],"content":"To display an error icon when a control's value is invalid","linkify":"To display an error icon when a control's value is invalid","nodes":[{"content":"To display an error icon when a control's value is invalid","pos":[0,58]}]},{"content":"Add two controls — for example, text boxes — to a Windows Form.","pos":[1089,1152]},{"content":"Add an <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> component to the form.","pos":[1162,1233],"source":"Add an <xref:System.Windows.Forms.ErrorProvider> component to the form."},{"content":"Select the first control and add code to its <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event handler.","pos":[1243,1349],"source":"Select the first control and add code to its <xref:System.Windows.Forms.Control.Validating> event handler."},{"content":"In order for this code to run properly, the procedure must be connected to the event.","pos":[1350,1435]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Create Event Handlers at Run Time for Windows Forms<ept id=\"p1\">](../../../../docs/framework/winforms/how-to-create-event-handlers-at-run-time-for-windows-forms.md)</ept>.","pos":[1436,1623],"source":" For more information, see [How to: Create Event Handlers at Run Time for Windows Forms](../../../../docs/framework/winforms/how-to-create-event-handlers-at-run-time-for-windows-forms.md)."},{"content":"The following code tests the validity of the data the user has entered; if the data is invalid, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ErrorProvider.SetError%2A&gt;</ph> method is called.","pos":[1634,1805],"source":"The following code tests the validity of the data the user has entered; if the data is invalid, the <xref:System.Windows.Forms.ErrorProvider.SetError%2A> method is called."},{"content":"The first argument of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ErrorProvider.SetError%2A&gt;</ph> method specifies which control to display the icon next to.","pos":[1806,1945],"source":" The first argument of the <xref:System.Windows.Forms.ErrorProvider.SetError%2A> method specifies which control to display the icon next to."},{"content":"The second argument is the error text to display.","pos":[1946,1995]},{"pos":[3356,3548],"content":"(<ph id=\"ph1\">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph>, <ph id=\"ph2\">[!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]</ph>) Place the following code in the form's constructor to register the event handler.","source":"([!INCLUDE[csprcs](../../../../includes/csprcs-md.md)], [!INCLUDE[vcprvc](../../../../includes/vcprvc-md.md)]) Place the following code in the form's constructor to register the event handler."},{"content":"Run the project.","pos":[3868,3884]},{"content":"Type invalid (in this example, non-numeric) data into the first control, and then tab to the second.","pos":[3885,3985]},{"content":"When the error icon is displayed, point at it with the mouse pointer to see the error text.","pos":[3986,4077]},{"pos":[4086,4094],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.ErrorProvider.SetError%2A&gt;</ph>","pos":[4098,4151],"source":"<xref:System.Windows.Forms.ErrorProvider.SetError%2A> "},{"content":"<bpt id=\"p1\"> [</bpt>ErrorProvider Component Overview<ept id=\"p1\">](../../../../docs/framework/winforms/controls/errorprovider-component-overview-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[4155,4287],"source":" [ErrorProvider Component Overview](../../../../docs/framework/winforms/controls/errorprovider-component-overview-windows-forms.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: View Errors Within a DataSet with the Windows Forms ErrorProvider Component<ept id=\"p1\">](../../../../docs/framework/winforms/controls/view-errors-within-a-dataset-with-wf-errorprovider-component.md)</ept>","pos":[4290,4486],"source":" [How to: View Errors Within a DataSet with the Windows Forms ErrorProvider Component](../../../../docs/framework/winforms/controls/view-errors-within-a-dataset-with-wf-errorprovider-component.md)"}]}