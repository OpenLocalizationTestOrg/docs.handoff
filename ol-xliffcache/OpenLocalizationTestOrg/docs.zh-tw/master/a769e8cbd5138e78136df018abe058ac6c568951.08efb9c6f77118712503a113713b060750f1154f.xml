{"content":"---\ntitle: \"Commands and Parameters\"\nms.date: \"03/30/2017\"\nms.assetid: b623f810-d871-49a5-b0f5-078cc3c34db6\n---\n# Commands and Parameters\nAfter establishing a connection to a data source, you can execute commands and return results from the data source using a <xref:System.Data.Common.DbCommand> object. You can create a command using one of the command constructors for the .NET Framework data provider you are working with. Constructors can take optional arguments, such as an SQL statement to execute at the data source, a <xref:System.Data.Common.DbConnection> object, or a <xref:System.Data.Common.DbTransaction> object. You can also configure those objects as properties of the command. You can also create a command for a particular connection using the <xref:System.Data.Common.DbConnection.CreateCommand%2A> method of a `DbConnection` object. The SQL statement being executed by the command can be configured using the <xref:System.Data.Common.DbCommand.CommandText%2A> property.  \n  \n Each .NET Framework data provider included with the .NET Framework has a `Command` object. The .NET Framework Data Provider for OLE DB includes an <xref:System.Data.OleDb.OleDbCommand> object, the .NET Framework Data Provider for SQL Server includes a <xref:System.Data.SqlClient.SqlCommand> object, the .NET Framework Data Provider for ODBC includes an <xref:System.Data.Odbc.OdbcCommand> object, and the .NET Framework Data Provider for Oracle includes an <xref:System.Data.OracleClient.OracleCommand> object.  \n  \n## In This Section  \n [Executing a Command](../../../../docs/framework/data/adonet/executing-a-command.md)  \n Describes the ADO.NET `Command` object and how to use it to execute queries and commands against a data source.  \n  \n [Configuring Parameters and Parameter Data Types](../../../../docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)  \n Describes working with `Command` parameters, including direction, data types, and parameter syntax.  \n  \n [Generating Commands with CommandBuilders](../../../../docs/framework/data/adonet/generating-commands-with-commandbuilders.md)  \n Describes how to use command builders to automatically generate INSERT, UPDATE, and DELETE commands for a `DataAdapter` that has a single-table SELECT command.  \n  \n [Obtaining a Single Value from a Database](../../../../docs/framework/data/adonet/obtaining-a-single-value-from-a-database.md)  \n Describes how to use the `ExecuteScalar` method of a `Command` object to return a single value from a database query.  \n  \n [Using Commands to Modify Data](../../../../docs/framework/data/adonet/using-commands-to-modify-data.md)  \n Describes how to use a data provider to execute stored procedures or data definition language (DDL) statements.  \n  \n## See also\n\n- [DataAdapters and DataReaders](../../../../docs/framework/data/adonet/dataadapters-and-datareaders.md)\n- [DataSets, DataTables, and DataViews](../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)\n- [Connecting to a Data Source](../../../../docs/framework/data/adonet/connecting-to-a-data-source.md)\n- [ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)\n","nodes":[{"pos":[4,107],"embed":true,"restype":"x-metadata","content":"title: \"Commands and Parameters\"\nms.date: \"03/30/2017\"\nms.assetid: b623f810-d871-49a5-b0f5-078cc3c34db6","nodes":[{"content":"Commands and Parameters","nodes":[{"pos":[0,23],"content":"Commands and Parameters","nodes":[{"content":"Commands and Parameters","pos":[0,23]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[114,137],"content":"Commands and Parameters","linkify":"Commands and Parameters","nodes":[{"content":"Commands and Parameters","pos":[0,23]}]},{"content":"After establishing a connection to a data source, you can execute commands and return results from the data source using a <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object.","pos":[138,304],"source":"After establishing a connection to a data source, you can execute commands and return results from the data source using a <xref:System.Data.Common.DbCommand> object."},{"content":"You can create a command using one of the command constructors for the .NET Framework data provider you are working with.","pos":[305,426]},{"content":"Constructors can take optional arguments, such as an SQL statement to execute at the data source, a <ph id=\"ph1\">&lt;xref:System.Data.Common.DbConnection&gt;</ph> object, or a <ph id=\"ph2\">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> object.","pos":[427,626],"source":" Constructors can take optional arguments, such as an SQL statement to execute at the data source, a <xref:System.Data.Common.DbConnection> object, or a <xref:System.Data.Common.DbTransaction> object."},{"content":"You can also configure those objects as properties of the command.","pos":[627,693]},{"content":"You can also create a command for a particular connection using the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbConnection.CreateCommand%2A&gt;</ph> method of a <ph id=\"ph2\">`DbConnection`</ph> object.","pos":[694,852],"source":" You can also create a command for a particular connection using the <xref:System.Data.Common.DbConnection.CreateCommand%2A> method of a `DbConnection` object."},{"content":"The SQL statement being executed by the command can be configured using the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommand.CommandText%2A&gt;</ph> property.","pos":[853,989],"source":" The SQL statement being executed by the command can be configured using the <xref:System.Data.Common.DbCommand.CommandText%2A> property."},{"content":"Each .NET Framework data provider included with the .NET Framework has a <ph id=\"ph1\">`Command`</ph> object.","pos":[996,1086],"source":"Each .NET Framework data provider included with the .NET Framework has a `Command` object."},{"content":"The .NET Framework Data Provider for OLE DB includes an <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph> object, the .NET Framework Data Provider for SQL Server includes a <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object, the .NET Framework Data Provider for ODBC includes an <ph id=\"ph3\">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object, and the .NET Framework Data Provider for Oracle includes an <ph id=\"ph4\">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object.","pos":[1087,1507],"source":" The .NET Framework Data Provider for OLE DB includes an <xref:System.Data.OleDb.OleDbCommand> object, the .NET Framework Data Provider for SQL Server includes a <xref:System.Data.SqlClient.SqlCommand> object, the .NET Framework Data Provider for ODBC includes an <xref:System.Data.Odbc.OdbcCommand> object, and the .NET Framework Data Provider for Oracle includes an <xref:System.Data.OracleClient.OracleCommand> object."},{"pos":[1516,1531],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Executing a Command<ept id=\"p1\">](../../../../docs/framework/data/adonet/executing-a-command.md)</ept>","pos":[1535,1619],"source":"[Executing a Command](../../../../docs/framework/data/adonet/executing-a-command.md)"},{"content":"Describes the ADO.NET <ph id=\"ph1\">`Command`</ph> object and how to use it to execute queries and commands against a data source.","pos":[1623,1734],"source":"Describes the ADO.NET `Command` object and how to use it to execute queries and commands against a data source."},{"content":"<bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](../../../../docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>","pos":[1741,1881],"source":"[Configuring Parameters and Parameter Data Types](../../../../docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)"},{"content":"Describes working with <ph id=\"ph1\">`Command`</ph> parameters, including direction, data types, and parameter syntax.","pos":[1885,1984],"source":"Describes working with `Command` parameters, including direction, data types, and parameter syntax."},{"content":"<bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](../../../../docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>","pos":[1991,2117],"source":"[Generating Commands with CommandBuilders](../../../../docs/framework/data/adonet/generating-commands-with-commandbuilders.md)"},{"content":"Describes how to use command builders to automatically generate INSERT, UPDATE, and DELETE commands for a <ph id=\"ph1\">`DataAdapter`</ph> that has a single-table SELECT command.","pos":[2121,2280],"source":"Describes how to use command builders to automatically generate INSERT, UPDATE, and DELETE commands for a `DataAdapter` that has a single-table SELECT command."},{"content":"<bpt id=\"p1\">[</bpt>Obtaining a Single Value from a Database<ept id=\"p1\">](../../../../docs/framework/data/adonet/obtaining-a-single-value-from-a-database.md)</ept>","pos":[2287,2413],"source":"[Obtaining a Single Value from a Database](../../../../docs/framework/data/adonet/obtaining-a-single-value-from-a-database.md)"},{"content":"Describes how to use the <ph id=\"ph1\">`ExecuteScalar`</ph> method of a <ph id=\"ph2\">`Command`</ph> object to return a single value from a database query.","pos":[2417,2534],"source":"Describes how to use the `ExecuteScalar` method of a `Command` object to return a single value from a database query."},{"content":"<bpt id=\"p1\">[</bpt>Using Commands to Modify Data<ept id=\"p1\">](../../../../docs/framework/data/adonet/using-commands-to-modify-data.md)</ept>","pos":[2541,2645],"source":"[Using Commands to Modify Data](../../../../docs/framework/data/adonet/using-commands-to-modify-data.md)"},{"content":"Describes how to use a data provider to execute stored procedures or data definition language (DDL) statements.","pos":[2649,2760]},{"pos":[2769,2777],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2781,2883],"content":"<bpt id=\"p1\">[</bpt>DataAdapters and DataReaders<ept id=\"p1\">](../../../../docs/framework/data/adonet/dataadapters-and-datareaders.md)</ept>","source":"[DataAdapters and DataReaders](../../../../docs/framework/data/adonet/dataadapters-and-datareaders.md)"},{"pos":[2886,2999],"content":"<bpt id=\"p1\">[</bpt>DataSets, DataTables, and DataViews<ept id=\"p1\">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>","source":"[DataSets, DataTables, and DataViews](../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)"},{"pos":[3002,3102],"content":"<bpt id=\"p1\">[</bpt>Connecting to a Data Source<ept id=\"p1\">](../../../../docs/framework/data/adonet/connecting-to-a-data-source.md)</ept>","source":"[Connecting to a Data Source](../../../../docs/framework/data/adonet/connecting-to-a-data-source.md)"},{"pos":[3105,3209],"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept>","source":"[ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)"}]}