{"content":"---\ntitle: \"Walkthrough: Creating Your First Touch Application\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"creating a touch-sensitive application [WPF]\"\n  - \"touchscreen applications [WPF], creating\"\n  - \"touch-sensitive applications [WPF], creating\"\n  - \"creating a touchscreen application [WPF]\"\nms.assetid: d69e602e-9a25-4e24-950b-e89eaa2a906b\n---\n# Walkthrough: Creating Your First Touch Application\n[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] enables applications to respond to touch. For example, you can interact with an application by using one or more fingers on a touch-sensitive device, such as a touchscreen This walkthrough creates an application that enables the user to move, resize, or rotate a single object by using touch.  \n  \n## Prerequisites  \n You need the following components to complete this walkthrough:  \n  \n-   Visual Studio.  \n  \n-   A device that accepts touch input, such as a touchscreen, that supports Windows Touch.  \n  \n Additionally, you should have a basic understanding of how to create an application in [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)], especially how to subscribe to and handle an event. For more information, see [Walkthrough: My first WPF desktop application](../getting-started/walkthrough-my-first-wpf-desktop-application.md).  \n  \n## Creating the Application  \n  \n#### To create the application  \n  \n1.  Create a new WPF Application project in Visual Basic or Visual C# named `BasicManipulation`. For more information, see [Walkthrough: My first WPF desktop application](../getting-started/walkthrough-my-first-wpf-desktop-application.md).  \n  \n2.  Replace the contents of MainWindow.xaml with the following XAML.  \n  \n     This markup creates a simple application that contains a red <xref:System.Windows.Shapes.Rectangle> on a <xref:System.Windows.Controls.Canvas>. The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the <xref:System.Windows.Shapes.Rectangle> is set to true so that it will receive manipulation events. The application subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events. These events contain the logic to move the <xref:System.Windows.Shapes.Rectangle> when the user manipulates it.  \n  \n     [!code-xaml[BasicManipulation#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)]  \n  \n3.  If you are using Visual Basic, in the first line of MainWindow.xaml, replace `x:Class=\"BasicManipulation.MainWindow\"` with `x:Class=\"MainWindow\"`.  \n  \n4.  In the `MainWindow` class, add the following <xref:System.Windows.UIElement.ManipulationStarting> event handler.  \n  \n     The <xref:System.Windows.UIElement.ManipulationStarting> event occurs when [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] detects that touch input begins to manipulate an object. The code specifies that the position of the manipulation should be relative to the <xref:System.Windows.Window> by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.  \n  \n     [!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]\n     [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]\n\n5.  In the `MainWindow` class, add the following <xref:System.Windows.Input.ManipulationDelta> event handler.\n\n     The <xref:System.Windows.Input.ManipulationDelta> event occurs when the touch input changes position and can occur multiple times during a manipulation. The event can also occur after a finger is raised. For example, if the user drags a finger across a screen, the <xref:System.Windows.Input.ManipulationDelta> event occurs multiple times as the finger moves. When the user raises a finger from the screen, the <xref:System.Windows.Input.ManipulationDelta> event keeps occurring to simulate inertia.\n\n     The code applies the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> to the <xref:System.Windows.UIElement.RenderTransform%2A> of the <xref:System.Windows.Shapes.Rectangle> to move it as the user moves the touch input. It also checks whether the <xref:System.Windows.Shapes.Rectangle> is outside the bounds of the <xref:System.Windows.Window> when the event occurs during inertia. If so, the application calls the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A?displayProperty=nameWithType> method to end the manipulation.\n\n     [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\n     [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]\n\n6.  In the `MainWindow` class, add the following <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler.\n\n     The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user raises all fingers from the screen. The code sets the initial velocity and deceleration for the movement, expansion, and rotation of the rectangle.\n\n     [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]\n     [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]\n\n7.  Build and run the project.\n\n     You should see a red square appear in the window.\n\n## Testing the Application\n To test the application, try the following manipulations. Note that you can do more than one of the following at the same time.\n\n-   To move the <xref:System.Windows.Shapes.Rectangle>, put a finger on the <xref:System.Windows.Shapes.Rectangle> and move the finger across the screen.\n\n-   To resize the <xref:System.Windows.Shapes.Rectangle>, put two fingers on the <xref:System.Windows.Shapes.Rectangle> and move the fingers closer together or farther apart from each other.\n\n-   To rotate the <xref:System.Windows.Shapes.Rectangle>, put two fingers on the <xref:System.Windows.Shapes.Rectangle> and rotate the fingers around each other.\n\n To cause inertia, quickly raise your fingers from the screen as you perform the previous manipulations. The <xref:System.Windows.Shapes.Rectangle> will continue to move, resize, or rotate for a few seconds before it stops.\n\n## See also\n\n- <xref:System.Windows.UIElement.ManipulationStarting?displayProperty=nameWithType>\n- <xref:System.Windows.UIElement.ManipulationDelta?displayProperty=nameWithType>\n- <xref:System.Windows.UIElement.ManipulationInertiaStarting?displayProperty=nameWithType>","nodes":[{"pos":[4,384],"embed":true,"restype":"x-metadata","content":"title: \"Walkthrough: Creating Your First Touch Application\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"creating a touch-sensitive application [WPF]\"\n  - \"touchscreen applications [WPF], creating\"\n  - \"touch-sensitive applications [WPF], creating\"\n  - \"creating a touchscreen application [WPF]\"\nms.assetid: d69e602e-9a25-4e24-950b-e89eaa2a906b","nodes":[{"content":"Walkthrough: Creating Your First Touch Application","nodes":[{"pos":[0,50],"content":"Walkthrough: Creating Your First Touch Application","nodes":[{"content":"Walkthrough: Creating Your First Touch Application","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[391,441],"content":"Walkthrough: Creating Your First Touch Application","linkify":"Walkthrough: Creating Your First Touch Application","nodes":[{"content":"Walkthrough: Creating Your First Touch Application","pos":[0,50]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> enables applications to respond to touch.","pos":[442,565],"source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] enables applications to respond to touch."},{"content":"For example, you can interact with an application by using one or more fingers on a touch-sensitive device, such as a touchscreen This walkthrough creates an application that enables the user to move, resize, or rotate a single object by using touch.","pos":[566,816]},{"pos":[825,838],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"You need the following components to complete this walkthrough:","pos":[842,905]},{"content":"Visual Studio.","pos":[915,929]},{"content":"A device that accepts touch input, such as a touchscreen, that supports Windows Touch.","pos":[939,1025]},{"content":"Additionally, you should have a basic understanding of how to create an application in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph>, especially how to subscribe to and handle an event.","pos":[1032,1253],"source":"Additionally, you should have a basic understanding of how to create an application in [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)], especially how to subscribe to and handle an event."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: My first WPF desktop application<ept id=\"p1\">](../getting-started/walkthrough-my-first-wpf-desktop-application.md)</ept>.","pos":[1254,1396],"source":" For more information, see [Walkthrough: My first WPF desktop application](../getting-started/walkthrough-my-first-wpf-desktop-application.md)."},{"pos":[1405,1429],"content":"Creating the Application","linkify":"Creating the Application","nodes":[{"content":"Creating the Application","pos":[0,24]}]},{"pos":[1440,1465],"content":"To create the application","linkify":"To create the application","nodes":[{"content":"To create the application","pos":[0,25]}]},{"content":"Create a new WPF Application project in Visual Basic or Visual C# named <ph id=\"ph1\">`BasicManipulation`</ph>.","pos":[1475,1567],"source":"Create a new WPF Application project in Visual Basic or Visual C# named `BasicManipulation`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: My first WPF desktop application<ept id=\"p1\">](../getting-started/walkthrough-my-first-wpf-desktop-application.md)</ept>.","pos":[1568,1710],"source":" For more information, see [Walkthrough: My first WPF desktop application](../getting-started/walkthrough-my-first-wpf-desktop-application.md)."},{"content":"Replace the contents of MainWindow.xaml with the following XAML.","pos":[1720,1784]},{"content":"This markup creates a simple application that contains a red <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> on a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.","pos":[1795,1938],"source":"This markup creates a simple application that contains a red <xref:System.Windows.Shapes.Rectangle> on a <xref:System.Windows.Controls.Canvas>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.IsManipulationEnabled%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> is set to true so that it will receive manipulation events.","pos":[1939,2114],"source":" The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the <xref:System.Windows.Shapes.Rectangle> is set to true so that it will receive manipulation events."},{"content":"The application subscribes to the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.ManipulationStarting&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;</ph> events.","pos":[2115,2325],"source":" The application subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events."},{"content":"These events contain the logic to move the <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> when the user manipulates it.","pos":[2326,2437],"source":" These events contain the logic to move the <xref:System.Windows.Shapes.Rectangle> when the user manipulates it."},{"pos":[2579,2725],"content":"If you are using Visual Basic, in the first line of MainWindow.xaml, replace <ph id=\"ph1\">`x:Class=\"BasicManipulation.MainWindow\"`</ph> with <ph id=\"ph2\">`x:Class=\"MainWindow\"`</ph>.","source":"If you are using Visual Basic, in the first line of MainWindow.xaml, replace `x:Class=\"BasicManipulation.MainWindow\"` with `x:Class=\"MainWindow\"`."},{"pos":[2735,2847],"content":"In the <ph id=\"ph1\">`MainWindow`</ph> class, add the following <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.ManipulationStarting&gt;</ph> event handler.","source":"In the `MainWindow` class, add the following <xref:System.Windows.UIElement.ManipulationStarting> event handler."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.ManipulationStarting&gt;</ph> event occurs when <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> detects that touch input begins to manipulate an object.","pos":[2858,3071],"source":"The <xref:System.Windows.UIElement.ManipulationStarting> event occurs when [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] detects that touch input begins to manipulate an object."},{"content":"The code specifies that the position of the manipulation should be relative to the <ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph> by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A&gt;</ph> property.","pos":[3072,3291],"source":" The code specifies that the position of the manipulation should be relative to the <xref:System.Windows.Window> by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property."},{"pos":[3302,3638],"content":"[!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]\n [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]","leadings":["","    "],"nodes":[]},{"pos":[3644,3749],"content":"In the <ph id=\"ph1\">`MainWindow`</ph> class, add the following <ph id=\"ph2\">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> event handler.","source":"In the `MainWindow` class, add the following <xref:System.Windows.Input.ManipulationDelta> event handler."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> event occurs when the touch input changes position and can occur multiple times during a manipulation.","pos":[3756,3908],"source":"The <xref:System.Windows.Input.ManipulationDelta> event occurs when the touch input changes position and can occur multiple times during a manipulation."},{"content":"The event can also occur after a finger is raised.","pos":[3909,3959]},{"content":"For example, if the user drags a finger across a screen, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> event occurs multiple times as the finger moves.","pos":[3960,4115],"source":" For example, if the user drags a finger across a screen, the <xref:System.Windows.Input.ManipulationDelta> event occurs multiple times as the finger moves."},{"content":"When the user raises a finger from the screen, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> event keeps occurring to simulate inertia.","pos":[4116,4255],"source":" When the user raises a finger from the screen, the <xref:System.Windows.Input.ManipulationDelta> event keeps occurring to simulate inertia."},{"content":"The code applies the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph> to the <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> of the <ph id=\"ph3\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> to move it as the user moves the touch input.","pos":[4262,4508],"source":"The code applies the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> to the <xref:System.Windows.UIElement.RenderTransform%2A> of the <xref:System.Windows.Shapes.Rectangle> to move it as the user moves the touch input."},{"content":"It also checks whether the <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> is outside the bounds of the <ph id=\"ph2\">&lt;xref:System.Windows.Window&gt;</ph> when the event occurs during inertia.","pos":[4509,4670],"source":" It also checks whether the <xref:System.Windows.Shapes.Rectangle> is outside the bounds of the <xref:System.Windows.Window> when the event occurs during inertia."},{"content":"If so, the application calls the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A?displayProperty=nameWithType&gt;</ph> method to end the manipulation.","pos":[4671,4831],"source":" If so, the application calls the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A?displayProperty=nameWithType> method to end the manipulation."},{"pos":[4838,5162],"content":"[!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]","leadings":["","    "],"nodes":[]},{"pos":[5168,5287],"content":"In the <ph id=\"ph1\">`MainWindow`</ph> class, add the following <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;</ph> event handler.","source":"In the `MainWindow` class, add the following <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.ManipulationInertiaStarting&gt;</ph> event occurs when the user raises all fingers from the screen.","pos":[5294,5420],"source":"The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user raises all fingers from the screen."},{"content":"The code sets the initial velocity and deceleration for the movement, expansion, and rotation of the rectangle.","pos":[5421,5532]},{"pos":[5539,5903],"content":"[!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]\n [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]","leadings":["","    "],"nodes":[]},{"content":"Build and run the project.","pos":[5909,5935]},{"content":"You should see a red square appear in the window.","pos":[5942,5991]},{"pos":[5996,6019],"content":"Testing the Application","linkify":"Testing the Application","nodes":[{"content":"Testing the Application","pos":[0,23]}]},{"content":"To test the application, try the following manipulations.","pos":[6021,6078]},{"content":"Note that you can do more than one of the following at the same time.","pos":[6079,6148]},{"pos":[6154,6303],"content":"To move the <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, put a finger on the <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> and move the finger across the screen.","source":"To move the <xref:System.Windows.Shapes.Rectangle>, put a finger on the <xref:System.Windows.Shapes.Rectangle> and move the finger across the screen."},{"pos":[6309,6495],"content":"To resize the <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, put two fingers on the <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> and move the fingers closer together or farther apart from each other.","source":"To resize the <xref:System.Windows.Shapes.Rectangle>, put two fingers on the <xref:System.Windows.Shapes.Rectangle> and move the fingers closer together or farther apart from each other."},{"pos":[6501,6658],"content":"To rotate the <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, put two fingers on the <ph id=\"ph2\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> and rotate the fingers around each other.","source":"To rotate the <xref:System.Windows.Shapes.Rectangle>, put two fingers on the <xref:System.Windows.Shapes.Rectangle> and rotate the fingers around each other."},{"content":"To cause inertia, quickly raise your fingers from the screen as you perform the previous manipulations.","pos":[6661,6764]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> will continue to move, resize, or rotate for a few seconds before it stops.","pos":[6765,6883],"source":" The <xref:System.Windows.Shapes.Rectangle> will continue to move, resize, or rotate for a few seconds before it stops."},{"pos":[6888,6896],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]}]}