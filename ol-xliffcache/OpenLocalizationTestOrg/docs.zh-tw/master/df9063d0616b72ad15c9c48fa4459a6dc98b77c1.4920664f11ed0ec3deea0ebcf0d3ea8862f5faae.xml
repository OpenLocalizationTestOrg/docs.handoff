{"content":"---\ntitle: \"Multidimensional Arrays - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"arrays [C#], multidimensional\"\n  - \"multidimensional arrays [C#]\"\nms.assetid: 020ce02e-7dff-4273-8e53-bf0b33747232\n---\n# Multidimensional Arrays (C# Programming Guide)\n\nArrays can have more than one dimension. For example, the following declaration creates a two-dimensional array of four rows and two columns.  \n  \n [!code-csharp[csProgGuideArrays#11](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#11)]  \n  \n The following declaration creates an array of three dimensions, 4, 2, and 3.  \n  \n [!code-csharp[csProgGuideArrays#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#12)]  \n  \n## Array Initialization\n\n You can initialize the array upon declaration, as is shown in the following example.  \n  \n [!code-csharp[csProgGuideArrays#13](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#13)]  \n  \n You also can initialize the array without specifying the rank.  \n  \n [!code-csharp[csProgGuideArrays#14](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#14)]  \n  \n If you choose to declare an array variable without initialization, you must use the `new` operator to assign an array to the variable. The use of `new` is shown in the following example.  \n  \n [!code-csharp[csProgGuideArrays#15](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#15)]  \n  \n The following example assigns a value to a particular array element.  \n  \n [!code-csharp[csProgGuideArrays#16](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#16)]  \n  \n Similarly, the following example gets the value of a particular array element and assigns it to variable `elementValue`.  \n  \n [!code-csharp[csProgGuideArrays#42](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#42)]  \n  \n The following code example initializes the array elements to default values (except for jagged arrays).  \n  \n [!code-csharp[csProgGuideArrays#17](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideArrays/CS/Arrays.cs#17)]  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Arrays](../../../csharp/programming-guide/arrays/index.md)\n- [Single-Dimensional Arrays](../../../csharp/programming-guide/arrays/single-dimensional-arrays.md)\n- [Jagged Arrays](../../../csharp/programming-guide/arrays/jagged-arrays.md)\n","nodes":[{"pos":[4,241],"embed":true,"restype":"x-metadata","content":"title: \"Multidimensional Arrays - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"arrays [C#], multidimensional\"\n  - \"multidimensional arrays [C#]\"\nms.assetid: 020ce02e-7dff-4273-8e53-bf0b33747232","nodes":[{"content":"Multidimensional Arrays - C# Programming Guide","nodes":[{"pos":[0,46],"content":"Multidimensional Arrays - C# Programming Guide","nodes":[{"content":"Multidimensional Arrays - C# Programming Guide","pos":[0,46]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[248,294],"content":"Multidimensional Arrays (C# Programming Guide)","linkify":"Multidimensional Arrays (C# Programming Guide)","nodes":[{"content":"Multidimensional Arrays (C# Programming Guide)","pos":[0,46]}]},{"content":"Arrays can have more than one dimension.","pos":[296,336]},{"content":"For example, the following declaration creates a two-dimensional array of four rows and two columns.","pos":[337,437]},{"content":"The following declaration creates an array of three dimensions, 4, 2, and 3.","pos":[569,645]},{"pos":[779,799],"content":"Array Initialization","linkify":"Array Initialization","nodes":[{"content":"Array Initialization","pos":[0,20]}]},{"content":"You can initialize the array upon declaration, as is shown in the following example.","pos":[802,886]},{"content":"You also can initialize the array without specifying the rank.","pos":[1018,1080]},{"content":"If you choose to declare an array variable without initialization, you must use the <ph id=\"ph1\">`new`</ph> operator to assign an array to the variable.","pos":[1212,1346],"source":"If you choose to declare an array variable without initialization, you must use the `new` operator to assign an array to the variable."},{"content":"The use of <ph id=\"ph1\">`new`</ph> is shown in the following example.","pos":[1347,1398],"source":" The use of `new` is shown in the following example."},{"content":"The following example assigns a value to a particular array element.","pos":[1530,1598]},{"pos":[1730,1850],"content":"Similarly, the following example gets the value of a particular array element and assigns it to variable <ph id=\"ph1\">`elementValue`</ph>.","source":"Similarly, the following example gets the value of a particular array element and assigns it to variable `elementValue`."},{"content":"The following code example initializes the array elements to default values (except for jagged arrays).","pos":[1982,2085]},{"pos":[2219,2227],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2231,2297],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[2300,2359],"content":"<bpt id=\"p1\">[</bpt>Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/index.md)</ept>","source":"[Arrays](../../../csharp/programming-guide/arrays/index.md)"},{"pos":[2362,2460],"content":"<bpt id=\"p1\">[</bpt>Single-Dimensional Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/single-dimensional-arrays.md)</ept>","source":"[Single-Dimensional Arrays](../../../csharp/programming-guide/arrays/single-dimensional-arrays.md)"},{"pos":[2463,2537],"content":"<bpt id=\"p1\">[</bpt>Jagged Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/jagged-arrays.md)</ept>","source":"[Jagged Arrays](../../../csharp/programming-guide/arrays/jagged-arrays.md)"}]}