{"content":"---\ntitle: \"Control Flow Activities in WF\"\nms.date: \"03/30/2017\"\nms.assetid: 6892885b-f7c5-4aea-8f5e-28863fb4ae75\n---\n# Control Flow Activities in WF\nThe [!INCLUDE[netfx_current_long](../../../includes/netfx-current-long-md.md)] provides several activities for controlling flow of execution within a workflow. Some of these activities (such as `Switch` and `If`) implement flow control structures similar to those in programming environments such as Visual C#, while others (such as `Pick`) model new programming structures.  \n  \n Note that while activities such as the `Parallel` and `ParallelForEach` activities schedule multiple child activities for execution simultaneously, only a single thread is used for a workflow. Each child activity of these activities executes sequentially and successive activities do not execute until previous activities either complete or go idle. As a result, these activities are most useful for applications in which several potentially blocking activities must execute in an interleaved fashion. If none of the child activities of these activities go idle, a `Parallel` activity executes just like a `Sequence` activity, and a `ParallelForEach` activity executes just like a `ForEach` activity. If, however, asynchronous activities (such as activities that derive from <xref:System.Activities.AsyncCodeActivity>) or messaging activities are used, control will pass to the next branch while the child activity waits for its message to be received or its asynchronous work to be completed.  \n  \n## Flow control activities  \n  \n|Activity|Description|  \n|--------------|-----------------|  \n|<xref:System.Activities.Statements.DoWhile>|Executes the contained activities once and continues to do so while a condition is `true`.|  \n|<xref:System.Activities.Statements.ForEach%601>|Executes an embedded statement in sequence for each element in a collection. <xref:System.Activities.Statements.ForEach%601> is similar to the keyword `foreach`, but is implemented as an activity rather than a language statement.|  \n|<xref:System.Activities.Statements.If>|Executes contained activities if a condition is `true`, and can execute activities contained in the <xref:System.Activities.Statements.If.Else%2A> property if the condition is `false`.|  \n|<xref:System.Activities.Statements.Parallel>|Executes contained activities in parallel.|  \n|<xref:System.Activities.Statements.ParallelForEach%601>|Executes an embedded statement in parallel for each element in a collection.|  \n|<xref:System.Activities.Statements.Pick>|Provides event-based control flow modeling.|  \n|<xref:System.Activities.Statements.PickBranch>|Represents a potential path of execution in a <xref:System.Activities.Statements.Pick> activity.|  \n|<xref:System.Activities.Statements.Sequence>|Executes contained activities in sequence.|  \n|<xref:System.Activities.Statements.Switch%601>|Selects one choice from a number of activities to execute, based on the value of a given expression.|  \n|<xref:System.Activities.Statements.While>|Executes contained activities while a condition is `true`.|\n","nodes":[{"pos":[4,113],"embed":true,"restype":"x-metadata","content":"title: \"Control Flow Activities in WF\"\nms.date: \"03/30/2017\"\nms.assetid: 6892885b-f7c5-4aea-8f5e-28863fb4ae75","nodes":[{"content":"Control Flow Activities in WF","nodes":[{"pos":[0,29],"content":"Control Flow Activities in WF","nodes":[{"content":"Control Flow Activities in WF","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[120,149],"content":"Control Flow Activities in WF","linkify":"Control Flow Activities in WF","nodes":[{"content":"Control Flow Activities in WF","pos":[0,29]}]},{"content":"The <ph id=\"ph1\">[!INCLUDE[netfx_current_long](../../../includes/netfx-current-long-md.md)]</ph> provides several activities for controlling flow of execution within a workflow.","pos":[150,309],"source":"The [!INCLUDE[netfx_current_long](../../../includes/netfx-current-long-md.md)] provides several activities for controlling flow of execution within a workflow."},{"content":"Some of these activities (such as <ph id=\"ph1\">`Switch`</ph> and <ph id=\"ph2\">`If`</ph>) implement flow control structures similar to those in programming environments such as Visual C#, while others (such as <ph id=\"ph3\">`Pick`</ph>) model new programming structures.","pos":[310,524],"source":" Some of these activities (such as `Switch` and `If`) implement flow control structures similar to those in programming environments such as Visual C#, while others (such as `Pick`) model new programming structures."},{"content":"Note that while activities such as the <ph id=\"ph1\">`Parallel`</ph> and <ph id=\"ph2\">`ParallelForEach`</ph> activities schedule multiple child activities for execution simultaneously, only a single thread is used for a workflow.","pos":[531,723],"source":"Note that while activities such as the `Parallel` and `ParallelForEach` activities schedule multiple child activities for execution simultaneously, only a single thread is used for a workflow."},{"content":"Each child activity of these activities executes sequentially and successive activities do not execute until previous activities either complete or go idle.","pos":[724,880]},{"content":"As a result, these activities are most useful for applications in which several potentially blocking activities must execute in an interleaved fashion.","pos":[881,1032]},{"content":"If none of the child activities of these activities go idle, a <ph id=\"ph1\">`Parallel`</ph> activity executes just like a <ph id=\"ph2\">`Sequence`</ph> activity, and a <ph id=\"ph3\">`ParallelForEach`</ph> activity executes just like a <ph id=\"ph4\">`ForEach`</ph> activity.","pos":[1033,1231],"source":" If none of the child activities of these activities go idle, a `Parallel` activity executes just like a `Sequence` activity, and a `ParallelForEach` activity executes just like a `ForEach` activity."},{"content":"If, however, asynchronous activities (such as activities that derive from <ph id=\"ph1\">&lt;xref:System.Activities.AsyncCodeActivity&gt;</ph>) or messaging activities are used, control will pass to the next branch while the child activity waits for its message to be received or its asynchronous work to be completed.","pos":[1232,1524],"source":" If, however, asynchronous activities (such as activities that derive from <xref:System.Activities.AsyncCodeActivity>) or messaging activities are used, control will pass to the next branch while the child activity waits for its message to be received or its asynchronous work to be completed."},{"pos":[1533,1556],"content":"Flow control activities","linkify":"Flow control activities","nodes":[{"content":"Flow control activities","pos":[0,23]}]},{"content":"Activity","pos":[1563,1571]},{"content":"Description","pos":[1572,1583]},{"pos":[1669,1759],"content":"Executes the contained activities once and continues to do so while a condition is <ph id=\"ph1\">`true`</ph>.","source":"Executes the contained activities once and continues to do so while a condition is `true`."},{"content":"Executes an embedded statement in sequence for each element in a collection.","pos":[1812,1888]},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.ForEach%601&gt;</ph> is similar to the keyword <ph id=\"ph2\">`foreach`</ph>, but is implemented as an activity rather than a language statement.","pos":[1889,2041],"source":"<xref:System.Activities.Statements.ForEach%601> is similar to the keyword `foreach`, but is implemented as an activity rather than a language statement."},{"pos":[2085,2269],"content":"Executes contained activities if a condition is <ph id=\"ph1\">`true`</ph>, and can execute activities contained in the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.If.Else%2A&gt;</ph> property if the condition is <ph id=\"ph3\">`false`</ph>.","source":"Executes contained activities if a condition is `true`, and can execute activities contained in the <xref:System.Activities.Statements.If.Else%2A> property if the condition is `false`."},{"content":"Executes contained activities in parallel.","pos":[2319,2361]},{"content":"Executes an embedded statement in parallel for each element in a collection.","pos":[2422,2498]},{"content":"Provides event-based control flow modeling.","pos":[2544,2587]},{"pos":[2639,2735],"content":"Represents a potential path of execution in a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity.","source":"Represents a potential path of execution in a <xref:System.Activities.Statements.Pick> activity."},{"content":"Executes contained activities in sequence.","pos":[2785,2827]},{"content":"Selects one choice from a number of activities to execute, based on the value of a given expression.","pos":[2879,2979]},{"pos":[3026,3084],"content":"Executes contained activities while a condition is <ph id=\"ph1\">`true`</ph>.","source":"Executes contained activities while a condition is `true`."}]}