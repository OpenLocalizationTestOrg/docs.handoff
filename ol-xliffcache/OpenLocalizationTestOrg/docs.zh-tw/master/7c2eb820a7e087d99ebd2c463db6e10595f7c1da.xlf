<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-a-service-that-employs-a-custom-certificate-validator.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c2eb820a7e087d99ebd2c463db6e10595f7c1da</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\how-to-create-a-service-that-employs-a-custom-certificate-validator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d6de9e4032d9fb95b4f81071b855088c3786dac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a657759d51bf1aedc86d4acd17be9d4fb3b4f0ce</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create a Service that Employs a Custom Certificate Validator</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Service that Employs a Custom Certificate Validator</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to implement a custom certificate validator and how to configure client or service credentials to replace the default certificate validation logic with the custom certificate validator.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the X.509 certificate is used to authenticate a client or service, Windows Communication Foundation (WCF) by default uses the Windows certificate store and Crypto API to validate the certificate and to ensure that it is trusted.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Sometimes the built-in certificate validation functionality is not enough and must be changed.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>WCF provides an easy way to change the validation logic by allowing users to add a custom certificate validator.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If a custom certificate validator is specified, WCF does not use the built-in certificate validation logic but relies on the custom validator instead.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Procedures</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To create a custom certificate validator</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Define a new class derived from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Implement the abstract <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The certificate that must be validated is passed as an argument to the method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the passed certificate is not valid according to the validation logic, this method throws a <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the certificate is valid, the method returns to the caller.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To return authentication errors back to the client, throw a <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> in the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To specify a custom certificate validator in service configuration</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>behaviors&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md)</ept> element and a <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>serviceBehaviors&gt;<ept id="p2">](../../../../docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md)</ept> to the <bpt id="p3">[</bpt><ph id="ph3">\&lt;</ph>system.serviceModel&gt;<ept id="p3">](../../../../docs/framework/configure-apps/file-schema/wcf/system-servicemodel.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>behavior&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md)</ept> and set the <ph id="ph2">`name`</ph> attribute to an appropriate value.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>serviceCredentials&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/servicecredentials.md)</ept> to the <ph id="ph2">`&lt;behavior&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`&lt;clientCertificate&gt;`</ph> element to the <ph id="ph2">`&lt;serviceCredentials&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Add an <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>authentication&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/authentication-of-clientcertificate-element.md)</ept> to the <ph id="ph2">`&lt;clientCertificate&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`customCertificateValidatorType`</ph> attribute to the validator type.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following example sets the attribute to the namespace and name of the type.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`certificateValidationMode`</ph> attribute to <ph id="ph2">`Custom`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To specify a custom certificate validator using configuration on the client</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>behaviors&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md)</ept> element and a <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>serviceBehaviors&gt;<ept id="p2">](../../../../docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md)</ept> to the <bpt id="p3">[</bpt><ph id="ph3">\&lt;</ph>system.serviceModel&gt;<ept id="p3">](../../../../docs/framework/configure-apps/file-schema/wcf/system-servicemodel.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Add an <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>endpointBehaviors&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`&lt;behavior&gt;`</ph> element and set the <ph id="ph2">`name`</ph> attribute to an appropriate value.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>clientCredentials&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/clientcredentials.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>serviceCertificate&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/servicecertificate-of-clientcredentials-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Add an <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>authentication&gt;<ept id="p1">](../../../../docs/framework/configure-apps/file-schema/wcf/authentication-of-servicecertificate-element.md)</ept> as shown on the following example.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`customCertificateValidatorType`</ph> attribute to the validator type.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`certificateValidationMode`</ph> attribute to <ph id="ph2">`Custom`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following example sets the attribute to the namespace and name of the type.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To specify a custom certificate validator using code on the service</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specify the custom certificate validator on the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceCredentials.ClientCertificate%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can access the service credentials using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.Credentials%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateValidationMode.Custom&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To specify a custom certificate validator using code on the client</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Specify the custom certificate validator using the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can access the client credentials using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.Credentials%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>(The client class generated by <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> always derives from the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class.)</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.ServiceModel.Security.X509CertificateValidationMode.Custom&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following sample shows an implementation of a custom certificate validator and its usage on the service.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Code</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>