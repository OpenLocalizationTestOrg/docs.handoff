<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="bc32036.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e84f3f706b749da648c0bca218443ca6cf8f9d7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\misc\bc32036.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eea0d1bd5d523873d83020e0c57ca3b6ecb66338</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd7e15599c9a059360915d349c515e20baaaa06c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Class '<ph id="ph1">&lt;classname1&gt;</ph>' must declare a 'Sub New' because its base class '<ph id="ph2">&lt;classname2&gt;</ph>' has more than one accessible 'Sub New' that can be called with no arguments</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Class '<ph id="ph1">\&lt;</ph>classname1&gt;' must declare a 'Sub New' because its base class '<ph id="ph2">\&lt;</ph>classname2&gt;' has more than one accessible 'Sub New' that can be called with no arguments</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A derived class does not declare a constructor, and Visual Basic cannot generate one because it cannot determine which base class constructor to call.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When a derived class does not declare a constructor, Visual Basic attempts to generate an implicit parameterless constructor that calls <ph id="ph1">`MyBase.New()`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If there is no accessible constructor in the base class that can be called without arguments, or if there is more than one, Visual Basic cannot generate an implicit constructor.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This situation can arise, for example, if one base class constructor has a single <ph id="ph1">`Optional`</ph> argument and another has a single <ph id="ph2">`ParamArray`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Each of these can be called with no arguments.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC32036</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Declare and implement at least one <ph id="ph1">`Sub New`</ph> constructor somewhere in the derived class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add a call to a base class constructor, <ph id="ph1">`MyBase.New()`</ph>, as the first line of every <ph id="ph2">`Sub New`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object Lifetime: How Objects Are Created and Destroyed<ept id="p1">](../../visual-basic/programming-guide/language-features/objects-and-classes/object-lifetime-how-objects-are-created-and-destroyed.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Constructors<ept id="p1">](~/docs/visual-basic/programming-guide/concepts/object-oriented-programming.md#constructors)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Optional<ept id="p1">](../../visual-basic/language-reference/modifiers/optional.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../visual-basic/language-reference/modifiers/paramarray.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Optional Parameters<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parameter Arrays<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/parameter-arrays.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>