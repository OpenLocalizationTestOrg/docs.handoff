{"content":"---\ntitle: \"DirectCast Operator (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.directCast\"\n  - \"directCast\"\nhelpviewer_keywords: \n  - \"DirectCast keyword [Visual Basic]\"\nms.assetid: 63e5a1d0-4d9e-4732-bf8f-e90c0c8784b8\n---\n# DirectCast Operator (Visual Basic)\nIntroduces a type conversion operation based on inheritance or implementation.  \n  \n## Remarks  \n `DirectCast` does not use the Visual Basic run-time helper routines for conversion, so it can provide somewhat better performance than `CType` when converting to and from data type `Object`.  \n  \n You use the `DirectCast` keyword similar to the way you use the [CType Function](../../../visual-basic/language-reference/functions/ctype-function.md) and the [TryCast Operator](../../../visual-basic/language-reference/operators/trycast-operator.md) keyword. You supply an expression as the first argument and a type to convert it to as the second argument. `DirectCast` requires an inheritance or implementation relationship between the data types of the two arguments. This means that one type must inherit from or implement the other.  \n  \n## Errors and Failures  \n `DirectCast` generates a compiler error if it detects that no inheritance or implementation relationship exists. But the lack of a compiler error does not guarantee a successful conversion. If the desired conversion is narrowing, it could fail at run time. If this happens, the runtime throws an <xref:System.InvalidCastException> error.  \n  \n## Conversion Keywords  \n A comparison of the type conversion keywords is as follows.  \n  \n|Keyword|Data types|Argument relationship|Run-time failure|  \n|---|---|---|---|  \n|[CType Function](../../../visual-basic/language-reference/functions/ctype-function.md)|Any data types|Widening or narrowing conversion must be defined between the two data types|Throws <xref:System.InvalidCastException>|  \n|`DirectCast`|Any data types|One type must inherit from or implement the other type|Throws <xref:System.InvalidCastException>|  \n|[TryCast Operator](../../../visual-basic/language-reference/operators/trycast-operator.md)|Reference types only|One type must inherit from or implement the other type|Returns [Nothing](../../../visual-basic/language-reference/nothing.md)|  \n  \n## Example  \n The following example demonstrates two uses of `DirectCast`, one that fails at run time and one that succeeds.  \n  \n [!code-vb[VbVbalrKeywords#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrKeywords/VB/Class1.vb#1)]  \n  \n In the preceding example, the run-time type of `q` is `Double`. `CType` succeeds because `Double` can be converted to `Integer`. However, the first `DirectCast` fails at run time because the run-time type of `Double` has no inheritance relationship with `Integer`, even though a conversion exists. The second `DirectCast` succeeds because it converts from type <xref:System.Windows.Forms.Form> to type <xref:System.Windows.Forms.Control>, from which <xref:System.Windows.Forms.Form> inherits.  \n  \n## See also\n\n- <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>\n- [Widening and Narrowing Conversions](../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)\n- [Implicit and Explicit Conversions](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)\n","nodes":[{"pos":[4,229],"embed":true,"restype":"x-metadata","content":"title: \"DirectCast Operator (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.directCast\"\n  - \"directCast\"\nhelpviewer_keywords: \n  - \"DirectCast keyword [Visual Basic]\"\nms.assetid: 63e5a1d0-4d9e-4732-bf8f-e90c0c8784b8","nodes":[{"content":"DirectCast Operator (Visual Basic)","nodes":[{"pos":[0,34],"content":"DirectCast Operator (Visual Basic)","nodes":[{"content":"DirectCast Operator (Visual Basic)","pos":[0,34]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[236,270],"content":"DirectCast Operator (Visual Basic)","linkify":"DirectCast Operator (Visual Basic)","nodes":[{"content":"DirectCast Operator (Visual Basic)","pos":[0,34]}]},{"content":"Introduces a type conversion operation based on inheritance or implementation.","pos":[271,349]},{"pos":[358,365],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[369,559],"content":"<ph id=\"ph1\">`DirectCast`</ph> does not use the Visual Basic run-time helper routines for conversion, so it can provide somewhat better performance than <ph id=\"ph2\">`CType`</ph> when converting to and from data type <ph id=\"ph3\">`Object`</ph>.","source":"`DirectCast` does not use the Visual Basic run-time helper routines for conversion, so it can provide somewhat better performance than `CType` when converting to and from data type `Object`."},{"content":"You use the <ph id=\"ph1\">`DirectCast`</ph> keyword similar to the way you use the <bpt id=\"p1\">[</bpt>CType Function<ept id=\"p1\">](../../../visual-basic/language-reference/functions/ctype-function.md)</ept> and the <bpt id=\"p2\">[</bpt>TryCast Operator<ept id=\"p2\">](../../../visual-basic/language-reference/operators/trycast-operator.md)</ept> keyword.","pos":[566,824],"source":"You use the `DirectCast` keyword similar to the way you use the [CType Function](../../../visual-basic/language-reference/functions/ctype-function.md) and the [TryCast Operator](../../../visual-basic/language-reference/operators/trycast-operator.md) keyword."},{"content":"You supply an expression as the first argument and a type to convert it to as the second argument.","pos":[825,923]},{"content":"<ph id=\"ph1\">`DirectCast`</ph> requires an inheritance or implementation relationship between the data types of the two arguments.","pos":[924,1036],"source":"`DirectCast` requires an inheritance or implementation relationship between the data types of the two arguments."},{"content":"This means that one type must inherit from or implement the other.","pos":[1037,1103]},{"pos":[1112,1131],"content":"Errors and Failures","linkify":"Errors and Failures","nodes":[{"content":"Errors and Failures","pos":[0,19]}]},{"content":"<ph id=\"ph1\">`DirectCast`</ph> generates a compiler error if it detects that no inheritance or implementation relationship exists.","pos":[1135,1247],"source":"`DirectCast` generates a compiler error if it detects that no inheritance or implementation relationship exists."},{"content":"But the lack of a compiler error does not guarantee a successful conversion.","pos":[1248,1324]},{"content":"If the desired conversion is narrowing, it could fail at run time.","pos":[1325,1391]},{"content":"If this happens, the runtime throws an <ph id=\"ph1\">&lt;xref:System.InvalidCastException&gt;</ph> error.","pos":[1392,1472],"source":" If this happens, the runtime throws an <xref:System.InvalidCastException> error."},{"pos":[1481,1500],"content":"Conversion Keywords","linkify":"Conversion Keywords","nodes":[{"content":"Conversion Keywords","pos":[0,19]}]},{"content":"A comparison of the type conversion keywords is as follows.","pos":[1504,1563]},{"content":"Keyword","pos":[1570,1577]},{"content":"Data types","pos":[1578,1588]},{"content":"Argument relationship","pos":[1589,1610]},{"content":"Run-time failure","pos":[1611,1627]},{"pos":[1652,1738],"content":"<bpt id=\"p1\">[</bpt>CType Function<ept id=\"p1\">](../../../visual-basic/language-reference/functions/ctype-function.md)</ept>","source":"[CType Function](../../../visual-basic/language-reference/functions/ctype-function.md)"},{"content":"Any data types","pos":[1739,1753]},{"content":"Widening or narrowing conversion must be defined between the two data types","pos":[1754,1829]},{"pos":[1830,1871],"content":"Throws <ph id=\"ph1\">&lt;xref:System.InvalidCastException&gt;</ph>","source":"Throws <xref:System.InvalidCastException>"},{"content":"Any data types","pos":[1889,1903]},{"content":"One type must inherit from or implement the other type","pos":[1904,1958]},{"pos":[1959,2000],"content":"Throws <ph id=\"ph1\">&lt;xref:System.InvalidCastException&gt;</ph>","source":"Throws <xref:System.InvalidCastException>"},{"pos":[2005,2095],"content":"<bpt id=\"p1\">[</bpt>TryCast Operator<ept id=\"p1\">](../../../visual-basic/language-reference/operators/trycast-operator.md)</ept>","source":"[TryCast Operator](../../../visual-basic/language-reference/operators/trycast-operator.md)"},{"content":"Reference types only","pos":[2096,2116]},{"content":"One type must inherit from or implement the other type","pos":[2117,2171]},{"pos":[2172,2242],"content":"Returns <bpt id=\"p1\">[</bpt>Nothing<ept id=\"p1\">](../../../visual-basic/language-reference/nothing.md)</ept>","source":"Returns [Nothing](../../../visual-basic/language-reference/nothing.md)"},{"pos":[2252,2259],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2263,2373],"content":"The following example demonstrates two uses of <ph id=\"ph1\">`DirectCast`</ph>, one that fails at run time and one that succeeds.","source":"The following example demonstrates two uses of `DirectCast`, one that fails at run time and one that succeeds."},{"content":"In the preceding example, the run-time type of <ph id=\"ph1\">`q`</ph> is <ph id=\"ph2\">`Double`</ph>.","pos":[2500,2563],"source":"In the preceding example, the run-time type of `q` is `Double`."},{"content":"<ph id=\"ph1\">`CType`</ph> succeeds because <ph id=\"ph2\">`Double`</ph> can be converted to <ph id=\"ph3\">`Integer`</ph>.","pos":[2564,2628],"source":"`CType` succeeds because `Double` can be converted to `Integer`."},{"content":"However, the first <ph id=\"ph1\">`DirectCast`</ph> fails at run time because the run-time type of <ph id=\"ph2\">`Double`</ph> has no inheritance relationship with <ph id=\"ph3\">`Integer`</ph>, even though a conversion exists.","pos":[2629,2797],"source":" However, the first `DirectCast` fails at run time because the run-time type of `Double` has no inheritance relationship with `Integer`, even though a conversion exists."},{"content":"The second <ph id=\"ph1\">`DirectCast`</ph> succeeds because it converts from type <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph> to type <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control&gt;</ph>, from which <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form&gt;</ph> inherits.","pos":[2798,2992],"source":" The second `DirectCast` succeeds because it converts from type <xref:System.Windows.Forms.Form> to type <xref:System.Windows.Forms.Control>, from which <xref:System.Windows.Forms.Form> inherits."},{"pos":[3001,3009],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3080,3224],"content":"<bpt id=\"p1\">[</bpt>Widening and Narrowing Conversions<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)</ept>","source":"[Widening and Narrowing Conversions](../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)"},{"pos":[3227,3369],"content":"<bpt id=\"p1\">[</bpt>Implicit and Explicit Conversions<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept>","source":"[Implicit and Explicit Conversions](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)"}]}