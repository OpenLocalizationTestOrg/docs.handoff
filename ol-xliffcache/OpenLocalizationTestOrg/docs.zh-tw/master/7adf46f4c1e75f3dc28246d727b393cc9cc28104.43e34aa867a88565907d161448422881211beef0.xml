{"content":"---\ntitle: \"&#39;System.Void&#39; can only be used in a GetType expression | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"bc31422\"\n  - \"vbc31422\"\nhelpviewer_keywords: \n  - \"BC31422\"\nms.assetid: 84e45194-cb46-41f6-8420-a1498baeaaba\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# &#39;System.Void&#39; can only be used in a GetType expression\nAn expression in an assignment statement or a declaration uses <xref:System.Void> as the type of a variable, procedure parameter, function return, or type argument.  \n  \n The <xref:System.Void> structure is a specialized type used internally by the .NET Framework and particularly by Visual C# and Visual C++. It represents a return value type for a method that does not return a value. Visual Basic uses a `Sub` procedure when a value is not returned and a `Function` procedure when a value is returned.  \n  \n You can test a reference variable with the [GetType Operator](../../visual-basic/language-reference/operators/gettype-operator.md) operator to see if its run-time type is <xref:System.Void>, but you cannot use <xref:System.Void> in any other context.  \n  \n **Error ID:** BC31422  \n  \n## To correct this error  \n  \n1.  If you want to compare the run-time type of a variable to <xref:System.Void>, use the `GetType` operator.  \n  \n2.  Unless you have a particular reason to compare a run-time type to <xref:System.Void>, remove the reference to it altogether.  \n  \n## See Also  \n <xref:System.Void>   \n [GetType Operator](../../visual-basic/language-reference/operators/gettype-operator.md)","nodes":[{"pos":[12,91],"content":"&#39;System.Void&#39; can only be used in a GetType expression | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"&amp;#39;System.Void&amp;#39; can only be used in a GetType expression | Microsoft Docs","pos":[0,79],"source":"&#39;System.Void&#39; can only be used in a GetType expression | Microsoft Docs"}]},{"pos":[607,669],"content":"&#39;System.Void&#39; can only be used in a GetType expression","linkify":"&#39;System.Void&#39; can only be used in a GetType expression","nodes":[{"content":"&amp;#39;System.Void&amp;#39; can only be used in a GetType expression","pos":[0,62],"source":"&#39;System.Void&#39; can only be used in a GetType expression"}]},{"content":"An expression in an assignment statement or a declaration uses <ph id=\"ph1\">&lt;xref:System.Void&gt;</ph> as the type of a variable, procedure parameter, function return, or type argument.","pos":[670,834],"source":"An expression in an assignment statement or a declaration uses <xref:System.Void> as the type of a variable, procedure parameter, function return, or type argument."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Void&gt;</ph> structure is a specialized type used internally by the .NET Framework and particularly by Visual C# and Visual C++.","pos":[841,979],"source":"The <xref:System.Void> structure is a specialized type used internally by the .NET Framework and particularly by Visual C# and Visual C++."},{"content":"It represents a return value type for a method that does not return a value.","pos":[980,1056]},{"content":"Visual Basic uses a <ph id=\"ph1\">`Sub`</ph> procedure when a value is not returned and a <ph id=\"ph2\">`Function`</ph> procedure when a value is returned.","pos":[1057,1174],"source":" Visual Basic uses a `Sub` procedure when a value is not returned and a `Function` procedure when a value is returned."},{"pos":[1181,1431],"content":"You can test a reference variable with the <bpt id=\"p1\">[</bpt>GetType Operator<ept id=\"p1\">](../../visual-basic/language-reference/operators/gettype-operator.md)</ept> operator to see if its run-time type is <ph id=\"ph1\">&lt;xref:System.Void&gt;</ph>, but you cannot use <ph id=\"ph2\">&lt;xref:System.Void&gt;</ph> in any other context.","source":"You can test a reference variable with the [GetType Operator](../../visual-basic/language-reference/operators/gettype-operator.md) operator to see if its run-time type is <xref:System.Void>, but you cannot use <xref:System.Void> in any other context."},{"pos":[1438,1459],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC31422","source":"**Error ID:** BC31422"},{"pos":[1468,1489],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1499,1604],"content":"If you want to compare the run-time type of a variable to <ph id=\"ph1\">&lt;xref:System.Void&gt;</ph>, use the <ph id=\"ph2\">`GetType`</ph> operator.","source":"If you want to compare the run-time type of a variable to <xref:System.Void>, use the `GetType` operator."},{"content":"Unless you have a particular reason to compare a run-time type to <ph id=\"ph1\">&lt;xref:System.Void&gt;</ph>, remove the reference to it altogether.","pos":[1614,1738],"source":"Unless you have a particular reason to compare a run-time type to <xref:System.Void>, remove the reference to it altogether."},{"pos":[1747,1755],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Void&gt;</ph>","pos":[1759,1777],"source":"<xref:System.Void> "},{"content":"<bpt id=\"p1\"> [</bpt>GetType Operator<ept id=\"p1\">](../../visual-basic/language-reference/operators/gettype-operator.md)</ept>","pos":[1781,1869],"source":" [GetType Operator](../../visual-basic/language-reference/operators/gettype-operator.md)"}]}