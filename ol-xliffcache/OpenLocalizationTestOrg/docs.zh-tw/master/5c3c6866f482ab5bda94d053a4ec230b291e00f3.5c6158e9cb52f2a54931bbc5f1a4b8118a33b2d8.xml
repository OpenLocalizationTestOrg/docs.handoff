{"content":"---\ntitle: \"StrongNameGetPublicKeyEx Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICLRStrongName2.StrongNameGetPublicKeyEx\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"StrongNameGetPublicKeyEx\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"StrongNameGetPublicKeyEx method, ICLRStrongName2 interface [.NET Framework hosting]\"\n  - \"ICLRStrongName2::StrongNameGetPublicKeyEx method [.NET Framework hosting]\"\nms.assetid: 63d8260c-fb32-4f8f-a357-768afd570f68\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 7\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# StrongNameGetPublicKeyEx Method\nGets the public key from a public/private key pair, and specifies a hash algorithm and a signature algorithm.  \n  \n## Syntax  \n  \n```  \nHRESULT StrongNameGetPublicKey (   \n    [in]  LPCWSTR   pwzKeyContainer,  \n    [in]  BYTE      *pbKeyBlob,  \n    [in]  ULONG     cbKeyBlob,  \n    [out] BYTE      **ppbPublicKeyBlob,  \n    [out] ULONG     *pcbPublicKeyBlob  \n    [in]  ULONG     uHashAlgId,  \n    [in]  ULONG     uReserved,  \n);  \n```  \n  \n#### Parameters  \n `pwzKeyContainer`  \n [in] The name of the key container that contains the public/private key pair. If `pbKeyBlob` is null, `szKeyContainer` must specify a valid container within the cryptographic service provider (CSP). In this case, the `StrongNameGetPublicKeyEx` method extracts the public key from the key pair stored in the container.  \n  \n If `pbKeyBlob` is not null, the key pair is assumed to be contained in the key binary large object (BLOB).  \n  \n The keys must be 1024-bit Rivest-Shamir-Adleman (RSA) signing keys. No other types of keys are supported at this time.  \n  \n `pbKeyBlob`  \n [in] A pointer to the public/private key pair. This pair is in the format created by the Win32 `CryptExportKey` function. If `pbKeyBlob` is null, the key container specified by `szKeyContainer` is assumed to contain the key pair.  \n  \n `cbKeyBlob`  \n [in] The size, in bytes, of `pbKeyBlob`.  \n  \n `ppbPublicKeyBlob`  \n [out] The returned public key BLOB. The `ppbPublicKeyBlob` parameter is allocated by the common language runtime and returned to the caller. The caller must free the memory by using the [ICLRStrongName::StrongNameFreeBuffer](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamefreebuffer-method.md) method.  \n  \n `pcbPublicKeyBlob`  \n [out] The size of the returned public key BLOB.  \n  \n `uHashAlgId`  \n [in] The assembly hash algorithm. See the Remarks section for a list of accepted values.  \n  \n `uReserved`  \n [in] Reserved for future use; defaults to null.  \n  \n## Return Value  \n `S_OK` if the method completed successfully; otherwise, an HRESULT value that indicates failure (see [Common HRESULT Values](http://go.microsoft.com/fwlink/?LinkId=213878) for a list).  \n  \n## Remarks  \n The public key is contained in a [PublicKeyBlob](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md) structure.  \n  \n## Remarks  \n The following table shows the set of accepted values for the `uHashAlgId` parameter.  \n  \n|Name|Value|  \n|----------|-----------|  \n|None|0|  \n|SHA-1|0x8004|  \n|SHA-256|0x800c|  \n|SHA-384|0x800d|  \n|SHA-512|0x800e|  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MetaHost.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]  \n  \n## See Also  \n [StrongNameTokenFromPublicKey Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnametokenfrompublickey-method.md)   \n [PublicKeyBlob Structure](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md)   \n [ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)   \n [StrongNameGetPublicKey Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamegetpublickey-method.md)\n","nodes":[{"pos":[4,755],"embed":true,"restype":"x-metadata","content":"title: \"StrongNameGetPublicKeyEx Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICLRStrongName2.StrongNameGetPublicKeyEx\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"StrongNameGetPublicKeyEx\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"StrongNameGetPublicKeyEx method, ICLRStrongName2 interface [.NET Framework hosting]\"\n  - \"ICLRStrongName2::StrongNameGetPublicKeyEx method [.NET Framework hosting]\"\nms.assetid: 63d8260c-fb32-4f8f-a357-768afd570f68\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 7\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"StrongNameGetPublicKeyEx Method | Microsoft Docs","nodes":[{"pos":[0,48],"content":"StrongNameGetPublicKeyEx Method | Microsoft Docs","nodes":[{"content":"StrongNameGetPublicKeyEx Method | Microsoft Docs","pos":[0,48]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[762,793],"content":"StrongNameGetPublicKeyEx Method","linkify":"StrongNameGetPublicKeyEx Method","nodes":[{"content":"StrongNameGetPublicKeyEx Method","pos":[0,31]}]},{"content":"Gets the public key from a public/private key pair, and specifies a hash algorithm and a signature algorithm.","pos":[794,903]},{"pos":[912,918],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1240,1250],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The name of the key container that contains the public/private key pair.","pos":[1275,1352]},{"content":"If <ph id=\"ph1\">`pbKeyBlob`</ph> is null, <ph id=\"ph2\">`szKeyContainer`</ph> must specify a valid container within the cryptographic service provider (CSP).","pos":[1353,1473],"source":" If `pbKeyBlob` is null, `szKeyContainer` must specify a valid container within the cryptographic service provider (CSP)."},{"content":"In this case, the <ph id=\"ph1\">`StrongNameGetPublicKeyEx`</ph> method extracts the public key from the key pair stored in the container.","pos":[1474,1592],"source":" In this case, the `StrongNameGetPublicKeyEx` method extracts the public key from the key pair stored in the container."},{"pos":[1599,1705],"content":"If <ph id=\"ph1\">`pbKeyBlob`</ph> is not null, the key pair is assumed to be contained in the key binary large object (BLOB).","source":"If `pbKeyBlob` is not null, the key pair is assumed to be contained in the key binary large object (BLOB)."},{"content":"The keys must be 1024-bit Rivest-Shamir-Adleman (RSA) signing keys.","pos":[1712,1779]},{"content":"No other types of keys are supported at this time.","pos":[1780,1830]},{"content":"[in] A pointer to the public/private key pair.","pos":[1852,1898]},{"content":"This pair is in the format created by the Win32 <ph id=\"ph1\">`CryptExportKey`</ph> function.","pos":[1899,1973],"source":" This pair is in the format created by the Win32 `CryptExportKey` function."},{"content":"If <ph id=\"ph1\">`pbKeyBlob`</ph> is null, the key container specified by <ph id=\"ph2\">`szKeyContainer`</ph> is assumed to contain the key pair.","pos":[1974,2081],"source":" If `pbKeyBlob` is null, the key container specified by `szKeyContainer` is assumed to contain the key pair."},{"content":"[in] The size, in bytes, of <ph id=\"ph1\">`pbKeyBlob`</ph>.","pos":[2103,2143],"source":"[in] The size, in bytes, of `pbKeyBlob`."},{"content":"[out] The returned public key BLOB.","pos":[2172,2207]},{"content":"The <ph id=\"ph1\">`ppbPublicKeyBlob`</ph> parameter is allocated by the common language runtime and returned to the caller.","pos":[2208,2312],"source":" The `ppbPublicKeyBlob` parameter is allocated by the common language runtime and returned to the caller."},{"content":"The caller must free the memory by using the <bpt id=\"p1\">[</bpt>ICLRStrongName::StrongNameFreeBuffer<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamefreebuffer-method.md)</ept> method.","pos":[2313,2500],"source":" The caller must free the memory by using the [ICLRStrongName::StrongNameFreeBuffer](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamefreebuffer-method.md) method."},{"content":"[out] The size of the returned public key BLOB.","pos":[2529,2576]},{"content":"[in] The assembly hash algorithm.","pos":[2599,2632]},{"content":"See the Remarks section for a list of accepted values.","pos":[2633,2687]},{"content":"[in] Reserved for future use; defaults to null.","pos":[2709,2756]},{"pos":[2765,2777],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2781,2965],"content":"<ph id=\"ph1\">`S_OK`</ph> if the method completed successfully; otherwise, an HRESULT value that indicates failure (see <bpt id=\"p1\">[</bpt>Common HRESULT Values<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=213878)</ept> for a list).","source":"`S_OK` if the method completed successfully; otherwise, an HRESULT value that indicates failure (see [Common HRESULT Values](http://go.microsoft.com/fwlink/?LinkId=213878) for a list)."},{"pos":[2974,2981],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2985,3127],"content":"The public key is contained in a <bpt id=\"p1\">[</bpt>PublicKeyBlob<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md)</ept> structure.","source":"The public key is contained in a [PublicKeyBlob](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md) structure."},{"pos":[3136,3143],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3147,3231],"content":"The following table shows the set of accepted values for the <ph id=\"ph1\">`uHashAlgId`</ph> parameter.","source":"The following table shows the set of accepted values for the `uHashAlgId` parameter."},{"content":"Name","pos":[3238,3242]},{"content":"Value","pos":[3243,3248]},{"content":"None","pos":[3280,3284]},{"content":"0","pos":[3285,3286]},{"content":"SHA-1","pos":[3291,3296]},{"content":"0x8004","pos":[3297,3303]},{"content":"SHA-256","pos":[3308,3315]},{"content":"0x800c","pos":[3316,3322]},{"content":"SHA-384","pos":[3327,3334]},{"content":"0x800d","pos":[3335,3341]},{"content":"SHA-512","pos":[3346,3353]},{"content":"0x800e","pos":[3354,3360]},{"pos":[3370,3382],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3386,3490],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3497,3519],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MetaHost.h","source":"**Header:** MetaHost.h"},{"pos":[3526,3576],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[3583,3691],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]"},{"pos":[3700,3708],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>StrongNameTokenFromPublicKey Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnametokenfrompublickey-method.md)</ept><ph id=\"ph1\"> </ph>","pos":[3712,3854],"source":"[StrongNameTokenFromPublicKey Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnametokenfrompublickey-method.md) "},{"content":"<bpt id=\"p1\">[</bpt>PublicKeyBlob Structure<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md)</ept><ph id=\"ph1\"> </ph>","pos":[3858,3967],"source":"[PublicKeyBlob Structure](../../../../docs/framework/unmanaged-api/strong-naming/publickeyblob-structure.md) "},{"content":"<bpt id=\"p1\">[</bpt>ICLRStrongName Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3971,4076],"source":"[ICLRStrongName Interface](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>StrongNameGetPublicKey Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamegetpublickey-method.md)</ept>","pos":[4080,4209],"source":"[StrongNameGetPublicKey Method](../../../../docs/framework/unmanaged-api/hosting/iclrstrongname-strongnamegetpublickey-method.md)"}]}