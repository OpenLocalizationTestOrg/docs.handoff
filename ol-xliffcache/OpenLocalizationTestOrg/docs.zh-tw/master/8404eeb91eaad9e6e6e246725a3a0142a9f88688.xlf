<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8404eeb91eaad9e6e6e246725a3a0142a9f88688</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\extending\exporting-custom-metadata-for-a-wcf-extension.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd1e78ba96eab1a8616e3e940eaac40b5c91c1cf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">364a2af9ca716741c89f9160a9ef3839a9f8bd35</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exporting Custom Metadata for a WCF Extension | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Exporting Custom Metadata for a WCF Extension</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph>, metadata export is the process of describing service endpoints and projecting them into a parallel, standardized representation that clients can use to understand how to use the service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Custom metadata consists of XML elements that the system-provided metadata exporters cannot export.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Typically, this includes custom WSDL elements for user-defined behaviors and binding elements and policy assertions about the capabilities and requirements of bindings and contracts.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This section describes exporting custom WSDL or policy assertions, and does not focus on the exporting process itself.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information about how to use the types that export and import metadata regardless of whether the metadata is custom or system-constructed, see <bpt id="p1">[</bpt>Exporting and Importing Metadata<ept id="p1">](../../../../docs/framework/wcf/feature-details/exporting-and-importing-metadata.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When metadata is published using the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=fullName&gt;</ph>, the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName&gt;</ph> is examined and XSD and WSDL -- including policy assertions -- are generated for all contracts and bindings that <ph id="ph3">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> can support using system-provided attributes and bindings.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, custom behavior attributes or binding elements require support before they can be exported properly.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This section describes:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>How to implement and use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName&gt;</ph> interface, which exposes the WSDL generation data to you prior to publishing the WSDL.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>How to implement and use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension?displayProperty=fullName&gt;</ph> interface, which exposes the policy data to you prior to exporting the policy assertions in WSDL data.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about importing custom WSDL and policy assertions, see <bpt id="p1">[</bpt>Importing Custom Metadata for a WCF Extension<ept id="p1">](../../../../docs/framework/wcf/extending/importing-custom-metadata-for-a-wcf-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Exporting Custom WSDL Elements</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension&gt;</ph> on an operation behavior, contract behavior, endpoint behavior or binding element (<ph id="ph2">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph>, or <ph id="ph5">&lt;xref:System.ServiceModel.Channels.BindingElement?displayProperty=fullName&gt;</ph> respectively) and insert the behaviors or binding elements into the description of the service that you are trying to export.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(For more information about inserting behaviors, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](../../../../docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension&gt;</ph> is called for each endpoint and each endpoint exports the contract first if it has not already been exported.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can participate in either export process, depending upon your needs:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlContractConversionContext&gt;</ph> to modify the exported metadata in the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlEndpointConversionContext&gt;</ph> to modify the exported metadata for the endpoint in the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A&gt;</ph> method is called on all <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension&gt;</ph> implementations within the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName&gt;</ph> instance that is being exported.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A&gt;</ph> method is called on all <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension&gt;</ph> implementations with the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt;</ph> instance that is being exported.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Export Custom WSDL<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-export-custom-wsdl.md)</ept> and the sample <bpt id="p2">[</bpt>Custom WSDL Publication<ept id="p2">](../../../../docs/framework/wcf/samples/custom-wsdl-publication.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Exporting Custom Policy Assertions</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> on a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> and add the binding element to the binding to write custom policy assertions about binding support and contract capabilities into the WSDL.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph> is called once when exporting the implemented binding element in a binding and passes the <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> to the <ph id="ph3">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can use the methods on the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> instance to add to the policy assertions attached to the WSDL binding at the message, operation or endpoint subjects.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Export Custom Policy Assertions<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-export-custom-policy-assertions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Export Custom WSDL<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-export-custom-wsdl.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Export Custom Policy Assertions<ept id="p1">](../../../../docs/framework/wcf/extending/how-to-export-custom-policy-assertions.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Importing Custom Metadata for a WCF Extension<ept id="p1">](../../../../docs/framework/wcf/extending/importing-custom-metadata-for-a-wcf-extension.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>