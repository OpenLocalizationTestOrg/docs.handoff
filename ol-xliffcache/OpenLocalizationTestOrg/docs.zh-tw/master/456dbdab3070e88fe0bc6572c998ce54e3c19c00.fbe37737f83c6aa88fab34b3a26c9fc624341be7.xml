{"content":"---\ntitle: \"How to: Send data by using the WebRequest class\"\nms.date: \"03/25/2019\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"WebRequest class, sending data to a host\"\n  - \"Sending data to a host, using WebRequest class\"\nms.assetid: 66686878-38ac-4aa6-bf42-ffb568ffc459\n---\n# How to: Send data by using the WebRequest class\nThe following procedure describes the steps to send data to a server. This procedure is commonly used to post data to a Web page. \n  \n## To send data to a host server  \n  \n1.  Create a <xref:System.Net.WebRequest> instance by calling <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> with the URI of a resource, such as a script or ASP.NET page, that accepts data. For example: \n  \n    ```csharp  \n    WebRequest request = WebRequest.Create(\"http://www.contoso.com/PostAccepter.aspx\");  \n    ```  \n  \n    ```vb  \n    Dim request as WebRequest = WebRequest.Create(\"http://www.contoso.com/PostAccepter.aspx\")  \n    ```  \n  \n    > [!NOTE]\n    > The .NET Framework provides protocol-specific classes derived from the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes for URIs that begin with *http:*, *https:*, *ftp:*, and *file:*.\n    If you need to set or read protocol-specific properties, you must cast your <xref:System.Net.WebRequest> or <xref:System.Net.WebResponse> object to a protocol-specific object type. For more information, see [Programming pluggable protocols](programming-pluggable-protocols.md). \n  \n2.  Set any property values that you need in your `WebRequest` object. For example, to enable authentication, set the <xref:System.Net.WebRequest.Credentials%2A?displayProperty=nameWithType> property to an instance of the <xref:System.Net.NetworkCredential> class:\n  \n    ```csharp  \n    request.Credentials = CredentialCache.DefaultCredentials;  \n    ```  \n  \n    ```vb  \n    request.Credentials = CredentialCache.DefaultCredentials  \n    ```  \n  \n3.  Specify a protocol method that permits data to be sent with a request, such as the HTTP `POST` method:  \n  \n    ```csharp  \n    request.Method = \"POST\";  \n    ```  \n  \n    ```vb  \n    request.Method = \"POST\"  \n    ```  \n  \n4.  Set the <xref:System.Web.HttpRequest.ContentLength> property to the number of bytes you're including with your request. For example: \n  \n    ```csharp  \n    request.ContentLength = byteArray.Length;  \n    ```  \n  \n    ```vb  \n    request.ContentLength = byteArray.Length  \n    ```  \n  \n5.  Set the <xref:System.Web.HttpRequest.ContentType> property to an appropriate value. For example:\n  \n    ```csharp  \n    request.ContentType = \"application/x-www-form-urlencoded\";  \n    ```  \n  \n    ```vb  \n    request.ContentType = \"application/x-www-form-urlencoded\"  \n    ```  \n  \n6.  Get the stream that holds request data by calling the <xref:System.Net.WebRequest.GetRequestStream%2A> method. For example:\n  \n    ```csharp  \n    Stream dataStream = request.GetRequestStream();  \n    ```  \n  \n    ```vb  \n    Stream dataStream = request.GetRequestStream()  \n    ```  \n  \n7.  Write the data to the <xref:System.IO.Stream> object returned by the `GetRequestStream` method. For example:\n  \n    ```csharp  \n    dataStream.Write(byteArray, 0, byteArray.Length);  \n    ```  \n  \n    ```vb  \n    dataStream.Write(byteArray, 0, byteArray.Length)  \n    ```  \n  \n8.  Close the request stream by calling the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method. For example:\n  \n    ```csharp  \n    dataStream.Close();  \n    ```  \n  \n    ```vb  \n    dataStream.Close()  \n    ```  \n  \n9. Send the request to the server by calling <xref:System.Net.WebRequest.GetResponse%2A?displayProperty=nameWithType>. This method returns an object containing the server's response. The returned `WebResponse` object's type is determined by the scheme of the request's URI. For example:\n  \n    ```csharp  \n    WebResponse response = request.GetResponse();  \n    ```  \n  \n    ```vb  \n    Dim response As WebResponse = request.GetResponse()  \n    ```  \n  \n10. You can access the properties of your `WebResponse` object or cast it to a protocol-specific instance to read protocol-specific properties. \n\n    For example, to access the HTTP-specific properties of <xref:System.Net.HttpWebResponse>, cast your `WebResponse` object to an <xref:System.Net.HttpWebResponse> reference. The following code example shows how to display the HTTP-specific <xref:System.Net.HttpWebResponse.StatusDescription%2A?displayProperty=nameWithType> property sent with a response:\n  \n    ```csharp  \n    Console.WriteLine(((HttpWebResponse)response).StatusDescription);    \n    ```  \n  \n    ```vb  \n    Console.WriteLine(CType(response, HttpWebResponse).StatusDescription)  \n    ```  \n  \n11. To get the stream containing response data sent by the server, call the <xref:System.Net.WebResponse.GetResponseStream%2A?displayProperty=nameWithType> method of your `WebResponse` object. For example:\n  \n    ```csharp  \n    Stream dataStream = response.GetResponseStream();  \n    ```  \n  \n    ```vb  \n    Dim dataStream As Stream = response.GetResponseStream()  \n    ```  \n  \n12. After you've read the data from the response object, either close it with the <xref:System.Net.WebResponse.Close%2A?displayProperty=nameWithType> method or close the response stream with the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method. If you don't close either the response or the stream, your application can run out of server connections and become unable to process additional requests. Because the `WebResponse.Close` method calls `Stream.Close` when it closes the response, it's not necessary to call `Close` on both the response and stream objects, although doing so isn't harmful. For example:\n  \n    ```csharp  \n    response.Close();  \n    ```  \n  \n    ```vb  \n    response.Close()  \n    ```  \n  \n## Example  \n  \nThe following code example shows how to send data to a web server and read the data in its response:  \n\n[!code-csharp[SendDataUsingWebRequest](../../../samples/snippets/csharp/VS_Snippets_Network/SendDataUsingWebRequest/cs/WebRequestPostExample.cs)]\n[!code-vb[SendDataUsingWebRequest](../../../samples/snippets/visualbasic/VS_Snippets_Network/SendDataUsingWebRequest/vb/WebRequestPostExample.vb)]\n\n## See also\n\n- [Creating internet requests](creating-internet-requests.md)\n- [Using streams on the network](using-streams-on-the-network.md)\n- [Accessing the internet through a proxy](accessing-the-internet-through-a-proxy.md)\n- [Requesting data](requesting-data.md)\n- [How to: Request data by using the WebRequest class](how-to-request-data-using-the-webrequest-class.md)\n","nodes":[{"pos":[4,287],"embed":true,"restype":"x-metadata","content":"title: \"How to: Send data by using the WebRequest class\"\nms.date: \"03/25/2019\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"WebRequest class, sending data to a host\"\n  - \"Sending data to a host, using WebRequest class\"\nms.assetid: 66686878-38ac-4aa6-bf42-ffb568ffc459","nodes":[{"content":"How to: Send data by using the WebRequest class","nodes":[{"pos":[0,47],"content":"How to: Send data by using the WebRequest class","nodes":[{"content":"How to: Send data by using the WebRequest class","pos":[0,47]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[294,341],"content":"How to: Send data by using the WebRequest class","linkify":"How to: Send data by using the WebRequest class","nodes":[{"content":"How to: Send data by using the WebRequest class","pos":[0,47]}]},{"content":"The following procedure describes the steps to send data to a server.","pos":[342,411]},{"content":"This procedure is commonly used to post data to a Web page.","pos":[412,471]},{"pos":[479,508],"content":"To send data to a host server","linkify":"To send data to a host server","nodes":[{"content":"To send data to a host server","pos":[0,29]}]},{"content":"Create a <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> instance by calling <ph id=\"ph2\">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> with the URI of a resource, such as a script or ASP.NET page, that accepts data.","pos":[518,724],"source":"Create a <xref:System.Net.WebRequest> instance by calling <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> with the URI of a resource, such as a script or ASP.NET page, that accepts data."},{"content":"For example:","pos":[725,737]},{"pos":[988,1490],"content":"[!NOTE]\nThe .NET Framework provides protocol-specific classes derived from the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes for URIs that begin with *http:*, *https:*, *ftp:*, and *file:*.\nIf you need to set or read protocol-specific properties, you must cast your <xref:System.Net.WebRequest> or <xref:System.Net.WebResponse> object to a protocol-specific object type. For more information, see [Programming pluggable protocols](programming-pluggable-protocols.md).","leadings":["","    > ","    "],"nodes":[{"content":"The .NET Framework provides protocol-specific classes derived from the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes for URIs that begin with *http:*, *https:*, *ftp:*, and *file:*.\nIf you need to set or read protocol-specific properties, you must cast your <xref:System.Net.WebRequest> or <xref:System.Net.WebResponse> object to a protocol-specific object type. For more information, see [Programming pluggable protocols](programming-pluggable-protocols.md).","pos":[8,492],"nodes":[{"content":"The .NET Framework provides protocol-specific classes derived from the <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.WebResponse&gt;</ph> classes for URIs that begin with <bpt id=\"p1\">*</bpt>http:<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>https:<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>ftp:<ept id=\"p3\">*</ept>, and <bpt id=\"p4\">*</bpt>file:<ept id=\"p4\">*</ept>.","pos":[0,206],"source":"The .NET Framework provides protocol-specific classes derived from the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes for URIs that begin with *http:*, *https:*, *ftp:*, and *file:*."},{"content":"If you need to set or read protocol-specific properties, you must cast your <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.WebResponse&gt;</ph> object to a protocol-specific object type.","pos":[207,387],"source":"\nIf you need to set or read protocol-specific properties, you must cast your <xref:System.Net.WebRequest> or <xref:System.Net.WebResponse> object to a protocol-specific object type."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Programming pluggable protocols<ept id=\"p1\">](programming-pluggable-protocols.md)</ept>.","pos":[388,484],"source":" For more information, see [Programming pluggable protocols](programming-pluggable-protocols.md)."}]}]},{"content":"Set any property values that you need in your <ph id=\"ph1\">`WebRequest`</ph> object.","pos":[1499,1565],"source":"Set any property values that you need in your `WebRequest` object."},{"content":"For example, to enable authentication, set the <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.Credentials%2A?displayProperty=nameWithType&gt;</ph> property to an instance of the <ph id=\"ph2\">&lt;xref:System.Net.NetworkCredential&gt;</ph> class:","pos":[1566,1759],"source":" For example, to enable authentication, set the <xref:System.Net.WebRequest.Credentials%2A?displayProperty=nameWithType> property to an instance of the <xref:System.Net.NetworkCredential> class:"},{"pos":[1948,2050],"content":"Specify a protocol method that permits data to be sent with a request, such as the HTTP <ph id=\"ph1\">`POST`</ph> method:","source":"Specify a protocol method that permits data to be sent with a request, such as the HTTP `POST` method:"},{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Web.HttpRequest.ContentLength&gt;</ph> property to the number of bytes you're including with your request.","pos":[2175,2294],"source":"Set the <xref:System.Web.HttpRequest.ContentLength> property to the number of bytes you're including with your request."},{"content":"For example:","pos":[2295,2307]},{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Web.HttpRequest.ContentType&gt;</ph> property to an appropriate value.","pos":[2465,2548],"source":"Set the <xref:System.Web.HttpRequest.ContentType> property to an appropriate value."},{"content":"For example:","pos":[2549,2561]},{"content":"Get the stream that holds request data by calling the <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.GetRequestStream%2A&gt;</ph> method.","pos":[2752,2862],"source":"Get the stream that holds request data by calling the <xref:System.Net.WebRequest.GetRequestStream%2A> method."},{"content":"For example:","pos":[2863,2875]},{"content":"Write the data to the <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> object returned by the <ph id=\"ph2\">`GetRequestStream`</ph> method.","pos":[3044,3139],"source":"Write the data to the <xref:System.IO.Stream> object returned by the `GetRequestStream` method."},{"content":"For example:","pos":[3140,3152]},{"content":"Close the request stream by calling the <ph id=\"ph1\">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method.","pos":[3325,3434],"source":"Close the request stream by calling the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method."},{"content":"For example:","pos":[3435,3447]},{"content":"Send the request to the server by calling <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.GetResponse%2A?displayProperty=nameWithType&gt;</ph>.","pos":[3559,3674],"source":"Send the request to the server by calling <xref:System.Net.WebRequest.GetResponse%2A?displayProperty=nameWithType>."},{"content":"This method returns an object containing the server's response.","pos":[3675,3738]},{"content":"The returned <ph id=\"ph1\">`WebResponse`</ph> object's type is determined by the scheme of the request's URI.","pos":[3739,3829],"source":" The returned `WebResponse` object's type is determined by the scheme of the request's URI."},{"content":"For example:","pos":[3830,3842]},{"pos":[4014,4153],"content":"You can access the properties of your <ph id=\"ph1\">`WebResponse`</ph> object or cast it to a protocol-specific instance to read protocol-specific properties.","source":"You can access the properties of your `WebResponse` object or cast it to a protocol-specific instance to read protocol-specific properties."},{"content":"For example, to access the HTTP-specific properties of <ph id=\"ph1\">&lt;xref:System.Net.HttpWebResponse&gt;</ph>, cast your <ph id=\"ph2\">`WebResponse`</ph> object to an <ph id=\"ph3\">&lt;xref:System.Net.HttpWebResponse&gt;</ph> reference.","pos":[4160,4331],"source":"For example, to access the HTTP-specific properties of <xref:System.Net.HttpWebResponse>, cast your `WebResponse` object to an <xref:System.Net.HttpWebResponse> reference."},{"content":"The following code example shows how to display the HTTP-specific <ph id=\"ph1\">&lt;xref:System.Net.HttpWebResponse.StatusDescription%2A?displayProperty=nameWithType&gt;</ph> property sent with a response:","pos":[4332,4512],"source":" The following code example shows how to display the HTTP-specific <xref:System.Net.HttpWebResponse.StatusDescription%2A?displayProperty=nameWithType> property sent with a response:"},{"content":"To get the stream containing response data sent by the server, call the <ph id=\"ph1\">&lt;xref:System.Net.WebResponse.GetResponseStream%2A?displayProperty=nameWithType&gt;</ph> method of your <ph id=\"ph2\">`WebResponse`</ph> object.","pos":[4724,4912],"source":"To get the stream containing response data sent by the server, call the <xref:System.Net.WebResponse.GetResponseStream%2A?displayProperty=nameWithType> method of your `WebResponse` object."},{"content":"For example:","pos":[4913,4925]},{"content":"After you've read the data from the response object, either close it with the <ph id=\"ph1\">&lt;xref:System.Net.WebResponse.Close%2A?displayProperty=nameWithType&gt;</ph> method or close the response stream with the <ph id=\"ph2\">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method.","pos":[5105,5365],"source":"After you've read the data from the response object, either close it with the <xref:System.Net.WebResponse.Close%2A?displayProperty=nameWithType> method or close the response stream with the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method."},{"content":"If you don't close either the response or the stream, your application can run out of server connections and become unable to process additional requests.","pos":[5366,5520]},{"content":"Because the <ph id=\"ph1\">`WebResponse.Close`</ph> method calls <ph id=\"ph2\">`Stream.Close`</ph> when it closes the response, it's not necessary to call <ph id=\"ph3\">`Close`</ph> on both the response and stream objects, although doing so isn't harmful.","pos":[5521,5718],"source":" Because the `WebResponse.Close` method calls `Stream.Close` when it closes the response, it's not necessary to call `Close` on both the response and stream objects, although doing so isn't harmful."},{"content":"For example:","pos":[5719,5731]},{"pos":[5839,5846],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example shows how to send data to a web server and read the data in its response:","pos":[5852,5952]},{"pos":[6253,6261],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[6265,6324],"content":"<bpt id=\"p1\">[</bpt>Creating internet requests<ept id=\"p1\">](creating-internet-requests.md)</ept>","source":"[Creating internet requests](creating-internet-requests.md)"},{"pos":[6327,6390],"content":"<bpt id=\"p1\">[</bpt>Using streams on the network<ept id=\"p1\">](using-streams-on-the-network.md)</ept>","source":"[Using streams on the network](using-streams-on-the-network.md)"},{"pos":[6393,6476],"content":"<bpt id=\"p1\">[</bpt>Accessing the internet through a proxy<ept id=\"p1\">](accessing-the-internet-through-a-proxy.md)</ept>","source":"[Accessing the internet through a proxy](accessing-the-internet-through-a-proxy.md)"},{"pos":[6479,6516],"content":"<bpt id=\"p1\">[</bpt>Requesting data<ept id=\"p1\">](requesting-data.md)</ept>","source":"[Requesting data](requesting-data.md)"},{"pos":[6519,6622],"content":"<bpt id=\"p1\">[</bpt>How to: Request data by using the WebRequest class<ept id=\"p1\">](how-to-request-data-using-the-webrequest-class.md)</ept>","source":"[How to: Request data by using the WebRequest class](how-to-request-data-using-the-webrequest-class.md)"}]}