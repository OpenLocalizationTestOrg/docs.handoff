{"content":"---\ntitle: \"foreach, in (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"foreach\"\n  - \"foreach_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"foreach keyword [C#]\"\n  - \"foreach statement [C#]\"\n  - \"in keyword [C#]\"\nms.assetid: 5a9c5ddc-5fd3-457a-9bb6-9abffcd874ec\ncaps.latest.revision: 29\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# foreach, in (C# Reference)\nThe `foreach` statement repeats a group of embedded statements for each element in an array or an object collection that implements the <xref:System.Collections.IEnumerable?displayProperty=fullName> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName> interface. The `foreach` statement is used to iterate through the collection to get the information that you want, but can not be used to add or remove items from the source collection to avoid unpredictable side effects. If you need to add or remove items from the source collection, use a [for](../../../csharp/language-reference/keywords/for.md) loop.  \n  \n The embedded statements continue to execute for each element in the array or collection. After the iteration has been completed for all the elements in the collection, control is transferred to the next statement following the `foreach` block.  \n  \n At any point within the `foreach` block, you can break out of the loop by using the [break](../../../csharp/language-reference/keywords/break.md) keyword, or step to the next iteration in the loop by using the [continue](../../../csharp/language-reference/keywords/continue.md) keyword.  \n  \n A `foreach` loop can also be exited by the [goto](../../../csharp/language-reference/keywords/goto.md), [return](../../../csharp/language-reference/keywords/return.md), or [throw](../../../csharp/language-reference/keywords/throw.md) statements.  \n  \n For more information about the `foreach` keyword and code samples, see the following topics:  \n  \n [Using foreach with Arrays](../../../csharp/programming-guide/arrays/using-foreach-with-arrays.md)  \n  \n [How to: Access a Collection Class with foreach](../../../csharp/programming-guide/classes-and-structs/how-to-access-a-collection-class-with-foreach.md)  \n  \n## Example  \n The following code shows three examples:  \n  \n-   a typical `foreach` loop that displays the contents of an array of integers  \n  \n-   a [for](../../../csharp/language-reference/keywords/for.md) loop that does the same thing  \n  \n-   a `foreach` loop that maintains a count of the number of elements in the array  \n  \n [!code-cs[csrefKeywordsIteration#4](../../../csharp/language-reference/keywords/codesnippet/CSharp/foreach-in_1.cs)]  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](../../../csharp/language-reference/keywords/includes/csharplangspec_md.md)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Keywords](../../../csharp/language-reference/keywords/index.md)   \n [Iteration Statements](../../../csharp/language-reference/keywords/iteration-statements.md)   \n [for](../../../csharp/language-reference/keywords/for.md)","nodes":[{"pos":[12,55],"content":"foreach, in (C# Reference) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"foreach, in (C# Reference) | Microsoft Docs","pos":[0,43]}]},{"pos":[634,660],"content":"foreach, in (C# Reference)","linkify":"foreach, in (C# Reference)","nodes":[{"content":"foreach, in (C# Reference)","pos":[0,26]}]},{"content":"The <ph id=\"ph1\">`foreach`</ph> statement repeats a group of embedded statements for each element in an array or an object collection that implements the <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName&gt;</ph> interface.","pos":[661,948],"source":"The `foreach` statement repeats a group of embedded statements for each element in an array or an object collection that implements the <xref:System.Collections.IEnumerable?displayProperty=fullName> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName> interface."},{"content":"The <ph id=\"ph1\">`foreach`</ph> statement is used to iterate through the collection to get the information that you want, but can not be used to add or remove items from the source collection to avoid unpredictable side effects.","pos":[949,1159],"source":" The `foreach` statement is used to iterate through the collection to get the information that you want, but can not be used to add or remove items from the source collection to avoid unpredictable side effects."},{"content":"If you need to add or remove items from the source collection, use a <bpt id=\"p1\">[</bpt>for<ept id=\"p1\">](../../../csharp/language-reference/keywords/for.md)</ept> loop.","pos":[1160,1292],"source":" If you need to add or remove items from the source collection, use a [for](../../../csharp/language-reference/keywords/for.md) loop."},{"content":"The embedded statements continue to execute for each element in the array or collection.","pos":[1299,1387]},{"content":"After the iteration has been completed for all the elements in the collection, control is transferred to the next statement following the <ph id=\"ph1\">`foreach`</ph> block.","pos":[1388,1542],"source":" After the iteration has been completed for all the elements in the collection, control is transferred to the next statement following the `foreach` block."},{"pos":[1549,1835],"content":"At any point within the <ph id=\"ph1\">`foreach`</ph> block, you can break out of the loop by using the <bpt id=\"p1\">[</bpt>break<ept id=\"p1\">](../../../csharp/language-reference/keywords/break.md)</ept> keyword, or step to the next iteration in the loop by using the <bpt id=\"p2\">[</bpt>continue<ept id=\"p2\">](../../../csharp/language-reference/keywords/continue.md)</ept> keyword.","source":"At any point within the `foreach` block, you can break out of the loop by using the [break](../../../csharp/language-reference/keywords/break.md) keyword, or step to the next iteration in the loop by using the [continue](../../../csharp/language-reference/keywords/continue.md) keyword."},{"pos":[1842,2087],"content":"A <ph id=\"ph1\">`foreach`</ph> loop can also be exited by the <bpt id=\"p1\">[</bpt>goto<ept id=\"p1\">](../../../csharp/language-reference/keywords/goto.md)</ept>, <bpt id=\"p2\">[</bpt>return<ept id=\"p2\">](../../../csharp/language-reference/keywords/return.md)</ept>, or <bpt id=\"p3\">[</bpt>throw<ept id=\"p3\">](../../../csharp/language-reference/keywords/throw.md)</ept> statements.","source":"A `foreach` loop can also be exited by the [goto](../../../csharp/language-reference/keywords/goto.md), [return](../../../csharp/language-reference/keywords/return.md), or [throw](../../../csharp/language-reference/keywords/throw.md) statements."},{"pos":[2094,2186],"content":"For more information about the <ph id=\"ph1\">`foreach`</ph> keyword and code samples, see the following topics:","source":"For more information about the `foreach` keyword and code samples, see the following topics:"},{"pos":[2193,2291],"content":"<bpt id=\"p1\">[</bpt>Using foreach with Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/using-foreach-with-arrays.md)</ept>","source":"[Using foreach with Arrays](../../../csharp/programming-guide/arrays/using-foreach-with-arrays.md)"},{"pos":[2298,2450],"content":"<bpt id=\"p1\">[</bpt>How to: Access a Collection Class with foreach<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/how-to-access-a-collection-class-with-foreach.md)</ept>","source":"[How to: Access a Collection Class with foreach](../../../csharp/programming-guide/classes-and-structs/how-to-access-a-collection-class-with-foreach.md)"},{"pos":[2459,2466],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code shows three examples:","pos":[2470,2510]},{"pos":[2520,2595],"content":"a typical <ph id=\"ph1\">`foreach`</ph> loop that displays the contents of an array of integers","source":"a typical `foreach` loop that displays the contents of an array of integers"},{"pos":[2605,2694],"content":"a <bpt id=\"p1\">[</bpt>for<ept id=\"p1\">](../../../csharp/language-reference/keywords/for.md)</ept> loop that does the same thing","source":"a [for](../../../csharp/language-reference/keywords/for.md) loop that does the same thing"},{"pos":[2704,2782],"content":"a <ph id=\"ph1\">`foreach`</ph> loop that maintains a count of the number of elements in the array","source":"a `foreach` loop that maintains a count of the number of elements in the array"},{"pos":[2789,2905],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csrefKeywordsIteration#4<ept id=\"p2\">](../../../csharp/language-reference/keywords/codesnippet/CSharp/foreach-in_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csrefKeywordsIteration#4](../../../csharp/language-reference/keywords/codesnippet/CSharp/foreach-in_1.cs)]"},{"pos":[2914,2939],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[3053,3061],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3065,3125],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3128,3196],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3199,3268],"source":" [C# Keywords](../../../csharp/language-reference/keywords/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Iteration Statements<ept id=\"p1\">](../../../csharp/language-reference/keywords/iteration-statements.md)</ept><ph id=\"ph1\"> </ph>","pos":[3271,3364],"source":" [Iteration Statements](../../../csharp/language-reference/keywords/iteration-statements.md) "},{"content":"<bpt id=\"p1\"> [</bpt>for<ept id=\"p1\">](../../../csharp/language-reference/keywords/for.md)</ept>","pos":[3367,3425],"source":" [for](../../../csharp/language-reference/keywords/for.md)"}]}