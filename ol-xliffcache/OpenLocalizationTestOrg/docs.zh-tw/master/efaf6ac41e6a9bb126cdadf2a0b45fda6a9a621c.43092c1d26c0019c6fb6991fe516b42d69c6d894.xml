{"content":"---\ntitle: \"How to: Create a Custom Panel Element | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"Panel control\"\n  - \"custom Panel elements\"\nms.assetid: e0df4f1e-8c07-4e86-89a3-e22acfffdc2a\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Create a Custom Panel Element\n## Example  \n This example shows how to override the default layout behavior of the <xref:System.Windows.Controls.Panel> element and create custom layout elements that are derived from <xref:System.Windows.Controls.Panel>.  \n  \n The example defines a simple custom <xref:System.Windows.Controls.Panel> element called `PlotPanel`, which positions child elements according to two hard-coded x- and y-coordinates. In this example, `x` and `y` are both set to `50`; therefore, all child elements are positioned at that location on the x and y axes.  \n  \n To implement custom <xref:System.Windows.Controls.Panel> behaviors, the example uses the <xref:System.Windows.FrameworkElement.MeasureOverride%2A> and <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> methods. Each method returns the <xref:System.Windows.Size> data that is necessary to position and render child elements.  \n  \n [!code-cpp[PlotPanel#1](../../../../samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#1)]\n [!code-csharp[PlotPanel#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#1)]\n [!code-vb[PlotPanel#1](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#1)]  \n  \n## See Also  \n <xref:System.Windows.Controls.Panel>   \n [Panels Overview](../../../../docs/framework/wpf/controls/panels-overview.md)   \n [Create a Custom Content-Wrapping Panel Sample](http://go.microsoft.com/fwlink/?LinkID=159979)","nodes":[{"pos":[4,436],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create a Custom Panel Element | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"Panel control\"\n  - \"custom Panel elements\"\nms.assetid: e0df4f1e-8c07-4e86-89a3-e22acfffdc2a\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Create a Custom Panel Element | Microsoft Docs","nodes":[{"pos":[0,54],"content":"How to: Create a Custom Panel Element | Microsoft Docs","nodes":[{"content":"How to: Create a Custom Panel Element | Microsoft Docs","pos":[0,54]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[443,480],"content":"How to: Create a Custom Panel Element","linkify":"How to: Create a Custom Panel Element","nodes":[{"content":"How to: Create a Custom Panel Element","pos":[0,37]}]},{"pos":[484,491],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[495,703],"content":"This example shows how to override the default layout behavior of the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element and create custom layout elements that are derived from <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel&gt;</ph>.","source":"This example shows how to override the default layout behavior of the <xref:System.Windows.Controls.Panel> element and create custom layout elements that are derived from <xref:System.Windows.Controls.Panel>."},{"content":"The example defines a simple custom <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element called <ph id=\"ph2\">`PlotPanel`</ph>, which positions child elements according to two hard-coded x- and y-coordinates.","pos":[710,891],"source":"The example defines a simple custom <xref:System.Windows.Controls.Panel> element called `PlotPanel`, which positions child elements according to two hard-coded x- and y-coordinates."},{"content":"In this example, <ph id=\"ph1\">`x`</ph> and <ph id=\"ph2\">`y`</ph> are both set to <ph id=\"ph3\">`50`</ph>; therefore, all child elements are positioned at that location on the x and y axes.","pos":[892,1025],"source":" In this example, `x` and `y` are both set to `50`; therefore, all child elements are positioned at that location on the x and y axes."},{"content":"To implement custom <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> behaviors, the example uses the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph> methods.","pos":[1032,1249],"source":"To implement custom <xref:System.Windows.Controls.Panel> behaviors, the example uses the <xref:System.Windows.FrameworkElement.MeasureOverride%2A> and <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> methods."},{"content":"Each method returns the <ph id=\"ph1\">&lt;xref:System.Windows.Size&gt;</ph> data that is necessary to position and render child elements.","pos":[1250,1362],"source":" Each method returns the <xref:System.Windows.Size> data that is necessary to position and render child elements."},{"pos":[1716,1724],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Panels Overview<ept id=\"p1\">](../../../../docs/framework/wpf/controls/panels-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[1769,1847],"source":"[Panels Overview](../../../../docs/framework/wpf/controls/panels-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Create a Custom Content-Wrapping Panel Sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=159979)</ept>","pos":[1851,1945],"source":"[Create a Custom Content-Wrapping Panel Sample](http://go.microsoft.com/fwlink/?LinkID=159979)"}]}