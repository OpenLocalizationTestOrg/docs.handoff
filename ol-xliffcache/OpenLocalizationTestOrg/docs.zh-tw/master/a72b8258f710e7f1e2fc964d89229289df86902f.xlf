<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a72b8258f710e7f1e2fc964d89229289df86902f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\wcf-discovery-object-model.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07f3e1f118a2725cea05b356078829192b66fac5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ac2b48f848541b520a746a304c863d6c9207c8a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WCF Discovery Object Model | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WCF Discovery Object Model</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>WCF Discovery consists of a set of types that provide a unified programming model that allows you to write services that are discoverable at runtime and clients that find and use these services.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Making a Service Discoverable and Finding Services</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To make a WCF service discoverable, add a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> of the service host and add a discovery endpoint.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If a service is configured to send announcement messages (by adding an <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementEndpoint&gt;</ph>) the announcement is sent when the service host is opened and closed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A client that wants to listen for service announcement messages hosts an announcement service and adds one or more announcement endpoints.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The announcement service receives announcement messages and raises announcement events.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A client uses the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> class to search for available services.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The client application instantiates the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> class, passing in a discovery endpoint that specifies where to send discovery messages.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The client calls the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Find%2A&gt;</ph> method, which sends a <ph id="ph2">`Probe`</ph> request.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Services listening for discovery messages receive this <ph id="ph1">`Probe`</ph> request.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the service matches the criteria specified in the <ph id="ph1">`Probe`</ph>, it sends a <ph id="ph2">`ProbeMatch`</ph> message back to the client.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Object Model</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The WCF Discovery API defines the following classes:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>AnnouncementClient</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementClient&gt;</ph> class provides synchronous and asynchronous methods for sending announcement messages.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>There are two types of announcement messages, Hello and Bye.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A Hello message is sent to indicate that a service has become available and a Bye message is sent to indicate that an existing service has become unavailable.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The developer creates an <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementClient&gt;</ph> instance, passing an instance of <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.AnnouncementEndpoint&gt;</ph> as a constructor parameter.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>AnnouncementEndpoint</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementEndpoint&gt;</ph> represents a standard endpoint with a fixed announcement contract.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It is used by a service or client to send and receive announcement messages.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementEndpoint&gt;</ph> class is set to use the WS_Discovery 11 protocol version.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>AnnouncementService</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementService&gt;</ph> is a system-provided implementation of an announcement service that receives and processes announcement messages.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When a Hello or Bye message is received, the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.AnnouncementService&gt;</ph> instance calls the appropriate virtual method <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.AnnouncementService.OnBeginOnlineAnnouncement%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.AnnouncementService.OnBeginOfflineAnnouncement%2A&gt;</ph>, which raises announcement events.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>DiscoveryClient</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> class is used by a client application to find and resolve available services.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It provides synchronous and asynchronous methods for finding and resolving services based on the specified <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.ResolveCriteria&gt;</ph> respectively.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The developer creates a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> instance and provides an instance of <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryEndpoint&gt;</ph> as a constructor parameter.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To find a service, the developer invokes the synchronous or asynchronous <ph id="ph1">`Find`</ph> method, which provides a <ph id="ph2">&lt;!--zz &lt;xref:System.ServiceModel.Discription.FindCriteria&gt; --&gt;</ph> <ph id="ph3">`FindCriteria`</ph> instance that contains the search criteria to use.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> creates a <ph id="ph2">`Probe`</ph> message with the appropriate headers, and sends the find request.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Because there can be more than one outstanding <ph id="ph1">`Find`</ph> request at any time, the client correlates the received responses and validates the response.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It then delivers the results to the caller of the <ph id="ph1">`Find`</ph> operation using <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.FindResponse&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To resolve a known service, the developer invokes the synchronous or asynchronous <ph id="ph1">`Resolve`</ph> method that provides an instance of <ph id="ph2">&lt;!--zz &lt;xref:System.ServiceModel.ResolveCriteria&gt;--&gt;</ph> <ph id="ph3">`ResolveCriteria`</ph> that contains the <ph id="ph4">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> of the known service.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> creates the <ph id="ph2">`Resolve`</ph> message with the appropriate headers and sends the resolve request.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The received response is correlated against the outstanding resolve requests and the result is delivered to the caller of the <ph id="ph1">`Resolve`</ph> operation using <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.ResolveResponse&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If a discovery proxy is present on the network and the <ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.Discover.DiscoveryClient&gt; --&gt;</ph> <ph id="ph2">`DiscoveryClient`</ph> sends the discovery request in a multicast fashion, the discovery proxy can respond with the multicast suppression Hello message.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.Discover.DiscoveryClient&gt; --&gt;</ph> <ph id="ph2">`DiscoveryClient`</ph> raises the <ph id="ph3">`ProxyAvailable`</ph> event when it receives Hello messages in response to outstanding <ph id="ph4">`Find`</ph> or <ph id="ph5">`Resolve`</ph> requests.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ProxyAvailable`</ph> event contains the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph> about the discovery proxy.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It is up to the developer to use this information to switch from Ad hoc to Managed mode.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>DiscoveryEndpoint</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryEndpoint&gt;</ph> represents a standard endpoint with a fixed discovery contract.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It is used by a service or client to send or receive discovery messages.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryEndpoint&gt;</ph> is set to use <ph id="ph2">&lt;!--zz &lt;xref:System.ServiceModel.Discovery.DiscoveryMode.Managed&gt;--&gt;</ph> <ph id="ph3">`Managed`</ph> mode and the WSDiscovery11 WS-Discovery version.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>DiscoveryMessageSequenceGenerator</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryMessageSequenceGenerator&gt;</ph> is used to generate a <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryMessageSequence&gt;</ph> when the service is sending out Discovery or Announcement messages.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>DiscoveryService</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryService&gt;</ph> abstract class provides a framework for receiving and processing <ph id="ph2">`Probe`</ph> and <ph id="ph3">`Resolve`</ph> messages.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">`Probe`</ph> message is received, <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryService&gt;</ph> creates an instance of <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.FindRequestContext&gt;</ph> based on the incoming message and invokes the <ph id="ph4">&lt;xref:System.ServiceModel.Discovery.DiscoveryService.OnBeginFind%2A&gt;</ph> virtual method.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">`Resolve`</ph> message is received, <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryService&gt;</ph> invokes the <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.DiscoveryService.OnBeginResolve%2A&gt;</ph> virtual method.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can inherit from this class to provide a custom Discovery Service implementation.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>DiscoveryProxy</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryProxy&gt;</ph> abstract class provides a framework for receiving and processing discovery and announcement messages.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You inherit from this class when you are implementing a custom discovery proxy.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">`Probe`</ph> message is received over multicast, the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryProxy&gt;</ph> class calls the <ph id="ph3">`BeginShouldRedirectFind`</ph> virtual method to determine whether a multicast suppression message should to be sent.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the developer decides not to send a multicast suppression message or if the <ph id="ph1">`Probe`</ph> message was received over unicast, it creates an instance of the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.FindRequestContext&gt;</ph> class based on the incoming message and invokes the <ph id="ph3">`OnBeginFind`</ph> virtual method.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">`Resolve`</ph> message is received over multicast, The <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryProxy&gt;</ph> class calls the <ph id="ph3">`ShouldRedirectResolve`</ph> virtual method to determine whether a multicast suppression message should to be sent.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the developer decides not to send a multicast suppression message or if the <ph id="ph1">`Resolve`</ph> message was received over unicast, it creates an instance of the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.ResolveCriteria&gt;</ph> class based on the incoming message and invokes the <ph id="ph3">`OnBeginResolve`</ph> virtual method.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When a Hello or Bye message is received, <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryProxy&gt;</ph> calls the appropriate virtual method (<ph id="ph2">`OnBeginOnlineAnnouncement`</ph> or <ph id="ph3">`OnBeingOfflineAnnouncement`</ph>), which raises announcement events.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>DiscoveryVersion</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryVersion&gt;</ph> class represents the discovery protocol version to use.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>EndpointDiscoveryBehavior</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryBehavior&gt;</ph> class is used to control the discoverability of an endpoint, specify the extensions, additional contract type names.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>and the scopes associated with that endpoint.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This behavior is added to an application endpoint to configure its <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> is added to the service host, all the application endpoints hosted by the service host by default become discoverable.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The developer can turn off discovery for a specific endpoint by setting the <ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryBehavior.Enable%2A&gt;--&gt;</ph> <ph id="ph2">`Enable`</ph> property to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>EndpointDiscoveryMetadata</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph> class provides a version-independent representation of an endpoint published by the service.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It contains endpoint addresses, listen URIs, contract type names, scopes, metadata version and extensions specified by the service developer.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria&gt;</ph> sent by the client during a <ph id="ph2">`Probe`</ph> operation is matched against the <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the criteria matches, then the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph> is returned to the client.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The endpoint address in <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ResolveCriteria&gt;</ph> is matched against the endpoint address of <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If the criteria matches, then the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph> is returned to the client.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>FindCriteria</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria&gt;</ph> class is a version-independent class used to specify the criteria used when finding a service.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>It fully supports the WS-Discovery-defined criteria for matching services.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>It also has extensions that developers can use to specify custom values that can be used during the matching process.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The developer can provide the termination criteria for the <ph id="ph1">`Find`</ph> operation by specifying the <ph id="ph2">&lt;!--zz &lt;xref:System.ServiceModel.Discovery.FindCriteria.MaxResult%2A&gt;--&gt;</ph> <ph id="ph3">`MaxResult`</ph>, which specifies the total number of services the developer is looking for or that specifies the <ph id="ph4">&lt;xref:System.ServiceModel.Discovery.FindCriteria.Duration%2A&gt;</ph>, which is the value that specifies how long the client waits for responses.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>FindRequestContext</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindRequestContext&gt;</ph> class is instantiated by the discovery service based on the <ph id="ph2">`Probe`</ph> message it receives when a client initiates a <ph id="ph3">`Find`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It contains an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCriteria&gt;</ph> that was specified by the client.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>FindResponse</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindResponse&gt;</ph> class is returned to the caller of <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Find%2A&gt;</ph> with the responses of the <ph id="ph3">`Find`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>It is also present in <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.FindCompletedEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>It contains a collection of <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph>, which is the collection of discovered endpoints and a dictionary of <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.DiscoveryMessageSequence&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>ResolveCriteria</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ResolveCriteria&gt;</ph> class is a version-independent class used to specify the criteria used when resolving an already known service.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It contains the endpoint address of the known service.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The developer can provide the termination criteria for the resolve operation by specifying the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ResolveCriteria.Duration%2A&gt;</ph>, which specifies how long the client waits for responses.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>ResolveResponse</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ResolveResponse&gt;</ph> is returned to the caller of the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient.Resolve%2A&gt;</ph> method with the response of the <ph id="ph3">`Resolve`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>It is also present in <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ResolveCompletedEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>It contains an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph>, which is the discovered endpoints and an instance of <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryMessageSequence&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>ServiceDiscoveryBehavior</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> class allows the developer to add the discovery feature to a service.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You add this behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> class iterates over the application endpoints added to the service host and creates a collection of <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph> from the discoverable endpoints.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>All endpoints are discoverable by default.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The discoverability of a particular endpoint can be controlled by adding the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryBehavior&gt;</ph> to that particular endpoint.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If announcement endpoints are added to <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> then the announcement of all discoverable endpoints is sent over each of the announcement endpoints when the service host is opened or closed.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>ServiceDiscoveryExtension</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryExtension&gt; --&gt;</ph> <ph id="ph2">`ServiceDiscoveryExtension`</ph> class is created by the <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The endpoints that are made discoverable can be obtained from <ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryExtension&gt; --&gt;</ph> <ph id="ph2">`ServiceDiscoveryExtension`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This class is also used to specify a custom discovery service implementation.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>UdpAnnouncementEndpoint</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpAnnouncementEndpoint&gt;</ph> class is a standard announcement endpoint that is pre-configured for announcement over a UDP multicast binding.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpAnnouncementEndpoint&gt;</ph> is set to use the WSApril2005 WS_Discovery version.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>UdpDiscoveryEndpoint</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph> class is a standard discovery endpoint that is pre-configured for discovery over a UDP multicast binding.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DiscoveryEndpoint&gt;</ph> is set to use the WSDiscovery11 WS-Discovery version and <ph id="ph2">&lt;!--zz &lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint.Adhoc&gt;--&gt;</ph> <ph id="ph3">`Adhoc`</ph> mode.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>