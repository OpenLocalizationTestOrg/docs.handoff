<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-obtain-stores-for-isolated-storage.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0968443af28e2d403b08a1af50846e7a1369db49</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\io\how-to-obtain-stores-for-isolated-storage.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">311e9b2ead752d9f646304e3ef22ab269e210655</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea9a62e1a14bb8205b0d077b2e2acb2c40a3aa6f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Obtain Stores for Isolated Storage</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Obtain Stores for Isolated Storage</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An isolated store exposes a virtual file system within a data compartment.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> class supplies a number of methods for interacting with an isolated store.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To create and retrieve stores, <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> provides three static methods:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly%2A&gt;</ph> returns storage that is isolated by user and assembly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain%2A&gt;</ph> returns storage that is isolated by domain and assembly.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Both methods retrieve a store that belongs to the code from which they are called.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The static method <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A&gt;</ph> returns an isolated store that is specified by passing in a combination of scope parameters.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following code returns a store that is isolated by user, assembly, and domain.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A&gt;</ph> method to specify that a store should roam with a roaming user profile.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For details on how to set this up, see <bpt id="p1">[</bpt>Types of Isolation<ept id="p1">](../../../docs/standard/io/types-of-isolation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Isolated stores obtained from within different assemblies are, by default, different stores.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can access the store of a different assembly or domain by passing in the assembly or domain evidence in the parameters of the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This requires permission to access isolated storage by application domain identity.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A&gt;</ph> method overloads.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A&gt;</ph> methods return an <ph id="ph4">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To help you decide which isolation type is most appropriate for your situation, see <bpt id="p1">[</bpt>Types of Isolation<ept id="p1">](../../../docs/standard/io/types-of-isolation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you have an isolated storage file object, you can use the isolated storage methods to read, write, create, and delete files and directories.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>There is no mechanism that prevents code from passing an <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> object to code that does not have sufficient access to get the store itself.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Domain and assembly identities and isolated storage permissions are checked only when a reference to an <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorage&gt;</ph> object is obtained, typically in the <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Protecting references to <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> objects is, therefore, the responsibility of the code that uses these references.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following code provides a simple example of a class obtaining a store that is isolated by user and assembly.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The code can be changed to retrieve a store that is isolated by user, domain, and assembly by adding <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageScope.Domain?displayProperty=nameWithType&gt;</ph> to the arguments that the <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A&gt;</ph> method passes.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>After you run the code, you can confirm that a store was created by typing <bpt id="p1">**</bpt>StoreAdm /LIST<ept id="p1">**</ept> at the command line.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This runs the <bpt id="p1">[</bpt>Isolated Storage tool (Storeadm.exe)<ept id="p1">](../../../docs/framework/tools/storeadm-exe-isolated-storage-tool.md)</ept> and lists all the current isolated stores for the user.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Isolated Storage<ept id="p1">](../../../docs/standard/io/isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Types of Isolation<ept id="p1">](../../../docs/standard/io/types-of-isolation.md)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Assemblies in the Common Language Runtime<ept id="p1">](../../../docs/framework/app-domains/assemblies-in-the-common-language-runtime.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>