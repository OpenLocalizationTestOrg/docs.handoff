<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="drawing-formatted-text.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dfb26a99ad5187d4f84413837d3557911fbf49c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\drawing-formatted-text.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6210b745ebc5b3e8db9c2e3b6df092699344ed37</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e60e9acc949026b835138cdc8be3fbf3165d6356</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Drawing Formatted Text | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Drawing Formatted Text</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic provides an overview of the features of the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This object provides low-level control for drawing text in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Technology Overview</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object allows you to draw multi-line text, in which each character in the text can be individually formatted.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following example shows text that has several formats applied to it.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text displayed using FormattedText object<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/formattedtext01.jpg "</bpt>FormattedText01<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Displayed text using FormattedText method</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For those developers migrating from the <ph id="ph1">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> API, the table in the <bpt id="p1">[</bpt>Win32 Migration<ept id="p1">](#win32_migration)</ept> section lists the <ph id="ph2">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> DrawText flags and the approximate equivalent in <ph id="ph3">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Reasons for Using Formatted Text</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>includes multiple controls for drawing text to the screen.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Each control is targeted to a different scenario and has its own list of features and limitations.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In general, the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> element should be used when limited text support is required, such as a brief sentence in a <ph id="ph2">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> can be used when minimal text support is required.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Documents in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/documents-in-wpf.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object provides greater text formatting features than <ph id="ph2">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> text controls, and can be useful in cases where you want to use text as a decorative element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see the following section <bpt id="p1">[</bpt>Converting Formatted Text to a Geometry<ept id="p1">](#converting_formatted_text)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object is useful for creating text-oriented <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>-derived objects.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> is a lightweight drawing class that is used to render shapes, images, or text.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Using the FormattedText Object</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To create formatted text, call the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.%23ctor%2A&gt;</ph> constructor to create a <ph id="ph2">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Once you have created the initial formatted text string, you can apply a range of formatting styles.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.MaxTextWidth%2A&gt;</ph> property to constrain the text to a specific width.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The text will automatically wrap to avoid exceeding the specified width.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.MaxTextHeight%2A&gt;</ph> property to constrain the text to a specific height.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The text will display an ellipsis, "â€¦" for the text that exceeds the specified height.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text displayed using FormattedText object<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/formattedtext02.png "</bpt>FormattedText02<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Displayed text showing wordwrapping and ellipsis</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can apply multiple formatting styles to one or more characters.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, you could call both the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.SetFontSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A&gt;</ph> methods to change the formatting of the first five characters in the text.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object and then applies several formatting styles to the text.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Font Size Unit of Measure</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>As with other text objects in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> applications, the <ph id="ph2">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object uses device-independent pixels as the unit of measure.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>However, most <ph id="ph1">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> applications use points as the unit of measure.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you want to use display text in units of points in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> applications, you need to convert <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](../../../../includes/tlasharptla-dipixelsharpplural-md.md)]</ph> to points.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following code example shows how to perform this conversion.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Converting Formatted Text to a Geometry</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can convert formatted text into <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects, allowing you to create other types of visually interesting text.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, you could create a <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> object based on the outline of a text string.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text outline using a linear gradient brush<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/outlinedtext02.jpg "</bpt>OutlinedText02<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Text outline using a linear gradient brush</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following examples illustrate several ways of creating interesting visual effects by modifying the stroke, fill, and highlight of converted text.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text with different colors for fill and stroke<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/outlinedtext03.jpg "</bpt>OutlinedText03<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example of setting stroke and fill to different colors</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text with image brush applied to stroke<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/outlinedtext04.jpg "</bpt>OutlinedText04<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Example of an image brush applied to the stroke</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text with image brush applied to stroke<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/outlinedtext05.jpg "</bpt>OutlinedText05<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example of an image brush applied to the stroke and highlight</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When text is converted to a <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> object, it is no longer a collection of charactersâ€”you cannot modify the characters in the text string.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>However, you can affect the appearance of the converted text by modifying its stroke and fill properties.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The stroke refers to the outline of the converted text; the fill refers to the area inside the outline of the converted text.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Create Outlined Text<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-create-outlined-text.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can also convert formatted text to a <ph id="ph1">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> object, and use the object for highlighting the text.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example, you could apply an animation to the <ph id="ph1">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> object so that the animation follows the outline of the formatted text.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The following example shows formatted text that has been converted to a <ph id="ph1">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An animated ellipse follows the path of the strokes of the rendered text.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Sphere following the path geometry of text<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/textpathgeometry01.gif "</bpt>TextPathGeometry01<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Sphere following the path geometry of text</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create a PathGeometry Animation for Text<ept id="p1">](http://msdn.microsoft.com/en-us/29f8051e-798a-463f-a926-a099a99e9c67)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can create other interesting uses for formatted text once it has been converted to a <ph id="ph1">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For example, you can clip video to display inside it.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Video displaying in the path geometry of text<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/videotextdemo01.png "</bpt>VideoTextDemo01<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Video displaying in the path geometry of text</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Win32 Migration</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The features of <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> for drawing text are similar to the features of the <ph id="ph2">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> DrawText function.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For those developers migrating from the <ph id="ph1">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> API, the following table lists the <ph id="ph2">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> DrawText flags and the approximate equivalent in <ph id="ph3">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>DrawText flag</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>WPF equivalent</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Notes</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>DT_BOTTOM</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.Height%2A&gt;</ph> property to compute an appropriate <ph id="ph2">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> DrawText 'y' position.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>DT_CALCRECT</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.FormattedText.Width%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.FormattedText.Width%2A&gt;</ph> properties to calculate the output rectangle.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>DT_CENTER</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.TextAlignment%2A&gt;</ph> property with the value set to <ph id="ph2">&lt;xref:System.Windows.TextAlignment&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>DT_EDITCONTROL</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Not required.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Space width and last line rendering are the same as in the framework edit control.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>DT_END_ELLIPSIS</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.Trimming%2A&gt;</ph> property with the value <ph id="ph2">&lt;xref:System.Windows.TextTrimming&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.TextTrimming&gt;</ph> to get <ph id="ph2">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> DT_END_ELLIPSIS with DT_WORD_ELIPSIS end ellipsisâ€”in this case, character ellipsis only occurs on words that do not fit on a single line.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>DT_EXPAND_TABS</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Not required.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Tabs are automatically expanded to stops every 4 ems, which is approximately the width of 8 language-independent characters.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>DT_EXTERNALLEADING</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Not required.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>External leading is always included in line spacing.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.LineHeight%2A&gt;</ph> property to create user-defined line spacing.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>DT_HIDEPREFIX</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Not supported.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Remove the '&amp;' from the string before constructing the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>DT_LEFT</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This is the default text alignment.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.TextAlignment%2A&gt;</ph> property with the value set to <ph id="ph2">&lt;xref:System.Windows.TextAlignment&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>(WPF only)</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>DT_MODIFYSTRING</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Not supported.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>DT_NOCLIP</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Clipping does not happen automatically.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If you want to clip text, use the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualClip%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>DT_NOFULLWIDTHCHARBREAK</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Not supported.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>DT_NOPREFIX</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Not required.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The '&amp;' character in strings is always treated as a normal character.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>DT_PATHELLIPSIS</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.Trimming%2A&gt;</ph> property with the value <ph id="ph2">&lt;xref:System.Windows.TextTrimming&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>DT_PREFIX</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Not supported.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If you want to use underscores for text, such as an accelerator key or link, use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.SetTextDecorations%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>DT_PREFIXONLY</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Not supported.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>DT_RIGHT</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.TextAlignment%2A&gt;</ph> property with the value set to <ph id="ph2">&lt;xref:System.Windows.TextAlignment&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>(WPF only)</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>DT_RTLREADING</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.FlowDirection%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.FlowDirection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>DT_SINGLELINE</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Not required.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> objects behave as a single line control, unless either the <ph id="ph2">&lt;xref:System.Windows.Media.FormattedText.MaxTextWidth%2A&gt;</ph> property is set or the text contains a carriage return/line feed (CR/LF).</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>DT_TABSTOP</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>No support for user-defined tab stop positions.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>DT_TOP</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Not required.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Top justification is the default.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Other vertical positioning values can be defined by using the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.Height%2A&gt;</ph> property to compute an appropriate <ph id="ph2">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> DrawText 'y' position.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>DT_VCENTER</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.Height%2A&gt;</ph> property to compute an appropriate <ph id="ph2">[!INCLUDE[TLA#tla_win32](../../../../includes/tlasharptla-win32-md.md)]</ph> DrawText 'y' position.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>DT_WORDBREAK</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>None</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Not required.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Word breaking happens automatically with <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>You cannot disable it.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>DT_WORD_ELLIPSIS</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.FormattedText.Trimming%2A&gt;</ph> property with the value <ph id="ph2">&lt;xref:System.Windows.TextTrimming&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.FormattedText&gt;</ph></source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Documents in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/documents-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Typography in WPF<ept id="p1">](../../../../docs/framework/wpf/advanced/typography-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Create Outlined Text<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-create-outlined-text.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a PathGeometry Animation for Text<ept id="p1">](http://msdn.microsoft.com/en-us/29f8051e-798a-463f-a926-a099a99e9c67)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>