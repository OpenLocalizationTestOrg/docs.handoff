{"content":"---\ntitle: \"EntityClient Provider for the Entity Framework | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: 8c5db787-78e6-4a34-8dc1-188bca0aca5e\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# EntityClient Provider for the Entity Framework\nThe EntityClient provider is a data provider used by Entity Framework applications to access data described in a conceptual model. For information about conceptual models, see [Modeling and Mapping](../../../../../docs/framework/data/adonet/ef/modeling-and-mapping.md). EntityClient uses other .NET Framework data providers to access the data source. For example, EntityClient uses the .NET Framework Data Provider for SQL Server (SqlClient) when accessing a SQL Server database. For information about the SqlClient provider, see [SqlClient for the Entity Framework](../../../../../docs/framework/data/adonet/ef/sqlclient-for-the-entity-framework.md). The EntityClient provider is implemented in the <xref:System.Data.EntityClient> namespace.  \n  \n## Managing Connections  \n The [!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)] builds on top of storage-specific [!INCLUDE[vstecado](../../../../../includes/vstecado-md.md)] data providers by providing an <xref:System.Data.EntityClient.EntityConnection> to an underlying data provider and relational database. To construct an <xref:System.Data.EntityClient.EntityConnection> object, you have to reference a set of metadata that contains the necessary models and mapping, and also a storage-specific data provider name and connection string. After the <xref:System.Data.EntityClient.EntityConnection> is in place, entities can be accessed through the classes generated from the conceptual model.  \n  \n You can specify a connection string in app.config file.  \n  \n The <xref:System.Data.EntityClient> also includes the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> class. This class enables developers to programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, by using properties and methods of the class. For more information, see [How to: Build an EntityConnection Connection String](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md).  \n  \n## Creating Queries  \n The [!INCLUDE[esql](../../../../../includes/esql-md.md)] language is a storage-independent dialect of SQL that works directly with conceptual entity schemas and supports Entity Data Model concepts such as inheritance and relationships. The <xref:System.Data.EntityClient.EntityCommand> class is used to execute an [!INCLUDE[esql](../../../../../includes/esql-md.md)] command against an entity model. When you construct <xref:System.Data.EntityClient.EntityCommand> objects, you can specify a stored procedure name or a query text. The [!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)] works with storage-specific data providers to translate generic [!INCLUDE[esql](../../../../../includes/esql-md.md)] into storage-specific queries. For more information about writing [!INCLUDE[esql](../../../../../includes/esql-md.md)] queries, see [Entity SQL Language](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md).  \n  \n The following example creates an <xref:System.Data.EntityClient.EntityCommand> object and assigns an [!INCLUDE[esql](../../../../../includes/esql-md.md)] query text to its <xref:System.Data.EntityClient.EntityCommand.CommandText%2A?displayProperty=fullName> property. This [!INCLUDE[esql](../../../../../includes/esql-md.md)] query requests products ordered by the list price from the conceptual model. The following code has no knowledge of the storage model at all.  \n  \n `EntityCommand cmd = conn.CreateCommand();`  \n  \n `cmd.CommandText = @\"` `SELECT VALUE p`  \n  \n `FROM AdventureWorksEntities.Product AS p`  \n  \n `ORDER BY p.ListPrice \";`  \n  \n## Executing Queries  \n When a query is executed, it is parsed and converted into a canonical command tree. All subsequent processing is performed on the command tree. The command tree is the means of communication between the <xref:System.Data.EntityClient> and the underlying [!INCLUDE[dnprdnshort](../../../../../includes/dnprdnshort-md.md)] data provider, such as <xref:System.Data.SqlClient>.  \n  \n The <xref:System.Data.EntityClient.EntityDataReader> exposes the results of executing a <xref:System.Data.EntityClient.EntityCommand> against a conceptual model. To execute the command that returns the <xref:System.Data.EntityClient.EntityDataReader>, call <xref:System.Data.EntityClient.EntityCommand.ExecuteReader%2A>. The <xref:System.Data.EntityClient.EntityDataReader> implements <xref:System.Data.IExtendedDataRecord> to describe rich structured results.  \n  \n## Managing Transactions  \n In the Entity Framework, there are two ways to use transactions: automatic and explicit. Automatic transactions use the <xref:System.Transactions> namespace, and explicit transactions use the <xref:System.Data.EntityClient.EntityTransaction> class.  \n  \n To update data that is exposed through a conceptual model; see [How to: Manage Transactions in the Entity Framework](http://msdn.microsoft.com/en-us/4a55eb7f-f826-4a48-9df1-aebe2352ebef).  \n  \n## In This Section  \n [How to: Build an EntityConnection Connection String](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md)  \n  \n [How to: Execute a Query that Returns PrimitiveType Results](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-primitivetype-results.md)  \n  \n [How to: Execute a Query that Returns StructuralType Results](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)  \n  \n [How to: Execute a Query that Returns RefType Results](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-reftype-results.md)  \n  \n [How to: Execute a Query that Returns Complex Types](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-complex-types.md)  \n  \n [How to: Execute a Query that Returns Nested Collections](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-nested-collections.md)  \n  \n [How to: Execute a Parameterized Entity SQL Query Using EntityCommand](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-parameterized-entity-sql-query-using-entitycommand.md)  \n  \n [How to: Execute a Parameterized Stored Procedure Using EntityCommand](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-parameterized-stored-procedure-using-entitycommand.md)  \n  \n [How to: Execute a Polymorphic Query](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-polymorphic-query.md)  \n  \n [How to: Navigate Relationships with the Navigate Operator](../../../../../docs/framework/data/adonet/ef/how-to-navigate-relationships-with-the-navigate-operator.md)  \n  \n## See Also  \n [Managing Connections and Transactions](http://msdn.microsoft.com/en-us/b6659d2a-9a45-4e98-acaa-d7a8029e5b99)   \n [ADO.NET Entity Framework](../../../../../docs/framework/data/adonet/ef/index.md)   \n [Language Reference](../../../../../docs/framework/data/adonet/ef/language-reference/index.md)","nodes":[{"pos":[12,75],"content":"EntityClient Provider for the Entity Framework | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"EntityClient Provider for the Entity Framework | Microsoft Docs","pos":[0,63]}]},{"pos":[428,474],"content":"EntityClient Provider for the Entity Framework","linkify":"EntityClient Provider for the Entity Framework","nodes":[{"content":"EntityClient Provider for the Entity Framework","pos":[0,46]}]},{"content":"The EntityClient provider is a data provider used by Entity Framework applications to access data described in a conceptual model.","pos":[475,605]},{"content":"For information about conceptual models, see <bpt id=\"p1\">[</bpt>Modeling and Mapping<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/modeling-and-mapping.md)</ept>.","pos":[606,744],"source":" For information about conceptual models, see [Modeling and Mapping](../../../../../docs/framework/data/adonet/ef/modeling-and-mapping.md)."},{"content":"EntityClient uses other .NET Framework data providers to access the data source.","pos":[745,825]},{"content":"For example, EntityClient uses the .NET Framework Data Provider for SQL Server (SqlClient) when accessing a SQL Server database.","pos":[826,954]},{"content":"For information about the SqlClient provider, see <bpt id=\"p1\">[</bpt>SqlClient for the Entity Framework<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/sqlclient-for-the-entity-framework.md)</ept>.","pos":[955,1126],"source":" For information about the SqlClient provider, see [SqlClient for the Entity Framework](../../../../../docs/framework/data/adonet/ef/sqlclient-for-the-entity-framework.md)."},{"content":"The EntityClient provider is implemented in the <ph id=\"ph1\">&lt;xref:System.Data.EntityClient&gt;</ph> namespace.","pos":[1127,1217],"source":" The EntityClient provider is implemented in the <xref:System.Data.EntityClient> namespace."},{"pos":[1226,1246],"content":"Managing Connections","linkify":"Managing Connections","nodes":[{"content":"Managing Connections","pos":[0,20]}]},{"content":"The <ph id=\"ph1\">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> builds on top of storage-specific <ph id=\"ph2\">[!INCLUDE[vstecado](../../../../../includes/vstecado-md.md)]</ph> data providers by providing an <ph id=\"ph3\">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> to an underlying data provider and relational database.","pos":[1250,1547],"source":"The [!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)] builds on top of storage-specific [!INCLUDE[vstecado](../../../../../includes/vstecado-md.md)] data providers by providing an <xref:System.Data.EntityClient.EntityConnection> to an underlying data provider and relational database."},{"content":"To construct an <ph id=\"ph1\">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> object, you have to reference a set of metadata that contains the necessary models and mapping, and also a storage-specific data provider name and connection string.","pos":[1548,1778],"source":" To construct an <xref:System.Data.EntityClient.EntityConnection> object, you have to reference a set of metadata that contains the necessary models and mapping, and also a storage-specific data provider name and connection string."},{"content":"After the <ph id=\"ph1\">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> is in place, entities can be accessed through the classes generated from the conceptual model.","pos":[1779,1932],"source":" After the <xref:System.Data.EntityClient.EntityConnection> is in place, entities can be accessed through the classes generated from the conceptual model."},{"content":"You can specify a connection string in app.config file.","pos":[1939,1994]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.EntityClient&gt;</ph> also includes the <ph id=\"ph2\">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> class.","pos":[2001,2123],"source":"The <xref:System.Data.EntityClient> also includes the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> class."},{"content":"This class enables developers to programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, by using properties and methods of the class.","pos":[2124,2319]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Build an EntityConnection Connection String<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md)</ept>.","pos":[2320,2500],"source":" For more information, see [How to: Build an EntityConnection Connection String](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md)."},{"pos":[2509,2525],"content":"Creating Queries","linkify":"Creating Queries","nodes":[{"content":"Creating Queries","pos":[0,16]}]},{"content":"The <ph id=\"ph1\">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> language is a storage-independent dialect of SQL that works directly with conceptual entity schemas and supports Entity Data Model concepts such as inheritance and relationships.","pos":[2529,2764],"source":"The [!INCLUDE[esql](../../../../../includes/esql-md.md)] language is a storage-independent dialect of SQL that works directly with conceptual entity schemas and supports Entity Data Model concepts such as inheritance and relationships."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> class is used to execute an <ph id=\"ph2\">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> command against an entity model.","pos":[2765,2928],"source":" The <xref:System.Data.EntityClient.EntityCommand> class is used to execute an [!INCLUDE[esql](../../../../../includes/esql-md.md)] command against an entity model."},{"content":"When you construct <ph id=\"ph1\">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> objects, you can specify a stored procedure name or a query text.","pos":[2929,3059],"source":" When you construct <xref:System.Data.EntityClient.EntityCommand> objects, you can specify a stored procedure name or a query text."},{"content":"The <ph id=\"ph1\">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph> works with storage-specific data providers to translate generic <ph id=\"ph2\">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> into storage-specific queries.","pos":[3060,3274],"source":" The [!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)] works with storage-specific data providers to translate generic [!INCLUDE[esql](../../../../../includes/esql-md.md)] into storage-specific queries."},{"content":"For more information about writing <ph id=\"ph1\">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> queries, see <bpt id=\"p1\">[</bpt>Entity SQL Language<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md)</ept>.","pos":[3275,3486],"source":" For more information about writing [!INCLUDE[esql](../../../../../includes/esql-md.md)] queries, see [Entity SQL Language](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md)."},{"content":"The following example creates an <ph id=\"ph1\">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> object and assigns an <ph id=\"ph2\">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> query text to its <ph id=\"ph3\">&lt;xref:System.Data.EntityClient.EntityCommand.CommandText%2A?displayProperty=fullName&gt;</ph> property.","pos":[3493,3760],"source":"The following example creates an <xref:System.Data.EntityClient.EntityCommand> object and assigns an [!INCLUDE[esql](../../../../../includes/esql-md.md)] query text to its <xref:System.Data.EntityClient.EntityCommand.CommandText%2A?displayProperty=fullName> property."},{"content":"This <ph id=\"ph1\">[!INCLUDE[esql](../../../../../includes/esql-md.md)]</ph> query requests products ordered by the list price from the conceptual model.","pos":[3761,3895],"source":" This [!INCLUDE[esql](../../../../../includes/esql-md.md)] query requests products ordered by the list price from the conceptual model."},{"content":"The following code has no knowledge of the storage model at all.","pos":[3896,3960]},{"pos":[4017,4056],"content":"<ph id=\"ph1\">`cmd.CommandText = @\"`</ph> <ph id=\"ph2\">`SELECT VALUE p`</ph>","source":"`cmd.CommandText = @\"` `SELECT VALUE p`"},{"pos":[4146,4163],"content":"Executing Queries","linkify":"Executing Queries","nodes":[{"content":"Executing Queries","pos":[0,17]}]},{"content":"When a query is executed, it is parsed and converted into a canonical command tree.","pos":[4167,4250]},{"content":"All subsequent processing is performed on the command tree.","pos":[4251,4310]},{"content":"The command tree is the means of communication between the <ph id=\"ph1\">&lt;xref:System.Data.EntityClient&gt;</ph> and the underlying <ph id=\"ph2\">[!INCLUDE[dnprdnshort](../../../../../includes/dnprdnshort-md.md)]</ph> data provider, such as <ph id=\"ph3\">&lt;xref:System.Data.SqlClient&gt;</ph>.","pos":[4311,4540],"source":" The command tree is the means of communication between the <xref:System.Data.EntityClient> and the underlying [!INCLUDE[dnprdnshort](../../../../../includes/dnprdnshort-md.md)] data provider, such as <xref:System.Data.SqlClient>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.EntityClient.EntityDataReader&gt;</ph> exposes the results of executing a <ph id=\"ph2\">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> against a conceptual model.","pos":[4547,4708],"source":"The <xref:System.Data.EntityClient.EntityDataReader> exposes the results of executing a <xref:System.Data.EntityClient.EntityCommand> against a conceptual model."},{"content":"To execute the command that returns the <ph id=\"ph1\">&lt;xref:System.Data.EntityClient.EntityDataReader&gt;</ph>, call <ph id=\"ph2\">&lt;xref:System.Data.EntityClient.EntityCommand.ExecuteReader%2A&gt;</ph>.","pos":[4709,4867],"source":" To execute the command that returns the <xref:System.Data.EntityClient.EntityDataReader>, call <xref:System.Data.EntityClient.EntityCommand.ExecuteReader%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.EntityClient.EntityDataReader&gt;</ph> implements <ph id=\"ph2\">&lt;xref:System.Data.IExtendedDataRecord&gt;</ph> to describe rich structured results.","pos":[4868,5007],"source":" The <xref:System.Data.EntityClient.EntityDataReader> implements <xref:System.Data.IExtendedDataRecord> to describe rich structured results."},{"pos":[5016,5037],"content":"Managing Transactions","linkify":"Managing Transactions","nodes":[{"content":"Managing Transactions","pos":[0,21]}]},{"content":"In the Entity Framework, there are two ways to use transactions: automatic and explicit.","pos":[5041,5129]},{"content":"Automatic transactions use the <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> namespace, and explicit transactions use the <ph id=\"ph2\">&lt;xref:System.Data.EntityClient.EntityTransaction&gt;</ph> class.","pos":[5130,5289],"source":" Automatic transactions use the <xref:System.Transactions> namespace, and explicit transactions use the <xref:System.Data.EntityClient.EntityTransaction> class."},{"pos":[5296,5483],"content":"To update data that is exposed through a conceptual model; see <bpt id=\"p1\">[</bpt>How to: Manage Transactions in the Entity Framework<ept id=\"p1\">](http://msdn.microsoft.com/en-us/4a55eb7f-f826-4a48-9df1-aebe2352ebef)</ept>.","source":"To update data that is exposed through a conceptual model; see [How to: Manage Transactions in the Entity Framework](http://msdn.microsoft.com/en-us/4a55eb7f-f826-4a48-9df1-aebe2352ebef)."},{"pos":[5492,5507],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"pos":[5511,5664],"content":"<bpt id=\"p1\">[</bpt>How to: Build an EntityConnection Connection String<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md)</ept>","source":"[How to: Build an EntityConnection Connection String](../../../../../docs/framework/data/adonet/ef/how-to-build-an-entityconnection-connection-string.md)"},{"pos":[5671,5838],"content":"<bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns PrimitiveType Results<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-primitivetype-results.md)</ept>","source":"[How to: Execute a Query that Returns PrimitiveType Results](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-primitivetype-results.md)"},{"pos":[5845,6014],"content":"<bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns StructuralType Results<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)</ept>","source":"[How to: Execute a Query that Returns StructuralType Results](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)"},{"pos":[6021,6176],"content":"<bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns RefType Results<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-reftype-results.md)</ept>","source":"[How to: Execute a Query that Returns RefType Results](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-reftype-results.md)"},{"pos":[6183,6334],"content":"<bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns Complex Types<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-complex-types.md)</ept>","source":"[How to: Execute a Query that Returns Complex Types](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-complex-types.md)"},{"pos":[6341,6502],"content":"<bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns Nested Collections<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-nested-collections.md)</ept>","source":"[How to: Execute a Query that Returns Nested Collections](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-nested-collections.md)"},{"pos":[6509,6696],"content":"<bpt id=\"p1\">[</bpt>How to: Execute a Parameterized Entity SQL Query Using EntityCommand<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-parameterized-entity-sql-query-using-entitycommand.md)</ept>","source":"[How to: Execute a Parameterized Entity SQL Query Using EntityCommand](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-parameterized-entity-sql-query-using-entitycommand.md)"},{"pos":[6703,6890],"content":"<bpt id=\"p1\">[</bpt>How to: Execute a Parameterized Stored Procedure Using EntityCommand<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-parameterized-stored-procedure-using-entitycommand.md)</ept>","source":"[How to: Execute a Parameterized Stored Procedure Using EntityCommand](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-parameterized-stored-procedure-using-entitycommand.md)"},{"pos":[6897,7018],"content":"<bpt id=\"p1\">[</bpt>How to: Execute a Polymorphic Query<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-polymorphic-query.md)</ept>","source":"[How to: Execute a Polymorphic Query](../../../../../docs/framework/data/adonet/ef/how-to-execute-a-polymorphic-query.md)"},{"pos":[7025,7190],"content":"<bpt id=\"p1\">[</bpt>How to: Navigate Relationships with the Navigate Operator<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/how-to-navigate-relationships-with-the-navigate-operator.md)</ept>","source":"[How to: Navigate Relationships with the Navigate Operator](../../../../../docs/framework/data/adonet/ef/how-to-navigate-relationships-with-the-navigate-operator.md)"},{"pos":[7199,7207],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Managing Connections and Transactions<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b6659d2a-9a45-4e98-acaa-d7a8029e5b99)</ept><ph id=\"ph1\"> </ph>","pos":[7211,7321],"source":"[Managing Connections and Transactions](http://msdn.microsoft.com/en-us/b6659d2a-9a45-4e98-acaa-d7a8029e5b99) "},{"content":"<bpt id=\"p1\"> [</bpt>ADO.NET Entity Framework<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[7324,7407],"source":" [ADO.NET Entity Framework](../../../../../docs/framework/data/adonet/ef/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Language Reference<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/language-reference/index.md)</ept>","pos":[7410,7505],"source":" [Language Reference](../../../../../docs/framework/data/adonet/ef/language-reference/index.md)"}]}