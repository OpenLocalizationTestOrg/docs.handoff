{"content":"---\ntitle: \"Types Supported by the Data Contract Serializer\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"serialization [WCF], supported types\"\nms.assetid: 7381b200-437a-4506-9556-d77bf1bc3f34\n---\n# Types Supported by the Data Contract Serializer\nWindows Communication Foundation (WCF) uses the <xref:System.Runtime.Serialization.DataContractSerializer> as its default serialization engine to convert data into XML and to convert XML back into data. The <xref:System.Runtime.Serialization.DataContractSerializer> is designed to serialize *data contract* types. However, it supports many other types, which can be thought of as having an implicit data contract. The following is a complete list of types that can be serialized:  \n  \n-   All publicly visible types that have a constructor that does not have parameters.  \n  \n-   Data contract types. These are types to which the <xref:System.Runtime.Serialization.DataContractAttribute> attribute has been applied. New custom types that represent business objects should normally be created as data contract types. For more information, see [Using Data Contracts](../../../../docs/framework/wcf/feature-details/using-data-contracts.md) and [Serializable Types](../../../../docs/framework/wcf/feature-details/serializable-types.md).  \n  \n-   Collection types. These are types that represent lists of data. These can be regular arrays of types, or collection types, such as <xref:System.Collections.ArrayList> and <xref:System.Collections.Generic.Dictionary%602>. The <xref:System.Runtime.Serialization.CollectionDataContractAttribute> attribute can be used to customize the serialization of these types, but is not required. For more information, see [Collection Types in Data Contracts](../../../../docs/framework/wcf/feature-details/collection-types-in-data-contracts.md).  \n  \n-   Enumeration types. Enumerations, including flag enumerations, are serializable. Optionally, enumeration types can be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute, in which case every member that participates in serialization must be marked with the <xref:System.Runtime.Serialization.EnumMemberAttribute> attribute. Members that are not marked are not serialized. For more information, see [Enumeration Types in Data Contracts](../../../../docs/framework/wcf/feature-details/enumeration-types-in-data-contracts.md).  \n  \n-   .NET Framework primitive types. The following types built into the .NET Framework can all be serialized and are considered to be primitive types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Boolean>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Object>, and <xref:System.String>.  \n  \n-   Other primitive types. These types are not primitives in the .NET Framework but are treated as primitives in the serialized XML form. These types are <xref:System.DateTime>, <xref:System.DateTimeOffset>, <xref:System.TimeSpan>, <xref:System.Guid>, <xref:System.Uri>, <xref:System.Xml.XmlQualifiedName>, and arrays of <xref:System.Byte>.  \n  \n    > [!NOTE]\n    >  Unlike other primitive types, <xref:System.DateTimeOffset> is not a known type by default. For more information, see [Data Contract Known Types](../../../../docs/framework/wcf/feature-details/data-contract-known-types.md)).  \n  \n-   Types marked with the <xref:System.SerializableAttribute> attribute. Many types included in the [!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)] base class library fall into this category. The <xref:System.Runtime.Serialization.DataContractSerializer> fully supports this serialization programming model that was used by .NET Framework remoting, the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, and the <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>, including support for the <xref:System.Runtime.Serialization.ISerializable> interface.  \n  \n-   Types that represent raw XML or types that represent [!INCLUDE[vstecado](../../../../includes/vstecado-md.md)] relational data. The <xref:System.Xml.XmlElement> and array of <xref:System.Xml.XmlNode> types are supported as a way of representing XML directly. Additionally, types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface are supported, including the related <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> attribute, and the <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> types. The [!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]<xref:System.Data.DataTable> type and the <xref:System.Data.DataSet> type (as well as its typed derived classes) all implement the <xref:System.Xml.Serialization.IXmlSerializable> interface, and therefore fit into this category. For more information, see [XML and ADO.NET Types in Data Contracts](../../../../docs/framework/wcf/feature-details/xml-and-ado-net-types-in-data-contracts.md).  \n  \n## Limitations of Using Certain Types in Partial Trust Mode  \n The following is a list of limitations when using certain types in partial trust mode scenarios:  \n  \n-   To serialize or deserialize a type that implements <xref:System.Runtime.Serialization.ISerializable> in partially-trusted code using the <xref:System.Runtime.Serialization.DataContractSerializer> requires the <xref:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter%2A> and <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permissions.  \n  \n-   When running WCF code in [Partial Trust](../../../../docs/framework/wcf/feature-details/partial-trust.md) mode, the serialization and deserialization of `readonly` fields (both `public` and `private`) is not supported. This is because the generated IL is unverifiable and therefore requires elevated permissions.  \n  \n-   Both the <xref:System.Runtime.Serialization.DataContractSerializer> and the <xref:System.Xml.Serialization.XmlSerializer> are supported in a partial trust environment. However, use of the <xref:System.Runtime.Serialization.DataContractSerializer> is subject to the following conditions:  \n  \n    -   All serializable `[DataContract]` types must be public.  \n  \n    -   All serializable `[DataMember]` fields or properties in a `[DataContract]` type must be public and read/write. The serialization and deserialization of `readonly` fields is not supported when running WCF in a partially-trusted application.  \n  \n    -   The `[Serializable]`/`ISerializable]` programming model is not supported in a partial trust environment.  \n  \n    -   Known types must be specified in code or machine-level configuration (`Machine.config`). Known types cannot be specified in application-level configuration for security reasons.  \n  \n-   Types that implement <xref:System.Runtime.Serialization.IObjectReference> throw an exception in a partially-trusted environment because the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method requires the security permission `[SecurityPermission(SecurityAction.LinkDemand, Flags=SecurityPermissionFlag.SerializationFormatter)]`.  \n  \n## Additional Notes on Serialization  \n The following rules also apply to types supported by the Data Contract Serializer:  \n  \n-   Generic types are fully supported by the data contract serializer.  \n  \n-   Nullable types are fully supported by the data contract serializer.  \n  \n-   Interface types are treated either as <xref:System.Object> or, in the case of collection interfaces, as collection types.  \n  \n-   Both structures and classes are supported.  \n  \n-   The <xref:System.Runtime.Serialization.DataContractSerializer> does not support the programming model used by the <xref:System.Xml.Serialization.XmlSerializer> and [!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)] Web services. In particular, it does not support attributes like <xref:System.Xml.Serialization.XmlElementAttribute> and <xref:System.Xml.Serialization.XmlAttributeAttribute>. To enable support for this programming model, WCF must be switched to use the <xref:System.Xml.Serialization.XmlSerializer> instead of the <xref:System.Runtime.Serialization.DataContractSerializer>.  \n  \n-   The <xref:System.DBNull> type is treated in a special way. It is a singleton type, and upon deserialization the deserializer respects the singleton constraint and points all `DBNull` references to the singleton instance. Because `DBNull` is a serializable type, it demands <xref:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter%2A> permission.  \n  \n## See also\n\n- [XML and ADO.NET Types in Data Contracts](../../../../docs/framework/wcf/feature-details/xml-and-ado-net-types-in-data-contracts.md)\n- [Using Data Contracts](../../../../docs/framework/wcf/feature-details/using-data-contracts.md)\n- [Serializable Types](../../../../docs/framework/wcf/feature-details/serializable-types.md)\n- [Collection Types in Data Contracts](../../../../docs/framework/wcf/feature-details/collection-types-in-data-contracts.md)\n- [Enumeration Types in Data Contracts](../../../../docs/framework/wcf/feature-details/enumeration-types-in-data-contracts.md)\n","nodes":[{"pos":[4,196],"embed":true,"restype":"x-metadata","content":"title: \"Types Supported by the Data Contract Serializer\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"serialization [WCF], supported types\"\nms.assetid: 7381b200-437a-4506-9556-d77bf1bc3f34","nodes":[{"content":"Types Supported by the Data Contract Serializer","nodes":[{"pos":[0,47],"content":"Types Supported by the Data Contract Serializer","nodes":[{"content":"Types Supported by the Data Contract Serializer","pos":[0,47]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[203,250],"content":"Types Supported by the Data Contract Serializer","linkify":"Types Supported by the Data Contract Serializer","nodes":[{"content":"Types Supported by the Data Contract Serializer","pos":[0,47]}]},{"content":"Windows Communication Foundation (WCF) uses the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> as its default serialization engine to convert data into XML and to convert XML back into data.","pos":[251,453],"source":"Windows Communication Foundation (WCF) uses the <xref:System.Runtime.Serialization.DataContractSerializer> as its default serialization engine to convert data into XML and to convert XML back into data."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> is designed to serialize <bpt id=\"p1\">*</bpt>data contract<ept id=\"p1\">*</ept> types.","pos":[454,564],"source":" The <xref:System.Runtime.Serialization.DataContractSerializer> is designed to serialize *data contract* types."},{"content":"However, it supports many other types, which can be thought of as having an implicit data contract.","pos":[565,664]},{"content":"The following is a complete list of types that can be serialized:","pos":[665,730]},{"content":"All publicly visible types that have a constructor that does not have parameters.","pos":[740,821]},{"content":"Data contract types.","pos":[831,851]},{"content":"These are types to which the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute has been applied.","pos":[852,966],"source":" These are types to which the <xref:System.Runtime.Serialization.DataContractAttribute> attribute has been applied."},{"content":"New custom types that represent business objects should normally be created as data contract types.","pos":[967,1066]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Data Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/using-data-contracts.md)</ept> and <bpt id=\"p2\">[</bpt>Serializable Types<ept id=\"p2\">](../../../../docs/framework/wcf/feature-details/serializable-types.md)</ept>.","pos":[1067,1283],"source":" For more information, see [Using Data Contracts](../../../../docs/framework/wcf/feature-details/using-data-contracts.md) and [Serializable Types](../../../../docs/framework/wcf/feature-details/serializable-types.md)."},{"content":"Collection types.","pos":[1293,1310]},{"content":"These are types that represent lists of data.","pos":[1311,1356]},{"content":"These can be regular arrays of types, or collection types, such as <ph id=\"ph1\">&lt;xref:System.Collections.ArrayList&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.","pos":[1357,1513],"source":" These can be regular arrays of types, or collection types, such as <xref:System.Collections.ArrayList> and <xref:System.Collections.Generic.Dictionary%602>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute&gt;</ph> attribute can be used to customize the serialization of these types, but is not required.","pos":[1514,1675],"source":" The <xref:System.Runtime.Serialization.CollectionDataContractAttribute> attribute can be used to customize the serialization of these types, but is not required."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Collection Types in Data Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/collection-types-in-data-contracts.md)</ept>.","pos":[1676,1825],"source":" For more information, see [Collection Types in Data Contracts](../../../../docs/framework/wcf/feature-details/collection-types-in-data-contracts.md)."},{"content":"Enumeration types.","pos":[1835,1853]},{"content":"Enumerations, including flag enumerations, are serializable.","pos":[1854,1914]},{"content":"Optionally, enumeration types can be marked with the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute, in which case every member that participates in serialization must be marked with the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.EnumMemberAttribute&gt;</ph> attribute.","pos":[1915,2189],"source":" Optionally, enumeration types can be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute, in which case every member that participates in serialization must be marked with the <xref:System.Runtime.Serialization.EnumMemberAttribute> attribute."},{"content":"Members that are not marked are not serialized.","pos":[2190,2237]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Enumeration Types in Data Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/enumeration-types-in-data-contracts.md)</ept>.","pos":[2238,2389],"source":" For more information, see [Enumeration Types in Data Contracts](../../../../docs/framework/wcf/feature-details/enumeration-types-in-data-contracts.md)."},{"content":".NET Framework primitive types.","pos":[2399,2430]},{"content":"The following types built into the .NET Framework can all be serialized and are considered to be primitive types: <ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.UInt64&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph11\">&lt;xref:System.Boolean&gt;</ph>, <ph id=\"ph12\">&lt;xref:System.Char&gt;</ph>, <ph id=\"ph13\">&lt;xref:System.Decimal&gt;</ph>, <ph id=\"ph14\">&lt;xref:System.Object&gt;</ph>, and <ph id=\"ph15\">&lt;xref:System.String&gt;</ph>.","pos":[2431,2872],"source":" The following types built into the .NET Framework can all be serialized and are considered to be primitive types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.Boolean>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Object>, and <xref:System.String>."},{"content":"Other primitive types.","pos":[2882,2904]},{"content":"These types are not primitives in the .NET Framework but are treated as primitives in the serialized XML form.","pos":[2905,3015]},{"content":"These types are <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.TimeSpan&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Guid&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Uri&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph>, and arrays of <ph id=\"ph7\">&lt;xref:System.Byte&gt;</ph>.","pos":[3016,3218],"source":" These types are <xref:System.DateTime>, <xref:System.DateTimeOffset>, <xref:System.TimeSpan>, <xref:System.Guid>, <xref:System.Uri>, <xref:System.Xml.XmlQualifiedName>, and arrays of <xref:System.Byte>."},{"pos":[3230,3468],"content":"[!NOTE]\nUnlike other primitive types, <xref:System.DateTimeOffset> is not a known type by default. For more information, see [Data Contract Known Types](../../../../docs/framework/wcf/feature-details/data-contract-known-types.md)).","leadings":["","    >  "],"nodes":[{"content":"Unlike other primitive types, <xref:System.DateTimeOffset> is not a known type by default. For more information, see [Data Contract Known Types](../../../../docs/framework/wcf/feature-details/data-contract-known-types.md)).","pos":[8,231],"nodes":[{"content":"Unlike other primitive types, <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> is not a known type by default.","pos":[0,90],"source":"Unlike other primitive types, <xref:System.DateTimeOffset> is not a known type by default."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Data Contract Known Types<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>).","pos":[91,223],"source":" For more information, see [Data Contract Known Types](../../../../docs/framework/wcf/feature-details/data-contract-known-types.md))."}]}]},{"content":"Types marked with the <ph id=\"ph1\">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.","pos":[3478,3546],"source":"Types marked with the <xref:System.SerializableAttribute> attribute."},{"content":"Many types included in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> base class library fall into this category.","pos":[3547,3681],"source":" Many types included in the [!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)] base class library fall into this category."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> fully supports this serialization programming model that was used by .NET Framework remoting, the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>, and the <ph id=\"ph3\">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph>, including support for the <ph id=\"ph4\">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.","pos":[3682,4075],"source":" The <xref:System.Runtime.Serialization.DataContractSerializer> fully supports this serialization programming model that was used by .NET Framework remoting, the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, and the <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>, including support for the <xref:System.Runtime.Serialization.ISerializable> interface."},{"content":"Types that represent raw XML or types that represent <ph id=\"ph1\">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph> relational data.","pos":[4085,4212],"source":"Types that represent raw XML or types that represent [!INCLUDE[vstecado](../../../../includes/vstecado-md.md)] relational data."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlElement&gt;</ph> and array of <ph id=\"ph2\">&lt;xref:System.Xml.XmlNode&gt;</ph> types are supported as a way of representing XML directly.","pos":[4213,4343],"source":" The <xref:System.Xml.XmlElement> and array of <xref:System.Xml.XmlNode> types are supported as a way of representing XML directly."},{"content":"Additionally, types that implement the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface are supported, including the related <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> attribute, and the <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> types.","pos":[4344,4632],"source":" Additionally, types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface are supported, including the related <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> attribute, and the <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> types."},{"content":"The <ph id=\"ph1\">[!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]</ph><ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> type and the <ph id=\"ph3\">&lt;xref:System.Data.DataSet&gt;</ph> type (as well as its typed derived classes) all implement the <ph id=\"ph4\">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface, and therefore fit into this category.","pos":[4633,4922],"source":" The [!INCLUDE[vstecado](../../../../includes/vstecado-md.md)]<xref:System.Data.DataTable> type and the <xref:System.Data.DataSet> type (as well as its typed derived classes) all implement the <xref:System.Xml.Serialization.IXmlSerializable> interface, and therefore fit into this category."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and ADO.NET Types in Data Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/xml-and-ado-net-types-in-data-contracts.md)</ept>.","pos":[4923,5082],"source":" For more information, see [XML and ADO.NET Types in Data Contracts](../../../../docs/framework/wcf/feature-details/xml-and-ado-net-types-in-data-contracts.md)."},{"pos":[5091,5147],"content":"Limitations of Using Certain Types in Partial Trust Mode","linkify":"Limitations of Using Certain Types in Partial Trust Mode","nodes":[{"content":"Limitations of Using Certain Types in Partial Trust Mode","pos":[0,56]}]},{"content":"The following is a list of limitations when using certain types in partial trust mode scenarios:","pos":[5151,5247]},{"pos":[5257,5651],"content":"To serialize or deserialize a type that implements <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> in partially-trusted code using the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> requires the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;</ph> permissions.","source":"To serialize or deserialize a type that implements <xref:System.Runtime.Serialization.ISerializable> in partially-trusted code using the <xref:System.Runtime.Serialization.DataContractSerializer> requires the <xref:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter%2A> and <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permissions."},{"content":"When running WCF code in <bpt id=\"p1\">[</bpt>Partial Trust<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/partial-trust.md)</ept> mode, the serialization and deserialization of <ph id=\"ph1\">`readonly`</ph> fields (both <ph id=\"ph2\">`public`</ph> and <ph id=\"ph3\">`private`</ph>) is not supported.","pos":[5661,5879],"source":"When running WCF code in [Partial Trust](../../../../docs/framework/wcf/feature-details/partial-trust.md) mode, the serialization and deserialization of `readonly` fields (both `public` and `private`) is not supported."},{"content":"This is because the generated IL is unverifiable and therefore requires elevated permissions.","pos":[5880,5973]},{"content":"Both the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> are supported in a partial trust environment.","pos":[5983,6150],"source":"Both the <xref:System.Runtime.Serialization.DataContractSerializer> and the <xref:System.Xml.Serialization.XmlSerializer> are supported in a partial trust environment."},{"content":"However, use of the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> is subject to the following conditions:","pos":[6151,6269],"source":" However, use of the <xref:System.Runtime.Serialization.DataContractSerializer> is subject to the following conditions:"},{"pos":[6283,6338],"content":"All serializable <ph id=\"ph1\">`[DataContract]`</ph> types must be public.","source":"All serializable `[DataContract]` types must be public."},{"content":"All serializable <ph id=\"ph1\">`[DataMember]`</ph> fields or properties in a <ph id=\"ph2\">`[DataContract]`</ph> type must be public and read/write.","pos":[6352,6462],"source":"All serializable `[DataMember]` fields or properties in a `[DataContract]` type must be public and read/write."},{"content":"The serialization and deserialization of <ph id=\"ph1\">`readonly`</ph> fields is not supported when running WCF in a partially-trusted application.","pos":[6463,6591],"source":" The serialization and deserialization of `readonly` fields is not supported when running WCF in a partially-trusted application."},{"pos":[6605,6709],"content":"The <ph id=\"ph1\">`[Serializable]`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`ISerializable]`</ph> programming model is not supported in a partial trust environment.","source":"The `[Serializable]`/`ISerializable]` programming model is not supported in a partial trust environment."},{"content":"Known types must be specified in code or machine-level configuration (<ph id=\"ph1\">`Machine.config`</ph>).","pos":[6723,6811],"source":"Known types must be specified in code or machine-level configuration (`Machine.config`)."},{"content":"Known types cannot be specified in application-level configuration for security reasons.","pos":[6812,6900]},{"pos":[6910,7263],"content":"Types that implement <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.IObjectReference&gt;</ph> throw an exception in a partially-trusted environment because the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A&gt;</ph> method requires the security permission <ph id=\"ph3\">`[SecurityPermission(SecurityAction.LinkDemand, Flags=SecurityPermissionFlag.SerializationFormatter)]`</ph>.","source":"Types that implement <xref:System.Runtime.Serialization.IObjectReference> throw an exception in a partially-trusted environment because the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method requires the security permission `[SecurityPermission(SecurityAction.LinkDemand, Flags=SecurityPermissionFlag.SerializationFormatter)]`."},{"pos":[7272,7305],"content":"Additional Notes on Serialization","linkify":"Additional Notes on Serialization","nodes":[{"content":"Additional Notes on Serialization","pos":[0,33]}]},{"content":"The following rules also apply to types supported by the Data Contract Serializer:","pos":[7309,7391]},{"content":"Generic types are fully supported by the data contract serializer.","pos":[7401,7467]},{"content":"Nullable types are fully supported by the data contract serializer.","pos":[7477,7544]},{"pos":[7554,7675],"content":"Interface types are treated either as <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> or, in the case of collection interfaces, as collection types.","source":"Interface types are treated either as <xref:System.Object> or, in the case of collection interfaces, as collection types."},{"content":"Both structures and classes are supported.","pos":[7685,7727]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> does not support the programming model used by the <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> and <ph id=\"ph3\">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> Web services.","pos":[7737,7972],"source":"The <xref:System.Runtime.Serialization.DataContractSerializer> does not support the programming model used by the <xref:System.Xml.Serialization.XmlSerializer> and [!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)] Web services."},{"content":"In particular, it does not support attributes like <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>.","pos":[7973,8134],"source":" In particular, it does not support attributes like <xref:System.Xml.Serialization.XmlElementAttribute> and <xref:System.Xml.Serialization.XmlAttributeAttribute>."},{"content":"To enable support for this programming model, WCF must be switched to use the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> instead of the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.","pos":[8135,8333],"source":" To enable support for this programming model, WCF must be switched to use the <xref:System.Xml.Serialization.XmlSerializer> instead of the <xref:System.Runtime.Serialization.DataContractSerializer>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DBNull&gt;</ph> type is treated in a special way.","pos":[8343,8401],"source":"The <xref:System.DBNull> type is treated in a special way."},{"content":"It is a singleton type, and upon deserialization the deserializer respects the singleton constraint and points all <ph id=\"ph1\">`DBNull`</ph> references to the singleton instance.","pos":[8402,8563],"source":" It is a singleton type, and upon deserialization the deserializer respects the singleton constraint and points all `DBNull` references to the singleton instance."},{"content":"Because <ph id=\"ph1\">`DBNull`</ph> is a serializable type, it demands <ph id=\"ph2\">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter%2A&gt;</ph> permission.","pos":[8564,8716],"source":" Because `DBNull` is a serializable type, it demands <xref:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter%2A> permission."},{"pos":[8725,8733],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[8737,8869],"content":"<bpt id=\"p1\">[</bpt>XML and ADO.NET Types in Data Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/xml-and-ado-net-types-in-data-contracts.md)</ept>","source":"[XML and ADO.NET Types in Data Contracts](../../../../docs/framework/wcf/feature-details/xml-and-ado-net-types-in-data-contracts.md)"},{"pos":[8872,8966],"content":"<bpt id=\"p1\">[</bpt>Using Data Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/using-data-contracts.md)</ept>","source":"[Using Data Contracts](../../../../docs/framework/wcf/feature-details/using-data-contracts.md)"},{"pos":[8969,9059],"content":"<bpt id=\"p1\">[</bpt>Serializable Types<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/serializable-types.md)</ept>","source":"[Serializable Types](../../../../docs/framework/wcf/feature-details/serializable-types.md)"},{"pos":[9062,9184],"content":"<bpt id=\"p1\">[</bpt>Collection Types in Data Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/collection-types-in-data-contracts.md)</ept>","source":"[Collection Types in Data Contracts](../../../../docs/framework/wcf/feature-details/collection-types-in-data-contracts.md)"},{"pos":[9187,9311],"content":"<bpt id=\"p1\">[</bpt>Enumeration Types in Data Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/enumeration-types-in-data-contracts.md)</ept>","source":"[Enumeration Types in Data Contracts](../../../../docs/framework/wcf/feature-details/enumeration-types-in-data-contracts.md)"}]}