{"content":"---\ntitle: \"IHostTaskManager::LeaveRuntime Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostTaskManager.LeaveRuntime\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostTaskManager::LeaveRuntime\"\nhelpviewer_keywords: \n  - \"IHostTaskManager::LeaveRuntime method [.NET Framework hosting]\"\n  - \"LeaveRuntime method [.NET Framework hosting]\"\nms.assetid: 43689cc4-e48e-46e5-a22d-bafd768b8759\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# IHostTaskManager::LeaveRuntime Method\nNotifies the host that the currently executing task is about to leave the common language runtime (CLR) and enter unmanaged code.  \n  \n> [!IMPORTANT]\n>  A corresponding call to [IHostTaskManager::EnterRuntime](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-enterruntime-method.md) notifies the host that the currently executing task is reentering managed code.  \n  \n## Syntax  \n  \n```  \nHRESULT LeaveRuntime (  \n    [in] SIZE_T target  \n);  \n```  \n  \n## Parameters  \n `target`  \n [in] The address within the mapped portable executable file of the unmanaged function to be called.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`LeaveRuntime` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The CLR has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n|E_OUTOFMEMORY|Not enough memory is available to complete the requested allocation.|  \n  \n## Remarks  \n Call sequences to and from unmanaged code can be nested. For example, the list below describes a hypothetical situation in which the sequence of calls to `LeaveRuntime`, [IHostTaskManager::ReverseEnterRuntime](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-reverseenterruntime-method.md), [IHostTaskManager::ReverseLeaveRuntime](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-reverseleaveruntime-method.md), and `IHostTaskManager::EnterRuntime` allows the host to identify the nested layers.  \n  \n|Action|Corresponding Method Call|  \n|------------|-------------------------------|  \n|A managed Visual Basic executable calls an unmanaged function written in C by using platform invoke.|`IHostTaskManager::LeaveRuntime`|  \n|The unmanaged C function calls a method in a managed DLL written in C#.|`IHostTaskManager::ReverseEnterRuntime`|  \n|The managed C# function calls another unmanaged function written in C, also using platform invoke.|`IHostTaskManager::LeaveRuntime`|  \n|The second unmanaged function returns execution to the C# function.|`IHostTaskManager::EnterRuntime`|  \n|The C# function returns execution to the first unmanaged function.|`IHostTaskManager::ReverseLeaveRuntime`|  \n|The first unmanaged function returns execution to the Visual Basic program.|`IHostTaskManager::EnterRuntime`|  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [ICLRTask Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)\n- [ICLRTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md)\n- [IHostTask Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)\n- [IHostTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)\n","nodes":[{"pos":[4,481],"embed":true,"restype":"x-metadata","content":"title: \"IHostTaskManager::LeaveRuntime Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostTaskManager.LeaveRuntime\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostTaskManager::LeaveRuntime\"\nhelpviewer_keywords: \n  - \"IHostTaskManager::LeaveRuntime method [.NET Framework hosting]\"\n  - \"LeaveRuntime method [.NET Framework hosting]\"\nms.assetid: 43689cc4-e48e-46e5-a22d-bafd768b8759\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"IHostTaskManager::LeaveRuntime Method","nodes":[{"pos":[0,37],"content":"IHostTaskManager::LeaveRuntime Method","nodes":[{"content":"IHostTaskManager::LeaveRuntime Method","pos":[0,37]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[488,525],"content":"IHostTaskManager::LeaveRuntime Method","linkify":"IHostTaskManager::LeaveRuntime Method","nodes":[{"content":"IHostTaskManager::LeaveRuntime Method","pos":[0,37]}]},{"content":"Notifies the host that the currently executing task is about to leave the common language runtime (CLR) and enter unmanaged code.","pos":[526,655]},{"pos":[663,905],"content":"[!IMPORTANT]\n A corresponding call to [IHostTaskManager::EnterRuntime](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-enterruntime-method.md) notifies the host that the currently executing task is reentering managed code.","leadings":["","> "],"nodes":[{"content":"A corresponding call to <bpt id=\"p1\">[</bpt>IHostTaskManager::EnterRuntime<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-enterruntime-method.md)</ept> notifies the host that the currently executing task is reentering managed code.","pos":[14,240],"source":"A corresponding call to [IHostTaskManager::EnterRuntime](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-enterruntime-method.md) notifies the host that the currently executing task is reentering managed code."}]},{"pos":[914,920],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[999,1009],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The address within the mapped portable executable file of the unmanaged function to be called.","pos":[1025,1124]},{"pos":[1133,1145],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1152,1159]},{"content":"Description","pos":[1160,1171]},{"content":"S_OK","pos":[1212,1216]},{"pos":[1217,1254],"content":"<ph id=\"ph1\">`LeaveRuntime`</ph> returned successfully.","source":"`LeaveRuntime` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1259,1281]},{"content":"The CLR has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1282,1420]},{"content":"HOST_E_TIMEOUT","pos":[1425,1439]},{"content":"The call timed out.","pos":[1440,1459]},{"content":"HOST_E_NOT_OWNER","pos":[1464,1480]},{"content":"The caller does not own the lock.","pos":[1481,1514]},{"content":"HOST_E_ABANDONED","pos":[1519,1535]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1536,1608]},{"content":"E_FAIL","pos":[1613,1619]},{"content":"An unknown catastrophic failure occurred.","pos":[1620,1661]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1662,1739]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[1740,1806]},{"content":"E_OUTOFMEMORY","pos":[1811,1824]},{"content":"Not enough memory is available to complete the requested allocation.","pos":[1825,1893]},{"pos":[1903,1910],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Call sequences to and from unmanaged code can be nested.","pos":[1914,1970]},{"content":"For example, the list below describes a hypothetical situation in which the sequence of calls to <ph id=\"ph1\">`LeaveRuntime`</ph>, <bpt id=\"p1\">[</bpt>IHostTaskManager::ReverseEnterRuntime<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-reverseenterruntime-method.md)</ept>, <bpt id=\"p2\">[</bpt>IHostTaskManager::ReverseLeaveRuntime<ept id=\"p2\">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-reverseleaveruntime-method.md)</ept>, and <ph id=\"ph2\">`IHostTaskManager::EnterRuntime`</ph> allows the host to identify the nested layers.","pos":[1971,2443],"source":" For example, the list below describes a hypothetical situation in which the sequence of calls to `LeaveRuntime`, [IHostTaskManager::ReverseEnterRuntime](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-reverseenterruntime-method.md), [IHostTaskManager::ReverseLeaveRuntime](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-reverseleaveruntime-method.md), and `IHostTaskManager::EnterRuntime` allows the host to identify the nested layers."},{"content":"Action","pos":[2450,2456]},{"content":"Corresponding Method Call","pos":[2457,2482]},{"content":"A managed Visual Basic executable calls an unmanaged function written in C by using platform invoke.","pos":[2536,2636]},{"content":"The unmanaged C function calls a method in a managed DLL written in C#.","pos":[2674,2745]},{"content":"The managed C# function calls another unmanaged function written in C, also using platform invoke.","pos":[2790,2888]},{"content":"The second unmanaged function returns execution to the C# function.","pos":[2926,2993]},{"content":"The C# function returns execution to the first unmanaged function.","pos":[3031,3097]},{"content":"The first unmanaged function returns execution to the Visual Basic program.","pos":[3142,3217]},{"pos":[3260,3272],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3276,3380],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3387,3408],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[3415,3465],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[3472,3580],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[3589,3597],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3601,3693],"content":"<bpt id=\"p1\">[</bpt>ICLRTask Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)</ept>","source":"[ICLRTask Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtask-interface.md)"},{"pos":[3696,3802],"content":"<bpt id=\"p1\">[</bpt>ICLRTaskManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md)</ept>","source":"[ICLRTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrtaskmanager-interface.md)"},{"pos":[3805,3899],"content":"<bpt id=\"p1\">[</bpt>IHostTask Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)</ept>","source":"[IHostTask Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttask-interface.md)"},{"pos":[3902,4010],"content":"<bpt id=\"p1\">[</bpt>IHostTaskManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)</ept>","source":"[IHostTaskManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihosttaskmanager-interface.md)"}]}