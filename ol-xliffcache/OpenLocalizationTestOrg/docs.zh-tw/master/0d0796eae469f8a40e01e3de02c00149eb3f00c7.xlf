<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="collecting-ink.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d0796eae469f8a40e01e3de02c00149eb3f00c7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\collecting-ink.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8779f4e3e1b1f42d7f741027a7bde1c35cca5730</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53609ddc190950d36e15eee4e6e9b3ec69f95cc0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Collect ink in WPF apps</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Collect Ink</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Windows Presentation Foundation<ept id="p1">](../index.md)</ept> platform collects digital ink as a core part of its functionality.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic discusses methods for collection of ink in Windows Presentation Foundation (WPF).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To use the following examples, you must first install Visual Studio and the <ph id="ph1">[!INCLUDE[TLA2#tla_winfxsdk](../../../../includes/tla2sharptla-winfxsdk-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You should also understand how to write applications for the WPF.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information about getting started with WPF, see <bpt id="p1">[</bpt>Walkthrough: My first WPF desktop application<ept id="p1">](../getting-started/walkthrough-my-first-wpf-desktop-application.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use the InkCanvas Element</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas?displayProperty=fullName&gt;</ph> element provides the easiest way to collect ink in WPF.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> element to receive and display ink input.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You commonly input ink through the use of a stylus, which interacts with a digitizer to produce ink strokes.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In addition, a mouse can be used in place of a stylus.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The created strokes are represented as <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, and they can be manipulated both programmatically and by user input.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> enables users to select, modify, or delete an existing <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>By using XAML, you can set up ink collection as easily as adding an <bpt id="p1">**</bpt>InkCanvas<ept id="p1">**</ept> element to your tree.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following example adds an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> to a default WPF project created in Visual Studio:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>InkCanvas<ept id="p1">**</ept> element can also contain child elements, making it possible to add ink annotation capabilities to almost any type of XAML element.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, to add inking capabilities to a text element, simply make it a child of an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adding support for marking up an image with ink is just as easy:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>InkCollection Modes</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> provides support for various input modes through its <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Manipulate Ink</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> provides support for many ink editing operations.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> supports back-of-pen erase, and no additional code is needed to add the functionality to the element.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Selection</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Setting selection mode is as simple as setting the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;</ph> property to <bpt id="p1">**</bpt>Select<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following code sets the editing mode based on the value of a <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>DrawingAttributes</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> property to change the appearance of ink strokes.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For instance, the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.Color%2A&gt;</ph> member of <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> sets the color of the rendered <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example changes the color of the selected strokes to red:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>DefaultDrawingAttributes</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> property provides access to properties such as the height, width, and color of the strokes to be created in an <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Once you change the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph>, all future strokes entered into the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> are rendered with the new property values.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In addition to modifying the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> in the code-behind file, you can use XAML syntax for specifying <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The next example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.Color%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To use this code, create a new WPF project called "HelloInkCanvas" in Visual Studio.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Replace the code in the <bpt id="p1">*</bpt>MainWindow.xaml<ept id="p1">*</ept> file with the following code:</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Next, add the following button event handlers to the code behind file, inside the MainWindow class:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>After copying this code, press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept> in Visual Studio to run the program in the debugger.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Notice how the <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> places the buttons on top of the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you try to ink over the top of the buttons, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> collects and renders the ink behind the buttons.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This is because the buttons are siblings of the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> as opposed to children.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Also, the buttons are higher in the z-order, so the ink is rendered behind them.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>