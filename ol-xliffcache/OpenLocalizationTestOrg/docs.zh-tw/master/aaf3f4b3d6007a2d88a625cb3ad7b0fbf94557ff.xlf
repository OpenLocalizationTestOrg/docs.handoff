<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aaf3f4b3d6007a2d88a625cb3ad7b0fbf94557ff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\interop\registering-assemblies-with-com.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65d232696af84d797a6c99db8b766b8519616318</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67b59aed066723c98cfd1c32cff885665851a620</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Registering Assemblies with COM | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Registering Assemblies with COM</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can run a command-line tool called the <bpt id="p1">[</bpt>Assembly Registration Tool (Regasm.exe)<ept id="p1">](../../../docs/framework/tools/regasm-exe-assembly-registration-tool.md)</ept> to register or unregister an assembly for use with COM.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Regasm.exe adds information about the class to the system registry so COM clients can use the .NET Framework class transparently.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.RegistrationServices&gt;</ph> class provides the equivalent functionality.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A managed component must be registered in the Windows registry before it can be activated from a COM client.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following table shows the keys that Regasm.exe typically adds to the Windows registry.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>(000000 indicates the actual GUID value.)</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>GUID</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Registry key</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>CLSID</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Class identifier</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>HKEY_CLASSES_ROOT\CLSID<ph id="ph1">\\</ph>{000…000}</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>IID</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Interface identifier</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>HKEY_CLASSES_ROOT\Interface<ph id="ph1">\\</ph>{000…000}</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>LIBID</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Library identifier</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>HKEY_CLASSES_ROOT\TypeLib<ph id="ph1">\\</ph>{000…000}</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>ProgID</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Programmatic identifier</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>HKEY_CLASSES_ROOT\000…000</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Under the HKCR\CLSID<ph id="ph1">\\</ph>{0000…0000} key, the default value is set to the ProgID of the class, and two new named values, Class and Assembly, are added.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The runtime reads the Assembly value from the registry and passes it on to the runtime assembly resolver.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The assembly resolver attempts to locate the assembly, based on assembly information such as the name and version number.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For the assembly resolver to locate an assembly, the assembly has to be in one of the following locations:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The global assembly cache (must be a strong-named assembly).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the application directory.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Assemblies loaded from the application path are only accessible from that application.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Along an file path specified with the <bpt id="p1">**</bpt>/codebase<ept id="p1">**</ept> option to Regasm.exe.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Regasm.exe also creates the InProcServer32 key under the HKCR\CLSID<ph id="ph1">\\</ph>{0000…0000} key.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default value for the key is set to the name of the DLL that initializes the common language runtime (Mscoree.dll).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Examining Registry Entries</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>COM interop provides a standard class factory implementation to create an instance of any .NET Framework class.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Clients can call <bpt id="p1">**</bpt>DllGetClassObject<ept id="p1">**</ept> on the managed DLL to get a class factory and create objects, just as they would with any other COM component.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For the <ph id="ph1">`InprocServer32`</ph> subkey, a reference to Mscoree.dll appears in place of a traditional COM type library to indicate that the common language runtime creates the managed object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Exposing .NET Framework Components to COM<ept id="p1">](../../../docs/framework/interop/exposing-dotnet-components-to-com.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Reference .NET Types from COM<ept id="p1">](../../../docs/framework/interop/how-to-reference-net-types-from-com.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Calling a .NET Object<ept id="p1">](http://msdn.microsoft.com/en-us/40c9626c-aea6-4bad-b8f0-c1de462efd33)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Deploying an Application for COM Access<ept id="p1">](http://msdn.microsoft.com/en-us/fb63564c-c1b9-4655-a094-a235625882ce)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>