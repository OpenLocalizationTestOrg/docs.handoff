{"content":"---\ntitle: \"How to: Implement CopyToDataTable&lt;T&gt; Where the Generic Type T Is Not a DataRow | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: b27b52cf-6172-485f-a75c-70ff9c5a2bd4\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# How to: Implement CopyToDataTable&lt;T&gt; Where the Generic Type T Is Not a DataRow\nThe <xref:System.Data.DataTable> object is often used for data binding. The <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method takes the results of a query and copies the data into a <xref:System.Data.DataTable>, which can then be used for data binding. The <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> methods, however, only operate on an <xref:System.Collections.Generic.IEnumerable%601> source where the generic parameter `T` is of type <xref:System.Data.DataRow>. Although this is useful, it does not allow tables to be created from a sequence of scalar types, from queries that project anonymous types, or from queries that perform table joins.  \n  \n This topic describes how to implement two custom `CopyToDataTable<T>` extension methods that accept a generic parameter `T` of a type other than <xref:System.Data.DataRow>. The logic to create a <xref:System.Data.DataTable> from an <xref:System.Collections.Generic.IEnumerable%601> source is contained in the `ObjectShredder<T>` class, which is then wrapped in two overloaded `CopyToDataTable<T>` extension methods. The `Shred` method of the `ObjectShredder<T>` class returns the filled <xref:System.Data.DataTable> and accepts three input parameters: an <xref:System.Collections.Generic.IEnumerable%601> source, a <xref:System.Data.DataTable>, and a <xref:System.Data.LoadOption> enumeration. The initial schema of the returned <xref:System.Data.DataTable> is based on the schema of the type `T`. If an existing table is provided as input, the schema must be consistent with the schema of the type `T`. Each public property and field of the type `T` is converted to a <xref:System.Data.DataColumn> in the returned table. If the source sequence contains a type derived from `T`, the returned table schema is expanded for any additional public properties or fields.  \n  \n For examples of using the custom `CopyToDataTable<T>` methods, see [Creating a DataTable From a Query](../../../../docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  \n  \n### To implement the custom CopyToDataTable\\<T> methods in your application  \n  \n1.  Implement the `ObjectShredder<T>` class to create a <xref:System.Data.DataTable> from an <xref:System.Collections.Generic.IEnumerable%601> source:  \n  \n     [!code-csharp[DP Custom CopyToDataTable Examples#ObjectShredderClass](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP Custom CopyToDataTable Examples/CS/Program.cs#objectshredderclass)]\n     [!code-vb[DP Custom CopyToDataTable Examples#ObjectShredderClass](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP Custom CopyToDataTable Examples/VB/Module1.vb#objectshredderclass)]  \n  \n2.  Implement the custom `CopyToDataTable<T>` extension methods in a class:  \n  \n     [!code-csharp[DP Custom CopyToDataTable Examples#CustomCopyToDataTableMethods](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP Custom CopyToDataTable Examples/CS/Program.cs#customcopytodatatablemethods)]\n     [!code-vb[DP Custom CopyToDataTable Examples#CustomCopyToDataTableMethods](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP Custom CopyToDataTable Examples/VB/Module1.vb#customcopytodatatablemethods)]  \n  \n3.  Add the `ObjectShredder<T>` class and `CopyToDataTable<T>` extension methods to your application.  \n  \n```vb  \nModule Module1  \n    Sub Main()  \n        ' Your application code using CopyToDataTable<T>.  \n    End Sub  \nEnd Module  \n  \nPublic Module CustomLINQtoDataSetMethods  \n…  \nEnd Module  \n  \nPublic Class ObjectShredder(Of T)  \n…  \nEnd Class\n```\n  \n```csharp\nclass Program  \n{  \n    static void Main(string[] args)  \n    {  \n        // Your application code using CopyToDataTable<T>.  \n    }  \n}  \npublic static class CustomLINQtoDataSetMethods  \n{  \n…  \n}  \npublic class ObjectShredder<T>  \n{  \n…  \n}  \n```\n  \n## See Also  \n [Creating a DataTable From a Query](../../../../docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)   \n [Programming Guide](../../../../docs/framework/data/adonet/programming-guide-linq-to-dataset.md)","nodes":[{"pos":[4,415],"embed":true,"restype":"x-metadata","content":"title: \"How to: Implement CopyToDataTable&lt;T&gt; Where the Generic Type T Is Not a DataRow | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: b27b52cf-6172-485f-a75c-70ff9c5a2bd4\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"How to: Implement CopyToDataTable&lt;T&gt; Where the Generic Type T Is Not a DataRow | Microsoft Docs","nodes":[{"pos":[0,101],"content":"How to: Implement CopyToDataTable&lt;T&gt; Where the Generic Type T Is Not a DataRow | Microsoft Docs","nodes":[{"content":"How to: Implement CopyToDataTable<ph id=\"ph1\">&amp;lt;</ph>T<ph id=\"ph2\">&amp;gt;</ph> Where the Generic Type T Is Not a DataRow | Microsoft Docs","pos":[0,101],"source":"How to: Implement CopyToDataTable&lt;T&gt; Where the Generic Type T Is Not a DataRow | Microsoft Docs"}]}],"path":["title"]}],"yml":true},{"pos":[422,506],"content":"How to: Implement CopyToDataTable&lt;T&gt; Where the Generic Type T Is Not a DataRow","linkify":"How to: Implement CopyToDataTable&lt;T&gt; Where the Generic Type T Is Not a DataRow","nodes":[{"content":"How to: Implement CopyToDataTable<ph id=\"ph1\">&amp;lt;</ph>T<ph id=\"ph2\">&amp;gt;</ph> Where the Generic Type T Is Not a DataRow","pos":[0,84],"source":"How to: Implement CopyToDataTable&lt;T&gt; Where the Generic Type T Is Not a DataRow"}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> object is often used for data binding.","pos":[507,578],"source":"The <xref:System.Data.DataTable> object is often used for data binding."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataTableExtensions.CopyToDataTable%2A&gt;</ph> method takes the results of a query and copies the data into a <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph>, which can then be used for data binding.","pos":[579,774],"source":" The <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method takes the results of a query and copies the data into a <xref:System.Data.DataTable>, which can then be used for data binding."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataTableExtensions.CopyToDataTable%2A&gt;</ph> methods, however, only operate on an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> source where the generic parameter <ph id=\"ph3\">`T`</ph> is of type <ph id=\"ph4\">&lt;xref:System.Data.DataRow&gt;</ph>.","pos":[775,1001],"source":" The <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> methods, however, only operate on an <xref:System.Collections.Generic.IEnumerable%601> source where the generic parameter `T` is of type <xref:System.Data.DataRow>."},{"content":"Although this is useful, it does not allow tables to be created from a sequence of scalar types, from queries that project anonymous types, or from queries that perform table joins.","pos":[1002,1183]},{"content":"This topic describes how to implement two custom <ph id=\"ph1\">`CopyToDataTable&lt;T&gt;`</ph> extension methods that accept a generic parameter <ph id=\"ph2\">`T`</ph> of a type other than <ph id=\"ph3\">&lt;xref:System.Data.DataRow&gt;</ph>.","pos":[1190,1362],"source":"This topic describes how to implement two custom `CopyToDataTable<T>` extension methods that accept a generic parameter `T` of a type other than <xref:System.Data.DataRow>."},{"content":"The logic to create a <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> from an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> source is contained in the <ph id=\"ph3\">`ObjectShredder&lt;T&gt;`</ph> class, which is then wrapped in two overloaded <ph id=\"ph4\">`CopyToDataTable&lt;T&gt;`</ph> extension methods.","pos":[1363,1605],"source":" The logic to create a <xref:System.Data.DataTable> from an <xref:System.Collections.Generic.IEnumerable%601> source is contained in the `ObjectShredder<T>` class, which is then wrapped in two overloaded `CopyToDataTable<T>` extension methods."},{"content":"The <ph id=\"ph1\">`Shred`</ph> method of the <ph id=\"ph2\">`ObjectShredder&lt;T&gt;`</ph> class returns the filled <ph id=\"ph3\">&lt;xref:System.Data.DataTable&gt;</ph> and accepts three input parameters: an <ph id=\"ph4\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> source, a <ph id=\"ph5\">&lt;xref:System.Data.DataTable&gt;</ph>, and a <ph id=\"ph6\">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.","pos":[1606,1883],"source":" The `Shred` method of the `ObjectShredder<T>` class returns the filled <xref:System.Data.DataTable> and accepts three input parameters: an <xref:System.Collections.Generic.IEnumerable%601> source, a <xref:System.Data.DataTable>, and a <xref:System.Data.LoadOption> enumeration."},{"content":"The initial schema of the returned <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> is based on the schema of the type <ph id=\"ph2\">`T`</ph>.","pos":[1884,1987],"source":" The initial schema of the returned <xref:System.Data.DataTable> is based on the schema of the type `T`."},{"content":"If an existing table is provided as input, the schema must be consistent with the schema of the type <ph id=\"ph1\">`T`</ph>.","pos":[1988,2093],"source":" If an existing table is provided as input, the schema must be consistent with the schema of the type `T`."},{"content":"Each public property and field of the type <ph id=\"ph1\">`T`</ph> is converted to a <ph id=\"ph2\">&lt;xref:System.Data.DataColumn&gt;</ph> in the returned table.","pos":[2094,2211],"source":" Each public property and field of the type `T` is converted to a <xref:System.Data.DataColumn> in the returned table."},{"content":"If the source sequence contains a type derived from <ph id=\"ph1\">`T`</ph>, the returned table schema is expanded for any additional public properties or fields.","pos":[2212,2354],"source":" If the source sequence contains a type derived from `T`, the returned table schema is expanded for any additional public properties or fields."},{"pos":[2361,2557],"content":"For examples of using the custom <ph id=\"ph1\">`CopyToDataTable&lt;T&gt;`</ph> methods, see <bpt id=\"p1\">[</bpt>Creating a DataTable From a Query<ept id=\"p1\">](../../../../docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)</ept>.","source":"For examples of using the custom `CopyToDataTable<T>` methods, see [Creating a DataTable From a Query](../../../../docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)."},{"pos":[2567,2638],"content":"To implement the custom CopyToDataTable\\<T> methods in your application","linkify":"To implement the custom CopyToDataTable\\<T> methods in your application","nodes":[{"content":"To implement the custom CopyToDataTable<ph id=\"ph1\">\\&lt;</ph>T&gt; methods in your application","pos":[0,71],"source":"To implement the custom CopyToDataTable\\<T> methods in your application"}]},{"pos":[2648,2794],"content":"Implement the <ph id=\"ph1\">`ObjectShredder&lt;T&gt;`</ph> class to create a <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> from an <ph id=\"ph3\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> source:","source":"Implement the `ObjectShredder<T>` class to create a <xref:System.Data.DataTable> from an <xref:System.Collections.Generic.IEnumerable%601> source:"},{"pos":[2805,3204],"content":"[!code-csharp[DP Custom CopyToDataTable Examples#ObjectShredderClass](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP Custom CopyToDataTable Examples/CS/Program.cs#objectshredderclass)]\n [!code-vb[DP Custom CopyToDataTable Examples#ObjectShredderClass](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP Custom CopyToDataTable Examples/VB/Module1.vb#objectshredderclass)]","leadings":["","    "],"nodes":[]},{"pos":[3214,3285],"content":"Implement the custom <ph id=\"ph1\">`CopyToDataTable&lt;T&gt;`</ph> extension methods in a class:","source":"Implement the custom `CopyToDataTable<T>` extension methods in a class:"},{"pos":[3296,3731],"content":"[!code-csharp[DP Custom CopyToDataTable Examples#CustomCopyToDataTableMethods](../../../../samples/snippets/csharp/VS_Snippets_ADO.NET/DP Custom CopyToDataTable Examples/CS/Program.cs#customcopytodatatablemethods)]\n [!code-vb[DP Custom CopyToDataTable Examples#CustomCopyToDataTableMethods](../../../../samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP Custom CopyToDataTable Examples/VB/Module1.vb#customcopytodatatablemethods)]","leadings":["","    "],"nodes":[]},{"pos":[3741,3838],"content":"Add the <ph id=\"ph1\">`ObjectShredder&lt;T&gt;`</ph> class and <ph id=\"ph2\">`CopyToDataTable&lt;T&gt;`</ph> extension methods to your application.","source":"Add the `ObjectShredder<T>` class and `CopyToDataTable<T>` extension methods to your application."},{"pos":[4361,4369],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Creating a DataTable From a Query<ept id=\"p1\">](../../../../docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md)</ept><ph id=\"ph1\"> </ph>","pos":[4373,4502],"source":"[Creating a DataTable From a Query](../../../../docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md) "},{"content":"<bpt id=\"p1\">[</bpt>Programming Guide<ept id=\"p1\">](../../../../docs/framework/data/adonet/programming-guide-linq-to-dataset.md)</ept>","pos":[4506,4602],"source":"[Programming Guide](../../../../docs/framework/data/adonet/programming-guide-linq-to-dataset.md)"}]}