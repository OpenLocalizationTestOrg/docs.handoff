<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-ffc129d" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db02f4d4c80212155e1d5540027327a2b0152e05</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\developing-apps\customizing-extending-my\extending-the-visual-basic-application-model.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20ecef3f8d192eab1d94b7ce9a5e50a386cd0e80</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42719f9b4decabc2fd4d6e1a0752a8cc2b933397</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Extending the Visual Basic Application Model | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Extending the Visual Basic Application Model</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can add functionality to the application model by overriding the <ph id="ph1">`Overridable`</ph> members of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This technique allows you to customize the behavior of the application model and add calls to your own methods as the application starts up and shuts down.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Visual Overview of the Application Model</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This section visually presents the sequence of function calls in the Visual Basic Application Model.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The next section describes the purpose of each function in detail.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following graphic shows the application model call sequence in a normal Visual Basic Windows Forms application.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The sequence starts when the <ph id="ph1">`Sub Main`</ph> procedure calls the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Visual Basic Application Model &amp;#45;&amp;#45; Run<ept id="p1">]</ept><bpt id="p2">(../../../visual-basic/developing-apps/customizing-extending-my/media/vb_modelrun.gif "</bpt>VB_ModelRun<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The Visual Basic Application Model also provides the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following graphics show the mechanism for raising these events.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Visual Basic Application Model &amp;#45;&amp;#45; Next Instance<ept id="p1">]</ept><bpt id="p2">(../../../visual-basic/developing-apps/customizing-extending-my/media/vb_modelnext.gif "</bpt>VB_ModelNext<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Visual Basic Application Model Unhandled Exception<ept id="p1">]</ept><bpt id="p2">(../../../visual-basic/developing-apps/customizing-extending-my/media/vb_unhandex.gif "</bpt>VB_UnhandEx<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Overriding the Base Methods</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A&gt;</ph> method defines the order in which the <ph id="ph2">`Application`</ph> methods run.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">`Sub Main`</ph> procedure for a Windows Forms application calls the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the application is a normal application (multiple-instance application), or the first instance of a single-instance application, the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A&gt;</ph> method executes the <ph id="ph2">`Overridable`</ph> methods in the following order:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>By default, this method sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and calls <ph id="ph1">`ShowSplashScreen`</ph> if neither <ph id="ph2">`/nosplash`</ph> nor <ph id="ph3">`-nosplash`</ph> is used as a command-line argument.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The application startup sequence is canceled if this function returns <ph id="ph1">`False`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This can be useful if there are circumstances in which the application should not run.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;</ph> method calls the following methods:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines if the application has a splash screen defined and if it does, displays the splash screen on a separate thread.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A&gt;</ph> method contains the code that displays the splash screen for at least the number of milliseconds specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To use this functionality, you must add the splash screen to your application using the <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept> (which sets the <ph id="ph1">`My.Application.MinimumSplashScreenDisplayTime`</ph> property to two seconds), or set the <ph id="ph2">`My.Application.MinimumSplashScreenDisplayTime`</ph> property in a method that overrides the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Allows a designer to emit code that initializes the splash screen.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By default, this method does nothing.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you select a splash screen for your application in the <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept>, the designer overrides the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;</ph> method with a method that sets the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A&gt;</ph> property to a new instance of the splash-screen form.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Provides an extensibility point for raising the <ph id="ph1">`Startup`</ph> event.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The application startup sequence stops if this function returns <ph id="ph1">`False`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>By default, this method raises the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the event handler sets the <ph id="ph1">@System.ComponentModel.CancelEventArgs.Cancel</ph> property of the event argument to <ph id="ph2">`True`</ph>, the method returns <ph id="ph3">`False`</ph> to cancel the application startup.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Provides the starting point for when the main application is ready to start running, after the initialization is done.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By default, before it enters the Windows Forms message loop, this method calls the <ph id="ph1">`OnCreateMainForm`</ph> (to create the application's main form) and <ph id="ph2">`HideSplashScreen`</ph> (to close the splash screen) methods:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Provides a way for a designer to emit code that initializes the main form.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>By default, this method does nothing.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, when you select a main form for your application in the <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept>, the designer overrides the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt;</ph> method with a method that sets the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A&gt;</ph> property to a new instance of the main form.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If application has a splash screen defined and it is open, this method closes the splash screen.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>By default, this method closes the splash screen.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Provides a way to customize how a single-instance application behaves when another instance of the application starts.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>By default, this method raises the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Provides an extensibility point for raising the <ph id="ph1">`Shutdown`</ph> event.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method does not run if an unhandled exception occurs in the main application.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>By default, this method raises the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Executed if an unhandled exception occurs in any of the above listed methods.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>By default, this method raises the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&gt;</ph> event as long as a debugger is not attached and the application is handling the <ph id="ph2">`UnhandledException`</ph> event.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the application is a single-instance application, and the application is already running, the subsequent instance of the application calls the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance%2A&gt;</ph> method on the original instance of the application, and then exits.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;</ph> constructor calls the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A&gt;</ph> property to determine which text rendering engine to use for the application's forms.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A&gt;</ph> property returns <ph id="ph2">`False`</ph>, indicating that the GDI text rendering engine be used, which is the default in <ph id="ph3">[!INCLUDE[vbprvblong](../../../visual-basic/developing-apps/customizing-extending-my/includes/vbprvblong_md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can override the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A&gt;</ph> property to return <ph id="ph2">`True`</ph>, which indicates that the GDI+ text rendering engine be used, which is the default in Visual Basic .NET 2002 and Visual Basic .NET 2003.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Configuring the Application</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>As a part of the <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> Application model, the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;</ph> class provides protected properties that configure the application.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>These properties should be set in the constructor of the implementing class.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In a default Windows Forms project, the <bpt id="p1">**</bpt>Project Designer<ept id="p1">**</ept> creates code to set the properties with the designer settings.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The properties are used only when the application is starting; setting them after the application starts has no effect.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Determines</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Setting in the Application pane of  the Project Designer</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Whether the application runs as a single-instance or multiple-instance application.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Make single instance application<ept id="p1">**</ept> check box</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If the application will use visual styles that match Windows XP.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Enable XP visual styles<ept id="p1">**</ept> check box</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If application automatically saves application's user-settings changes when the application exits.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Save My.Settings on Shutdown<ept id="p1">**</ept> check box</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>What causes the application to terminate, such as when the startup form closes or when the last form closes.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Shutdown mode<ept id="p1">**</ept> list</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase&gt;</ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;</ph></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt;</ph></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&gt;</ph></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown&gt;</ph></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged&gt;</ph></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt;</ph></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overview of the Visual Basic Application Model<ept id="p1">](../../../visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Application Page, Project Designer (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>