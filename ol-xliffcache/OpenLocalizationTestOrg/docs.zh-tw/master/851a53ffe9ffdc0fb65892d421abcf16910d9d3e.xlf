<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-401ea83" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">851a53ffe9ffdc0fb65892d421abcf16910d9d3e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\configuring-services-using-configuration-files.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53ce1b61933ffbfdd7093e60103bdf5584a9f96f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">795a574ea55e961baf9078fb62ccf9cecc4e10b3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Configuring Services Using Configuration Files | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Configuring Services Using Configuration Files</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Configuring a <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> service with a configuration file gives you the flexibility of providing endpoint and service behavior data at the point of deployment instead of at design time.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic outlines the primary techniques available.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> service is configurable using the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph> configuration technology.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Most commonly, XML elements are added to the Web.config file for an Internet Information Services (IIS) site that hosts a <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> service.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The elements allow you to change details such as the endpoint addresses (the actual addresses used to communicate with the service) on a machine-by-machine basis.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In addition, <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> includes several system-provided elements that allow you to quickly select the most basic features for a service.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Starting with <ph id="ph1">[!INCLUDE[netfx40_long](../../../includes/netfx40-long-md.md)]</ph>, <ph id="ph2">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> comes with a new default configuration model that simplifies <ph id="ph3">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> configuration requirements.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you do not provide any <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> configuration for a particular service, the runtime automatically configures your service with some standard endpoints and default binding/behavior.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In practice, writing configuration is a major part of programming <ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Configuring Bindings for Services<ept id="p1">](../../../docs/framework/wcf/configuring-bindings-for-wcf-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crlist](../../../includes/crlist-md.md)]</ph> of the most commonly used elements, see <bpt id="p1">[</bpt>System-Provided Bindings<ept id="p1">](../../../docs/framework/wcf/system-provided-bindings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> default endpoints, bindings, and behaviors, see <bpt id="p1">[</bpt>Simplified Configuration<ept id="p1">](../../../docs/framework/wcf/simplified-configuration.md)</ept> and <bpt id="p2">[</bpt>Simplified Configuration for WCF Services<ept id="p2">](../../../docs/framework/wcf/samples/simplified-configuration-for-wcf-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When deploying side by side scenarios where two different versions of a service are deployed, it is necessary to specify partial names of assemblies referenced in configuration files.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is because the configuration file is shared across all versions of a service and they could be running under different versions of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>System.Configuration: Web.config and App.config</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> uses the System.Configuration configuration system of the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When configuring a service in <ph id="ph1">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph>, use either a Web.config file or an App.config file to specify the settings.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The choice of the configuration file name is determined by the hosting environment you choose for the service.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you are using IIS to host your service, use a Web.config file.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you are using any other hosting environment, use an App.config file.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph>, the file named App.config is used to create the final configuration file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The final name actually used for the configuration depends on the assembly name.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, an assembly named "Cohowinery.exe" has a final configuration file name of "Cohowinery.exe.config".</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>However, you only need to modify the App.config file.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Changes made to that file are automatically made to the final application configuration file at compile time.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In using an App.config, file the configuration system merges the App.config file with content of the Machine.config file when the application starts and the configuration is applied.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This mechanism allows machine-wide settings to be defined in the Machine.config file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The App.config file can be used to override the settings of the Machine.config file; you can also lock in the settings in Machine.config file so that they get used.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the Web.config case, the configuration system merges the Web.config files in all directories leading up to the application directory into the configuration that gets applied.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> configuration and the setting priorities, see topics in the <ph id="ph2">&lt;xref:System.Configuration&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Major Sections of the Configuration File</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The main sections in the configuration file include the following elements.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The bindings and behaviors sections are optional and are only included if required.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>services&gt; Element</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`services`</ph> element contains the specifications for all services the application hosts.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Starting with the simplified configuration model in <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph>, this section is optional.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>services&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/services.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>service&gt; Element</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each service has these attributes:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`name`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifies the type that provides an implementation of a service contract.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This is a fully qualified name which consists of the namespace, a period, and then the type name.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example <ph id="ph1">`"MyNameSpace.myServiceType"`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`behaviorConfiguration`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifies the name of one of the <ph id="ph1">`behavior`</ph> elements found in the <ph id="ph2">`behaviors`</ph> element.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The specified behavior governs actions such as whether the service allows impersonation.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If its value is the empty name or no <ph id="ph1">`behaviorConfiguration`</ph> is provided then the default set of service behaviors is added to the service.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>service&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/service.md)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>endpoint&gt; Element</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Each endpoint requires an address, a binding, and a contract, which are represented by the following attributes:</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies the service's Uniform Resource Identifier (URI), which can be an absolute address or one that is given relative to the base address of the service.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If set to an empty string, it indicates that the endpoint is available at the base address that is specified when creating the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> for the service.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`binding`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Typically specifies a system-provided binding like <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, but can also specify a user-defined binding.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The binding specified determines the type of transport, security and encoding used, and whether reliable sessions, transactions, or streaming is supported or enabled.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`bindingConfiguration`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the default values of a binding must be modified, this can be done by configuring the appropriate <ph id="ph1">`binding`</ph> element in the <ph id="ph2">`bindings`</ph> element.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This attribute should be given the same value as the <ph id="ph1">`name`</ph> attribute of the <ph id="ph2">`binding`</ph> element that is used to change the defaults.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If no name is given, or no <ph id="ph1">`bindingConfiguration`</ph> is specified in the binding, then the default binding of the binding type is used in the endpoint.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`contract`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Specifies the interface that defines the contract.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This is the interface implemented in the common language runtime (CLR) type specified by the <ph id="ph1">`name`</ph> attribute of the <ph id="ph2">`service`</ph> element.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>endpoint&gt; element reference<ept id="p1">](http://msdn.microsoft.com/en-us/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>bindings&gt; Element</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`bindings`</ph> element contains the specifications for all bindings that can be used by any endpoint defined in any service.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>bindings&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/bindings.md)</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>binding&gt; Element</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`binding`</ph> elements contained in the <ph id="ph2">`bindings`</ph> element can be either one of the system-provided bindings (see <bpt id="p1">[</bpt>System-Provided Bindings<ept id="p1">](../../../docs/framework/wcf/system-provided-bindings.md)</ept>) or a custom binding (see <bpt id="p2">[</bpt>Custom Bindings<ept id="p2">](../../../docs/framework/wcf/extending/custom-bindings.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`binding`</ph> element has a <ph id="ph2">`name`</ph> attribute that correlates the binding with the endpoint specified in the <ph id="ph3">`bindingConfiguration`</ph> attribute of the <ph id="ph4">`endpoint`</ph> element.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If no name is specified then that binding corresponds to the default of that binding type.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> configuring services and clients, see <bpt id="p1">[</bpt>Configuring Windows Communication Foundation Applications<ept id="p1">](http://msdn.microsoft.com/en-us/13cb368e-88d4-4c61-8eed-2af0361c6d7a)</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>binding&gt;<ept id="p1">](../../../docs/framework/misc/binding.md)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>behaviors&gt; Element</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This is a container element for the <ph id="ph1">`behavior`</ph> elements that define the behaviors for a service.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>behaviors&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/behaviors.md)</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">\&lt;</ph>behavior&gt; Element</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`behavior`</ph> element is identified by a <ph id="ph2">`name`</ph> attribute and provides either a system-provided behavior, such as &lt;<ph id="ph3">`throttling`</ph>&gt;, or a custom behavior.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If no name is given then that behavior element corresponds to the default service or endpoint behavior.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>behavior&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/behavior-of-servicebehaviors.md)</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>How to Use Binding and Behavior Configurations</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> makes it easy to share configurations between endpoints using a reference system in configuration.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Rather than directly assigning configuration values to an endpoint, binding-related configuration values are grouped in <ph id="ph1">`bindingConfiguration`</ph> elements in the <ph id="ph2">`&lt;binding&gt;`</ph> section.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A binding configuration is a named group of settings on a binding.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Endpoints can then reference the <ph id="ph1">`bindingConfiguration`</ph> by name.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`name`</ph> of the <ph id="ph2">`bindingConfiguration`</ph> is set in the <ph id="ph3">`&lt;binding&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`name`</ph> must be a unique string within the scope of the binding type—in this case the <bpt id="p1">[</bpt>&lt;basicHttpBinding<ph id="ph2">\&gt;</ph><ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/basichttpbinding.md)</ept>, or an empty value to refer to the default binding.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The endpoint links to the configuration by setting the <ph id="ph1">`bindingConfiguration`</ph> attribute to this string.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`behaviorConfiguration`</ph> is implemented the same way, as illustrated in the following sample.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Note that the default set of service behaviors are added to the service.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This system allows endpoints to share common configurations without redefining the settings.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If machine-wide scope is required, create the binding or behavior configuration in Machine.config. The configuration settings are available in all App.config files.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Configuration Editor Tool (SvcConfigEditor.exe)<ept id="p1">](../../../docs/framework/wcf/configuration-editor-tool-svcconfigeditor-exe.md)</ept> makes it easy to create configurations.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Behavior Merge</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The behavior merge feature makes it easier to manage behaviors when you want a set of common behaviors to be used consistently.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This feature allows you to specify behaviors at different levels of the configuration hierarchy and have services inherit behaviors from multiple levels of the configuration hierarchy.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To illustrate how this works assume you have the following virtual directory layout in IIS:</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>~\Web.config~\Service.svc~\Child\Web.config~\Child\Service.svc</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>And your ~\Web.config file has the following contents:</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>And you have a child Web.config located at ~\Child\Web.config with the following contents:</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The service located at ~\Child\Service.svc will behave as though it has both the serviceDebug and serviceMetadata behaviors.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The service located at ~\Service.svc will only have the serviceDebug behavior.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>What happens is that the two behavior collections with the same name (in this case the empty string) are merged.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can also clear behavior collections by using the <ph id="ph1">\&lt;</ph>clear&gt; tag and removed individual behaviors from the collection by using the <ph id="ph2">\&lt;</ph>remove&gt; tag.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, the following two configuration results in the child service having only the serviceMetadata behavior:</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Behavior merge is done for nameless behavior collections as shown above and named behavior collections as well.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Behavior merge works in the IIS hosting environment, in which Web.config files merge hierarchically with the root Web.config file and machine.config. But it also works in the application environment, where machine.config can merge with the App.config file.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Behavior merge applies to both endpoint behaviors and service behaviors in configuration.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If a child behavior collection contains a behavior that’s already present in the parent behavior collection, the child behavior overrides the parent.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>So if a parent behavior collection had <ph id="ph1">`&lt;serviceMetadata httpGetEnabled="False" /&gt;`</ph> and a child behavior collection had <ph id="ph2">`&lt;serviceMetadata httpGetEnabled="True" /&gt;`</ph>, the child behavior would override the parent behavior in the behavior collection and httpGetEnabled would be "true".</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Simplified Configuration<ept id="p1">](../../../docs/framework/wcf/simplified-configuration.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring Windows Communication Foundation Applications<ept id="p1">](http://msdn.microsoft.com/en-us/13cb368e-88d4-4c61-8eed-2af0361c6d7a)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>service&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/wcf/service.md)</ept><ph id="ph2"> </ph></source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>binding&gt;<ept id="p1">](../../../docs/framework/misc/binding.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>