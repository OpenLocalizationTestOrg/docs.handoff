{"content":"---\ntitle: \"Using DataContractSerializer and DataContractResolver to Provide the Functionality of NetDataContractSerializer\"\nms.date: \"03/30/2017\"\nms.assetid: 1376658f-f695-45f7-a7e0-94664e9619ff\n---\n# Using DataContractSerializer and DataContractResolver to Provide the Functionality of NetDataContractSerializer\nThis sample demonstrates how the use of <xref:System.Runtime.Serialization.DataContractSerializer> with an appropriate <xref:System.Runtime.Serialization.DataContractResolver> provides the same functionality as <xref:System.Runtime.Serialization.NetDataContractSerializer>. This sample shows how to create the appropriate <xref:System.Runtime.Serialization.DataContractResolver> and how to add it to the <xref:System.Runtime.Serialization.DataContractSerializer>.\n\n## Sample details\n <xref:System.Runtime.Serialization.NetDataContractSerializer> differs from <xref:System.Runtime.Serialization.DataContractSerializer> in one important way: <xref:System.Runtime.Serialization.NetDataContractSerializer> includes CLR type information in the serialized XML, whereas <xref:System.Runtime.Serialization.DataContractSerializer> does not. Therefore, <xref:System.Runtime.Serialization.NetDataContractSerializer> can be used only if both the serializing and deserializing ends share the same CLR types. However, it is recommended to use <xref:System.Runtime.Serialization.DataContractSerializer> because its performance is better than <xref:System.Runtime.Serialization.NetDataContractSerializer>. You can change the information that is serialized in <xref:System.Runtime.Serialization.DataContractSerializer> by adding a <xref:System.Runtime.Serialization.DataContractResolver> to it.\n\n This sample consists of two projects. The first project uses <xref:System.Runtime.Serialization.NetDataContractSerializer> to serialize an object. The second project uses <xref:System.Runtime.Serialization.DataContractSerializer> with a <xref:System.Runtime.Serialization.DataContractResolver> to provide the same functionality as the first project.\n\n The following code example shows the implementation of a custom <xref:System.Runtime.Serialization.DataContractResolver> named `MyDataContractResolver` that is added to the <xref:System.Runtime.Serialization.DataContractSerializer> in the DCSwithDCR project.\n\n```csharp\nclass MyDataContractResolver : DataContractResolver\n{\n    private XmlDictionary dictionary = new XmlDictionary();\n\n    public MyDataContractResolver()\n    {\n    }\n\n    // Used at deserialization\n    // Allows users to map xsi:type name to any Type\n    public override Type ResolveName(string typeName, string typeNamespace, DataContractResolver knownTypeResolver)\n    {\n        Type type = knownTypeResolver.ResolveName(typeName, typeNamespace, null);\n        if (type == null)\n        {\n            type = Type.GetType(typeName + \", \" + typeNamespace);\n        }\n        return type;\n    }\n\n    // Used at serialization\n    // Maps any Type to a new xsi:type representation\n    public override void ResolveType(Type dataContractType, DataContractResolver knownTypeResolver, out XmlDictionaryString typeName, out XmlDictionaryString typeNamespace)\n    {\n        knownTypeResolver.ResolveType(dataContractType, null, out typeName, out typeNamespace);\n        if (typeName == null || typeNamespace == null)\n        {\n            XmlDictionary dictionary = new XmlDictionary();\n            typeName = dictionary.Add(dataContractType.FullName);\n            typeNamespace = dictionary.Add(dataContractType.Assembly.FullName);\n        }\n    }\n}\n```\n\n#### To use this sample\n\n1.  Using Visual Studio 2012, open the DCRSample.sln solution file.\n\n2.  Right-click the solution file and choose **Properties**.\n\n3.  In the **Solution Property Pages** dialog, under **Common Properties**, **Startup Project**, select **Multiple startup projects:**.\n\n4.  Next to the **DCSwithDCR** project, select **Start** from the **Action** dropdown.\n\n5.  Next to the **NetDCS** project, select **Start** from the **Action** dropdown.\n\n6.  Click **OK** to close the dialog.\n\n7.  To build the solution, press CTRL+SHIFT+B.\n\n8.  To run the solution, press CTRL+F5.\n\n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Basic\\Contract\\Data\\NetDcSasDcSwithDCR`  \n","nodes":[{"pos":[4,195],"embed":true,"restype":"x-metadata","content":"title: \"Using DataContractSerializer and DataContractResolver to Provide the Functionality of NetDataContractSerializer\"\nms.date: \"03/30/2017\"\nms.assetid: 1376658f-f695-45f7-a7e0-94664e9619ff","nodes":[{"content":"Using DataContractSerializer and DataContractResolver to Provide the Functionality of NetDataContractSerializer","nodes":[{"pos":[0,111],"content":"Using DataContractSerializer and DataContractResolver to Provide the Functionality of NetDataContractSerializer","nodes":[{"content":"Using DataContractSerializer and DataContractResolver to Provide the Functionality of NetDataContractSerializer","pos":[0,111]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[202,313],"content":"Using DataContractSerializer and DataContractResolver to Provide the Functionality of NetDataContractSerializer","linkify":"Using DataContractSerializer and DataContractResolver to Provide the Functionality of NetDataContractSerializer","nodes":[{"content":"Using DataContractSerializer and DataContractResolver to Provide the Functionality of NetDataContractSerializer","pos":[0,111]}]},{"content":"This sample demonstrates how the use of <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> with an appropriate <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractResolver&gt;</ph> provides the same functionality as <ph id=\"ph3\">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>.","pos":[314,587],"source":"This sample demonstrates how the use of <xref:System.Runtime.Serialization.DataContractSerializer> with an appropriate <xref:System.Runtime.Serialization.DataContractResolver> provides the same functionality as <xref:System.Runtime.Serialization.NetDataContractSerializer>."},{"content":"This sample shows how to create the appropriate <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractResolver&gt;</ph> and how to add it to the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.","pos":[588,777],"source":" This sample shows how to create the appropriate <xref:System.Runtime.Serialization.DataContractResolver> and how to add it to the <xref:System.Runtime.Serialization.DataContractSerializer>."},{"pos":[782,796],"content":"Sample details","linkify":"Sample details","nodes":[{"content":"Sample details","pos":[0,14]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> differs from <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> in one important way: <ph id=\"ph3\">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> includes CLR type information in the serialized XML, whereas <ph id=\"ph4\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> does not.","pos":[798,1145],"source":"<xref:System.Runtime.Serialization.NetDataContractSerializer> differs from <xref:System.Runtime.Serialization.DataContractSerializer> in one important way: <xref:System.Runtime.Serialization.NetDataContractSerializer> includes CLR type information in the serialized XML, whereas <xref:System.Runtime.Serialization.DataContractSerializer> does not."},{"content":"Therefore, <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> can be used only if both the serializing and deserializing ends share the same CLR types.","pos":[1146,1308],"source":" Therefore, <xref:System.Runtime.Serialization.NetDataContractSerializer> can be used only if both the serializing and deserializing ends share the same CLR types."},{"content":"However, it is recommended to use <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> because its performance is better than <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>.","pos":[1309,1503],"source":" However, it is recommended to use <xref:System.Runtime.Serialization.DataContractSerializer> because its performance is better than <xref:System.Runtime.Serialization.NetDataContractSerializer>."},{"content":"You can change the information that is serialized in <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> by adding a <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractResolver&gt;</ph> to it.","pos":[1504,1691],"source":" You can change the information that is serialized in <xref:System.Runtime.Serialization.DataContractSerializer> by adding a <xref:System.Runtime.Serialization.DataContractResolver> to it."},{"content":"This sample consists of two projects.","pos":[1694,1731]},{"content":"The first project uses <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> to serialize an object.","pos":[1732,1840],"source":" The first project uses <xref:System.Runtime.Serialization.NetDataContractSerializer> to serialize an object."},{"content":"The second project uses <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> with a <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractResolver&gt;</ph> to provide the same functionality as the first project.","pos":[1841,2043],"source":" The second project uses <xref:System.Runtime.Serialization.DataContractSerializer> with a <xref:System.Runtime.Serialization.DataContractResolver> to provide the same functionality as the first project."},{"pos":[2046,2304],"content":"The following code example shows the implementation of a custom <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractResolver&gt;</ph> named <ph id=\"ph2\">`MyDataContractResolver`</ph> that is added to the <ph id=\"ph3\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> in the DCSwithDCR project.","source":"The following code example shows the implementation of a custom <xref:System.Runtime.Serialization.DataContractResolver> named `MyDataContractResolver` that is added to the <xref:System.Runtime.Serialization.DataContractSerializer> in the DCSwithDCR project."},{"pos":[3565,3583],"content":"To use this sample","linkify":"To use this sample","nodes":[{"content":"To use this sample","pos":[0,18]}]},{"content":"Using Visual Studio 2012, open the DCRSample.sln solution file.","pos":[3589,3652]},{"pos":[3658,3714],"content":"Right-click the solution file and choose <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept>.","source":"Right-click the solution file and choose **Properties**."},{"pos":[3720,3851],"content":"In the <bpt id=\"p1\">**</bpt>Solution Property Pages<ept id=\"p1\">**</ept> dialog, under <bpt id=\"p2\">**</bpt>Common Properties<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Startup Project<ept id=\"p3\">**</ept>, select <bpt id=\"p4\">**</bpt>Multiple startup projects:<ept id=\"p4\">**</ept>.","source":"In the **Solution Property Pages** dialog, under **Common Properties**, **Startup Project**, select **Multiple startup projects:**."},{"pos":[3857,3939],"content":"Next to the <bpt id=\"p1\">**</bpt>DCSwithDCR<ept id=\"p1\">**</ept> project, select <bpt id=\"p2\">**</bpt>Start<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Action<ept id=\"p3\">**</ept> dropdown.","source":"Next to the **DCSwithDCR** project, select **Start** from the **Action** dropdown."},{"pos":[3945,4023],"content":"Next to the <bpt id=\"p1\">**</bpt>NetDCS<ept id=\"p1\">**</ept> project, select <bpt id=\"p2\">**</bpt>Start<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Action<ept id=\"p3\">**</ept> dropdown.","source":"Next to the **NetDCS** project, select **Start** from the **Action** dropdown."},{"pos":[4029,4062],"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to close the dialog.","source":"Click **OK** to close the dialog."},{"content":"To build the solution, press CTRL+SHIFT+B.","pos":[4068,4110]},{"content":"To run the solution, press CTRL+F5.","pos":[4116,4151]},{"pos":[4155,4287],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":"The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[14,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[0,53]},{"content":"Check for the following (default) directory before continuing.","pos":[54,116]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all Windows Communication Foundation (WCF) and <ph id=\"ph1\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[4341,4651],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[4652,4702]}]}