{"content":"---\ntitle: FormatFromRawValue function (Unmanaged API Reference)\ndescription: The FormatFromRawValue function converts raw performance data to a specified format.\nms.date: \"11/21/2017\"\napi_name: \n  - \"FormatFromRawValue\"\napi_location: \n  - \"PerfCounter.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"FormatFromRawValue\"\nhelpviewer_keywords: \n  - \"FormatFromRawValue function [.NET WMI and performance counters]\"\ntopic_type: \n  - \"Reference\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# FormatFromRawValue function\nConverts one raw performance data value to the specified format, or two raw performance data values if the format conversion is time-based. \n\n[!INCLUDE[internalonly-unmanaged](../../../../includes/internalonly-unmanaged.md)]\n\n## Syntax\n\n```\nint FormatFromRawValue (\n   [in] uint                    dwCounterType, \n   [in] uint                    dwFormat, \n   [in] long*                   pTimeBase,\n   [in] PDH_RAW_COUNTER*        pRawValue1,\n   [in] PDH_RAW_COUNTER*        pRawValue2,\n   [out] PDH_FMT_COUNTERVALUE*  pFmtValue\n); \n```\n\n## Parameters\n\n`dwCounterType`\\\n[in] The counter type. For a list of counter types, see [WMI Performance Counter Types](/windows/desktop/WmiSdk/wmi-performance-counter-types). `dwCounterType` can be any counter type except for `PERF_LARGE_RAW_FRACTION` and `PERF_LARGE_RAW_BASE`. \n\n`dwFormat`\\\n[in] The format to which to convert the raw performance data. It can be one of the following values:\n\n|Constant  |Value  |Description |\n|---------|---------|---------|\n| `PDH_FMT_DOUBLE` |0x00000200 | Return the calculated value as a double-precision floating point value. | \n| `PDH_FMT_LARGE` | 0x00000400 | Return the calculated value as a 64-bit integer. |\n| `PDH_FMT_LONG` | 0x00000100 | Return the calculated value as a 32-bit integer. |\n\nOne of the previous values can be ORed with one of the following scaling flags:\n\n|Constant  |Value  |Description |\n|---------|---------|---------|\n| `PDH_FMT_NOSCALE` | 0x00001000 | Do not apply the counter's scaling factors. |\n| `PDH_FMT_1000` | 0x00002000 | Multiply the final value by 1,000. | \n\n`pTimeBase`\\\n[in] A pointer to the time base, if necessary for the format conversion. If time base information is not necessary for the format conversion, the value of this parameter is ignored.\n\n`pRawValue1`\\ \n[in] A pointer to a [`PDH_RAW_COUNTER`](/windows/desktop/api/pdh/ns-pdh-_pdh_raw_counter) structure that represents a raw performance value.\n\n`pRawValue2`\\\n[in] A pointer to a [`PDH_RAW_COUNTER`](/windows/desktop/api/pdh/ns-pdh-_pdh_raw_counter) structure that represents a second raw performance value. If a second raw performance value is not necessary, this parameter should be `null`.\n\n`pFmtValue`\\\n[out] A pointer to a [`PDH_FMT_COUNTERVALUE`](/windows/desktop/api/pdh/ns-pdh-_pdh_fmt_countervalue) structure that receives the formatted performance value.\n\n## Return value\n\nThe following values are returned by this function:\n\n|Constant  |Value  |Description  |\n|---------|---------|---------|\n| `ERROR_SUCCESS` | 0 | The function call is successful. |\n| `PDH_INVALID_ARGUMENT` | 0xC0000BBD | A required argument is missing or incorrect. | \n| `PDH_INVALID_HANDLE` | 0xC0000BBC | The handle is not a valid PDH object. |\n\n## Remarks\n\nThis function wraps a call to the [FormatFromRawValue](https://docs.microsoft.com/previous-versions/ms231047(v=vs.85)) function.\n\n## Requirements\n\n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).\n\n **Library:** PerfCounter.dll\n\n **.NET Framework Versions:** [!INCLUDE[net_current_v472plus](../../../../includes/net-current-v472plus.md)]\n\n## See also\n\n- [WMI and Performance Counters (Unmanaged API Reference)](index.md)\n","nodes":[{"pos":[4,484],"embed":true,"restype":"x-metadata","content":"title: FormatFromRawValue function (Unmanaged API Reference)\ndescription: The FormatFromRawValue function converts raw performance data to a specified format.\nms.date: \"11/21/2017\"\napi_name: \n  - \"FormatFromRawValue\"\napi_location: \n  - \"PerfCounter.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"FormatFromRawValue\"\nhelpviewer_keywords: \n  - \"FormatFromRawValue function [.NET WMI and performance counters]\"\ntopic_type: \n  - \"Reference\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"FormatFromRawValue function (Unmanaged API Reference)","nodes":[{"pos":[0,53],"content":"FormatFromRawValue function (Unmanaged API Reference)","nodes":[{"content":"FormatFromRawValue function (Unmanaged API Reference)","pos":[0,53]}]}],"path":["title"],"nosxs":false},{"content":"The FormatFromRawValue function converts raw performance data to a specified format.","nodes":[{"pos":[0,84],"content":"The FormatFromRawValue function converts raw performance data to a specified format.","nodes":[{"content":"The FormatFromRawValue function converts raw performance data to a specified format.","pos":[0,84]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[491,518],"content":"FormatFromRawValue function","linkify":"FormatFromRawValue function","nodes":[{"content":"FormatFromRawValue function","pos":[0,27]}]},{"content":"Converts one raw performance data value to the specified format, or two raw performance data values if the format conversion is time-based.","pos":[519,658]},{"pos":[748,754],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1061,1071],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The counter type.","pos":[1090,1112]},{"content":"For a list of counter types, see <bpt id=\"p1\">[</bpt>WMI Performance Counter Types<ept id=\"p1\">](/windows/desktop/WmiSdk/wmi-performance-counter-types)</ept>.","pos":[1113,1233],"source":" For a list of counter types, see [WMI Performance Counter Types](/windows/desktop/WmiSdk/wmi-performance-counter-types)."},{"content":"<ph id=\"ph1\">`dwCounterType`</ph> can be any counter type except for <ph id=\"ph2\">`PERF_LARGE_RAW_FRACTION`</ph> and <ph id=\"ph3\">`PERF_LARGE_RAW_BASE`</ph>.","pos":[1234,1337],"source":"`dwCounterType` can be any counter type except for `PERF_LARGE_RAW_FRACTION` and `PERF_LARGE_RAW_BASE`."},{"content":"[in] The format to which to convert the raw performance data.","pos":[1352,1413]},{"content":"It can be one of the following values:","pos":[1414,1452]},{"content":"Constant","pos":[1455,1463]},{"content":"Value","pos":[1466,1471]},{"content":"Description","pos":[1474,1485]},{"content":"0x00000200","pos":[1540,1550]},{"content":"Return the calculated value as a double-precision floating point value.","pos":[1553,1624]},{"content":"0x00000400","pos":[1648,1658]},{"content":"Return the calculated value as a 64-bit integer.","pos":[1661,1709]},{"content":"0x00000100","pos":[1731,1741]},{"content":"Return the calculated value as a 32-bit integer.","pos":[1744,1792]},{"content":"One of the previous values can be ORed with one of the following scaling flags:","pos":[1796,1875]},{"content":"Constant","pos":[1878,1886]},{"content":"Value","pos":[1889,1894]},{"content":"Description","pos":[1897,1908]},{"content":"0x00001000","pos":[1965,1975]},{"content":"Do not apply the counter's scaling factors.","pos":[1978,2021]},{"content":"0x00002000","pos":[2043,2053]},{"content":"Multiply the final value by 1,000.","pos":[2056,2090]},{"content":"[in] A pointer to the time base, if necessary for the format conversion.","pos":[2108,2180]},{"content":"If time base information is not necessary for the format conversion, the value of this parameter is ignored.","pos":[2181,2289]},{"pos":[2291,2446],"content":"<ph id=\"ph1\">`pRawValue1`</ph>\\ [in] A pointer to a <bpt id=\"p1\">[</bpt><ph id=\"ph2\">`PDH_RAW_COUNTER`</ph><ept id=\"p1\">](/windows/desktop/api/pdh/ns-pdh-_pdh_raw_counter)</ept> structure that represents a raw performance value.","source":"`pRawValue1`\\ \n[in] A pointer to a [`PDH_RAW_COUNTER`](/windows/desktop/api/pdh/ns-pdh-_pdh_raw_counter) structure that represents a raw performance value."},{"content":"[in] A pointer to a <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`PDH_RAW_COUNTER`</ph><ept id=\"p1\">](/windows/desktop/api/pdh/ns-pdh-_pdh_raw_counter)</ept> structure that represents a second raw performance value.","pos":[2462,2609],"source":"[in] A pointer to a [`PDH_RAW_COUNTER`](/windows/desktop/api/pdh/ns-pdh-_pdh_raw_counter) structure that represents a second raw performance value."},{"content":"If a second raw performance value is not necessary, this parameter should be <ph id=\"ph1\">`null`</ph>.","pos":[2610,2694],"source":" If a second raw performance value is not necessary, this parameter should be `null`."},{"content":"[out] A pointer to a <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`PDH_FMT_COUNTERVALUE`</ph><ept id=\"p1\">](/windows/desktop/api/pdh/ns-pdh-_pdh_fmt_countervalue)</ept> structure that receives the formatted performance value.","pos":[2709,2866],"source":"[out] A pointer to a [`PDH_FMT_COUNTERVALUE`](/windows/desktop/api/pdh/ns-pdh-_pdh_fmt_countervalue) structure that receives the formatted performance value."},{"pos":[2871,2883],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The following values are returned by this function:","pos":[2885,2936]},{"content":"Constant","pos":[2939,2947]},{"content":"Value","pos":[2950,2955]},{"content":"Description","pos":[2958,2969]},{"content":"0","pos":[3025,3026]},{"content":"The function call is successful.","pos":[3029,3061]},{"content":"0xC0000BBD","pos":[3091,3101]},{"content":"A required argument is missing or incorrect.","pos":[3104,3148]},{"content":"0xC0000BBC","pos":[3177,3187]},{"content":"The handle is not a valid PDH object.","pos":[3190,3227]},{"pos":[3234,3241],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3243,3371],"content":"This function wraps a call to the <bpt id=\"p1\">[</bpt>FormatFromRawValue<ept id=\"p1\">](https://docs.microsoft.com/previous-versions/ms231047(v=vs.85))</ept> function.","source":"This function wraps a call to the [FormatFromRawValue](https://docs.microsoft.com/previous-versions/ms231047(v=vs.85)) function."},{"pos":[3376,3388],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3391,3495],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3498,3526],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> PerfCounter.dll","source":"**Library:** PerfCounter.dll"},{"pos":[3529,3636],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v472plus](../../../../includes/net-current-v472plus.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v472plus](../../../../includes/net-current-v472plus.md)]"},{"pos":[3641,3649],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3653,3719],"content":"<bpt id=\"p1\">[</bpt>WMI and Performance Counters (Unmanaged API Reference)<ept id=\"p1\">](index.md)</ept>","source":"[WMI and Performance Counters (Unmanaged API Reference)](index.md)"}]}