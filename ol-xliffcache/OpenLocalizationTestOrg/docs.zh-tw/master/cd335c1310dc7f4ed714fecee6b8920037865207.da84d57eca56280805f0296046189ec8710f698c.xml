{"content":"---\ntitle: \"Walkthrough: Hosting a WPF Composite Control in Windows Forms | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"hosting WPF content in Windows Forms\"\nms.assetid: 0ac41286-4c1b-4b17-9196-d985cb844ce1\ncaps.latest.revision: 34\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Walkthrough: Hosting a WPF Composite Control in Windows Forms\n[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] provides a rich environment for creating applications. However, when you have a substantial investment in              [!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)] code, it can be more effective to extend your existing              [!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)] application with              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] rather than to rewrite it from scratch. A common scenario is when you want to embed one or more controls implemented with              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] within your              [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] application. For more information about customizing WPF controls, see              [Control Customization](../../../../docs/framework/wpf/controls/control-customization.md).  \n  \n This walkthrough steps you through an application that hosts a              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control to perform data-entry in a              [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] application. The composite control is packaged in a DLL. This general procedure can be extended to more complex applications and controls. This walkthrough is designed to be nearly identical in appearance and functionality to              [Walkthrough: Hosting a Windows Forms Composite Control in WPF](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md). The primary difference is that the hosting scenario is reversed.  \n  \n The walkthrough is divided into two sections. The first section briefly describes the implementation of the              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control. The second section discusses in detail how to host the composite control in a              [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] application, receive events from the control, and access some of the control’s properties.  \n  \n Tasks illustrated in this walkthrough include:  \n  \n-   Implementing the WPF composite control.  \n  \n-   Implementing the Windows Forms host application.  \n  \n For a complete code listing of the tasks illustrated in this walkthrough, see              [Hosting a WPF Composite Control in Windows Forms Sample](http://go.microsoft.com/fwlink/?LinkID=159996).  \n  \n## Prerequisites  \n You need the following components to complete this walkthrough:  \n  \n-   [!INCLUDE[vs_dev10_long](../../../../includes/vs-dev10-long-md.md)].  \n  \n## Implementing the WPF Composite Control  \n The                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control used in this example is a simple data-entry form that takes the user's name and address. When the user clicks one of two buttons to indicate that the task is finished, the control raises a custom event to return that information to the host. The following illustration shows the rendered control.  \n  \n ![Simple WPF control](../../../../docs/framework/wpf/advanced/media/avaloncontrol.png \"AvalonControl\")  \nWPF composite control  \n  \n### Creating the Project  \n To start the project:  \n  \n1.  Launch                                  [!INCLUDE[TLA#tla_visualstu](../../../../includes/tlasharptla-visualstu-md.md)], and open the                                  **New Project** dialog box.  \n  \n2.  In Visual C# and the Windows category, select the                                  **WPF User Control Library** template.  \n  \n3.  Name the new project                                  `MyControls`.  \n  \n4.  For the location, specify a conveniently named top-level folder, such as                                  `WindowsFormsHostingWpfControl`. Later, you will put the host application in this folder.  \n  \n5.  Click                                  **OK** to create the project. The default project contains a single control named                                  `UserControl1`.  \n  \n6.  In Solution Explorer, rename                                  `UserControl1` to                                  `MyControl1`.  \n  \n Your project should have references to the following system DLLs. If any of these DLLs are not included by default, add them to your project.  \n  \n-   PresentationCore  \n  \n-   PresentationFramework  \n  \n-   System  \n  \n-   WindowsBase  \n  \n### Creating the User Interface  \n The                          [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)] for the composite control is implemented with                          [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]. The composite control                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] consists of five                          <xref:System.Windows.Controls.TextBox> elements. Each                          <xref:System.Windows.Controls.TextBox> element has an associated                          <xref:System.Windows.Controls.TextBlock> element that serves as a label. There are two                          <xref:System.Windows.Controls.Button> elements at the bottom,                          **OK** and                          **Cancel**. When the user clicks either button, the control raises a custom event to return the information to the host.  \n  \n#### Basic Layout  \n The various                                  [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] elements are contained in a                                  <xref:System.Windows.Controls.Grid> element. You can use                                  <xref:System.Windows.Controls.Grid> to arrange the contents of the composite control in much the same way you would use a                                  `Table` element in HTML.                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] also has a                                  <xref:System.Windows.Documents.Table> element, but                                  <xref:System.Windows.Controls.Grid> is more lightweight and better suited for simple layout tasks.  \n  \n The following XAML shows the basic layout. This XAML defines the overall structure of the control by specifying the number of columns and rows in the                                  <xref:System.Windows.Controls.Grid> element.  \n  \n In MyControl1.xaml, replace the existing XAML with the following XAML.  \n  \n [!code-xml[WindowsFormsHostingWpfControl#101](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#101)]  \n[!code-xml[WindowsFormsHostingWpfControl#102](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#102)]  \n  \n#### Adding TextBlock and TextBox Elements to the Grid  \n You place a                                  [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] element in the grid by setting the element's                                  <xref:System.Windows.Controls.Grid.RowProperty> and                                  <xref:System.Windows.Controls.Grid.ColumnProperty> attributes to the appropriate row and column number. Remember that row and column numbering are zero-based. You can have an element span multiple columns by setting its                                  <xref:System.Windows.Controls.Grid.ColumnSpanProperty> attribute. For more information about                                  <xref:System.Windows.Controls.Grid> elements, see                                  [Create a Grid Element](../../../../docs/framework/wpf/controls/how-to-create-a-grid-element.md).  \n  \n The following XAML shows the composite control’s                                  <xref:System.Windows.Controls.TextBox> and                                  <xref:System.Windows.Controls.TextBlock> elements with their                                  <xref:System.Windows.Controls.Grid.RowProperty> and                                  <xref:System.Windows.Controls.Grid.ColumnProperty> attributes, which are set to place the elements properly in the grid.  \n  \n In MyControl1.xaml, add the following XAML within the                                  <xref:System.Windows.Controls.Grid> element.  \n  \n [!code-xml[WindowsFormsHostingWpfControl#103](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#103)]  \n  \n#### Styling the UI Elements  \n Many of the elements on the data-entry form have a similar appearance, which means that they have identical settings for several of their properties. Rather than setting each element's attributes separately, the previous XAML uses                                  <xref:System.Windows.Style> elements to define standard property settings for classes of elements. This approach reduces the complexity of the control and enables you to change the appearance of multiple elements through a single style attribute.  \n  \n The                                  <xref:System.Windows.Style> elements are contained in the                                  <xref:System.Windows.Controls.Grid> element's                                  <xref:System.Windows.FrameworkElement.Resources%2A> property, so they can be used by all elements in the control. If a style is named, you apply it to an element by adding a                                  <xref:System.Windows.Style> element set to the style's name. Styles that are not named become the default style for the element. For more information about                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] styles, see                                  [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md).  \n  \n The following XAML shows the                                  <xref:System.Windows.Style> elements for the composite control. To see how the styles are applied to elements, see the previous XAML. For example, the last                                  <xref:System.Windows.Controls.TextBlock> element has the                                  `inlineText` style, and the last                                  <xref:System.Windows.Controls.TextBox> element uses the default style.  \n  \n In MyControl1.xaml, add the following XAML just after the                                  <xref:System.Windows.Controls.Grid> start element.  \n  \n [!code-xml[WindowsFormsHostingWpfControl#104](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#104)]  \n  \n#### Adding the OK and Cancel Buttons  \n The final elements on the composite control are the                                  **OK** and                                  **Cancel**<xref:System.Windows.Controls.Button> elements, which occupy the first two columns of the last row of the                                  <xref:System.Windows.Controls.Grid>. These elements use a common event handler,                                  `ButtonClicked`, and the default                                  <xref:System.Windows.Controls.Button> style defined in the previous XAML.  \n  \n In MyControl1.xaml, add the following XAML after the last                                  <xref:System.Windows.Controls.TextBox> element. The                                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] part of the composite control is now complete.  \n  \n [!code-xml[WindowsFormsHostingWpfControl#105](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#105)]  \n  \n### Implementing the Code-Behind File  \n The code-behind file, MyControl1.xaml.cs, implements three essential tasks                         :  \n  \n1.  Handles the event that occurs when the user clicks one of the buttons.  \n  \n2.  Retrieves the data from the                                  <xref:System.Windows.Controls.TextBox> elements, and packages it in a custom event argument object.  \n  \n3.  Raises the custom                                  `OnButtonClick` event, which notifies the host that the user is finished and passes the data back to the host.  \n  \n The control also exposes a number of color and font properties that enable you to change the appearance. Unlike the                          <xref:System.Windows.Forms.Integration.WindowsFormsHost> class, which is used to host a                          [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] control, the                          <xref:System.Windows.Forms.Integration.ElementHost> class exposes the control’s                          <xref:System.Windows.Controls.Panel.Background%2A> property only. To maintain the similarity between this code example and the example discussed in                          [Walkthrough: Hosting a Windows Forms Composite Control in WPF](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md), the control exposes the remaining properties directly.  \n  \n#### The Basic Structure of the Code-Behind File  \n The code-behind file consists of a single namespace,                                  `MyControls`, which will contain two classes,                                  `MyControl1` and                                  `MyControlEventArgs`.  \n  \n```  \n  \nnamespace MyControls  \n{  \n  public partial class MyControl1 : Grid  \n  {  \n    //...  \n  }  \n  public class MyControlEventArgs : EventArgs  \n  {  \n    //...  \n  }  \n}  \n  \n```  \n  \n The first class,                                  `MyControl1`, is a partial class containing the code that implements the functionality of the                                  [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] defined in MyControl1.xaml. When MyControl1.xaml is parsed, the                                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] is converted to the same partial class, and the two partial classes are merged to form the compiled control. For this reason, the class name in the code-behind file must match the class name assigned to MyControl1.xaml, and it must inherit from the root element of the control. The second class,                                  `MyControlEventArgs`, is an event arguments class that is used to send the data back to the host.  \n  \n Open MyControl1.xaml.cs. Change the existing class declaration so that it has the following name and inherits from                                  <xref:System.Windows.Controls.Grid>.  \n  \n [!code-csharp[WindowsFormsHostingWpfControl#21](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#21)]  \n  \n#### Initializing the Control  \n The following code implements several basic tasks:  \n  \n-   Declares a private event,                                          `OnButtonClick`, and its associated delegate,                                          `MyControlEventHandler`.  \n  \n-   Creates several private global variables that store the user's data. This data is exposed through corresponding properties.  \n  \n-   Implements a handler,                                          `Init`, for the control’s                                          <xref:System.Windows.FrameworkElement.Loaded> event. This handler initializes the global variables by assigning them the values defined in MyControl1.xaml. To do this, it uses the                                          <xref:System.Windows.FrameworkElement.Name%2A> assigned to a typical                                          <xref:System.Windows.Controls.TextBlock> element,                                          `nameLabel`, to access that element's property settings.  \n  \n Delete the existing constructor and add the following code to your                                  `MyControl1` class.  \n  \n [!code-csharp[WindowsFormsHostingWpfControl#11](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#11)]  \n  \n#### Handling the Buttons' Click Events  \n The user indicates that the data-entry task is finished by clicking either the                                  **OK** button or the                                  **Cancel** button. Both buttons use the same                                  <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler,                                  `ButtonClicked`. Both buttons have a name,                                  `btnOK` or                                  `btnCancel`, that enables the handler to determine which button was clicked by examining the value of the                                  `sender` argument. The handler does the following:  \n  \n-   Creates a                                          `MyControlEventArgs` object that contains the data from the                                          <xref:System.Windows.Controls.TextBox> elements.  \n  \n-   If the user clicked the                                          **Cancel** button, sets the                                          `MyControlEventArgs` object's                                          `IsOK` property to                                          `false`.  \n  \n-   Raises the                                          `OnButtonClick` event to indicate to the host that the user is finished, and passes back the collected data.  \n  \n Add the following code to your                                  `MyControl1` class, after the                                  `Init` method.  \n  \n [!code-csharp[WindowsFormsHostingWpfControl#12](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#12)]  \n  \n#### Creating Properties  \n The remainder of the class simply exposes properties that correspond to the global variables discussed previously. When a property changes, the set accessor modifies the appearance of the control by changing the corresponding element properties and updating the underlying global variables.  \n  \n Add the following code to your                                  `MyControl1` class.  \n  \n [!code-csharp[WindowsFormsHostingWpfControl#13](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#13)]  \n  \n#### Sending the Data Back to the Host  \n The final component in the file is the                                  `MyControlEventArgs` class, which is used to send the collected data back to the host.  \n  \n Add the following code to your                                  `MyControls` namespace. The implementation is straightforward, and is not discussed further.  \n  \n [!code-csharp[WindowsFormsHostingWpfControl#14](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#14)]  \n  \n Build the solution. The build will produce a DLL named MyControls.dll.  \n  \n<a name=\"winforms_host_section\"></a>   \n## Implementing the Windows Forms Host Application  \n The                  [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] host application uses an                  <xref:System.Windows.Forms.Integration.ElementHost> object to host the                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control. The application handles the                   `OnButtonClick` event to receive the data from the composite control. The application also has a set of option buttons that you can use to modify the control’s appearance. The following illustration shows the application.  \n  \n ![Windows Form Hosting Avalon Control](../../../../docs/framework/wpf/advanced/media/wfhost.png \"WFHost\")  \nWPF composite control hosted in a Windows Forms application  \n  \n### Creating the Project  \n To start the project:  \n  \n1.  Launch                                  [!INCLUDE[TLA2#tla_visualstu](../../../../includes/tla2sharptla-visualstu-md.md)], and open the                                  **New Project** dialog box.  \n  \n2.  In Visual C# and the Windows category, select  the                                  **Windows Forms Application** template.  \n  \n3.  Name the new project                                  `WFHost`.  \n  \n4.  For the location, specify the same top-level folder that contains the MyControls project.  \n  \n5.  Click                                  **OK** to create the project.  \n  \n You also need to add references to the DLL that contains                          `MyControl1` and other assemblies.  \n  \n1.  Right-click the project name in Solution Explorer, and select                                  **Add Reference**.  \n  \n2.  Click the                                  **Browse** tab, and browse to the folder that contains MyControls.dll. For this walkthrough, this folder is MyControls\\bin\\Debug.  \n  \n3.  Select MyControls.dll, and then click                                  **OK**.  \n  \n4.  Add references to the following assemblies.  \n  \n    -   PresentationCore  \n  \n    -   PresentationFramework  \n  \n    -   System.Xaml  \n  \n    -   WindowsBase  \n  \n    -   WindowsFormsIntegration  \n  \n### Implementing the User Interface for the Application  \n The UI for the Windows Form application contains several controls to interact with the WPF composite control.  \n  \n1.  Open Form1 in the Windows Form Designer.  \n  \n2.  Enlarge the form to accommodate the controls.  \n  \n3.  In the upper-right corner of the form, add a                                  <xref:System.Windows.Forms.Panel?displayProperty=fullName> control to hold the                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control.  \n  \n4.  Add the following                                  <xref:System.Windows.Forms.GroupBox?displayProperty=fullName> controls to the form.  \n  \n    |Name|Text|  \n    |----------|----------|  \n    |groupBox1|Background Color|  \n    |groupBox2|Foreground Color|  \n    |groupBox3|Font Size|  \n    |groupBox4|Font Family|  \n    |groupBox5|Font Style|  \n    |groupBox6|Font Weight|  \n    |groupBox7|Data from control|  \n  \n5.  Add the following                                  <xref:System.Windows.Forms.RadioButton?displayProperty=fullName> controls to the                                  <xref:System.Windows.Forms.GroupBox?displayProperty=fullName> controls.  \n  \n    |GroupBox|Name|Text|  \n    |--------------|----------|----------|  \n    |groupBox1|radioBackgroundOriginal|Original|  \n    |groupBox1|radioBackgroundLightGreen|LightGreen|  \n    |groupBox1|radioBackgroundLightSalmon|LightSalmon|  \n    |groupBox2|radioForegroundOriginal|Original|  \n    |groupBox2|radioForegroundRed|Red|  \n    |groupBox2|radioForegroundYellow|Yellow|  \n    |groupBox3|radioSizeOriginal|Original|  \n    |groupBox3|radioSizeTen|10|  \n    |groupBox3|radioSizeTwelve|12|  \n    |groupBox4|radioFamilyOriginal|Original|  \n    |groupBox4|radioFamilyTimes|Times New Roman|  \n    |groupBox4|radioFamilyWingDings|WingDings|  \n    |groupBox5|radioStyleOriginal|Normal|  \n    |groupBox5|radioStyleItalic|Italic|  \n    |groupBox6|radioWeightOriginal|Original|  \n    |groupBox6|radioWeightBold|Bold|  \n  \n6.  Add the following                                  <xref:System.Windows.Forms.Label?displayProperty=fullName> controls to the last                                  <xref:System.Windows.Forms.GroupBox?displayProperty=fullName>. These controls display the data returned by the                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control.  \n  \n    |GroupBox|Name|Text|  \n    |--------------|----------|----------|  \n    |groupBox7|lblName|Name:|  \n    |groupBox7|lblAddress|Street Address:|  \n    |groupBox7|lblCity|City:|  \n    |groupBox7|lblState|State:|  \n    |groupBox7|lblZip|Zip:|  \n  \n### Initializing the Form  \n You generally implement the hosting code in the form's                          <xref:System.Windows.Forms.Form.Load> event handler. The following code shows the                          <xref:System.Windows.Forms.Form.Load> event handler, a handler for the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control’s                          <xref:System.Windows.FrameworkElement.Loaded> event, and declarations for several global variables that are used later.  \n  \n In the Windows Forms Designer, double-click the form to create a                          <xref:System.Windows.Forms.Form.Load> event handler. At the top of Form1.cs, add the following                          `using` statements.  \n  \n [!code-csharp[WindowsFormsHostingWpfControl#10](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#10)]  \n  \n Replace the contents of the existing                          `Form1` class with the following code.  \n  \n [!code-csharp[WindowsFormsHostingWpfControl#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#2)]  \n  \n The                          `Form1_Load` method in the preceding code shows the general procedure for hosting a                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] control:  \n  \n1.  Create a new                                  <xref:System.Windows.Forms.Integration.ElementHost> object.  \n  \n2.  Set the control's                                  <xref:System.Windows.Forms.Control.Dock%2A> property to                                  <xref:System.Windows.Forms.DockStyle?displayProperty=fullName>.  \n  \n3.  Add the                                  <xref:System.Windows.Forms.Integration.ElementHost> control to the                                  <xref:System.Windows.Forms.Panel> control's                                  <xref:System.Windows.Forms.Control.Controls%2A> collection.  \n  \n4.  Create an instance of the                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] control.  \n  \n5.  Host the composite control on the form by assigning the control to the                                  <xref:System.Windows.Forms.Integration.ElementHost> control's                                  <xref:System.Windows.Forms.Integration.ElementHost.Child%2A> property.  \n  \n The remaining two lines in the                          `Form1_Load` method attach handlers to two control events:  \n  \n-   `OnButtonClick` is a custom event that is fired by the composite control when the user clicks the                                  **OK** or                                  **Cancel** button. You handle the event to get the user's response and to collect any data that the user specified.  \n  \n-   <xref:System.Windows.FrameworkElement.Loaded> is a standard event that is raised by a                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] control when it is fully loaded. The event is used here because the example needs to initialize several global variables using properties from the control. At the time of the form's                                  <xref:System.Windows.Forms.Form.Load> event, the control is not fully loaded and those values are still set to                                  `null`. You need to wait until the control’s                                  <xref:System.Windows.FrameworkElement.Loaded> event occurs before you can access those properties.  \n  \n The                          <xref:System.Windows.FrameworkElement.Loaded> event handler is shown in the preceding code. The                          `OnButtonClick` handler is discussed in the next section.  \n  \n### Handling OnButtonClick  \n The                          `OnButtonClick` event occurs when the user clicks the                          **OK** or                          **Cancel** button.  \n  \n The event handler checks the event argument's                          `IsOK` field to determine which button was clicked. The                          `lbl`*data* variables correspond to the                          <xref:System.Windows.Forms.Label> controls that were discussed earlier. If the user clicks the                          **OK** button, the data from the control’s                          <xref:System.Windows.Controls.TextBox> controls is assigned to the corresponding                          <xref:System.Windows.Forms.Label> control. If the user clicks                          **Cancel**, the                          <xref:System.Windows.Forms.Label.Text%2A> values are set to the default strings.  \n  \n Add the following button click event handler code to the                          `Form1` class.  \n  \n [!code-csharp[WindowsFormsHostingWpfControl#3](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#3)]  \n  \n Build and run the application. Add some text in the WPF composite control and then click                          **OK**. The text appears in the labels. At this point, code has not been added to handle the radio buttons.  \n  \n### Modifying the Appearance of the Control  \n The                          <xref:System.Windows.Forms.RadioButton> controls on the form will enable the user to change the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control’s foreground and background colors as well as several font properties. The background color is exposed by the                          <xref:System.Windows.Forms.Integration.ElementHost> object. The remaining properties are exposed as custom properties of the control.  \n  \n Double-click each                          <xref:System.Windows.Forms.RadioButton> control on the form to create                          <xref:System.Windows.Forms.RadioButton.CheckedChanged> event handlers. Replace the                          <xref:System.Windows.Forms.RadioButton.CheckedChanged> event handlers with the following code.  \n  \n [!code-csharp[WindowsFormsHostingWpfControl#4](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#4)]  \n  \n Build and run the application. Click the different radio buttons to see the effect on the WPF composite control.  \n  \n## See Also  \n <xref:System.Windows.Forms.Integration.ElementHost>   \n <xref:System.Windows.Forms.Integration.WindowsFormsHost>   \n [WPF Designer](http://msdn.microsoft.com/en-us/c6c65214-8411-4e16-b254-163ed4099c26)   \n [Walkthrough: Hosting a Windows Forms Composite Control in WPF](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)   \n [Walkthrough: Hosting a 3-D WPF Composite Control in Windows Forms](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-3-d-wpf-composite-control-in-windows-forms.md)","nodes":[{"pos":[4,456],"nodes":[{"content":"Walkthrough: Hosting a WPF Composite Control in Windows Forms | Microsoft Docs","nodes":[{"pos":[0,78],"content":"Walkthrough: Hosting a WPF Composite Control in Windows Forms | Microsoft Docs","nodes":[{"content":"Walkthrough: Hosting a WPF Composite Control in Windows Forms | Microsoft Docs","pos":[0,78]}]}],"pos":[6,87],"yaml":true}],"content":"title: \"Walkthrough: Hosting a WPF Composite Control in Windows Forms | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"hosting WPF content in Windows Forms\"\nms.assetid: 0ac41286-4c1b-4b17-9196-d985cb844ce1\ncaps.latest.revision: 34\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","yamlblock":true},{"pos":[463,524],"content":"Walkthrough: Hosting a WPF Composite Control in Windows Forms","linkify":"Walkthrough: Hosting a WPF Composite Control in Windows Forms","nodes":[{"content":"Walkthrough: Hosting a WPF Composite Control in Windows Forms","pos":[0,61]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> provides a rich environment for creating applications.","pos":[525,659],"source":"[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] provides a rich environment for creating applications."},{"content":"However, when you have a substantial investment in              <ph id=\"ph1\">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> code, it can be more effective to extend your existing              <ph id=\"ph2\">[!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)]</ph> application with              <ph id=\"ph3\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> rather than to rewrite it from scratch.","pos":[660,1099],"source":" However, when you have a substantial investment in              [!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)] code, it can be more effective to extend your existing              [!INCLUDE[TLA#tla_winforms](../../../../includes/tlasharptla-winforms-md.md)] application with              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] rather than to rewrite it from scratch."},{"content":"A common scenario is when you want to embed one or more controls implemented with              <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> within your              <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> application.","pos":[1100,1394],"source":" A common scenario is when you want to embed one or more controls implemented with              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] within your              [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] application."},{"content":"For more information about customizing WPF controls, see              <bpt id=\"p1\">[</bpt>Control Customization<ept id=\"p1\">](../../../../docs/framework/wpf/controls/control-customization.md)</ept>.","pos":[1395,1555],"source":" For more information about customizing WPF controls, see              [Control Customization](../../../../docs/framework/wpf/controls/control-customization.md)."},{"content":"This walkthrough steps you through an application that hosts a              <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control to perform data-entry in a              <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> application.","pos":[1562,1870],"source":"This walkthrough steps you through an application that hosts a              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control to perform data-entry in a              [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] application."},{"content":"The composite control is packaged in a DLL.","pos":[1871,1914]},{"content":"This general procedure can be extended to more complex applications and controls.","pos":[1915,1996]},{"content":"This walkthrough is designed to be nearly identical in appearance and functionality to              <bpt id=\"p1\">[</bpt>Walkthrough: Hosting a Windows Forms Composite Control in WPF<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)</ept>.","pos":[1997,2266],"source":" This walkthrough is designed to be nearly identical in appearance and functionality to              [Walkthrough: Hosting a Windows Forms Composite Control in WPF](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)."},{"content":"The primary difference is that the hosting scenario is reversed.","pos":[2267,2331]},{"content":"The walkthrough is divided into two sections.","pos":[2338,2383]},{"content":"The first section briefly describes the implementation of the              <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control.","pos":[2384,2559],"source":" The first section briefly describes the implementation of the              [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control."},{"content":"The second section discusses in detail how to host the composite control in a              <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> application, receive events from the control, and access some of the control’s properties.","pos":[2560,2821],"source":" The second section discusses in detail how to host the composite control in a              [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] application, receive events from the control, and access some of the control’s properties."},{"content":"Tasks illustrated in this walkthrough include:","pos":[2828,2874]},{"content":"Implementing the WPF composite control.","pos":[2884,2923]},{"content":"Implementing the Windows Forms host application.","pos":[2933,2981]},{"pos":[2988,3184],"content":"For a complete code listing of the tasks illustrated in this walkthrough, see              <bpt id=\"p1\">[</bpt>Hosting a WPF Composite Control in Windows Forms Sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=159996)</ept>.","source":"For a complete code listing of the tasks illustrated in this walkthrough, see              [Hosting a WPF Composite Control in Windows Forms Sample](http://go.microsoft.com/fwlink/?LinkID=159996)."},{"pos":[3193,3206],"content":"Prerequisites","linkify":"Prerequisites","nodes":[{"content":"Prerequisites","pos":[0,13]}]},{"content":"You need the following components to complete this walkthrough:","pos":[3210,3273]},{"pos":[3283,3351],"content":"<ph id=\"ph1\">[!INCLUDE[vs_dev10_long](../../../../includes/vs-dev10-long-md.md)]</ph>.","source":"[!INCLUDE[vs_dev10_long](../../../../includes/vs-dev10-long-md.md)]."},{"pos":[3360,3398],"content":"Implementing the WPF Composite Control","linkify":"Implementing the WPF Composite Control","nodes":[{"content":"Implementing the WPF Composite Control","pos":[0,38]}]},{"content":"The                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control used in this example is a simple data-entry form that takes the user's name and address.","pos":[3402,3611],"source":"The                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control used in this example is a simple data-entry form that takes the user's name and address."},{"content":"When the user clicks one of two buttons to indicate that the task is finished, the control raises a custom event to return that information to the host.","pos":[3612,3764]},{"content":"The following illustration shows the rendered control.","pos":[3765,3819]},{"content":"<bpt id=\"p1\">![</bpt>Simple WPF control<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/media/avaloncontrol.png \"AvalonControl\")</ept>","pos":[3826,3928],"source":"![Simple WPF control](../../../../docs/framework/wpf/advanced/media/avaloncontrol.png \"AvalonControl\")"},{"content":"WPF composite control","pos":[3931,3952]},{"pos":[3962,3982],"content":"Creating the Project","linkify":"Creating the Project","nodes":[{"content":"Creating the Project","pos":[0,20]}]},{"content":"To start the project:","pos":[3986,4007]},{"pos":[4017,4211],"content":"Launch                                  <ph id=\"ph1\">[!INCLUDE[TLA#tla_visualstu](../../../../includes/tlasharptla-visualstu-md.md)]</ph>, and open the                                  <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog box.","source":"Launch                                  [!INCLUDE[TLA#tla_visualstu](../../../../includes/tlasharptla-visualstu-md.md)], and open the                                  **New Project** dialog box."},{"pos":[4221,4342],"content":"In Visual C# and the Windows category, select the                                  <bpt id=\"p1\">**</bpt>WPF User Control Library<ept id=\"p1\">**</ept> template.","source":"In Visual C# and the Windows category, select the                                  **WPF User Control Library** template."},{"pos":[4352,4419],"content":"Name the new project                                  <ph id=\"ph1\">`MyControls`</ph>.","source":"Name the new project                                  `MyControls`."},{"content":"For the location, specify a conveniently named top-level folder, such as                                  <ph id=\"ph1\">`WindowsFormsHostingWpfControl`</ph>.","pos":[4429,4567],"source":"For the location, specify a conveniently named top-level folder, such as                                  `WindowsFormsHostingWpfControl`."},{"content":"Later, you will put the host application in this folder.","pos":[4568,4624]},{"content":"Click                                  <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to create the project.","pos":[4634,4702],"source":"Click                                  **OK** to create the project."},{"content":"The default project contains a single control named                                  <ph id=\"ph1\">`UserControl1`</ph>.","pos":[4703,4803],"source":" The default project contains a single control named                                  `UserControl1`."},{"pos":[4813,4939],"content":"In Solution Explorer, rename                                  <ph id=\"ph1\">`UserControl1`</ph> to                                  <ph id=\"ph2\">`MyControl1`</ph>.","source":"In Solution Explorer, rename                                  `UserControl1` to                                  `MyControl1`."},{"content":"Your project should have references to the following system DLLs.","pos":[4946,5011]},{"content":"If any of these DLLs are not included by default, add them to your project.","pos":[5012,5087]},{"content":"PresentationCore","pos":[5097,5113]},{"content":"PresentationFramework","pos":[5123,5144]},{"content":"System","pos":[5154,5160]},{"content":"WindowsBase","pos":[5170,5181]},{"pos":[5191,5218],"content":"Creating the User Interface","linkify":"Creating the User Interface","nodes":[{"content":"Creating the User Interface","pos":[0,27]}]},{"content":"The                          <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph> for the composite control is implemented with                          <ph id=\"ph2\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph>.","pos":[5222,5458],"source":"The                          [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)] for the composite control is implemented with                          [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]."},{"content":"The composite control                          <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> consists of five                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> elements.","pos":[5459,5664],"source":" The composite control                          [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] consists of five                          <xref:System.Windows.Controls.TextBox> elements."},{"content":"Each                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> element has an associated                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> element that serves as a label.","pos":[5665,5857],"source":" Each                          <xref:System.Windows.Controls.TextBox> element has an associated                          <xref:System.Windows.Controls.TextBlock> element that serves as a label."},{"content":"There are two                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements at the bottom,                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> and                          <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept>.","pos":[5858,6031],"source":" There are two                          <xref:System.Windows.Controls.Button> elements at the bottom,                          **OK** and                          **Cancel**."},{"content":"When the user clicks either button, the control raises a custom event to return the information to the host.","pos":[6032,6140]},{"pos":[6151,6163],"content":"Basic Layout","linkify":"Basic Layout","nodes":[{"content":"Basic Layout","pos":[0,12]}]},{"content":"The various                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> elements are contained in a                                  <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.","pos":[6167,6385],"source":"The various                                  [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] elements are contained in a                                  <xref:System.Windows.Controls.Grid> element."},{"content":"You can use                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> to arrange the contents of the composite control in much the same way you would use a                                  <ph id=\"ph2\">`Table`</ph> element in HTML.","pos":[6386,6610],"source":" You can use                                  <xref:System.Windows.Controls.Grid> to arrange the contents of the composite control in much the same way you would use a                                  `Table` element in HTML."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> also has a                                  <ph id=\"ph2\">&lt;xref:System.Windows.Documents.Table&gt;</ph> element, but                                  <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> is more lightweight and better suited for simple layout tasks.","pos":[6644,6952],"source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] also has a                                  <xref:System.Windows.Documents.Table> element, but                                  <xref:System.Windows.Controls.Grid> is more lightweight and better suited for simple layout tasks."},{"content":"The following XAML shows the basic layout.","pos":[6959,7001]},{"content":"This XAML defines the overall structure of the control by specifying the number of columns and rows in the                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.","pos":[7002,7186],"source":" This XAML defines the overall structure of the control by specifying the number of columns and rows in the                                  <xref:System.Windows.Controls.Grid> element."},{"content":"In MyControl1.xaml, replace the existing XAML with the following XAML.","pos":[7193,7263]},{"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#101<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#101)</ept><ept id=\"p1\">]</ept>","pos":[7270,7432],"source":"[!code-xml[WindowsFormsHostingWpfControl#101](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#101)]"},{"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#102<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#102)</ept><ept id=\"p1\">]</ept>","pos":[7435,7597],"source":"[!code-xml[WindowsFormsHostingWpfControl#102](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#102)]"},{"pos":[7608,7657],"content":"Adding TextBlock and TextBox Elements to the Grid","linkify":"Adding TextBlock and TextBox Elements to the Grid","nodes":[{"content":"Adding TextBlock and TextBox Elements to the Grid","pos":[0,49]}]},{"content":"You place a                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> element in the grid by setting the element's                                  <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid.RowProperty&gt;</ph> and                                  <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid.ColumnProperty&gt;</ph> attributes to the appropriate row and column number.","pos":[7661,8040],"source":"You place a                                  [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] element in the grid by setting the element's                                  <xref:System.Windows.Controls.Grid.RowProperty> and                                  <xref:System.Windows.Controls.Grid.ColumnProperty> attributes to the appropriate row and column number."},{"content":"Remember that row and column numbering are zero-based.","pos":[8041,8095]},{"content":"You can have an element span multiple columns by setting its                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid.ColumnSpanProperty&gt;</ph> attribute.","pos":[8096,8255],"source":" You can have an element span multiple columns by setting its                                  <xref:System.Windows.Controls.Grid.ColumnSpanProperty> attribute."},{"content":"For more information about                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> elements, see                                  <bpt id=\"p1\">[</bpt>Create a Grid Element<ept id=\"p1\">](../../../../docs/framework/wpf/controls/how-to-create-a-grid-element.md)</ept>.","pos":[8256,8496],"source":" For more information about                                  <xref:System.Windows.Controls.Grid> elements, see                                  [Create a Grid Element](../../../../docs/framework/wpf/controls/how-to-create-a-grid-element.md)."},{"content":"The following XAML shows the composite control’s                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and                                  <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> elements with their                                  <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid.RowProperty&gt;</ph> and                                  <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Grid.ColumnProperty&gt;</ph> attributes, which are set to place the elements properly in the grid.","pos":[8503,8960],"source":"The following XAML shows the composite control’s                                  <xref:System.Windows.Controls.TextBox> and                                  <xref:System.Windows.Controls.TextBlock> elements with their                                  <xref:System.Windows.Controls.Grid.RowProperty> and                                  <xref:System.Windows.Controls.Grid.ColumnProperty> attributes, which are set to place the elements properly in the grid."},{"content":"In MyControl1.xaml, add the following XAML within the                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element.","pos":[8967,9098],"source":"In MyControl1.xaml, add the following XAML within the                                  <xref:System.Windows.Controls.Grid> element."},{"pos":[9105,9267],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#103<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#103)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[WindowsFormsHostingWpfControl#103](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#103)]"},{"pos":[9278,9301],"content":"Styling the UI Elements","linkify":"Styling the UI Elements","nodes":[{"content":"Styling the UI Elements","pos":[0,23]}]},{"content":"Many of the elements on the data-entry form have a similar appearance, which means that they have identical settings for several of their properties.","pos":[9305,9454]},{"content":"Rather than setting each element's attributes separately, the previous XAML uses                                  <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> elements to define standard property settings for classes of elements.","pos":[9455,9667],"source":" Rather than setting each element's attributes separately, the previous XAML uses                                  <xref:System.Windows.Style> elements to define standard property settings for classes of elements."},{"content":"This approach reduces the complexity of the control and enables you to change the appearance of multiple elements through a single style attribute.","pos":[9668,9815]},{"content":"The                                  <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> elements are contained in the                                  <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element's                                  <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;</ph> property, so they can be used by all elements in the control.","pos":[9822,10142],"source":"The                                  <xref:System.Windows.Style> elements are contained in the                                  <xref:System.Windows.Controls.Grid> element's                                  <xref:System.Windows.FrameworkElement.Resources%2A> property, so they can be used by all elements in the control."},{"content":"If a style is named, you apply it to an element by adding a                                  <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> element set to the style's name.","pos":[10143,10296],"source":" If a style is named, you apply it to an element by adding a                                  <xref:System.Windows.Style> element set to the style's name."},{"content":"Styles that are not named become the default style for the element.","pos":[10297,10364]},{"content":"For more information about                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> styles, see                                  <bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept>.","pos":[10365,10644],"source":" For more information about                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] styles, see                                  [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md)."},{"content":"The following XAML shows the                                  <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> elements for the composite control.","pos":[10651,10776],"source":"The following XAML shows the                                  <xref:System.Windows.Style> elements for the composite control."},{"content":"To see how the styles are applied to elements, see the previous XAML.","pos":[10777,10846]},{"content":"For example, the last                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> element has the                                  <ph id=\"ph2\">`inlineText`</ph> style, and the last                                  <ph id=\"ph3\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> element uses the default style.","pos":[10847,11128],"source":" For example, the last                                  <xref:System.Windows.Controls.TextBlock> element has the                                  `inlineText` style, and the last                                  <xref:System.Windows.Controls.TextBox> element uses the default style."},{"content":"In MyControl1.xaml, add the following XAML just after the                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> start element.","pos":[11135,11276],"source":"In MyControl1.xaml, add the following XAML just after the                                  <xref:System.Windows.Controls.Grid> start element."},{"pos":[11283,11445],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#104<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#104)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[WindowsFormsHostingWpfControl#104](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#104)]"},{"pos":[11456,11488],"content":"Adding the OK and Cancel Buttons","linkify":"Adding the OK and Cancel Buttons","nodes":[{"content":"Adding the OK and Cancel Buttons","pos":[0,32]}]},{"content":"The final elements on the composite control are the                                  <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> and                                  <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept><ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> elements, which occupy the first two columns of the last row of the                                  <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.","pos":[11492,11806],"source":"The final elements on the composite control are the                                  **OK** and                                  **Cancel**<xref:System.Windows.Controls.Button> elements, which occupy the first two columns of the last row of the                                  <xref:System.Windows.Controls.Grid>."},{"content":"These elements use a common event handler,                                  <ph id=\"ph1\">`ButtonClicked`</ph>, and the default                                  <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph> style defined in the previous XAML.","pos":[11807,12022],"source":" These elements use a common event handler,                                  `ButtonClicked`, and the default                                  <xref:System.Windows.Controls.Button> style defined in the previous XAML."},{"content":"In MyControl1.xaml, add the following XAML after the last                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> element.","pos":[12029,12167],"source":"In MyControl1.xaml, add the following XAML after the last                                  <xref:System.Windows.Controls.TextBox> element."},{"content":"The                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> part of the composite control is now complete.","pos":[12168,12323],"source":" The                                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] part of the composite control is now complete."},{"pos":[12330,12492],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#105<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#105)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[WindowsFormsHostingWpfControl#105](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml#105)]"},{"pos":[12502,12535],"content":"Implementing the Code-Behind File","linkify":"Implementing the Code-Behind File","nodes":[{"content":"Implementing the Code-Behind File","pos":[0,33]}]},{"content":"The code-behind file, MyControl1.xaml.cs, implements three essential tasks                         :","pos":[12539,12639]},{"content":"Handles the event that occurs when the user clicks one of the buttons.","pos":[12649,12719]},{"content":"Retrieves the data from the                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> elements, and packages it in a custom event argument object.","pos":[12729,12889],"source":"Retrieves the data from the                                  <xref:System.Windows.Controls.TextBox> elements, and packages it in a custom event argument object."},{"pos":[12899,13060],"content":"Raises the custom                                  <ph id=\"ph1\">`OnButtonClick`</ph> event, which notifies the host that the user is finished and passes the data back to the host.","source":"Raises the custom                                  `OnButtonClick` event, which notifies the host that the user is finished and passes the data back to the host."},{"content":"The control also exposes a number of color and font properties that enable you to change the appearance.","pos":[13067,13171]},{"content":"Unlike the                          <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> class, which is used to host a                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> control, the                          <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> class exposes the control’s                          <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Panel.Background%2A&gt;</ph> property only.","pos":[13172,13609],"source":" Unlike the                          <xref:System.Windows.Forms.Integration.WindowsFormsHost> class, which is used to host a                          [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] control, the                          <xref:System.Windows.Forms.Integration.ElementHost> class exposes the control’s                          <xref:System.Windows.Controls.Panel.Background%2A> property only."},{"content":"To maintain the similarity between this code example and the example discussed in                          <bpt id=\"p1\">[</bpt>Walkthrough: Hosting a Windows Forms Composite Control in WPF<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)</ept>, the control exposes the remaining properties directly.","pos":[13610,13941],"source":" To maintain the similarity between this code example and the example discussed in                          [Walkthrough: Hosting a Windows Forms Composite Control in WPF](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md), the control exposes the remaining properties directly."},{"pos":[13952,13995],"content":"The Basic Structure of the Code-Behind File","linkify":"The Basic Structure of the Code-Behind File","nodes":[{"content":"The Basic Structure of the Code-Behind File","pos":[0,43]}]},{"pos":[13999,14235],"content":"The code-behind file consists of a single namespace,                                  <ph id=\"ph1\">`MyControls`</ph>, which will contain two classes,                                  <ph id=\"ph2\">`MyControl1`</ph> and                                  <ph id=\"ph3\">`MyControlEventArgs`</ph>.","source":"The code-behind file consists of a single namespace,                                  `MyControls`, which will contain two classes,                                  `MyControl1` and                                  `MyControlEventArgs`."},{"content":"The first class,                                  <ph id=\"ph1\">`MyControl1`</ph>, is a partial class containing the code that implements the functionality of the                                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> defined in MyControl1.xaml.","pos":[14433,14705],"source":"The first class,                                  `MyControl1`, is a partial class containing the code that implements the functionality of the                                  [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] defined in MyControl1.xaml."},{"content":"When MyControl1.xaml is parsed, the                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> is converted to the same partial class, and the two partial classes are merged to form the compiled control.","pos":[14706,14955],"source":" When MyControl1.xaml is parsed, the                                  [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] is converted to the same partial class, and the two partial classes are merged to form the compiled control."},{"content":"For this reason, the class name in the code-behind file must match the class name assigned to MyControl1.xaml, and it must inherit from the root element of the control.","pos":[14956,15124]},{"content":"The second class,                                  <ph id=\"ph1\">`MyControlEventArgs`</ph>, is an event arguments class that is used to send the data back to the host.","pos":[15125,15273],"source":" The second class,                                  `MyControlEventArgs`, is an event arguments class that is used to send the data back to the host."},{"content":"Open MyControl1.xaml.cs.","pos":[15280,15304]},{"content":"Change the existing class declaration so that it has the following name and inherits from                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.","pos":[15305,15464],"source":" Change the existing class declaration so that it has the following name and inherits from                                  <xref:System.Windows.Controls.Grid>."},{"pos":[15471,15637],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#21<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#21)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[WindowsFormsHostingWpfControl#21](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#21)]"},{"pos":[15648,15672],"content":"Initializing the Control","linkify":"Initializing the Control","nodes":[{"content":"Initializing the Control","pos":[0,24]}]},{"content":"The following code implements several basic tasks:","pos":[15676,15726]},{"pos":[15736,15914],"content":"Declares a private event,                                          <ph id=\"ph1\">`OnButtonClick`</ph>, and its associated delegate,                                          <ph id=\"ph2\">`MyControlEventHandler`</ph>.","source":"Declares a private event,                                          `OnButtonClick`, and its associated delegate,                                          `MyControlEventHandler`."},{"content":"Creates several private global variables that store the user's data.","pos":[15924,15992]},{"content":"This data is exposed through corresponding properties.","pos":[15993,16047]},{"content":"Implements a handler,                                          <ph id=\"ph1\">`Init`</ph>, for the control’s                                          <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event.","pos":[16057,16239],"source":"Implements a handler,                                          `Init`, for the control’s                                          <xref:System.Windows.FrameworkElement.Loaded> event."},{"content":"This handler initializes the global variables by assigning them the values defined in MyControl1.xaml.","pos":[16240,16342]},{"content":"To do this, it uses the                                          <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> assigned to a typical                                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> element,                                          <ph id=\"ph3\">`nameLabel`</ph>, to access that element's property settings.","pos":[16343,16665],"source":" To do this, it uses the                                          <xref:System.Windows.FrameworkElement.Name%2A> assigned to a typical                                          <xref:System.Windows.Controls.TextBlock> element,                                          `nameLabel`, to access that element's property settings."},{"pos":[16672,16791],"content":"Delete the existing constructor and add the following code to your                                  <ph id=\"ph1\">`MyControl1`</ph> class.","source":"Delete the existing constructor and add the following code to your                                  `MyControl1` class."},{"pos":[16798,16964],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#11<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#11)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[WindowsFormsHostingWpfControl#11](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#11)]"},{"pos":[16975,17009],"content":"Handling the Buttons' Click Events","linkify":"Handling the Buttons' Click Events","nodes":[{"content":"Handling the Buttons' Click Events","pos":[0,34]}]},{"content":"The user indicates that the data-entry task is finished by clicking either the                                  <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button or the                                  <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept> button.","pos":[17013,17197],"source":"The user indicates that the data-entry task is finished by clicking either the                                  **OK** button or the                                  **Cancel** button."},{"content":"Both buttons use the same                                  <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler,                                  <ph id=\"ph2\">`ButtonClicked`</ph>.","pos":[17198,17380],"source":" Both buttons use the same                                  <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler,                                  `ButtonClicked`."},{"content":"Both buttons have a name,                                  <ph id=\"ph1\">`btnOK`</ph> or                                  <ph id=\"ph2\">`btnCancel`</ph>, that enables the handler to determine which button was clicked by examining the value of the                                  <ph id=\"ph3\">`sender`</ph> argument.","pos":[17381,17641],"source":" Both buttons have a name,                                  `btnOK` or                                  `btnCancel`, that enables the handler to determine which button was clicked by examining the value of the                                  `sender` argument."},{"content":"The handler does the following:","pos":[17642,17673]},{"pos":[17683,17883],"content":"Creates a                                          <ph id=\"ph1\">`MyControlEventArgs`</ph> object that contains the data from the                                          <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> elements.","source":"Creates a                                          `MyControlEventArgs` object that contains the data from the                                          <xref:System.Windows.Controls.TextBox> elements."},{"pos":[17893,18166],"content":"If the user clicked the                                          <bpt id=\"p1\">**</bpt>Cancel<ept id=\"p1\">**</ept> button, sets the                                          <ph id=\"ph1\">`MyControlEventArgs`</ph> object's                                          <ph id=\"ph2\">`IsOK`</ph> property to                                          <ph id=\"ph3\">`false`</ph>.","source":"If the user clicked the                                          **Cancel** button, sets the                                          `MyControlEventArgs` object's                                          `IsOK` property to                                          `false`."},{"pos":[18176,18336],"content":"Raises the                                          <ph id=\"ph1\">`OnButtonClick`</ph> event to indicate to the host that the user is finished, and passes back the collected data.","source":"Raises the                                          `OnButtonClick` event to indicate to the host that the user is finished, and passes back the collected data."},{"pos":[18343,18484],"content":"Add the following code to your                                  <ph id=\"ph1\">`MyControl1`</ph> class, after the                                  <ph id=\"ph2\">`Init`</ph> method.","source":"Add the following code to your                                  `MyControl1` class, after the                                  `Init` method."},{"pos":[18491,18657],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#12<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#12)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[WindowsFormsHostingWpfControl#12](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#12)]"},{"pos":[18668,18687],"content":"Creating Properties","linkify":"Creating Properties","nodes":[{"content":"Creating Properties","pos":[0,19]}]},{"content":"The remainder of the class simply exposes properties that correspond to the global variables discussed previously.","pos":[18691,18805]},{"content":"When a property changes, the set accessor modifies the appearance of the control by changing the corresponding element properties and updating the underlying global variables.","pos":[18806,18981]},{"pos":[18988,19071],"content":"Add the following code to your                                  <ph id=\"ph1\">`MyControl1`</ph> class.","source":"Add the following code to your                                  `MyControl1` class."},{"pos":[19078,19244],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#13<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#13)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[WindowsFormsHostingWpfControl#13](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#13)]"},{"pos":[19255,19288],"content":"Sending the Data Back to the Host","linkify":"Sending the Data Back to the Host","nodes":[{"content":"Sending the Data Back to the Host","pos":[0,33]}]},{"pos":[19292,19450],"content":"The final component in the file is the                                  <ph id=\"ph1\">`MyControlEventArgs`</ph> class, which is used to send the collected data back to the host.","source":"The final component in the file is the                                  `MyControlEventArgs` class, which is used to send the collected data back to the host."},{"content":"Add the following code to your                                  <ph id=\"ph1\">`MyControls`</ph> namespace.","pos":[19457,19544],"source":"Add the following code to your                                  `MyControls` namespace."},{"content":"The implementation is straightforward, and is not discussed further.","pos":[19545,19613]},{"pos":[19620,19786],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#14<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#14)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[WindowsFormsHostingWpfControl#14](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/MyControls/Page1.xaml.cs#14)]"},{"content":"Build the solution.","pos":[19793,19812]},{"content":"The build will produce a DLL named MyControls.dll.","pos":[19813,19863]},{"pos":[19912,19959],"content":"Implementing the Windows Forms Host Application","linkify":"Implementing the Windows Forms Host Application","nodes":[{"content":"Implementing the Windows Forms Host Application","pos":[0,47]}]},{"content":"The                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)]</ph> host application uses an                  <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> object to host the                  <ph id=\"ph3\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control.","pos":[19963,20294],"source":"The                  [!INCLUDE[TLA2#tla_winforms](../../../../includes/tla2sharptla-winforms-md.md)] host application uses an                  <xref:System.Windows.Forms.Integration.ElementHost> object to host the                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control."},{"content":"The application handles the                   <ph id=\"ph1\">`OnButtonClick`</ph> event to receive the data from the composite control.","pos":[20295,20410],"source":" The application handles the                   `OnButtonClick` event to receive the data from the composite control."},{"content":"The application also has a set of option buttons that you can use to modify the control’s appearance.","pos":[20411,20512]},{"content":"The following illustration shows the application.","pos":[20513,20562]},{"content":"<bpt id=\"p1\">![</bpt>Windows Form Hosting Avalon Control<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/media/wfhost.png \"WFHost\")</ept>","pos":[20569,20674],"source":"![Windows Form Hosting Avalon Control](../../../../docs/framework/wpf/advanced/media/wfhost.png \"WFHost\")"},{"content":"WPF composite control hosted in a Windows Forms application","pos":[20677,20736]},{"pos":[20746,20766],"content":"Creating the Project","linkify":"Creating the Project","nodes":[{"content":"Creating the Project","pos":[0,20]}]},{"content":"To start the project:","pos":[20770,20791]},{"pos":[20801,20997],"content":"Launch                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_visualstu](../../../../includes/tla2sharptla-visualstu-md.md)]</ph>, and open the                                  <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog box.","source":"Launch                                  [!INCLUDE[TLA2#tla_visualstu](../../../../includes/tla2sharptla-visualstu-md.md)], and open the                                  **New Project** dialog box."},{"pos":[21007,21130],"content":"In Visual C# and the Windows category, select  the                                  <bpt id=\"p1\">**</bpt>Windows Forms Application<ept id=\"p1\">**</ept> template.","source":"In Visual C# and the Windows category, select  the                                  **Windows Forms Application** template."},{"pos":[21140,21203],"content":"Name the new project                                  <ph id=\"ph1\">`WFHost`</ph>.","source":"Name the new project                                  `WFHost`."},{"content":"For the location, specify the same top-level folder that contains the MyControls project.","pos":[21213,21302]},{"pos":[21312,21380],"content":"Click                                  <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> to create the project.","source":"Click                                  **OK** to create the project."},{"pos":[21387,21503],"content":"You also need to add references to the DLL that contains                          <ph id=\"ph1\">`MyControl1`</ph> and other assemblies.","source":"You also need to add references to the DLL that contains                          `MyControl1` and other assemblies."},{"pos":[21513,21626],"content":"Right-click the project name in Solution Explorer, and select                                  <bpt id=\"p1\">**</bpt>Add Reference<ept id=\"p1\">**</ept>.","source":"Right-click the project name in Solution Explorer, and select                                  **Add Reference**."},{"content":"Click the                                  <bpt id=\"p1\">**</bpt>Browse<ept id=\"p1\">**</ept> tab, and browse to the folder that contains MyControls.dll.","pos":[21636,21749],"source":"Click the                                  **Browse** tab, and browse to the folder that contains MyControls.dll."},{"content":"For this walkthrough, this folder is MyControls\\bin\\Debug.","pos":[21750,21808]},{"pos":[21818,21896],"content":"Select MyControls.dll, and then click                                  <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","source":"Select MyControls.dll, and then click                                  **OK**."},{"content":"Add references to the following assemblies.","pos":[21906,21949]},{"content":"PresentationCore","pos":[21963,21979]},{"content":"PresentationFramework","pos":[21993,22014]},{"content":"System.Xaml","pos":[22028,22039]},{"content":"WindowsBase","pos":[22053,22064]},{"content":"WindowsFormsIntegration","pos":[22078,22101]},{"pos":[22111,22162],"content":"Implementing the User Interface for the Application","linkify":"Implementing the User Interface for the Application","nodes":[{"content":"Implementing the User Interface for the Application","pos":[0,51]}]},{"content":"The UI for the Windows Form application contains several controls to interact with the WPF composite control.","pos":[22166,22275]},{"content":"Open Form1 in the Windows Form Designer.","pos":[22285,22325]},{"content":"Enlarge the form to accommodate the controls.","pos":[22335,22380]},{"pos":[22390,22680],"content":"In the upper-right corner of the form, add a                                  <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Panel?displayProperty=fullName&gt;</ph> control to hold the                                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control.","source":"In the upper-right corner of the form, add a                                  <xref:System.Windows.Forms.Panel?displayProperty=fullName> control to hold the                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control."},{"content":"Add the following                                  <ph id=\"ph1\">&lt;xref:System.Windows.Forms.GroupBox?displayProperty=fullName&gt;</ph> controls to the form.","pos":[22690,22824],"source":"Add the following                                  <xref:System.Windows.Forms.GroupBox?displayProperty=fullName> controls to the form."},{"content":"Name","pos":[22835,22839]},{"content":"Text","pos":[22840,22844]},{"content":"groupBox1","pos":[22883,22892]},{"content":"Background Color","pos":[22893,22909]},{"content":"groupBox2","pos":[22918,22927]},{"content":"Foreground Color","pos":[22928,22944]},{"content":"groupBox3","pos":[22953,22962]},{"content":"Font Size","pos":[22963,22972]},{"content":"groupBox4","pos":[22981,22990]},{"content":"Font Family","pos":[22991,23002]},{"content":"groupBox5","pos":[23011,23020]},{"content":"Font Style","pos":[23021,23031]},{"content":"groupBox6","pos":[23040,23049]},{"content":"Font Weight","pos":[23050,23061]},{"content":"groupBox7","pos":[23070,23079]},{"content":"Data from control","pos":[23080,23097]},{"content":"Add the following                                  <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RadioButton?displayProperty=fullName&gt;</ph> controls to the                                  <ph id=\"ph2\">&lt;xref:System.Windows.Forms.GroupBox?displayProperty=fullName&gt;</ph> controls.","pos":[23108,23344],"source":"Add the following                                  <xref:System.Windows.Forms.RadioButton?displayProperty=fullName> controls to the                                  <xref:System.Windows.Forms.GroupBox?displayProperty=fullName> controls."},{"content":"GroupBox","pos":[23355,23363]},{"content":"Name","pos":[23364,23368]},{"content":"Text","pos":[23369,23373]},{"content":"groupBox1","pos":[23427,23436]},{"content":"radioBackgroundOriginal","pos":[23437,23460]},{"content":"Original","pos":[23461,23469]},{"content":"groupBox1","pos":[23478,23487]},{"content":"radioBackgroundLightGreen","pos":[23488,23513]},{"content":"LightGreen","pos":[23514,23524]},{"content":"groupBox1","pos":[23533,23542]},{"content":"radioBackgroundLightSalmon","pos":[23543,23569]},{"content":"LightSalmon","pos":[23570,23581]},{"content":"groupBox2","pos":[23590,23599]},{"content":"radioForegroundOriginal","pos":[23600,23623]},{"content":"Original","pos":[23624,23632]},{"content":"groupBox2","pos":[23641,23650]},{"content":"radioForegroundRed","pos":[23651,23669]},{"content":"Red","pos":[23670,23673]},{"content":"groupBox2","pos":[23682,23691]},{"content":"radioForegroundYellow","pos":[23692,23713]},{"content":"Yellow","pos":[23714,23720]},{"content":"groupBox3","pos":[23729,23738]},{"content":"radioSizeOriginal","pos":[23739,23756]},{"content":"Original","pos":[23757,23765]},{"content":"groupBox3","pos":[23774,23783]},{"content":"radioSizeTen","pos":[23784,23796]},{"content":"10","pos":[23797,23799]},{"content":"groupBox3","pos":[23808,23817]},{"content":"radioSizeTwelve","pos":[23818,23833]},{"content":"12","pos":[23834,23836]},{"content":"groupBox4","pos":[23845,23854]},{"content":"radioFamilyOriginal","pos":[23855,23874]},{"content":"Original","pos":[23875,23883]},{"content":"groupBox4","pos":[23892,23901]},{"content":"radioFamilyTimes","pos":[23902,23918]},{"content":"Times New Roman","pos":[23919,23934]},{"content":"groupBox4","pos":[23943,23952]},{"content":"radioFamilyWingDings","pos":[23953,23973]},{"content":"WingDings","pos":[23974,23983]},{"content":"groupBox5","pos":[23992,24001]},{"content":"radioStyleOriginal","pos":[24002,24020]},{"content":"Normal","pos":[24021,24027]},{"content":"groupBox5","pos":[24036,24045]},{"content":"radioStyleItalic","pos":[24046,24062]},{"content":"Italic","pos":[24063,24069]},{"content":"groupBox6","pos":[24078,24087]},{"content":"radioWeightOriginal","pos":[24088,24107]},{"content":"Original","pos":[24108,24116]},{"content":"groupBox6","pos":[24125,24134]},{"content":"radioWeightBold","pos":[24135,24150]},{"content":"Bold","pos":[24151,24155]},{"content":"Add the following                                  <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Label?displayProperty=fullName&gt;</ph> controls to the last                                  <ph id=\"ph2\">&lt;xref:System.Windows.Forms.GroupBox?displayProperty=fullName&gt;</ph>.","pos":[24166,24392],"source":"Add the following                                  <xref:System.Windows.Forms.Label?displayProperty=fullName> controls to the last                                  <xref:System.Windows.Forms.GroupBox?displayProperty=fullName>."},{"content":"These controls display the data returned by the                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control.","pos":[24393,24574],"source":" These controls display the data returned by the                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control."},{"content":"GroupBox","pos":[24585,24593]},{"content":"Name","pos":[24594,24598]},{"content":"Text","pos":[24599,24603]},{"content":"groupBox7","pos":[24657,24666]},{"content":"lblName","pos":[24667,24674]},{"content":"Name:","pos":[24675,24680]},{"content":"groupBox7","pos":[24689,24698]},{"content":"lblAddress","pos":[24699,24709]},{"content":"Street Address:","pos":[24710,24725]},{"content":"groupBox7","pos":[24734,24743]},{"content":"lblCity","pos":[24744,24751]},{"content":"City:","pos":[24752,24757]},{"content":"groupBox7","pos":[24766,24775]},{"content":"lblState","pos":[24776,24784]},{"content":"State:","pos":[24785,24791]},{"content":"groupBox7","pos":[24800,24809]},{"content":"lblZip","pos":[24810,24816]},{"content":"Zip:","pos":[24817,24821]},{"pos":[24832,24853],"content":"Initializing the Form","linkify":"Initializing the Form","nodes":[{"content":"Initializing the Form","pos":[0,21]}]},{"content":"You generally implement the hosting code in the form's                          <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.","pos":[24857,24989],"source":"You generally implement the hosting code in the form's                          <xref:System.Windows.Forms.Form.Load> event handler."},{"content":"The following code shows the                          <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler, a handler for the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control’s                          <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event, and declarations for several global variables that are used later.","pos":[24990,25386],"source":" The following code shows the                          <xref:System.Windows.Forms.Form.Load> event handler, a handler for the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control’s                          <xref:System.Windows.FrameworkElement.Loaded> event, and declarations for several global variables that are used later."},{"content":"In the Windows Forms Designer, double-click the form to create a                          <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.","pos":[25393,25535],"source":"In the Windows Forms Designer, double-click the form to create a                          <xref:System.Windows.Forms.Form.Load> event handler."},{"content":"At the top of Form1.cs, add the following                          <ph id=\"ph1\">`using`</ph> statements.","pos":[25536,25622],"source":" At the top of Form1.cs, add the following                          `using` statements."},{"pos":[25629,25786],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#10<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#10)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[WindowsFormsHostingWpfControl#10](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#10)]"},{"pos":[25793,25893],"content":"Replace the contents of the existing                          <ph id=\"ph1\">`Form1`</ph> class with the following code.","source":"Replace the contents of the existing                          `Form1` class with the following code."},{"pos":[25900,26055],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#2<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#2)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[WindowsFormsHostingWpfControl#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#2)]"},{"pos":[26062,26290],"content":"The                          <ph id=\"ph1\">`Form1_Load`</ph> method in the preceding code shows the general procedure for hosting a                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control:","source":"The                          `Form1_Load` method in the preceding code shows the general procedure for hosting a                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] control:"},{"content":"Create a new                                  <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> object.","pos":[26300,26405],"source":"Create a new                                  <xref:System.Windows.Forms.Integration.ElementHost> object."},{"content":"Set the control's                                  <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property to                                  <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DockStyle?displayProperty=fullName&gt;</ph>.","pos":[26415,26618],"source":"Set the control's                                  <xref:System.Windows.Forms.Control.Dock%2A> property to                                  <xref:System.Windows.Forms.DockStyle?displayProperty=fullName>."},{"content":"Add the                                  <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control to the                                  <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control's                                  <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection.","pos":[26628,26905],"source":"Add the                                  <xref:System.Windows.Forms.Integration.ElementHost> control to the                                  <xref:System.Windows.Forms.Panel> control's                                  <xref:System.Windows.Forms.Control.Controls%2A> collection."},{"pos":[26915,27064],"content":"Create an instance of the                                  <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control.","source":"Create an instance of the                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] control."},{"content":"Host the composite control on the form by assigning the control to the                                  <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> control's                                  <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Integration.ElementHost.Child%2A&gt;</ph> property.","pos":[27074,27343],"source":"Host the composite control on the form by assigning the control to the                                  <xref:System.Windows.Forms.Integration.ElementHost> control's                                  <xref:System.Windows.Forms.Integration.ElementHost.Child%2A> property."},{"pos":[27350,27464],"content":"The remaining two lines in the                          <ph id=\"ph1\">`Form1_Load`</ph> method attach handlers to two control events:","source":"The remaining two lines in the                          `Form1_Load` method attach handlers to two control events:"},{"content":"<ph id=\"ph1\">`OnButtonClick`</ph> is a custom event that is fired by the composite control when the user clicks the                                  <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> or                                  <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept> button.","pos":[27474,27666],"source":"`OnButtonClick` is a custom event that is fired by the composite control when the user clicks the                                  **OK** or                                  **Cancel** button."},{"content":"You handle the event to get the user's response and to collect any data that the user specified.","pos":[27667,27763]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> is a standard event that is raised by a                                  <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> control when it is fully loaded.","pos":[27773,28006],"source":"<xref:System.Windows.FrameworkElement.Loaded> is a standard event that is raised by a                                  [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] control when it is fully loaded."},{"content":"The event is used here because the example needs to initialize several global variables using properties from the control.","pos":[28007,28129]},{"content":"At the time of the form's                                  <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event, the control is not fully loaded and those values are still set to                                  <ph id=\"ph2\">`null`</ph>.","pos":[28130,28340],"source":" At the time of the form's                                  <xref:System.Windows.Forms.Form.Load> event, the control is not fully loaded and those values are still set to                                  `null`."},{"content":"You need to wait until the control’s                                  <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event occurs before you can access those properties.","pos":[28341,28509],"source":" You need to wait until the control’s                                  <xref:System.Windows.FrameworkElement.Loaded> event occurs before you can access those properties."},{"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event handler is shown in the preceding code.","pos":[28516,28636],"source":"The                          <xref:System.Windows.FrameworkElement.Loaded> event handler is shown in the preceding code."},{"content":"The                          <ph id=\"ph1\">`OnButtonClick`</ph> handler is discussed in the next section.","pos":[28637,28723],"source":" The                          `OnButtonClick` handler is discussed in the next section."},{"pos":[28733,28755],"content":"Handling OnButtonClick","linkify":"Handling OnButtonClick","nodes":[{"content":"Handling OnButtonClick","pos":[0,22]}]},{"pos":[28759,28920],"content":"The                          <ph id=\"ph1\">`OnButtonClick`</ph> event occurs when the user clicks the                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> or                          <bpt id=\"p2\">**</bpt>Cancel<ept id=\"p2\">**</ept> button.","source":"The                          `OnButtonClick` event occurs when the user clicks the                          **OK** or                          **Cancel** button."},{"content":"The event handler checks the event argument's                          <ph id=\"ph1\">`IsOK`</ph> field to determine which button was clicked.","pos":[28927,29049],"source":"The event handler checks the event argument's                          `IsOK` field to determine which button was clicked."},{"content":"The                          <ph id=\"ph1\">`lbl`</ph><bpt id=\"p1\">*</bpt>data<ept id=\"p1\">*</ept> variables correspond to the                          <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls that were discussed earlier.","pos":[29050,29215],"source":" The                          `lbl`*data* variables correspond to the                          <xref:System.Windows.Forms.Label> controls that were discussed earlier."},{"content":"If the user clicks the                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button, the data from the control’s                          <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls is assigned to the corresponding                          <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Label&gt;</ph> control.","pos":[29216,29480],"source":" If the user clicks the                          **OK** button, the data from the control’s                          <xref:System.Windows.Controls.TextBox> controls is assigned to the corresponding                          <xref:System.Windows.Forms.Label> control."},{"content":"If the user clicks                          <bpt id=\"p1\">**</bpt>Cancel<ept id=\"p1\">**</ept>, the                          <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Label.Text%2A&gt;</ph> values are set to the default strings.","pos":[29481,29646],"source":" If the user clicks                          **Cancel**, the                          <xref:System.Windows.Forms.Label.Text%2A> values are set to the default strings."},{"pos":[29653,29749],"content":"Add the following button click event handler code to the                          <ph id=\"ph1\">`Form1`</ph> class.","source":"Add the following button click event handler code to the                          `Form1` class."},{"pos":[29756,29911],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#3<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#3)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[WindowsFormsHostingWpfControl#3](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#3)]"},{"content":"Build and run the application.","pos":[29918,29948]},{"content":"Add some text in the WPF composite control and then click                          <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","pos":[29949,30039],"source":" Add some text in the WPF composite control and then click                          **OK**."},{"content":"The text appears in the labels.","pos":[30040,30071]},{"content":"At this point, code has not been added to handle the radio buttons.","pos":[30072,30139]},{"pos":[30149,30188],"content":"Modifying the Appearance of the Control","linkify":"Modifying the Appearance of the Control","nodes":[{"content":"Modifying the Appearance of the Control","pos":[0,39]}]},{"content":"The                          <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls on the form will enable the user to change the                          <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> composite control’s foreground and background colors as well as several font properties.","pos":[30192,30512],"source":"The                          <xref:System.Windows.Forms.RadioButton> controls on the form will enable the user to change the                          [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] composite control’s foreground and background colors as well as several font properties."},{"content":"The background color is exposed by the                          <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph> object.","pos":[30513,30636],"source":" The background color is exposed by the                          <xref:System.Windows.Forms.Integration.ElementHost> object."},{"content":"The remaining properties are exposed as custom properties of the control.","pos":[30637,30710]},{"content":"Double-click each                          <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control on the form to create                          <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RadioButton.CheckedChanged&gt;</ph> event handlers.","pos":[30717,30925],"source":"Double-click each                          <xref:System.Windows.Forms.RadioButton> control on the form to create                          <xref:System.Windows.Forms.RadioButton.CheckedChanged> event handlers."},{"content":"Replace the                          <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RadioButton.CheckedChanged&gt;</ph> event handlers with the following code.","pos":[30926,31057],"source":" Replace the                          <xref:System.Windows.Forms.RadioButton.CheckedChanged> event handlers with the following code."},{"pos":[31064,31219],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>WindowsFormsHostingWpfControl#4<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#4)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[WindowsFormsHostingWpfControl#4](../../../../samples/snippets/csharp/VS_Snippets_Wpf/WindowsFormsHostingWpfControl/CSharp/WFHost/Form1.cs#4)]"},{"content":"Build and run the application.","pos":[31226,31256]},{"content":"Click the different radio buttons to see the effect on the WPF composite control.","pos":[31257,31338]},{"pos":[31347,31355],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.ElementHost&gt;</ph>","pos":[31359,31410],"source":"<xref:System.Windows.Forms.Integration.ElementHost> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph>","pos":[31415,31471],"source":"<xref:System.Windows.Forms.Integration.WindowsFormsHost> "},{"content":"<bpt id=\"p1\">[</bpt>WPF Designer<ept id=\"p1\">](http://msdn.microsoft.com/en-us/c6c65214-8411-4e16-b254-163ed4099c26)</ept><ph id=\"ph1\"> </ph>","pos":[31476,31561],"source":"[WPF Designer](http://msdn.microsoft.com/en-us/c6c65214-8411-4e16-b254-163ed4099c26) "},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Hosting a Windows Forms Composite Control in WPF<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md)</ept><ph id=\"ph1\"> </ph>","pos":[31565,31734],"source":"[Walkthrough: Hosting a Windows Forms Composite Control in WPF](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-windows-forms-composite-control-in-wpf.md) "},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Hosting a 3-D WPF Composite Control in Windows Forms<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-3-d-wpf-composite-control-in-windows-forms.md)</ept>","pos":[31738,31914],"source":"[Walkthrough: Hosting a 3-D WPF Composite Control in Windows Forms](../../../../docs/framework/wpf/advanced/walkthrough-hosting-a-3-d-wpf-composite-control-in-windows-forms.md)"}]}