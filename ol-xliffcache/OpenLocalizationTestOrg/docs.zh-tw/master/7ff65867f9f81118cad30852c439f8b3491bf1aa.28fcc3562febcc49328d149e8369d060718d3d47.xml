{"content":"---\ntitle: \"Hello World -- Your first program - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"cs.program\"\n  - \"vs.csharp.startpage.firstapplication\"\nhelpviewer_keywords: \n  - \"examples [C#], Hello World\"\n  - \"Hello World example [C#]\"\nms.assetid: 6493182a-b0b6-4539-a719-518a168cb730\n---\n# Hello World -- Your first program (C# Programming Guide)\n\nThe following procedure creates a C# version of the traditional \"Hello World!\" program. The program displays the string `Hello World!`\n\nFor more examples of introductory concepts, see [Getting Started with Visual C# and Visual Basic](/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic).\n\n[!INCLUDE[note_settings_general](~/includes/note-settings-general-md.md)]\n\n## To create and run a console application\n\n1. Start Visual Studio.\n\n2. On the menu bar, choose **File**, **New**, **Project**.\n\n     The **New Project** dialog box opens.\n\n3. Expand **Installed**, expand **Templates**, expand **Visual C#**, and then choose **Console Application**.\n\n4. In the **Name** box, specify a name for your project, and then choose the **OK** button.\n\n     The new project appears in **Solution Explorer**.\n\n5. If Program.cs isn't open in the **Code Editor**, open the shortcut menu for **Program.cs** in **Solution Explorer**, and then choose **View Code**.\n\n6. Replace the contents of Program.cs with the following code.\n\n     [!code-csharp[csProgGuide#21](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuide/CS/progGuide.cs#21)]\n\n7. Choose the F5 key to run the project. A Command Prompt window appears that contains the line `Hello World!`\n\nNext, the important parts of this program are examined.\n\n## Comments\n\nThe first line contains a comment. The characters `//` convert the rest of the line to a comment.\n\n [!code-csharp[csProgGuide#32](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuide/CS/progGuide.cs#32)]\n\nYou can also comment out a block of text by enclosing it between the `/*` and `*/` characters. This is shown in the following example.\n\n [!code-csharp[csProgGuide#33](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuide/CS/progGuide.cs#33)]\n\n## Main method\n\nA C# console application must contain a `Main` method, in which control starts and ends. The `Main` method is where you create objects and execute other methods.\n\nThe `Main` method is a [static](../../../csharp/language-reference/keywords/static.md) method that resides inside a class or a struct. In the previous \"Hello World!\" example, it resides in a class named `Hello`. You can declare the `Main` method in one of the following ways:\n\n- It can return `void`.\n\n     [!code-csharp[csProgGuideMain#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideMain/CS/Class3.cs#12)]\n\n- It can also return an integer.\n\n     [!code-csharp[csProgGuideMain#13](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideMain/CS/Class3.cs#13)]\n\n- With either of the return types, it can take arguments.\n\n     [!code-csharp[csProgGuideMain#19](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideMain/CS/Class3.cs#19)]\n\n     -or-\n\n     [!code-csharp[csProgGuideMain#18](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideMain/CS/Class3.cs#18)]\n\nThe parameter of the `Main` method, `args`, is a `string` array that contains the command-line arguments used to invoke the program. Unlike in C++, the array does not include the name of the executable (exe) file.\n\nFor more information about how to use command-line arguments, see the examples in [Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md) and [How to: Create and Use Assemblies Using the Command Line](../../../csharp/programming-guide/concepts/assemblies-gac/how-to-create-and-use-assemblies-using-the-command-line.md).\n\nThe call to <xref:System.Console.ReadKey%2A> at the end of the `Main` method prevents the console window from closing before you have a chance to read the output when you run your program in debug mode, by pressing F5.\n\n## Input and output\n\nC# programs generally use the input/output services provided by the run-time library of the .NET Framework. The statement `System.Console.WriteLine(\"Hello World!\");` uses the <xref:System.Console.WriteLine%2A> method. This is one of the output methods of the <xref:System.Console> class in the run-time library. It displays its string parameter on the standard output stream followed by a new line. Other <xref:System.Console> methods are available for different input and output operations. If you include the `using System;` directive at the beginning of the program, you can directly use the <xref:System> classes and methods without fully qualifying them. For example, you can call `Console.WriteLine` instead of `System.Console.WriteLine`:\n\n [!code-csharp[csProgGuide#1](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuide/CS/using.cs#1)]\n\n [!code-csharp[csProgGuide#23](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuide/CS/progGuide.cs#23)]\n\nFor more information about input/output methods, see <xref:System.IO>.\n\n## Command-line compilation and execution\n\nYou can compile the \"Hello World!\" program by using the command line instead of the Visual Studio Integrated Development Environment (IDE).\n\n### To compile and run from a command prompt\n\n1. Paste the code from the preceding procedure into any text editor, and then save the file as a text file. Name the file `Hello.cs`. C# source code files use the extension `.cs`.\n\n2. Perform one of the following steps to open a command-prompt window:\n\n    - In Windows 10, on the **Start** menu, search for `Developer Command Prompt`, and then tap or choose **Developer Command Prompt for VS 2017**.\n\n         A Developer Command Prompt window appears.\n\n    - In Windows 7, open the **Start** menu, expand the folder for the current version of Visual Studio, open the shortcut menu for **Visual Studio Tools**, and then choose **Developer Command Prompt for VS 2017**.\n\n         A Developer Command Prompt window appears.\n\n    - Enable command-line builds from a standard Command Prompt window.\n\n         See [How to: Set Environment Variables for the Visual Studio Command Line](../../../csharp/language-reference/compiler-options/how-to-set-environment-variables-for-the-visual-studio-command-line.md).\n\n3. In the command-prompt window, navigate to the folder that contains your `Hello.cs` file.\n\n4. Enter the following command to compile `Hello.cs`.\n\n     `csc Hello.cs`\n\n     If your program has no compilation errors, an executable file that is named `Hello.exe` is created.\n\n5. In the command-prompt window, enter the following command to run the program:\n\n     `Hello`\n\n For more information about the C# compiler and its options, see [C# Compiler Options](../../../csharp/language-reference/compiler-options/index.md).\n\n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Inside a C# Program](../../../csharp/programming-guide/inside-a-program/index.md)\n- [Strings](../../../csharp/programming-guide/strings/index.md)\n- [Samples and tutorials](../../../samples-and-tutorials/index.md)\n- [C# Reference](../../../csharp/language-reference/index.md)\n- [Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md)\n- [Getting Started with Visual C# and Visual Basic](/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic)","nodes":[{"pos":[4,318],"embed":true,"restype":"x-metadata","content":"title: \"Hello World -- Your first program - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"cs.program\"\n  - \"vs.csharp.startpage.firstapplication\"\nhelpviewer_keywords: \n  - \"examples [C#], Hello World\"\n  - \"Hello World example [C#]\"\nms.assetid: 6493182a-b0b6-4539-a719-518a168cb730","nodes":[{"content":"Hello World -- Your first program - C# Programming Guide","nodes":[{"pos":[0,56],"content":"Hello World -- Your first program - C# Programming Guide","nodes":[{"content":"Hello World -- Your first program - C# Programming Guide","pos":[0,56]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[325,381],"content":"Hello World -- Your first program (C# Programming Guide)","linkify":"Hello World -- Your first program (C# Programming Guide)","nodes":[{"content":"Hello World -- Your first program (C# Programming Guide)","pos":[0,56]}]},{"content":"The following procedure creates a C# version of the traditional \"Hello World!\"","pos":[383,461]},{"content":"program.","pos":[462,470]},{"content":"The program displays the string <ph id=\"ph1\">`Hello World!`</ph>","pos":[471,517],"source":" The program displays the string `Hello World!`"},{"pos":[519,688],"content":"For more examples of introductory concepts, see <bpt id=\"p1\">[</bpt>Getting Started with Visual C# and Visual Basic<ept id=\"p1\">](/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic)</ept>.","source":"For more examples of introductory concepts, see [Getting Started with Visual C# and Visual Basic](/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic)."},{"pos":[768,807],"content":"To create and run a console application","linkify":"To create and run a console application","nodes":[{"content":"To create and run a console application","pos":[0,39]}]},{"content":"Start Visual Studio.","pos":[812,832]},{"pos":[837,892],"content":"On the menu bar, choose <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","source":"On the menu bar, choose **File**, **New**, **Project**."},{"pos":[899,936],"content":"The <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> dialog box opens.","source":"The **New Project** dialog box opens."},{"pos":[941,1047],"content":"Expand <bpt id=\"p1\">**</bpt>Installed<ept id=\"p1\">**</ept>, expand <bpt id=\"p2\">**</bpt>Templates<ept id=\"p2\">**</ept>, expand <bpt id=\"p3\">**</bpt>Visual C#<ept id=\"p3\">**</ept>, and then choose <bpt id=\"p4\">**</bpt>Console Application<ept id=\"p4\">**</ept>.","source":"Expand **Installed**, expand **Templates**, expand **Visual C#**, and then choose **Console Application**."},{"pos":[1052,1140],"content":"In the <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> box, specify a name for your project, and then choose the <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept> button.","source":"In the **Name** box, specify a name for your project, and then choose the **OK** button."},{"pos":[1147,1196],"content":"The new project appears in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>.","source":"The new project appears in **Solution Explorer**."},{"pos":[1201,1348],"content":"If Program.cs isn't open in the <bpt id=\"p1\">**</bpt>Code Editor<ept id=\"p1\">**</ept>, open the shortcut menu for <bpt id=\"p2\">**</bpt>Program.cs<ept id=\"p2\">**</ept> in <bpt id=\"p3\">**</bpt>Solution Explorer<ept id=\"p3\">**</ept>, and then choose <bpt id=\"p4\">**</bpt>View Code<ept id=\"p4\">**</ept>.","source":"If Program.cs isn't open in the **Code Editor**, open the shortcut menu for **Program.cs** in **Solution Explorer**, and then choose **View Code**."},{"content":"Replace the contents of Program.cs with the following code.","pos":[1353,1412]},{"content":"Choose the F5 key to run the project.","pos":[1533,1570]},{"content":"A Command Prompt window appears that contains the line <ph id=\"ph1\">`Hello World!`</ph>","pos":[1571,1640],"source":" A Command Prompt window appears that contains the line `Hello World!`"},{"content":"Next, the important parts of this program are examined.","pos":[1642,1697]},{"pos":[1702,1710],"content":"Comments","linkify":"Comments","nodes":[{"content":"Comments","pos":[0,8]}]},{"content":"The first line contains a comment.","pos":[1712,1746]},{"content":"The characters <ph id=\"ph1\">`//`</ph> convert the rest of the line to a comment.","pos":[1747,1809],"source":" The characters `//` convert the rest of the line to a comment."},{"content":"You can also comment out a block of text by enclosing it between the <ph id=\"ph1\">`/*`</ph> and <ph id=\"ph2\">`*/`</ph> characters.","pos":[1923,2017],"source":"You can also comment out a block of text by enclosing it between the `/*` and `*/` characters."},{"content":"This is shown in the following example.","pos":[2018,2057]},{"pos":[2174,2185],"content":"Main method","linkify":"Main method","nodes":[{"content":"Main method","pos":[0,11]}]},{"content":"A C# console application must contain a <ph id=\"ph1\">`Main`</ph> method, in which control starts and ends.","pos":[2187,2275],"source":"A C# console application must contain a `Main` method, in which control starts and ends."},{"content":"The <ph id=\"ph1\">`Main`</ph> method is where you create objects and execute other methods.","pos":[2276,2348],"source":" The `Main` method is where you create objects and execute other methods."},{"content":"The <ph id=\"ph1\">`Main`</ph> method is a <bpt id=\"p1\">[</bpt>static<ept id=\"p1\">](../../../csharp/language-reference/keywords/static.md)</ept> method that resides inside a class or a struct.","pos":[2350,2484],"source":"The `Main` method is a [static](../../../csharp/language-reference/keywords/static.md) method that resides inside a class or a struct."},{"content":"In the previous \"Hello World!\"","pos":[2485,2515]},{"content":"example, it resides in a class named <ph id=\"ph1\">`Hello`</ph>.","pos":[2516,2561],"source":" example, it resides in a class named `Hello`."},{"content":"You can declare the <ph id=\"ph1\">`Main`</ph> method in one of the following ways:","pos":[2562,2625],"source":" You can declare the `Main` method in one of the following ways:"},{"pos":[2629,2650],"content":"It can return <ph id=\"ph1\">`void`</ph>.","source":"It can return `void`."},{"content":"It can also return an integer.","pos":[2775,2805]},{"content":"With either of the return types, it can take arguments.","pos":[2930,2985]},{"content":"-or-","pos":[3113,3117]},{"content":"The parameter of the <ph id=\"ph1\">`Main`</ph> method, <ph id=\"ph2\">`args`</ph>, is a <ph id=\"ph3\">`string`</ph> array that contains the command-line arguments used to invoke the program.","pos":[3240,3372],"source":"The parameter of the `Main` method, `args`, is a `string` array that contains the command-line arguments used to invoke the program."},{"content":"Unlike in C++, the array does not include the name of the executable (exe) file.","pos":[3373,3453]},{"pos":[3455,3820],"content":"For more information about how to use command-line arguments, see the examples in <bpt id=\"p1\">[</bpt>Main() and Command-Line Arguments<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/index.md)</ept> and <bpt id=\"p2\">[</bpt>How to: Create and Use Assemblies Using the Command Line<ept id=\"p2\">](../../../csharp/programming-guide/concepts/assemblies-gac/how-to-create-and-use-assemblies-using-the-command-line.md)</ept>.","source":"For more information about how to use command-line arguments, see the examples in [Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md) and [How to: Create and Use Assemblies Using the Command Line](../../../csharp/programming-guide/concepts/assemblies-gac/how-to-create-and-use-assemblies-using-the-command-line.md)."},{"pos":[3822,4040],"content":"The call to <ph id=\"ph1\">&lt;xref:System.Console.ReadKey%2A&gt;</ph> at the end of the <ph id=\"ph2\">`Main`</ph> method prevents the console window from closing before you have a chance to read the output when you run your program in debug mode, by pressing F5.","source":"The call to <xref:System.Console.ReadKey%2A> at the end of the `Main` method prevents the console window from closing before you have a chance to read the output when you run your program in debug mode, by pressing F5."},{"pos":[4045,4061],"content":"Input and output","linkify":"Input and output","nodes":[{"content":"Input and output","pos":[0,16]}]},{"content":"C# programs generally use the input/output services provided by the run-time library of the .NET Framework.","pos":[4063,4170]},{"content":"The statement <ph id=\"ph1\">`System.Console.WriteLine(\"Hello World!\");`</ph> uses the <ph id=\"ph2\">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method.","pos":[4171,4280],"source":" The statement `System.Console.WriteLine(\"Hello World!\");` uses the <xref:System.Console.WriteLine%2A> method."},{"content":"This is one of the output methods of the <ph id=\"ph1\">&lt;xref:System.Console&gt;</ph> class in the run-time library.","pos":[4281,4374],"source":" This is one of the output methods of the <xref:System.Console> class in the run-time library."},{"content":"It displays its string parameter on the standard output stream followed by a new line.","pos":[4375,4461]},{"content":"Other <ph id=\"ph1\">&lt;xref:System.Console&gt;</ph> methods are available for different input and output operations.","pos":[4462,4554],"source":" Other <xref:System.Console> methods are available for different input and output operations."},{"content":"If you include the <ph id=\"ph1\">`using System;`</ph> directive at the beginning of the program, you can directly use the <ph id=\"ph2\">&lt;xref:System&gt;</ph> classes and methods without fully qualifying them.","pos":[4555,4722],"source":" If you include the `using System;` directive at the beginning of the program, you can directly use the <xref:System> classes and methods without fully qualifying them."},{"content":"For example, you can call <ph id=\"ph1\">`Console.WriteLine`</ph> instead of <ph id=\"ph2\">`System.Console.WriteLine`</ph>:","pos":[4723,4807],"source":" For example, you can call `Console.WriteLine` instead of `System.Console.WriteLine`:"},{"pos":[5027,5097],"content":"For more information about input/output methods, see <ph id=\"ph1\">&lt;xref:System.IO&gt;</ph>.","source":"For more information about input/output methods, see <xref:System.IO>."},{"pos":[5102,5140],"content":"Command-line compilation and execution","linkify":"Command-line compilation and execution","nodes":[{"content":"Command-line compilation and execution","pos":[0,38]}]},{"content":"You can compile the \"Hello World!\"","pos":[5142,5176]},{"content":"program by using the command line instead of the Visual Studio Integrated Development Environment (IDE).","pos":[5177,5281]},{"pos":[5287,5327],"content":"To compile and run from a command prompt","linkify":"To compile and run from a command prompt","nodes":[{"content":"To compile and run from a command prompt","pos":[0,40]}]},{"content":"Paste the code from the preceding procedure into any text editor, and then save the file as a text file.","pos":[5332,5436]},{"content":"Name the file <ph id=\"ph1\">`Hello.cs`</ph>.","pos":[5437,5462],"source":" Name the file `Hello.cs`."},{"content":"C# source code files use the extension <ph id=\"ph1\">`.cs`</ph>.","pos":[5463,5508],"source":" C# source code files use the extension `.cs`."},{"content":"Perform one of the following steps to open a command-prompt window:","pos":[5513,5580]},{"pos":[5588,5729],"content":"In Windows 10, on the <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> menu, search for <ph id=\"ph1\">`Developer Command Prompt`</ph>, and then tap or choose <bpt id=\"p2\">**</bpt>Developer Command Prompt for VS 2017<ept id=\"p2\">**</ept>.","source":"In Windows 10, on the **Start** menu, search for `Developer Command Prompt`, and then tap or choose **Developer Command Prompt for VS 2017**."},{"content":"A Developer Command Prompt window appears.","pos":[5740,5782]},{"pos":[5790,5998],"content":"In Windows 7, open the <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> menu, expand the folder for the current version of Visual Studio, open the shortcut menu for <bpt id=\"p2\">**</bpt>Visual Studio Tools<ept id=\"p2\">**</ept>, and then choose <bpt id=\"p3\">**</bpt>Developer Command Prompt for VS 2017<ept id=\"p3\">**</ept>.","source":"In Windows 7, open the **Start** menu, expand the folder for the current version of Visual Studio, open the shortcut menu for **Visual Studio Tools**, and then choose **Developer Command Prompt for VS 2017**."},{"content":"A Developer Command Prompt window appears.","pos":[6009,6051]},{"content":"Enable command-line builds from a standard Command Prompt window.","pos":[6059,6124]},{"pos":[6135,6334],"content":"See <bpt id=\"p1\">[</bpt>How to: Set Environment Variables for the Visual Studio Command Line<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/how-to-set-environment-variables-for-the-visual-studio-command-line.md)</ept>.","source":"See [How to: Set Environment Variables for the Visual Studio Command Line](../../../csharp/language-reference/compiler-options/how-to-set-environment-variables-for-the-visual-studio-command-line.md)."},{"pos":[6339,6427],"content":"In the command-prompt window, navigate to the folder that contains your <ph id=\"ph1\">`Hello.cs`</ph> file.","source":"In the command-prompt window, navigate to the folder that contains your `Hello.cs` file."},{"pos":[6432,6482],"content":"Enter the following command to compile <ph id=\"ph1\">`Hello.cs`</ph>.","source":"Enter the following command to compile `Hello.cs`."},{"pos":[6510,6609],"content":"If your program has no compilation errors, an executable file that is named <ph id=\"ph1\">`Hello.exe`</ph> is created.","source":"If your program has no compilation errors, an executable file that is named `Hello.exe` is created."},{"content":"In the command-prompt window, enter the following command to run the program:","pos":[6614,6691]},{"pos":[6708,6856],"content":"For more information about the C# compiler and its options, see <bpt id=\"p1\">[</bpt>C# Compiler Options<ept id=\"p1\">](../../../csharp/language-reference/compiler-options/index.md)</ept>.","source":"For more information about the C# compiler and its options, see [C# Compiler Options](../../../csharp/language-reference/compiler-options/index.md)."},{"pos":[6861,6869],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[6873,6939],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[6942,7024],"content":"<bpt id=\"p1\">[</bpt>Inside a C# Program<ept id=\"p1\">](../../../csharp/programming-guide/inside-a-program/index.md)</ept>","source":"[Inside a C# Program](../../../csharp/programming-guide/inside-a-program/index.md)"},{"pos":[7027,7088],"content":"<bpt id=\"p1\">[</bpt>Strings<ept id=\"p1\">](../../../csharp/programming-guide/strings/index.md)</ept>","source":"[Strings](../../../csharp/programming-guide/strings/index.md)"},{"pos":[7091,7155],"content":"<bpt id=\"p1\">[</bpt>Samples and tutorials<ept id=\"p1\">](../../../samples-and-tutorials/index.md)</ept>","source":"[Samples and tutorials](../../../samples-and-tutorials/index.md)"},{"pos":[7158,7217],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept>","source":"[C# Reference](../../../csharp/language-reference/index.md)"},{"pos":[7220,7321],"content":"<bpt id=\"p1\">[</bpt>Main() and Command-Line Arguments<ept id=\"p1\">](../../../csharp/programming-guide/main-and-command-args/index.md)</ept>","source":"[Main() and Command-Line Arguments](../../../csharp/programming-guide/main-and-command-args/index.md)"},{"pos":[7324,7444],"content":"<bpt id=\"p1\">[</bpt>Getting Started with Visual C# and Visual Basic<ept id=\"p1\">](/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic)</ept>","source":"[Getting Started with Visual C# and Visual Basic](/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic)"}]}