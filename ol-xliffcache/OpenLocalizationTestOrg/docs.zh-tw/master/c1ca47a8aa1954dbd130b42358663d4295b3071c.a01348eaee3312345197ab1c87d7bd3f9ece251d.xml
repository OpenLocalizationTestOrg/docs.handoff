{"content":"---\ntitle: \"Compiler Error CS1942 | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"CS1942\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"CS1942\"\nms.assetid: afbe5e8e-1944-416e-916b-39e2c373814b\ncaps.latest.revision: 5\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Error CS1942\nThe type of the expression in the 'clause' clause is incorrect. Type inference failed in the call to 'method'.  \n  \n This error is typically generated when the range variable has been given an incorrect explicit type.  \n  \n## To correct this error  \n  \n1.  If the range variable is explicitly typed, make sure that the type is either the same as, or implicitly convertible from, the type of the elements in the collection it iterates. If the range variable is preceded with the `var` keyword, remove `var`.  \n  \n## Example  \n The following code generates CS1942:  \n  \n```  \n// cs1942.cs  \nclass Program  \n    {  \n        static void Main(string[] args)  \n        {  \n            var x = from var i in Enumerable.Range(1, 100) // CS1949  \n                    select i; //CS1942  \n        }  \n    }  \n```  \n  \n CS1942 is related to CS1949 because the use of `var` with a range variable causes the underlying `Cast<T>` operation to fail because `var` is not a type.  \n  \n## See Also  \n [var](../../../csharp/language-reference/keywords/var.md)   \n [LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)","nodes":[{"pos":[12,50],"content":"Compiler Error CS1942 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Error CS1942 | Microsoft Docs","pos":[0,38]}]},{"pos":[542,563],"content":"Compiler Error CS1942","linkify":"Compiler Error CS1942","nodes":[{"content":"Compiler Error CS1942","pos":[0,21]}]},{"content":"The type of the expression in the 'clause' clause is incorrect.","pos":[564,627]},{"content":"Type inference failed in the call to 'method'.","pos":[628,674]},{"content":"This error is typically generated when the range variable has been given an incorrect explicit type.","pos":[681,781]},{"pos":[790,811],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If the range variable is explicitly typed, make sure that the type is either the same as, or implicitly convertible from, the type of the elements in the collection it iterates.","pos":[821,998]},{"content":"If the range variable is preceded with the <ph id=\"ph1\">`var`</ph> keyword, remove <ph id=\"ph2\">`var`</ph>.","pos":[999,1070],"source":" If the range variable is preceded with the `var` keyword, remove `var`."},{"pos":[1079,1086],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code generates CS1942:","pos":[1090,1126]},{"pos":[1373,1526],"content":"CS1942 is related to CS1949 because the use of <ph id=\"ph1\">`var`</ph> with a range variable causes the underlying <ph id=\"ph2\">`Cast&lt;T&gt;`</ph> operation to fail because <ph id=\"ph3\">`var`</ph> is not a type.","source":"CS1942 is related to CS1949 because the use of `var` with a range variable causes the underlying `Cast<T>` operation to fail because `var` is not a type."},{"pos":[1535,1543],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>var<ept id=\"p1\">](../../../csharp/language-reference/keywords/var.md)</ept><ph id=\"ph1\"> </ph>","pos":[1547,1605],"source":"[var](../../../csharp/language-reference/keywords/var.md) "},{"content":"<bpt id=\"p1\"> [</bpt>LINQ Query Expressions<ept id=\"p1\">](../../../csharp/programming-guide/linq-query-expressions/index.md)</ept>","pos":[1608,1700],"source":" [LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)"}]}