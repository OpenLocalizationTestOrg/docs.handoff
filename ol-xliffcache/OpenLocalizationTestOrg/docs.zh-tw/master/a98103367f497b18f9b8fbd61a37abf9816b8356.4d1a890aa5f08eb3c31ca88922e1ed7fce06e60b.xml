{"content":"---\ntitle: WritePropertyValue function (Unmanaged API Reference)\ndescription: The WritePropertyValue function writes bytes to a property.\nms.date: \"11/06/2017\"\napi_name: \n  - \"WritePropertyValue\"\napi_location: \n  - \"WMINet_Utils.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"WritePropertyValue\"\nhelpviewer_keywords: \n  - \"WritePropertyValue function [.NET WMI and performance counters]\"\ntopic_type: \n  - \"Reference\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# WritePropertyValue function\nWrites a specified number of bytes to a property identified by a property handle.\n\n[!INCLUDE[internalonly-unmanaged](../../../../includes/internalonly-unmanaged.md)]\n    \n## Syntax  \n  \n```  \nHRESULT WritePropertyValue (\n   [in] int                  vFunc, \n   [in] IWbemObjectAccess*   ptr, \n   [in] long                 lHandle,\n   [in] long                 lNumBytes,\n   [in] byte*                aData\n); \n```  \n\n## Parameters\n\n`vFunc`  \n[in] This parameter is unused.\n\n`ptr`  \n[in] A pointer to an [IWbemObjectAccess](/windows/desktop/api/wbemcli/nn-wbemcli-iwbemobjectaccess) instance.\n\n`lHandle`  \n[in] An integer that contains the handle that identifies this property. The handle can be retrieved by calling the [GetPropertyHandle](getpropertyhandle.md) function.   \n\n`lNumBytes`  \n[in] The number of bytes being written to the property. See the [Remarks](#remarks) section for more information.\n\n`pHandle`   \n[out] A pointer to the byte array that contains the data.\n\n## Return value\n\nThe following values returned by this function are defined in the *WbemCli.h* header file, or you can define them as constants in your code:\n\n|Constant  |Value  |Description  |\n|---------|---------|---------|\n|`WBEM_E_INVALID_PARAMETER` | 0x80041008 | A parameter is not valid. |\n|`WBEM_E_TYPE_MISMATCH` | 0x80041005 | A type mismatch occurred. |\n|`WBEM_S_NO_ERROR` | 0 | The function call was successful.  |\n  \n## Remarks\n\nThis function wraps a call to the [IWbemClassObject::WritePropertyValue](/windows/desktop/api/wbemcli/nf-wbemcli-iwbemobjectaccess-writepropertyvalue) method.\n\nUse this function to set string and all other non-`DWORD` or non-`QWORD` data.\n\nFor nonstring property values, `lNumBytes` must be the correct data size of the property type specified. For string property values, `lNumBytes` must be the length of the specified string in bytes, and the string itself must be of an even length in bytes and be followed with a null-termination character.\n\n## Requirements  \n**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** WMINet_Utils.idl  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v472plus](../../../../includes/net-current-v472plus.md)]  \n  \n## See also\n\n- [WMI and Performance Counters (Unmanaged API Reference)](index.md)\n","nodes":[{"pos":[4,460],"embed":true,"restype":"x-metadata","content":"title: WritePropertyValue function (Unmanaged API Reference)\ndescription: The WritePropertyValue function writes bytes to a property.\nms.date: \"11/06/2017\"\napi_name: \n  - \"WritePropertyValue\"\napi_location: \n  - \"WMINet_Utils.dll\"\napi_type: \n  - \"DLLExport\"\nf1_keywords: \n  - \"WritePropertyValue\"\nhelpviewer_keywords: \n  - \"WritePropertyValue function [.NET WMI and performance counters]\"\ntopic_type: \n  - \"Reference\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"WritePropertyValue function (Unmanaged API Reference)","nodes":[{"pos":[0,53],"content":"WritePropertyValue function (Unmanaged API Reference)","nodes":[{"content":"WritePropertyValue function (Unmanaged API Reference)","pos":[0,53]}]}],"path":["title"],"nosxs":false},{"content":"The WritePropertyValue function writes bytes to a property.","nodes":[{"pos":[0,59],"content":"The WritePropertyValue function writes bytes to a property.","nodes":[{"content":"The WritePropertyValue function writes bytes to a property.","pos":[0,59]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[467,494],"content":"WritePropertyValue function","linkify":"WritePropertyValue function","nodes":[{"content":"WritePropertyValue function","pos":[0,27]}]},{"content":"Writes a specified number of bytes to a property identified by a property handle.","pos":[495,576]},{"pos":[669,675],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[915,925],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] This parameter is unused.","pos":[937,967]},{"content":"[in] A pointer to an <bpt id=\"p1\">[</bpt>IWbemObjectAccess<ept id=\"p1\">](/windows/desktop/api/wbemcli/nn-wbemcli-iwbemobjectaccess)</ept> instance.","pos":[977,1086],"source":"[in] A pointer to an [IWbemObjectAccess](/windows/desktop/api/wbemcli/nn-wbemcli-iwbemobjectaccess) instance."},{"content":"[in] An integer that contains the handle that identifies this property.","pos":[1100,1171]},{"content":"The handle can be retrieved by calling the <bpt id=\"p1\">[</bpt>GetPropertyHandle<ept id=\"p1\">](getpropertyhandle.md)</ept> function.","pos":[1172,1266],"source":" The handle can be retrieved by calling the [GetPropertyHandle](getpropertyhandle.md) function."},{"content":"[in] The number of bytes being written to the property.","pos":[1285,1340]},{"content":"See the <bpt id=\"p1\">[</bpt>Remarks<ept id=\"p1\">](#remarks)</ept> section for more information.","pos":[1341,1398],"source":" See the [Remarks](#remarks) section for more information."},{"content":"[out] A pointer to the byte array that contains the data.","pos":[1413,1470]},{"pos":[1475,1487],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1489,1629],"content":"The following values returned by this function are defined in the <bpt id=\"p1\">*</bpt>WbemCli.h<ept id=\"p1\">*</ept> header file, or you can define them as constants in your code:","source":"The following values returned by this function are defined in the *WbemCli.h* header file, or you can define them as constants in your code:"},{"content":"Constant","pos":[1632,1640]},{"content":"Value","pos":[1643,1648]},{"content":"Description","pos":[1651,1662]},{"content":"0x80041008","pos":[1728,1738]},{"content":"A parameter is not valid.","pos":[1741,1766]},{"content":"0x80041005","pos":[1795,1805]},{"content":"A type mismatch occurred.","pos":[1808,1833]},{"content":"0","pos":[1857,1858]},{"content":"The function call was successful.","pos":[1861,1894]},{"pos":[1904,1911],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1913,2071],"content":"This function wraps a call to the <bpt id=\"p1\">[</bpt>IWbemClassObject::WritePropertyValue<ept id=\"p1\">](/windows/desktop/api/wbemcli/nf-wbemcli-iwbemobjectaccess-writepropertyvalue)</ept> method.","source":"This function wraps a call to the [IWbemClassObject::WritePropertyValue](/windows/desktop/api/wbemcli/nf-wbemcli-iwbemobjectaccess-writepropertyvalue) method."},{"pos":[2073,2151],"content":"Use this function to set string and all other non-<ph id=\"ph1\">`DWORD`</ph> or non-<ph id=\"ph2\">`QWORD`</ph> data.","source":"Use this function to set string and all other non-`DWORD` or non-`QWORD` data."},{"content":"For nonstring property values, <ph id=\"ph1\">`lNumBytes`</ph> must be the correct data size of the property type specified.","pos":[2153,2257],"source":"For nonstring property values, `lNumBytes` must be the correct data size of the property type specified."},{"content":"For string property values, <ph id=\"ph1\">`lNumBytes`</ph> must be the length of the specified string in bytes, and the string itself must be of an even length in bytes and be followed with a null-termination character.","pos":[2258,2458],"source":" For string property values, `lNumBytes` must be the length of the specified string in bytes, and the string itself must be of an even length in bytes and be followed with a null-termination character."},{"pos":[2463,2475],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2478,2582],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2589,2617],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> WMINet_Utils.idl","source":"**Header:** WMINet_Utils.idl"},{"pos":[2624,2731],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v472plus](../../../../includes/net-current-v472plus.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v472plus](../../../../includes/net-current-v472plus.md)]"},{"pos":[2740,2748],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2752,2818],"content":"<bpt id=\"p1\">[</bpt>WMI and Performance Counters (Unmanaged API Reference)<ept id=\"p1\">](index.md)</ept>","source":"[WMI and Performance Counters (Unmanaged API Reference)](index.md)"}]}