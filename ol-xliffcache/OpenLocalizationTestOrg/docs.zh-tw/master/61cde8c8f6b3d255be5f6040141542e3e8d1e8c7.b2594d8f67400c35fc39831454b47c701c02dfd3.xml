{"content":"---\ntitle: \"extern (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"extern_CSharpKeyword\"\n  - \"extern\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"DllImport attribute\"\n  - \"extern keyword [C#]\"\nms.assetid: 9c3f02c4-51b8-4d80-9cb2-f2b6e1ae15c7\ncaps.latest.revision: 26\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# extern (C# Reference)\nThe `extern` modifier is used to declare a method that is implemented externally. A common use of the `extern` modifier is with the `DllImport` attribute when you are using Interop services to call into unmanaged code. In this case, the method must also be declared as `static`, as shown in the following example:  \n  \n```  \n[DllImport(\"avifil32.dll\")]  \nprivate static extern void AVIFileInit();  \n```  \n  \n The `extern` keyword can also define an external assembly alias, which makes it possible to reference different versions of the same component from within a single assembly. For more information, see [extern alias](../../../csharp/language-reference/keywords/extern-alias.md).  \n  \n It is an error to use the [abstract](../../../csharp/language-reference/keywords/abstract.md) and `extern` modifiers together to modify the same member. Using the `extern` modifier means that the method is implemented outside the C# code, whereas using the `abstract` modifier means that the method implementation is not provided in the class.  \n  \n The extern keyword has more limited uses in C# than in C++. To compare the C# keyword with the C++ keyword, see Using extern to Specify Linkage in the C++ Language Reference.  \n  \n## Example  \n **Example 1.** In this example, the program receives a string from the user and displays it inside a message box. The program uses the `MessageBox` method imported from the User32.dll library.  \n  \n [!code-cs[csrefKeywordsModifiers#8](../../../csharp/language-reference/keywords/codesnippet/CSharp/extern_1.cs)]  \n  \n## Example  \n **Example 2.** This example illustrates a C# program that calls into a C library (a native DLL).  \n  \n 1. Create the following C file and name it `cmdll.c`:  \n  \n```  \n// cmdll.c  \n// Compile with: /LD  \nint __declspec(dllexport) SampleMethod(int i)  \n{  \n   return i*10;  \n}  \n```  \n  \n## Example  \n 2. Open a Visual Studio x64 (or x32) Native Tools Command Prompt window from the Visual Studio installation directory and compile the `cmdll.c` file by typing **cl /LD cmdll.c** at the command prompt.  \n  \n 3. In the same directory, create the following C# file and name it `cm.cs`:  \n  \n```  \n// cm.cs  \nusing System;  \nusing System.Runtime.InteropServices;  \npublic class MainClass   \n{  \n   [DllImport(\"Cmdll.dll\")]  \n   public static extern int SampleMethod(int x);  \n  \n   static void Main()   \n   {  \n      Console.WriteLine(\"SampleMethod() returns {0}.\", SampleMethod(5));  \n   }  \n}  \n```  \n  \n## Example  \n 3. Open a Visual Studio x64 (or x32) Native Tools Command Prompt window from the Visual Studio installation directory and compile the `cm.cs` file by typing:  \n  \n> **csc cm.cs** (for the x64 command prompt)   \n>  —or—  \n> **csc /platform:x86 cm.cs** (for the x32 command prompt)  \n  \n This will create the executable file `cm.exe`.  \n  \n 4. Run `cm.exe`. The `SampleMethod` method passes the value 5 to the DLL file, which returns the value multiplied by 10.  The program produces the following output:  \n  \n```  \nSampleMethod() returns 50.  \n```  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](../../../csharp/language-reference/keywords/includes/csharplangspec_md.md)]  \n  \n## See Also  \n <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=fullName>   \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Keywords](../../../csharp/language-reference/keywords/index.md)   \n [Modifiers](../../../csharp/language-reference/keywords/modifiers.md)","nodes":[{"pos":[12,50],"content":"extern (C# Reference) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"extern (C# Reference) | Microsoft Docs","pos":[0,38]}]},{"pos":[601,622],"content":"extern (C# Reference)","linkify":"extern (C# Reference)","nodes":[{"content":"extern (C# Reference)","pos":[0,21]}]},{"content":"The <ph id=\"ph1\">`extern`</ph> modifier is used to declare a method that is implemented externally.","pos":[623,704],"source":"The `extern` modifier is used to declare a method that is implemented externally."},{"content":"A common use of the <ph id=\"ph1\">`extern`</ph> modifier is with the <ph id=\"ph2\">`DllImport`</ph> attribute when you are using Interop services to call into unmanaged code.","pos":[705,841],"source":" A common use of the `extern` modifier is with the `DllImport` attribute when you are using Interop services to call into unmanaged code."},{"content":"In this case, the method must also be declared as <ph id=\"ph1\">`static`</ph>, as shown in the following example:","pos":[842,936],"source":" In this case, the method must also be declared as `static`, as shown in the following example:"},{"content":"The <ph id=\"ph1\">`extern`</ph> keyword can also define an external assembly alias, which makes it possible to reference different versions of the same component from within a single assembly.","pos":[1032,1205],"source":"The `extern` keyword can also define an external assembly alias, which makes it possible to reference different versions of the same component from within a single assembly."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>extern alias<ept id=\"p1\">](../../../csharp/language-reference/keywords/extern-alias.md)</ept>.","pos":[1206,1308],"source":" For more information, see [extern alias](../../../csharp/language-reference/keywords/extern-alias.md)."},{"content":"It is an error to use the <bpt id=\"p1\">[</bpt>abstract<ept id=\"p1\">](../../../csharp/language-reference/keywords/abstract.md)</ept> and <ph id=\"ph1\">`extern`</ph> modifiers together to modify the same member.","pos":[1315,1467],"source":"It is an error to use the [abstract](../../../csharp/language-reference/keywords/abstract.md) and `extern` modifiers together to modify the same member."},{"content":"Using the <ph id=\"ph1\">`extern`</ph> modifier means that the method is implemented outside the C# code, whereas using the <ph id=\"ph2\">`abstract`</ph> modifier means that the method implementation is not provided in the class.","pos":[1468,1658],"source":" Using the `extern` modifier means that the method is implemented outside the C# code, whereas using the `abstract` modifier means that the method implementation is not provided in the class."},{"content":"The extern keyword has more limited uses in C# than in C++.","pos":[1665,1724]},{"content":"To compare the C# keyword with the C++ keyword, see Using extern to Specify Linkage in the C++ Language Reference.","pos":[1725,1839]},{"pos":[1848,1855],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"<bpt id=\"p1\">**</bpt>Example 1.<ept id=\"p1\">**</ept>","pos":[1859,1873],"source":"**Example 1.**"},{"content":"In this example, the program receives a string from the user and displays it inside a message box.","pos":[1874,1972]},{"content":"The program uses the <ph id=\"ph1\">`MessageBox`</ph> method imported from the User32.dll library.","pos":[1973,2051],"source":" The program uses the `MessageBox` method imported from the User32.dll library."},{"pos":[2058,2170],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csrefKeywordsModifiers#8<ept id=\"p2\">](../../../csharp/language-reference/keywords/codesnippet/CSharp/extern_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csrefKeywordsModifiers#8](../../../csharp/language-reference/keywords/codesnippet/CSharp/extern_1.cs)]"},{"pos":[2179,2186],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"<bpt id=\"p1\">**</bpt>Example 2.<ept id=\"p1\">**</ept>","pos":[2190,2204],"source":"**Example 2.**"},{"content":"This example illustrates a C# program that calls into a C library (a native DLL).","pos":[2205,2286]},{"pos":[2296,2346],"content":"Create the following C file and name it <ph id=\"ph1\">`cmdll.c`</ph>:","source":"Create the following C file and name it `cmdll.c`:"},{"pos":[2480,2487],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2494,2691],"content":"Open a Visual Studio x64 (or x32) Native Tools Command Prompt window from the Visual Studio installation directory and compile the <ph id=\"ph1\">`cmdll.c`</ph> file by typing <bpt id=\"p1\">**</bpt>cl /LD cmdll.c<ept id=\"p1\">**</ept> at the command prompt.","source":"Open a Visual Studio x64 (or x32) Native Tools Command Prompt window from the Visual Studio installation directory and compile the `cmdll.c` file by typing **cl /LD cmdll.c** at the command prompt."},{"pos":[2701,2773],"content":"In the same directory, create the following C# file and name it <ph id=\"ph1\">`cm.cs`</ph>:","source":"In the same directory, create the following C# file and name it `cm.cs`:"},{"pos":[3096,3103],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3110,3264],"content":"Open a Visual Studio x64 (or x32) Native Tools Command Prompt window from the Visual Studio installation directory and compile the <ph id=\"ph1\">`cm.cs`</ph> file by typing:","source":"Open a Visual Studio x64 (or x32) Native Tools Command Prompt window from the Visual Studio installation directory and compile the `cm.cs` file by typing:"},{"pos":[3272,3386],"content":"**csc cm.cs** (for the x64 command prompt)   \n —or—  \n**csc /platform:x86 cm.cs** (for the x32 command prompt)","leadings":["","> ","> "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>csc cm.cs<ept id=\"p1\">**</ept> (for the x64 command prompt)","pos":[0,42],"source":"**csc cm.cs** (for the x64 command prompt) "},{"content":"—or—","pos":[47,51]},{"content":"<bpt id=\"p1\">**</bpt>csc /platform:x86 cm.cs<ept id=\"p1\">**</ept> (for the x32 command prompt)","pos":[54,110],"source":"**csc /platform:x86 cm.cs** (for the x32 command prompt)"}]},{"pos":[3393,3439],"content":"This will create the executable file <ph id=\"ph1\">`cm.exe`</ph>.","source":"This will create the executable file `cm.exe`."},{"content":"Run <ph id=\"ph1\">`cm.exe`</ph>.","pos":[3449,3462],"source":"Run `cm.exe`."},{"content":"The <ph id=\"ph1\">`SampleMethod`</ph> method passes the value 5 to the DLL file, which returns the value multiplied by 10.","pos":[3463,3566],"source":" The `SampleMethod` method passes the value 5 to the DLL file, which returns the value multiplied by 10."},{"content":"The program produces the following output:","pos":[3568,3610]},{"pos":[3663,3688],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[3802,3810],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=fullName&gt;</ph>","pos":[3814,3895],"source":"<xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=fullName> "},{"content":"<bpt id=\"p1\"> [</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3899,3960],"source":" [C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3963,4031],"source":" [C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[4034,4103],"source":" [C# Keywords](../../../csharp/language-reference/keywords/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Modifiers<ept id=\"p1\">](../../../csharp/language-reference/keywords/modifiers.md)</ept>","pos":[4106,4176],"source":" [Modifiers](../../../csharp/language-reference/keywords/modifiers.md)"}]}