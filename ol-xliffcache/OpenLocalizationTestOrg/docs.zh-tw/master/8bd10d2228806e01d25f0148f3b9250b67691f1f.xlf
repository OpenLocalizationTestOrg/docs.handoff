<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-ffc129d" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bd10d2228806e01d25f0148f3b9250b67691f1f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\how-to-run-a-workflow.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df1cc104cde775628f18ba0462159f0510662681</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db87423e457f85b441bdd4ac8af7c30885860271</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Run a Workflow | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Run a Workflow</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic is a continuation of the Windows Workflow Foundation Getting Started tutorial and discusses how to create a workflow host and run the workflow defined in the previous <bpt id="p1">[</bpt>How to: Create a Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Each topic in the Getting Started tutorial depends on the previous topics.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To complete this topic you must first complete <bpt id="p1">[</bpt>How to: Create an Activity<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-an-activity.md)</ept> and <bpt id="p2">[</bpt>How to: Create a Workflow<ept id="p2">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To download a completed version of the tutorial, see <bpt id="p1">[</bpt>Windows Workflow Foundation (WF45) - Getting Started Tutorial<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=248976)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To create the workflow host project</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Open the solution from the previous <bpt id="p1">[</bpt>How to: Create an Activity<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-an-activity.md)</ept> topic by using <ph id="ph1">[!INCLUDE[vs_current_long](../../../includes/vs-current-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>WF45GettingStartedTutorial<ept id="p1">**</ept> solution in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>, <bpt id="p4">**</bpt>New Project<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> window is not displayed, select <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> from the <bpt id="p3">**</bpt>View<ept id="p3">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Installed<ept id="p1">**</ept> node, select <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Workflow<ept id="p3">**</ept> (or <bpt id="p4">**</bpt>Visual Basic<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Workflow<ept id="p5">**</ept>).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Depending on which programming language is configured as the primary language in Visual Studio, the <bpt id="p1">**</bpt>Visual C#<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Visual Basic<ept id="p2">**</ept> node may be under the <bpt id="p3">**</bpt>Other Languages<ept id="p3">**</ept> node in the <bpt id="p4">**</bpt>Installed<ept id="p4">**</ept> node.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Ensure that <bpt id="p1">**</bpt>.NET Framework 4.5<ept id="p1">**</ept> is selected in the .NET Framework version drop-down list.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Workflow Console Application<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Workflow<ept id="p2">**</ept> list.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`NumberGuessWorkflowHost`</ph> into the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This creates a starter workflow application with basic workflow hosting support.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This basic hosting code is modified and used to run the workflow application.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Right-click the newly added <bpt id="p1">**</bpt>NumberGuessWorkflowHost<ept id="p1">**</ept> project in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Add Reference<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Solution<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> list, check the checkbox beside <bpt id="p3">**</bpt>NumberGuessWorkflowActivities<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Workflow1.xaml<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and choose <bpt id="p3">**</bpt>Delete<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to confirm.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To modify the workflow hosting code</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Double-click <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Module1.vb<ept id="p2">**</ept> in <bpt id="p3">**</bpt>Solution Explorer<ept id="p3">**</ept> to display the code.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> window is not displayed, select <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> from the <bpt id="p3">**</bpt>View<ept id="p3">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because this project was created by using the <bpt id="p1">**</bpt>Workflow Console Application<ept id="p1">**</ept> template, <bpt id="p2">**</bpt>Program.cs<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Module1.vb<ept id="p3">**</ept> contains the following basic workflow hosting code.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This generated hosting code uses <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> provides a simple way for invoking a workflow as if it were a method call and can be used only for workflows that do not use persistence.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> provides a richer model for executing workflows that includes notification of life-cycle events, execution control, bookmark resumption, and persistence.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This example uses bookmarks and <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is used for hosting the workflow.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`using`</ph> or <bpt id="p1">**</bpt>Imports<ept id="p1">**</ept> statement at the top of <bpt id="p2">**</bpt>Program.cs<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Module1.vb<ept id="p3">**</ept> below the existing <bpt id="p4">**</bpt>using<ept id="p4">**</ept> or <bpt id="p5">**</bpt>Imports<ept id="p5">**</ept> statements.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Replace the lines of code that use <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> with the following basic <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> hosting code.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This sample hosting code demonstrates the basic steps for hosting and invoking a workflow, but does not yet contain the functionality to successfully run the workflow from this topic.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the following steps, this basic code is modified and additional features are added until the application is complete.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Please replace <ph id="ph1">`Workflow1`</ph> in these examples with <ph id="ph2">`FlowchartNumberGuessWorkflow`</ph>, <ph id="ph3">`SequentialNumberGuessWorkflow`</ph>, or <ph id="ph4">`StateMachineNumberGuessWorkflow`</ph>, depending on which workflow you completed in the previous <bpt id="p1">[</bpt>How to: Create a Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)</ept> step.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you do not replace <ph id="ph1">`Workflow1`</ph> then you will get build errors when you try and build or run the workflow.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#4<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/extrasnippets.cs#4)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#4<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/extrasnippets.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This code creates a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>, subscribes to three workflow life-cycle events, starts the workflow with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>, and then waits for the workflow to complete.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the workflow completes, the <ph id="ph1">&lt;xref:System.Threading.AutoResetEvent&gt;</ph> is set and the host application completes.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To set input arguments of a workflow</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Add the following statement at the top of <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Module1.vb<ept id="p2">**</ept> below the existing <ph id="ph1">`using`</ph> or <ph id="ph2">`Imports`</ph> statements.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#5<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/program.cs#5)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#5<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/module1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Replace the line of code that creates the new <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> with the following code that creates and passes a dictionary of parameters to the workflow when it is created.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Please replace <ph id="ph1">`Workflow1`</ph> in these examples with <ph id="ph2">`FlowchartNumberGuessWorkflow`</ph>, <ph id="ph3">`SequentialNumberGuessWorkflow`</ph>, or <ph id="ph4">`StateMachineNumberGuessWorkflow`</ph>, depending on which workflow you completed in the previous <bpt id="p1">[</bpt>How to: Create a Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)</ept> step.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you do not replace <ph id="ph1">`Workflow1`</ph> then you will get build errors when you try and build or run the workflow.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#6<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/program.cs#6)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#6<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/module1.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This dictionary contains one element with a key of <ph id="ph1">`MaxNumber`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Keys in the input dictionary correspond to input arguments on the root activity of the workflow.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MaxNumber`</ph> is used by the workflow to determine the upper bound for the randomly generated number.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To retrieve output arguments of a workflow</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Modify the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler to retrieve and display the number of turns used by the workflow.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#7<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/program.cs#7)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#7<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/module1.vb#7)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To resume a bookmark</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Add the following code at the top of the <ph id="ph1">`Main`</ph> method just after the existing <ph id="ph2">&lt;xref:System.Threading.AutoResetEvent&gt;</ph> declaration.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#8<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/program.cs#8)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#8<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/module1.vb#8)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> handler just below the existing three workflow life-cycle handlers in <ph id="ph2">`Main`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#9<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/program.cs#9)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#9<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/module1.vb#9)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Each time the workflow becomes idle waiting for the next guess, this handler is called and the <ph id="ph1">`idleAction`</ph> <ph id="ph2">&lt;xref:System.Threading.AutoResetEvent&gt;</ph> is set.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The code in the following step uses <ph id="ph1">`idleEvent`</ph> and <ph id="ph2">`syncEvent`</ph> to determine whether the workflow is waiting for the next guess or is complete.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In this example, the host application uses auto-reset events in the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> handlers to synchronize the host application with the progress of the workflow.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It is not necessary to block and wait for the workflow to become idle before resuming a bookmark, but in this example the synchronization events are required so the host knows whether the workflow is complete or whether it is waiting on more user input by using the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Bookmarks<ept id="p1">](../../../docs/framework/windows-workflow-foundation/bookmarks.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Remove the call to <ph id="ph1">`WaitOne`</ph>, and replace it with code to gather input from the user and resume the <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Remove the following line of code.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#10<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/extrasnippets.cs#10)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#10<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/extrasnippets.vb#10)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Replace it with the following example.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#11<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/program.cs#11)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#11<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/module1.vb#11)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ToRunTheApplication"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> To build and run the application</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>NumberGuessWorkflowHost<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Set as StartUp Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Press CTRL+F5 to build and run the application.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Try to guess the number in as few turns as possible.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To try the application with one of the other styles of workflow, replace <ph id="ph1">`Workflow1`</ph> in the code that creates the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> with <ph id="ph3">`FlowchartNumberGuessWorkflow`</ph>, <ph id="ph4">`SequentialNumberGuessWorkflow`</ph>, or <ph id="ph5">`StateMachineNumberGuessWorkflow`</ph>, depending on which workflow style you desire.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#6<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/program.cs#6)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#6<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/module1.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For instructions about how to add persistence to a workflow application, see the next topic, <bpt id="p1">[</bpt>How to: Create and Run a Long Running Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example is the complete code listing for the <ph id="ph1">`Main`</ph> method.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Please replace <ph id="ph1">`Workflow1`</ph> in these examples with <ph id="ph2">`FlowchartNumberGuessWorkflow`</ph>, <ph id="ph3">`SequentialNumberGuessWorkflow`</ph>, or <ph id="ph4">`StateMachineNumberGuessWorkflow`</ph>, depending on which workflow you completed in the previous <bpt id="p1">[</bpt>How to: Create a Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)</ept> step.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If you do not replace <ph id="ph1">`Workflow1`</ph> then you will get build errors when you try and build or run the workflow.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CFX_WF_GettingStarted#12<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CFX/cfx_wf_gettingstarted/cs/program.cs#12)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CFX_WF_GettingStarted#12<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CFX/cfx_wf_gettingstarted/vb/module1.vb#12)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Windows Workflow Foundation Programming<ept id="p1">](../../../docs/framework/windows-workflow-foundation/programming.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Getting Started Tutorial<ept id="p1">](../../../docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create and Run a Long Running Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Waiting for Input in a Workflow<ept id="p1">](../../../docs/framework/windows-workflow-foundation/waiting-for-input-in-a-workflow.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Hosting Workflows<ept id="p1">](../../../docs/framework/windows-workflow-foundation/hosting-workflows.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>