<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af14bf2a8d6232299fcd44e87702220b48f57794</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\namespaces\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">p1-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77ec8824e0bc95a274cc1a4a0402a46c8ef1919e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20ccbf9971b2901d3347f09aa796e67f0b803e12</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Namespaces (C# Programming Guide) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Namespaces (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Namespaces are heavily used in C# programming in two ways.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>First, the .NET Framework uses namespaces to organize its many classes, as follows:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuide#22<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/index_1.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`System`</ph> is a namespace and <ph id="ph2">`Console`</ph> is a class in that namespace.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`using`</ph> keyword can be used so that the complete name is not required, as in the following example:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuide#1<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/index_2.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuide#25<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/index_3.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>using Directive<ept id="p1">](../../../csharp/language-reference/keywords/using-directive.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Second, declaring your own namespaces can help you control the scope of class and method names in larger programming projects.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>namespace<ept id="p1">](../../../csharp/language-reference/keywords/namespace.md)</ept> keyword to declare a namespace, as in the following example:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuideNamespaces#6<ept id="p2">](../../../csharp/programming-guide/namespaces/codesnippet/CSharp/index_4.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Namespaces Overview</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Namespaces have the following properties:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>They organize large code projects.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>They are delimited by using the <ph id="ph1">`.`</ph> operator.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`using directive`</ph> obviates the requirement to specify the name of the namespace for every class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`global`</ph> namespace is the "root" namespace: <ph id="ph2">`global::System`</ph> will always refer to the .NET Framework namespace <ph id="ph3">`System`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Related Sections</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See the following topics for more information about namespaces:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Namespaces<ept id="p1">](../../../csharp/programming-guide/namespaces/using-namespaces.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Use the Global Namespace Alias<ept id="p1">](../../../csharp/programming-guide/namespaces/how-to-use-the-global-namespace-alias.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Use the My Namespace<ept id="p1">](../../../csharp/programming-guide/namespaces/how-to-use-the-my-namespace.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>C# Language Specification</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Namespace Keywords<ept id="p1">](../../../csharp/language-reference/keywords/namespace-keywords.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>using Directive<ept id="p1">](../../../csharp/language-reference/keywords/using-directive.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>:: Operator<ept id="p1">](../../../csharp/language-reference/operators/namespace-alias-qualifer.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>. Operator<ept id="p1">](../../../csharp/language-reference/operators/member-access-operator.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>