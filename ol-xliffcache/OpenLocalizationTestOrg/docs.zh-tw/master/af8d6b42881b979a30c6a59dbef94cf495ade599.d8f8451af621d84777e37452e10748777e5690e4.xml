{"content":"---\ntitle: \"Static variable &#39;&lt;variablename&gt;&#39; declared without an &#39;As&#39; clause; type of &#39;Object&#39; assumed | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc42111\"\n  - \"bc42111\"\nhelpviewer_keywords: \n  - \"BC42111\"\nms.assetid: ca6b625c-21a5-45f7-ac67-282f6993a724\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Static variable &#39;&lt;variablename&gt;&#39; declared without an &#39;As&#39; clause; type of &#39;Object&#39; assumed\nThe compiler does not infer the data type of static local variables. In the following example, with `Option Strict` set to `Off`, the type of `m` will be `Object`, regardless of whether `Option Infer` is set to `On` or `Off`. Local type inference does not apply.  \n  \n```  \nSub Main()  \n    Static m = 10  \nEnd Sub  \n```  \n  \n By default, this message is a warning. For information about how to hide warnings or how to treat warnings as errors, see [Configuring Warnings in Visual Basic](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic).  \n  \n **Error ID:** BC42111  \n  \n### To address this warning  \n  \n-   Specify the data type for static local variables.  \n  \n     For example, if you want `m` in the previous example to be of type `Integer`, specify the type in the declaration.  \n  \n    ```  \n    Sub Main()  \n        Static m As Integer = 10  \n    End Sub  \n  \n    ```  \n  \n## See Also  \n [Dim Statement](../../visual-basic/language-reference/statements/dim-statement.md)   \n [NOTINBUILD How to: Lengthen a Variable's Lifetime](http://msdn.microsoft.com/en-us/04e7c56c-1db0-4fe5-a678-859a39ec654b)   \n [Local Type Inference](../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)   \n [Option Infer Statement](../../visual-basic/language-reference/statements/option-infer-statement.md)   \n [Static](../../visual-basic/language-reference/modifiers/static.md)","nodes":[{"pos":[12,149],"content":"Static variable &#39;&lt;variablename&gt;&#39; declared without an &#39;As&#39; clause; type of &#39;Object&#39; assumed | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Static variable &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>variablename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; declared without an &amp;#39;As&amp;#39; clause; type of &amp;#39;Object&amp;#39; assumed | Microsoft Docs","pos":[0,137],"source":"Static variable &#39;&lt;variablename&gt;&#39; declared without an &#39;As&#39; clause; type of &#39;Object&#39; assumed | Microsoft Docs"}]},{"pos":[666,786],"content":"Static variable &#39;&lt;variablename&gt;&#39; declared without an &#39;As&#39; clause; type of &#39;Object&#39; assumed","linkify":"Static variable &#39;&lt;variablename&gt;&#39; declared without an &#39;As&#39; clause; type of &#39;Object&#39; assumed","nodes":[{"content":"Static variable &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>variablename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; declared without an &amp;#39;As&amp;#39; clause; type of &amp;#39;Object&amp;#39; assumed","pos":[0,120],"source":"Static variable &#39;&lt;variablename&gt;&#39; declared without an &#39;As&#39; clause; type of &#39;Object&#39; assumed"}]},{"content":"The compiler does not infer the data type of static local variables.","pos":[787,855]},{"content":"In the following example, with <ph id=\"ph1\">`Option Strict`</ph> set to <ph id=\"ph2\">`Off`</ph>, the type of <ph id=\"ph3\">`m`</ph> will be <ph id=\"ph4\">`Object`</ph>, regardless of whether <ph id=\"ph5\">`Option Infer`</ph> is set to <ph id=\"ph6\">`On`</ph> or <ph id=\"ph7\">`Off`</ph>.","pos":[856,1012],"source":" In the following example, with `Option Strict` set to `Off`, the type of `m` will be `Object`, regardless of whether `Option Infer` is set to `On` or `Off`."},{"content":"Local type inference does not apply.","pos":[1013,1049]},{"content":"By default, this message is a warning.","pos":[1114,1152]},{"content":"For information about how to hide warnings or how to treat warnings as errors, see <bpt id=\"p1\">[</bpt>Configuring Warnings in Visual Basic<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.","pos":[1153,1357],"source":" For information about how to hide warnings or how to treat warnings as errors, see [Configuring Warnings in Visual Basic](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)."},{"pos":[1364,1385],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC42111","source":"**Error ID:** BC42111"},{"pos":[1395,1418],"content":"To address this warning","linkify":"To address this warning","nodes":[{"content":"To address this warning","pos":[0,23]}]},{"content":"Specify the data type for static local variables.","pos":[1428,1477]},{"pos":[1488,1602],"content":"For example, if you want <ph id=\"ph1\">`m`</ph> in the previous example to be of type <ph id=\"ph2\">`Integer`</ph>, specify the type in the declaration.","source":"For example, if you want `m` in the previous example to be of type `Integer`, specify the type in the declaration."},{"pos":[1703,1711],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Dim Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/dim-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[1715,1798],"source":"[Dim Statement](../../visual-basic/language-reference/statements/dim-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>NOTINBUILD How to: Lengthen a Variable's Lifetime<ept id=\"p1\">](http://msdn.microsoft.com/en-us/04e7c56c-1db0-4fe5-a678-859a39ec654b)</ept><ph id=\"ph1\"> </ph>","pos":[1801,1924],"source":" [NOTINBUILD How to: Lengthen a Variable's Lifetime](http://msdn.microsoft.com/en-us/04e7c56c-1db0-4fe5-a678-859a39ec654b) "},{"content":"<bpt id=\"p1\"> [</bpt>Local Type Inference<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id=\"ph1\"> </ph>","pos":[1927,2041],"source":" [Local Type Inference](../../visual-basic/programming-guide/language-features/variables/local-type-inference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Option Infer Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/option-infer-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2044,2146],"source":" [Option Infer Statement](../../visual-basic/language-reference/statements/option-infer-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Static<ept id=\"p1\">](../../visual-basic/language-reference/modifiers/static.md)</ept>","pos":[2149,2217],"source":" [Static](../../visual-basic/language-reference/modifiers/static.md)"}]}