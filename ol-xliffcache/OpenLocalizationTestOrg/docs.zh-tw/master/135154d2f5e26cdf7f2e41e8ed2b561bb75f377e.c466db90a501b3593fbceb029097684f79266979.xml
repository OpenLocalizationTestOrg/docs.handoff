{"content":"---\ntitle: \"System Functions\"\nms.date: \"03/30/2017\"\nms.assetid: b7c71b58-09e6-44ce-a3e5-a0fdb892fb86\n---\n# System Functions\nThe .NET Framework Data Provider for SQL Server (SqlClient) provides the following system functions:  \n  \n|Function|Description|  \n|--------------|-----------------|  \n|`CHECKSUM (` `value`, [`value`, [`value`]]`)`|Returns the checksum value. `CHECKSUM` is intended for use in building hash indexes.<br /><br /> **Arguments**<br /><br /> `value`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `String`, `Binary`, or `Guid`. You can specify one, two or three values.<br /><br /> **Return Value**<br /><br /> The absolute value of the specified expression.<br /><br /> **Example**<br /><br /> `SqlServer.CHECKSUM(10,100,1000.0)`|  \n|`CURRENT_TIMESTAMP ()`|Produces the current date and time in SQL Server internal format for `DateTime` values with a precision of 7 in SQL Server 2008 and a precision of 3 in SQL Server 2005.<br /><br /> **Return Value**<br /><br /> The current system date and time as a `DateTime`.<br /><br /> **Example**<br /><br /> `SqlServer.CURRENT_TIMESTAMP()`|  \n|`CURRENT_ USER` `()`|Returns the name of the current user.<br /><br /> **Return Value**<br /><br /> An ASCII `String`.<br /><br /> **Example**<br /><br /> `SqlServer.CURRENT_USER()`|  \n|`DATALENGTH` `(` `expression` `)`|Returns the number of bytes used to represent any expression.<br /><br /> **Arguments**<br /><br /> `expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`.<br /><br /> **Return Value**<br /><br /> The size of properties as an `Int32`.<br /><br /> **Example**<br /><br /> `SELECT VALUE SqlServer.DATALENGTH(P.Name)FROM`<br /><br /> `AdventureWorksEntities.Product AS P`|  \n|`HOST_NAME()`|Returns the workstation name.<br /><br /> **Return Value**<br /><br /> A Unicode `String`.<br /><br /> **Example**<br /><br /> `SqlServer.HOST_NAME()`|  \n|`ISDATE(` `expression` `)`|Determines whether an input expression is a valid date.<br /><br /> **Arguments**<br /><br /> `expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`.<br /><br /> **Return Value**<br /><br /> An `Int32`. One (1) if the input expression is a valid date. Zero (0) otherwise.<br /><br /> **Example**<br /><br /> `SqlServer.ISDATE('1/1/2006')`|  \n|`ISNUMERIC(` `expression` `)`|Determines whether an expression is a valid numeric type.<br /><br /> **Arguments**<br /><br /> `expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`.<br /><br /> **Return Value**<br /><br /> An `Int32`. One (1) if the input expression is a valid date. Zero (0) otherwise.<br /><br /> **Example**<br /><br /> `SqlServer.ISNUMERIC('21')`|  \n|`NEWID()`|Creates a unique value of type Guid.<br /><br /> **Return Value**<br /><br /> A `Guid`.<br /><br /> **Example**<br /><br /> `SqlServer.NEWID()`|  \n|`USER_NAME(` `id` `)`|Returns a database user name from a specified identification number.<br /><br /> **Arguments**<br /><br /> `expression`: An `Int32` identification number associated with a database user.<br /><br /> **Return Value**<br /><br /> A Unicode `String`.<br /><br /> **Example**<br /><br /> `SqlServer.USER_NAME(0)`|  \n  \n For more information about the string functions that SqlClient supports, see the documentation for the SQL Server version that you specified in the SqlClient provider manifest:  \n  \n|SQL Server 2000|SQL Server 2005|SQL Server 2008|  \n|---------------------|---------------------|---------------------|  \n|[System Functions Transact-SQL)](https://go.microsoft.com/fwlink/?LinkId=115918)|[System Functions Transact-SQL)](https://go.microsoft.com/fwlink/?LinkId=115917)|[System Functions (Transact-SQL)](https://go.microsoft.com/fwlink/?LinkId=115919)|  \n  \n## See also\n\n- [Entity SQL Language](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md)\n- [SqlClient for Entity Framework Functions](../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)\n","nodes":[{"pos":[4,100],"embed":true,"restype":"x-metadata","content":"title: \"System Functions\"\nms.date: \"03/30/2017\"\nms.assetid: b7c71b58-09e6-44ce-a3e5-a0fdb892fb86","nodes":[{"content":"System Functions","nodes":[{"pos":[0,16],"content":"System Functions","nodes":[{"content":"System Functions","pos":[0,16]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[107,123],"content":"System Functions","linkify":"System Functions","nodes":[{"content":"System Functions","pos":[0,16]}]},{"content":"The .NET Framework Data Provider for SQL Server (SqlClient) provides the following system functions:","pos":[124,224]},{"content":"Function","pos":[231,239]},{"content":"Description","pos":[240,251]},{"pos":[293,338],"content":"<ph id=\"ph1\">`CHECKSUM (`</ph> <ph id=\"ph2\">`value`</ph>, [<ph id=\"ph3\">`value`</ph>, [<ph id=\"ph4\">`value`</ph>]]<ph id=\"ph5\">`)`</ph>","source":"`CHECKSUM (` `value`, [`value`, [`value`]]`)`"},{"content":"Returns the checksum value.","pos":[339,366]},{"content":"<ph id=\"ph1\">`CHECKSUM`</ph> is intended for use in building hash indexes.","pos":[367,423],"source":"`CHECKSUM` is intended for use in building hash indexes."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[436,449],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`value`</ph>: A <ph id=\"ph2\">`Boolean`</ph>, <ph id=\"ph3\">`Byte`</ph>, <ph id=\"ph4\">`Int16`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`Int64`</ph>, <ph id=\"ph7\">`Single`</ph>, <ph id=\"ph8\">`Decimal`</ph>, <ph id=\"ph9\">`Double`</ph>, <ph id=\"ph10\">`DateTime`</ph>, <ph id=\"ph11\">`String`</ph>, <ph id=\"ph12\">`Binary`</ph>, or <ph id=\"ph13\">`Guid`</ph>.","pos":[462,592],"source":"`value`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `String`, `Binary`, or `Guid`."},{"content":"You can specify one, two or three values.","pos":[593,634]},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[647,663],"source":"**Return Value**"},{"content":"The absolute value of the specified expression.","pos":[676,723]},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[736,747],"source":"**Example**"},{"content":"Produces the current date and time in SQL Server internal format for <ph id=\"ph1\">`DateTime`</ph> values with a precision of 7 in SQL Server 2008 and a precision of 3 in SQL Server 2005.","pos":[823,991],"source":"Produces the current date and time in SQL Server internal format for `DateTime` values with a precision of 7 in SQL Server 2008 and a precision of 3 in SQL Server 2005."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1004,1020],"source":"**Return Value**"},{"content":"The current system date and time as a <ph id=\"ph1\">`DateTime`</ph>.","pos":[1033,1082],"source":"The current system date and time as a `DateTime`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[1095,1106],"source":"**Example**"},{"pos":[1155,1175],"content":"<ph id=\"ph1\">`CURRENT_ USER`</ph> <ph id=\"ph2\">`()`</ph>","source":"`CURRENT_ USER` `()`"},{"content":"Returns the name of the current user.","pos":[1176,1213]},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1226,1242],"source":"**Return Value**"},{"content":"An ASCII <ph id=\"ph1\">`String`</ph>.","pos":[1255,1273],"source":"An ASCII `String`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[1286,1297],"source":"**Example**"},{"pos":[1341,1374],"content":"<ph id=\"ph1\">`DATALENGTH`</ph> <ph id=\"ph2\">`(`</ph> <ph id=\"ph3\">`expression`</ph> <ph id=\"ph4\">`)`</ph>","source":"`DATALENGTH` `(` `expression` `)`"},{"content":"Returns the number of bytes used to represent any expression.","pos":[1375,1436]},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[1449,1462],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: A <ph id=\"ph2\">`Boolean`</ph>, <ph id=\"ph3\">`Byte`</ph>, <ph id=\"ph4\">`Int16`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`Int64`</ph>, <ph id=\"ph7\">`Single`</ph>, <ph id=\"ph8\">`Decimal`</ph>, <ph id=\"ph9\">`Double`</ph>, <ph id=\"ph10\">`DateTime`</ph>, <ph id=\"ph11\">`Time`</ph>, <ph id=\"ph12\">`DateTimeOffset`</ph>, <ph id=\"ph13\">`String`</ph>, <ph id=\"ph14\">`Binary`</ph>, or <ph id=\"ph15\">`Guid`</ph>.","pos":[1475,1636],"source":"`expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1649,1665],"source":"**Return Value**"},{"content":"The size of properties as an <ph id=\"ph1\">`Int32`</ph>.","pos":[1678,1715],"source":"The size of properties as an `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[1728,1739],"source":"**Example**"},{"content":"Returns the workstation name.","pos":[1868,1897]},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1910,1926],"source":"**Return Value**"},{"content":"A Unicode <ph id=\"ph1\">`String`</ph>.","pos":[1939,1958],"source":"A Unicode `String`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[1971,1982],"source":"**Example**"},{"pos":[2023,2049],"content":"<ph id=\"ph1\">`ISDATE(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`ISDATE(` `expression` `)`"},{"content":"Determines whether an input expression is a valid date.","pos":[2050,2105]},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[2118,2131],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: A <ph id=\"ph2\">`Boolean`</ph>, <ph id=\"ph3\">`Byte`</ph>, <ph id=\"ph4\">`Int16`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`Int64`</ph>, <ph id=\"ph7\">`Single`</ph>, <ph id=\"ph8\">`Decimal`</ph>, <ph id=\"ph9\">`Double`</ph>, <ph id=\"ph10\">`DateTime`</ph>, <ph id=\"ph11\">`Time`</ph>, <ph id=\"ph12\">`DateTimeOffset`</ph>, <ph id=\"ph13\">`String`</ph>, <ph id=\"ph14\">`Binary`</ph>, or <ph id=\"ph15\">`Guid`</ph>.","pos":[2144,2305],"source":"`expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[2318,2334],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[2347,2358],"source":"An `Int32`."},{"content":"One (1) if the input expression is a valid date.","pos":[2359,2407]},{"content":"Zero (0) otherwise.","pos":[2408,2427]},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[2440,2451],"source":"**Example**"},{"pos":[2499,2528],"content":"<ph id=\"ph1\">`ISNUMERIC(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`ISNUMERIC(` `expression` `)`"},{"content":"Determines whether an expression is a valid numeric type.","pos":[2529,2586]},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[2599,2612],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: A <ph id=\"ph2\">`Boolean`</ph>, <ph id=\"ph3\">`Byte`</ph>, <ph id=\"ph4\">`Int16`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`Int64`</ph>, <ph id=\"ph7\">`Single`</ph>, <ph id=\"ph8\">`Decimal`</ph>, <ph id=\"ph9\">`Double`</ph>, <ph id=\"ph10\">`DateTime`</ph>, <ph id=\"ph11\">`Time`</ph>, <ph id=\"ph12\">`DateTimeOffset`</ph>, <ph id=\"ph13\">`String`</ph>, <ph id=\"ph14\">`Binary`</ph>, or <ph id=\"ph15\">`Guid`</ph>.","pos":[2625,2786],"source":"`expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[2799,2815],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[2828,2839],"source":"An `Int32`."},{"content":"One (1) if the input expression is a valid date.","pos":[2840,2888]},{"content":"Zero (0) otherwise.","pos":[2889,2908]},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[2921,2932],"source":"**Example**"},{"content":"Creates a unique value of type Guid.","pos":[2987,3023]},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[3036,3052],"source":"**Return Value**"},{"content":"A <ph id=\"ph1\">`Guid`</ph>.","pos":[3065,3074],"source":"A `Guid`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[3087,3098],"source":"**Example**"},{"pos":[3135,3156],"content":"<ph id=\"ph1\">`USER_NAME(`</ph> <ph id=\"ph2\">`id`</ph> <ph id=\"ph3\">`)`</ph>","source":"`USER_NAME(` `id` `)`"},{"content":"Returns a database user name from a specified identification number.","pos":[3157,3225]},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[3238,3251],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: An <ph id=\"ph2\">`Int32`</ph> identification number associated with a database user.","pos":[3264,3343],"source":"`expression`: An `Int32` identification number associated with a database user."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[3356,3372],"source":"**Return Value**"},{"content":"A Unicode <ph id=\"ph1\">`String`</ph>.","pos":[3385,3404],"source":"A Unicode `String`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[3417,3428],"source":"**Example**"},{"content":"For more information about the string functions that SqlClient supports, see the documentation for the SQL Server version that you specified in the SqlClient provider manifest:","pos":[3473,3649]},{"content":"SQL Server 2000","pos":[3656,3671]},{"content":"SQL Server 2005","pos":[3672,3687]},{"content":"SQL Server 2008","pos":[3688,3703]},{"pos":[3778,3858],"content":"<bpt id=\"p1\">[</bpt>System Functions Transact-SQL)<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=115918)</ept>","source":"[System Functions Transact-SQL)](https://go.microsoft.com/fwlink/?LinkId=115918)"},{"pos":[3859,3939],"content":"<bpt id=\"p1\">[</bpt>System Functions Transact-SQL)<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=115917)</ept>","source":"[System Functions Transact-SQL)](https://go.microsoft.com/fwlink/?LinkId=115917)"},{"pos":[3940,4021],"content":"<bpt id=\"p1\">[</bpt>System Functions (Transact-SQL)<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=115919)</ept>","source":"[System Functions (Transact-SQL)](https://go.microsoft.com/fwlink/?LinkId=115919)"},{"pos":[4031,4039],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4043,4152],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Language<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md)</ept>","source":"[Entity SQL Language](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md)"},{"pos":[4155,4273],"content":"<bpt id=\"p1\">[</bpt>SqlClient for Entity Framework Functions<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)</ept>","source":"[SqlClient for Entity Framework Functions](../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)"}]}