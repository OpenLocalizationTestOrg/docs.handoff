{"content":"---\ntitle: \"Multidimensional Arrays (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"arrays [C#], multidimensional\"\n  - \"multidimensional arrays [C#]\"\nms.assetid: 020ce02e-7dff-4273-8e53-bf0b33747232\ncaps.latest.revision: 16\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Multidimensional Arrays (C# Programming Guide)\nArrays can have more than one dimension. For example, the following declaration creates a two-dimensional array of four rows and two columns.  \n  \n [!code-cs[csProgGuideArrays#11](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_1.cs)]  \n  \n The following declaration creates an array of three dimensions, 4, 2, and 3.  \n  \n [!code-cs[csProgGuideArrays#12](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_2.cs)]  \n  \n## Array Initialization  \n You can initialize the array upon declaration, as is shown in the following example.  \n  \n [!code-cs[csProgGuideArrays#13](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_3.cs)]  \n  \n You also can initialize the array without specifying the rank.  \n  \n [!code-cs[csProgGuideArrays#14](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_4.cs)]  \n  \n If you choose to declare an array variable without initialization, you must use the `new` operator to assign an array to the variable. The use of `new` is shown in the following example.  \n  \n [!code-cs[csProgGuideArrays#15](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_5.cs)]  \n  \n The following example assigns a value to a particular array element.  \n  \n [!code-cs[csProgGuideArrays#16](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_6.cs)]  \n  \n Similarly, the following example gets the value of a particular array element and assigns it to variable `elementValue`.  \n  \n [!code-cs[csProgGuideArrays#42](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_7.cs)]  \n  \n The following code example initializes the array elements to default values (except for jagged arrays).  \n  \n [!code-cs[csProgGuideArrays#17](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_8.cs)]  \n  \n## See Also  \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Arrays](../../../csharp/programming-guide/arrays/index.md)   \n [Single-Dimensional Arrays](../../../csharp/programming-guide/arrays/single-dimensional-arrays.md)   \n [Jagged Arrays](../../../csharp/programming-guide/arrays/jagged-arrays.md)","nodes":[{"pos":[12,75],"content":"Multidimensional Arrays (C# Programming Guide) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Multidimensional Arrays (C# Programming Guide) | Microsoft Docs","pos":[0,63]}]},{"pos":[596,642],"content":"Multidimensional Arrays (C# Programming Guide)","linkify":"Multidimensional Arrays (C# Programming Guide)","nodes":[{"content":"Multidimensional Arrays (C# Programming Guide)","pos":[0,46]}]},{"content":"Arrays can have more than one dimension.","pos":[643,683]},{"content":"For example, the following declaration creates a two-dimensional array of four rows and two columns.","pos":[684,784]},{"pos":[791,913],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideArrays#11<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideArrays#11](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_1.cs)]"},{"content":"The following declaration creates an array of three dimensions, 4, 2, and 3.","pos":[920,996]},{"pos":[1003,1125],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideArrays#12<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideArrays#12](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_2.cs)]"},{"pos":[1134,1154],"content":"Array Initialization","linkify":"Array Initialization","nodes":[{"content":"Array Initialization","pos":[0,20]}]},{"content":"You can initialize the array upon declaration, as is shown in the following example.","pos":[1158,1242]},{"pos":[1249,1371],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideArrays#13<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_3.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideArrays#13](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_3.cs)]"},{"content":"You also can initialize the array without specifying the rank.","pos":[1378,1440]},{"pos":[1447,1569],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideArrays#14<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_4.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideArrays#14](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_4.cs)]"},{"content":"If you choose to declare an array variable without initialization, you must use the <ph id=\"ph1\">`new`</ph> operator to assign an array to the variable.","pos":[1576,1710],"source":"If you choose to declare an array variable without initialization, you must use the `new` operator to assign an array to the variable."},{"content":"The use of <ph id=\"ph1\">`new`</ph> is shown in the following example.","pos":[1711,1762],"source":" The use of `new` is shown in the following example."},{"pos":[1769,1891],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideArrays#15<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_5.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideArrays#15](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_5.cs)]"},{"content":"The following example assigns a value to a particular array element.","pos":[1898,1966]},{"pos":[1973,2095],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideArrays#16<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_6.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideArrays#16](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_6.cs)]"},{"pos":[2102,2222],"content":"Similarly, the following example gets the value of a particular array element and assigns it to variable <ph id=\"ph1\">`elementValue`</ph>.","source":"Similarly, the following example gets the value of a particular array element and assigns it to variable `elementValue`."},{"pos":[2229,2351],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideArrays#42<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_7.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideArrays#42](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_7.cs)]"},{"content":"The following code example initializes the array elements to default values (except for jagged arrays).","pos":[2358,2461]},{"pos":[2468,2590],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideArrays#17<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_8.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideArrays#17](../../../csharp/programming-guide/arrays/codesnippet/CSharp/multidimensional-arrays_8.cs)]"},{"pos":[2599,2607],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2611,2678],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2681,2742],"source":" [Arrays](../../../csharp/programming-guide/arrays/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Single-Dimensional Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/single-dimensional-arrays.md)</ept><ph id=\"ph1\"> </ph>","pos":[2745,2845],"source":" [Single-Dimensional Arrays](../../../csharp/programming-guide/arrays/single-dimensional-arrays.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Jagged Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/jagged-arrays.md)</ept>","pos":[2848,2923],"source":" [Jagged Arrays](../../../csharp/programming-guide/arrays/jagged-arrays.md)"}]}