{"content":"---\ntitle: \"Understanding Generated Client Code | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: c3f6e4b0-1131-4c94-aa39-a197c5c2f2ca\ncaps.latest.revision: 9\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Understanding Generated Client Code\nThe [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) generates client code and a client application configuration file for use in building client applications. This topic provides a tour of generated code examples for standard service contract scenarios. [!INCLUDE[crabout](../../../../includes/crabout-md.md)] building a client application using the generated code, see [WCF Client Overview](../../../../docs/framework/wcf/wcf-client-overview.md).  \n  \n## Overview  \n If you use [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)] to generate [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] client types for your project, you typically do not need to examine the generated client code. If you are not using a development environment that performs the same services for you, you can use a tool such as Svcutil.exe to generate client code and then use that code to develop your client application.  \n  \n Because Svcutil.exe has a number of options that modify the generated type information, this topic does not discuss all scenarios. However, the following standard tasks involve locating generated code:  \n  \n-   Identifying service contract interfaces.  \n  \n-   Identifying the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] client class.  \n  \n-   Identifying data types.  \n  \n-   Identifying callback contracts for duplex services.  \n  \n-   Identifying the helper service contract channel interface.  \n  \n### Finding Service Contract Interfaces  \n To locate the interfaces that model service contracts, search for interfaces that are marked with the <xref:System.ServiceModel.ServiceContractAttribute?displayProperty=fullName> attribute. Often this attribute can be difficult to locate with a quick read due to the presence of other attributes and the explicit properties set on the attribute itself. Remember that the service contract interface and the client contract interface are two different types. The following code example shows the original service contract.  \n  \n [!code-csharp[C_GeneratedCodeFiles#22](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#22)]  \n  \n The following code example shows the same service contract as generated by Svcutil.exe.  \n  \n [!code-csharp[C_GeneratedCodeFiles#12](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#12)]  \n  \n You can use the generated service contract interface along with the <xref:System.ServiceModel.ChannelFactory?displayProperty=fullName> class to create a [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] channel object with which to invoke service operations. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][How to: Use the ChannelFactory](../../../../docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md).  \n  \n### Finding WCF Client Classes  \n To locate the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] client class that implements the service contract you want to use, search for an extension of <xref:System.ServiceModel.ClientBase%601?displayProperty=fullName>, where the type parameter is the service contract interface that you previously located and that extends that interface. The following code example shows the <xref:System.ServiceModel.ClientBase%601> class of type `ISampleService`.  \n  \n [!code-csharp[C_GeneratedCodeFiles#14](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#14)]  \n  \n You can use this [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] client class by creating a new instance of it and calling the methods it implements. Those methods invoke the service operation with which it is designed and configured to interact. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][WCF Client Overview](../../../../docs/framework/wcf/wcf-client-overview.md).  \n  \n> [!NOTE]\n>  When SvcUtil.exe generates a WCF client class, it adds a <xref:System.Diagnostics.DebuggerStepThroughAttribute> to the client class that prevents debuggers from stepping through the WCF client class.  \n  \n### Finding Data Types  \n To locate data types in the generated code, the most basic mechanism is to identify the type name specified in a contract and search the code for that type declaration. For example, the following contract specifies that the `SampleMethod` can return a SOAP fault of type `microsoft.wcf.documentation.SampleFault`.  \n  \n [!code-csharp[C_GeneratedCodeFiles#11](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#11)]  \n  \n Searching for `SampleFault` locates the following type declaration.  \n  \n [!code-csharp[C_GeneratedCodeFiles#30](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#30)]  \n  \n In this case the data type is the detail type thrown by a specific exception on the client, a <xref:System.ServiceModel.FaultException%601> where the detail type parameter is `microsoft.wcf.documentation.SampleFault`. [!INCLUDE[crabout](../../../../includes/crabout-md.md)] data types, see [Specifying Data Transfer in Service Contracts](../../../../docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md). [!INCLUDE[crabout](../../../../includes/crabout-md.md)] handling exceptions in clients, see [Sending and Receiving Faults](../../../../docs/framework/wcf/sending-and-receiving-faults.md).  \n  \n### Finding Callback Contracts for Duplex Services  \n If you locate a service contract for which the contract interface specifies a value for the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A?displayProperty=fullName> property, then that contract specifies a duplex contract. Duplex contracts require the client application to create a callback class that implements the callback contract and pass an instance of that class to the <xref:System.ServiceModel.DuplexClientBase%601?displayProperty=fullName> or <xref:System.ServiceModel.DuplexChannelFactory%601?displayProperty=fullName> used to communicate with the service. [!INCLUDE[crabout](../../../../includes/crabout-md.md)] duplex clients, see [How to: Access Services with a Duplex Contract](../../../../docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md).  \n  \n The following contract specifies a callback contract of type `SampleDuplexHelloCallback`.  \n  \n [!code-csharp[C_GeneratedCodeFiles#2](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/duplexproxycode.cs#2)]\n [!code-vb[C_GeneratedCodeFiles#2](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_generatedcodefiles/vb/duplexproxycode.vb#2)]  \n  \n Searching for that callback contract locates the following interface that the client application must implement.  \n  \n [!code-csharp[C_GeneratedCodeFiles#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/duplexproxycode.cs#4)]\n [!code-vb[C_GeneratedCodeFiles#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_generatedcodefiles/vb/duplexproxycode.vb#4)]  \n  \n### Finding Service Contract Channel Interfaces  \n When using the <xref:System.ServiceModel.ChannelFactory> class with a service contract interface, you must cast to the <xref:System.ServiceModel.IClientChannel?displayProperty=fullName> interface to explicitly open, close, or abort the channel. To make it easier to work with, the Svcutil.exe tool also generates a helper interface that implements both the service contract interface and <xref:System.ServiceModel.IClientChannel> to enable you to interact with the client channel infrastructure without having to cast. The following code shows the definition of a helper client channel that implements the preceding service contract.  \n  \n [!code-csharp[C_GeneratedCodeFiles#13](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#13)]  \n  \n## See Also  \n [WCF Client Overview](../../../../docs/framework/wcf/wcf-client-overview.md)","nodes":[{"pos":[12,64],"content":"Understanding Generated Client Code | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Understanding Generated Client Code | Microsoft Docs","pos":[0,52]}]},{"pos":[362,397],"content":"Understanding Generated Client Code","linkify":"Understanding Generated Client Code","nodes":[{"content":"Understanding Generated Client Code","pos":[0,35]}]},{"content":"The <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> generates client code and a client application configuration file for use in building client applications.","pos":[398,641],"source":"The [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) generates client code and a client application configuration file for use in building client applications."},{"content":"This topic provides a tour of generated code examples for standard service contract scenarios.","pos":[642,736]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> building a client application using the generated code, see <bpt id=\"p1\">[</bpt>WCF Client Overview<ept id=\"p1\">](../../../../docs/framework/wcf/wcf-client-overview.md)</ept>.","pos":[737,930],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] building a client application using the generated code, see [WCF Client Overview](../../../../docs/framework/wcf/wcf-client-overview.md)."},{"pos":[939,947],"content":"Overview","linkify":"Overview","nodes":[{"content":"Overview","pos":[0,8]}]},{"content":"If you use <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph> to generate <ph id=\"ph2\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> client types for your project, you typically do not need to examine the generated client code.","pos":[951,1178],"source":"If you use [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)] to generate [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] client types for your project, you typically do not need to examine the generated client code."},{"content":"If you are not using a development environment that performs the same services for you, you can use a tool such as Svcutil.exe to generate client code and then use that code to develop your client application.","pos":[1179,1388]},{"content":"Because Svcutil.exe has a number of options that modify the generated type information, this topic does not discuss all scenarios.","pos":[1395,1525]},{"content":"However, the following standard tasks involve locating generated code:","pos":[1526,1596]},{"content":"Identifying service contract interfaces.","pos":[1606,1646]},{"pos":[1656,1741],"content":"Identifying the <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> client class.","source":"Identifying the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] client class."},{"content":"Identifying data types.","pos":[1751,1774]},{"content":"Identifying callback contracts for duplex services.","pos":[1784,1835]},{"content":"Identifying the helper service contract channel interface.","pos":[1845,1903]},{"pos":[1913,1948],"content":"Finding Service Contract Interfaces","linkify":"Finding Service Contract Interfaces","nodes":[{"content":"Finding Service Contract Interfaces","pos":[0,35]}]},{"content":"To locate the interfaces that model service contracts, search for interfaces that are marked with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute?displayProperty=fullName&gt;</ph> attribute.","pos":[1952,2141],"source":"To locate the interfaces that model service contracts, search for interfaces that are marked with the <xref:System.ServiceModel.ServiceContractAttribute?displayProperty=fullName> attribute."},{"content":"Often this attribute can be difficult to locate with a quick read due to the presence of other attributes and the explicit properties set on the attribute itself.","pos":[2142,2304]},{"content":"Remember that the service contract interface and the client contract interface are two different types.","pos":[2305,2408]},{"content":"The following code example shows the original service contract.","pos":[2409,2472]},{"pos":[2479,2611],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_GeneratedCodeFiles#22<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#22)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[C_GeneratedCodeFiles#22](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#22)]"},{"content":"The following code example shows the same service contract as generated by Svcutil.exe.","pos":[2618,2705]},{"pos":[2712,2844],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_GeneratedCodeFiles#12<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#12)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[C_GeneratedCodeFiles#12](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#12)]"},{"content":"You can use the generated service contract interface along with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ChannelFactory?displayProperty=fullName&gt;</ph> class to create a <ph id=\"ph2\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> channel object with which to invoke service operations.","pos":[2851,3115],"source":"You can use the generated service contract interface along with the <xref:System.ServiceModel.ChannelFactory?displayProperty=fullName> class to create a [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] channel object with which to invoke service operations."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>How to: Use the ChannelFactory<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)</ept>.","pos":[3116,3289],"source":"[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][How to: Use the ChannelFactory](../../../../docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)."},{"pos":[3299,3325],"content":"Finding WCF Client Classes","linkify":"Finding WCF Client Classes","nodes":[{"content":"Finding WCF Client Classes","pos":[0,26]}]},{"content":"To locate the <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> client class that implements the service contract you want to use, search for an extension of <ph id=\"ph2\">&lt;xref:System.ServiceModel.ClientBase%601?displayProperty=fullName&gt;</ph>, where the type parameter is the service contract interface that you previously located and that extends that interface.","pos":[3329,3680],"source":"To locate the [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] client class that implements the service contract you want to use, search for an extension of <xref:System.ServiceModel.ClientBase%601?displayProperty=fullName>, where the type parameter is the service contract interface that you previously located and that extends that interface."},{"content":"The following code example shows the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class of type <ph id=\"ph2\">`ISampleService`</ph>.","pos":[3681,3791],"source":" The following code example shows the <xref:System.ServiceModel.ClientBase%601> class of type `ISampleService`."},{"pos":[3798,3930],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_GeneratedCodeFiles#14<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#14)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[C_GeneratedCodeFiles#14](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#14)]"},{"content":"You can use this <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> client class by creating a new instance of it and calling the methods it implements.","pos":[3937,4094],"source":"You can use this [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] client class by creating a new instance of it and calling the methods it implements."},{"content":"Those methods invoke the service operation with which it is designed and configured to interact.","pos":[4095,4191]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>WCF Client Overview<ept id=\"p1\">](../../../../docs/framework/wcf/wcf-client-overview.md)</ept>.","pos":[4192,4328],"source":"[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][WCF Client Overview](../../../../docs/framework/wcf/wcf-client-overview.md)."},{"pos":[4336,4546],"content":"[!NOTE]\n When SvcUtil.exe generates a WCF client class, it adds a <xref:System.Diagnostics.DebuggerStepThroughAttribute> to the client class that prevents debuggers from stepping through the WCF client class.","leadings":["","> "],"nodes":[{"content":"When SvcUtil.exe generates a WCF client class, it adds a <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerStepThroughAttribute&gt;</ph> to the client class that prevents debuggers from stepping through the WCF client class.","pos":[9,208],"source":" When SvcUtil.exe generates a WCF client class, it adds a <xref:System.Diagnostics.DebuggerStepThroughAttribute> to the client class that prevents debuggers from stepping through the WCF client class."}]},{"pos":[4556,4574],"content":"Finding Data Types","linkify":"Finding Data Types","nodes":[{"content":"Finding Data Types","pos":[0,18]}]},{"content":"To locate data types in the generated code, the most basic mechanism is to identify the type name specified in a contract and search the code for that type declaration.","pos":[4578,4746]},{"content":"For example, the following contract specifies that the <ph id=\"ph1\">`SampleMethod`</ph> can return a SOAP fault of type <ph id=\"ph2\">`microsoft.wcf.documentation.SampleFault`</ph>.","pos":[4747,4891],"source":" For example, the following contract specifies that the `SampleMethod` can return a SOAP fault of type `microsoft.wcf.documentation.SampleFault`."},{"pos":[4898,5030],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_GeneratedCodeFiles#11<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#11)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[C_GeneratedCodeFiles#11](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#11)]"},{"pos":[5037,5104],"content":"Searching for <ph id=\"ph1\">`SampleFault`</ph> locates the following type declaration.","source":"Searching for `SampleFault` locates the following type declaration."},{"pos":[5111,5243],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_GeneratedCodeFiles#30<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#30)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[C_GeneratedCodeFiles#30](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#30)]"},{"content":"In this case the data type is the detail type thrown by a specific exception on the client, a <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> where the detail type parameter is <ph id=\"ph2\">`microsoft.wcf.documentation.SampleFault`</ph>.","pos":[5250,5467],"source":"In this case the data type is the detail type thrown by a specific exception on the client, a <xref:System.ServiceModel.FaultException%601> where the detail type parameter is `microsoft.wcf.documentation.SampleFault`."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> data types, see <bpt id=\"p1\">[</bpt>Specifying Data Transfer in Service Contracts<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>.","pos":[5468,5685],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] data types, see [Specifying Data Transfer in Service Contracts](../../../../docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> handling exceptions in clients, see <bpt id=\"p1\">[</bpt>Sending and Receiving Faults<ept id=\"p1\">](../../../../docs/framework/wcf/sending-and-receiving-faults.md)</ept>.","pos":[5686,5873],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] handling exceptions in clients, see [Sending and Receiving Faults](../../../../docs/framework/wcf/sending-and-receiving-faults.md)."},{"pos":[5883,5929],"content":"Finding Callback Contracts for Duplex Services","linkify":"Finding Callback Contracts for Duplex Services","nodes":[{"content":"Finding Callback Contracts for Duplex Services","pos":[0,46]}]},{"content":"If you locate a service contract for which the contract interface specifies a value for the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A?displayProperty=fullName&gt;</ph> property, then that contract specifies a duplex contract.","pos":[5933,6179],"source":"If you locate a service contract for which the contract interface specifies a value for the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A?displayProperty=fullName> property, then that contract specifies a duplex contract."},{"content":"Duplex contracts require the client application to create a callback class that implements the callback contract and pass an instance of that class to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.DuplexClientBase%601?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.DuplexChannelFactory%601?displayProperty=fullName&gt;</ph> used to communicate with the service.","pos":[6180,6525],"source":" Duplex contracts require the client application to create a callback class that implements the callback contract and pass an instance of that class to the <xref:System.ServiceModel.DuplexClientBase%601?displayProperty=fullName> or <xref:System.ServiceModel.DuplexChannelFactory%601?displayProperty=fullName> used to communicate with the service."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> duplex clients, see <bpt id=\"p1\">[</bpt>How to: Access Services with a Duplex Contract<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)</ept>.","pos":[6526,6748],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] duplex clients, see [How to: Access Services with a Duplex Contract](../../../../docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)."},{"pos":[6755,6844],"content":"The following contract specifies a callback contract of type <ph id=\"ph1\">`SampleDuplexHelloCallback`</ph>.","source":"The following contract specifies a callback contract of type `SampleDuplexHelloCallback`."},{"pos":[6851,7126],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_GeneratedCodeFiles#2<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/duplexproxycode.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>C_GeneratedCodeFiles#2<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_generatedcodefiles/vb/duplexproxycode.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[C_GeneratedCodeFiles#2](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/duplexproxycode.cs#2)]\n [!code-vb[C_GeneratedCodeFiles#2](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_generatedcodefiles/vb/duplexproxycode.vb#2)]"},{"content":"Searching for that callback contract locates the following interface that the client application must implement.","pos":[7133,7245]},{"pos":[7252,7527],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_GeneratedCodeFiles#4<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/duplexproxycode.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>C_GeneratedCodeFiles#4<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_generatedcodefiles/vb/duplexproxycode.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[C_GeneratedCodeFiles#4](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/duplexproxycode.cs#4)]\n [!code-vb[C_GeneratedCodeFiles#4](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/c_generatedcodefiles/vb/duplexproxycode.vb#4)]"},{"pos":[7537,7580],"content":"Finding Service Contract Channel Interfaces","linkify":"Finding Service Contract Channel Interfaces","nodes":[{"content":"Finding Service Contract Channel Interfaces","pos":[0,43]}]},{"content":"When using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> class with a service contract interface, you must cast to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel?displayProperty=fullName&gt;</ph> interface to explicitly open, close, or abort the channel.","pos":[7584,7828],"source":"When using the <xref:System.ServiceModel.ChannelFactory> class with a service contract interface, you must cast to the <xref:System.ServiceModel.IClientChannel?displayProperty=fullName> interface to explicitly open, close, or abort the channel."},{"content":"To make it easier to work with, the Svcutil.exe tool also generates a helper interface that implements both the service contract interface and <ph id=\"ph1\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> to enable you to interact with the client channel infrastructure without having to cast.","pos":[7829,8102],"source":" To make it easier to work with, the Svcutil.exe tool also generates a helper interface that implements both the service contract interface and <xref:System.ServiceModel.IClientChannel> to enable you to interact with the client channel infrastructure without having to cast."},{"content":"The following code shows the definition of a helper client channel that implements the preceding service contract.","pos":[8103,8217]},{"pos":[8224,8356],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_GeneratedCodeFiles#13<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#13)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[C_GeneratedCodeFiles#13](../../../../samples/snippets/csharp/VS_Snippets_CFX/c_generatedcodefiles/cs/proxycode.cs#13)]"},{"pos":[8365,8373],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[8377,8453],"content":"<bpt id=\"p1\">[</bpt>WCF Client Overview<ept id=\"p1\">](../../../../docs/framework/wcf/wcf-client-overview.md)</ept>","source":"[WCF Client Overview](../../../../docs/framework/wcf/wcf-client-overview.md)"}]}