{"content":"---\ntitle: Tools for porting to .NET Core\ndescription: Learn about some of the tools you can use to port to .NET Core\nauthor: cartermp\nms.author: mairaw\nms.date: 12/07/2018\n---\n\n# Tools to help with porting to .NET Core\n\nYou may find the tools listed in this article helpful when porting:\n\n* [.NET Portability Analyzer](../../standard/analyzers/portability-analyzer.md), a toolchain that can generate a report of how portable your code is between .NET Framework and .NET Core:\n   As a [command line tool](https://github.com/Microsoft/dotnet-apiport/releases)\n   As a [Visual Studio Extension](https://visualstudiogallery.msdn.microsoft.com/1177943e-cfb7-4822-a8a6-e56c7905292b)\n* [.NET API analyzer](../../standard/analyzers/api-analyzer.md) - A Roslyn analyzer that discovers potential compatibility risks for C# APIs on different platforms and detects calls to deprecated APIs.\n\nAdditionally, you can attempt to port smaller solutions or individual projects to the .NET Core project file format with the [CsprojToVs2017](https://github.com/hvanbakel/CsprojToVs2017) tool.\n\n> [!WARNING] \n> CsprojToVs2017 is a third-party tool. There is no guarantee that it will work for all of your projects, and it may cause subtle changes in behavior that you depend on. CsprojToVs2017 should be used as a _starting point_ that automates the basic things that can be automated. It is not a guaranteed solution to migrating project file formats.","nodes":[{"pos":[4,172],"embed":true,"restype":"x-metadata","content":"title: Tools for porting to .NET Core\ndescription: Learn about some of the tools you can use to port to .NET Core\nauthor: cartermp\nms.author: mairaw\nms.date: 12/07/2018","nodes":[{"content":"Tools for porting to .NET Core","nodes":[{"pos":[0,30],"content":"Tools for porting to .NET Core","nodes":[{"content":"Tools for porting to .NET Core","pos":[0,30]}]}],"path":["title"],"nosxs":false},{"content":"Learn about some of the tools you can use to port to .NET Core","nodes":[{"pos":[0,62],"content":"Learn about some of the tools you can use to port to .NET Core","nodes":[{"content":"Learn about some of the tools you can use to port to .NET Core","pos":[0,62]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[180,219],"content":"Tools to help with porting to .NET Core","linkify":"Tools to help with porting to .NET Core","nodes":[{"content":"Tools to help with porting to .NET Core","pos":[0,39]}]},{"content":"You may find the tools listed in this article helpful when porting:","pos":[221,288]},{"pos":[292,677],"content":"<bpt id=\"p1\">[</bpt>.NET Portability Analyzer<ept id=\"p1\">](../../standard/analyzers/portability-analyzer.md)</ept>, a toolchain that can generate a report of how portable your code is between .NET Framework and .NET Core:  As a <bpt id=\"p2\">[</bpt>command line tool<ept id=\"p2\">](https://github.com/Microsoft/dotnet-apiport/releases)</ept> As a <bpt id=\"p3\">[</bpt>Visual Studio Extension<ept id=\"p3\">](https://visualstudiogallery.msdn.microsoft.com/1177943e-cfb7-4822-a8a6-e56c7905292b)</ept>","leadings":["","  ","  "],"source":"[.NET Portability Analyzer](../../standard/analyzers/portability-analyzer.md), a toolchain that can generate a report of how portable your code is between .NET Framework and .NET Core:\n As a [command line tool](https://github.com/Microsoft/dotnet-apiport/releases)\n As a [Visual Studio Extension](https://visualstudiogallery.msdn.microsoft.com/1177943e-cfb7-4822-a8a6-e56c7905292b)"},{"pos":[680,879],"content":"<bpt id=\"p1\">[</bpt>.NET API analyzer<ept id=\"p1\">](../../standard/analyzers/api-analyzer.md)</ept> - A Roslyn analyzer that discovers potential compatibility risks for C# APIs on different platforms and detects calls to deprecated APIs.","source":"[.NET API analyzer](../../standard/analyzers/api-analyzer.md) - A Roslyn analyzer that discovers potential compatibility risks for C# APIs on different platforms and detects calls to deprecated APIs."},{"pos":[881,1073],"content":"Additionally, you can attempt to port smaller solutions or individual projects to the .NET Core project file format with the <bpt id=\"p1\">[</bpt>CsprojToVs2017<ept id=\"p1\">](https://github.com/hvanbakel/CsprojToVs2017)</ept> tool.","source":"Additionally, you can attempt to port smaller solutions or individual projects to the .NET Core project file format with the [CsprojToVs2017](https://github.com/hvanbakel/CsprojToVs2017) tool."},{"pos":[1077,1432],"content":"[!WARNING] \nCsprojToVs2017 is a third-party tool. There is no guarantee that it will work for all of your projects, and it may cause subtle changes in behavior that you depend on. CsprojToVs2017 should be used as a _starting point_ that automates the basic things that can be automated. It is not a guaranteed solution to migrating project file formats.","leadings":["","> "],"nodes":[{"content":"CsprojToVs2017 is a third-party tool. There is no guarantee that it will work for all of your projects, and it may cause subtle changes in behavior that you depend on. CsprojToVs2017 should be used as a _starting point_ that automates the basic things that can be automated. It is not a guaranteed solution to migrating project file formats.","pos":[12,353],"nodes":[{"content":"CsprojToVs2017 is a third-party tool.","pos":[0,37]},{"content":"There is no guarantee that it will work for all of your projects, and it may cause subtle changes in behavior that you depend on.","pos":[38,167]},{"content":"CsprojToVs2017 should be used as a <bpt id=\"p1\">_</bpt>starting point<ept id=\"p1\">_</ept> that automates the basic things that can be automated.","pos":[168,274],"source":" CsprojToVs2017 should be used as a _starting point_ that automates the basic things that can be automated."},{"content":"It is not a guaranteed solution to migrating project file formats.","pos":[275,341]}]}]}]}