<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">63010a4c1e38bf4bee3669b66beb5c6367582252</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\concepts\linq\querying-an-xdocument-vs-querying-an-xelement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16d55a46ddef7f84a640e314570d853263359bb0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">753a471e739cecd3c867bc9c4c0d98c6386d1ba6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Querying an XDocument vs. Querying an XElement (C#) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Querying an XDocument vs. Querying an XElement (C#)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you load a document via <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt;</ph>, you will notice that you have to write queries slightly differently than when you load via <ph id="ph2">&lt;xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Comparison of XDocument.Load and XElement.Load</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you load an XML document into an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> via <ph id="ph2">&lt;xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph> at the root of the XML tree contains the root element of the loaded document.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, when you load the same XML document into an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> via <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt;</ph>, the root of the tree is an <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> node, and the root element of the loaded document is the one allowed child <ph id="ph4">&lt;xref:System.Xml.Linq.XElement&gt;</ph> node of the <ph id="ph5">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> axes operate relative to the root node.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This first example loads an XML tree using <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It then queries for the child elements of the root of the tree.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As expected, this example produces the following output:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example is the same as the one above, with the exception that the XML tree is loaded into an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> instead of an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Notice that the same query returned the one <ph id="ph1">`Root`</ph> node instead of the three child nodes.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>One approach to dealing with this is to use the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Root%2A&gt;</ph> property before accessing the axes methods, as follows:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This query now performs in the same way as the query on the tree rooted in <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The example produces the following output:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic Queries (LINQ to XML) (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>