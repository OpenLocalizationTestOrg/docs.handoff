{"content":"---\ntitle: \"Compiler Error CS1940\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS1940\"\nhelpviewer_keywords: \n  - \"CS1940\"\nms.assetid: 546e9bba-725d-4ea9-826f-37ec9d832add\n---\n# Compiler Error CS1940\nMultiple implementations of the query pattern were found for source type 'type'. Ambiguous call to 'method'.  \n  \n This error is generated when multiple implementations of a query method are defined and the compiler cannot disambiguate which one is best to use for the query. In the following example, both versions of `Select` have the same signature, because they both accept one `int` as an input parameter and have `int` as a return value.  \n  \n## To correct this error  \n  \n1.  Provide only one implementation for each method.  \n  \n## Example  \n The following code generates CS1940:  \n  \n```csharp  \n// cs1940.cs  \nusing System; //must include explicitly for types defined in 3.5  \nclass Test  \n{  \n    public delegate int Dele(int x);  \n    int num = 0;  \n    public int Select(Func<int, int> d)  \n    {  \n        return d(this.num);  \n    }  \n    public int Select(Dele d) // CS1940  \n    {  \n        return d(this.num) + 1;  \n    }  \n    public static void Main()  \n    {  \n        var q = from x in new Test()  \n        select x;  \n    }  \n}  \n```  \n  \n## See also\n\n- [Standard Query Operators Overview](../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)\n","nodes":[{"pos":[4,165],"embed":true,"restype":"x-metadata","content":"title: \"Compiler Error CS1940\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS1940\"\nhelpviewer_keywords: \n  - \"CS1940\"\nms.assetid: 546e9bba-725d-4ea9-826f-37ec9d832add","nodes":[{"content":"Compiler Error CS1940","nodes":[{"pos":[0,21],"content":"Compiler Error CS1940","nodes":[{"content":"Compiler Error CS1940","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[172,193],"content":"Compiler Error CS1940","linkify":"Compiler Error CS1940","nodes":[{"content":"Compiler Error CS1940","pos":[0,21]}]},{"content":"Multiple implementations of the query pattern were found for source type 'type'.","pos":[194,274]},{"content":"Ambiguous call to 'method'.","pos":[275,302]},{"content":"This error is generated when multiple implementations of a query method are defined and the compiler cannot disambiguate which one is best to use for the query.","pos":[309,469]},{"content":"In the following example, both versions of <ph id=\"ph1\">`Select`</ph> have the same signature, because they both accept one <ph id=\"ph2\">`int`</ph> as an input parameter and have <ph id=\"ph3\">`int`</ph> as a return value.","pos":[470,637],"source":" In the following example, both versions of `Select` have the same signature, because they both accept one `int` as an input parameter and have `int` as a return value."},{"pos":[646,667],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Provide only one implementation for each method.","pos":[677,725]},{"pos":[734,741],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code generates CS1940:","pos":[745,781]},{"pos":[1259,1267],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1271,1389],"content":"<bpt id=\"p1\">[</bpt>Standard Query Operators Overview<ept id=\"p1\">](../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept>","source":"[Standard Query Operators Overview](../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)"}]}