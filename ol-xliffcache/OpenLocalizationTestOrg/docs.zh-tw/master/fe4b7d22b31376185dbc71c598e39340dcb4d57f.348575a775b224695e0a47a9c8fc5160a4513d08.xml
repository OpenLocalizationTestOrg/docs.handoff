{"content":"---\ntitle: \"Formulate Joins and Cross-Product Queries | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: d8072ede-0521-4670-9bec-1778ceeb875b\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Formulate Joins and Cross-Product Queries\nThe following examples show how to combine results from multiple tables.  \n  \n## Example  \n The following example uses foreign key navigation in the `From` clause in [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] (`from` clause in C#) to select all orders for customers in London.  \n  \n [!code-csharp[DLinqQueryExamples#47](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#47)]\n [!code-vb[DLinqQueryExamples#47](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#47)]  \n  \n## Example  \n The following example uses foreign key navigation in the `Where` clause in [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] (`where` clause in C#) to filter for out-of-stock `Products` whose `Supplier` is in the United States.  \n  \n [!code-csharp[DLinqQueryExamples#48](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#48)]\n [!code-vb[DLinqQueryExamples#48](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#48)]  \n  \n## Example  \n The following example uses foreign key navigation in the `From` clause in [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] (`from` clause in C#) to filter for employees in Seattle and to list their territories.  \n  \n [!code-csharp[DLinqQueryExamples#49](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#49)]  \n  \n## Example  \n The following example uses foreign key navigation in the `Select` clause in [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] (`select` clause in C#) to filter for pairs of employees where one employee reports to the other and where both employees are from the same `City`.  \n  \n [!code-csharp[DLinqQueryExamples#50](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#50)]\n [!code-vb[DLinqQueryExamples#50](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#50)]  \n  \n## Example  \n The following [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] example looks for all customers and orders, makes sure that the orders are matched to customers, and guarantees that for every customer in that list, a contact name is provided.  \n  \n [!code-vb[DLinqQueryExamples#50v](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#50v)]  \n  \n## Example  \n The following example explicitly joins two tables and projects results from both tables.  \n  \n [!code-csharp[DLinqQueryExamples#51](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#51)]\n [!code-vb[DLinqQueryExamples#51](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#51)]  \n  \n## Example  \n The following example explicitly joins three tables and projects results from each of them.  \n  \n [!code-csharp[DLinqQueryExamples#52](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#52)]\n [!code-vb[DLinqQueryExamples#52](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#52)]  \n  \n## Example  \n The following example shows how to achieve a `LEFT OUTER JOIN` by using `DefaultIfEmpty()`. The `DefaultIfEmpty()` method returns null when there is no `Order` for the `Employee`.  \n  \n [!code-csharp[DLinqQueryExamples#53](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#53)]\n [!code-vb[DLinqQueryExamples#53](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#53)]  \n  \n## Example  \n The following example projects a `let` expression resulting from a join.  \n  \n [!code-csharp[DLinqQueryExamples#54](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#54)]\n [!code-vb[DLinqQueryExamples#54](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#54)]  \n  \n## Example  \n The following example shows a `join` with a composite key.  \n  \n [!code-csharp[DLinqQueryExamples#55](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#55)]\n [!code-vb[DLinqQueryExamples#55](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#55)]  \n  \n## Example  \n The following example shows how to construct a `join` where one side is nullable and the other is not.  \n  \n [!code-csharp[DLinqQueryExamples#56](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#56)]\n [!code-vb[DLinqQueryExamples#56](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#56)]  \n  \n## See Also  \n [Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)","nodes":[{"pos":[4,372],"embed":true,"restype":"x-metadata","content":"title: \"Formulate Joins and Cross-Product Queries | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: d8072ede-0521-4670-9bec-1778ceeb875b\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"Formulate Joins and Cross-Product Queries | Microsoft Docs","nodes":[{"pos":[0,58],"content":"Formulate Joins and Cross-Product Queries | Microsoft Docs","nodes":[{"content":"Formulate Joins and Cross-Product Queries | Microsoft Docs","pos":[0,58]}]}],"path":["title"]}],"yml":true},{"pos":[379,420],"content":"Formulate Joins and Cross-Product Queries","linkify":"Formulate Joins and Cross-Product Queries","nodes":[{"content":"Formulate Joins and Cross-Product Queries","pos":[0,41]}]},{"content":"The following examples show how to combine results from multiple tables.","pos":[421,493]},{"pos":[502,509],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[513,714],"content":"The following example uses foreign key navigation in the <ph id=\"ph1\">`From`</ph> clause in <ph id=\"ph2\">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph> (<ph id=\"ph3\">`from`</ph> clause in C#) to select all orders for customers in London.","source":"The following example uses foreign key navigation in the `From` clause in [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] (`from` clause in C#) to select all orders for customers in London."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#47<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#47)</ept><ept id=\"p1\">]</ept>","pos":[721,854],"source":"[!code-csharp[DLinqQueryExamples#47](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#47)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#47<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#47)</ept><ept id=\"p1\">]</ept>","pos":[856,990],"source":"[!code-vb[DLinqQueryExamples#47](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#47)]"},{"pos":[999,1006],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1010,1247],"content":"The following example uses foreign key navigation in the <ph id=\"ph1\">`Where`</ph> clause in <ph id=\"ph2\">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph> (<ph id=\"ph3\">`where`</ph> clause in C#) to filter for out-of-stock <ph id=\"ph4\">`Products`</ph> whose <ph id=\"ph5\">`Supplier`</ph> is in the United States.","source":"The following example uses foreign key navigation in the `Where` clause in [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] (`where` clause in C#) to filter for out-of-stock `Products` whose `Supplier` is in the United States."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#48<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#48)</ept><ept id=\"p1\">]</ept>","pos":[1254,1387],"source":"[!code-csharp[DLinqQueryExamples#48](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#48)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#48<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#48)</ept><ept id=\"p1\">]</ept>","pos":[1389,1523],"source":"[!code-vb[DLinqQueryExamples#48](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#48)]"},{"pos":[1532,1539],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1543,1764],"content":"The following example uses foreign key navigation in the <ph id=\"ph1\">`From`</ph> clause in <ph id=\"ph2\">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph> (<ph id=\"ph3\">`from`</ph> clause in C#) to filter for employees in Seattle and to list their territories.","source":"The following example uses foreign key navigation in the `From` clause in [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] (`from` clause in C#) to filter for employees in Seattle and to list their territories."},{"pos":[1771,1904],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#49<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#49)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[DLinqQueryExamples#49](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#49)]"},{"pos":[1913,1920],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1924,2207],"content":"The following example uses foreign key navigation in the <ph id=\"ph1\">`Select`</ph> clause in <ph id=\"ph2\">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph> (<ph id=\"ph3\">`select`</ph> clause in C#) to filter for pairs of employees where one employee reports to the other and where both employees are from the same <ph id=\"ph4\">`City`</ph>.","source":"The following example uses foreign key navigation in the `Select` clause in [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] (`select` clause in C#) to filter for pairs of employees where one employee reports to the other and where both employees are from the same `City`."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#50<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#50)</ept><ept id=\"p1\">]</ept>","pos":[2214,2347],"source":"[!code-csharp[DLinqQueryExamples#50](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#50)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#50<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#50)</ept><ept id=\"p1\">]</ept>","pos":[2349,2483],"source":"[!code-vb[DLinqQueryExamples#50](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#50)]"},{"pos":[2492,2499],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2503,2754],"content":"The following <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph> example looks for all customers and orders, makes sure that the orders are matched to customers, and guarantees that for every customer in that list, a contact name is provided.","source":"The following [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)] example looks for all customers and orders, makes sure that the orders are matched to customers, and guarantees that for every customer in that list, a contact name is provided."},{"pos":[2761,2897],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#50v<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#50v)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[DLinqQueryExamples#50v](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#50v)]"},{"pos":[2906,2913],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example explicitly joins two tables and projects results from both tables.","pos":[2917,3005]},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#51<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#51)</ept><ept id=\"p1\">]</ept>","pos":[3012,3145],"source":"[!code-csharp[DLinqQueryExamples#51](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#51)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#51<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#51)</ept><ept id=\"p1\">]</ept>","pos":[3147,3281],"source":"[!code-vb[DLinqQueryExamples#51](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#51)]"},{"pos":[3290,3297],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example explicitly joins three tables and projects results from each of them.","pos":[3301,3392]},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#52<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#52)</ept><ept id=\"p1\">]</ept>","pos":[3399,3532],"source":"[!code-csharp[DLinqQueryExamples#52](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#52)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#52<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#52)</ept><ept id=\"p1\">]</ept>","pos":[3534,3668],"source":"[!code-vb[DLinqQueryExamples#52](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#52)]"},{"pos":[3677,3684],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to achieve a <ph id=\"ph1\">`LEFT OUTER JOIN`</ph> by using <ph id=\"ph2\">`DefaultIfEmpty()`</ph>.","pos":[3688,3779],"source":"The following example shows how to achieve a `LEFT OUTER JOIN` by using `DefaultIfEmpty()`."},{"content":"The <ph id=\"ph1\">`DefaultIfEmpty()`</ph> method returns null when there is no <ph id=\"ph2\">`Order`</ph> for the <ph id=\"ph3\">`Employee`</ph>.","pos":[3780,3867],"source":" The `DefaultIfEmpty()` method returns null when there is no `Order` for the `Employee`."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#53<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#53)</ept><ept id=\"p1\">]</ept>","pos":[3874,4007],"source":"[!code-csharp[DLinqQueryExamples#53](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#53)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#53<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#53)</ept><ept id=\"p1\">]</ept>","pos":[4009,4143],"source":"[!code-vb[DLinqQueryExamples#53](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#53)]"},{"pos":[4152,4159],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4163,4235],"content":"The following example projects a <ph id=\"ph1\">`let`</ph> expression resulting from a join.","source":"The following example projects a `let` expression resulting from a join."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#54<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#54)</ept><ept id=\"p1\">]</ept>","pos":[4242,4375],"source":"[!code-csharp[DLinqQueryExamples#54](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#54)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#54<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#54)</ept><ept id=\"p1\">]</ept>","pos":[4377,4511],"source":"[!code-vb[DLinqQueryExamples#54](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#54)]"},{"pos":[4520,4527],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4531,4589],"content":"The following example shows a <ph id=\"ph1\">`join`</ph> with a composite key.","source":"The following example shows a `join` with a composite key."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#55<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#55)</ept><ept id=\"p1\">]</ept>","pos":[4596,4729],"source":"[!code-csharp[DLinqQueryExamples#55](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#55)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#55<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#55)</ept><ept id=\"p1\">]</ept>","pos":[4731,4865],"source":"[!code-vb[DLinqQueryExamples#55](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#55)]"},{"pos":[4874,4881],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4885,4987],"content":"The following example shows how to construct a <ph id=\"ph1\">`join`</ph> where one side is nullable and the other is not.","source":"The following example shows how to construct a `join` where one side is nullable and the other is not."},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#56<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#56)</ept><ept id=\"p1\">]</ept>","pos":[4994,5127],"source":"[!code-csharp[DLinqQueryExamples#56](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqQueryExamples/cs/Program.cs#56)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqQueryExamples#56<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#56)</ept><ept id=\"p1\">]</ept>","pos":[5129,5263],"source":"[!code-vb[DLinqQueryExamples#56](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqQueryExamples/vb/Module1.vb#56)]"},{"pos":[5272,5280],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[5284,5373],"content":"<bpt id=\"p1\">[</bpt>Query Examples<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)</ept>","source":"[Query Examples](../../../../../../docs/framework/data/adonet/sql/linq/query-examples.md)"}]}