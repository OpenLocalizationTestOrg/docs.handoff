{"content":"---\ntitle: \"Interoperability with ASP.NET Web Services | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 622422f8-6651-442f-b8be-e654a4aabcac\ncaps.latest.revision: 5\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Interoperability with ASP.NET Web Services\nInteroperability between [!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)] Web services and [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] Web services can be achieved by ensuring that services implemented using both technologies conform to the WS-I Basic Profile 1.1 specification. [!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)] Web services that conform to WS-I Basic Profile 1.1 are interoperable with [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] clients by using [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] system-provided binding, <xref:System.ServiceModel.BasicHttpBinding>.  \n  \n Use [!INCLUDE[vstecasplong](../../../../includes/vstecasplong-md.md)] option of adding the <xref:System.Web.Services.WebService> and <xref:System.Web.Services.WebMethodAttribute> attributes to an interface rather than to a class, and writing a class to implement the interface, as shown in the following sample code.  \n  \n```  \n[WebService]  \npublic interface IEcho  \n{  \n    [WebMethod]  \n    string Echo(string input);  \n}  \n  \npublic class Service : IEcho  \n{  \n  \n   public string Echo(string input)  \n   {  \n        return input;  \n    }  \n}  \n```  \n  \n Using this option is preferred, because the interface with the <xref:System.Web.Services.WebService> attribute constitutes a contract for the operations performed by the service that can be reused with various classes that might implement that same contract in different ways.  \n  \n Avoid using the <xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute> attribute to have messages routed to methods based on the fully-qualified name of the body element of the SOAP message rather than the `SOAPAction` HTTP header. [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] uses the `SOAPAction` HTTP header for routing messages.  \n  \n The XML into which <xref:System.Xml.Serialization.XmlSerializer> serializes a type by default is semantically identical to the XML into which the <xref:System.Runtime.Serialization.DataContractSerializer> serializes a type, provided the namespace for the XML is explicitly defined. When defining a data type for use with [!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]Web services in anticipation of adopting [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], do the following:  \n  \n-   Define the type using .NET Framework classes rather than XML Schema.  \n  \n-   Add only the <xref:System.SerializableAttribute> and the <xref:System.Xml.Serialization.XmlRootAttribute> to the class, using the latter to explicitly define the namespace for the type. Do not add additional attributes from the <xref:System.Xml.Serialization> namespace to control how the .NET Framework class is to be translated into XML.  \n  \n-   By adopting this approach, you should be able to later make the .NET classes into data contracts with the addition of the <xref:System.Runtime.Serialization.DataContractAttribute> and <xref:System.Runtime.Serialization.DataMemberAttribute> without significantly altering the XML into which the classes are serialized for transmission. The types used in messages by [!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)] Web services can be processed as data contracts by [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] applications, yielding, among other benefits, better performance in [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] applications.  \n  \n Avoid using the authentication options provided by Internet Information Services (IIS). [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] clients do not support them. If a service must be secured, use the options provided by [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], because these options are robust and are based on standard protocols.  \n  \n## Performance impact caused by loading the ServiceModel HttpModule  \n In the .NET Framework 3.0, the WCF `HttpModule` was installed in the root Web.config file such that every ASP.NET application was WCF enabled. This might affect performance, so you can remove `ServiceModel` for the Web.config file as shown in the following example.  \n  \n```  \n<httpModules>  \n    <remove name=\"ServiceModel\" />  \n<httpModules/>  \n  \n```  \n  \n## See Also  \n [How to: Configure WCF Service to Interoperate with ASP.NET Web Service Clients](../../../../docs/framework/wcf/feature-details/config-wcf-service-with-aspnet-web-service.md)","nodes":[{"pos":[12,71],"content":"Interoperability with ASP.NET Web Services | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Interoperability with ASP.NET Web Services | Microsoft Docs","pos":[0,59]}]},{"pos":[369,411],"content":"Interoperability with ASP.NET Web Services","linkify":"Interoperability with ASP.NET Web Services","nodes":[{"content":"Interoperability with ASP.NET Web Services","pos":[0,42]}]},{"content":"Interoperability between <ph id=\"ph1\">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> Web services and <ph id=\"ph2\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> Web services can be achieved by ensuring that services implemented using both technologies conform to the WS-I Basic Profile 1.1 specification.","pos":[412,711],"source":"Interoperability between [!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)] Web services and [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] Web services can be achieved by ensuring that services implemented using both technologies conform to the WS-I Basic Profile 1.1 specification."},{"content":"<ph id=\"ph1\">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> Web services that conform to WS-I Basic Profile 1.1 are interoperable with <ph id=\"ph2\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> clients by using <ph id=\"ph3\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> system-provided binding, <ph id=\"ph4\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.","pos":[712,1043],"source":"[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)] Web services that conform to WS-I Basic Profile 1.1 are interoperable with [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] clients by using [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] system-provided binding, <xref:System.ServiceModel.BasicHttpBinding>."},{"pos":[1050,1366],"content":"Use <ph id=\"ph1\">[!INCLUDE[vstecasplong](../../../../includes/vstecasplong-md.md)]</ph> option of adding the <ph id=\"ph2\">&lt;xref:System.Web.Services.WebService&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.Services.WebMethodAttribute&gt;</ph> attributes to an interface rather than to a class, and writing a class to implement the interface, as shown in the following sample code.","source":"Use [!INCLUDE[vstecasplong](../../../../includes/vstecasplong-md.md)] option of adding the <xref:System.Web.Services.WebService> and <xref:System.Web.Services.WebMethodAttribute> attributes to an interface rather than to a class, and writing a class to implement the interface, as shown in the following sample code."},{"content":"Using this option is preferred, because the interface with the <ph id=\"ph1\">&lt;xref:System.Web.Services.WebService&gt;</ph> attribute constitutes a contract for the operations performed by the service that can be reused with various classes that might implement that same contract in different ways.","pos":[1609,1885],"source":"Using this option is preferred, because the interface with the <xref:System.Web.Services.WebService> attribute constitutes a contract for the operations performed by the service that can be reused with various classes that might implement that same contract in different ways."},{"content":"Avoid using the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute&gt;</ph> attribute to have messages routed to methods based on the fully-qualified name of the body element of the SOAP message rather than the <ph id=\"ph2\">`SOAPAction`</ph> HTTP header.","pos":[1892,2134],"source":"Avoid using the <xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute> attribute to have messages routed to methods based on the fully-qualified name of the body element of the SOAP message rather than the `SOAPAction` HTTP header."},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> uses the <ph id=\"ph2\">`SOAPAction`</ph> HTTP header for routing messages.","pos":[2135,2246],"source":"[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] uses the `SOAPAction` HTTP header for routing messages."},{"content":"The XML into which <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes a type by default is semantically identical to the XML into which the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> serializes a type, provided the namespace for the XML is explicitly defined.","pos":[2253,2534],"source":"The XML into which <xref:System.Xml.Serialization.XmlSerializer> serializes a type by default is semantically identical to the XML into which the <xref:System.Runtime.Serialization.DataContractSerializer> serializes a type, provided the namespace for the XML is explicitly defined."},{"content":"When defining a data type for use with <ph id=\"ph1\">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph>Web services in anticipation of adopting <ph id=\"ph2\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, do the following:","pos":[2535,2746],"source":" When defining a data type for use with [!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]Web services in anticipation of adopting [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], do the following:"},{"content":"Define the type using .NET Framework classes rather than XML Schema.","pos":[2756,2824]},{"content":"Add only the <ph id=\"ph1\">&lt;xref:System.SerializableAttribute&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> to the class, using the latter to explicitly define the namespace for the type.","pos":[2834,3019],"source":"Add only the <xref:System.SerializableAttribute> and the <xref:System.Xml.Serialization.XmlRootAttribute> to the class, using the latter to explicitly define the namespace for the type."},{"content":"Do not add additional attributes from the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization&gt;</ph> namespace to control how the .NET Framework class is to be translated into XML.","pos":[3020,3173],"source":" Do not add additional attributes from the <xref:System.Xml.Serialization> namespace to control how the .NET Framework class is to be translated into XML."},{"content":"By adopting this approach, you should be able to later make the .NET classes into data contracts with the addition of the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> without significantly altering the XML into which the classes are serialized for transmission.","pos":[3183,3517],"source":"By adopting this approach, you should be able to later make the .NET classes into data contracts with the addition of the <xref:System.Runtime.Serialization.DataContractAttribute> and <xref:System.Runtime.Serialization.DataMemberAttribute> without significantly altering the XML into which the classes are serialized for transmission."},{"content":"The types used in messages by <ph id=\"ph1\">[!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)]</ph> Web services can be processed as data contracts by <ph id=\"ph2\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> applications, yielding, among other benefits, better performance in <ph id=\"ph3\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> applications.","pos":[3518,3850],"source":" The types used in messages by [!INCLUDE[vstecasp](../../../../includes/vstecasp-md.md)] Web services can be processed as data contracts by [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] applications, yielding, among other benefits, better performance in [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] applications."},{"content":"Avoid using the authentication options provided by Internet Information Services (IIS).","pos":[3857,3944]},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> clients do not support them.","pos":[3945,4029],"source":"[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] clients do not support them."},{"content":"If a service must be secured, use the options provided by <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, because these options are robust and are based on standard protocols.","pos":[4030,4214],"source":" If a service must be secured, use the options provided by [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], because these options are robust and are based on standard protocols."},{"pos":[4223,4287],"content":"Performance impact caused by loading the ServiceModel HttpModule","linkify":"Performance impact caused by loading the ServiceModel HttpModule","nodes":[{"content":"Performance impact caused by loading the ServiceModel HttpModule","pos":[0,64]}]},{"content":"In the .NET Framework 3.0, the WCF <ph id=\"ph1\">`HttpModule`</ph> was installed in the root Web.config file such that every ASP.NET application was WCF enabled.","pos":[4291,4433],"source":"In the .NET Framework 3.0, the WCF `HttpModule` was installed in the root Web.config file such that every ASP.NET application was WCF enabled."},{"content":"This might affect performance, so you can remove <ph id=\"ph1\">`ServiceModel`</ph> for the Web.config file as shown in the following example.","pos":[4434,4556],"source":" This might affect performance, so you can remove `ServiceModel` for the Web.config file as shown in the following example."},{"pos":[4653,4661],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4665,4839],"content":"<bpt id=\"p1\">[</bpt>How to: Configure WCF Service to Interoperate with ASP.NET Web Service Clients<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/config-wcf-service-with-aspnet-web-service.md)</ept>","source":"[How to: Configure WCF Service to Interoperate with ASP.NET Web Service Clients](../../../../docs/framework/wcf/feature-details/config-wcf-service-with-aspnet-web-service.md)"}]}