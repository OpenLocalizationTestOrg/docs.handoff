{"content":"---\ntitle: \"Is Operator (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.is\"\nhelpviewer_keywords: \n  - \"comparison operators [Visual Basic]\"\n  - \"equivalent objects\"\n  - \"TypeOf...Is expression\"\n  - \"Is operator [Visual Basic]\"\nms.assetid: 8045a6c8-2a83-45b6-ad47-d09a704c656d\n---\n# Is Operator (Visual Basic)\nCompares two object reference variables.  \n  \n## Syntax  \n  \n```  \nresult = object1 Is object2  \n```  \n  \n## Parts  \n `result`  \n Required. Any `Boolean` value.  \n  \n `object1`  \n Required. Any `Object` name.  \n  \n `object2`  \n Required. Any `Object` name.  \n  \n## Remarks  \n The `Is` operator determines if two object references refer to the same object. However, it does not perform value comparisons. If `object1` and `object2` both refer to the exact same object instance, `result` is `True`; if they do not, `result` is `False`.  \n  \n `Is` can also be used with the `TypeOf` keyword to make a `TypeOf`...`Is` expression, which tests whether an object variable is compatible with a data type.  \n  \n> [!NOTE]\n>  The `Is` keyword is also used in the [Select...Case Statement](../../../visual-basic/language-reference/statements/select-case-statement.md).  \n  \n## Example  \n The following example uses the `Is` operator to compare pairs of object references. The results are assigned to a `Boolean` value representing whether the two objects are identical.  \n  \n [!code-vb[VbVbalrOperators#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrOperators/VB/Class1.vb#27)]  \n  \n As the preceding example demonstrates, you can use the `Is` operator to test both early bound and late bound objects.  \n  \n## See also\n\n- [TypeOf Operator](../../../visual-basic/language-reference/operators/typeof-operator.md)\n- [IsNot Operator](../../../visual-basic/language-reference/operators/isnot-operator.md)\n- [Comparison Operators in Visual Basic](../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)\n- [Operator Precedence in Visual Basic](../../../visual-basic/language-reference/operators/operator-precedence.md)\n- [Operators Listed by Functionality](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)\n- [Operators and Expressions](../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)\n","nodes":[{"pos":[4,285],"embed":true,"restype":"x-metadata","content":"title: \"Is Operator (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.is\"\nhelpviewer_keywords: \n  - \"comparison operators [Visual Basic]\"\n  - \"equivalent objects\"\n  - \"TypeOf...Is expression\"\n  - \"Is operator [Visual Basic]\"\nms.assetid: 8045a6c8-2a83-45b6-ad47-d09a704c656d","nodes":[{"content":"Is Operator (Visual Basic)","nodes":[{"pos":[0,26],"content":"Is Operator (Visual Basic)","nodes":[{"content":"Is Operator (Visual Basic)","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[292,318],"content":"Is Operator (Visual Basic)","linkify":"Is Operator (Visual Basic)","nodes":[{"content":"Is Operator (Visual Basic)","pos":[0,26]}]},{"content":"Compares two object reference variables.","pos":[319,359]},{"pos":[368,374],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[428,433],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Required.","pos":[449,458]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> value.","pos":[459,479],"source":" Any `Boolean` value."},{"content":"Required.","pos":[499,508]},{"content":"Any <ph id=\"ph1\">`Object`</ph> name.","pos":[509,527],"source":" Any `Object` name."},{"content":"Required.","pos":[547,556]},{"content":"Any <ph id=\"ph1\">`Object`</ph> name.","pos":[557,575],"source":" Any `Object` name."},{"pos":[584,591],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`Is`</ph> operator determines if two object references refer to the same object.","pos":[595,674],"source":"The `Is` operator determines if two object references refer to the same object."},{"content":"However, it does not perform value comparisons.","pos":[675,722]},{"content":"If <ph id=\"ph1\">`object1`</ph> and <ph id=\"ph2\">`object2`</ph> both refer to the exact same object instance, <ph id=\"ph3\">`result`</ph> is <ph id=\"ph4\">`True`</ph>; if they do not, <ph id=\"ph5\">`result`</ph> is <ph id=\"ph6\">`False`</ph>.","pos":[723,852],"source":" If `object1` and `object2` both refer to the exact same object instance, `result` is `True`; if they do not, `result` is `False`."},{"pos":[859,1015],"content":"<ph id=\"ph1\">`Is`</ph> can also be used with the <ph id=\"ph2\">`TypeOf`</ph> keyword to make a <ph id=\"ph3\">`TypeOf`</ph>...<ph id=\"ph4\">`Is`</ph> expression, which tests whether an object variable is compatible with a data type.","source":"`Is` can also be used with the `TypeOf` keyword to make a `TypeOf`...`Is` expression, which tests whether an object variable is compatible with a data type."},{"pos":[1023,1175],"content":"[!NOTE]\n The `Is` keyword is also used in the [Select...Case Statement](../../../visual-basic/language-reference/statements/select-case-statement.md).","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">`Is`</ph> keyword is also used in the <bpt id=\"p1\">[</bpt>Select...Case Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/select-case-statement.md)</ept>.","pos":[9,150],"source":"The `Is` keyword is also used in the [Select...Case Statement](../../../visual-basic/language-reference/statements/select-case-statement.md)."}]},{"pos":[1184,1191],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example uses the <ph id=\"ph1\">`Is`</ph> operator to compare pairs of object references.","pos":[1195,1278],"source":"The following example uses the `Is` operator to compare pairs of object references."},{"content":"The results are assigned to a <ph id=\"ph1\">`Boolean`</ph> value representing whether the two objects are identical.","pos":[1279,1376],"source":" The results are assigned to a `Boolean` value representing whether the two objects are identical."},{"pos":[1507,1624],"content":"As the preceding example demonstrates, you can use the <ph id=\"ph1\">`Is`</ph> operator to test both early bound and late bound objects.","source":"As the preceding example demonstrates, you can use the `Is` operator to test both early bound and late bound objects."},{"pos":[1633,1641],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1645,1733],"content":"<bpt id=\"p1\">[</bpt>TypeOf Operator<ept id=\"p1\">](../../../visual-basic/language-reference/operators/typeof-operator.md)</ept>","source":"[TypeOf Operator](../../../visual-basic/language-reference/operators/typeof-operator.md)"},{"pos":[1736,1822],"content":"<bpt id=\"p1\">[</bpt>IsNot Operator<ept id=\"p1\">](../../../visual-basic/language-reference/operators/isnot-operator.md)</ept>","source":"[IsNot Operator](../../../visual-basic/language-reference/operators/isnot-operator.md)"},{"pos":[1825,1972],"content":"<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>","source":"[Comparison Operators in Visual Basic](../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)"},{"pos":[1975,2087],"content":"<bpt id=\"p1\">[</bpt>Operator Precedence in Visual Basic<ept id=\"p1\">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept>","source":"[Operator Precedence in Visual Basic](../../../visual-basic/language-reference/operators/operator-precedence.md)"},{"pos":[2090,2214],"content":"<bpt id=\"p1\">[</bpt>Operators Listed by Functionality<ept id=\"p1\">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept>","source":"[Operators Listed by Functionality](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)"},{"pos":[2217,2338],"content":"<bpt id=\"p1\">[</bpt>Operators and Expressions<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)</ept>","source":"[Operators and Expressions](../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)"}]}