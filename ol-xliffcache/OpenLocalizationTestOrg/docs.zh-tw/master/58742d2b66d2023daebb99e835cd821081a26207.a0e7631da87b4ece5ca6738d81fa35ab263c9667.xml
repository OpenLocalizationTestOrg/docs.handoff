{"content":"---\ntitle: \"ICorDebugRegisterSet::GetRegisters Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugRegisterSet.GetRegisters\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugRegisterSet::GetRegisters\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetRegisters method, ICorDebugRegisterSet interface [.NET Framework debugging]\"\n  - \"ICorDebugRegisterSet::GetRegisters method [.NET Framework debugging]\"\nms.assetid: fdf91864-48ea-4aa6-b70c-361b7a3184c7\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugRegisterSet::GetRegisters Method\nGets the value of each register (on the computer that is currently executing code) that is specified by the bit mask.  \n  \n## Syntax  \n  \n```  \nHRESULT GetRegisters (  \n    [in] ULONG64       mask,   \n    [in] ULONG32       regCount,  \n    [out, size_is(regCount), length_is(regCount)]  \n        CORDB_REGISTER regBuffer[]  \n);  \n```  \n  \n#### Parameters  \n `mask`  \n [in] A bit mask that specifies which register values are to be retrieved. Each bit corresponds to a register. If a bit is set to one, the register's value is retrieved; otherwise, the register's value is not retrieved.  \n  \n `regCount`  \n [in] The number of register values to be retrieved.  \n  \n `regBuffer`  \n [out] An array of `CORDB_REGISTER` objects, each of which receives a value of a register.  \n  \n## Remarks  \n The size of the array should be equal to the number of bits set to one in the bit mask. The `regCount` parameter specifies the number of elements in the buffer that will receive the register values. If the `regCount` value is too small for the number of registers indicated by the mask, the higher numbered registers will be truncated from the set. If the `regCount` value is too large, the unused `regBuffer` elements will be unmodified.  \n  \n If the bit mask specifies a register that is unavailable, `GetRegisters` returns an indeterminate value for that register.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See Also  \n [ICorDebugRegisterSet Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugregisterset-interface.md)   \n [ICorDebugRegisterSet2 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugregisterset2-interface.md)","nodes":[{"pos":[12,70],"content":"ICorDebugRegisterSet::GetRegisters Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICorDebugRegisterSet::GetRegisters Method | Microsoft Docs","pos":[0,58]}]},{"pos":[767,808],"content":"ICorDebugRegisterSet::GetRegisters Method","linkify":"ICorDebugRegisterSet::GetRegisters Method","nodes":[{"content":"ICorDebugRegisterSet::GetRegisters Method","pos":[0,41]}]},{"content":"Gets the value of each register (on the computer that is currently executing code) that is specified by the bit mask.","pos":[809,926]},{"pos":[935,941],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1153,1163],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A bit mask that specifies which register values are to be retrieved.","pos":[1177,1250]},{"content":"Each bit corresponds to a register.","pos":[1251,1286]},{"content":"If a bit is set to one, the register's value is retrieved; otherwise, the register's value is not retrieved.","pos":[1287,1395]},{"content":"[in] The number of register values to be retrieved.","pos":[1416,1467]},{"content":"[out] An array of <ph id=\"ph1\">`CORDB_REGISTER`</ph> objects, each of which receives a value of a register.","pos":[1489,1578],"source":" [out] An array of `CORDB_REGISTER` objects, each of which receives a value of a register."},{"pos":[1587,1594],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The size of the array should be equal to the number of bits set to one in the bit mask.","pos":[1598,1685]},{"content":"The <ph id=\"ph1\">`regCount`</ph> parameter specifies the number of elements in the buffer that will receive the register values.","pos":[1686,1796],"source":" The `regCount` parameter specifies the number of elements in the buffer that will receive the register values."},{"content":"If the <ph id=\"ph1\">`regCount`</ph> value is too small for the number of registers indicated by the mask, the higher numbered registers will be truncated from the set.","pos":[1797,1946],"source":" If the `regCount` value is too small for the number of registers indicated by the mask, the higher numbered registers will be truncated from the set."},{"content":"If the <ph id=\"ph1\">`regCount`</ph> value is too large, the unused <ph id=\"ph2\">`regBuffer`</ph> elements will be unmodified.","pos":[1947,2036],"source":" If the `regCount` value is too large, the unused `regBuffer` elements will be unmodified."},{"pos":[2043,2165],"content":"If the bit mask specifies a register that is unavailable, <ph id=\"ph1\">`GetRegisters`</ph> returns an indeterminate value for that register.","source":"If the bit mask specifies a register that is unavailable, `GetRegisters` returns an indeterminate value for that register."},{"pos":[2174,2186],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2190,2294],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2301,2337],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2344,2369],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2376,2484],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[2493,2501],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugRegisterSet Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugregisterset-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2505,2624],"source":"[ICorDebugRegisterSet Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugregisterset-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ICorDebugRegisterSet2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugregisterset2-interface.md)</ept>","pos":[2627,2748],"source":" [ICorDebugRegisterSet2 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugregisterset2-interface.md)"}]}