<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="icorprofilerinfo3-requestprofilerdetach-method.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d67020974e9f0e986eb5f81678b0e12f7a79d047</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\profiling\icorprofilerinfo3-requestprofilerdetach-method.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aca36f420cb48b214b42934123ae7460091cd5fa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c500e01a3826bf6337abf7f1932bcd7c59bf6a8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICorProfilerInfo3::RequestProfilerDetach Method | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorProfilerInfo3::RequestProfilerDetach Method</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Instructs the runtime to detach the profiler.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>[in] The length of time, in milliseconds, the common language runtime (CLR) should wait before checking to see whether it is safe to unload the profiler.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This method returns the following specific HRESULTs as well as HRESULT errors that indicate method failure.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>HRESULT</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The detach request is valid, and the detach procedure is now continuing on another thread.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When the detach is fully complete, a <ph id="ph1">`ProfilerDetachSucceeded`</ph> event is issued.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>E_ CORPROF_E_CALLBACK3_REQUIRED</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The profiler failed an <bpt id="p1">[</bpt>IUnknown::QueryInterface<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=144867)</ept> attempt for the <bpt id="p2">[</bpt>ICorProfilerCallback3<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback3-interface.md)</ept> interface, which it must implement to support the detach operation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Detach was not attempted.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CORPROF_E_IMMUTABLE_FLAGS_SET</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Detachment is impossible because the profiler set immutable flags at startup.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Detachment was not attempted; the profiler is still fully attached.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CORPROF_E_IRREVERSIBLE_INSTRUMENTATION_PRESENT</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Detachment is impossible because the profiler used instrumented Microsoft intermediate language (MSIL) code, or inserted <ph id="ph1">`enter`</ph><ph id="ph2">/</ph><ph id="ph3">`leave`</ph> hooks.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Detachment was not attempted; the profiler is still fully attached.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Instrumented MSIL is code is code that is provided by the profiler using the <bpt id="p2">[</bpt>SetILFunctionBody<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-setilfunctionbody-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>CORPROF_E_RUNTIME_UNINITIALIZED</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The runtime has not been initialized yet in the managed application.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>(That is, the runtime has not been fully loaded.) This error code may be returned when detachment is requested inside the profiler callback's <bpt id="p1">[</bpt>ICorProfilerCallback::Initialize<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-initialize-method.md)</ept> method.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CORPROF_E_UNSUPPORTED_CALL_SEQUENCE</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`RequestProfilerDetach`</ph> was called at an unsupported time.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This occurs if the method is called on a managed thread but not from within an <bpt id="p1">[</bpt>ICorProfilerCallback<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)</ept> method or from within an <bpt id="p2">[</bpt>ICorProfilerCallback<ept id="p2">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)</ept> method that cannot tolerate a garbage collection.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>CORPROF_E_UNSUPPORTED_CALL_SEQUENCE HRESULT<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/corprof-e-unsupported-call-sequence-hresult.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>During the detach procedure, the detach thread (the thread created specifically for detaching the profiler) occasionally checks whether all threads have exited the profilerâ€™s code.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The profiler should provide an estimate of how long this should take through the <ph id="ph1">`dwExpectedCompletionMilliseconds`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A good value to use is the typical amount of time the profiler spends inside any given <ph id="ph1">`ICorProfilerCallback*`</ph> method; this value should not be less than half of the maximum amount of time the profiler expects to spend.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The detach thread uses <ph id="ph1">`dwExpectedCompletionMilliseconds`</ph> to decide how long to sleep before checking whether profiler callback code has been popped off all stacks.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Although the details of the following algorithm may change in future releases of the CLR, it illustrates one way <ph id="ph1">`dwExpectedCompletionMilliseconds`</ph> can be used when determining when it is safe to unload the profiler.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The detach thread first sleeps for <ph id="ph1">`dwExpectedCompletionMilliseconds`</ph> milliseconds.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If, after awakening from the sleep, the CLR finds that profiler callback code is still present, the detach thread sleeps again, this time for two times <ph id="ph1">`dwExpectedCompletionMilliseconds`</ph> milliseconds.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If, after awakening from this second sleep, the detach thread finds that profiler callback code is still present, it sleeps for 10 minutes before checking again.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The detach thread continues to recheck every 10 minutes.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the profiler specifies <ph id="ph1">`dwExpectedCompletionMilliseconds`</ph> as 0 (zero), the CLR uses a default value of 5000, which means that it will perform a check after 5 seconds, again after 10 seconds, and then every 10 minutes thereafter.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorProf.idl, CorProf.h</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ICorProfilerInfo3 Interface<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo3-interface.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/profiling-interfaces.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Profiling<ept id="p1">](../../../../docs/framework/unmanaged-api/profiling/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>