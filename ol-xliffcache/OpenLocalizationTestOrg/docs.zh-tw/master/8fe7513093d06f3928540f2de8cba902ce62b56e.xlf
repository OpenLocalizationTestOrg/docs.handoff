<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="oracle-sequences.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fe7513093d06f3928540f2de8cba902ce62b56e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\oracle-sequences.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3192ae3e3e3d2634a975fe79975bfbe81866d40b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de5fbe5d0c5c5c7ebe39081aa1456e9623fd4a58</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Oracle Sequences</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Oracle Sequences</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle provides support for retrieving the server-generated key Oracle Sequence values after performing inserts by using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SQL Server and Oracle support the creation of automatically incrementing columns that can be designated as primary keys.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>These values are generated by the server as rows are added to a table.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In SQL Server, you set the Identity property of a column; in Oracle you create a Sequence.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The difference between auto-increment columns in SQL Server and sequences in Oracle is that:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In SQL Server, you mark a column as an auto-increment column and SQL Server automatically generates new values for the column when you insert a new row.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In Oracle, you create a sequence to generate new values for a column in your table, but there is no direct link between the sequence and the table or column.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An Oracle sequence is an object, like a table or a stored procedure.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you create a sequence in an Oracle database, you can define its initial value and the increment between its values.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can also query the sequence for new values before submitting new rows.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>That means your code can recognize the key values for new rows before you insert them into the database.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about creating auto-increment columns by using SQL Server and ADO.NET, see <bpt id="p1">[</bpt>Retrieving Identity or Autonumber Values<ept id="p1">](../../../../docs/framework/data/adonet/retrieving-identity-or-autonumber-values.md)</ept> and <bpt id="p2">[</bpt>Creating AutoIncrement Columns<ept id="p2">](../../../../docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following C# example demonstrates how you can retrieve new sequence values from Oracle database.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The example references the sequence in the INSERT INTO query used to submit the new rows, and then returns the sequence value generated using the RETURNING clause introduced in Oracle10g.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The example adds a series of pending new rows in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> by using ADO.NETâ€™s auto-increment functionality to generate "placeholder" primary key values.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Note that the increment value ADO.NET generated for the new row is just a "placeholder".</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>That means the database might generate different values from the ones ADO.NET generates.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Before submitting the pending inserts to the database, the example displays the contents of the rows.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Then, the code creates a new <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> object and sets its <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The example also supplies the logic to return the server-generated values by using output parameters.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Then, the example executes the update to submit the pending rows and displays the contents of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Oracle and ADO.NET<ept id="p1">](../../../../docs/framework/data/adonet/oracle-and-adonet.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>