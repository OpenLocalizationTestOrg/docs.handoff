{"content":"---\ntitle: \"Services and Transactions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"service contracts [WCF], designing services and transactions\"\nms.assetid: 864813ff-2709-4376-912d-f5c8d318c460\ncaps.latest.revision: 10\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Services and Transactions\n[!INCLUDE[indigo1](../../../includes/indigo1-md.md)] applications can initiate a transaction from within a client and coordinate the transaction within the service operation. Clients can initiate a transaction and invoke several service operations and ensure that the service operations are either committed or rolled back as a single unit.  \n  \n You can enable the transaction behavior in the service contract by specifying a <xref:System.ServiceModel.ServiceBehaviorAttribute> and setting its <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> and <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> properties for service operations that require client transactions. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> parameter specifies whether the transaction in which the method executes is automatically completed if no unhandled exceptions are thrown. [!INCLUDE[crabout](../../../includes/crabout-md.md)] these attributes, see [ServiceModel Transaction Attributes](../../../docs/framework/wcf/feature-details/servicemodel-transaction-attributes.md).  \n  \n The work that is performed in the service operations and managed by a resource manager, such as logging database updates, is part of the client’s transaction.  \n  \n The following sample demonstrates usage of the <xref:System.ServiceModel.ServiceBehaviorAttribute> and <xref:System.ServiceModel.OperationBehaviorAttribute> attributes to control service-side transaction behavior.  \n  \n```  \n[ServiceBehavior(TransactionIsolationLevel = System.Transactions.IsolationLevel.Serializable)]  \npublic class CalculatorService: ICalculatorLog  \n{  \n    [OperationBehavior(TransactionScopeRequired = true,  \n                           TransactionAutoComplete = true)]  \n    public double Add(double n1, double n2)  \n    {  \n        recordToLog(String.Format(\"Added {0} to {1}\", n1, n2));  \n        return n1 + n2;  \n    }  \n  \n    [OperationBehavior(TransactionScopeRequired = true,   \n                               TransactionAutoComplete = true)]  \n    public double Subtract(double n1, double n2)  \n    {  \n        recordToLog(String.Format(\"Subtracted {0} from {1}\", n1, n2));  \n        return n1 - n2;  \n    }  \n  \n    [OperationBehavior(TransactionScopeRequired = true,   \n                                       TransactionAutoComplete = true)]  \n    public double Multiply(double n1, double n2)  \n    {  \n        recordToLog(String.Format(\"Multiplied {0} by {1}\", n1, n2));  \n        return n1 * n2;  \n    }  \n  \n    [OperationBehavior(TransactionScopeRequired = true,   \n                                       TransactionAutoComplete = true)]  \n    public double Divide(double n1, double n2)  \n    {  \n        recordToLog(String.Format(\"Divided {0} by {1}\", n1, n2));  \n        return n1 / n2;  \n    }  \n  \n}  \n```  \n  \n You can enable transactions and transaction flow by configuring the client and service bindings to use the WS-AtomicTransaction protocol, and setting the [\\<transactionFlow>](../../../docs/framework/configure-apps/file-schema/wcf/transactionflow.md) element to `true`, as shown in the following sample configuration.  \n  \n```  \n<client>  \n    <endpoint address=\"net.tcp://localhost/ServiceModelSamples/service\"   \n          binding=\"netTcpBinding\"   \n          bindingConfiguration=\"netTcpBindingWSAT\"   \n          contract=\"Microsoft.ServiceModel.Samples.ICalculatorLog\" />  \n</client>  \n  \n<bindings>  \n    <netTcpBinding>  \n        <binding name=\"netTcpBindingWSAT\"  \n                transactionFlow=\"true\"  \n                transactionProtocol=\"WSAtomicTransactionOctober2004\" />  \n     </netTcpBinding>  \n</bindings>  \n```  \n  \n Clients can begin a transaction by creating a <xref:System.Transactions.TransactionScope> and invoking service operations within the scope of the transaction.  \n  \n```  \nusing (TransactionScope ts = new TransactionScope(TransactionScopeOption.RequiresNew))  \n{  \n    //Do work here  \n    ts.Complete();  \n}  \n```  \n  \n## See Also  \n [Transactional Support in System.ServiceModel](../../../docs/framework/wcf/feature-details/transactional-support-in-system-servicemodel.md)   \n [Transaction Models](../../../docs/framework/wcf/feature-details/transaction-models.md)   \n [WS Transaction Flow](../../../docs/framework/wcf/samples/ws-transaction-flow.md)","nodes":[{"pos":[4,435],"nodes":[{"content":"Services and Transactions | Microsoft Docs","nodes":[{"pos":[0,42],"content":"Services and Transactions | Microsoft Docs","nodes":[{"content":"Services and Transactions | Microsoft Docs","pos":[0,42]}]}],"pos":[6,51],"yaml":true}],"content":"title: \"Services and Transactions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"service contracts [WCF], designing services and transactions\"\nms.assetid: 864813ff-2709-4376-912d-f5c8d318c460\ncaps.latest.revision: 10\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","yamlblock":true},{"pos":[442,467],"content":"Services and Transactions","linkify":"Services and Transactions","nodes":[{"content":"Services and Transactions","pos":[0,25]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> applications can initiate a transaction from within a client and coordinate the transaction within the service operation.","pos":[468,642],"source":"[!INCLUDE[indigo1](../../../includes/indigo1-md.md)] applications can initiate a transaction from within a client and coordinate the transaction within the service operation."},{"content":"Clients can initiate a transaction and invoke several service operations and ensure that the service operations are either committed or rolled back as a single unit.","pos":[643,808]},{"content":"You can enable the transaction behavior in the service contract by specifying a <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> and setting its <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt;</ph> properties for service operations that require client transactions.","pos":[815,1197],"source":"You can enable the transaction behavior in the service contract by specifying a <xref:System.ServiceModel.ServiceBehaviorAttribute> and setting its <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> and <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> properties for service operations that require client transactions."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A&gt;</ph> parameter specifies whether the transaction in which the method executes is automatically completed if no unhandled exceptions are thrown.","pos":[1198,1421],"source":" The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> parameter specifies whether the transaction in which the method executes is automatically completed if no unhandled exceptions are thrown."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> these attributes, see <bpt id=\"p1\">[</bpt>ServiceModel Transaction Attributes<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/servicemodel-transaction-attributes.md)</ept>.","pos":[1422,1619],"source":"[!INCLUDE[crabout](../../../includes/crabout-md.md)] these attributes, see [ServiceModel Transaction Attributes](../../../docs/framework/wcf/feature-details/servicemodel-transaction-attributes.md)."},{"content":"The work that is performed in the service operations and managed by a resource manager, such as logging database updates, is part of the client’s transaction.","pos":[1626,1784]},{"content":"The following sample demonstrates usage of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> attributes to control service-side transaction behavior.","pos":[1791,2004],"source":"The following sample demonstrates usage of the <xref:System.ServiceModel.ServiceBehaviorAttribute> and <xref:System.ServiceModel.OperationBehaviorAttribute> attributes to control service-side transaction behavior."},{"pos":[3346,3662],"content":"You can enable transactions and transaction flow by configuring the client and service bindings to use the WS-AtomicTransaction protocol, and setting the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>transactionFlow&gt;<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/wcf/transactionflow.md)</ept> element to <ph id=\"ph2\">`true`</ph>, as shown in the following sample configuration.","source":"You can enable transactions and transaction flow by configuring the client and service bindings to use the WS-AtomicTransaction protocol, and setting the [\\<transactionFlow>](../../../docs/framework/configure-apps/file-schema/wcf/transactionflow.md) element to `true`, as shown in the following sample configuration."},{"content":"Clients can begin a transaction by creating a <ph id=\"ph1\">&lt;xref:System.Transactions.TransactionScope&gt;</ph> and invoking service operations within the scope of the transaction.","pos":[4180,4338],"source":"Clients can begin a transaction by creating a <xref:System.Transactions.TransactionScope> and invoking service operations within the scope of the transaction."},{"pos":[4501,4509],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Transactional Support in System.ServiceModel<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/transactional-support-in-system-servicemodel.md)</ept><ph id=\"ph1\"> </ph>","pos":[4513,4653],"source":"[Transactional Support in System.ServiceModel](../../../docs/framework/wcf/feature-details/transactional-support-in-system-servicemodel.md) "},{"content":"<bpt id=\"p1\">[</bpt>Transaction Models<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/transaction-models.md)</ept><ph id=\"ph1\"> </ph>","pos":[4657,4745],"source":"[Transaction Models](../../../docs/framework/wcf/feature-details/transaction-models.md) "},{"content":"<bpt id=\"p1\">[</bpt>WS Transaction Flow<ept id=\"p1\">](../../../docs/framework/wcf/samples/ws-transaction-flow.md)</ept>","pos":[4749,4830],"source":"[WS Transaction Flow](../../../docs/framework/wcf/samples/ws-transaction-flow.md)"}]}