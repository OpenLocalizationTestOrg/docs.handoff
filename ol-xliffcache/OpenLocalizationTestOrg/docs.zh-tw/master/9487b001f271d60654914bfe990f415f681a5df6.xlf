<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9487b001f271d60654914bfe990f415f681a5df6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\tools\ildasm-exe-il-disassembler.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c2c17f6627957d48fad8ae65294e0f97485356a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f8041834800d6849e9b0e8d9bc719d35e5e257c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Ildasm.exe (IL Disassembler) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Ildasm.exe (IL Disassembler)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The IL Disassembler is a companion tool to the IL Assembler (Ilasm.exe).</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Ildasm.exe takes a portable executable (PE) file that contains intermediate language (IL) code and creates a text file suitable as input to Ilasm.exe.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tool is automatically installed with Visual Studio.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To run the tool, use the Developer Command Prompt (or the Visual Studio Command Prompt in Windows 7).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Command Prompts<ept id="p1">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>At the command prompt, type the following:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following options are available for .exe, .dll, .obj, .lib, and .winmd files.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/out=<ept id="p1">**</ept> <bpt id="p2">*</bpt>filename<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates an output file with the specified <bpt id="p1">*</bpt>filename<ept id="p1">*</ept>, rather than displaying the results in a graphical user interface.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/rtf<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Produces output in rich text format.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Invalid with the <bpt id="p1">**</bpt>/text<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/text<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Displays the results to the console window, rather than in a graphical user interface or as an output file.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/html<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Produces output in HTML format.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Valid with the <bpt id="p1">**</bpt>/output<ept id="p1">**</ept> option only.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/?<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Displays the command syntax and options for the tool.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following additional options are available for .exe, .dll, and .winmd files.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/bytes<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Shows actual bytes, in hexadecimal format, as instruction comments.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/caverbal<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Produces custom attribute blobs in verbal form.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default is binary form.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/linenum<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Includes references to original source lines.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/nobar<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Suppresses the disassembly progress indicator pop-up window.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/noca<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Suppresses the output of custom attributes.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/project<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Displays metadata the way it appears to managed code, instead of the way it appears in the native <ph id="ph1">[!INCLUDE[wrt](../../../includes/wrt-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`PEfilename`</ph> is not a Windows metadata (.winmd) file, this option has no effect.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>.NET Framework Support for Windows Store Apps and Windows Runtime<ept id="p1">](../../../docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/pubonly<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Disassembles only public types and members.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Equivalent to <bpt id="p1">**</bpt>/visibility:PUB<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/quoteallnames<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Includes all names in single quotes.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/raweh<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Shows exception handling clauses in raw form.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/source<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Shows original source lines as comments.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/tokens<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Shows metadata tokens of classes and members.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/visibility:<ept id="p1">**</ept> <bpt id="p2">*</bpt>vis<ept id="p2">*</ept>[+<bpt id="p3">*</bpt>vis<ept id="p3">*</ept>...]</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Disassembles only types or members with the specified visibility.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The following are valid values for <bpt id="p1">*</bpt>vis<ept id="p1">*</ept>:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PUB<ept id="p1">**</ept> — Public</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PRI<ept id="p1">**</ept> — Private</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FAM<ept id="p1">**</ept> — Family</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ASM<ept id="p1">**</ept> — Assembly</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FAA<ept id="p1">**</ept> — Family and Assembly</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FOA<ept id="p1">**</ept> — Family or Assembly</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PSC<ept id="p1">**</ept> — Private Scope</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For definitions of these visibility modifiers, see <ph id="ph1">&lt;xref:System.Reflection.MethodAttributes&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following options are valid for .exe, .dll, and .winmd files for file or console output only.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/all<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Specifies a combination of the <bpt id="p1">**</bpt>/header<ept id="p1">**</ept>, <bpt id="p2">**</bpt>/bytes<ept id="p2">**</ept>, <bpt id="p3">**</bpt>/stats<ept id="p3">**</ept>, <bpt id="p4">**</bpt>/classlist<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>/tokens<ept id="p5">**</ept> options.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/classlist<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Includes a list of classes defined in the module.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/forward<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Uses forward class declaration.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/headers<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Includes file header information in the output.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/item:<ept id="p1">**</ept> <bpt id="p2">*</bpt>class<ept id="p2">*</ept>[<bpt id="p3">**</bpt>::<ept id="p3">**</ept> <bpt id="p4">*</bpt>member<ept id="p4">*</ept>[<ph id="ph1">`(`</ph><bpt id="p5">*</bpt>sig<ept id="p5">*</ept>]]</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Disassembles the following depending upon the argument supplied:</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-   Disassembles the specified <bpt id="p1">*</bpt>class<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-   Disassembles the specified <ph id="ph1">`member`</ph>of the <bpt id="p1">*</bpt>class<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-   Disassembles the <ph id="ph1">`member`</ph>of the <bpt id="p1">*</bpt>class<ept id="p1">*</ept> with the specified signature <bpt id="p2">*</bpt>sig<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The format of <bpt id="p1">*</bpt>sig<ept id="p1">*</ept> is:</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">`instance`</ph>] <ph id="ph2">`returnType`</ph>(<ph id="ph3">`parameterType1`</ph>, <ph id="ph4">`parameterType2`</ph>, …, <ph id="ph5">`parameterTypeN`</ph>)</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> In the .NET Framework versions 1.0 and 1.1, <ph id="ph1">`sig`</ph> must be followed by a closing parenthesis: (<ph id="ph2">`sig`</ph>).</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Starting with the Net Framework 2.0 the closing parenthesis must be omitted: (<ph id="ph1">`sig`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/noil<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Suppresses IL assembly code output.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/stats<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Includes statistics on the image.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/typelist<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Produces the full list of types, to preserve type ordering in a round trip.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/unicode<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Uses Unicode encoding for the output.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/utf8<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Uses UTF-8 encoding for the output.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>ANSI is the default.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following options are valid for .exe, .dll, .obj, .lib, and .winmd files for file or console output only.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/metadata<ept id="p1">**</ept>[=<ph id="ph1">`specifier`</ph>]</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Shows metadata, where <ph id="ph1">`specifier`</ph> is:</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MDHEADER<ept id="p1">**</ept> — Show the metadata header information and sizes.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HEX<ept id="p1">**</ept> — Show information in hex as well as in words.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CSV<ept id="p1">**</ept> — Show the record counts and heap sizes.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>UNREX<ept id="p1">**</ept> — Show unresolved externals.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SCHEMA<ept id="p1">**</ept> — Show the metadata header and schema information.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>RAW<ept id="p1">**</ept> — Show the raw metadata tables.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HEAPS<ept id="p1">**</ept> — Show the raw heaps.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>VALIDATE<ept id="p1">**</ept> — Validate the consistency of the metadata.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>You can specify <bpt id="p1">**</bpt>/metadata<ept id="p1">**</ept> multiple times, with different values for <ph id="ph1">`specifier`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The following options are valid for .lib files for file or console output only.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/objectfile<ept id="p1">**</ept><ph id="ph1">=</ph><ph id="ph2">`filename`</ph></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Shows the metadata of a single object file in the specified library.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>All options for Ildasm.exe are case-insensitive and recognized by the first three letters.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">**</bpt>/quo<ept id="p1">**</ept> is equivalent to <bpt id="p2">**</bpt>/quoteallnames<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Options that specify arguments accept either a colon (:) or an equal sign (=) as the separator between the option and the argument.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">**</bpt>/output:<ept id="p1">**</ept> <bpt id="p2">*</bpt>filename<ept id="p2">*</ept> is equivalent to <bpt id="p3">**</bpt>/output=<ept id="p3">**</ept> <bpt id="p4">*</bpt>filename<ept id="p4">*</ept>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Ildasm.exe only operates on PE files on disk.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>It does not operate on files installed in the global assembly cache.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The text file produced by Ildasm.exe can be used as input to the IL Assembler (Ilasm.exe).</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This is useful, for example, when compiling code in a programming language that does not support all the runtime metadata attributes.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>After compiling the code and running its output through Ildasm.exe, the resulting IL text file can be hand-edited to add the missing attributes.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can then run this text file through the IL Assembler to produce a final executable file.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Currently, you cannot use this technique with PE files that contain embedded native code (for example, PE files produced by Visual C++).</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>You can use the default GUI in the IL Disassembler to view the metadata and disassembled code of any existing PE file in a hierarchical tree view.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To use the GUI, type <bpt id="p1">**</bpt>ildasm<ept id="p1">**</ept> at the command line without supplying the <bpt id="p2">*</bpt>PEfilename<ept id="p2">*</ept> argument or any options.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, you can navigate to the PE file that you want to load into Ildasm.exe.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To save the metadata and disassembled code displayed for the selected PE, select the <bpt id="p1">**</bpt>Dump<ept id="p1">**</ept> command from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To save the hierarchical tree view only, select the <bpt id="p1">**</bpt>Dump Treeview<ept id="p1">**</ept> command from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For a detailed guide to loading a file into Ildasm.exe and interpreting the output, see the Ildasm.exe Tutorial, located in the Samples folder that ships with the <ph id="ph1">[!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If you provide Ildasm.exe with a <bpt id="p1">*</bpt>PEfilename<ept id="p1">*</ept> argument that contains embedded resources, the tool produces multiple output files: a text file that contains IL code and, for each embedded managed resource, a .resources file produced using the resource's name from metadata.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If an unmanaged resource is embedded in <bpt id="p1">*</bpt>PEfilename<ept id="p1">*</ept>, a .res file is produced using the filename specified for IL output by the <bpt id="p2">**</bpt>/output<ept id="p2">**</ept> option<bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Ildasm.exe shows only metadata descriptions for .obj and .lib input files.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>IL code for these file types is not disassembled.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You can run Ildasm.exe over an.exe or .dll file to determine whether the file is managed.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If the file is not managed, the tool displays a message stating that the file has no valid common language runtime header and cannot be disassembled.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If the file is managed, the tool runs successfully.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Version Information</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, Ildasm.exe handles an unrecognized marshal BLOB (binary large object) by displaying the raw binary content.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For example, the following code shows how a marshal BLOB generated by a C# program is displayed:</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, Ildasm.exe displays attributes that are applied to interface implementations, as shown in the following excerpt from Ildasm.exe output:</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The following command causes the metadata and disassembled code for the PE file <ph id="ph1">`MyHello.exe`</ph> to display in the Ildasm.exe default GUI.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The following command disassembles the file <ph id="ph1">`MyFile.exe`</ph> and stores the resulting IL Assembler text in the file <ph id="ph2">`MyFile.il`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The following command disassembles the file <ph id="ph1">`MyFile.exe`</ph> and displays the resulting IL Assembler text to the console window.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If the file <ph id="ph1">`MyApp.exe`</ph> contains embedded managed and unmanaged resources, the following command produces four files: <ph id="ph2">`MyApp.il`</ph>, <ph id="ph3">`MyApp.res`</ph>, <ph id="ph4">`Icons.resources,`</ph> and <ph id="ph5">`Message.resources`</ph>:</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The following command disassembles the method <ph id="ph1">`MyMethod`</ph> within the class <ph id="ph2">`MyClass`</ph> in <ph id="ph3">`MyFile.exe`</ph> and displays the output to the console window.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>In the previous example, there could be several methods named <ph id="ph1">`MyMethod`</ph> with different signatures.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The following command disassembles the instance method <ph id="ph1">`MyMethod`</ph> with the return type of <bpt id="p1">**</bpt>void<ept id="p1">**</ept> and the parameter types <bpt id="p2">**</bpt>int32<ept id="p2">**</ept> and <bpt id="p3">**</bpt>string<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In the .NET Framework versions 1.0 and 1.1, the left parenthesis that follows the method name must be balanced by a right parenthesis after the signature: <ph id="ph1">`MyMethod(instance void(int32))`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0 the closing parenthesis must be omitted: <ph id="ph1">`MyMethod(instance void(int32)`</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>To retrieve a <ph id="ph1">`static`</ph> method (<ph id="ph2">`Shared`</ph> method in Visual Basic), omit the keyword <ph id="ph3">`instance`</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Class types that are not primitive types like <ph id="ph1">`int32`</ph> and <ph id="ph2">`string`</ph> must include the namespace and must be preceded by the keyword <ph id="ph3">`class`</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>External types must be preceded by the library name in square brackets.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The following command disassembles a static method named <ph id="ph1">`MyMethod`</ph> that has one parameter of type <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> and has a return type of <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A nested type must be preceded by its containing class, delimited by a forward slash.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For example, if the <ph id="ph1">`MyNamespace.MyClass`</ph> class contains a nested class named <ph id="ph2">`NestedClass`</ph>, the nested class is identified as follows: <ph id="ph3">`class MyNamespace.MyClass/NestedClass`</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tools<ept id="p1">](../../../docs/framework/tools/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Ilasm.exe (IL Assembler)<ept id="p1">](../../../docs/framework/tools/ilasm-exe-il-assembler.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Managed Execution Process<ept id="p1">](../../../docs/standard/managed-execution-process.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Command Prompts<ept id="p1">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>