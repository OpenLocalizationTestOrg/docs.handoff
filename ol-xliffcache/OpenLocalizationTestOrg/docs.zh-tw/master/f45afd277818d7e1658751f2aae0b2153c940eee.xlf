<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="addmodule-compiler-option.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f45afd277818d7e1658751f2aae0b2153c940eee</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\compiler-options\addmodule-compiler-option.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03b6c8b26079642c7bd576f5144c1f81de439de6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">053219417d7bb3c3c3da2d9c8f2859d6bdc5c129</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>-addmodule (C# Compiler Options)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>-addmodule (C# Compiler Options)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This option adds a module that was created with the target:module switch to the current compilation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Arguments</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`file`</ph>, <ph id="ph2">`file2`</ph></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An output file that contains metadata.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The file cannot contain an assembly manifest.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To import more than one file, separate file names with either a comma or a semicolon.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All modules added with <bpt id="p1">**</bpt>-addmodule<ept id="p1">**</ept> must be in the same directory as the output file at run time.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>That is, you can specify a module in any directory at compile time but the module must be in the application directory at run time.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the module is not in the application directory at run time, you will get a <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`file`</ph> cannot contain an assembly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, if the output file was created with <bpt id="p1">[</bpt>-target:module<ept id="p1">](../../../csharp/language-reference/compiler-options/target-module-compiler-option.md)</ept>, its metadata can be imported with <bpt id="p2">**</bpt>-addmodule<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the output file was created with a <bpt id="p1">**</bpt>-target<ept id="p1">**</ept> option other than <bpt id="p2">**</bpt>-target:module<ept id="p2">**</ept>, its metadata cannot be imported with <bpt id="p3">**</bpt>-addmodule<ept id="p3">**</ept> but can be imported with <bpt id="p4">[</bpt>-reference<ept id="p4">](../../../csharp/language-reference/compiler-options/reference-compiler-option.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This compiler option is unavailable in Visual Studio; a project cannot reference a module.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition, this compiler option cannot be changed programmatically.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Compile source file <ph id="ph1">`input.cs`</ph> and add metadata from <ph id="ph2">`metad1.netmodule`</ph> and <ph id="ph3">`metad2.netmodule`</ph> to produce <ph id="ph4">`out.exe`</ph>:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Compiler Options<ept id="p1">](../../../csharp/language-reference/compiler-options/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Managing Project and Solution Properties<ept id="p1">](/visualstudio/ide/managing-project-and-solution-properties)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Multifile Assemblies<ept id="p1">](../../../framework/app-domains/multifile-assemblies.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Build a Multifile Assembly<ept id="p1">](../../../framework/app-domains/how-to-build-a-multifile-assembly.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>