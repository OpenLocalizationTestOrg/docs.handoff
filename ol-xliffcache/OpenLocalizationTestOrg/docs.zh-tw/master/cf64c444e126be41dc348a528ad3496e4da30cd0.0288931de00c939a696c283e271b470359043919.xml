{"content":"---\ntitle: \"Connection String Syntax | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 0977aeee-04d1-4cce-bbed-750c77fce06e\ncaps.latest.revision: 11\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Connection String Syntax\nEach .NET Framework data provider has a `Connection` object that inherits from <xref:System.Data.Common.DbConnection> as well as a provider-specific <xref:System.Data.Common.DbConnection.ConnectionString%2A> property. The specific connection string syntax for each provider is documented in its `ConnectionString` property. The following table lists the four data providers that are included in the .NET Framework.  \n  \n|.NET Framework data provider|Description|  \n|----------------------------------|-----------------|  \n|<xref:System.Data.SqlClient>|Provides data access for Microsoft SQL Server. For more information on connection string syntax, see <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.|  \n|<xref:System.Data.OleDb>|Provides data access for data sources exposed using OLE DB. For more information on connection string syntax, see <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.|  \n|<xref:System.Data.Odbc>|Provides data access for data sources exposed using ODBC. For more information on connection string syntax, see <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>.|  \n|<xref:System.Data.OracleClient>|Provides data access for Oracle version 8.1.7 or later. For more information on connection string syntax, see <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.|  \n  \n## Connection String Builders  \n ADO.NET 2.0 introduced the following connection string builders for the .NET Framework data providers.  \n  \n-   <xref:System.Data.SqlClient.SqlConnectionStringBuilder>  \n  \n-   <xref:System.Data.OleDb.OleDbConnectionStringBuilder>  \n  \n-   <xref:System.Data.Odbc.OdbcConnectionStringBuilder>  \n  \n-   <xref:System.Data.OracleClient.OracleConnectionStringBuilder>  \n  \n The connection string builders allow you to construct syntactically valid connection strings at run time, so you do not have to manually concatenate connection string values in your code. For more information, see [Connection String Builders](../../../../docs/framework/data/adonet/connection-string-builders.md).  \n  \n## Windows Authentication  \n We recommend using Windows Authentication (sometimes referred to as *integrated security*) to connect to data sources that support it. The syntax employed in the connection string varies by provider. The following table shows the Windows Authentication syntax used with the .NET Framework data providers.  \n  \n|Provider|Syntax|  \n|--------------|------------|  \n|`SqlClient`|`Integrated Security=true;`<br /><br /> `-- or --`<br /><br /> `Integrated Security=SSPI;`|  \n|`OleDb`|`Integrated Security=SSPI;`|  \n|`Odbc`|`Trusted_Connection=yes;`|  \n|`OracleClient`|`Integrated Security=yes;`|  \n  \n> [!NOTE]\n>  `Integrated Security=true` throws an exception when used with the `OleDb` provider.  \n  \n## SqlClient Connection Strings  \n The syntax for a <xref:System.Data.SqlClient.SqlConnection> connection string is documented in the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName> property. You can use the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property to get or set a connection string for a SQL Server database. If you need to connect to an earlier version of SQL Server, you must use the .NET Framework Data Provider for OleDb (<xref:System.Data.OleDb>). Most connection string keywords also map to properties in the <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.  \n  \n Each of the following forms of syntax will use Windows Authentication to connect to the **AdventureWorks** database on a local server.  \n  \n```  \n\"Persist Security Info=False;Integrated Security=true;  \n    Initial Catalog=AdventureWorks;Server=MSSQL1\"  \n\"Persist Security Info=False;Integrated Security=SSPI;  \n    database=AdventureWorks;server=(local)\"  \n\"Persist Security Info=False;Trusted_Connection=True;  \n    database=AdventureWorks;server=(local)\"  \n```  \n  \n### SQL Server Logins  \n Windows Authentication is preferred for connecting to SQL Server. However, if SQL Server Authentication is required, use the following syntax to specify a user name and password. In this example, asterisks are used to represent a valid user name and password.  \n  \n```  \n\"Persist Security Info=False;User ID=*****;Password=*****;Initial Catalog=AdventureWorks;Server=MySqlServer\"  \n```  \n  \n> [!IMPORTANT]\n>  The default setting for the`Persist``Security Info` keyword is `false`. Setting it to `true` or `yes` allows security-sensitive information, including the user ID and password, to be obtained from the connection after the connection has been opened. Keep `Persist``Security Info` set to `false` to ensure that an untrusted source does not have access to sensitive connection string information.  \n  \n To connect to a named instance of SQL Server, use the *server name\\instance name* syntax.  \n  \n```  \nData Source=MySqlServer\\MSSQL1;\"  \n```  \n  \n You can also set the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource%2A> property of the `SqlConnectionStringBuilder` to the instance name when building a connection string. The <xref:System.Data.SqlClient.SqlConnection.DataSource%2A> property of a <xref:System.Data.SqlClient.SqlConnection> object is read-only.  \n  \n> [!NOTE]\n>  Windows authentication takes precedence over SQL Server logins. If you specify both Integrated Security=true as well as a user name and password, the user name and password will be ignored and Windows authentication will be used.  \n  \n### Type System Version Changes  \n The `Type System Version` keyword in a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName> specifies the client-side representation of [!INCLUDE[ssNoVersion](../../../../includes/ssnoversion-md.md)] types. See <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName> for more information about the `Type System Version` keyword.  \n  \n## Connecting and Attaching to SQL Server Express User Instances  \n User instances are a feature in SQL Server Express. They allow a user running on a least-privileged local Windows account to attach and run a SQL Server database without requiring administrative privileges. A user instance executes with the user's Windows credentials, not as a service.  \n  \n For more information on working with user instances, see [SQL Server Express User Instances](../../../../docs/framework/data/adonet/sql/sql-server-express-user-instances.md).  \n  \n## Using TrustServerCertificate  \n The `TrustServerCertificate` keyword is valid only when connecting to a [!INCLUDE[ssNoVersion](../../../../includes/ssnoversion-md.md)] instance with a valid certificate. When `TrustServerCertificate` is set to `true`, the transport layer will use SSL to encrypt the channel and bypass walking the certificate chain to validate trust.  \n  \n```  \n\"TrustServerCertificate=true;\"   \n```  \n  \n> [!NOTE]\n>  If `TrustServerCertificate` is set to `true` and encryption is turned on, the encryption level specified on the server will be used even if `Encrypt` is set to `false` in the connection string. The connection will fail otherwise.  \n  \n### Enabling Encryption  \n To enable encryption when a certificate has not been provisioned on the server, the **Force Protocol Encryption** and the **Trust Server Certificate** options must be set in SQL Server Configuration Manager. In this case, encryption will use a self-signed server certificate without validation if no verifiable certificate has been provisioned on the server.  \n  \n Application settings cannot reduce the level of security configured in SQL Server, but can optionally strengthen it. An application can request encryption by setting the `TrustServerCertificate` and `Encrypt` keywords to `true`, guaranteeing that encryption takes place even when a server certificate has not been provisioned and **Force Protocol Encryption** has not been configured for the client. However, if `TrustServerCertificate` is not enabled in the client configuration, a provisioned server certificate is still required.  \n  \n The following table describes all cases.  \n  \n|Force Protocol Encryption client setting|Trust Server Certificate client setting|Encrypt/Use Encryption for Data connection string/attribute|Trust Server Certificate connection string/attribute|Result|  \n|----------------------------------------------|---------------------------------------------|-------------------------------------------------------------------|-----------------------------------------------------------|------------|  \n|No|N/A|No (default)|Ignored|No encryption occurs.|  \n|No|N/A|Yes|No (default)|Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.|  \n|No|N/A|Yes|Yes|Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.|  \n|Yes|No|Ignored|Ignored|Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.|  \n|Yes|Yes|No (default)|Ignored|Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.|  \n|Yes|Yes|Yes|No (default)|Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.|  \n|Yes|Yes|Yes|Yes|Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.|  \n  \n For more information, see [Using Encryption Without Validation](http://go.microsoft.com/fwlink/?LinkId=120500) in SQL Server Books Online.  \n  \n## OleDb Connection Strings  \n The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property of a <xref:System.Data.OleDb.OleDbConnection> allows you to get or set a connection string for an OLE DB data source, such as Microsoft Access. You can also create an `OleDb` connection string at run time by using the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> class.  \n  \n### OleDb Connection String Syntax  \n You must specify a provider name for an <xref:System.Data.OleDb.OleDbConnection> connection string. The following connection string connects to a Microsoft Access database using the Jet provider. Note that the `UserID` and `Password` keywords are optional if the database is unsecured (the default).  \n  \n```  \nProvider=Microsoft.Jet.OLEDB.4.0; Data Source=d:\\Northwind.mdb;User ID=Admin;Password=;   \n```  \n  \n If the Jet database is secured using user-level security, you must provide the location of the workgroup information file (.mdw). The workgroup information file is used to validate the credentials presented in the connection string.  \n  \n```  \nProvider=Microsoft.Jet.OLEDB.4.0;Data Source=d:\\Northwind.mdb;Jet OLEDB:System Database=d:\\NorthwindSystem.mdw;User ID=*****;Password=*****;  \n```  \n  \n> [!IMPORTANT]\n>  It is possible to supply connection information for an **OleDbConnection** in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted, and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework. UDL files are not supported for **SqlClient**.  \n  \n### Using DataDirectory to Connect to Access/Jet  \n `DataDirectory` is not exclusive to `SqlClient`. It can also be used with the <xref:System.Data.OleDb> and <xref:System.Data.Odbc> .NET data providers. The following sample <xref:System.Data.OleDb.OleDbConnection> string demonstrates the syntax required to connect to the Northwind.mdb located in the application's app_data folder. The system database (System.mdw) is also stored in that location.  \n  \n```  \n\"Provider=Microsoft.Jet.OLEDB.4.0;  \nData Source=|DataDirectory|\\Northwind.mdb;  \nJet OLEDB:System Database=|DataDirectory|\\System.mdw;\"  \n```  \n  \n> [!IMPORTANT]\n>  Specifying the location of the system database in the connection string is not required if the Access/Jet database is unsecured. Security is off by default, with all users connecting as the built-in Admin user with a blank password. Even when user-level security is correctly implemented, a Jet database remains vulnerable to attack. Therefore, storing sensitive information in an Access/Jet database is not recommended because of the inherent weakness of its file-based security scheme.  \n  \n### Connecting to Excel  \n The Microsoft Jet provider is used to connect to an Excel workbook. In the following connection string, the `Extended Properties` keyword sets properties that are specific to Excel. \"HDR=Yes;\" indicates that the first row contains column names, not data, and \"IMEX=1;\" tells the driver to always read \"intermixed\" data columns as text.  \n  \n```  \nProvider=Microsoft.Jet.OLEDB.4.0;Data Source=D:\\MyExcel.xls;Extended Properties=\"\"Excel 8.0;HDR=Yes;IMEX=1\"\"  \n```  \n  \n Note that the double quotation character required for the `Extended Properties` must also be enclosed in double quotation marks.  \n  \n### Data Shape Provider Connection String Syntax  \n Use both the `Provider` and the `Data Provider` keywords when using the Microsoft Data Shape provider. The following example uses the Shape provider to connect to a local instance of SQL Server.  \n  \n```  \n\"Provider=MSDataShape;Data Provider=SQLOLEDB;Data Source=(local);Initial Catalog=pubs;Integrated Security=SSPI;\"   \n```  \n  \n## Odbc Connection Strings  \n The <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property of a <xref:System.Data.Odbc.OdbcConnection> allows you to get or set a connection string for an OLE DB data source. Odbc connection strings are also supported by the <xref:System.Data.Odbc.OdbcConnectionStringBuilder>.  \n  \n The following connection string uses the Microsoft Text Driver.  \n  \n```  \nDriver={Microsoft Text Driver (*.txt; *.csv)};DBQ=d:\\bin  \n```  \n  \n### Using DataDirectory to Connect to Visual FoxPro  \n The following <xref:System.Data.Odbc.OdbcConnection> connection string sample demonstrates using `DataDirectory` to connect to a Microsoft Visual FoxPro file.  \n  \n```  \n\"Driver={Microsoft Visual FoxPro Driver};  \nSourceDB=|DataDirectory|\\MyData.DBC;SourceType=DBC;\"  \n```  \n  \n## Oracle Connection Strings  \n The <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> property of a <xref:System.Data.OracleClient.OracleConnection> allows you to get or set a connection string for an OLE DB data source. Oracle connection strings are also supported by the <xref:System.Data.OracleClient.OracleConnectionStringBuilder> .  \n  \n```  \nData Source=Oracle9i;User ID=*****;Password=*****;  \n```  \n  \n For more information on ODBC connection string syntax, see <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  \n  \n## See Also  \n [Connection Strings](../../../../docs/framework/data/adonet/connection-strings.md)   \n [Connecting to a Data Source](../../../../docs/framework/data/adonet/connecting-to-a-data-source.md)   \n [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)","nodes":[{"pos":[4,356],"nodes":[{"content":"Connection String Syntax | Microsoft Docs","nodes":[{"pos":[0,41],"content":"Connection String Syntax | Microsoft Docs","nodes":[{"content":"Connection String Syntax | Microsoft Docs","pos":[0,41]}]}],"pos":[6,50],"yaml":true}],"content":"title: \"Connection String Syntax | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 0977aeee-04d1-4cce-bbed-750c77fce06e\ncaps.latest.revision: 11\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","yamlblock":true},{"pos":[363,387],"content":"Connection String Syntax","linkify":"Connection String Syntax","nodes":[{"content":"Connection String Syntax","pos":[0,24]}]},{"content":"Each .NET Framework data provider has a <ph id=\"ph1\">`Connection`</ph> object that inherits from <ph id=\"ph2\">&lt;xref:System.Data.Common.DbConnection&gt;</ph> as well as a provider-specific <ph id=\"ph3\">&lt;xref:System.Data.Common.DbConnection.ConnectionString%2A&gt;</ph> property.","pos":[388,605],"source":"Each .NET Framework data provider has a `Connection` object that inherits from <xref:System.Data.Common.DbConnection> as well as a provider-specific <xref:System.Data.Common.DbConnection.ConnectionString%2A> property."},{"content":"The specific connection string syntax for each provider is documented in its <ph id=\"ph1\">`ConnectionString`</ph> property.","pos":[606,711],"source":" The specific connection string syntax for each provider is documented in its `ConnectionString` property."},{"content":"The following table lists the four data providers that are included in the .NET Framework.","pos":[712,802]},{"content":".NET Framework data provider","pos":[809,837]},{"content":"Description","pos":[838,849]},{"content":"Provides data access for Microsoft SQL Server.","pos":[940,986]},{"content":"For more information on connection string syntax, see <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>.","pos":[987,1104],"source":" For more information on connection string syntax, see <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>."},{"content":"Provides data access for data sources exposed using OLE DB.","pos":[1134,1193]},{"content":"For more information on connection string syntax, see <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph>.","pos":[1194,1309],"source":" For more information on connection string syntax, see <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>."},{"content":"Provides data access for data sources exposed using ODBC.","pos":[1338,1395]},{"content":"For more information on connection string syntax, see <ph id=\"ph1\">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph>.","pos":[1396,1509],"source":" For more information on connection string syntax, see <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>."},{"content":"Provides data access for Oracle version 8.1.7 or later.","pos":[1546,1601]},{"content":"For more information on connection string syntax, see <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph>.","pos":[1602,1725],"source":" For more information on connection string syntax, see <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>."},{"pos":[1735,1761],"content":"Connection String Builders","linkify":"Connection String Builders","nodes":[{"content":"Connection String Builders","pos":[0,26]}]},{"content":"ADO.NET 2.0 introduced the following connection string builders for the .NET Framework data providers.","pos":[1765,1867]},{"content":"The connection string builders allow you to construct syntactically valid connection strings at run time, so you do not have to manually concatenate connection string values in your code.","pos":[2134,2321]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Connection String Builders<ept id=\"p1\">](../../../../docs/framework/data/adonet/connection-string-builders.md)</ept>.","pos":[2322,2447],"source":" For more information, see [Connection String Builders](../../../../docs/framework/data/adonet/connection-string-builders.md)."},{"pos":[2456,2478],"content":"Windows Authentication","linkify":"Windows Authentication","nodes":[{"content":"Windows Authentication","pos":[0,22]}]},{"content":"We recommend using Windows Authentication (sometimes referred to as <bpt id=\"p1\">*</bpt>integrated security<ept id=\"p1\">*</ept>) to connect to data sources that support it.","pos":[2482,2616],"source":"We recommend using Windows Authentication (sometimes referred to as *integrated security*) to connect to data sources that support it."},{"content":"The syntax employed in the connection string varies by provider.","pos":[2617,2681]},{"content":"The following table shows the Windows Authentication syntax used with the .NET Framework data providers.","pos":[2682,2786]},{"content":"Provider","pos":[2793,2801]},{"content":"Syntax","pos":[2802,2808]},{"pos":[3079,3173],"content":"[!NOTE]\n `Integrated Security=true` throws an exception when used with the `OleDb` provider.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">`Integrated Security=true`</ph> throws an exception when used with the <ph id=\"ph2\">`OleDb`</ph> provider.","pos":[9,92],"source":"`Integrated Security=true` throws an exception when used with the `OleDb` provider."}]},{"pos":[3182,3210],"content":"SqlClient Connection Strings","linkify":"SqlClient Connection Strings","nodes":[{"content":"SqlClient Connection Strings","pos":[0,28]}]},{"content":"The syntax for a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> connection string is documented in the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName&gt;</ph> property.","pos":[3214,3410],"source":"The syntax for a <xref:System.Data.SqlClient.SqlConnection> connection string is documented in the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName> property."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property to get or set a connection string for a SQL Server database.","pos":[3411,3559],"source":" You can use the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property to get or set a connection string for a SQL Server database."},{"content":"If you need to connect to an earlier version of SQL Server, you must use the .NET Framework Data Provider for OleDb (<ph id=\"ph1\">&lt;xref:System.Data.OleDb&gt;</ph>).","pos":[3560,3703],"source":" If you need to connect to an earlier version of SQL Server, you must use the .NET Framework Data Provider for OleDb (<xref:System.Data.OleDb>)."},{"content":"Most connection string keywords also map to properties in the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>.","pos":[3704,3822],"source":" Most connection string keywords also map to properties in the <xref:System.Data.SqlClient.SqlConnectionStringBuilder>."},{"pos":[3829,3963],"content":"Each of the following forms of syntax will use Windows Authentication to connect to the <bpt id=\"p1\">**</bpt>AdventureWorks<ept id=\"p1\">**</ept> database on a local server.","source":"Each of the following forms of syntax will use Windows Authentication to connect to the **AdventureWorks** database on a local server."},{"pos":[4302,4319],"content":"SQL Server Logins","linkify":"SQL Server Logins","nodes":[{"content":"SQL Server Logins","pos":[0,17]}]},{"content":"Windows Authentication is preferred for connecting to SQL Server.","pos":[4323,4388]},{"content":"However, if SQL Server Authentication is required, use the following syntax to specify a user name and password.","pos":[4389,4501]},{"content":"In this example, asterisks are used to represent a valid user name and password.","pos":[4502,4582]},{"pos":[4716,5126],"content":"[!IMPORTANT]\n The default setting for the`Persist``Security Info` keyword is `false`. Setting it to `true` or `yes` allows security-sensitive information, including the user ID and password, to be obtained from the connection after the connection has been opened. Keep `Persist``Security Info` set to `false` to ensure that an untrusted source does not have access to sensitive connection string information.","leadings":["","> "],"nodes":[{"content":"The default setting for the`Persist``Security Info` keyword is `false`. Setting it to `true` or `yes` allows security-sensitive information, including the user ID and password, to be obtained from the connection after the connection has been opened. Keep `Persist``Security Info` set to `false` to ensure that an untrusted source does not have access to sensitive connection string information.","pos":[14,408],"nodes":[{"content":"The default setting for the<ph id=\"ph1\">`Persist``Security Info`</ph> keyword is <ph id=\"ph2\">`false`</ph>.","pos":[0,71],"source":"The default setting for the`Persist``Security Info` keyword is `false`."},{"content":"Setting it to <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`yes`</ph> allows security-sensitive information, including the user ID and password, to be obtained from the connection after the connection has been opened.","pos":[72,249],"source":" Setting it to `true` or `yes` allows security-sensitive information, including the user ID and password, to be obtained from the connection after the connection has been opened."},{"content":"Keep <ph id=\"ph1\">`Persist``Security Info`</ph> set to <ph id=\"ph2\">`false`</ph> to ensure that an untrusted source does not have access to sensitive connection string information.","pos":[250,394],"source":" Keep `Persist``Security Info` set to `false` to ensure that an untrusted source does not have access to sensitive connection string information."}]}]},{"pos":[5133,5222],"content":"To connect to a named instance of SQL Server, use the <bpt id=\"p1\">*</bpt>server name\\instance name<ept id=\"p1\">*</ept> syntax.","source":"To connect to a named instance of SQL Server, use the *server name\\instance name* syntax."},{"content":"You can also set the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource%2A&gt;</ph> property of the <ph id=\"ph2\">`SqlConnectionStringBuilder`</ph> to the instance name when building a connection string.","pos":[5279,5470],"source":"You can also set the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource%2A> property of the `SqlConnectionStringBuilder` to the instance name when building a connection string."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection.DataSource%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object is read-only.","pos":[5471,5609],"source":" The <xref:System.Data.SqlClient.SqlConnection.DataSource%2A> property of a <xref:System.Data.SqlClient.SqlConnection> object is read-only."},{"pos":[5617,5857],"content":"[!NOTE]\n Windows authentication takes precedence over SQL Server logins. If you specify both Integrated Security=true as well as a user name and password, the user name and password will be ignored and Windows authentication will be used.","leadings":["","> "],"nodes":[{"content":"Windows authentication takes precedence over SQL Server logins. If you specify both Integrated Security=true as well as a user name and password, the user name and password will be ignored and Windows authentication will be used.","pos":[9,238],"nodes":[{"content":"Windows authentication takes precedence over SQL Server logins.","pos":[0,63]},{"content":"If you specify both Integrated Security=true as well as a user name and password, the user name and password will be ignored and Windows authentication will be used.","pos":[64,229]}]}]},{"pos":[5867,5894],"content":"Type System Version Changes","linkify":"Type System Version Changes","nodes":[{"content":"Type System Version Changes","pos":[0,27]}]},{"content":"The <ph id=\"ph1\">`Type System Version`</ph> keyword in a <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName&gt;</ph> specifies the client-side representation of <ph id=\"ph3\">[!INCLUDE[ssNoVersion](../../../../includes/ssnoversion-md.md)]</ph> types.","pos":[5898,6139],"source":"The `Type System Version` keyword in a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName> specifies the client-side representation of [!INCLUDE[ssNoVersion](../../../../includes/ssnoversion-md.md)] types."},{"content":"See <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName&gt;</ph> for more information about the <ph id=\"ph2\">`Type System Version`</ph> keyword.","pos":[6140,6293],"source":" See <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=fullName> for more information about the `Type System Version` keyword."},{"pos":[6302,6363],"content":"Connecting and Attaching to SQL Server Express User Instances","linkify":"Connecting and Attaching to SQL Server Express User Instances","nodes":[{"content":"Connecting and Attaching to SQL Server Express User Instances","pos":[0,61]}]},{"content":"User instances are a feature in SQL Server Express.","pos":[6367,6418]},{"content":"They allow a user running on a least-privileged local Windows account to attach and run a SQL Server database without requiring administrative privileges.","pos":[6419,6573]},{"content":"A user instance executes with the user's Windows credentials, not as a service.","pos":[6574,6653]},{"pos":[6660,6834],"content":"For more information on working with user instances, see <bpt id=\"p1\">[</bpt>SQL Server Express User Instances<ept id=\"p1\">](../../../../docs/framework/data/adonet/sql/sql-server-express-user-instances.md)</ept>.","source":"For more information on working with user instances, see [SQL Server Express User Instances](../../../../docs/framework/data/adonet/sql/sql-server-express-user-instances.md)."},{"pos":[6843,6871],"content":"Using TrustServerCertificate","linkify":"Using TrustServerCertificate","nodes":[{"content":"Using TrustServerCertificate","pos":[0,28]}]},{"content":"The <ph id=\"ph1\">`TrustServerCertificate`</ph> keyword is valid only when connecting to a <ph id=\"ph2\">[!INCLUDE[ssNoVersion](../../../../includes/ssnoversion-md.md)]</ph> instance with a valid certificate.","pos":[6875,7045],"source":"The `TrustServerCertificate` keyword is valid only when connecting to a [!INCLUDE[ssNoVersion](../../../../includes/ssnoversion-md.md)] instance with a valid certificate."},{"content":"When <ph id=\"ph1\">`TrustServerCertificate`</ph> is set to <ph id=\"ph2\">`true`</ph>, the transport layer will use SSL to encrypt the channel and bypass walking the certificate chain to validate trust.","pos":[7046,7209],"source":" When `TrustServerCertificate` is set to `true`, the transport layer will use SSL to encrypt the channel and bypass walking the certificate chain to validate trust."},{"pos":[7266,7506],"content":"[!NOTE]\n If `TrustServerCertificate` is set to `true` and encryption is turned on, the encryption level specified on the server will be used even if `Encrypt` is set to `false` in the connection string. The connection will fail otherwise.","leadings":["","> "],"nodes":[{"content":"If `TrustServerCertificate` is set to `true` and encryption is turned on, the encryption level specified on the server will be used even if `Encrypt` is set to `false` in the connection string. The connection will fail otherwise.","pos":[9,238],"nodes":[{"content":"If <ph id=\"ph1\">`TrustServerCertificate`</ph> is set to <ph id=\"ph2\">`true`</ph> and encryption is turned on, the encryption level specified on the server will be used even if <ph id=\"ph3\">`Encrypt`</ph> is set to <ph id=\"ph4\">`false`</ph> in the connection string.","pos":[0,193],"source":"If `TrustServerCertificate` is set to `true` and encryption is turned on, the encryption level specified on the server will be used even if `Encrypt` is set to `false` in the connection string."},{"content":"The connection will fail otherwise.","pos":[194,229]}]}]},{"pos":[7516,7535],"content":"Enabling Encryption","linkify":"Enabling Encryption","nodes":[{"content":"Enabling Encryption","pos":[0,19]}]},{"content":"To enable encryption when a certificate has not been provisioned on the server, the <bpt id=\"p1\">**</bpt>Force Protocol Encryption<ept id=\"p1\">**</ept> and the <bpt id=\"p2\">**</bpt>Trust Server Certificate<ept id=\"p2\">**</ept> options must be set in SQL Server Configuration Manager.","pos":[7539,7746],"source":"To enable encryption when a certificate has not been provisioned on the server, the **Force Protocol Encryption** and the **Trust Server Certificate** options must be set in SQL Server Configuration Manager."},{"content":"In this case, encryption will use a self-signed server certificate without validation if no verifiable certificate has been provisioned on the server.","pos":[7747,7897]},{"content":"Application settings cannot reduce the level of security configured in SQL Server, but can optionally strengthen it.","pos":[7904,8020]},{"content":"An application can request encryption by setting the <ph id=\"ph1\">`TrustServerCertificate`</ph> and <ph id=\"ph2\">`Encrypt`</ph> keywords to <ph id=\"ph3\">`true`</ph>, guaranteeing that encryption takes place even when a server certificate has not been provisioned and <bpt id=\"p1\">**</bpt>Force Protocol Encryption<ept id=\"p1\">**</ept> has not been configured for the client.","pos":[8021,8303],"source":" An application can request encryption by setting the `TrustServerCertificate` and `Encrypt` keywords to `true`, guaranteeing that encryption takes place even when a server certificate has not been provisioned and **Force Protocol Encryption** has not been configured for the client."},{"content":"However, if <ph id=\"ph1\">`TrustServerCertificate`</ph> is not enabled in the client configuration, a provisioned server certificate is still required.","pos":[8304,8436],"source":" However, if `TrustServerCertificate` is not enabled in the client configuration, a provisioned server certificate is still required."},{"content":"The following table describes all cases.","pos":[8443,8483]},{"content":"Force Protocol Encryption client setting","pos":[8490,8530]},{"content":"Trust Server Certificate client setting","pos":[8531,8570]},{"content":"Encrypt/Use Encryption for Data connection string/attribute","pos":[8571,8630]},{"content":"Trust Server Certificate connection string/attribute","pos":[8631,8683]},{"content":"Result","pos":[8684,8690]},{"content":"No","pos":[8933,8935]},{"content":"N/A","pos":[8936,8939]},{"content":"No (default)","pos":[8940,8952]},{"content":"Ignored","pos":[8953,8960]},{"content":"No encryption occurs.","pos":[8961,8982]},{"content":"No","pos":[8987,8989]},{"content":"N/A","pos":[8990,8993]},{"content":"Yes","pos":[8994,8997]},{"content":"No (default)","pos":[8998,9010]},{"content":"Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.","pos":[9011,9118]},{"content":"No","pos":[9123,9125]},{"content":"N/A","pos":[9126,9129]},{"content":"Yes","pos":[9130,9133]},{"content":"Yes","pos":[9134,9137]},{"content":"Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.","pos":[9138,9245]},{"content":"Yes","pos":[9250,9253]},{"content":"No","pos":[9254,9256]},{"content":"Ignored","pos":[9257,9264]},{"content":"Ignored","pos":[9265,9272]},{"content":"Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.","pos":[9273,9380]},{"content":"Yes","pos":[9385,9388]},{"content":"Yes","pos":[9389,9392]},{"content":"No (default)","pos":[9393,9405]},{"content":"Ignored","pos":[9406,9413]},{"content":"Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.","pos":[9414,9521]},{"content":"Yes","pos":[9526,9529]},{"content":"Yes","pos":[9530,9533]},{"content":"Yes","pos":[9534,9537]},{"content":"No (default)","pos":[9538,9550]},{"content":"Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.","pos":[9551,9658]},{"content":"Yes","pos":[9663,9666]},{"content":"Yes","pos":[9667,9670]},{"content":"Yes","pos":[9671,9674]},{"content":"Yes","pos":[9675,9678]},{"content":"Encryption occurs only if there is a verifiable server certificate, otherwise the connection attempt fails.","pos":[9679,9786]},{"pos":[9794,9932],"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Encryption Without Validation<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=120500)</ept> in SQL Server Books Online.","source":"For more information, see [Using Encryption Without Validation](http://go.microsoft.com/fwlink/?LinkId=120500) in SQL Server Books Online."},{"pos":[9941,9965],"content":"OleDb Connection Strings","linkify":"OleDb Connection Strings","nodes":[{"content":"OleDb Connection Strings","pos":[0,24]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> allows you to get or set a connection string for an OLE DB data source, such as Microsoft Access.","pos":[9969,10186],"source":"The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property of a <xref:System.Data.OleDb.OleDbConnection> allows you to get or set a connection string for an OLE DB data source, such as Microsoft Access."},{"content":"You can also create an <ph id=\"ph1\">`OleDb`</ph> connection string at run time by using the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> class.","pos":[10187,10321],"source":" You can also create an `OleDb` connection string at run time by using the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> class."},{"pos":[10331,10361],"content":"OleDb Connection String Syntax","linkify":"OleDb Connection String Syntax","nodes":[{"content":"OleDb Connection String Syntax","pos":[0,30]}]},{"content":"You must specify a provider name for an <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> connection string.","pos":[10365,10464],"source":"You must specify a provider name for an <xref:System.Data.OleDb.OleDbConnection> connection string."},{"content":"The following connection string connects to a Microsoft Access database using the Jet provider.","pos":[10465,10560]},{"content":"Note that the <ph id=\"ph1\">`UserID`</ph> and <ph id=\"ph2\">`Password`</ph> keywords are optional if the database is unsecured (the default).","pos":[10561,10664],"source":" Note that the `UserID` and `Password` keywords are optional if the database is unsecured (the default)."},{"content":"If the Jet database is secured using user-level security, you must provide the location of the workgroup information file (.mdw).","pos":[10777,10906]},{"content":"The workgroup information file is used to validate the credentials presented in the connection string.","pos":[10907,11009]},{"pos":[11175,11591],"content":"[!IMPORTANT]\n It is possible to supply connection information for an **OleDbConnection** in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted, and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework. UDL files are not supported for **SqlClient**.","leadings":["","> "],"nodes":[{"content":"It is possible to supply connection information for an **OleDbConnection** in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted, and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework. UDL files are not supported for **SqlClient**.","pos":[14,414],"nodes":[{"content":"It is possible to supply connection information for an <bpt id=\"p1\">**</bpt>OleDbConnection<ept id=\"p1\">**</ept> in a Universal Data Link (UDL) file; however you should avoid doing so.","pos":[0,146],"source":"It is possible to supply connection information for an **OleDbConnection** in a Universal Data Link (UDL) file; however you should avoid doing so."},{"content":"UDL files are not encrypted, and expose connection string information in clear text.","pos":[147,231]},{"content":"Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.","pos":[232,353]},{"content":"UDL files are not supported for <bpt id=\"p1\">**</bpt>SqlClient<ept id=\"p1\">**</ept>.","pos":[354,400],"source":" UDL files are not supported for **SqlClient**."}]}]},{"pos":[11601,11645],"content":"Using DataDirectory to Connect to Access/Jet","linkify":"Using DataDirectory to Connect to Access/Jet","nodes":[{"content":"Using DataDirectory to Connect to Access/Jet","pos":[0,44]}]},{"content":"<ph id=\"ph1\">`DataDirectory`</ph> is not exclusive to <ph id=\"ph2\">`SqlClient`</ph>.","pos":[11649,11697],"source":"`DataDirectory` is not exclusive to `SqlClient`."},{"content":"It can also be used with the <ph id=\"ph1\">&lt;xref:System.Data.OleDb&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.Odbc&gt;</ph> .NET data providers.","pos":[11698,11800],"source":" It can also be used with the <xref:System.Data.OleDb> and <xref:System.Data.Odbc> .NET data providers."},{"content":"The following sample <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> string demonstrates the syntax required to connect to the Northwind.mdb located in the application's app_data folder.","pos":[11801,11980],"source":" The following sample <xref:System.Data.OleDb.OleDbConnection> string demonstrates the syntax required to connect to the Northwind.mdb located in the application's app_data folder."},{"content":"The system database (System.mdw) is also stored in that location.","pos":[11981,12046]},{"pos":[12208,12711],"content":"[!IMPORTANT]\n Specifying the location of the system database in the connection string is not required if the Access/Jet database is unsecured. Security is off by default, with all users connecting as the built-in Admin user with a blank password. Even when user-level security is correctly implemented, a Jet database remains vulnerable to attack. Therefore, storing sensitive information in an Access/Jet database is not recommended because of the inherent weakness of its file-based security scheme.","leadings":["","> "],"nodes":[{"content":"Specifying the location of the system database in the connection string is not required if the Access/Jet database is unsecured. Security is off by default, with all users connecting as the built-in Admin user with a blank password. Even when user-level security is correctly implemented, a Jet database remains vulnerable to attack. Therefore, storing sensitive information in an Access/Jet database is not recommended because of the inherent weakness of its file-based security scheme.","pos":[14,501],"nodes":[{"content":"Specifying the location of the system database in the connection string is not required if the Access/Jet database is unsecured.","pos":[0,128]},{"content":"Security is off by default, with all users connecting as the built-in Admin user with a blank password.","pos":[129,232]},{"content":"Even when user-level security is correctly implemented, a Jet database remains vulnerable to attack.","pos":[233,333]},{"content":"Therefore, storing sensitive information in an Access/Jet database is not recommended because of the inherent weakness of its file-based security scheme.","pos":[334,487]}]}]},{"pos":[12721,12740],"content":"Connecting to Excel","linkify":"Connecting to Excel","nodes":[{"content":"Connecting to Excel","pos":[0,19]}]},{"content":"The Microsoft Jet provider is used to connect to an Excel workbook.","pos":[12744,12811]},{"content":"In the following connection string, the <ph id=\"ph1\">`Extended Properties`</ph> keyword sets properties that are specific to Excel.","pos":[12812,12925],"source":" In the following connection string, the `Extended Properties` keyword sets properties that are specific to Excel."},{"content":"\"HDR=Yes;\" indicates that the first row contains column names, not data, and \"IMEX=1;\" tells the driver to always read \"intermixed\" data columns as text.","pos":[12926,13079]},{"pos":[13212,13340],"content":"Note that the double quotation character required for the <ph id=\"ph1\">`Extended Properties`</ph> must also be enclosed in double quotation marks.","source":"Note that the double quotation character required for the `Extended Properties` must also be enclosed in double quotation marks."},{"pos":[13350,13394],"content":"Data Shape Provider Connection String Syntax","linkify":"Data Shape Provider Connection String Syntax","nodes":[{"content":"Data Shape Provider Connection String Syntax","pos":[0,44]}]},{"content":"Use both the <ph id=\"ph1\">`Provider`</ph> and the <ph id=\"ph2\">`Data Provider`</ph> keywords when using the Microsoft Data Shape provider.","pos":[13398,13500],"source":"Use both the `Provider` and the `Data Provider` keywords when using the Microsoft Data Shape provider."},{"content":"The following example uses the Shape provider to connect to a local instance of SQL Server.","pos":[13501,13592]},{"pos":[13732,13755],"content":"Odbc Connection Strings","linkify":"Odbc Connection Strings","nodes":[{"content":"Odbc Connection Strings","pos":[0,23]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> allows you to get or set a connection string for an OLE DB data source.","pos":[13759,13946],"source":"The <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property of a <xref:System.Data.Odbc.OdbcConnection> allows you to get or set a connection string for an OLE DB data source."},{"content":"Odbc connection strings are also supported by the <ph id=\"ph1\">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph>.","pos":[13947,14049],"source":" Odbc connection strings are also supported by the <xref:System.Data.Odbc.OdbcConnectionStringBuilder>."},{"content":"The following connection string uses the Microsoft Text Driver.","pos":[14056,14119]},{"pos":[14203,14250],"content":"Using DataDirectory to Connect to Visual FoxPro","linkify":"Using DataDirectory to Connect to Visual FoxPro","nodes":[{"content":"Using DataDirectory to Connect to Visual FoxPro","pos":[0,47]}]},{"pos":[14254,14412],"content":"The following <ph id=\"ph1\">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> connection string sample demonstrates using <ph id=\"ph2\">`DataDirectory`</ph> to connect to a Microsoft Visual FoxPro file.","source":"The following <xref:System.Data.Odbc.OdbcConnection> connection string sample demonstrates using `DataDirectory` to connect to a Microsoft Visual FoxPro file."},{"pos":[14535,14560],"content":"Oracle Connection Strings","linkify":"Oracle Connection Strings","nodes":[{"content":"Oracle Connection Strings","pos":[0,25]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> allows you to get or set a connection string for an OLE DB data source.","pos":[14564,14771],"source":"The <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> property of a <xref:System.Data.OracleClient.OracleConnection> allows you to get or set a connection string for an OLE DB data source."},{"content":"Oracle connection strings are also supported by the <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleConnectionStringBuilder&gt;</ph> .","pos":[14772,14887],"source":" Oracle connection strings are also supported by the <xref:System.Data.OracleClient.OracleConnectionStringBuilder> ."},{"content":"For more information on ODBC connection string syntax, see <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph>.","pos":[14962,15090],"source":"For more information on ODBC connection string syntax, see <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>."},{"pos":[15099,15107],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Connection Strings<ept id=\"p1\">](../../../../docs/framework/data/adonet/connection-strings.md)</ept><ph id=\"ph1\"> </ph>","pos":[15111,15194],"source":"[Connection Strings](../../../../docs/framework/data/adonet/connection-strings.md) "},{"content":"<bpt id=\"p1\">[</bpt>Connecting to a Data Source<ept id=\"p1\">](../../../../docs/framework/data/adonet/connecting-to-a-data-source.md)</ept><ph id=\"ph1\"> </ph>","pos":[15198,15299],"source":"[Connecting to a Data Source](../../../../docs/framework/data/adonet/connecting-to-a-data-source.md) "},{"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept>","pos":[15303,15406],"source":"[ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)"}]}