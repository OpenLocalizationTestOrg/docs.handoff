{"content":"---\ntitle: \"Using Variance for Func and Action Generic Delegates (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 36c3012f-b39c-493b-b90f-079b5912ac1b\n---\n# Using Variance for Func and Action Generic Delegates (Visual Basic)\nThese examples demonstrate how to use covariance and contravariance in the `Func` and `Action` generic delegates to enable reuse of methods and provide more flexibility in your code.  \n  \n For more information about covariance and contravariance, see [Variance in Delegates (Visual Basic)](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/variance-in-delegates.md).  \n  \n## Using Delegates with Covariant Type Parameters  \n The following example illustrates the benefits of covariance support in the generic `Func` delegates. The `FindByTitle` method takes a parameter of the `String` type and returns an object of the `Employee` type. However, you can assign this method to the `Func(Of String, Person)` delegate because `Employee` inherits `Person`.  \n  \n```vb  \n' Simple hierarchy of classes.  \nPublic Class Person  \nEnd Class  \n  \nPublic Class Employee  \n    Inherits Person  \nEnd Class  \n  \nClass Finder  \n    Public Shared Function FindByTitle(  \n        ByVal title As String) As Employee  \n        ' This is a stub for a method that returns  \n        ' an employee that has the specified title.  \n        Return New Employee  \n    End Function  \n  \n    Sub Test()  \n        ' Create an instance of the delegate without using variance.  \n        Dim findEmployee As Func(Of String, Employee) =  \n            AddressOf FindByTitle  \n  \n        ' The delegate expects a method to return Person,  \n        ' but you can assign it a method that returns Employee.  \n        Dim findPerson As Func(Of String, Person) =  \n            AddressOf FindByTitle  \n  \n        ' You can also assign a delegate   \n        ' that returns a more derived type to a delegate   \n        ' that returns a less derived type.  \n        findPerson = findEmployee  \n    End Sub  \nEnd Class  \n```  \n  \n## Using Delegates with Contravariant Type Parameters  \n The following example illustrates the benefits of contravariance support in the generic `Action` delegates. The `AddToContacts` method takes a parameter of the `Person` type. However, you can assign this method to the `Action(Of Employee)` delegate because `Employee` inherits `Person`.  \n  \n```vb  \nPublic Class Person  \nEnd Class  \n  \nPublic Class Employee  \n    Inherits Person  \nEnd Class  \n  \nClass AddressBook  \n    Shared Sub AddToContacts(ByVal person As Person)  \n        ' This method adds a Person object  \n        ' to a contact list.  \n    End Sub  \n  \n    Sub Test()  \n        ' Create an instance of the delegate without using variance.  \n        Dim addPersonToContacts As Action(Of Person) =  \n            AddressOf AddToContacts  \n  \n        ' The Action delegate expects   \n        ' a method that has an Employee parameter,  \n        ' but you can assign it a method that has a Person parameter  \n        ' because Employee derives from Person.  \n        Dim addEmployeeToContacts As Action(Of Employee) =  \n            AddressOf AddToContacts  \n  \n        ' You can also assign a delegate   \n        ' that accepts a less derived parameter   \n        ' to a delegate that accepts a more derived parameter.  \n        addEmployeeToContacts = addPersonToContacts  \n    End Sub  \nEnd Class  \n```  \n  \n## See also\n\n- [Covariance and Contravariance (Visual Basic)](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/index.md)\n- [Generics](~/docs/standard/generics/index.md)\n","nodes":[{"pos":[4,149],"embed":true,"restype":"x-metadata","content":"title: \"Using Variance for Func and Action Generic Delegates (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 36c3012f-b39c-493b-b90f-079b5912ac1b","nodes":[{"content":"Using Variance for Func and Action Generic Delegates (Visual Basic)","nodes":[{"pos":[0,67],"content":"Using Variance for Func and Action Generic Delegates (Visual Basic)","nodes":[{"content":"Using Variance for Func and Action Generic Delegates (Visual Basic)","pos":[0,67]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[156,223],"content":"Using Variance for Func and Action Generic Delegates (Visual Basic)","linkify":"Using Variance for Func and Action Generic Delegates (Visual Basic)","nodes":[{"content":"Using Variance for Func and Action Generic Delegates (Visual Basic)","pos":[0,67]}]},{"pos":[224,406],"content":"These examples demonstrate how to use covariance and contravariance in the <ph id=\"ph1\">`Func`</ph> and <ph id=\"ph2\">`Action`</ph> generic delegates to enable reuse of methods and provide more flexibility in your code.","source":"These examples demonstrate how to use covariance and contravariance in the `Func` and `Action` generic delegates to enable reuse of methods and provide more flexibility in your code."},{"pos":[413,618],"content":"For more information about covariance and contravariance, see <bpt id=\"p1\">[</bpt>Variance in Delegates (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/variance-in-delegates.md)</ept>.","source":"For more information about covariance and contravariance, see [Variance in Delegates (Visual Basic)](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/variance-in-delegates.md)."},{"pos":[627,673],"content":"Using Delegates with Covariant Type Parameters","linkify":"Using Delegates with Covariant Type Parameters","nodes":[{"content":"Using Delegates with Covariant Type Parameters","pos":[0,46]}]},{"content":"The following example illustrates the benefits of covariance support in the generic <ph id=\"ph1\">`Func`</ph> delegates.","pos":[677,778],"source":"The following example illustrates the benefits of covariance support in the generic `Func` delegates."},{"content":"The <ph id=\"ph1\">`FindByTitle`</ph> method takes a parameter of the <ph id=\"ph2\">`String`</ph> type and returns an object of the <ph id=\"ph3\">`Employee`</ph> type.","pos":[779,888],"source":" The `FindByTitle` method takes a parameter of the `String` type and returns an object of the `Employee` type."},{"content":"However, you can assign this method to the <ph id=\"ph1\">`Func(Of String, Person)`</ph> delegate because <ph id=\"ph2\">`Employee`</ph> inherits <ph id=\"ph3\">`Person`</ph>.","pos":[889,1004],"source":" However, you can assign this method to the `Func(Of String, Person)` delegate because `Employee` inherits `Person`."},{"pos":[2038,2088],"content":"Using Delegates with Contravariant Type Parameters","linkify":"Using Delegates with Contravariant Type Parameters","nodes":[{"content":"Using Delegates with Contravariant Type Parameters","pos":[0,50]}]},{"content":"The following example illustrates the benefits of contravariance support in the generic <ph id=\"ph1\">`Action`</ph> delegates.","pos":[2092,2199],"source":"The following example illustrates the benefits of contravariance support in the generic `Action` delegates."},{"content":"The <ph id=\"ph1\">`AddToContacts`</ph> method takes a parameter of the <ph id=\"ph2\">`Person`</ph> type.","pos":[2200,2266],"source":" The `AddToContacts` method takes a parameter of the `Person` type."},{"content":"However, you can assign this method to the <ph id=\"ph1\">`Action(Of Employee)`</ph> delegate because <ph id=\"ph2\">`Employee`</ph> inherits <ph id=\"ph3\">`Person`</ph>.","pos":[2267,2378],"source":" However, you can assign this method to the `Action(Of Employee)` delegate because `Employee` inherits `Person`."},{"pos":[3413,3421],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3425,3559],"content":"<bpt id=\"p1\">[</bpt>Covariance and Contravariance (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/index.md)</ept>","source":"[Covariance and Contravariance (Visual Basic)](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/index.md)"},{"pos":[3562,3607],"content":"<bpt id=\"p1\">[</bpt>Generics<ept id=\"p1\">](~/docs/standard/generics/index.md)</ept>","source":"[Generics](~/docs/standard/generics/index.md)"}]}