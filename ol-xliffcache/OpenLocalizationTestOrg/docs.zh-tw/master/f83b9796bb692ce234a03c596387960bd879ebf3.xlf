<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="icordebugstepper-interface.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f83b9796bb692ce234a03c596387960bd879ebf3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\unmanaged-api\debugging\icordebugstepper-interface.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0afed5f4fb2d8cfcfb5a20bc6180bfc8f7b8cd88</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">753ea99006df0bc4bfa39ab3c788b12966f0f5d0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>ICorDebugStepper Interface</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ICorDebugStepper Interface</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Represents a step in code execution that is performed by a debugger, serves as an identifier between the issuance and completion of a command, and provides a way to cancel a step.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Methods</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Deactivate Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-deactivate-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Causes this <ph id="ph1">`ICorDebugStepper`</ph> to cancel the last step command it received.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsActive Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-isactive-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <ph id="ph1">`ICorDebugStepper`</ph> is currently executing a step.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SetInterceptMask Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setinterceptmask-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Sets a CorDebugIntercept value that specifies the types of code that are stepped into.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SetRangeIL Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setrangeil-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Sets a value that indicates whether calls to <bpt id="p1">[</bpt>ICorDebugStepper::StepRange<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-steprange-method.md)</ept> pass argument values relative to the native code or to Microsoft intermediate language (MSIL) code of the method that is being stepped through.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SetUnmappedStopMask Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setunmappedstopmask-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Sets a CorDebugUnmappedStop value that specifies the type of unmapped code in which execution will halt.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Step Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-step-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Causes this <ph id="ph1">`ICorDebugStepper`</ph> to single-step through its containing thread, and optionally, to continue single-stepping through functions that are called within the thread.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StepOut Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-stepout-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Causes this <ph id="ph1">`ICorDebugStepper`</ph> to single-step through its containing thread, and to complete when the current frame returns control to the calling frame.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StepRange Method<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-steprange-method.md)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Causes this <ph id="ph1">`ICorDebugStepper`</ph> to single-step through its containing thread, and to return when it reaches code beyond the last of the specified ranges.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ICorDebugStepper`</ph> interface serves the following purposes:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It acts as an identifier between a step command that is issued and the completion of that command.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It provides a central interface to encapsulate all the stepping that can be performed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It provides a way to prematurely cancel a stepping operation.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>There can be more than one stepper per thread.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, a breakpoint may be hit while stepping over a function, and the user may wish to start a new stepping operation inside that function.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It is up to the debugger to determine how to handle this situation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The debugger may want to cancel the original stepping operation or nest the two operations.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ICorDebugStepper`</ph> interface supports both choices.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A stepper may migrate between threads if the common language runtime (CLR) makes a cross-threaded, marshaled call.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This interface does not support being called remotely, either cross-machine or cross-process.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Requirements</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms:<ept id="p1">**</ept> See <bpt id="p2">[</bpt>System Requirements<ept id="p2">](../../../../docs/framework/get-started/system-requirements.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Header:<ept id="p1">**</ept> CorDebug.idl, CorDebug.h</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Library:<ept id="p1">**</ept> CorGuids.lib</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Framework Versions:<ept id="p1">**</ept> <ph id="ph1">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debugging Interfaces<ept id="p1">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>