<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-a-wcf-client.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a16a0ccabfd0f9fbe69db1ea88d4613185f3c1da</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\how-to-create-a-wcf-client.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b84eacd83ee7891205328329e5b7af82cf76205</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507ff1d9a0016d47851a4e9b877d259080ee864</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Tutorial: Create a Windows Communication Foundation client</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Tutorial: Create a Windows Communication Foundation client</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This tutorial describes the fourth of five tasks required to create a basic Windows Communication Foundation (WCF) application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For an overview of the tutorials, see <bpt id="p1">[</bpt>Tutorial: Get started with Windows Communication Foundation applications<ept id="p1">](getting-started-tutorial.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The next task for creating a WCF application is to create a client by retrieving metadata from a WCF service.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You use Visual Studio to add a service reference, which gets the metadata from the serviceâ€™s MEX endpoint.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Visual Studio then generates a managed source code file for a client proxy in the language you've chosen.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It also creates a client configuration file (<bpt id="p1">*</bpt>App.config<ept id="p1">*</ept>).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This file enables the client application to connect to the service at an endpoint.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you call a WCF service from a class library project in Visual Studio, use the <bpt id="p1">**</bpt>Add Service Reference<ept id="p1">**</ept> feature to automatically generate a proxy and associated configuration file.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, because class library projects don't use this configuration file, you need to add the settings in the generated configuration file to the <bpt id="p1">*</bpt>App.config<ept id="p1">*</ept> file for the executable that calls the class library.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>As an alternative, use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility tool<ept id="p1">](#servicemodel-metadata-utility-tool)</ept> instead of Visual Studio to generate the proxy class and configuration file.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The client application uses the generated proxy class to communicate with the service.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This procedure is described in <bpt id="p1">[</bpt>Tutorial: Use a client<ept id="p1">](how-to-use-a-wcf-client.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this tutorial, you learn how to:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create and configure a console app project for the WCF client.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add a service reference to the WCF service to generate the proxy class and configuration files.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Create a Windows Communication Foundation client</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Create a console app project in Visual Studio:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>Open<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Project/Solution<ept id="p3">**</ept> and browse to the <bpt id="p4">**</bpt>GettingStarted<ept id="p4">**</ept> solution you previously created (<bpt id="p5">*</bpt>GettingStarted.sln<ept id="p5">*</ept>).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>View<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> window, select the <bpt id="p2">**</bpt>GettingStarted<ept id="p2">**</ept> solution (top node), and then select <bpt id="p3">**</bpt>Add<ept id="p3">**</ept><ph id="ph1"> &gt; </ph><bpt id="p4">**</bpt>New Project<ept id="p4">**</ept> from the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Project<ept id="p1">**</ept> window, on the left side, select the <bpt id="p2">**</bpt>Windows Desktop<ept id="p2">**</ept> category under <bpt id="p3">**</bpt>Visual C#<ept id="p3">**</ept> or <bpt id="p4">**</bpt>Visual Basic<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Console App (.NET Framework)<ept id="p1">**</ept> template, and enter <bpt id="p2">*</bpt>GettingStartedClient<ept id="p2">*</ept> for the <bpt id="p3">**</bpt>Name<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Add a reference in the <bpt id="p1">**</bpt>GettingStartedClient<ept id="p1">**</ept> project to the <ph id="ph1">&lt;xref:System.ServiceModel&gt;</ph> assembly:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> window, select the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> folder under the <bpt id="p3">**</bpt>GettingStartedClient<ept id="p3">**</ept> project, and then select <bpt id="p4">**</bpt>Add Reference<ept id="p4">**</ept> from the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> window, under <bpt id="p2">**</bpt>Assemblies<ept id="p2">**</ept> on the left side of the window, select <bpt id="p3">**</bpt>Framework<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Find and select <bpt id="p1">**</bpt>System.ServiceModel<ept id="p1">**</ept>, and then choose <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Save the solution by selecting <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Save All<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Add a service reference to the calculator service:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> window, select the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> folder under the <bpt id="p3">**</bpt>GettingStartedClient<ept id="p3">**</ept> project, and then select <bpt id="p4">**</bpt>Add Service Reference<ept id="p4">**</ept> from the shortcut menu.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Service Reference<ept id="p1">**</ept> window, select <bpt id="p2">**</bpt>Discover<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The CalculatorService service starts and Visual Studio displays it in the <bpt id="p1">**</bpt>Services<ept id="p1">**</ept> box.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>CalculatorService<ept id="p1">**</ept> to expand it and display the service contracts implemented by the service.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Leave the default <bpt id="p1">**</bpt>Namespace<ept id="p1">**</ept> and choose <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Visual Studio adds a new item under the <bpt id="p1">**</bpt>Connected Services<ept id="p1">**</ept> folder in the <bpt id="p2">**</bpt>GettingStartedClient<ept id="p2">**</ept> project.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>ServiceModel Metadata Utility tool</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following examples show how to optionally use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility tool (Svcutil.exe)<ept id="p1">](servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> to generate the proxy class file.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This tool generates the proxy class file and the <bpt id="p1">*</bpt>App.config<ept id="p1">*</ept> file.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following examples show how to generate the proxy in C# and Visual Basic, respectively:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Client configuration file</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>After you've created the client, Visual Studio creates the <bpt id="p1">**</bpt>App.config<ept id="p1">**</ept> configuration file in the <bpt id="p2">**</bpt>GettingStartedClient<ept id="p2">**</ept> project, which should be similar to the following example:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Under the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>system.serviceModel&gt;<ept id="p1">](../configure-apps/file-schema/wcf/system-servicemodel.md)</ept> section, notice the <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>endpoint&gt;<ept id="p2">](../configure-apps/file-schema/wcf/endpoint-element.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt><ph id="ph1">&amp;lt;</ph>endpoint<ph id="ph2">&amp;gt;</ph><ept id="p1">**</ept> element defines the endpoint that the client uses to access the service as follows:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Address: <ph id="ph1">`http://localhost:8000/GettingStarted/CalculatorService`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The address of the endpoint.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Service contract: <ph id="ph1">`ServiceReference1.ICalculator`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The service contract handles communication between the WCF client and the service.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Visual Studio generated this contract when you used its <bpt id="p1">**</bpt>Add Service Reference<ept id="p1">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It's essentially a copy of the contract that you defined in the GettingStartedLib project.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Binding: <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The binding specifies HTTP as the transport, interoperable security, and other configuration details.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Next steps</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In this tutorial, you learned how to:</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Create and configure a console app project for the WCF client.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Add a service reference to the WCF service to generate the proxy class and configuration files for the client application.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Advance to the next tutorial to learn how to use the generated client.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tutorial: Use a WCF client<ept id="p1">](how-to-use-a-wcf-client.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>