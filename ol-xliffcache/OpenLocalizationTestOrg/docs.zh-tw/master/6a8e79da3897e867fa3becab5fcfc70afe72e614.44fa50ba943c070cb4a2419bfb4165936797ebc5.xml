{"content":"---\ntitle: \"override modifier - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"override\"\n  - \"override_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"override keyword [C#]\"\nms.assetid: dd1907a8-acf8-46d3-80b9-c2ca4febada8\n---\n# override (C# Reference)\n\nThe `override` modifier is required to extend or modify the abstract or virtual implementation of an inherited method, property, indexer, or event.\n\n## Example\n\nIn this example, the `Square` class must provide an overridden implementation of `Area` because `Area` is inherited from the abstract `ShapesClass`:\n\n[!code-csharp[csrefKeywordsModifiers#1](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsModifiers/CS/csrefKeywordsModifiers.cs#1)]\n\nAn `override` method provides a new implementation of a member that is inherited from a base class. The method that is overridden by an `override` declaration is known as the overridden base method. The overridden base method must have the same signature as the `override` method. For information about inheritance, see [Inheritance](../../programming-guide/classes-and-structs/inheritance.md).\n\nYou cannot override a non-virtual or static method. The overridden base method must be `virtual`, `abstract`, or `override`.\n\nAn `override` declaration cannot change the accessibility of the `virtual` method. Both the `override` method and the `virtual` method must have the same [access level modifier](access-modifiers.md).\n\nYou cannot use the `new`, `static`, or `virtual` modifiers to modify an `override` method.\n\nAn overriding property declaration must specify exactly the same access modifier, type, and name as the inherited property, and the overridden property must be `virtual`, `abstract`, or `override`.\n\nFor more information about how to use the `override` keyword, see [Versioning with the Override and New Keywords](../../programming-guide/classes-and-structs/versioning-with-the-override-and-new-keywords.md) and [Knowing when to use Override and New Keywords](../../programming-guide/classes-and-structs/knowing-when-to-use-override-and-new-keywords.md).\n\n## Example\n\nThis example defines a base class named `Employee`, and a derived class named `SalesEmployee`. The `SalesEmployee` class includes an extra field, `salesbonus`, and overrides the method `CalculatePay` in order to take it into account.\n\n[!code-csharp[csrefKeywordsModifiers#9](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsModifiers/CS/csrefKeywordsModifiers.cs#9)]\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [Inheritance](../../programming-guide/classes-and-structs/inheritance.md)\n- [C# Keywords](index.md)\n- [Modifiers](modifiers.md)\n- [abstract](abstract.md)\n- [virtual](virtual.md)\n- [new](new.md)\n- [Polymorphism](../../programming-guide/classes-and-structs/polymorphism.md)\n","nodes":[{"pos":[4,243],"embed":true,"restype":"x-metadata","content":"title: \"override modifier - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"override\"\n  - \"override_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"override keyword [C#]\"\nms.assetid: dd1907a8-acf8-46d3-80b9-c2ca4febada8","nodes":[{"content":"override modifier - C# Reference","nodes":[{"pos":[0,32],"content":"override modifier - C# Reference","nodes":[{"content":"override modifier - C# Reference","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[250,273],"content":"override (C# Reference)","linkify":"override (C# Reference)","nodes":[{"content":"override (C# Reference)","pos":[0,23]}]},{"pos":[275,422],"content":"The <ph id=\"ph1\">`override`</ph> modifier is required to extend or modify the abstract or virtual implementation of an inherited method, property, indexer, or event.","source":"The `override` modifier is required to extend or modify the abstract or virtual implementation of an inherited method, property, indexer, or event."},{"pos":[427,434],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[436,584],"content":"In this example, the <ph id=\"ph1\">`Square`</ph> class must provide an overridden implementation of <ph id=\"ph2\">`Area`</ph> because <ph id=\"ph3\">`Area`</ph> is inherited from the abstract <ph id=\"ph4\">`ShapesClass`</ph>:","source":"In this example, the `Square` class must provide an overridden implementation of `Area` because `Area` is inherited from the abstract `ShapesClass`:"},{"content":"An <ph id=\"ph1\">`override`</ph> method provides a new implementation of a member that is inherited from a base class.","pos":[730,829],"source":"An `override` method provides a new implementation of a member that is inherited from a base class."},{"content":"The method that is overridden by an <ph id=\"ph1\">`override`</ph> declaration is known as the overridden base method.","pos":[830,928],"source":" The method that is overridden by an `override` declaration is known as the overridden base method."},{"content":"The overridden base method must have the same signature as the <ph id=\"ph1\">`override`</ph> method.","pos":[929,1010],"source":" The overridden base method must have the same signature as the `override` method."},{"content":"For information about inheritance, see <bpt id=\"p1\">[</bpt>Inheritance<ept id=\"p1\">](../../programming-guide/classes-and-structs/inheritance.md)</ept>.","pos":[1011,1124],"source":" For information about inheritance, see [Inheritance](../../programming-guide/classes-and-structs/inheritance.md)."},{"content":"You cannot override a non-virtual or static method.","pos":[1126,1177]},{"content":"The overridden base method must be <ph id=\"ph1\">`virtual`</ph>, <ph id=\"ph2\">`abstract`</ph>, or <ph id=\"ph3\">`override`</ph>.","pos":[1178,1250],"source":" The overridden base method must be `virtual`, `abstract`, or `override`."},{"content":"An <ph id=\"ph1\">`override`</ph> declaration cannot change the accessibility of the <ph id=\"ph2\">`virtual`</ph> method.","pos":[1252,1334],"source":"An `override` declaration cannot change the accessibility of the `virtual` method."},{"content":"Both the <ph id=\"ph1\">`override`</ph> method and the <ph id=\"ph2\">`virtual`</ph> method must have the same <bpt id=\"p1\">[</bpt>access level modifier<ept id=\"p1\">](access-modifiers.md)</ept>.","pos":[1335,1451],"source":" Both the `override` method and the `virtual` method must have the same [access level modifier](access-modifiers.md)."},{"pos":[1453,1543],"content":"You cannot use the <ph id=\"ph1\">`new`</ph>, <ph id=\"ph2\">`static`</ph>, or <ph id=\"ph3\">`virtual`</ph> modifiers to modify an <ph id=\"ph4\">`override`</ph> method.","source":"You cannot use the `new`, `static`, or `virtual` modifiers to modify an `override` method."},{"pos":[1545,1742],"content":"An overriding property declaration must specify exactly the same access modifier, type, and name as the inherited property, and the overridden property must be <ph id=\"ph1\">`virtual`</ph>, <ph id=\"ph2\">`abstract`</ph>, or <ph id=\"ph3\">`override`</ph>.","source":"An overriding property declaration must specify exactly the same access modifier, type, and name as the inherited property, and the overridden property must be `virtual`, `abstract`, or `override`."},{"pos":[1744,2098],"content":"For more information about how to use the <ph id=\"ph1\">`override`</ph> keyword, see <bpt id=\"p1\">[</bpt>Versioning with the Override and New Keywords<ept id=\"p1\">](../../programming-guide/classes-and-structs/versioning-with-the-override-and-new-keywords.md)</ept> and <bpt id=\"p2\">[</bpt>Knowing when to use Override and New Keywords<ept id=\"p2\">](../../programming-guide/classes-and-structs/knowing-when-to-use-override-and-new-keywords.md)</ept>.","source":"For more information about how to use the `override` keyword, see [Versioning with the Override and New Keywords](../../programming-guide/classes-and-structs/versioning-with-the-override-and-new-keywords.md) and [Knowing when to use Override and New Keywords](../../programming-guide/classes-and-structs/knowing-when-to-use-override-and-new-keywords.md)."},{"pos":[2103,2110],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example defines a base class named <ph id=\"ph1\">`Employee`</ph>, and a derived class named <ph id=\"ph2\">`SalesEmployee`</ph>.","pos":[2112,2206],"source":"This example defines a base class named `Employee`, and a derived class named `SalesEmployee`."},{"content":"The <ph id=\"ph1\">`SalesEmployee`</ph> class includes an extra field, <ph id=\"ph2\">`salesbonus`</ph>, and overrides the method <ph id=\"ph3\">`CalculatePay`</ph> in order to take it into account.","pos":[2207,2345],"source":" The `SalesEmployee` class includes an extra field, `salesbonus`, and overrides the method `CalculatePay` in order to take it into account."},{"pos":[2494,2519],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[2585,2593],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2597,2624],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[2627,2683],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[2686,2759],"content":"<bpt id=\"p1\">[</bpt>Inheritance<ept id=\"p1\">](../../programming-guide/classes-and-structs/inheritance.md)</ept>","source":"[Inheritance](../../programming-guide/classes-and-structs/inheritance.md)"},{"pos":[2762,2785],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[2788,2813],"content":"<bpt id=\"p1\">[</bpt>Modifiers<ept id=\"p1\">](modifiers.md)</ept>","source":"[Modifiers](modifiers.md)"},{"pos":[2816,2839],"content":"<bpt id=\"p1\">[</bpt>abstract<ept id=\"p1\">](abstract.md)</ept>","source":"[abstract](abstract.md)"},{"pos":[2842,2863],"content":"<bpt id=\"p1\">[</bpt>virtual<ept id=\"p1\">](virtual.md)</ept>","source":"[virtual](virtual.md)"},{"pos":[2866,2879],"content":"<bpt id=\"p1\">[</bpt>new<ept id=\"p1\">](new.md)</ept>","source":"[new](new.md)"},{"pos":[2882,2957],"content":"<bpt id=\"p1\">[</bpt>Polymorphism<ept id=\"p1\">](../../programming-guide/classes-and-structs/polymorphism.md)</ept>","source":"[Polymorphism](../../programming-guide/classes-and-structs/polymorphism.md)"}]}