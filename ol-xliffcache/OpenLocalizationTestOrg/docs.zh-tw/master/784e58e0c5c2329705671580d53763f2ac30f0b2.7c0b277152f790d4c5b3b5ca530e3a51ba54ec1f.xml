{"content":"---\ntitle: \"ImportFileEx2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink2.ImportFileEx2\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ImportFileEx2\"\nhelpviewer_keywords: \n  - \"ImportFileEx2 method\"\nms.assetid: 02c789fd-16fc-48c6-9619-56e87e2a37ca\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# ImportFileEx2 Method\nImports assemblies and unbound modules. This method is like [ImportFile Method](../../../../docs/framework/unmanaged-api/alink/importfile-method.md), but works even if the file being imported does not exist on disk.  \n  \n## Syntax  \n  \n```  \nHRESULT ImportFileEx2(  \n    LPCWSTR pszFilename,  \n    LPCWSTR pszTargetName,  \n    IMetaDataAssemblyImport* pAssemblyScopeIn,  \n    BOOL fSmartImport,  \n    DWORD dwOpenFlags,  \n    mdToken* pImportToken,  \n    IMetaDataAssemblyImport** ppAssemblyScope,  \n    DWORD* pdwCountOfScopes  \n) PURE;  \n```  \n  \n## Parameters  \n `pszFilename`  \n Name of file to be imported.  \n  \n `pszTargetName`  \n Optional name of target file.  \n  \n `pAssemblyScopeIn`  \n Optional import scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface.  \n  \n `fSmartImport`  \n If TRUE, ImportTypes is used, otherwise importing must be performed manually.  \n  \n `dwOpenFlags`  \n Flags to be passed along to [OpenScope Method](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md).  \n  \n `pImportToken`  \n Receives unique ID for the assembly or file.  \n  \n `ppAssemblyScope`  \n Receives assembly import scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface. Can be NULL if the file is not an assembly.  \n  \n `pdwCountOfScopes`  \n Receives the number of files and/or scopes imported.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h.  \n  \n## See also\n\n- [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)\n- [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)\n- [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)\n","nodes":[{"pos":[4,341],"embed":true,"restype":"x-metadata","content":"title: \"ImportFileEx2 Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink2.ImportFileEx2\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ImportFileEx2\"\nhelpviewer_keywords: \n  - \"ImportFileEx2 method\"\nms.assetid: 02c789fd-16fc-48c6-9619-56e87e2a37ca\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"ImportFileEx2 Method","nodes":[{"pos":[0,20],"content":"ImportFileEx2 Method","nodes":[{"content":"ImportFileEx2 Method","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[348,368],"content":"ImportFileEx2 Method","linkify":"ImportFileEx2 Method","nodes":[{"content":"ImportFileEx2 Method","pos":[0,20]}]},{"content":"Imports assemblies and unbound modules.","pos":[369,408]},{"content":"This method is like <bpt id=\"p1\">[</bpt>ImportFile Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/importfile-method.md)</ept>, but works even if the file being imported does not exist on disk.","pos":[409,584],"source":" This method is like [ImportFile Method](../../../../docs/framework/unmanaged-api/alink/importfile-method.md), but works even if the file being imported does not exist on disk."},{"pos":[593,599],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[921,931],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Name of file to be imported.","pos":[952,980]},{"content":"Optional name of target file.","pos":[1006,1035]},{"content":"Optional import scope <bpt id=\"p1\">[</bpt>IMetaDataAssemblyImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)</ept> interface.","pos":[1064,1220],"source":"Optional import scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface."},{"content":"If TRUE, ImportTypes is used, otherwise importing must be performed manually.","pos":[1245,1322]},{"content":"Flags to be passed along to <bpt id=\"p1\">[</bpt>OpenScope Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md)</ept>.","pos":[1346,1483],"source":"Flags to be passed along to [OpenScope Method](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md)."},{"content":"Receives unique ID for the assembly or file.","pos":[1508,1552]},{"content":"Receives assembly import scope <bpt id=\"p1\">[</bpt>IMetaDataAssemblyImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)</ept> interface.","pos":[1580,1745],"source":"Receives assembly import scope [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) interface."},{"content":"Can be NULL if the file is not an assembly.","pos":[1746,1789]},{"content":"Receives the number of files and/or scopes imported.","pos":[1818,1870]},{"pos":[1879,1891],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1895,1931]},{"pos":[1940,1952],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h.","pos":[1956,1973]},{"pos":[1982,1990],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1994,2082],"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept>","source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)"},{"pos":[2085,2171],"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept>","source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)"},{"pos":[2174,2242],"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}