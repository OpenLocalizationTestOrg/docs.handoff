{"content":"---\ntitle: \"Lambda parameter &#39;&lt;parameter&gt;&#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression. | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"bc36641\"\n  - \"vbc36641\"\nhelpviewer_keywords: \n  - \"BC36641\"\nms.assetid: ee08c366-29d1-4abb-b14c-23ae2b9680e7\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Lambda parameter &#39;&lt;parameter&gt;&#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.\nA variable in a lambda expression has the same name as a variable previously defined within the same scope. This can be a variable in an enclosing block of code for a nested lambda expression, a range variable previously defined within a LINQ query, or a variable that is implicitly declared for a LINQ query.  \n  \n **Error ID:** BC36641  \n  \n## To correct this error  \n  \n-   Ensure that all variables in your lambda expression have unique names that do not duplicate existing variable names in the same scope.  \n  \n## See Also  \n [Lambda Expressions](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)   \n [Introduction to LINQ in Visual Basic](../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)   \n [LINQ](../../visual-basic/programming-guide/language-features/linq/index.md)","nodes":[{"pos":[12,208],"content":"Lambda parameter &#39;&lt;parameter&gt;&#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression. | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Lambda parameter &#39;&lt;parameter&gt;&#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression. | Microsoft Docs","pos":[0,196],"nodes":[{"content":"Lambda parameter &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>parameter<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.","pos":[0,179],"source":"Lambda parameter &#39;&lt;parameter&gt;&#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression."},{"content":"| Microsoft Docs","pos":[180,196]}]}]},{"pos":[724,903],"content":"Lambda parameter &#39;&lt;parameter&gt;&#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.","linkify":"Lambda parameter &#39;&lt;parameter&gt;&#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.","nodes":[{"content":"Lambda parameter &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>parameter<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.","pos":[0,179],"source":"Lambda parameter &#39;&lt;parameter&gt;&#39; hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression."}]},{"content":"A variable in a lambda expression has the same name as a variable previously defined within the same scope.","pos":[904,1011]},{"content":"This can be a variable in an enclosing block of code for a nested lambda expression, a range variable previously defined within a LINQ query, or a variable that is implicitly declared for a LINQ query.","pos":[1012,1213]},{"pos":[1220,1241],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36641","source":"**Error ID:** BC36641"},{"pos":[1250,1271],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Ensure that all variables in your lambda expression have unique names that do not duplicate existing variable names in the same scope.","pos":[1281,1415]},{"pos":[1424,1432],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Lambda Expressions<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept><ph id=\"ph1\"> </ph>","pos":[1436,1546],"source":"[Lambda Expressions](../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Introduction to LINQ in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id=\"ph1\"> </ph>","pos":[1549,1674],"source":" [Introduction to LINQ in Visual Basic](../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md) "},{"content":"<bpt id=\"p1\"> [</bpt>LINQ<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/linq/index.md)</ept>","pos":[1677,1754],"source":" [LINQ](../../visual-basic/programming-guide/language-features/linq/index.md)"}]}