{"content":"---\ntitle: \"Compiler Error CS0201\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS0201\"\nhelpviewer_keywords: \n  - \"CS0201\"\nms.assetid: cf5d6701-50cc-4e4f-878b-e1a4ad8a2061\n---\n# Compiler Error CS0201\n\nOnly assignment, call, increment, decrement, and new object expressions can be used as a statement  \n  \n The compiler generates an error when it encounters an invalid statement. An invalid statement is any line or series of lines ending in a semicolon that does not represent an assignment ([=](../operators/assignment-operator.md)), method call [()](../operators/invocation-operator.md), [new](../keywords/new.md), [--](../operators/arithmetic-operators.md#decrement-operator---) or [++](../operators/arithmetic-operators.md#increment-operator-) operation. For more information, see [Statements, Expressions, and Operators](../../programming-guide/statements-expressions-operators/index.md).  \n  \n## Example\n\n The following sample generates CS0201 because 2 * 3 is an expression, not a statement. To make the code compile, try assigning the value of the expression to a  variable.  \n\n```csharp\n// CS0201.cs  \npublic class MainClass  \n{  \n   public static void Main()  \n   {  \n      2 * 3;   // CS0201  \n      // Try the following line instead.  \n      //   int i = 2 * 3;  \n   }  \n}  \n```\n\n## Example\n\n The following sample generates CS0201 because checked by itself is not a statement, even though it is parameterized by an increment operation.  \n\n```csharp\n// CS0201_b.cs  \n// compile with: /target:library  \npublic class MyList<T>\n{  \n   public void Add(T x)  \n   {  \n      int i = 0;  \n      if ( (object)x == null)  \n      {  \n         checked(i++);   // CS0201  \n  \n         // OK  \n         checked {  \n            i++;\n         }  \n      }  \n   }  \n}  \n```\n\n## See also\n\n- [C# Compiler Errors](../../../csharp/language-reference/compiler-messages/index.md)\n","nodes":[{"pos":[4,165],"embed":true,"restype":"x-metadata","content":"title: \"Compiler Error CS0201\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS0201\"\nhelpviewer_keywords: \n  - \"CS0201\"\nms.assetid: cf5d6701-50cc-4e4f-878b-e1a4ad8a2061","nodes":[{"content":"Compiler Error CS0201","nodes":[{"pos":[0,21],"content":"Compiler Error CS0201","nodes":[{"content":"Compiler Error CS0201","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[172,193],"content":"Compiler Error CS0201","linkify":"Compiler Error CS0201","nodes":[{"content":"Compiler Error CS0201","pos":[0,21]}]},{"content":"Only assignment, call, increment, decrement, and new object expressions can be used as a statement","pos":[195,293]},{"content":"The compiler generates an error when it encounters an invalid statement.","pos":[300,372]},{"content":"An invalid statement is any line or series of lines ending in a semicolon that does not represent an assignment (<bpt id=\"p1\">[</bpt><ph id=\"ph1\">=</ph><ept id=\"p1\">](../operators/assignment-operator.md)</ept>), method call <bpt id=\"p2\">[</bpt>()<ept id=\"p2\">](../operators/invocation-operator.md)</ept>, <bpt id=\"p3\">[</bpt>new<ept id=\"p3\">](../keywords/new.md)</ept>, <bpt id=\"p4\">[</bpt><ph id=\"ph2\">--</ph><ept id=\"p4\">](../operators/arithmetic-operators.md#decrement-operator---)</ept> or <bpt id=\"p5\">[</bpt><ph id=\"ph3\">++</ph><ept id=\"p5\">](../operators/arithmetic-operators.md#increment-operator-)</ept> operation.","pos":[373,752],"source":" An invalid statement is any line or series of lines ending in a semicolon that does not represent an assignment ([=](../operators/assignment-operator.md)), method call [()](../operators/invocation-operator.md), [new](../keywords/new.md), [--](../operators/arithmetic-operators.md#decrement-operator---) or [++](../operators/arithmetic-operators.md#increment-operator-) operation."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Statements, Expressions, and Operators<ept id=\"p1\">](../../programming-guide/statements-expressions-operators/index.md)</ept>.","pos":[753,887],"source":" For more information, see [Statements, Expressions, and Operators](../../programming-guide/statements-expressions-operators/index.md)."},{"pos":[896,903],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample generates CS0201 because 2 * 3 is an expression, not a statement.","pos":[906,992]},{"content":"To make the code compile, try assigning the value of the expression to a  variable.","pos":[993,1076]},{"pos":[1289,1296],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following sample generates CS0201 because checked by itself is not a statement, even though it is parameterized by an increment operation.","pos":[1299,1441]},{"pos":[1765,1773],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1777,1860],"content":"<bpt id=\"p1\">[</bpt>C# Compiler Errors<ept id=\"p1\">](../../../csharp/language-reference/compiler-messages/index.md)</ept>","source":"[C# Compiler Errors](../../../csharp/language-reference/compiler-messages/index.md)"}]}