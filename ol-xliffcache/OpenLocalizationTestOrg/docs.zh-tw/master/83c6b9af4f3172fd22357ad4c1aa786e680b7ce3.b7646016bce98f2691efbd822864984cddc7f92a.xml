{"content":"---\ntitle: \"Compiler Error CS1944\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS1944\"\nhelpviewer_keywords: \n  - \"CS1944\"\nms.assetid: e5e2c018-9a7e-48ee-8dd3-98e3553777c1\n---\n# Compiler Error CS1944\nAn expression tree may not contain an unsafe pointer operation  \n  \n Expression trees do not support pointer types because the <xref:System.Linq.Expressions.Expression%601.Compile%2A?displayProperty=nameWithType> method is only allowed to produce verifiable code. See comments.  \n  \n## To correct this error  \n  \n1.  Do not use pointer types when you are trying to create an expression tree.  \n  \n## Example  \n The following example generates CS1944:  \n  \n```csharp  \n// cs1944.cs  \n// Compile with: /unsafe  \nusing System.Linq.Expressions;  \nunsafe class Test  \n{  \n    public delegate int* D(int i);  \n    static void Main()  \n    {  \n        Expression<D> tree = x => &x; // CS1944  \n    }  \n}  \n  \nusing System.Linq.Expressions;  \nunsafe class Test  \n{  \n    public delegate int* D(int i);  \n    static void Main()  \n    {  \n        Expression<D> tree = x => &x; // CS1944  \n    }  \n}  \n```  \n  \n In some situations it is okay to have pointers in expression trees. For example, consider the following code:  \n  \n `Expression<Func\\<int*[], int*[]>) e = (int*[] i)=>i;`  \n  \n This code is a valid expression tree because no type arguments are pointer types. They are arrays of pointers, and arrays are not pointer types. Also, the body of the expression tree does not do anything dangerous with any pointer.  \n  \n## See also\n\n- [unsafe](../../csharp/language-reference/keywords/unsafe.md)\n","nodes":[{"pos":[4,165],"embed":true,"restype":"x-metadata","content":"title: \"Compiler Error CS1944\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS1944\"\nhelpviewer_keywords: \n  - \"CS1944\"\nms.assetid: e5e2c018-9a7e-48ee-8dd3-98e3553777c1","nodes":[{"content":"Compiler Error CS1944","nodes":[{"pos":[0,21],"content":"Compiler Error CS1944","nodes":[{"content":"Compiler Error CS1944","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[172,193],"content":"Compiler Error CS1944","linkify":"Compiler Error CS1944","nodes":[{"content":"Compiler Error CS1944","pos":[0,21]}]},{"content":"An expression tree may not contain an unsafe pointer operation","pos":[194,256]},{"content":"Expression trees do not support pointer types because the <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.Expression%601.Compile%2A?displayProperty=nameWithType&gt;</ph> method is only allowed to produce verifiable code.","pos":[263,457],"source":"Expression trees do not support pointer types because the <xref:System.Linq.Expressions.Expression%601.Compile%2A?displayProperty=nameWithType> method is only allowed to produce verifiable code."},{"content":"See comments.","pos":[458,471]},{"pos":[480,501],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Do not use pointer types when you are trying to create an expression tree.","pos":[511,585]},{"pos":[594,601],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example generates CS1944:","pos":[605,644]},{"content":"In some situations it is okay to have pointers in expression trees.","pos":[1095,1162]},{"content":"For example, consider the following code:","pos":[1163,1204]},{"content":"This code is a valid expression tree because no type arguments are pointer types.","pos":[1272,1353]},{"content":"They are arrays of pointers, and arrays are not pointer types.","pos":[1354,1416]},{"content":"Also, the body of the expression tree does not do anything dangerous with any pointer.","pos":[1417,1503]},{"pos":[1512,1520],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1524,1584],"content":"<bpt id=\"p1\">[</bpt>unsafe<ept id=\"p1\">](../../csharp/language-reference/keywords/unsafe.md)</ept>","source":"[unsafe](../../csharp/language-reference/keywords/unsafe.md)"}]}