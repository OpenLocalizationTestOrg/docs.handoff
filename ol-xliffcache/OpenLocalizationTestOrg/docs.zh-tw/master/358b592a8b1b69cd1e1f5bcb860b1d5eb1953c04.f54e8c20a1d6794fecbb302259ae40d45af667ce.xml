{"content":"---\ntitle: \"Compiler Error CS0304\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS0304\"\nhelpviewer_keywords: \n  - \"CS0304\"\nms.assetid: 22dc7211-57a8-4c92-96f6-fc1cf0263b68\n---\n# Compiler Error CS0304\n\nCannot create an instance of the variable type 'type' because it does not have the new() constraint  \n  \n When you implement a generic class, and you want to use the `new` keyword to create a new instance of any type that is supplied for a type parameter `T`, you must apply the [new() constraint](../../../csharp/language-reference/keywords/new.md) to `T` in the class declaration, as shown in the following example.  \n  \n```csharp  \nclass C<T> where T : new()  \n```  \n  \n The `new()` constraint enforces type safety by guaranteeing that any concrete type that is supplied for `T` has a default, parameterless constructor. CS0304 occurs if you attempt to use the `new` operator in the body of the class to create an instance of type parameter `T` when `T` does not specify the `new()` constraint. On the client side, if code attempts to instantiate the generic class with a type that has no default constructor, that code will generate [Compiler Error CS0310](../../../csharp/language-reference/compiler-messages/cs0310.md).  \n  \n The following example generates CS0304.  \n  \n```csharp  \n// CS0304.cs  \n// Compile with: /target:library.  \nclass C<T>  \n{  \n    // The following line generates CS0304.  \n    T t = new T();  \n}  \n```  \n  \n The `new` operator also is not allowed in methods of the class.  \n  \n```csharp  \n// Compile with: /target:library.  \nclass C<T>  \n{  \n    public void ExampleMethod()  \n    {  \n        // The following line generates CS0304.  \n        T t = new T();  \n    }  \n}  \n```  \n  \n To avoid the error, declare the class by using the `new()` constraint, as shown in the following example.  \n  \n```csharp  \n// Compile with: /target:library.  \nclass C<T> where T : new()  \n{  \n    T t = new T();  \n  \n    public void ExampleMethod()  \n    {  \n        T t = new T();  \n    }  \n}  \n```  \n  \n## See also\n\n- [C# Compiler Errors](../../../csharp/language-reference/compiler-messages/index.md)\n","nodes":[{"pos":[4,165],"embed":true,"restype":"x-metadata","content":"title: \"Compiler Error CS0304\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS0304\"\nhelpviewer_keywords: \n  - \"CS0304\"\nms.assetid: 22dc7211-57a8-4c92-96f6-fc1cf0263b68","nodes":[{"content":"Compiler Error CS0304","nodes":[{"pos":[0,21],"content":"Compiler Error CS0304","nodes":[{"content":"Compiler Error CS0304","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[172,193],"content":"Compiler Error CS0304","linkify":"Compiler Error CS0304","nodes":[{"content":"Compiler Error CS0304","pos":[0,21]}]},{"content":"Cannot create an instance of the variable type 'type' because it does not have the new() constraint","pos":[195,294]},{"pos":[301,612],"content":"When you implement a generic class, and you want to use the <ph id=\"ph1\">`new`</ph> keyword to create a new instance of any type that is supplied for a type parameter <ph id=\"ph2\">`T`</ph>, you must apply the <bpt id=\"p1\">[</bpt>new() constraint<ept id=\"p1\">](../../../csharp/language-reference/keywords/new.md)</ept> to <ph id=\"ph3\">`T`</ph> in the class declaration, as shown in the following example.","source":"When you implement a generic class, and you want to use the `new` keyword to create a new instance of any type that is supplied for a type parameter `T`, you must apply the [new() constraint](../../../csharp/language-reference/keywords/new.md) to `T` in the class declaration, as shown in the following example."},{"content":"The <ph id=\"ph1\">`new()`</ph> constraint enforces type safety by guaranteeing that any concrete type that is supplied for <ph id=\"ph2\">`T`</ph> has a default, parameterless constructor.","pos":[669,818],"source":"The `new()` constraint enforces type safety by guaranteeing that any concrete type that is supplied for `T` has a default, parameterless constructor."},{"content":"CS0304 occurs if you attempt to use the <ph id=\"ph1\">`new`</ph> operator in the body of the class to create an instance of type parameter <ph id=\"ph2\">`T`</ph> when <ph id=\"ph3\">`T`</ph> does not specify the <ph id=\"ph4\">`new()`</ph> constraint.","pos":[819,992],"source":" CS0304 occurs if you attempt to use the `new` operator in the body of the class to create an instance of type parameter `T` when `T` does not specify the `new()` constraint."},{"content":"On the client side, if code attempts to instantiate the generic class with a type that has no default constructor, that code will generate <bpt id=\"p1\">[</bpt>Compiler Error CS0310<ept id=\"p1\">](../../../csharp/language-reference/compiler-messages/cs0310.md)</ept>.","pos":[993,1220],"source":" On the client side, if code attempts to instantiate the generic class with a type that has no default constructor, that code will generate [Compiler Error CS0310](../../../csharp/language-reference/compiler-messages/cs0310.md)."},{"content":"The following example generates CS0304.","pos":[1227,1266]},{"pos":[1433,1496],"content":"The <ph id=\"ph1\">`new`</ph> operator also is not allowed in methods of the class.","source":"The `new` operator also is not allowed in methods of the class."},{"pos":[1706,1811],"content":"To avoid the error, declare the class by using the <ph id=\"ph1\">`new()`</ph> constraint, as shown in the following example.","source":"To avoid the error, declare the class by using the `new()` constraint, as shown in the following example."},{"pos":[2013,2021],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2025,2108],"content":"<bpt id=\"p1\">[</bpt>C# Compiler Errors<ept id=\"p1\">](../../../csharp/language-reference/compiler-messages/index.md)</ept>","source":"[C# Compiler Errors](../../../csharp/language-reference/compiler-messages/index.md)"}]}