{"content":"---\ntitle: \"How to: Handle an Exception Using try-catch - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"exception handling [C#], try/catch blocks\"\n  - \"exceptions [C#], try/catch blocks\"\n  - \"try/catch blocks [C#]\"\nms.assetid: ca8e3773-980e-4767-8633-7408540e9818\n---\n# How to: Handle an Exception Using try/catch (C# Programming Guide)\nThe purpose of a [try-catch](../../../csharp/language-reference/keywords/try-catch.md) block is to catch and handle an exception generated by working code. Some exceptions can be handled in a `catch` block and the problem solved without the exception being re-thrown; however, more often the only thing that you can do is make sure that the appropriate exception is thrown.  \n  \n## Example  \n In this example, <xref:System.IndexOutOfRangeException> is not the most appropriate exception: <xref:System.ArgumentOutOfRangeException> makes more sense for the method because the error is caused by the `index` argument passed in by the caller.  \n  \n [!code-csharp[csProgGuideExceptions#5](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideExceptions/CS/Exceptions.cs#5)]  \n  \n## Comments  \n The code that causes an exception is enclosed in the `try` block. A `catch` statement is added immediately after to handle `IndexOutOfRangeException`, if it occurs. The `catch` block handles the `IndexOutOfRangeException` and throws the more appropriate `ArgumentOutOfRangeException` exception instead. In order to provide the caller with as much information as possible, consider specifying the original exception as the <xref:System.Exception.InnerException%2A> of the new exception. Because the <xref:System.Exception.InnerException%2A> property is [readonly](../../../csharp/language-reference/keywords/readonly.md), you must assign it in the constructor of the new exception.  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Exceptions and Exception Handling](../../../csharp/programming-guide/exceptions/index.md)\n- [Exception Handling](../../../csharp/programming-guide/exceptions/exception-handling.md)\n","nodes":[{"pos":[4,306],"embed":true,"restype":"x-metadata","content":"title: \"How to: Handle an Exception Using try-catch - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"exception handling [C#], try/catch blocks\"\n  - \"exceptions [C#], try/catch blocks\"\n  - \"try/catch blocks [C#]\"\nms.assetid: ca8e3773-980e-4767-8633-7408540e9818","nodes":[{"content":"How to: Handle an Exception Using try-catch - C# Programming Guide","nodes":[{"pos":[0,66],"content":"How to: Handle an Exception Using try-catch - C# Programming Guide","nodes":[{"content":"How to: Handle an Exception Using try-catch - C# Programming Guide","pos":[0,66]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[313,379],"content":"How to: Handle an Exception Using try/catch (C# Programming Guide)","linkify":"How to: Handle an Exception Using try/catch (C# Programming Guide)","nodes":[{"content":"How to: Handle an Exception Using try/catch (C# Programming Guide)","pos":[0,66]}]},{"content":"The purpose of a <bpt id=\"p1\">[</bpt>try-catch<ept id=\"p1\">](../../../csharp/language-reference/keywords/try-catch.md)</ept> block is to catch and handle an exception generated by working code.","pos":[380,535],"source":"The purpose of a [try-catch](../../../csharp/language-reference/keywords/try-catch.md) block is to catch and handle an exception generated by working code."},{"content":"Some exceptions can be handled in a <ph id=\"ph1\">`catch`</ph> block and the problem solved without the exception being re-thrown; however, more often the only thing that you can do is make sure that the appropriate exception is thrown.","pos":[536,753],"source":" Some exceptions can be handled in a `catch` block and the problem solved without the exception being re-thrown; however, more often the only thing that you can do is make sure that the appropriate exception is thrown."},{"pos":[762,769],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[773,1018],"content":"In this example, <ph id=\"ph1\">&lt;xref:System.IndexOutOfRangeException&gt;</ph> is not the most appropriate exception: <ph id=\"ph2\">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> makes more sense for the method because the error is caused by the <ph id=\"ph3\">`index`</ph> argument passed in by the caller.","source":"In this example, <xref:System.IndexOutOfRangeException> is not the most appropriate exception: <xref:System.ArgumentOutOfRangeException> makes more sense for the method because the error is caused by the `index` argument passed in by the caller."},{"pos":[1162,1170],"content":"Comments","linkify":"Comments","nodes":[{"content":"Comments","pos":[0,8]}]},{"content":"The code that causes an exception is enclosed in the <ph id=\"ph1\">`try`</ph> block.","pos":[1174,1239],"source":"The code that causes an exception is enclosed in the `try` block."},{"content":"A <ph id=\"ph1\">`catch`</ph> statement is added immediately after to handle <ph id=\"ph2\">`IndexOutOfRangeException`</ph>, if it occurs.","pos":[1240,1338],"source":" A `catch` statement is added immediately after to handle `IndexOutOfRangeException`, if it occurs."},{"content":"The <ph id=\"ph1\">`catch`</ph> block handles the <ph id=\"ph2\">`IndexOutOfRangeException`</ph> and throws the more appropriate <ph id=\"ph3\">`ArgumentOutOfRangeException`</ph> exception instead.","pos":[1339,1476],"source":" The `catch` block handles the `IndexOutOfRangeException` and throws the more appropriate `ArgumentOutOfRangeException` exception instead."},{"content":"In order to provide the caller with as much information as possible, consider specifying the original exception as the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> of the new exception.","pos":[1477,1659],"source":" In order to provide the caller with as much information as possible, consider specifying the original exception as the <xref:System.Exception.InnerException%2A> of the new exception."},{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property is <bpt id=\"p1\">[</bpt>readonly<ept id=\"p1\">](../../../csharp/language-reference/keywords/readonly.md)</ept>, you must assign it in the constructor of the new exception.","pos":[1660,1854],"source":" Because the <xref:System.Exception.InnerException%2A> property is [readonly](../../../csharp/language-reference/keywords/readonly.md), you must assign it in the constructor of the new exception."},{"pos":[1863,1871],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1875,1941],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[1944,2034],"content":"<bpt id=\"p1\">[</bpt>Exceptions and Exception Handling<ept id=\"p1\">](../../../csharp/programming-guide/exceptions/index.md)</ept>","source":"[Exceptions and Exception Handling](../../../csharp/programming-guide/exceptions/index.md)"},{"pos":[2037,2125],"content":"<bpt id=\"p1\">[</bpt>Exception Handling<ept id=\"p1\">](../../../csharp/programming-guide/exceptions/exception-handling.md)</ept>","source":"[Exception Handling](../../../csharp/programming-guide/exceptions/exception-handling.md)"}]}