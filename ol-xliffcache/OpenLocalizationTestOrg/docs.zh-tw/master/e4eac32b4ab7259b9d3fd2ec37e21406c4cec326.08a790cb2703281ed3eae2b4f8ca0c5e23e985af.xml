{"content":"---\ntitle: \"/define (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"-d compiler option [Visual Basic]\"\n  - \"/d compiler option [Visual Basic]\"\n  - \"-define compiler option [Visual Basic]\"\n  - \"d compiler option [Visual Basic]\"\n  - \"/define compiler option [Visual Basic]\"\n  - \"define compiler option [Visual Basic]\"\nms.assetid: f735c57d-1cf9-4f2f-a26f-0de630fd4077\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# /define (Visual Basic)\nDefines conditional compiler constants.  \n  \n## Syntax  \n  \n```  \n/define:[\"]symbol[=value][,symbol[=value]][\"]  \n' -or-  \n/d:[\"]symbol[=value][,symbol[=value]][\"]  \n```  \n  \n## Arguments  \n  \n|Term|Definition|  \n|---|---|  \n|`symbol`|Required. The symbol to define.|  \n|`value`|Optional. The value to assign `symbol`. If `value` is a string, it must be surrounded by backslash/quotation-mark sequences (\\\\\") instead of quotation marks. If no value is specified, then it is taken to be True.|  \n  \n## Remarks  \n The `/define` option has an effect  similar to using a `#Const` preprocessor directive in your source file, except that constants defined with `/define` are public and apply to all files in the project.  \n  \n You can use symbols created by this option with the `#If`...`Then`...`#Else` directive to compile source files conditionally.  \n  \n `/d` is the short form of `/define`.  \n  \n You can define multiple symbols with `/define` by using a comma to separate symbol definitions.  \n  \n|To set /define in the Visual Studio integrated development environment|  \n|---|  \n|1.  Have a project selected in **Solution Explorer**. On the **Project** menu, click **Properties**. For more information, see [Introduction to the Project Designer](http://msdn.microsoft.com/en-us/898dd854-c98d-430c-ba1b-a913ce3c73d7).<br />2.  Click the **Compile** tab.<br />3.  Click **Advanced**.<br />4.  Modify the value in the **Custom Constants** box.|  \n  \n## Example  \n The following code defines and then uses two conditional compiler constants.  \n  \n [!code-vb[VbVbalrCompiler#45](../../../visual-basic/reference/command-line-compiler/codesnippet/VisualBasic/define_1.vb)]  \n  \n## See Also  \n [Visual Basic Command-Line Compiler](../../../visual-basic/reference/command-line-compiler/index.md)   \n [#If...Then...#Else Directives](../../../visual-basic/language-reference/directives/if-then-else-directives.md)   \n [#Const Directive](../../../visual-basic/language-reference/directives/const-directive.md)   \n [Sample Compilation Command Lines](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)","nodes":[{"pos":[4,779],"nodes":[{"content":"/define (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,39],"content":"/define (Visual Basic) | Microsoft Docs","nodes":[{"content":"/define (Visual Basic) | Microsoft Docs","pos":[0,39]}]}],"pos":[6,48],"yaml":true}],"content":"title: \"/define (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"-d compiler option [Visual Basic]\"\n  - \"/d compiler option [Visual Basic]\"\n  - \"-define compiler option [Visual Basic]\"\n  - \"d compiler option [Visual Basic]\"\n  - \"/define compiler option [Visual Basic]\"\n  - \"define compiler option [Visual Basic]\"\nms.assetid: f735c57d-1cf9-4f2f-a26f-0de630fd4077\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[786,808],"content":"/define (Visual Basic)","linkify":"/define (Visual Basic)","nodes":[{"content":"/define (Visual Basic)","pos":[0,22]}]},{"content":"Defines conditional compiler constants.","pos":[809,848]},{"pos":[857,863],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[987,996],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"Term","pos":[1003,1007]},{"content":"Definition","pos":[1008,1018]},{"content":"Required.","pos":[1044,1053]},{"content":"The symbol to define.","pos":[1054,1075]},{"content":"Optional.","pos":[1088,1097]},{"content":"The value to assign <ph id=\"ph1\">`symbol`</ph>.","pos":[1098,1127],"source":" The value to assign `symbol`."},{"content":"If <ph id=\"ph1\">`value`</ph> is a string, it must be surrounded by backslash/quotation-mark sequences (<ph id=\"ph2\">\\\\</ph>\") instead of quotation marks.","pos":[1128,1245],"source":" If `value` is a string, it must be surrounded by backslash/quotation-mark sequences (\\\\\") instead of quotation marks."},{"content":"If no value is specified, then it is taken to be True.","pos":[1246,1300]},{"pos":[1310,1317],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1321,1523],"content":"The <ph id=\"ph1\">`/define`</ph> option has an effect  similar to using a <ph id=\"ph2\">`#Const`</ph> preprocessor directive in your source file, except that constants defined with <ph id=\"ph3\">`/define`</ph> are public and apply to all files in the project.","source":"The `/define` option has an effect  similar to using a `#Const` preprocessor directive in your source file, except that constants defined with `/define` are public and apply to all files in the project."},{"pos":[1530,1655],"content":"You can use symbols created by this option with the <ph id=\"ph1\">`#If`</ph>...<ph id=\"ph2\">`Then`</ph>...<ph id=\"ph3\">`#Else`</ph> directive to compile source files conditionally.","source":"You can use symbols created by this option with the `#If`...`Then`...`#Else` directive to compile source files conditionally."},{"pos":[1662,1698],"content":"<ph id=\"ph1\">`/d`</ph> is the short form of <ph id=\"ph2\">`/define`</ph>.","source":"`/d` is the short form of `/define`."},{"pos":[1705,1800],"content":"You can define multiple symbols with <ph id=\"ph1\">`/define`</ph> by using a comma to separate symbol definitions.","source":"You can define multiple symbols with `/define` by using a comma to separate symbol definitions."},{"content":"To set /define in the Visual Studio integrated development environment","pos":[1807,1877]},{"content":"1.  Have a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>.","pos":[1890,1943],"source":"1.  Have a project selected in **Solution Explorer**."},{"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept>.","pos":[1944,1990],"source":" On the **Project** menu, click **Properties**."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Introduction to the Project Designer<ept id=\"p1\">](http://msdn.microsoft.com/en-us/898dd854-c98d-430c-ba1b-a913ce3c73d7)</ept>.","pos":[1991,2126],"source":" For more information, see [Introduction to the Project Designer](http://msdn.microsoft.com/en-us/898dd854-c98d-430c-ba1b-a913ce3c73d7)."},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Compile<ept id=\"p1\">**</ept> tab.","pos":[2132,2162],"source":"2.  Click the **Compile** tab."},{"content":"3.  Click <bpt id=\"p1\">**</bpt>Advanced<ept id=\"p1\">**</ept>.","pos":[2168,2191],"source":"3.  Click **Advanced**."},{"content":"4.  Modify the value in the <bpt id=\"p1\">**</bpt>Custom Constants<ept id=\"p1\">**</ept> box.","pos":[2197,2250],"source":"4.  Modify the value in the **Custom Constants** box."},{"pos":[2260,2267],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code defines and then uses two conditional compiler constants.","pos":[2271,2347]},{"pos":[2354,2475],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrCompiler#45<ept id=\"p2\">](../../../visual-basic/reference/command-line-compiler/codesnippet/VisualBasic/define_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrCompiler#45](../../../visual-basic/reference/command-line-compiler/codesnippet/VisualBasic/define_1.vb)]"},{"pos":[2484,2492],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Visual Basic Command-Line Compiler<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2496,2597],"source":"[Visual Basic Command-Line Compiler](../../../visual-basic/reference/command-line-compiler/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>#If...Then...#Else Directives<ept id=\"p1\">](../../../visual-basic/language-reference/directives/if-then-else-directives.md)</ept><ph id=\"ph1\"> </ph>","pos":[2601,2713],"source":"[#If...Then...#Else Directives](../../../visual-basic/language-reference/directives/if-then-else-directives.md) "},{"content":"<bpt id=\"p1\">[</bpt>#Const Directive<ept id=\"p1\">](../../../visual-basic/language-reference/directives/const-directive.md)</ept><ph id=\"ph1\"> </ph>","pos":[2717,2808],"source":"[#Const Directive](../../../visual-basic/language-reference/directives/const-directive.md) "},{"content":"<bpt id=\"p1\">[</bpt>Sample Compilation Command Lines<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)</ept>","pos":[2812,2937],"source":"[Sample Compilation Command Lines](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)"}]}