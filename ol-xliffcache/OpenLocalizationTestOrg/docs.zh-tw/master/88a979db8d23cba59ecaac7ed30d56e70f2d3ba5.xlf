<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88a979db8d23cba59ecaac7ed30d56e70f2d3ba5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\interop\blittable-and-non-blittable-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">514d5619feca14f1478e3a59c0b996928b0ddab2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f77579ac0f5ea5c708116cb971056bc8fa2a9eff</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Blittable and Non-Blittable Types | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Blittable and Non-Blittable Types</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Most data types have a common representation in both managed and unmanaged memory and do not require special handling by the interop marshaler.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These types are called <bpt id="p1">*</bpt>blittable types<ept id="p1">*</ept> because they do not require conversion when they are passed between managed and unmanaged code.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Structures that are returned from platform invoke calls must be blittable types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Platform invoke does not support non-blittable structures as return types.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following types from the <ph id="ph1">&lt;xref:System&gt;</ph> namespace are blittable types:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following complex types are also blittable types:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>One-dimensional arrays of blittable types, such as an array of integers.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, a type that contains a variable array of blittable types is not itself blittable.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Formatted value types that contain only blittable types (and classes if they are marshaled as formatted types).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information about formatted value types, see <bpt id="p1">[</bpt>Default Marshaling for Value Types<ept id="p1">](http://msdn.microsoft.com/en-us/4d9a876c-e05a-40ba-bd85-bd22877f984a)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Object references are not blittable.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This includes an array of references to objects that are blittable by themselves.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, you can define a structure that is blittable, but you cannot define a blittable type that contains an array of references to those structures.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>As an optimization, arrays of blittable types and classes that contain only blittable members are <bpt id="p1">[</bpt>pinned<ept id="p1">](../../../docs/framework/interop/copying-and-pinning.md)</ept> instead of copied during marshaling.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>These types can appear to be marshaled as In/Out parameters when the caller and callee are in the same apartment.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, these types are actually marshaled as In parameters, and you must apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> attributes if you want to marshal the argument as an In/Out parameter.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Some managed data types require a different representation in an unmanaged environment.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These non-blittable data types must be converted into a form that can be marshaled.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, managed strings are non-blittable types because they must be converted into string objects before they can be marshaled.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following table lists non-blittable types from the <ph id="ph1">&lt;xref:System&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegates<ept id="p1">](http://msdn.microsoft.com/en-us/d176ee76-f982-494b-b03d-92e4118896e2)</ept>, which are data structures that refer to a static method or to a class instance, are also non-blittable.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Non-blittable type</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Array<ept id="p1">](../../../docs/framework/interop/default-marshaling-for-arrays.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Converts to a C-style array or a <ph id="ph1">`SAFEARRAY`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Boolean<ept id="p1">](http://msdn.microsoft.com/en-us/d4c00537-70f7-4ca6-8197-bfc1ec037ff9)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Converts to a 1, 2, or 4-byte value with <ph id="ph1">`true`</ph> as 1 or -1.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Char<ept id="p1">](http://msdn.microsoft.com/en-us/cecc87c1-075e-4cde-aa56-33d189f66feb)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Converts to a Unicode or ANSI character.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Class<ept id="p1">](http://msdn.microsoft.com/en-us/fe334af5-0123-43d8-be84-26f6f023ddb6)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Converts to a class interface.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Object<ept id="p1">](../../../docs/framework/interop/default-marshaling-for-objects.md)</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Converts to a variant or an interface.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Mdarray<ept id="p1">](../../../docs/framework/interop/default-marshaling-for-arrays.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Converts to a C-style array or a <ph id="ph1">`SAFEARRAY`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.String<ept id="p1">](../../../docs/framework/interop/default-marshaling-for-strings.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Converts to a string terminating in a null reference or to a BSTR.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Valuetype<ept id="p1">](http://msdn.microsoft.com/en-us/4d9a876c-e05a-40ba-bd85-bd22877f984a)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Converts to a structure with a fixed memory layout.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Szarray<ept id="p1">](../../../docs/framework/interop/default-marshaling-for-arrays.md)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Converts to a C-style array or a <ph id="ph1">`SAFEARRAY`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Class and object types are supported only by COM interop.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For corresponding types in <ph id="ph1">[!INCLUDE[vbprvblong](../../../includes/vbprvblong-md.md)]</ph>, C#, and C++, see the <bpt id="p1">[</bpt>Class Library Overview<ept id="p1">](../../../docs/standard/class-library-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Default Marshaling Behavior<ept id="p1">](../../../docs/framework/interop/default-marshaling-behavior.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>