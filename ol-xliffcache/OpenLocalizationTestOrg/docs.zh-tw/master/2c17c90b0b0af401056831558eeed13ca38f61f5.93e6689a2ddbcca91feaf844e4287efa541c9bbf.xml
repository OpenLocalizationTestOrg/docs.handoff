{"content":"---\ntitle: \"JSON Serialization | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 3c2c4747-7510-4bdf-b4fe-64f98428ef4a\ncaps.latest.revision: 19\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# JSON Serialization\nThis sample demonstrates how to use the <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> to serialize and deserialize data in the JavaScript Object Notation (JSON) format. This serialization engine converts JSON data into instances of [!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)] types and back into JSON data. <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> supports the same types as <xref:System.Runtime.Serialization.DataContractSerializer>. The JSON data format is especially useful when writing Asynchronous JavaScript and XML (AJAX)-style Web applications. AJAX support in [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] is optimized for use with ASP.NET AJAX through the ScriptManager control. For examples of how to use [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] with ASP.NET AJAX, see the [AJAX Samples](http://msdn.microsoft.com/en-us/f3fa45b3-44d5-4926-8cc4-a13c30a3bf3e).  \n  \n> [!NOTE]\n>  The set-up procedure and build instructions for this sample are located at the end of this topic.  \n  \n The sample uses a `Person` data contract to demonstrate serialization and deserialization.  \n  \n```  \n[DataContract]  \n    class Person  \n    {  \n        [DataMember]  \n        internal string name;  \n  \n        [DataMember]  \n        internal int age;  \n    }  \n  \n```  \n  \n To serialize an instance of the `Person` type to JSON, create the <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> first and use the `WriteObject` method to write JSON data to a stream.  \n  \n```  \nPerson p = new Person();  \n//Set up Person object...  \nMemoryStream stream1 = new MemoryStream();  \nDataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(Person));  \nser.WriteObject(stream1, p);  \n  \n```  \n  \n The memory stream contains valid JSON data.  \n  \n```  \n{\"age\":42,\"name\":\"John\"}  \n  \n```  \n  \n The sample demonstrates deserializing from JSON data into an object. You then rewind the stream and call `ReadObject`.  \n  \n```  \nPerson p2 = (Person)ser.ReadObject(stream1);  \n```  \n  \n Examining the `p2` object reveals that the JSON data has been deserialized correctly.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Basic\\Ajax\\JsonSerialization`  \n  \n#### To set up, build and run the sample  \n  \n1.  Build the solution JsonSerialization.sln as described in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md).  \n  \n2.  Run the resulting console application.  \n  \n## See Also","nodes":[{"pos":[12,47],"content":"JSON Serialization | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"JSON Serialization | Microsoft Docs","pos":[0,35]}]},{"pos":[346,364],"content":"JSON Serialization","linkify":"JSON Serialization","nodes":[{"content":"JSON Serialization","pos":[0,18]}]},{"content":"This sample demonstrates how to use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> to serialize and deserialize data in the JavaScript Object Notation (JSON) format.","pos":[365,555],"source":"This sample demonstrates how to use the <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> to serialize and deserialize data in the JavaScript Object Notation (JSON) format."},{"content":"This serialization engine converts JSON data into instances of <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> types and back into JSON data.","pos":[556,713],"source":" This serialization engine converts JSON data into instances of [!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)] types and back into JSON data."},{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> supports the same types as <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.","pos":[714,868],"source":"<xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> supports the same types as <xref:System.Runtime.Serialization.DataContractSerializer>."},{"content":"The JSON data format is especially useful when writing Asynchronous JavaScript and XML (AJAX)-style Web applications.","pos":[869,986]},{"content":"AJAX support in <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> is optimized for use with ASP.NET AJAX through the ScriptManager control.","pos":[987,1132],"source":" AJAX support in [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] is optimized for use with ASP.NET AJAX through the ScriptManager control."},{"content":"For examples of how to use <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> with ASP.NET AJAX, see the <bpt id=\"p1\">[</bpt>AJAX Samples<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f3fa45b3-44d5-4926-8cc4-a13c30a3bf3e)</ept>.","pos":[1133,1328],"source":" For examples of how to use [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] with ASP.NET AJAX, see the [AJAX Samples](http://msdn.microsoft.com/en-us/f3fa45b3-44d5-4926-8cc4-a13c30a3bf3e)."},{"pos":[1336,1444],"content":"[!NOTE]\n The set-up procedure and build instructions for this sample are located at the end of this topic.","leadings":["","> "],"nodes":[{"content":"The set-up procedure and build instructions for this sample are located at the end of this topic.","pos":[9,106]}]},{"pos":[1451,1541],"content":"The sample uses a <ph id=\"ph1\">`Person`</ph> data contract to demonstrate serialization and deserialization.","source":"The sample uses a `Person` data contract to demonstrate serialization and deserialization."},{"pos":[1727,1931],"content":"To serialize an instance of the <ph id=\"ph1\">`Person`</ph> type to JSON, create the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> first and use the <ph id=\"ph3\">`WriteObject`</ph> method to write JSON data to a stream.","source":"To serialize an instance of the `Person` type to JSON, create the <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> first and use the `WriteObject` method to write JSON data to a stream."},{"content":"The memory stream contains valid JSON data.","pos":[2170,2213]},{"content":"The sample demonstrates deserializing from JSON data into an object.","pos":[2265,2333]},{"content":"You then rewind the stream and call <ph id=\"ph1\">`ReadObject`</ph>.","pos":[2334,2383],"source":" You then rewind the stream and call `ReadObject`."},{"pos":[2452,2537],"content":"Examining the <ph id=\"ph1\">`p2`</ph> object reveals that the JSON data has been deserialized correctly.","source":"Examining the `p2` object reveals that the JSON data has been deserialized correctly."},{"pos":[2545,2677],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[2731,3057],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[3058,3108]},{"pos":[3195,3230],"content":"To set up, build and run the sample","linkify":"To set up, build and run the sample","nodes":[{"content":"To set up, build and run the sample","pos":[0,35]}]},{"pos":[3240,3417],"content":"Build the solution JsonSerialization.sln as described in <bpt id=\"p1\">[</bpt>Building the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.","source":"Build the solution JsonSerialization.sln as described in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md)."},{"content":"Run the resulting console application.","pos":[3427,3465]},{"pos":[3474,3482],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}