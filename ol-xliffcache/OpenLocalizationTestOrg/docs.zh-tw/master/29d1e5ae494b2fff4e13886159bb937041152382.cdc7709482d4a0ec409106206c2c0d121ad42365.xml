{"content":"---\ntitle: \"Performing an XPath Query on a DataSet\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 7e828566-fffe-4d38-abb2-4d68fd73f663\n---\n# Performing an XPath Query on a DataSet\nThe relationship between a synchronized <xref:System.Data.DataSet> and <xref:System.Xml.XmlDataDocument> allows you to make use of XML services, such as the XML Path Language (XPath) query, that access the **XmlDataDocument** and can perform certain functionality more conveniently than accessing the **DataSet** directly. For example, rather than using the **Select** method of a <xref:System.Data.DataTable> to navigate relationships to other tables in a **DataSet**, you can perform an XPath query on an **XmlDataDocument** that is synchronized with the **DataSet**, to get a list of XML elements in the form of an <xref:System.Xml.XmlNodeList>. The nodes in the **XmlNodeList**, cast as <xref:System.Xml.XmlElement> nodes, can then be passed to the **GetRowFromElement** method of the **XmlDataDocument**, to return matching <xref:System.Data.DataRow> references to the rows of the table in the synchronized **DataSet**.  \n  \n For example, the following code sample performs a \"grandchild\" XPath query. The **DataSet** is filled with three tables: **Customers**, **Orders**, and **OrderDetails**. In the sample, a parent-child relation is first created between the **Customers** and **Orders** tables, and between the **Orders** and **OrderDetails** tables. An XPath query is then performed to return an **XmlNodeList** of **Customers** nodes where a grandchild **OrderDetails** node has a **ProductID** node with the value of 43. In essence, the sample is using the XPath query to determine which customers have ordered the product that has the **ProductID** of 43.  \n  \n```vb  \n' Assumes that connection is a valid SqlConnection.  \nconnection.Open()  \nDim dataSet As DataSet = New DataSet(\"CustomerOrders\")  \nDim customerAdapter As SqlDataAdapter = New SqlDataAdapter( _  \n  \"SELECT * FROM Customers\", connection)  \ncustomerAdapter.Fill(dataSet, \"Customers\")  \n  \nDim orderAdapter As SqlDataAdapter = New SqlDataAdapter( _  \n  \"SELECT * FROM Orders\", connection)  \norderAdapter.Fill(dataSet, \"Orders\")  \n  \nDim detailAdapter As SqlDataAdapter = New SqlDataAdapter( _  \n  \"SELECT * FROM [Order Details]\", connection)  \ndetailAdapter.Fill(dataSet, \"OrderDetails\")  \n  \nconnection.Close()  \n  \ndataSet.Relations.Add(\"CustOrders\", _  \ndataSet.Tables(\"Customers\").Columns(\"CustomerID\"), _  \ndataSet.Tables(\"Orders\").Columns(\"CustomerID\")).Nested = true  \n  \ndataSet.Relations.Add(\"OrderDetail\", _  \n  dataSet.Tables(\"Orders\").Columns(\"OrderID\"), _  \ndataSet.Tables(\"OrderDetails\").Columns(\"OrderID\"), false).Nested = true  \n  \nDim xmlDoc As XmlDataDocument = New XmlDataDocument(dataSet)   \n  \nDim nodeList As XmlNodeList = xmlDoc.DocumentElement.SelectNodes( _  \n  \"descendant::Customers[*/OrderDetails/ProductID=43]\")  \n  \nDim dataRow As DataRow  \nDim xmlNode As XmlNode  \n  \nFor Each xmlNode In nodeList  \n  dataRow = xmlDoc.GetRowFromElement(CType(xmlNode, XmlElement))  \n  \n  If Not dataRow Is Nothing then Console.WriteLine(xmlRow(0).ToString())  \nNext  \n```  \n  \n```csharp  \n// Assumes that connection is a valid SqlConnection.  \nconnection.Open();  \n  \nDataSet dataSet = new DataSet(\"CustomerOrders\");  \n  \nSqlDataAdapter customerAdapter = new SqlDataAdapter(  \n  \"SELECT * FROM Customers\", connection);  \ncustomerAdapter.Fill(dataSet, \"Customers\");  \n  \nSqlDataAdapter orderAdapter = new SqlDataAdapter(  \n  \"SELECT * FROM Orders\", connection);  \norderAdapter.Fill(dataSet, \"Orders\");  \n  \nSqlDataAdapter detailAdapter = new SqlDataAdapter(  \n  \"SELECT * FROM [Order Details]\", connection);  \ndetailAdapter.Fill(dataSet, \"OrderDetails\");  \n  \nconnection.Close();  \n  \ndataSet.Relations.Add(\"CustOrders\",  \n  dataSet.Tables[\"Customers\"].Columns[\"CustomerID\"],  \n dataSet.Tables[\"Orders\"].Columns[\"CustomerID\"]).Nested = true;  \n  \ndataSet.Relations.Add(\"OrderDetail\",  \n  dataSet.Tables[\"Orders\"].Columns[\"OrderID\"],  \n  dataSet.Tables[\"OrderDetails\"].Columns[\"OrderID\"],   \n  false).Nested = true;  \n  \nXmlDataDocument xmlDoc = new XmlDataDocument(dataSet);   \n  \nXmlNodeList nodeList = xmlDoc.DocumentElement.SelectNodes(  \n  \"descendant::Customers[*/OrderDetails/ProductID=43]\");  \n  \nDataRow dataRow;  \nforeach (XmlNode xmlNode in nodeList)  \n{  \n  dataRow = xmlDoc.GetRowFromElement((XmlElement)xmlNode);  \n  if (dataRow != null)  \n    Console.WriteLine(dataRow[0]);  \n}  \n```  \n  \n## See also\n\n- [DataSet and XmlDataDocument Synchronization](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md)\n- [ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)\n","nodes":[{"pos":[4,156],"embed":true,"restype":"x-metadata","content":"title: \"Performing an XPath Query on a DataSet\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 7e828566-fffe-4d38-abb2-4d68fd73f663","nodes":[{"content":"Performing an XPath Query on a DataSet","nodes":[{"pos":[0,38],"content":"Performing an XPath Query on a DataSet","nodes":[{"content":"Performing an XPath Query on a DataSet","pos":[0,38]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[163,201],"content":"Performing an XPath Query on a DataSet","linkify":"Performing an XPath Query on a DataSet","nodes":[{"content":"Performing an XPath Query on a DataSet","pos":[0,38]}]},{"content":"The relationship between a synchronized <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> allows you to make use of XML services, such as the XML Path Language (XPath) query, that access the <bpt id=\"p1\">**</bpt>XmlDataDocument<ept id=\"p1\">**</ept> and can perform certain functionality more conveniently than accessing the <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> directly.","pos":[202,524],"source":"The relationship between a synchronized <xref:System.Data.DataSet> and <xref:System.Xml.XmlDataDocument> allows you to make use of XML services, such as the XML Path Language (XPath) query, that access the **XmlDataDocument** and can perform certain functionality more conveniently than accessing the **DataSet** directly."},{"content":"For example, rather than using the <bpt id=\"p1\">**</bpt>Select<ept id=\"p1\">**</ept> method of a <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> to navigate relationships to other tables in a <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept>, you can perform an XPath query on an <bpt id=\"p3\">**</bpt>XmlDataDocument<ept id=\"p3\">**</ept> that is synchronized with the <bpt id=\"p4\">**</bpt>DataSet<ept id=\"p4\">**</ept>, to get a list of XML elements in the form of an <ph id=\"ph2\">&lt;xref:System.Xml.XmlNodeList&gt;</ph>.","pos":[525,850],"source":" For example, rather than using the **Select** method of a <xref:System.Data.DataTable> to navigate relationships to other tables in a **DataSet**, you can perform an XPath query on an **XmlDataDocument** that is synchronized with the **DataSet**, to get a list of XML elements in the form of an <xref:System.Xml.XmlNodeList>."},{"content":"The nodes in the <bpt id=\"p1\">**</bpt>XmlNodeList<ept id=\"p1\">**</ept>, cast as <ph id=\"ph1\">&lt;xref:System.Xml.XmlElement&gt;</ph> nodes, can then be passed to the <bpt id=\"p2\">**</bpt>GetRowFromElement<ept id=\"p2\">**</ept> method of the <bpt id=\"p3\">**</bpt>XmlDataDocument<ept id=\"p3\">**</ept>, to return matching <ph id=\"ph2\">&lt;xref:System.Data.DataRow&gt;</ph> references to the rows of the table in the synchronized <bpt id=\"p4\">**</bpt>DataSet<ept id=\"p4\">**</ept>.","pos":[851,1126],"source":" The nodes in the **XmlNodeList**, cast as <xref:System.Xml.XmlElement> nodes, can then be passed to the **GetRowFromElement** method of the **XmlDataDocument**, to return matching <xref:System.Data.DataRow> references to the rows of the table in the synchronized **DataSet**."},{"content":"For example, the following code sample performs a \"grandchild\" XPath query.","pos":[1133,1208]},{"content":"The <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> is filled with three tables: <bpt id=\"p2\">**</bpt>Customers<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Orders<ept id=\"p3\">**</ept>, and <bpt id=\"p4\">**</bpt>OrderDetails<ept id=\"p4\">**</ept>.","pos":[1209,1302],"source":" The **DataSet** is filled with three tables: **Customers**, **Orders**, and **OrderDetails**."},{"content":"In the sample, a parent-child relation is first created between the <bpt id=\"p1\">**</bpt>Customers<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Orders<ept id=\"p2\">**</ept> tables, and between the <bpt id=\"p3\">**</bpt>Orders<ept id=\"p3\">**</ept> and <bpt id=\"p4\">**</bpt>OrderDetails<ept id=\"p4\">**</ept> tables.","pos":[1303,1463],"source":" In the sample, a parent-child relation is first created between the **Customers** and **Orders** tables, and between the **Orders** and **OrderDetails** tables."},{"content":"An XPath query is then performed to return an <bpt id=\"p1\">**</bpt>XmlNodeList<ept id=\"p1\">**</ept> of <bpt id=\"p2\">**</bpt>Customers<ept id=\"p2\">**</ept> nodes where a grandchild <bpt id=\"p3\">**</bpt>OrderDetails<ept id=\"p3\">**</ept> node has a <bpt id=\"p4\">**</bpt>ProductID<ept id=\"p4\">**</ept> node with the value of 43.","pos":[1464,1636],"source":" An XPath query is then performed to return an **XmlNodeList** of **Customers** nodes where a grandchild **OrderDetails** node has a **ProductID** node with the value of 43."},{"content":"In essence, the sample is using the XPath query to determine which customers have ordered the product that has the <bpt id=\"p1\">**</bpt>ProductID<ept id=\"p1\">**</ept> of 43.","pos":[1637,1772],"source":" In essence, the sample is using the XPath query to determine which customers have ordered the product that has the **ProductID** of 43."},{"pos":[4501,4509],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4513,4675],"content":"<bpt id=\"p1\">[</bpt>DataSet and XmlDataDocument Synchronization<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md)</ept>","source":"[DataSet and XmlDataDocument Synchronization](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataset-and-xmldatadocument-synchronization.md)"},{"pos":[4678,4782],"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept>","source":"[ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)"}]}