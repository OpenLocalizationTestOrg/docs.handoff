{"content":"---\ntitle: \"How to: Handle User Input Events in Windows Forms Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"Windows Forms controls, user input\"\n  - \"user input, Windows Forms controls\"\nms.assetid: 3de74dcf-fae3-42d0-92b5-bc04a61a6888\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Handle User Input Events in Windows Forms Controls\nThis example demonstrates how to handle most keyboard, mouse, focus, and validation events that can occur in a Windows Forms control. The text box named `TextBoxInput` receives the events when it has focus, and information about each event is written in the text box named `TextBoxOutput` in the order in which the events are raised. The application also includes a set of check boxes that can be used to filter which events to report.  \n  \n## Example  \n [!code-cpp[System.Windows.Forms.UserInputWalkthrough#0](../../../samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.UserInputWalkthrough/cpp/form1.cpp#0)]\n [!code-csharp[System.Windows.Forms.UserInputWalkthrough#0](../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.UserInputWalkthrough/CS/form1.cs#0)]\n [!code-vb[System.Windows.Forms.UserInputWalkthrough#0](../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.UserInputWalkthrough/VB/form1.vb#0)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Drawing and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for [!INCLUDE[vbprvb](../../../includes/vbprvb-md.md)] or [!INCLUDE[csprcs](../../../includes/csprcs-md.md)], see [Building from the Command Line](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] by pasting the code into a new project.  Also see [How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio](http://msdn.microsoft.com/library/Bb129228\\(v=vs.110\\)).  \n  \n## See Also  \n [User Input in Windows Forms](../../../docs/framework/winforms/user-input-in-windows-forms.md)","nodes":[{"pos":[4,521],"embed":true,"restype":"x-metadata","content":"title: \"How to: Handle User Input Events in Windows Forms Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"Windows Forms controls, user input\"\n  - \"user input, Windows Forms controls\"\nms.assetid: 3de74dcf-fae3-42d0-92b5-bc04a61a6888\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Handle User Input Events in Windows Forms Controls | Microsoft Docs","nodes":[{"pos":[0,75],"content":"How to: Handle User Input Events in Windows Forms Controls | Microsoft Docs","nodes":[{"content":"How to: Handle User Input Events in Windows Forms Controls | Microsoft Docs","pos":[0,75]}]}],"path":["title"]}],"yml":true},{"pos":[528,586],"content":"How to: Handle User Input Events in Windows Forms Controls","linkify":"How to: Handle User Input Events in Windows Forms Controls","nodes":[{"content":"How to: Handle User Input Events in Windows Forms Controls","pos":[0,58]}]},{"content":"This example demonstrates how to handle most keyboard, mouse, focus, and validation events that can occur in a Windows Forms control.","pos":[587,720]},{"content":"The text box named <ph id=\"ph1\">`TextBoxInput`</ph> receives the events when it has focus, and information about each event is written in the text box named <ph id=\"ph2\">`TextBoxOutput`</ph> in the order in which the events are raised.","pos":[721,920],"source":" The text box named `TextBoxInput` receives the events when it has focus, and information about each event is written in the text box named `TextBoxOutput` in the order in which the events are raised."},{"content":"The application also includes a set of check boxes that can be used to filter which events to report.","pos":[921,1022]},{"pos":[1031,1038],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1562,1580],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[1584,1606]},{"content":"References to the System, System.Drawing and System.Windows.Forms assemblies.","pos":[1616,1693]},{"content":"For information about building this example from the command line for <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../includes/vbprvb-md.md)]</ph> or <ph id=\"ph2\">[!INCLUDE[csprcs](../../../includes/csprcs-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[1700,2129],"source":"For information about building this example from the command line for [!INCLUDE[vbprvb](../../../includes/vbprvb-md.md)] or [!INCLUDE[csprcs](../../../includes/csprcs-md.md)], see [Building from the Command Line](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph> by pasting the code into a new project.","pos":[2130,2255],"source":" You can also build this example in [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)] by pasting the code into a new project."},{"content":"Also see <bpt id=\"p1\">[</bpt>How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio<ept id=\"p1\">](http://msdn.microsoft.com/library/Bb129228\\(v=vs.110\\))</ept>.","pos":[2257,2406],"source":"  Also see [How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio](http://msdn.microsoft.com/library/Bb129228\\(v=vs.110\\))."},{"pos":[2415,2423],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2427,2521],"content":"<bpt id=\"p1\">[</bpt>User Input in Windows Forms<ept id=\"p1\">](../../../docs/framework/winforms/user-input-in-windows-forms.md)</ept>","source":"[User Input in Windows Forms](../../../docs/framework/winforms/user-input-in-windows-forms.md)"}]}