{"content":"---\ntitle: \"How to: Determine If a File Is an Assembly (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: de26f410-9bd1-4b55-a343-cc82f81684be\ncaps.latest.revision: 6\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Determine If a File Is an Assembly (Visual Basic)\nA file is an assembly if and only if it is managed, and contains an assembly entry in its metadata. For more information on assemblies and metadata, see the topic [Assembly Manifest](https://msdn.microsoft.com/library/1w45z383).  \n  \n## How to manually determine if a file is an assembly  \n  \n1.  Start the [Ildasm.exe (IL Disassembler)](https://msdn.microsoft.com/library/f7dy01k1).  \n  \n2.  Load the file you wish to test.  \n  \n3.  If **ILDASM** reports that the file is not a portable executable (PE) file, then it is not an assembly. For more information, see the topic [How to: View Assembly Contents](../../../../framework/app-domains/how-to-view-assembly-contents.md).  \n  \n## How to programmatically determine if a file is an assembly  \n  \n1.  Call the <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> method, passing the full file path and name of the file you are testing.  \n  \n2.  If a <xref:System.BadImageFormatException> exception is thrown, the file is not an assembly.  \n  \n## Example  \n This example tests a DLL to see if it is an assembly.  \n  \n```vb  \nModule Module1  \n    Sub Main()  \n        Try  \n            Dim testAssembly As Reflection.AssemblyName =  \n                                Reflection.AssemblyName.GetAssemblyName(\"C:\\Windows\\Microsoft.NET\\Framework\\v3.5\\System.Net.dll\")  \n            Console.WriteLine(\"Yes, the file is an Assembly.\")  \n        Catch ex As System.IO.FileNotFoundException  \n            Console.WriteLine(\"The file cannot be found.\")  \n        Catch ex As System.BadImageFormatException  \n            Console.WriteLine(\"The file is not an Assembly.\")  \n        Catch ex As System.IO.FileLoadException  \n            Console.WriteLine(\"The Assembly has already been loaded.\")  \n        End Try  \n        Console.ReadLine()  \n    End Sub  \nEnd Module  \n' Output (with .NET Framework 3.5 installed):  \n'        Yes, the file is an Assembly.  \n```\n  \n The <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> method loads the test file, and then releases it once the information is read.  \n  \n## See Also  \n <xref:System.Reflection.AssemblyName>   \n [Programming Concepts](../../../../visual-basic/programming-guide/concepts/index.md)   \n [Assemblies and the Global Assembly Cache (Visual Basic)](index.md)","nodes":[{"pos":[12,86],"content":"How to: Determine If a File Is an Assembly (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Determine If a File Is an Assembly (Visual Basic) | Microsoft Docs","pos":[0,74]}]},{"pos":[467,524],"content":"How to: Determine If a File Is an Assembly (Visual Basic)","linkify":"How to: Determine If a File Is an Assembly (Visual Basic)","nodes":[{"content":"How to: Determine If a File Is an Assembly (Visual Basic)","pos":[0,57]}]},{"content":"A file is an assembly if and only if it is managed, and contains an assembly entry in its metadata.","pos":[525,624]},{"content":"For more information on assemblies and metadata, see the topic <bpt id=\"p1\">[</bpt>Assembly Manifest<ept id=\"p1\">](https://msdn.microsoft.com/library/1w45z383)</ept>.","pos":[625,753],"source":" For more information on assemblies and metadata, see the topic [Assembly Manifest](https://msdn.microsoft.com/library/1w45z383)."},{"pos":[762,812],"content":"How to manually determine if a file is an assembly","linkify":"How to manually determine if a file is an assembly","nodes":[{"content":"How to manually determine if a file is an assembly","pos":[0,50]}]},{"pos":[822,908],"content":"Start the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](https://msdn.microsoft.com/library/f7dy01k1)</ept>.","source":"Start the [Ildasm.exe (IL Disassembler)](https://msdn.microsoft.com/library/f7dy01k1)."},{"content":"Load the file you wish to test.","pos":[918,949]},{"content":"If <bpt id=\"p1\">**</bpt>ILDASM<ept id=\"p1\">**</ept> reports that the file is not a portable executable (PE) file, then it is not an assembly.","pos":[959,1062],"source":"If **ILDASM** reports that the file is not a portable executable (PE) file, then it is not an assembly."},{"content":"For more information, see the topic <bpt id=\"p1\">[</bpt>How to: View Assembly Contents<ept id=\"p1\">](../../../../framework/app-domains/how-to-view-assembly-contents.md)</ept>.","pos":[1063,1200],"source":" For more information, see the topic [How to: View Assembly Contents](../../../../framework/app-domains/how-to-view-assembly-contents.md)."},{"pos":[1209,1267],"content":"How to programmatically determine if a file is an assembly","linkify":"How to programmatically determine if a file is an assembly","nodes":[{"content":"How to programmatically determine if a file is an assembly","pos":[0,58]}]},{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.GetAssemblyName%2A&gt;</ph> method, passing the full file path and name of the file you are testing.","pos":[1277,1415],"source":"Call the <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> method, passing the full file path and name of the file you are testing."},{"content":"If a <ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph> exception is thrown, the file is not an assembly.","pos":[1425,1517],"source":"If a <xref:System.BadImageFormatException> exception is thrown, the file is not an assembly."},{"pos":[1526,1533],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example tests a DLL to see if it is an assembly.","pos":[1537,1590]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.GetAssemblyName%2A&gt;</ph> method loads the test file, and then releases it once the information is read.","pos":[2435,2574],"source":"The <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> method loads the test file, and then releases it once the information is read."},{"pos":[2583,2591],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph>","pos":[2595,2632],"source":"<xref:System.Reflection.AssemblyName> "},{"content":"<bpt id=\"p1\"> [</bpt>Programming Concepts<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2636,2722],"source":" [Programming Concepts](../../../../visual-basic/programming-guide/concepts/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Assemblies and the Global Assembly Cache (Visual Basic)<ept id=\"p1\">](index.md)</ept>","pos":[2725,2793],"source":" [Assemblies and the Global Assembly Cache (Visual Basic)](index.md)"}]}