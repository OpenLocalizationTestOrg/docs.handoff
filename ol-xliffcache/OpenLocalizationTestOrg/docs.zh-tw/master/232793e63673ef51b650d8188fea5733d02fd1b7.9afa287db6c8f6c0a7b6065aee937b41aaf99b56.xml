{"content":"---\ntitle: \"Query Expression Syntax for Standard Query Operators (C#)\"\nms.date: 07/20/2015\nms.assetid: e1e17ef2-68ff-4c26-b6e2-015668227fa5\n---\n# Query Expression Syntax for Standard Query Operators (C#)\nSome of the more frequently used standard query operators have dedicated C# language keyword syntax that enables them to be called as part of a *query expression*. A query expression is a different, more readable form of expressing a query than its *method-based*  equivalent. Query expression clauses are translated into calls to the query methods at compile time.  \n  \n## Query Expression Syntax Table  \n The following table lists the standard query operators that have equivalent query expression clauses.  \n  \n|Method|C# Query Expression Syntax|  \n|------------|---------------------------------|  \n|<xref:System.Linq.Enumerable.Cast%2A>|Use an explicitly typed range variable, for example:<br /><br /> `from int i in numbers`<br /><br /> (For more information, see [from clause](../../../../csharp/language-reference/keywords/from-clause.md).)|  \n|<xref:System.Linq.Enumerable.GroupBy%2A>|`group … by`<br /><br /> -or-<br /><br /> `group … by … into …`<br /><br /> (For more information, see [group clause](../../../../csharp/language-reference/keywords/group-clause.md).)|  \n|<xref:System.Linq.Enumerable.GroupJoin%60%604%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Func%7B%60%600%2C%60%602%7D%2CSystem.Func%7B%60%601%2C%60%602%7D%2CSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%29>|`join … in … on … equals … into …`<br /><br /> (For more information, see [join clause](../../../../csharp/language-reference/keywords/join-clause.md).)|  \n|<xref:System.Linq.Enumerable.Join%60%604%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Func%7B%60%600%2C%60%602%7D%2CSystem.Func%7B%60%601%2C%60%602%7D%2CSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%29>|`join … in … on … equals …`<br /><br /> (For more information, see [join clause](../../../../csharp/language-reference/keywords/join-clause.md).)|  \n|<xref:System.Linq.Enumerable.OrderBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>|`orderby`<br /><br /> (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)|  \n|<xref:System.Linq.Enumerable.OrderByDescending%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>|`orderby … descending`<br /><br /> (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)|  \n|<xref:System.Linq.Enumerable.Select%2A>|`select`<br /><br /> (For more information, see [select clause](../../../../csharp/language-reference/keywords/select-clause.md).)|  \n|<xref:System.Linq.Enumerable.SelectMany%2A>|Multiple `from` clauses.<br /><br /> (For more information, see [from clause](../../../../csharp/language-reference/keywords/from-clause.md).)|  \n|<xref:System.Linq.Enumerable.ThenBy%60%602%28System.Linq.IOrderedEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>|`orderby …, …`<br /><br /> (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)|  \n|<xref:System.Linq.Enumerable.ThenByDescending%60%602%28System.Linq.IOrderedEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>|`orderby …, … descending`<br /><br /> (For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)|  \n|<xref:System.Linq.Enumerable.Where%2A>|`where`<br /><br /> (For more information, see [where clause](../../../../csharp/language-reference/keywords/where-clause.md).)|  \n  \n## See also\n\n- <xref:System.Linq.Enumerable>\n- <xref:System.Linq.Queryable>\n- [Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)\n- [Classification of Standard Query Operators by Manner of Execution (C#)](../../../../csharp/programming-guide/concepts/linq/classification-of-standard-query-operators-by-manner-of-execution.md)\n","nodes":[{"pos":[4,139],"embed":true,"restype":"x-metadata","content":"title: \"Query Expression Syntax for Standard Query Operators (C#)\"\nms.date: 07/20/2015\nms.assetid: e1e17ef2-68ff-4c26-b6e2-015668227fa5","nodes":[{"content":"Query Expression Syntax for Standard Query Operators (C#)","nodes":[{"pos":[0,57],"content":"Query Expression Syntax for Standard Query Operators (C#)","nodes":[{"content":"Query Expression Syntax for Standard Query Operators (C#)","pos":[0,57]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[146,203],"content":"Query Expression Syntax for Standard Query Operators (C#)","linkify":"Query Expression Syntax for Standard Query Operators (C#)","nodes":[{"content":"Query Expression Syntax for Standard Query Operators (C#)","pos":[0,57]}]},{"content":"Some of the more frequently used standard query operators have dedicated C# language keyword syntax that enables them to be called as part of a <bpt id=\"p1\">*</bpt>query expression<ept id=\"p1\">*</ept>.","pos":[204,367],"source":"Some of the more frequently used standard query operators have dedicated C# language keyword syntax that enables them to be called as part of a *query expression*."},{"content":"A query expression is a different, more readable form of expressing a query than its <bpt id=\"p1\">*</bpt>method-based<ept id=\"p1\">*</ept>  equivalent.","pos":[368,480],"source":" A query expression is a different, more readable form of expressing a query than its *method-based*  equivalent."},{"content":"Query expression clauses are translated into calls to the query methods at compile time.","pos":[481,569]},{"pos":[578,607],"content":"Query Expression Syntax Table","linkify":"Query Expression Syntax Table","nodes":[{"content":"Query Expression Syntax Table","pos":[0,29]}]},{"content":"The following table lists the standard query operators that have equivalent query expression clauses.","pos":[611,712]},{"content":"Method","pos":[719,725]},{"content":"C# Query Expression Syntax","pos":[726,752]},{"content":"Use an explicitly typed range variable, for example:","pos":[846,898]},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>from clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/from-clause.md)</ept>.)","pos":[947,1052],"source":"(For more information, see [from clause](../../../../csharp/language-reference/keywords/from-clause.md).)"},{"content":"-or-","pos":[1123,1127]},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>group clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/group-clause.md)</ept>.)","pos":[1174,1281],"source":"(For more information, see [group clause](../../../../csharp/language-reference/keywords/group-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>join clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/join-clause.md)</ept>.)","pos":[1656,1761],"source":"(For more information, see [join clause](../../../../csharp/language-reference/keywords/join-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>join clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/join-clause.md)</ept>.)","pos":[2080,2185],"source":"(For more information, see [join clause](../../../../csharp/language-reference/keywords/join-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)","pos":[2351,2462],"source":"(For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)","pos":[2651,2762],"source":"(For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>select clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/select-clause.md)</ept>.)","pos":[2828,2937],"source":"(For more information, see [select clause](../../../../csharp/language-reference/keywords/select-clause.md).)"},{"content":"Multiple <ph id=\"ph1\">`from`</ph> clauses.","pos":[2986,3010],"source":"Multiple `from` clauses."},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>from clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/from-clause.md)</ept>.)","pos":[3023,3128],"source":"(For more information, see [from clause](../../../../csharp/language-reference/keywords/from-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)","pos":[3290,3401],"source":"(For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>orderby clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)","pos":[3584,3695],"source":"(For more information, see [orderby clause](../../../../csharp/language-reference/keywords/orderby-clause.md).)"},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>where clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/where-clause.md)</ept>.)","pos":[3759,3866],"source":"(For more information, see [where clause](../../../../csharp/language-reference/keywords/where-clause.md).)"},{"pos":[3876,3884],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3951,4080],"content":"<bpt id=\"p1\">[</bpt>Standard Query Operators Overview (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept>","source":"[Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)"},{"pos":[4083,4276],"content":"<bpt id=\"p1\">[</bpt>Classification of Standard Query Operators by Manner of Execution (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/classification-of-standard-query-operators-by-manner-of-execution.md)</ept>","source":"[Classification of Standard Query Operators by Manner of Execution (C#)](../../../../csharp/programming-guide/concepts/linq/classification-of-standard-query-operators-by-manner-of-execution.md)"}]}