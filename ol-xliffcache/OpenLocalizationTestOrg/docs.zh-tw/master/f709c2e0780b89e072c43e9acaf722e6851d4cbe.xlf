<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="socket-code-examples.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f709c2e0780b89e072c43e9acaf722e6851d4cbe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\network-programming\socket-code-examples.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d10127cc9f29c67f0ebd4e2e6763532cb162597</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">826ac968a941197f9bd4e334340515acd854e062</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Socket Code Examples</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Socket Code Examples</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following code examples demonstrate how to use the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class as a client to connect to remote network services and as a server to listen for connections from remote clients.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In This Section</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Synchronous Client Socket Example<ept id="p1">](../../../docs/framework/network-programming/synchronous-client-socket-example.md)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Shows how to implement a synchronous <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> client that connects to a server and displays the data returned from the server.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Synchronous Server Socket Example<ept id="p1">](../../../docs/framework/network-programming/synchronous-server-socket-example.md)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Shows how to implement a synchronous <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> server that accepts connections from a client and echoes back the data received from the client.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Asynchronous Client Socket Example<ept id="p1">](../../../docs/framework/network-programming/asynchronous-client-socket-example.md)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Shows how to implement an asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> client that connects to a server and displays the data returned from the server.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Asynchronous Server Socket Example<ept id="p1">](../../../docs/framework/network-programming/asynchronous-server-socket-example.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Shows how to implement an asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> server that accepts connections from a client and echoes back the data received from the client.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Related Sections</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sockets<ept id="p1">](../../../docs/framework/network-programming/sockets.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Provides basic information about the <ph id="ph1">&lt;xref:System.Net.Sockets&gt;</ph> namespace and the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security in Network Programming<ept id="p1">](../../../docs/framework/network-programming/security-in-network-programming.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Describes how to use standard Internet security and authentication techniques.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>