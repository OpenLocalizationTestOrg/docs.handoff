{"content":"---\ntitle: \"'For Each' on type '<typename>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32096\"\n  - \"bc32096\"\nhelpviewer_keywords: \n  - \"BC32096\"\nms.assetid: ed20d09c-913f-482e-89f8-c0a596c3ec24\n---\n# 'For Each' on type '\\<typename>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'\nA `For Each` statement specifies an iterator variable that has more than one <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.  \n  \n The iterator variable must be of a type that implements the <xref:System.Collections.IEnumerable?displayProperty=nameWithType> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface in one of the `Collections` namespaces of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. It is possible for a class to implement more than one constructed generic interface, using a different type argument for each construction. If a class that does this is used for the iterator variable, that variable has more than one <xref:System.Collections.IEnumerable.GetEnumerator%2A> method. In such a case, Visual Basic cannot choose which method to call.  \n  \n **Error ID:** BC32096  \n  \n## To correct this error  \n  \n-   Use [DirectCast Operator](../../../visual-basic/language-reference/operators/directcast-operator.md) or [TryCast Operator](../../../visual-basic/language-reference/operators/trycast-operator.md) to cast the iterator variable type to the interface defining the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method you want to use.  \n  \n## See also\n\n- [For Each...Next Statement](../../../visual-basic/language-reference/statements/for-each-next-statement.md)\n- [Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md)\n","nodes":[{"pos":[4,307],"embed":true,"restype":"x-metadata","content":"title: \"'For Each' on type '<typename>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32096\"\n  - \"bc32096\"\nhelpviewer_keywords: \n  - \"BC32096\"\nms.assetid: ed20d09c-913f-482e-89f8-c0a596c3ec24","nodes":[{"content":"'For Each' on type '<typename>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'","nodes":[{"pos":[0,146],"content":"'For Each' on type '<ph id=\"ph1\">&lt;typename&gt;</ph>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'","source":"'For Each' on type '<typename>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[314,461],"content":"'For Each' on type '\\<typename>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'","linkify":"'For Each' on type '\\<typename>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'","nodes":[{"content":"'For Each' on type '<ph id=\"ph1\">\\&lt;</ph>typename&gt;' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'","pos":[0,147],"source":"'For Each' on type '\\<typename>' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'"}]},{"pos":[462,601],"content":"A <ph id=\"ph1\">`For Each`</ph> statement specifies an iterator variable that has more than one <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method.","source":"A `For Each` statement specifies an iterator variable that has more than one <xref:System.Collections.IEnumerable.GetEnumerator%2A> method."},{"content":"The iterator variable must be of a type that implements the <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable?displayProperty=nameWithType&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> interface in one of the <ph id=\"ph3\">`Collections`</ph> namespaces of the <ph id=\"ph4\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.","pos":[608,927],"source":"The iterator variable must be of a type that implements the <xref:System.Collections.IEnumerable?displayProperty=nameWithType> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface in one of the `Collections` namespaces of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]."},{"content":"It is possible for a class to implement more than one constructed generic interface, using a different type argument for each construction.","pos":[928,1067]},{"content":"If a class that does this is used for the iterator variable, that variable has more than one <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method.","pos":[1068,1223],"source":" If a class that does this is used for the iterator variable, that variable has more than one <xref:System.Collections.IEnumerable.GetEnumerator%2A> method."},{"content":"In such a case, Visual Basic cannot choose which method to call.","pos":[1224,1288]},{"pos":[1295,1316],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32096","source":"**Error ID:** BC32096"},{"pos":[1325,1346],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1356,1694],"content":"Use <bpt id=\"p1\">[</bpt>DirectCast Operator<ept id=\"p1\">](../../../visual-basic/language-reference/operators/directcast-operator.md)</ept> or <bpt id=\"p2\">[</bpt>TryCast Operator<ept id=\"p2\">](../../../visual-basic/language-reference/operators/trycast-operator.md)</ept> to cast the iterator variable type to the interface defining the <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method you want to use.","source":"Use [DirectCast Operator](../../../visual-basic/language-reference/operators/directcast-operator.md) or [TryCast Operator](../../../visual-basic/language-reference/operators/trycast-operator.md) to cast the iterator variable type to the interface defining the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method you want to use."},{"pos":[1703,1711],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1715,1822],"content":"<bpt id=\"p1\">[</bpt>For Each...Next Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept>","source":"[For Each...Next Statement](../../../visual-basic/language-reference/statements/for-each-next-statement.md)"},{"pos":[1825,1916],"content":"<bpt id=\"p1\">[</bpt>Interfaces<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept>","source":"[Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md)"}]}