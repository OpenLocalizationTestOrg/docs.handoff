{"content":"---\ntitle: \"params keyword - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"params_CSharpKeyword\"\n  - \"params\"\nhelpviewer_keywords: \n  - \"parameters [C#], params\"\n  - \"params keyword [C#]\"\nms.assetid: 1690815e-b52b-4967-8380-5780aff08012\n---\n# params (C# Reference)\n\nBy using the `params` keyword, you can specify a [method parameter](method-parameters.md) that takes a variable number of arguments.\n\nYou can send a comma-separated list of arguments of the type specified in the parameter declaration or an array of arguments of the specified type. You also can send no arguments. If you send no arguments, the length of the `params` list is zero.\n\nNo additional parameters are permitted after the `params` keyword in a method declaration, and only one `params` keyword is permitted in a method declaration.\n\nThe declared type of the `params` parameter must be a single-dimensional array, as the following example shows. Otherwise, a compiler error [CS0225](../../misc/cs0225.md) occurs.\n\n## Example\n\nThe following example demonstrates various ways in which arguments can be sent to a `params` parameter.\n\n[!code-csharp[csrefKeywordsMethodParams#5](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsMethodParams/CS/csrefKeywordsMethodParams.cs#5)] \n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Method Parameters](method-parameters.md)","nodes":[{"pos":[4,264],"embed":true,"restype":"x-metadata","content":"title: \"params keyword - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"params_CSharpKeyword\"\n  - \"params\"\nhelpviewer_keywords: \n  - \"parameters [C#], params\"\n  - \"params keyword [C#]\"\nms.assetid: 1690815e-b52b-4967-8380-5780aff08012","nodes":[{"content":"params keyword - C# Reference","nodes":[{"pos":[0,29],"content":"params keyword - C# Reference","nodes":[{"content":"params keyword - C# Reference","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[271,292],"content":"params (C# Reference)","linkify":"params (C# Reference)","nodes":[{"content":"params (C# Reference)","pos":[0,21]}]},{"pos":[294,426],"content":"By using the <ph id=\"ph1\">`params`</ph> keyword, you can specify a <bpt id=\"p1\">[</bpt>method parameter<ept id=\"p1\">](method-parameters.md)</ept> that takes a variable number of arguments.","source":"By using the `params` keyword, you can specify a [method parameter](method-parameters.md) that takes a variable number of arguments."},{"content":"You can send a comma-separated list of arguments of the type specified in the parameter declaration or an array of arguments of the specified type.","pos":[428,575]},{"content":"You also can send no arguments.","pos":[576,607]},{"content":"If you send no arguments, the length of the <ph id=\"ph1\">`params`</ph> list is zero.","pos":[608,674],"source":" If you send no arguments, the length of the `params` list is zero."},{"pos":[676,834],"content":"No additional parameters are permitted after the <ph id=\"ph1\">`params`</ph> keyword in a method declaration, and only one <ph id=\"ph2\">`params`</ph> keyword is permitted in a method declaration.","source":"No additional parameters are permitted after the `params` keyword in a method declaration, and only one `params` keyword is permitted in a method declaration."},{"content":"The declared type of the <ph id=\"ph1\">`params`</ph> parameter must be a single-dimensional array, as the following example shows.","pos":[836,947],"source":"The declared type of the `params` parameter must be a single-dimensional array, as the following example shows."},{"content":"Otherwise, a compiler error <bpt id=\"p1\">[</bpt>CS0225<ept id=\"p1\">](../../misc/cs0225.md)</ept> occurs.","pos":[948,1014],"source":" Otherwise, a compiler error [CS0225](../../misc/cs0225.md) occurs."},{"pos":[1019,1026],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1028,1131],"content":"The following example demonstrates various ways in which arguments can be sent to a <ph id=\"ph1\">`params`</ph> parameter.","source":"The following example demonstrates various ways in which arguments can be sent to a `params` parameter."},{"pos":[1290,1315],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[1381,1389],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1393,1420],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1423,1479],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1482,1505],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[1508,1549],"content":"<bpt id=\"p1\">[</bpt>Method Parameters<ept id=\"p1\">](method-parameters.md)</ept>","source":"[Method Parameters](method-parameters.md)"}]}