<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="case-entity-sql.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65d038564683e0a97939cabc7081be3341f4542d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\case-entity-sql.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a2451e1c45d4942f732245e97f43f70aabeac4b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9dbb93435224bfedd198c3fcd8b3e4ff560f3f52</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>CASE (Entity SQL)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CASE (Entity SQL)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Evaluates a set of <ph id="ph1">`Boolean`</ph> expressions to determine the result.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Arguments</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Is a placeholder that indicates that multiple WHEN <ph id="ph1">`Boolean_expression`</ph> THEN <ph id="ph2">`result_expression`</ph> clauses can be used.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>THEN <ph id="ph1">`result_expression`</ph></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Is the expression returned when <ph id="ph1">`Boolean_expression`</ph> evaluates to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`result expression`</ph> is any valid expression.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>ELSE <ph id="ph1">`else_result_expression`</ph></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Is the expression returned if no comparison operation evaluates to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If this argument is omitted and no comparison operation evaluates to <ph id="ph1">`true`</ph>, CASE returns null.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`else_result_expression`</ph> is any valid expression.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The data types of <ph id="ph1">`else_result_expression`</ph> and any <ph id="ph2">`result_expression`</ph> must be the same or must be an implicit conversion.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>WHEN <ph id="ph1">`Boolean_expression`</ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Is the <ph id="ph1">`Boolean`</ph> expression evaluated when the searched CASE format is used.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Boolean_expression`</ph> is any valid <ph id="ph2">`Boolean`</ph> expression.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns the highest precedence type from the set of types in the <ph id="ph1">`result_expression`</ph> and the optional <ph id="ph2">`else_result_expression`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> case expression resembles the <ph id="ph2">[!INCLUDE[tsql](../../../../../../includes/tsql-md.md)]</ph> case expression.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You use the case expression to make a series of conditional tests to determine which expression will yield the appropriate result.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This form of the case expression applies to a series of one or more <ph id="ph1">`Boolean`</ph> expressions to determine the correct resulting expression.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The CASE function evaluates <ph id="ph1">`Boolean_expression`</ph> for each WHEN clause in the order specified, and returns <ph id="ph2">`result_expression`</ph> of the first <ph id="ph3">`Boolean_expression`</ph> that evaluates to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The remaining expressions are not evaluated.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">`Boolean_expression`</ph> evaluates to <ph id="ph2">`true`</ph>, the Database Engine returns the <ph id="ph3">`else_result_expression`</ph> if an ELSE clause is specified, or a null value if no ELSE clause is specified.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A CASE statement cannot return a multiset.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following Entity SQL query uses the CASE expression to evaluate a set of <ph id="ph1">`Boolean`</ph> expressions in order to determine the result.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The query is based on the AdventureWorks Sales Model.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To compile and run this query, follow these steps:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Follow the procedure in <bpt id="p1">[</bpt>How to: Execute a Query that Returns PrimitiveType Results<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-primitivetype-results.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Pass the following query as an argument to the <ph id="ph1">`ExecutePrimitiveTypeQuery`</ph> method:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>THEN<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/then-entity-sql.md)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SELECT<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Entity SQL Reference<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>