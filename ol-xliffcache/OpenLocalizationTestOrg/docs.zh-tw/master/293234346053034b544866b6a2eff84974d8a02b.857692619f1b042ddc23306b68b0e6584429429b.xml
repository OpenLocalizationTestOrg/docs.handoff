{"content":"---\ntitle: \"How to: Return a Value from a Procedure (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"Visual Basic code, procedures\"\n  - \"procedures [Visual Basic], returning from\"\n  - \"procedures [Visual Basic], returning a value\"\nms.assetid: 4bcc4724-2b4e-4df8-9b4b-16054607f87d\n---\n# How to: Return a Value from a Procedure (Visual Basic)\nA `Function` procedure returns a value to the calling code either by executing a `Return` statement or by encountering an `Exit Function` or `End Function` statement.  \n  \n### To return a value using the Return statement  \n  \n1.  Put a `Return` statement at the point where the procedure's task is completed.  \n  \n2.  Follow the `Return` keyword with an expression that yields the value you want to return to the calling code.  \n  \n3.  You can have more than one `Return` statement in the same procedure.  \n  \n     The following `Function` procedure calculates the longest side, or hypotenuse, of a right triangle, and returns it to the calling code.  \n  \n     [!code-vb[VbVbcnProcedures#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnProcedures/VB/Class1.vb#1)]  \n  \n     The following example shows a typical call to `hypotenuse`, which stores the returned value.  \n  \n     [!code-vb[VbVbcnProcedures#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnProcedures/VB/Class1.vb#6)]  \n  \n### To return a value using Exit Function or End Function  \n  \n1.  In at least one place in the `Function` procedure, assign a value to the procedure's name.  \n  \n2.  When you execute an `Exit Function` or `End Function` statement, Visual Basic returns the value most recently assigned to the procedure's name.  \n  \n3.  You can have more than one `Exit Function` statement in the same procedure, and you can mix `Return` and `Exit Function` statements in the same procedure.  \n  \n4.  You can have only one `End Function` statement in a `Function` procedure.  \n  \n     For more information and an example, see \"Return Value\" in [Function Statement](../../../../visual-basic/language-reference/statements/function-statement.md).  \n  \n## See also\n\n- [Procedures](./index.md)\n- [Sub Procedures](./sub-procedures.md)\n- [Property Procedures](./property-procedures.md)\n- [Operator Procedures](./operator-procedures.md)\n- [Procedure Parameters and Arguments](./procedure-parameters-and-arguments.md)\n- [Function Statement](../../../../visual-basic/language-reference/statements/function-statement.md)\n- [Return Statement](../../../../visual-basic/language-reference/statements/return-statement.md)\n- [How to: Create a Procedure that Returns a Value](./how-to-create-a-procedure-that-returns-a-value.md)\n- [How to: Call a Procedure That Returns a Value](./how-to-call-a-procedure-that-returns-a-value.md)\n","nodes":[{"pos":[4,293],"embed":true,"restype":"x-metadata","content":"title: \"How to: Return a Value from a Procedure (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"Visual Basic code, procedures\"\n  - \"procedures [Visual Basic], returning from\"\n  - \"procedures [Visual Basic], returning a value\"\nms.assetid: 4bcc4724-2b4e-4df8-9b4b-16054607f87d","nodes":[{"content":"How to: Return a Value from a Procedure (Visual Basic)","nodes":[{"pos":[0,54],"content":"How to: Return a Value from a Procedure (Visual Basic)","nodes":[{"content":"How to: Return a Value from a Procedure (Visual Basic)","pos":[0,54]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[300,354],"content":"How to: Return a Value from a Procedure (Visual Basic)","linkify":"How to: Return a Value from a Procedure (Visual Basic)","nodes":[{"content":"How to: Return a Value from a Procedure (Visual Basic)","pos":[0,54]}]},{"pos":[355,521],"content":"A <ph id=\"ph1\">`Function`</ph> procedure returns a value to the calling code either by executing a <ph id=\"ph2\">`Return`</ph> statement or by encountering an <ph id=\"ph3\">`Exit Function`</ph> or <ph id=\"ph4\">`End Function`</ph> statement.","source":"A `Function` procedure returns a value to the calling code either by executing a `Return` statement or by encountering an `Exit Function` or `End Function` statement."},{"pos":[531,575],"content":"To return a value using the Return statement","linkify":"To return a value using the Return statement","nodes":[{"content":"To return a value using the Return statement","pos":[0,44]}]},{"pos":[585,663],"content":"Put a <ph id=\"ph1\">`Return`</ph> statement at the point where the procedure's task is completed.","source":"Put a `Return` statement at the point where the procedure's task is completed."},{"pos":[673,781],"content":"Follow the <ph id=\"ph1\">`Return`</ph> keyword with an expression that yields the value you want to return to the calling code.","source":"Follow the `Return` keyword with an expression that yields the value you want to return to the calling code."},{"pos":[791,859],"content":"You can have more than one <ph id=\"ph1\">`Return`</ph> statement in the same procedure.","source":"You can have more than one `Return` statement in the same procedure."},{"pos":[870,1005],"content":"The following <ph id=\"ph1\">`Function`</ph> procedure calculates the longest side, or hypotenuse, of a right triangle, and returns it to the calling code.","source":"The following `Function` procedure calculates the longest side, or hypotenuse, of a right triangle, and returns it to the calling code."},{"pos":[1142,1234],"content":"The following example shows a typical call to <ph id=\"ph1\">`hypotenuse`</ph>, which stores the returned value.","source":"The following example shows a typical call to `hypotenuse`, which stores the returned value."},{"pos":[1370,1423],"content":"To return a value using Exit Function or End Function","linkify":"To return a value using Exit Function or End Function","nodes":[{"content":"To return a value using Exit Function or End Function","pos":[0,53]}]},{"pos":[1433,1523],"content":"In at least one place in the <ph id=\"ph1\">`Function`</ph> procedure, assign a value to the procedure's name.","source":"In at least one place in the `Function` procedure, assign a value to the procedure's name."},{"pos":[1533,1676],"content":"When you execute an <ph id=\"ph1\">`Exit Function`</ph> or <ph id=\"ph2\">`End Function`</ph> statement, Visual Basic returns the value most recently assigned to the procedure's name.","source":"When you execute an `Exit Function` or `End Function` statement, Visual Basic returns the value most recently assigned to the procedure's name."},{"pos":[1686,1840],"content":"You can have more than one <ph id=\"ph1\">`Exit Function`</ph> statement in the same procedure, and you can mix <ph id=\"ph2\">`Return`</ph> and <ph id=\"ph3\">`Exit Function`</ph> statements in the same procedure.","source":"You can have more than one `Exit Function` statement in the same procedure, and you can mix `Return` and `Exit Function` statements in the same procedure."},{"pos":[1850,1923],"content":"You can have only one <ph id=\"ph1\">`End Function`</ph> statement in a <ph id=\"ph2\">`Function`</ph> procedure.","source":"You can have only one `End Function` statement in a `Function` procedure."},{"pos":[1934,2092],"content":"For more information and an example, see \"Return Value\" in <bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/function-statement.md)</ept>.","source":"For more information and an example, see \"Return Value\" in [Function Statement](../../../../visual-basic/language-reference/statements/function-statement.md)."},{"pos":[2101,2109],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2113,2137],"content":"<bpt id=\"p1\">[</bpt>Procedures<ept id=\"p1\">](./index.md)</ept>","source":"[Procedures](./index.md)"},{"pos":[2140,2177],"content":"<bpt id=\"p1\">[</bpt>Sub Procedures<ept id=\"p1\">](./sub-procedures.md)</ept>","source":"[Sub Procedures](./sub-procedures.md)"},{"pos":[2180,2227],"content":"<bpt id=\"p1\">[</bpt>Property Procedures<ept id=\"p1\">](./property-procedures.md)</ept>","source":"[Property Procedures](./property-procedures.md)"},{"pos":[2230,2277],"content":"<bpt id=\"p1\">[</bpt>Operator Procedures<ept id=\"p1\">](./operator-procedures.md)</ept>","source":"[Operator Procedures](./operator-procedures.md)"},{"pos":[2280,2357],"content":"<bpt id=\"p1\">[</bpt>Procedure Parameters and Arguments<ept id=\"p1\">](./procedure-parameters-and-arguments.md)</ept>","source":"[Procedure Parameters and Arguments](./procedure-parameters-and-arguments.md)"},{"pos":[2360,2458],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[2461,2555],"content":"<bpt id=\"p1\">[</bpt>Return Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/return-statement.md)</ept>","source":"[Return Statement](../../../../visual-basic/language-reference/statements/return-statement.md)"},{"pos":[2558,2660],"content":"<bpt id=\"p1\">[</bpt>How to: Create a Procedure that Returns a Value<ept id=\"p1\">](./how-to-create-a-procedure-that-returns-a-value.md)</ept>","source":"[How to: Create a Procedure that Returns a Value](./how-to-create-a-procedure-that-returns-a-value.md)"},{"pos":[2663,2761],"content":"<bpt id=\"p1\">[</bpt>How to: Call a Procedure That Returns a Value<ept id=\"p1\">](./how-to-call-a-procedure-that-returns-a-value.md)</ept>","source":"[How to: Call a Procedure That Returns a Value](./how-to-call-a-procedure-that-returns-a-value.md)"}]}