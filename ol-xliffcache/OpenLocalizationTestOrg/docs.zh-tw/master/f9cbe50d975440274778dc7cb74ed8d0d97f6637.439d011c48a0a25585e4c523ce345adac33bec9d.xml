{"content":"---\ntitle: \"ICorDebugThread::GetCurrentException Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugThread.GetCurrentException\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugThread::GetCurrentException\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorDebugThread::GetCurrentException method [.NET Framework debugging]\"\n  - \"GetCurrentException method [.NET Framework debugging]\"\nms.assetid: 331ed465-a195-4359-8584-b82c6098b29b\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 15\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugThread::GetCurrentException Method\nGets an interface pointer to an ICorDebugValue object that represents an exception that is currently being thrown by managed code.  \n  \n## Syntax  \n  \n```  \nHRESULT GetCurrentException (  \n    [out] ICorDebugValue **ppExceptionObject  \n);  \n```  \n  \n#### Parameters  \n `ppExceptionObject`  \n [out] A pointer to the address of an `ICorDebugValue` object that represents the exception that is currently being thrown by managed code.  \n  \n## Remarks  \n The exception object will exist from the time the exception is thrown until the end of the `catch` block. A function evaluation, which is performed by the ICorDebugEval methods, will clear out the exception object on setup and restore it on completion.  \n  \n Exceptions can be nested (for example, if an exception is thrown in a filter or in a function evaluation), so there may be multiple outstanding exceptions on a single thread. `GetCurrentException` returns the most current exception.  \n  \n The exception object and type may change throughout the life of the exception. For example, after an exception of type x is thrown, the common language runtime (CLR) may run out of memory and promote it to an out-of-memory exception.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]","nodes":[{"pos":[12,72],"content":"ICorDebugThread::GetCurrentException Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICorDebugThread::GetCurrentException Method | Microsoft Docs","pos":[0,60]}]},{"pos":[750,793],"content":"ICorDebugThread::GetCurrentException Method","linkify":"ICorDebugThread::GetCurrentException Method","nodes":[{"content":"ICorDebugThread::GetCurrentException Method","pos":[0,43]}]},{"content":"Gets an interface pointer to an ICorDebugValue object that represents an exception that is currently being thrown by managed code.","pos":[794,924]},{"pos":[933,939],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1049,1059],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] A pointer to the address of an <ph id=\"ph1\">`ICorDebugValue`</ph> object that represents the exception that is currently being thrown by managed code.","pos":[1086,1224],"source":" [out] A pointer to the address of an `ICorDebugValue` object that represents the exception that is currently being thrown by managed code."},{"pos":[1233,1240],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The exception object will exist from the time the exception is thrown until the end of the <ph id=\"ph1\">`catch`</ph> block.","pos":[1244,1349],"source":"The exception object will exist from the time the exception is thrown until the end of the `catch` block."},{"content":"A function evaluation, which is performed by the ICorDebugEval methods, will clear out the exception object on setup and restore it on completion.","pos":[1350,1496]},{"content":"Exceptions can be nested (for example, if an exception is thrown in a filter or in a function evaluation), so there may be multiple outstanding exceptions on a single thread.","pos":[1503,1677]},{"content":"<ph id=\"ph1\">`GetCurrentException`</ph> returns the most current exception.","pos":[1678,1735],"source":"`GetCurrentException` returns the most current exception."},{"content":"The exception object and type may change throughout the life of the exception.","pos":[1742,1820]},{"content":"For example, after an exception of type x is thrown, the common language runtime (CLR) may run out of memory and promote it to an out-of-memory exception.","pos":[1821,1975]},{"pos":[1984,1996],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2000,2104],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2111,2147],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2154,2179],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2186,2294],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"}]}