{"content":"---\ntitle: \"How to: Write an Extension for the ServiceContractGenerator | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 876ca823-bd16-4bdf-9e0f-02092df90e51\ncaps.latest.revision: 13\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Write an Extension for the ServiceContractGenerator\nThis topic describes how to write an extension for the <xref:System.ServiceModel.Description.ServiceContractGenerator>. This can be done by implementing the <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> interface on an operation behavior or implementing the <xref:System.ServiceModel.Description.IServiceContractGenerationExtension> interface on a contract behavior. This topic shows how to implement the <xref:System.ServiceModel.Description.IServiceContractGenerationExtension> interface on a contract behavior.  \n  \n The <xref:System.ServiceModel.Description.ServiceContractGenerator> generates service contracts, client types, and client configurations from <xref:System.ServiceModel.Description.ServiceEndpoint>, <xref:System.ServiceModel.Description.ContractDescription>, and <xref:System.ServiceModel.Channels.Binding> instances. Typically, you import <xref:System.ServiceModel.Description.ServiceEndpoint>, <xref:System.ServiceModel.Description.ContractDescription>, and <xref:System.ServiceModel.Channels.Binding> instances from service metadata and then use these instances to generate code to call the service. In this example, an <xref:System.ServiceModel.Description.IWsdlImportExtension> implementation is used to process WSDL annotations and then add code generation extensions to the imported contracts to generate comments on the generated code.  \n  \n### To write an extension for the ServiceContractGenerator  \n  \n1.  Implement <xref:System.ServiceModel.Description.IServiceContractGenerationExtension>. To modify the generated service contract, use the <xref:System.ServiceModel.Description.ServiceContractGenerationContext> instance passed into the <xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%28System.ServiceModel.Description.ServiceContractGenerationContext%29> method.  \n  \n    ```  \n    public void GenerateContract(ServiceContractGenerationContext context)  \n    {  \n        Console.WriteLine(\"In generate contract.\");  \n    context.ContractType.Comments.AddRange(Formatter.FormatComments(commentText));  \n    }  \n    ```  \n  \n2.  Implement <xref:System.ServiceModel.Description.IWsdlImportExtension> on the same class. The <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%28System.ServiceModel.Description.WsdlImporter%2CSystem.ServiceModel.Description.WsdlContractConversionContext%29> method can process a specific WSDL extension (WSDL annotations in this case) by adding a code generation extension to the imported <xref:System.ServiceModel.Description.ContractDescription> instance.  \n  \n    ```  \n    public void ImportContract(WsdlImporter importer, WsdlContractConversionContext context)  \n       {  \n                // Contract documentation  \n             if (context.WsdlPortType.Documentation != null)  \n             {  \n                    context.Contract.Behaviors.Add(new WsdlDocumentationImporter(context.WsdlPortType.Documentation));  \n             }  \n             // Operation documentation  \n             foreach (Operation operation in context.WsdlPortType.Operations)  \n             {  \n                if (operation.Documentation != null)  \n                {  \n                   OperationDescription operationDescription = context.Contract.Operations.Find(operation.Name);  \n                   if (operationDescription != null)  \n                   {  \n                            operationDescription.Behaviors.Add(new WsdlDocumentationImporter(operation.Documentation));  \n                   }  \n                }  \n             }  \n          }  \n          public void BeforeImport(ServiceDescriptionCollection wsdlDocuments, XmlSchemaSet xmlSchemas, ICollection<XmlElement> policy)   \n            {  \n                Console.WriteLine(\"BeforeImport called.\");  \n            }  \n  \n          public void ImportEndpoint(WsdlImporter importer, WsdlEndpointConversionContext context)   \n            {  \n                Console.WriteLine(\"ImportEndpoint called.\");  \n            }  \n    ```  \n  \n3.  Add the WSDL importer to your client configuration.  \n  \n    ```  \n    <metadata>  \n      <wsdlImporters>  \n        <extension type=\"Microsoft.WCF.Documentation.WsdlDocumentationImporter, WsdlDocumentation\" />  \n      </wsdlImporters>  \n    </metadata>  \n    ```  \n  \n4.  In the client code, create a `MetadataExchangeClient` and call `GetMetadata`.  \n  \n    ```  \n    MetadataExchangeClient mexClient = new MetadataExchangeClient(metadataAddress);  \n    mexClient.ResolveMetadataReferences = true;  \n    MetadataSet metaDocs = mexClient.GetMetadata();  \n    ```  \n  \n5.  Create a `WsdlImporter` and call `ImportAllContracts`.  \n  \n    ```  \n    WsdlImporter importer = new WsdlImporter(metaDocs);            System.Collections.ObjectModel.Collection<ContractDescription> contracts = importer.ImportAllContracts();  \n    ```  \n  \n6.  Create a `ServiceContractGenerator` and call `GenerateServiceContractType` for each contract.  \n  \n    ```  \n    ServiceContractGenerator generator = new ServiceContractGenerator();  \n    foreach (ContractDescription contract in contracts)  \n    {  \n       generator.GenerateServiceContractType(contract);  \n    }  \n    if (generator.Errors.Count != 0)  \n       throw new Exception(\"There were errors during code compilation.\");  \n    ```  \n  \n7.  <xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%28System.ServiceModel.Description.ServiceContractGenerationContext%29> is called automatically for each contract behavior on a given contract that implements <xref:System.ServiceModel.Description.IServiceContractGenerationExtension>. This method can then modify the <xref:System.ServiceModel.Description.ServiceContractGenerationContext> passed in. In this example comments are added.  \n  \n## See Also  \n [Metadata](../../../../docs/framework/wcf/feature-details/metadata.md)   \n [How to: Import Custom WSDL](../../../../docs/framework/wcf/extending/how-to-import-custom-wsdl.md)","nodes":[{"pos":[12,88],"content":"How to: Write an Extension for the ServiceContractGenerator | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Write an Extension for the ServiceContractGenerator | Microsoft Docs","pos":[0,76]}]},{"pos":[387,446],"content":"How to: Write an Extension for the ServiceContractGenerator","linkify":"How to: Write an Extension for the ServiceContractGenerator","nodes":[{"content":"How to: Write an Extension for the ServiceContractGenerator","pos":[0,59]}]},{"content":"This topic describes how to write an extension for the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceContractGenerator&gt;</ph>.","pos":[447,566],"source":"This topic describes how to write an extension for the <xref:System.ServiceModel.Description.ServiceContractGenerator>."},{"content":"This can be done by implementing the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IOperationContractGenerationExtension&gt;</ph> interface on an operation behavior or implementing the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IServiceContractGenerationExtension&gt;</ph> interface on a contract behavior.","pos":[567,844],"source":" This can be done by implementing the <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> interface on an operation behavior or implementing the <xref:System.ServiceModel.Description.IServiceContractGenerationExtension> interface on a contract behavior."},{"content":"This topic shows how to implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IServiceContractGenerationExtension&gt;</ph> interface on a contract behavior.","pos":[845,991],"source":" This topic shows how to implement the <xref:System.ServiceModel.Description.IServiceContractGenerationExtension> interface on a contract behavior."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceContractGenerator&gt;</ph> generates service contracts, client types, and client configurations from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> instances.","pos":[998,1314],"source":"The <xref:System.ServiceModel.Description.ServiceContractGenerator> generates service contracts, client types, and client configurations from <xref:System.ServiceModel.Description.ServiceEndpoint>, <xref:System.ServiceModel.Description.ContractDescription>, and <xref:System.ServiceModel.Channels.Binding> instances."},{"content":"Typically, you import <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> instances from service metadata and then use these instances to generate code to call the service.","pos":[1315,1599],"source":" Typically, you import <xref:System.ServiceModel.Description.ServiceEndpoint>, <xref:System.ServiceModel.Description.ContractDescription>, and <xref:System.ServiceModel.Channels.Binding> instances from service metadata and then use these instances to generate code to call the service."},{"content":"In this example, an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension&gt;</ph> implementation is used to process WSDL annotations and then add code generation extensions to the imported contracts to generate comments on the generated code.","pos":[1600,1840],"source":" In this example, an <xref:System.ServiceModel.Description.IWsdlImportExtension> implementation is used to process WSDL annotations and then add code generation extensions to the imported contracts to generate comments on the generated code."},{"pos":[1850,1904],"content":"To write an extension for the ServiceContractGenerator","linkify":"To write an extension for the ServiceContractGenerator","nodes":[{"content":"To write an extension for the ServiceContractGenerator","pos":[0,54]}]},{"content":"Implement <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IServiceContractGenerationExtension&gt;</ph>.","pos":[1914,1999],"source":"Implement <xref:System.ServiceModel.Description.IServiceContractGenerationExtension>."},{"content":"To modify the generated service contract, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceContractGenerationContext&gt;</ph> instance passed into the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%28System.ServiceModel.Description.ServiceContractGenerationContext%29&gt;</ph> method.","pos":[2000,2316],"source":" To modify the generated service contract, use the <xref:System.ServiceModel.Description.ServiceContractGenerationContext> instance passed into the <xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%28System.ServiceModel.Description.ServiceContractGenerationContext%29> method."},{"content":"Implement <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension&gt;</ph> on the same class.","pos":[2581,2669],"source":"Implement <xref:System.ServiceModel.Description.IWsdlImportExtension> on the same class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%28System.ServiceModel.Description.WsdlImporter%2CSystem.ServiceModel.Description.WsdlContractConversionContext%29&gt;</ph> method can process a specific WSDL extension (WSDL annotations in this case) by adding a code generation extension to the imported <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> instance.","pos":[2670,3062],"source":" The <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%28System.ServiceModel.Description.WsdlImporter%2CSystem.ServiceModel.Description.WsdlContractConversionContext%29> method can process a specific WSDL extension (WSDL annotations in this case) by adding a code generation extension to the imported <xref:System.ServiceModel.Description.ContractDescription> instance."},{"content":"Add the WSDL importer to your client configuration.","pos":[4498,4549]},{"pos":[4770,4847],"content":"In the client code, create a <ph id=\"ph1\">`MetadataExchangeClient`</ph> and call <ph id=\"ph2\">`GetMetadata`</ph>.","source":"In the client code, create a `MetadataExchangeClient` and call `GetMetadata`."},{"pos":[5070,5124],"content":"Create a <ph id=\"ph1\">`WsdlImporter`</ph> and call <ph id=\"ph2\">`ImportAllContracts`</ph>.","source":"Create a `WsdlImporter` and call `ImportAllContracts`."},{"pos":[5332,5425],"content":"Create a <ph id=\"ph1\">`ServiceContractGenerator`</ph> and call <ph id=\"ph2\">`GenerateServiceContractType`</ph> for each contract.","source":"Create a `ServiceContractGenerator` and call `GenerateServiceContractType` for each contract."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%28System.ServiceModel.Description.ServiceContractGenerationContext%29&gt;</ph> is called automatically for each contract behavior on a given contract that implements <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IServiceContractGenerationExtension&gt;</ph>.","pos":[5780,6104],"source":"<xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%28System.ServiceModel.Description.ServiceContractGenerationContext%29> is called automatically for each contract behavior on a given contract that implements <xref:System.ServiceModel.Description.IServiceContractGenerationExtension>."},{"content":"This method can then modify the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceContractGenerationContext&gt;</ph> passed in.","pos":[6105,6219],"source":" This method can then modify the <xref:System.ServiceModel.Description.ServiceContractGenerationContext> passed in."},{"content":"In this example comments are added.","pos":[6220,6255]},{"pos":[6264,6272],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Metadata<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/metadata.md)</ept><ph id=\"ph1\"> </ph>","pos":[6276,6347],"source":"[Metadata](../../../../docs/framework/wcf/feature-details/metadata.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Import Custom WSDL<ept id=\"p1\">](../../../../docs/framework/wcf/extending/how-to-import-custom-wsdl.md)</ept>","pos":[6350,6450],"source":" [How to: Import Custom WSDL](../../../../docs/framework/wcf/extending/how-to-import-custom-wsdl.md)"}]}