<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e2b9e59e39821c2aa7d4390881554f95bd91ea6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\tools\tlbimp-exe-type-library-importer.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfe6bddf8f30aa01328ebfdd588d3665da178b22</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b99b2dc17ba8f5cf7c88ac5c928c13aba8616cf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Tlbimp.exe (Type Library Importer) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Tlbimp.exe (Type Library Importer)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Type Library Importer converts the type definitions found within a COM type library into equivalent definitions in a common language runtime assembly.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The output of Tlbimp.exe is a binary file (an assembly) that contains runtime metadata for the types defined within the original type library.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can examine this file with tools such as <bpt id="p1">[</bpt>Ildasm.exe<ept id="p1">](../../../docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This tool is automatically installed with Visual Studio.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To run the tool, use the Developer Command Prompt (or the Visual Studio Command Prompt in Windows 7).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Command Prompts<ept id="p1">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>At the command prompt, type the following:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Argument</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>tlbFile<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of any file that contains a COM type library.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/asmversion:<ept id="p1">**</ept> <bpt id="p2">*</bpt>versionnumber<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Specifies the version number of the assembly to produce.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Specify <bpt id="p1">*</bpt>versionnumber<ept id="p1">*</ept> in the format <bpt id="p2">*</bpt>major.minor.build.revision<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/company:<ept id="p1">**</ept> <ph id="ph1">`companyinformation`</ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adds company information to the output assembly.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/copyright:<ept id="p1">**</ept> <ph id="ph1">`copyrightinformation`</ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Adds copyright information to the output assembly.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This information can be viewed in the <bpt id="p1">**</bpt>File Properties<ept id="p1">**</ept> dialog box for the assembly.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/delaysign<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Specifies to Tlbimp.exe to sign the resulting assembly with a strong name using delayed signing.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You must specify this option with either the <bpt id="p1">**</bpt>/keycontainer:<ept id="p1">**</ept>, <bpt id="p2">**</bpt>/keyfile:<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>/publickey:<ept id="p3">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information on the delayed signing process, see <bpt id="p1">[</bpt>Delay Signing an Assembly<ept id="p1">](../../../docs/framework/app-domains/delay-sign-assembly.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/help<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Displays command syntax and options for the tool.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/keycontainer:<ept id="p1">**</ept> <bpt id="p2">*</bpt>containername<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Signs the resulting assembly with a strong name using the public/private key pair found in the key container specified by <bpt id="p1">*</bpt>containername<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/keyfile:<ept id="p1">**</ept> <bpt id="p2">*</bpt>filename<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Signs the resulting assembly with a strong name using the publisher's official public/private key pair found in <bpt id="p1">*</bpt>filename<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/machine:<ept id="p1">**</ept> <ph id="ph1">`machinetype`</ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Creates an assembly that targets the specified machine type (microprocessor).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Supported machine types: x86, x64, Itanium, and Agnostic.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/namespace:<ept id="p1">**</ept> <bpt id="p2">*</bpt>namespace<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Specifies the namespace in which to produce the assembly.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/noclassmembers<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Prevents Tlbimp.exe from adding members to classes.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This avoids a potential <ph id="ph1">&lt;xref:System.TypeLoadException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/nologo<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Suppresses the Microsoft startup banner display.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/out:<ept id="p1">**</ept> <bpt id="p2">*</bpt>filename<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifies the name of the output file, assembly, and namespace in which to write the metadata definitions.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> option has no effect on the assembly's namespace if the type library specifies the Interface Definition Language (IDL) custom attribute that explicitly controls the assembly's namespace.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you do not specify this option, Tlbimp.exe writes the metadata to a file with the same name as the actual type library defined within the input file and assigns it a .dll extension.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the output file is the same name as the input file, the tool generates an error to prevent overwriting the type library.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/primary<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Produces a primary interop assembly for the specified type library.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Information is added to the assembly indicating that the publisher of the type library produced the assembly.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>By specifying a primary interop assembly, you differentiate a publisher's assembly from any other assemblies that are created from the type library using Tlbimp.exe.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You should only use the <bpt id="p1">**</bpt>/primary<ept id="p1">**</ept> option if you are the publisher of the type library that you are importing with Tlbimp.exe.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Note that you must sign a primary interop assembly with a <bpt id="p1">[</bpt>strong name<ept id="p1">](../../../docs/framework/app-domains/strong-named-assemblies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Primary Interop Assemblies<ept id="p1">](http://msdn.microsoft.com/en-us/b977a8be-59a0-40a0-a806-b11ffba5c080)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/product:<ept id="p1">**</ept> <ph id="ph1">`productinformation`</ph></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Adds product information to the output assembly.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This information can be viewed in the <bpt id="p1">**</bpt>File Properties<ept id="p1">**</ept> dialog box for the assembly.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/productversion:<ept id="p1">**</ept> <ph id="ph1">`productversioninformation`</ph></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Adds product version information to the output assembly.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>There are no format restrictions.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This information can be viewed in the <bpt id="p1">**</bpt>File Properties<ept id="p1">**</ept> dialog box for the assembly.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/publickey:<ept id="p1">**</ept> <bpt id="p2">*</bpt>filename<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies the file containing the public key to use to sign the resulting assembly.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you specify the <bpt id="p1">**</bpt>/keyfile:<ept id="p1">**</ept> or <bpt id="p2">**</bpt>/keycontainer:<ept id="p2">**</ept> option instead of <bpt id="p3">**</bpt>/publickey:<ept id="p3">**</ept>, Tlbimp.exe generates the public key from the public/private key pair supplied with <bpt id="p4">**</bpt>/keyfile:<ept id="p4">**</ept> or <bpt id="p5">**</bpt>/keycontainer:<ept id="p5">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/publickey:<ept id="p1">**</ept> option supports test key and delay signing scenarios.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The file is in the format generated by Sn.exe.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">**</bpt>-p<ept id="p1">**</ept> option of Sn.exe in <bpt id="p2">[</bpt>Strong Name Tool (Sn.exe)<ept id="p2">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/reference:<ept id="p1">**</ept> <bpt id="p2">*</bpt>filename<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies the assembly file to use to resolve references to types defined outside the current type library.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If you do not specify the <bpt id="p1">**</bpt>/reference<ept id="p1">**</ept> option, Tlbimp.exe automatically recursively imports any external type library that the type library being imported references.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you specify the <bpt id="p1">**</bpt>/reference<ept id="p1">**</ept> option, the tool attempts to resolve external types in the referenced assemblies before it imports other type libraries.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/silence:<ept id="p1">**</ept> <ph id="ph1">`warningnumber`</ph></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Suppresses the display of the specified warning.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This option cannot be used with <bpt id="p1">**</bpt>/silent<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/silent<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Suppresses the display of success messages.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This option cannot be used with <bpt id="p1">**</bpt>/silence<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/strictref<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Does not import a type library if the tool cannot resolve all references within the current assembly, the assemblies specified with the <bpt id="p1">**</bpt>/reference<ept id="p1">**</ept> option, or registered primary interop assemblies (PIAs).</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/strictref:nopia<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Same as <bpt id="p1">**</bpt>/strictref<ept id="p1">**</ept>, but ignores PIAs.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/sysarray<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Specifies to the tool to import a COM style SafeArray as a managed <ph id="ph1">&lt;xref:System.Array&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/tlbreference:<ept id="p1">**</ept> <bpt id="p2">*</bpt>filename<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Specifies the type library file to use to resolve type library references without consulting the registry.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Note that this option will not load some older type library formats.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>However, you can still load older type library formats implicitly through the registry or current directory.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/trademark:<ept id="p1">**</ept> <ph id="ph1">`trademarkinformation`</ph></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Adds trademark information to the output assembly.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This information can be viewed in the <bpt id="p1">**</bpt>File Properties<ept id="p1">**</ept> dialog box for the assembly.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/transform:<ept id="p1">**</ept> <bpt id="p2">*</bpt>transformname<ept id="p2">*</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Transforms metadata as specified by the <bpt id="p1">*</bpt>transformname<ept id="p1">*</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specify <bpt id="p1">**</bpt>dispret<ept id="p1">**</ept> for the <bpt id="p2">*</bpt>transformname<ept id="p2">*</ept> parameter to transform [out, retval] parameters of methods on dispatch-only interfaces (dispinterfaces) into return values.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more information about this option, see the examples later in this topic.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/unsafe<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Produces interfaces without .NET Framework security checks.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Calling a method that is exposed in this way might pose a security risk.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You should not use this option unless you are aware of the risks of exposing such code.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/verbose<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Specifies verbose mode; displays additional information about the imported type library.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/VariantBoolFieldToBool<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Converts <ph id="ph1">`VARIANT_BOOL`</ph> fields in structures to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>/?<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Displays command syntax and options for the tool.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The command-line options for Tlbimp.exe are case-insensitive and can be supplied in any order.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You only need to specify enough of the option to uniquely identify it.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Therefore, <bpt id="p1">**</bpt><ph id="ph1">/n</ph><ept id="p1">**</ept> is equivalent to <bpt id="p2">**</bpt>/nologo<ept id="p2">**</ept> and <bpt id="p3">**</bpt>/ou:<ept id="p3">**</ept> <bpt id="p4">*</bpt>outfile.dll<ept id="p4">*</ept> is equivalent to <bpt id="p5">**</bpt>/out:<ept id="p5">**</ept> <bpt id="p6">*</bpt>outfile.dll<ept id="p6">*</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Tlbimp.exe performs conversions on an entire type library at one time.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You cannot use the tool to generate type information for a subset of the types defined within a single type library.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>It is often useful or necessary to be able to assign <bpt id="p1">[</bpt>strong names<ept id="p1">](../../../docs/framework/app-domains/strong-named-assemblies.md)</ept> to assemblies.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Therefore, Tlbimp.exe includes options for supplying the information necessary to generate strongly named assemblies.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Both the <bpt id="p1">**</bpt>/keyfile:<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/keycontainer:<ept id="p2">**</ept> options sign assemblies with strong names.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Therefore, it is logical to supply only one of these options at a time.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>You can specify multiple reference assemblies by using the <bpt id="p1">**</bpt>/reference<ept id="p1">**</ept> option multiple times.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A resource ID can optionally be appended to a type library file when importing a type library from a module containing multiple type libraries.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Tlbimp.exe is able to locate this file only if it is in the current directory or if you specify the full path.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>See the example later in this topic.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Examples</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The following command generates an assembly with the same name as the type library found in <ph id="ph1">`myTest.tlb`</ph> and with the .dll extension.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following command generates an assembly with the name <ph id="ph1">`myTest.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The following command generates an assembly with the same name as the type library specified by <ph id="ph1">`MyModule.dll\1`</ph> and with the .dll extension.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MyModule.dll\1`</ph> must be located in the current directory.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following command generates an assembly with the name <ph id="ph1">`myTestLib.dll`</ph> for the type library <ph id="ph2">`TestLib.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/transform:dispret<ept id="p1">**</ept> option transforms any [out, retval] parameters of methods on dispinterfaces in the type library into return values in the managed library.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The type library <ph id="ph1">`TestLib.dll`</ph>, in the preceding example, includes a dispinterface method named <ph id="ph2">`SomeMethod`</ph> that returns void and has an [out, retval] parameter.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The following code is the input type library method signature for <ph id="ph1">`SomeMethod`</ph> in <ph id="ph2">`TestLib.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Specifying the <bpt id="p1">**</bpt>/transform:dispret<ept id="p1">**</ept> option causes Tlbimp.exe to transform the <ph id="ph1">`[out, retval]`</ph> parameter of <ph id="ph2">`SomeMethod`</ph> into a <ph id="ph3">`bool`</ph> return value.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The following is the method signature that Tlbimp.exe produces for <ph id="ph1">`SomeMethod`</ph> in the managed library <ph id="ph2">`myTestLib.dll`</ph> when the <bpt id="p1">**</bpt>/transform:dispret<ept id="p1">**</ept> option is specified.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If you use Tlbimp.exe to produce a managed library for <ph id="ph1">`TestLib.dll`</ph> without specifying the <bpt id="p1">**</bpt>/transform:dispret<ept id="p1">**</ept>, the tool produces the following method signature for <ph id="ph2">`SomeMethod`</ph> in the managed library <ph id="ph3">`myTestLib.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tools<ept id="p1">](../../../docs/framework/tools/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id="p1">](../../../docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Importing a Type Library as an Assembly<ept id="p1">](../../../docs/framework/interop/importing-a-type-library-as-an-assembly.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Library to Assembly Conversion Summary<ept id="p1">](http://msdn.microsoft.com/en-us/bf3f90c5-4770-4ab8-895c-3ba1055cc958)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](../../../docs/framework/tools/ildasm-exe-il-disassembler.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sn.exe (Strong Name Tool)<ept id="p1">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Strong-Named Assemblies<ept id="p1">](../../../docs/framework/app-domains/strong-named-assemblies.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Attributes for Importing Type Libraries into Interop Assemblies<ept id="p1">](http://msdn.microsoft.com/en-us/81e587b8-393f-43e1-9add-c4b05e65cbfd)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Command Prompts<ept id="p1">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>