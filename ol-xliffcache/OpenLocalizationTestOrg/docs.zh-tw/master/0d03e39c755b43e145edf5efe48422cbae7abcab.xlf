<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="rid-catalog.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d03e39c755b43e145edf5efe48422cbae7abcab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\rid-catalog.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44519154ff97d10a9d2db9cc59a2e540eb8d4740</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14391e8a417c74481e695bafc6969389835ce428</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>.NET Core Runtime IDentifier (RID) catalog</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn about the Runtime IDentifier (RID) and how RIDs are used in .NET Core.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET Core RID Catalog</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>RID is short for <bpt id="p1">*</bpt>Runtime IDentifier<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>RID values are used to identify target platforms where the application runs.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>They're used by .NET packages to represent platform-specific assets in NuGet packages.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following values are examples of RIDs: <ph id="ph1">`linux-x64`</ph>, <ph id="ph2">`ubuntu.14.04-x64`</ph>, <ph id="ph3">`win7-x64`</ph>, or <ph id="ph4">`osx.10.12-x64`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For the packages with native dependencies, the RID designates on which platforms the package can be restored.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A single RID can be set in the <ph id="ph1">`&lt;RuntimeIdentifier&gt;`</ph> element of your project file.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Multiple RIDs can be defined as a semicolon-delimited list in the project file's <ph id="ph1">`&lt;RuntimeIdentifiers&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>They're also used via the <ph id="ph1">`--runtime`</ph> option with the following <bpt id="p1">[</bpt>.NET Core CLI commands<ept id="p1">](./tools/index.md)</ept>:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet build<ept id="p1">](./tools/dotnet-build.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet clean<ept id="p1">](./tools/dotnet-clean.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet pack<ept id="p1">](./tools/dotnet-pack.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet publish<ept id="p1">](./tools/dotnet-publish.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet restore<ept id="p1">](./tools/dotnet-restore.md)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet run<ept id="p1">](./tools/dotnet-run.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet store<ept id="p1">](./tools/dotnet-store.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>RIDs that represent concrete operating systems usually follow this pattern: <ph id="ph1">`[os].[version]-[architecture]-[additional qualifiers]`</ph> where:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[os]`</ph> is the operating/platform system moniker.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`ubuntu`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[version]`</ph> is the operating system version in the form of a dot-separated (<ph id="ph2">`.`</ph>) version number.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`15.10`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The version <bpt id="p1">**</bpt>shouldn't<ept id="p1">**</ept> be marketing versions, as they often represent multiple discrete versions of the operating system with varying platform API surface area.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[architecture]`</ph> is the processor architecture.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example: <ph id="ph1">`x86`</ph>, <ph id="ph2">`x64`</ph>, <ph id="ph3">`arm`</ph>, or <ph id="ph4">`arm64`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[additional qualifiers]`</ph> further differentiate different platforms.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example: <ph id="ph1">`aot`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>RID graph</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The RID graph or runtime fallback graph is a list of RIDs that are compatible with each other.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The RIDs are defined in the <bpt id="p1">[</bpt>Microsoft.NETCore.Platforms<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Platforms/)</ept> package.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can see the list of supported RIDs and the RID graph in the <bpt id="p1">[</bpt><bpt id="p2">*</bpt>runtime.json<ept id="p2">*</ept><ept id="p1">](https://github.com/dotnet/corefx/blob/master/pkg/Microsoft.NETCore.Platforms/runtime.json)</ept> file, which is located at the CoreFX repo.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In this file, you can see that all RIDs, except for the base one, contain an <ph id="ph1">`"#import"`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These statements indicate compatible RIDs.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When NuGet restores packages, it tries to find an exact match for the specified runtime.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If an exact match is not found, NuGet walks back the graph until it finds the closest compatible system according to the RID graph.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example is the actual entry for the <ph id="ph1">`osx.10.12-x64`</ph> RID:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The above RID specifies that <ph id="ph1">`osx.10.12-x64`</ph> imports <ph id="ph2">`osx.10.11-x64`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>So, when NuGet restores packages, it tries to find an exact match for  <ph id="ph1">`osx.10.12-x64`</ph> in the package.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If NuGet cannot find the specific runtime, it can restore packages that specify <ph id="ph1">`osx.10.11-x64`</ph> runtimes, for example.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following example shows a slightly bigger RID graph also defined in the <bpt id="p1">*</bpt>runtime.json<ept id="p1">*</ept>  file:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>All RIDs eventually map back to the root <ph id="ph1">`any`</ph> RID.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>There are some considerations about RIDs that you have to keep in mind when working with them:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>RIDs are <bpt id="p1">**</bpt>opaque strings<ept id="p1">**</ept> and should be treated as black boxes.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Don't build RIDs programmatically.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use RIDs that are already defined for the platform.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The RIDs need to be specific, so don't assume anything from the actual RID value.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Using RIDs</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To be able to use RIDs, you have to know which RIDs exist.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>New values are added regularly to the platform.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For the latest and complete version, see the <bpt id="p1">[</bpt>runtime.json<ept id="p1">](https://github.com/dotnet/corefx/blob/master/pkg/Microsoft.NETCore.Platforms/runtime.json)</ept> file on CoreFX repo.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>.NET Core 2.0 SDK introduces the concept of portable RIDs.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>They are new values added to the RID graph that aren't tied to a specific version or OS distribution and are the preferred choice when using .NET Core 2.0 and higher.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>They're particularly useful when dealing with multiple Linux distros since most distribution RIDs are mapped to the portable RIDs.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following list shows a small subset of the most common RIDs used for each OS.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Windows RIDs</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Only common values are listed.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For the latest and complete version, see the <bpt id="p1">[</bpt>runtime.json<ept id="p1">](https://github.com/dotnet/corefx/blob/master/pkg/Microsoft.NETCore.Platforms/runtime.json)</ept> file on CoreFX repo.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Portable (.NET Core 2.0 or later versions)</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Windows 7 / Windows Server 2008 R2</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Windows 8.1 / Windows Server 2012 R2</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Windows 10 / Windows Server 2016</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Prerequisites for .NET Core on Windows<ept id="p1">](windows-prerequisites.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Linux RIDs</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Only common values are listed.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For the latest and complete version, see the <bpt id="p1">[</bpt>runtime.json<ept id="p1">](https://github.com/dotnet/corefx/blob/master/pkg/Microsoft.NETCore.Platforms/runtime.json)</ept> file on CoreFX repo.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Devices running a distribution not listed below may work with one of the Portable RIDs.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, Raspberry Pi devices running a Linux distribution not listed can be targeted with <ph id="ph1">`linux-arm`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Portable (.NET Core 2.0 or later versions)</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`linux-x64`</ph> (Most desktop distributions like CentOS, Debian, Fedora, Ubuntu and derivatives)</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`linux-musl-x64`</ph> (Lightweight distributions using <bpt id="p1">[</bpt>musl<ept id="p1">](https://wiki.musl-libc.org/projects-using-musl.html)</ept> like Alpine Linux)</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`linux-arm`</ph> (Linux distributions running on ARM like Raspberry Pi)</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Red Hat Enterprise Linux</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`rhel-x64`</ph> (Superseded by <ph id="ph2">`linux-x64`</ph> for RHEL above version 6)</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`rhel.6-x64`</ph> (.NET Core 2.0 or later versions)</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Tizen (.NET Core 2.0 or later versions)</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Prerequisites for .NET Core on Linux<ept id="p1">](linux-prerequisites.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>macOS RIDs</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>macOS RIDs use the older "OSX" branding.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Only common values are listed.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For the latest and complete version, see the <bpt id="p1">[</bpt>runtime.json<ept id="p1">](https://github.com/dotnet/corefx/blob/master/pkg/Microsoft.NETCore.Platforms/runtime.json)</ept> file on CoreFX repo.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Portable (.NET Core 2.0 or later versions)</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`osx-x64`</ph> (Minimum OS version is macOS 10.12 Sierra)</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>macOS 10.10  Yosemite</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>macOS 10.11 El Capitan</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>macOS 10.12 Sierra (.NET Core 1.1 or later versions)</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>macOS 10.13 High Sierra (.NET Core 1.1 or later versions)</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>macOS 10.14 Mojave (.NET Core 1.1 or later versions)</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Prerequisites for .NET Core on macOS<ept id="p1">](macos-prerequisites.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Runtime IDs<ept id="p1">](https://github.com/dotnet/corefx/blob/master/pkg/Microsoft.NETCore.Platforms/readme.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>