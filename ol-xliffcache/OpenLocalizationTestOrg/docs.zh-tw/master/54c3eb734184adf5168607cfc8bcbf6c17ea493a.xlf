<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-pad-a-number-with-leading-zeros.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54c3eb734184adf5168607cfc8bcbf6c17ea493a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\how-to-pad-a-number-with-leading-zeros.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11662bac58c748ebede12b10df4caf53110fa807</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f2e76d678c1ca5494a57f828ebfa1cf2b05c237</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Pad a Number with Leading Zeros</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Pad a Number with Leading Zeros</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can add leading zeros to an integer by using the "D" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](../../../docs/standard/base-types/standard-numeric-format-strings.md)</ept> with a precision specifier.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can add leading zeros to both integer and floating-point numbers by using a <bpt id="p1">[</bpt>custom numeric format string<ept id="p1">](../../../docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article shows how to use both methods to pad a number with leading zeros.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To pad an integer with leading zeros to a specific length</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Determine the minimum number of digits you want the integer value to display.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Include any leading digits in this number.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Determine whether you want to display the integer as a decimal value or a hexadecimal value.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To display the integer as a decimal value, call its <ph id="ph1">`ToString(String)`</ph> method, and pass the string "D<bpt id="p1">*</bpt>n<ept id="p1">*</ept>" as the value of the <ph id="ph2">`format`</ph> parameter, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> represents the minimum length of the string.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To display the integer as a hexadecimal value, call its <ph id="ph1">`ToString(String)`</ph> method and pass the string "X<bpt id="p1">*</bpt>n<ept id="p1">*</ept>" as the value of the format parameter, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> represents the minimum length of the string.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can also use the format string in an interpolated string in both <bpt id="p1">[</bpt>C#<ept id="p1">](../../csharp/language-reference/tokens/interpolated.md)</ept> and <bpt id="p2">[</bpt>Visual Basic<ept id="p2">](../../visual-basic/programming-guide/language-features/strings/interpolated-strings.md)</ept>, or you can call a method, such as <ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>, that uses <bpt id="p3">[</bpt>composite formatting<ept id="p3">](../../../docs/standard/base-types/composite-formatting.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example formats several integer values with leading zeros so that the total length of the formatted number is at least eight characters.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To pad an integer with a specific number of leading zeros</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Determine how many leading zeros you want the integer value to display.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Determine whether you want to display the integer as a decimal value or a hexadecimal value.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Formatting it as a decimal value requires that you use the "D" standard format specifier.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Formatting it as a hexadecimal value requires that you use the "X" standard format specifier.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determine the length of the unpadded numeric string by calling the integer value's <ph id="ph1">`ToString("D").Length`</ph> or <ph id="ph2">`ToString("X").Length`</ph> method.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Add the number of leading zeros that you want to include in the formatted string to the length of the unpadded numeric string.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Adding the number of leading zeros defines the total length of the padded string.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Call the integer value's <ph id="ph1">`ToString(String)`</ph> method, and pass the string "D<bpt id="p1">*</bpt>n<ept id="p1">*</ept>" for decimal strings and "X<bpt id="p2">*</bpt>n<ept id="p2">*</ept>" for hexadecimal strings, where <bpt id="p3">*</bpt>n<ept id="p3">*</ept> represents the total length of the padded string.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also use the "D<bpt id="p1">*</bpt>n<ept id="p1">*</ept>" or "X<bpt id="p2">*</bpt>n<ept id="p2">*</ept>" format string in a method that supports composite formatting.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example pads an integer value with five leading zeros.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To pad a numeric value with leading zeros to a specific length</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Determine how many digits to the left of the decimal you want the string representation of the number to have.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Include any leading zeros in this total number of digits.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Define a custom numeric format string that uses the zero placeholder "0" to represent the minimum number of zeros.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Call the number's <ph id="ph1">`ToString(String)`</ph> method and pass it the custom format string.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can also use the custom format string with string interpolation or with a method that supports composite formatting.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example formats several numeric values with leading zeros.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As a result, the total length of the formatted number is at least eight digits to the left of the decimal.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To pad a numeric value with a specific number of leading zeros</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Determine how many leading zeros you want the numeric value to have.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Determine the number of digits to the left of the decimal in the unpadded numeric string:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Determine whether the string representation of a number includes a decimal point symbol.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If it does include a decimal point symbol, determine the number of characters to the left of the decimal point.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If it doesn't include a decimal point symbol, determine the string's length.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Create a custom format string that uses:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The zero placeholder "0" for each of the leading zeros to appear in the string.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Either the zero placeholder or the digit placeholder "#" to represent each digit in the default string.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Supply the custom format string as a parameter either to the number's <ph id="ph1">`ToString(String)`</ph> method or to a method that supports composite formatting.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following example pads two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values with five leading zeros.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom Numeric Format Strings<ept id="p1">](../../../docs/standard/base-types/custom-numeric-format-strings.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](../../../docs/standard/base-types/standard-numeric-format-strings.md)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../../../docs/standard/base-types/composite-formatting.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>