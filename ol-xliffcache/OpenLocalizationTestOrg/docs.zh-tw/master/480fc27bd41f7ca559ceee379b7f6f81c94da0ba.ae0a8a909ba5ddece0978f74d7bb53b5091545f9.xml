{"content":"---\ntitle: \"ICorDebugDataTarget Interface\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorDebugDataTarget\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugDataTarget\"\nhelpviewer_keywords: \n  - \"ICorDebugDataTarget interface [.NET Framework debugging]\"\nms.assetid: df5f05be-bed7-4f3c-bc89-dbb435d79a0b\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# ICorDebugDataTarget Interface\nProvides a callback interface that provides access to a particular target process.  \n  \n## Methods  \n  \n|Method|Description|  \n|------------|-----------------|  \n|[GetPlatform Method](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-getplatform-method.md)|Provides information about the platform, including processor architecture and operating system, on which the target process is running.|  \n|[ReadVirtual Method](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-readvirtual-method.md)|Gets a block of contiguous memory starting at the specified address, and returns it in the supplied buffer.|  \n|[GetThreadContext Method](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-getthreadcontext-method.md)|Requests the current thread context for the specified thread.|  \n  \n## Remarks  \n `ICorDebugDataTarget` and its methods have the following characteristics:  \n  \n-   The debugging services call methods on this interface to access memory and other data in the target process.  \n  \n-   The debugger client must implement this interface as appropriate for the particular target (for example, a live process or a memory dump).  \n  \n-   The `ICorDebugDataTarget` methods can be invoked only from within methods implemented in other `ICorDebug*` interfaces. This ensures that the debugger client has control over which thread it is invoked on, and when.  \n  \n-   The `ICorDebugDataTarget` implementation must always return up-to-date information about the target.  \n  \n The target process should be stopped and not changed in any way while `ICorDebug*` interfaces (and therefore `ICorDebugDataTarget` methods) are being called. If the target is a live process and its state changes, the [ICLRDebugging::OpenVirtualProcess](../../../../docs/framework/unmanaged-api/debugging/iclrdebugging-openvirtualprocess-method.md) method has to be called again to provide a replacement ICorDebugProcess instance.  \n  \n> [!NOTE]\n>  This interface does not support being called remotely, either cross-machine or cross-process.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]  \n  \n## See also\n\n- [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)\n- [Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)\n","nodes":[{"pos":[4,396],"embed":true,"restype":"x-metadata","content":"title: \"ICorDebugDataTarget Interface\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"ICorDebugDataTarget\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugDataTarget\"\nhelpviewer_keywords: \n  - \"ICorDebugDataTarget interface [.NET Framework debugging]\"\nms.assetid: df5f05be-bed7-4f3c-bc89-dbb435d79a0b\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"ICorDebugDataTarget Interface","nodes":[{"pos":[0,29],"content":"ICorDebugDataTarget Interface","nodes":[{"content":"ICorDebugDataTarget Interface","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[403,432],"content":"ICorDebugDataTarget Interface","linkify":"ICorDebugDataTarget Interface","nodes":[{"content":"ICorDebugDataTarget Interface","pos":[0,29]}]},{"content":"Provides a callback interface that provides access to a particular target process.","pos":[433,515]},{"pos":[524,531],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[538,544]},{"content":"Description","pos":[545,556]},{"pos":[596,710],"content":"<bpt id=\"p1\">[</bpt>GetPlatform Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-getplatform-method.md)</ept>","source":"[GetPlatform Method](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-getplatform-method.md)"},{"content":"Provides information about the platform, including processor architecture and operating system, on which the target process is running.","pos":[711,846]},{"pos":[851,965],"content":"<bpt id=\"p1\">[</bpt>ReadVirtual Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-readvirtual-method.md)</ept>","source":"[ReadVirtual Method](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-readvirtual-method.md)"},{"content":"Gets a block of contiguous memory starting at the specified address, and returns it in the supplied buffer.","pos":[966,1073]},{"pos":[1078,1202],"content":"<bpt id=\"p1\">[</bpt>GetThreadContext Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-getthreadcontext-method.md)</ept>","source":"[GetThreadContext Method](../../../../docs/framework/unmanaged-api/debugging/icordebugdatatarget-getthreadcontext-method.md)"},{"content":"Requests the current thread context for the specified thread.","pos":[1203,1264]},{"pos":[1274,1281],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1285,1358],"content":"<ph id=\"ph1\">`ICorDebugDataTarget`</ph> and its methods have the following characteristics:","source":"`ICorDebugDataTarget` and its methods have the following characteristics:"},{"content":"The debugging services call methods on this interface to access memory and other data in the target process.","pos":[1368,1476]},{"content":"The debugger client must implement this interface as appropriate for the particular target (for example, a live process or a memory dump).","pos":[1486,1624]},{"content":"The <ph id=\"ph1\">`ICorDebugDataTarget`</ph> methods can be invoked only from within methods implemented in other <ph id=\"ph2\">`ICorDebug*`</ph> interfaces.","pos":[1634,1753],"source":"The `ICorDebugDataTarget` methods can be invoked only from within methods implemented in other `ICorDebug*` interfaces."},{"content":"This ensures that the debugger client has control over which thread it is invoked on, and when.","pos":[1754,1849]},{"pos":[1859,1959],"content":"The <ph id=\"ph1\">`ICorDebugDataTarget`</ph> implementation must always return up-to-date information about the target.","source":"The `ICorDebugDataTarget` implementation must always return up-to-date information about the target."},{"content":"The target process should be stopped and not changed in any way while <ph id=\"ph1\">`ICorDebug*`</ph> interfaces (and therefore <ph id=\"ph2\">`ICorDebugDataTarget`</ph> methods) are being called.","pos":[1966,2123],"source":"The target process should be stopped and not changed in any way while `ICorDebug*` interfaces (and therefore `ICorDebugDataTarget` methods) are being called."},{"content":"If the target is a live process and its state changes, the <bpt id=\"p1\">[</bpt>ICLRDebugging::OpenVirtualProcess<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/iclrdebugging-openvirtualprocess-method.md)</ept> method has to be called again to provide a replacement ICorDebugProcess instance.","pos":[2124,2395],"source":" If the target is a live process and its state changes, the [ICLRDebugging::OpenVirtualProcess](../../../../docs/framework/unmanaged-api/debugging/iclrdebugging-openvirtualprocess-method.md) method has to be called again to provide a replacement ICorDebugProcess instance."},{"pos":[2403,2507],"content":"[!NOTE]\n This interface does not support being called remotely, either cross-machine or cross-process.","leadings":["","> "],"nodes":[{"content":"This interface does not support being called remotely, either cross-machine or cross-process.","pos":[9,102]}]},{"pos":[2516,2528],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2532,2636],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2643,2679],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2686,2711],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2718,2826],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v40plus](../../../../includes/net-current-v40plus-md.md)]"},{"pos":[2835,2843],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2847,2945],"content":"<bpt id=\"p1\">[</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept>","source":"[Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)"},{"pos":[2948,3020],"content":"<bpt id=\"p1\">[</bpt>Debugging<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/index.md)</ept>","source":"[Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)"}]}