<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfd7453e2fb5b9270c147b52a9ca434f17d4e204</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\best-practices-for-scaling-the-windows-forms-datagridview-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22e28004e300a49caac8e5a9d688bbfed7c30bd7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d38f2d2874216c354c2d282ac0841e05fa900b3b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Best Practices for Scaling the Windows Forms DataGridView Control | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Best Practices for Scaling the Windows Forms DataGridView Control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is designed to provide maximum scalability.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you need to display large amounts of data, you should follow the guidelines described in this topic to avoid consuming large amounts of memory or degrading the responsiveness of the user interface (UI).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic discusses the following issues:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using cell styles efficiently</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Using shortcut menus efficiently</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Using automatic resizing efficiently</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Using the selected cells, rows, and columns collections efficiently</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using shared rows</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Preventing rows from becoming unshared</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you have special performance needs, you can implement virtual mode and provide your own data management operations.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Data Display Modes in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Using Cell Styles Efficiently</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Each cell, row, and column can have its own style information.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Style information is stored in <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating cell style objects for many individual <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> elements can be inefficient, especially when working with large amounts of data.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To avoid a performance impact, use the following guidelines:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Avoid setting cell style properties for individual <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This includes the row object specified by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowTemplate%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each new row that is cloned from the row template will receive its own copy of the template's cell style object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For maximum scalability, set cell style properties at the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> level.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=fullName&gt;</ph> property rather than the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If some cells require formatting other than default formatting, use the same <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> instance across groups of cells, rows, or columns.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Avoid directly setting properties of type <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> on individual cells, rows, and columns.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For an example of cell style sharing, see <bpt id="p1">[</bpt>How to: Set Default Cell Styles for the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-set-default-cell-styles-for-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also avoid a performance penalty when setting cell styles individually by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Customize Data Formatting in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When determining a cell's style, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A?displayProperty=fullName&gt;</ph> property rather than the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Accessing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A&gt;</ph> property creates a new instance of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class if the property has not already been used.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Additionally, this object might not contain the complete style information for the cell if some styles are inherited from the row, column, or control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Using Shortcut Menus Efficiently</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Each cell, row, and column can have its own shortcut menu.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Shortcut menus in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control are represented by <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Just as with cell style objects, creating shortcut menus for many individual <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> elements will negatively impact performance.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To avoid this penalty, use the following guidelines:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Avoid creating shortcut menus for individual cells and rows.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This includes the row template, which is cloned along with its shortcut menu when new rows are added to the control.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For maximum scalability, use only the control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> property to specify a single shortcut menu for the entire control.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you require multiple shortcut menus for multiple rows or cells, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>These events let you manage the shortcut menu objects yourself, allowing you to tune performance.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Using Automatic Resizing Efficiently</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Rows, columns, and headers can be automatically resized as cell content changes so that the entire contents of cells are displayed without clipping.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Changing sizing modes can also resize rows, columns, and headers.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To determine the correct size, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control must examine the value of each cell that it must accommodate.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When working with large data sets, this analysis can negatively impact the performance of the control when automatic resizing occurs.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To avoid performance penalties, use the following guidelines:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Avoid using automatic sizing on a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control with a large set of rows.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you do use automatic sizing, only resize based on the displayed rows.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Use only the displayed rows in virtual mode as well.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For rows and columns, use the <ph id="ph1">`DisplayedCells`</ph> or <ph id="ph2">`DisplayedCellsExceptHeaders`</ph> field of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewAutoSizeRowsMode&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewAutoSizeColumnMode&gt;</ph> enumerations.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For row headers, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&gt;</ph> field of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For maximum scalability, turn off automatic sizing and use programmatic resizing.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Using the Selected Cells, Rows, and Columns Collections Efficiently</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> collection does not perform efficiently with large selections.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectedColumns%2A&gt;</ph> collections can also be inefficient, although to a lesser degree because there are many fewer rows than cells in a typical <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, and many fewer columns than rows.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To avoid performance penalties when working with these collections, use the following guidelines:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To determine whether all the cells in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> have been selected before you access the contents of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> collection, check the return value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AreAllCellsSelected%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Note, however, that this method can cause rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For more information, see the next section.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Avoid using the <ph id="ph1">&lt;xref:System.Collections.ICollection.Count%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectedCellCollection?displayProperty=fullName&gt;</ph> to determine the number of selected cells.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Instead, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetCellCount%2A?displayProperty=fullName&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewElementStates?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Similarly, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnCount%2A?displayProperty=fullName&gt;</ph> methods to determine the number of selected elements, rather than accessing the selected row and column collections.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Avoid cell-based selection modes.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Instead, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Using Shared Rows</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Efficient memory use is achieved in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control through shared rows.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Rows will share as much information about their appearance and behavior as possible by sharing instances of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>While sharing row instances saves memory, rows can easily become unshared.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, whenever a user interacts directly with a cell, its row becomes unshared.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Because this cannot be avoided, the guidelines in this topic are useful only when working with very large amounts of data and only when users will interact with a relatively small part of the data each time your program is run.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A row cannot be shared in an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control if any of its cells contain values.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is bound to an external data source or when you implement virtual mode and provide your own data source, the cell values are stored outside the control rather than in cell objects, allowing the rows to be shared.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A row object can only be shared if the state of all its cells can be determined from the state of the row and the states of the columns containing the cells.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If you change the state of a cell so that it can no longer be deduced from the state of its row and column, the row cannot be shared.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For example, a row cannot be shared in any of the following situations:</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The row contains a single selected cell that is not in a selected column.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The row contains a cell with its <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> properties set.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The row contains a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxCell&gt;</ph> with its <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewComboBoxCell.Items%2A&gt;</ph> property set.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In bound mode or virtual mode, you can provide ToolTips and shortcut menus for individual cells by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control will automatically attempt to use shared rows whenever rows are added to the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Use the following guidelines to ensure that rows are shared:</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Avoid calling the <ph id="ph1">`Add(Object[])`</ph> overload of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Add%2A&gt;</ph> method and the <ph id="ph3">`Insert(Object[])`</ph> overload of the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Insert%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>These overloads automatically create unshared rows.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Be sure that the row specified in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=fullName&gt;</ph> property can be shared in the following cases:</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When calling the <ph id="ph1">`Add()`</ph> or <ph id="ph2">`Add(Int32)`</ph> overloads of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Add%2A&gt;</ph> method or the <ph id="ph4">`Insert(Int32,Int32)`</ph> overload of the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Insert%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When increasing the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Be sure that the row indicated by the <ph id="ph1">`indexSource`</ph> parameter can be shared when calling the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A&gt;</ph> methods of the <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Be sure that the specified row or rows can be shared when calling the <ph id="ph1">`Add(DataGridViewRow)`</ph> overload of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Add%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.AddRange%2A&gt;</ph> method, the <ph id="ph4">`Insert(Int32,DataGridViewRow)`</ph> overload of the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Insert%2A&gt;</ph> method, and the <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.InsertRange%2A&gt;</ph> method of the <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To determine whether a row is shared, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.SharedRow%2A?displayProperty=fullName&gt;</ph> method to retrieve the row object, and then check the object's <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Index%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Shared rows always have an <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewBand.Index%2A&gt;</ph> property value of –1.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Preventing Rows from Becoming Unshared</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Shared rows can become unshared as a result of code or user action.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To avoid a performance impact, you should avoid causing rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>During application development, you can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowUnshared&gt;</ph> event to determine when rows become unshared.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This is useful when debugging row-sharing problems.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To prevent rows from becoming unshared, use the following guidelines:</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Avoid indexing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection or iterating through it with a <ph id="ph2">`foreach`</ph> loop.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You will not typically need to access rows directly.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> methods that operate on rows take row index arguments rather than row instances.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Additionally, handlers for row-related events receive event argument objects with row properties that you can use to manipulate rows without causing them to become unshared.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If you need to access a row object, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.SharedRow%2A?displayProperty=fullName&gt;</ph> method and pass in the row's actual index.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Note, however, that modifying a shared row object retrieved through this method will modify all the rows that share this object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The row for new records is not shared with other rows, however, so it will not be affected when you modify any other row.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Note also that different rows represented by a shared row may have different shortcut menus.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To retrieve the correct shortcut menu from a shared row instance, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A&gt;</ph> method and pass in the row's actual index.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If you access the shared row's <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property instead, it will use the shared row index of -1 and will not retrieve the correct shortcut menu.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Avoid indexing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=fullName&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Accessing a cell directly will cause its parent row to become unshared, instantiating a new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Handlers for cell-related events receive event argument objects with cell properties that you can use to manipulate cells without causing rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A&gt;</ph> property to retrieve the row and column indexes of the current cell without accessing the cell directly.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Avoid cell-based selection modes.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>These modes cause rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Instead, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Do not handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.CollectionChanged?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowStateChanged?displayProperty=fullName&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>These events cause rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Also, do not call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.OnCollectionChanged%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.OnRowStateChanged%2A?displayProperty=fullName&gt;</ph> methods, which raise these events.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Do not access the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A?displayProperty=fullName&gt;</ph> collection when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt;</ph> property value is <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This causes all selected rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AreAllCellsSelected%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This method can cause rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectAll%2A?displayProperty=fullName&gt;</ph> method when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName&gt;</ph> property value is <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This causes all rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Do not set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Selected%2A&gt;</ph> property of a cell to <ph id="ph3">`false`</ph> when the corresponding property in its column is set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This causes all rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Do not access the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.List%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This causes all rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Do not call the <ph id="ph1">`Sort(IComparer)`</ph> overload of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Sorting with a custom comparer causes all rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Performance Tuning in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/performance-tuning-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Display Modes in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Set Default Cell Styles for the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/how-to-set-default-cell-styles-for-the-windows-forms-datagridview-control.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](../../../../docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>