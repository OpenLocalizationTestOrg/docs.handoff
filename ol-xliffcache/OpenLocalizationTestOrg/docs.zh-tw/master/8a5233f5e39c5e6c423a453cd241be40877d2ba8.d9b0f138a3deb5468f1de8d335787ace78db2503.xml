{"content":"---\ntitle: \"How to: Log Exceptions in Visual Basic | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"exceptions, logging\"\n  - \"exceptions, tracking\"\nms.assetid: a26c60e2-ae39-444a-aebb-33eccadc0eeb\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Log Exceptions in Visual Basic\nYou can use the `My.Application.Log` and `My.Log` objects to log information about exceptions that occur in your application. These examples show how to use the `My.Application.Log.WriteException` method to log exceptions that you catch explicitly and exceptions that are unhandled.  \n  \n For logging tracing information, use the `My.Application.Log.WriteEntry` method. For more information, see <xref:Microsoft.VisualBasic.Logging.Log.WriteEntry%2A>  \n  \n### To log a handled exception  \n  \n1.  Create the method that will generate the exception information.  \n  \n     [!code-vb[VbVbalrMyApplicationLog#9](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_1.vb)]  \n  \n2.  Use a `Try...Catch` block to catch the exception.  \n  \n     [!code-vb[VbVbalrMyApplicationLog#6](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_2.vb)]  \n  \n3.  Put the code that could generate an exception in the `Try` block.  \n  \n     Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.  \n  \n     [!code-vb[VbVbalrMyApplicationLog#7](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_3.vb)]  \n  \n4.  In the `Catch` block, use the `My.Application.Log.WriteException` method to write the exception information.  \n  \n     [!code-vb[VbVbalrMyApplicationLog#8](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_4.vb)]  \n  \n     The following example shows the complete code for logging a handled exception.  \n  \n     [!code-vb[VbVbalrMyApplicationLog#10](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_5.vb)]  \n  \n### To log an unhandled exception  \n  \n1.  Have a project selected in **Solution Explorer**. On the **Project** menu, choose **Properties**.  \n  \n2.  Click the **Application** tab.  \n  \n3.  Click the **View Application Events** button to open the Code Editor.  \n  \n     This opens the ApplicationEvents.vb file.  \n  \n4.  Have the ApplicationEvents.vb file open in the Code Editor. On the **General** menu, choose **MyApplication Events**.  \n  \n5.  On the **Declarations** menu, choose **UnhandledException**.  \n  \n     The application raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> event before the main application runs.  \n  \n6.  Add the `My.Application.Log.WriteException` method to the `UnhandledException` event handler.  \n  \n     [!code-vb[VbVbalrMyApplicationLog#4](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_6.vb)]  \n  \n     The following example shows the complete code for logging an unhandled exception.  \n  \n     [!code-vb[VbVbalrMyApplicationLog#5](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_7.vb)]  \n  \n## See Also  \n <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>   \n <xref:Microsoft.VisualBasic.Logging.Log.WriteEntry%2A>   \n <xref:Microsoft.VisualBasic.Logging.Log.WriteException%2A>   \n [Working with Application Logs](../../../../visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)   \n [How to: Write Log Messages](../../../../visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)   \n [Walkthrough: Determining Where My.Application.Log Writes Information](../../../../visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)   \n [Walkthrough: Changing Where My.Application.Log Writes Information](../../../../visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)","nodes":[{"pos":[12,67],"content":"How to: Log Exceptions in Visual Basic | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Log Exceptions in Visual Basic | Microsoft Docs","pos":[0,55]}]},{"pos":[615,653],"content":"How to: Log Exceptions in Visual Basic","linkify":"How to: Log Exceptions in Visual Basic","nodes":[{"content":"How to: Log Exceptions in Visual Basic","pos":[0,38]}]},{"content":"You can use the <ph id=\"ph1\">`My.Application.Log`</ph> and <ph id=\"ph2\">`My.Log`</ph> objects to log information about exceptions that occur in your application.","pos":[654,779],"source":"You can use the `My.Application.Log` and `My.Log` objects to log information about exceptions that occur in your application."},{"content":"These examples show how to use the <ph id=\"ph1\">`My.Application.Log.WriteException`</ph> method to log exceptions that you catch explicitly and exceptions that are unhandled.","pos":[780,936],"source":" These examples show how to use the `My.Application.Log.WriteException` method to log exceptions that you catch explicitly and exceptions that are unhandled."},{"content":"For logging tracing information, use the <ph id=\"ph1\">`My.Application.Log.WriteEntry`</ph> method.","pos":[943,1023],"source":"For logging tracing information, use the `My.Application.Log.WriteEntry` method."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Logging.Log.WriteEntry%2A&gt;</ph>","pos":[1024,1104],"source":" For more information, see <xref:Microsoft.VisualBasic.Logging.Log.WriteEntry%2A>"},{"pos":[1114,1140],"content":"To log a handled exception","linkify":"To log a handled exception","nodes":[{"content":"To log a handled exception","pos":[0,26]}]},{"content":"Create the method that will generate the exception information.","pos":[1150,1213]},{"pos":[1224,1375],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrMyApplicationLog#9<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrMyApplicationLog#9](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_1.vb)]"},{"pos":[1385,1434],"content":"Use a <ph id=\"ph1\">`Try...Catch`</ph> block to catch the exception.","source":"Use a `Try...Catch` block to catch the exception."},{"pos":[1445,1596],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrMyApplicationLog#6<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_2.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrMyApplicationLog#6](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_2.vb)]"},{"pos":[1606,1671],"content":"Put the code that could generate an exception in the <ph id=\"ph1\">`Try`</ph> block.","source":"Put the code that could generate an exception in the `Try` block."},{"pos":[1682,1779],"content":"Uncomment the <ph id=\"ph1\">`Dim`</ph> and <ph id=\"ph2\">`MsgBox`</ph> lines to cause a <ph id=\"ph3\">&lt;xref:System.NullReferenceException&gt;</ph> exception.","source":"Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception."},{"pos":[1790,1941],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrMyApplicationLog#7<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_3.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrMyApplicationLog#7](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_3.vb)]"},{"pos":[1951,2059],"content":"In the <ph id=\"ph1\">`Catch`</ph> block, use the <ph id=\"ph2\">`My.Application.Log.WriteException`</ph> method to write the exception information.","source":"In the `Catch` block, use the `My.Application.Log.WriteException` method to write the exception information."},{"pos":[2070,2221],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrMyApplicationLog#8<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_4.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrMyApplicationLog#8](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_4.vb)]"},{"content":"The following example shows the complete code for logging a handled exception.","pos":[2232,2310]},{"pos":[2321,2473],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrMyApplicationLog#10<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_5.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrMyApplicationLog#10](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_5.vb)]"},{"pos":[2483,2512],"content":"To log an unhandled exception","linkify":"To log an unhandled exception","nodes":[{"content":"To log an unhandled exception","pos":[0,29]}]},{"content":"Have a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>.","pos":[2522,2571],"source":"Have a project selected in **Solution Explorer**."},{"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept>.","pos":[2572,2619],"source":" On the **Project** menu, choose **Properties**."},{"pos":[2629,2659],"content":"Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","source":"Click the **Application** tab."},{"pos":[2669,2738],"content":"Click the <bpt id=\"p1\">**</bpt>View Application Events<ept id=\"p1\">**</ept> button to open the Code Editor.","source":"Click the **View Application Events** button to open the Code Editor."},{"content":"This opens the ApplicationEvents.vb file.","pos":[2749,2790]},{"content":"Have the ApplicationEvents.vb file open in the Code Editor.","pos":[2800,2859]},{"content":"On the <bpt id=\"p1\">**</bpt>General<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>MyApplication Events<ept id=\"p2\">**</ept>.","pos":[2860,2917],"source":" On the **General** menu, choose **MyApplication Events**."},{"pos":[2927,2987],"content":"On the <bpt id=\"p1\">**</bpt>Declarations<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>UnhandledException<ept id=\"p2\">**</ept>.","source":"On the **Declarations** menu, choose **UnhandledException**."},{"content":"The application raises the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&gt;</ph> event before the main application runs.","pos":[2998,3160],"source":"The application raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> event before the main application runs."},{"pos":[3170,3263],"content":"Add the <ph id=\"ph1\">`My.Application.Log.WriteException`</ph> method to the <ph id=\"ph2\">`UnhandledException`</ph> event handler.","source":"Add the `My.Application.Log.WriteException` method to the `UnhandledException` event handler."},{"pos":[3274,3425],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrMyApplicationLog#4<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_6.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrMyApplicationLog#4](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_6.vb)]"},{"content":"The following example shows the complete code for logging an unhandled exception.","pos":[3436,3517]},{"pos":[3528,3679],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrMyApplicationLog#5<ept id=\"p2\">](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_7.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrMyApplicationLog#5](../../../../visual-basic/developing-apps/programming/log-info/codesnippet/VisualBasic/how-to-log-exceptions_7.vb)]"},{"pos":[3688,3696],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>Working with Application Logs<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept><ph id=\"ph1\"> </ph>","pos":[3891,4020],"source":" [Working with Application Logs](../../../../visual-basic/developing-apps/programming/log-info/working-with-application-logs.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Write Log Messages<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept><ph id=\"ph1\"> </ph>","pos":[4023,4145],"source":" [How to: Write Log Messages](../../../../visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept><ph id=\"ph1\"> </ph>","pos":[4148,4354],"source":" [Walkthrough: Determining Where My.Application.Log Writes Information](../../../../visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept>","pos":[4357,4556],"source":" [Walkthrough: Changing Where My.Application.Log Writes Information](../../../../visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)"}]}