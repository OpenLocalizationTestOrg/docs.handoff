<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-write-text-to-a-file.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a201d48148527291b552e60ef2319086f59d0595</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\io\how-to-write-text-to-a-file.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8423f370d14ac186a10493dfaf5024878eea3d4e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24cdede01f3d622488af26beb9aed4e205471b86</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Write Text to a File | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Write Text to a File</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows different ways you can write text to a file for .NET Framework applications or <ph id="ph1">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> apps.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following classes and methods are typically used to write text to a file:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> - it contains methods to write to a file synchronously (<ph id="ph2">&lt;xref:System.IO.StreamWriter.Write%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>) or asynchronously (<ph id="ph4">&lt;xref:System.IO.StreamWriter.WriteAsync%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.File&gt;</ph> â€“ to be used with .NET Framework applications.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It provides static methods to write text to a file such as <ph id="ph1">&lt;xref:System.IO.File.WriteAllLines%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.File.WriteAllText%2A&gt;</ph>, or to append text to a file (<ph id="ph3">&lt;xref:System.IO.File.AppendAllLines%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.File.AppendAllText%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.IO.File.AppendText%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>FileIO<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.aspx)</ept> - to be used with <ph id="ph1">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> apps.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It contains asynchronous methods to write text to a file (<bpt id="p1">[</bpt>WriteLinesAsync<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.writelinesasync.aspx)</ept> or <bpt id="p2">[</bpt>WriteTextAsync<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.writetextasync.aspx)</ept>) or to append text to a file (<bpt id="p3">[</bpt>AppendLinesAsync<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.appendlinesasync.aspx)</ept> or <bpt id="p4">[</bpt>AppendTextAsync<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/windows.storage.fileio.appendtextasync.aspx)</ept>).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The samples have been kept simple in order to focus on the task being performed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For this reason, the samples perform minimal error checking and exception handling, if any.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A real-world application generally provides more robust error checking and exception handling.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following example shows how to synchronously write text to a new file using the <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> class, one line at a time.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The new text file is saved to the user's My Documents folder.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object is declared and instantiated in a <ph id="ph2">`using`</ph> statement, the <ph id="ph3">&lt;xref:System.IO.StreamWriter.Dispose%2A&gt;</ph> method is invoked which automatically flushes and closes the stream.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following example shows how to append text to an existing file using the <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It uses the same text file from the previous example.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example shows how to asynchronously write text to a new file using the <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In order to invoke the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%2A&gt;</ph> method, the method call needs to be within an <ph id="ph2">`async`</ph> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The new text file is saved to the user's My Documents folder.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following example shows how to write text to a new file and append new lines of text to the same file using the <ph id="ph1">&lt;xref:System.IO.File&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.IO.File.WriteAllText%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.File.AppendAllLines%2A&gt;</ph> methods open and close the file automatically.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the path you provide to the <ph id="ph1">&lt;xref:System.IO.File.WriteAllText%2A&gt;</ph> method already exists, the file will be overwritten.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example shows how to asynchronously write user input to a text file in a <ph id="ph1">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> app.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Because of security considerations, opening a file from a <ph id="ph1">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> app typically requires the use of a <bpt id="p1">[</bpt>FileOpenPicker<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/windows.storage.pickers.fileopenpicker.aspx)</ept> control.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">`FileOpenPicker`</ph> is filtered to show text files.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.File.CreateText%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Enumerate Directories and Files<ept id="p1">](../../../docs/standard/io/how-to-enumerate-directories-and-files.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](../../../docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](../../../docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](../../../docs/standard/io/how-to-read-text-from-a-file.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>File and Stream I-O<ept id="p1">](../../../docs/standard/io/index.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>