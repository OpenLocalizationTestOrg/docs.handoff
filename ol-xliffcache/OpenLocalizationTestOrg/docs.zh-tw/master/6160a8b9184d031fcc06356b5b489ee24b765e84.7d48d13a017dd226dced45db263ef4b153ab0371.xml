{"content":"---\ntitle: Running selective unit tests\ndescription: How to use a filter expression to run selective unit tests with the dotnet test command in .NET Core.\nauthor: smadala\nms.date: 03/22/2017\nms.custom: seodec18\n---\n\n# Running selective unit tests\n\nWith the `dotnet test` command in .NET Core, you can use a filter expression to run selective tests. This article demonstrates how to filter which test are run. The following examples use `dotnet test`. If you're using `vstest.console.exe`, replace `--filter` with `--testcasefilter:`.\n\n## MSTest\n\n```csharp\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\nnamespace MSTestNamespace\n{\n    [TestClass]\n    public class UnitTest1\n    {\n        [TestCategory(\"CategoryA\")]\n        [Priority(1)]\n        [TestMethod]\n        public void TestMethod1()\n        {\n        }\n\n        [Priority(2)]\n        [TestMethod]\n        public void TestMethod2()\n        {\n        }\n    }\n}\n```\n\n| Expression | Result |\n| ---------- | ------ |\n| `dotnet test --filter Method` | Runs tests whose `FullyQualifiedName` contains `Method`. Available in `vstest 15.1+`. |\n| `dotnet test --filter Name~TestMethod1` | Runs tests whose name contains `TestMethod1`. |\n| `dotnet test --filter ClassName=MSTestNamespace.UnitTest1` | Runs tests which are in class `MSTestNamespace.UnitTest1`.<br>**Note:** The `ClassName` value should have a namespace, so `ClassName=UnitTest1` won't work. |\n| `dotnet test --filter FullyQualifiedName!=MSTestNamespace.UnitTest1.TestMethod1` | Runs all tests except `MSTestNamespace.UnitTest1.TestMethod1`. |\n| `dotnet test --filter TestCategory=CategoryA` | Runs tests which are annotated with `[TestCategory(\"CategoryA\")]`. |\n| `dotnet test --filter Priority=2` | Runs tests which are annotated with `[Priority(2)]`.<br>\n\n**Using conditional operators | and &amp;**\n\n| Expression | Result |\n| ---------- | ------ |\n| <code>dotnet test --filter \"FullyQualifiedName~UnitTest1&#124;TestCategory=CategoryA\"</code> | Runs tests which have `UnitTest1` in `FullyQualifiedName` **or** `TestCategory` is `CategoryA`. |\n| `dotnet test --filter \"FullyQualifiedName~UnitTest1&TestCategory=CategoryA\"` | Runs tests which have `UnitTest1` in `FullyQualifiedName` **and** `TestCategory` is `CategoryA`. |\n| <code>dotnet test --filter \"(FullyQualifiedName~UnitTest1&TestCategory=CategoryA)&#124;Priority=1\"</code> | Runs tests which have either `FullyQualifiedName` containing `UnitTest1` **and** `TestCategory` is `CategoryA` **or** `Priority` is 1. |\n\n## xUnit\n\n```csharp\nusing Xunit;\n\nnamespace XUnitNamespace\n{\n    public class TestClass1\n    {\n        [Trait(\"Category\", \"CategoryA\")]\n        [Trait(\"Priority\", \"1\")]\n        [Fact]\n        public void Test1()\n        {\n        }\n\n        [Trait(\"Priority\", \"2\")]\n        [Fact]\n        public void Test2()\n        {\n        }\n    }\n}\n```\n\n| Expression | Result |\n| ---------- | ------ |\n| `dotnet test --filter DisplayName=XUnitNamespace.TestClass1.Test1` | Runs only one test, `XUnitNamespace.TestClass1.Test1`. |\n| `dotnet test --filter FullyQualifiedName!=XUnitNamespace.TestClass1.Test1` | Runs all tests except `XUnitNamespace.TestClass1.Test1`. |\n| `dotnet test --filter DisplayName~TestClass1` | Runs tests whose display name contains `TestClass1`. |\n\nIn the code example, the defined traits with keys `Category` and `Priority` can be used for filtering.\n\n| Expression | Result |\n| ---------- | ------ |\n| `dotnet test --filter XUnit` | Runs tests whose `FullyQualifiedName` contains `XUnit`.  Available in `vstest 15.1+`. |\n| `dotnet test --filter Category=CategoryA` | Runs tests which have `[Trait(\"Category\", \"CategoryA\")]`. |\n\n**Using conditional operators | and &amp;**\n\n| Expression | Result |\n| ---------- | ------ |\n| <code>dotnet test --filter \"FullyQualifiedName~TestClass1&#124;Category=CategoryA\"</code> | Runs tests which has `TestClass1` in `FullyQualifiedName` **or** `Category` is `CategoryA`. |\n| `dotnet test --filter \"FullyQualifiedName~TestClass1&Category=CategoryA\"` | Runs tests which has `TestClass1` in `FullyQualifiedName` **and** `Category` is `CategoryA`. |\n| <code>dotnet test --filter \"(FullyQualifiedName~TestClass1&Category=CategoryA)&#124;Priority=1\"</code> | Runs tests which have either `FullyQualifiedName` containing `TestClass1` **and** `Category` is `CategoryA` **or** `Priority` is 1. |\n\n## NUnit\n\n```csharp\nusing NUnit.Framework;\n\nnamespace NUnitNamespace\n{\n    public class UnitTest1\n    {\n        [Category(\"CategoryA\")]\n        [Property(\"Priority\", 1)]\n        [Test]\n        public void TestMethod1()\n        {\n        }\n\n        [Property(\"Priority\", 2)]\n        [Test]\n        public void TestMethod2()\n        {\n        }\n    }\n}\n```\n\n| Expression | Result |\n| ---------- | ------ |\n| `dotnet test --filter Method` | Runs tests whose `FullyQualifiedName` contains `Method`. Available in `vstest 15.1+`. |\n| `dotnet test --filter Name~TestMethod1` | Runs tests whose name contains `TestMethod1`. |\n| `dotnet test --filter FullyQualifiedName~NUnitNamespace.UnitTest1` | Runs tests which are in class `NUnitNamespace.UnitTest1`.<br>\n| `dotnet test --filter FullyQualifiedName!=NUnitNamespace.UnitTest1.TestMethod1` | Runs all tests except `NUnitNamespace.UnitTest1.TestMethod1`. |\n| `dotnet test --filter TestCategory=CategoryA` | Runs tests which are annotated with `[Category(\"CategoryA\")]`. |\n| `dotnet test --filter Priority=2` | Runs tests which are annotated with `[Priority(2)]`.<br>\n\n**Using conditional operators | and &amp;**\n\n| Expression | Result |\n| ---------- | ------ |\n| <code>dotnet test --filter \"FullyQualifiedName~UnitTest1&#124;TestCategory=CategoryA\"</code> | Runs tests which have `UnitTest1` in `FullyQualifiedName` **or** `TestCategory` is `CategoryA`. |\n| `dotnet test --filter \"FullyQualifiedName~UnitTest1&TestCategory=CategoryA\"` | Runs tests which have `UnitTest1` in `FullyQualifiedName` **and** `TestCategory` is `CategoryA`. |\n| <code>dotnet test --filter \"(FullyQualifiedName~UnitTest1&TestCategory=CategoryA)&#124;Priority=1\"</code> | Runs tests which have either `FullyQualifiedName` containing `UnitTest1` **and** `TestCategory` is `CategoryA` **or** `Priority` is 1. |\n","nodes":[{"pos":[4,210],"embed":true,"restype":"x-metadata","content":"title: Running selective unit tests\ndescription: How to use a filter expression to run selective unit tests with the dotnet test command in .NET Core.\nauthor: smadala\nms.date: 03/22/2017\nms.custom: seodec18","nodes":[{"content":"Running selective unit tests","nodes":[{"pos":[0,28],"content":"Running selective unit tests","nodes":[{"content":"Running selective unit tests","pos":[0,28]}]}],"path":["title"],"nosxs":false},{"content":"How to use a filter expression to run selective unit tests with the dotnet test command in .NET Core.","nodes":[{"pos":[0,101],"content":"How to use a filter expression to run selective unit tests with the dotnet test command in .NET Core.","nodes":[{"content":"How to use a filter expression to run selective unit tests with the dotnet test command in .NET Core.","pos":[0,101]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[218,246],"content":"Running selective unit tests","linkify":"Running selective unit tests","nodes":[{"content":"Running selective unit tests","pos":[0,28]}]},{"content":"With the <ph id=\"ph1\">`dotnet test`</ph> command in .NET Core, you can use a filter expression to run selective tests.","pos":[248,348],"source":"With the `dotnet test` command in .NET Core, you can use a filter expression to run selective tests."},{"content":"This article demonstrates how to filter which test are run.","pos":[349,408]},{"content":"The following examples use <ph id=\"ph1\">`dotnet test`</ph>.","pos":[409,450],"source":" The following examples use `dotnet test`."},{"content":"If you're using <ph id=\"ph1\">`vstest.console.exe`</ph>, replace <ph id=\"ph2\">`--filter`</ph> with <ph id=\"ph3\">`--testcasefilter:`</ph>.","pos":[451,533],"source":" If you're using `vstest.console.exe`, replace `--filter` with `--testcasefilter:`."},{"pos":[538,544],"content":"MSTest","linkify":"MSTest","nodes":[{"content":"MSTest","pos":[0,6]}]},{"content":"Expression","pos":[932,942]},{"content":"Result","pos":[945,951]},{"content":"Runs tests whose <ph id=\"ph1\">`FullyQualifiedName`</ph> contains <ph id=\"ph2\">`Method`</ph>.","pos":[1012,1068],"source":"Runs tests whose `FullyQualifiedName` contains `Method`."},{"content":"Available in <ph id=\"ph1\">`vstest 15.1+`</ph>.","pos":[1069,1097],"source":" Available in `vstest 15.1+`."},{"pos":[1144,1189],"content":"Runs tests whose name contains <ph id=\"ph1\">`TestMethod1`</ph>.","source":"Runs tests whose name contains `TestMethod1`."},{"content":"Runs tests which are in class <ph id=\"ph1\">`MSTestNamespace.UnitTest1`</ph>.","pos":[1255,1313],"source":"Runs tests which are in class `MSTestNamespace.UnitTest1`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> The <ph id=\"ph1\">`ClassName`</ph> value should have a namespace, so <ph id=\"ph2\">`ClassName=UnitTest1`</ph> won't work.","pos":[1317,1410],"source":"**Note:** The `ClassName` value should have a namespace, so `ClassName=UnitTest1` won't work."},{"pos":[1498,1560],"content":"Runs all tests except <ph id=\"ph1\">`MSTestNamespace.UnitTest1.TestMethod1`</ph>.","source":"Runs all tests except `MSTestNamespace.UnitTest1.TestMethod1`."},{"pos":[1613,1679],"content":"Runs tests which are annotated with <ph id=\"ph1\">`[TestCategory(\"CategoryA\")]`</ph>.","source":"Runs tests which are annotated with `[TestCategory(\"CategoryA\")]`."},{"content":"Runs tests which are annotated with <ph id=\"ph1\">`[Priority(2)]`</ph>.","pos":[1720,1772],"source":"Runs tests which are annotated with `[Priority(2)]`."},{"pos":[1778,1821],"content":"<bpt id=\"p1\">**</bpt>Using conditional operators | and <ph id=\"ph1\">&amp;amp;</ph><ept id=\"p1\">**</ept>","source":"**Using conditional operators | and &amp;**"},{"content":"Expression","pos":[1825,1835]},{"content":"Result","pos":[1838,1844]},{"pos":[1968,2063],"content":"Runs tests which have <ph id=\"ph1\">`UnitTest1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>or<ept id=\"p1\">**</ept> <ph id=\"ph3\">`TestCategory`</ph> is <ph id=\"ph4\">`CategoryA`</ph>.","source":"Runs tests which have `UnitTest1` in `FullyQualifiedName` **or** `TestCategory` is `CategoryA`."},{"pos":[2147,2243],"content":"Runs tests which have <ph id=\"ph1\">`UnitTest1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`TestCategory`</ph> is <ph id=\"ph4\">`CategoryA`</ph>.","source":"Runs tests which have `UnitTest1` in `FullyQualifiedName` **and** `TestCategory` is `CategoryA`."},{"pos":[2356,2490],"content":"Runs tests which have either <ph id=\"ph1\">`FullyQualifiedName`</ph> containing <ph id=\"ph2\">`UnitTest1`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`TestCategory`</ph> is <ph id=\"ph4\">`CategoryA`</ph> <bpt id=\"p2\">**</bpt>or<ept id=\"p2\">**</ept> <ph id=\"ph5\">`Priority`</ph> is 1.","source":"Runs tests which have either `FullyQualifiedName` containing `UnitTest1` **and** `TestCategory` is `CategoryA` **or** `Priority` is 1."},{"pos":[2497,2502],"content":"xUnit","linkify":"xUnit","nodes":[{"content":"xUnit","pos":[0,5]}]},{"content":"Expression","pos":[2838,2848]},{"content":"Result","pos":[2851,2857]},{"pos":[2955,3009],"content":"Runs only one test, <ph id=\"ph1\">`XUnitNamespace.TestClass1.Test1`</ph>.","source":"Runs only one test, `XUnitNamespace.TestClass1.Test1`."},{"pos":[3091,3147],"content":"Runs all tests except <ph id=\"ph1\">`XUnitNamespace.TestClass1.Test1`</ph>.","source":"Runs all tests except `XUnitNamespace.TestClass1.Test1`."},{"pos":[3200,3252],"content":"Runs tests whose display name contains <ph id=\"ph1\">`TestClass1`</ph>.","source":"Runs tests whose display name contains `TestClass1`."},{"pos":[3256,3358],"content":"In the code example, the defined traits with keys <ph id=\"ph1\">`Category`</ph> and <ph id=\"ph2\">`Priority`</ph> can be used for filtering.","source":"In the code example, the defined traits with keys `Category` and `Priority` can be used for filtering."},{"content":"Expression","pos":[3362,3372]},{"content":"Result","pos":[3375,3381]},{"content":"Runs tests whose <ph id=\"ph1\">`FullyQualifiedName`</ph> contains <ph id=\"ph2\">`XUnit`</ph>.","pos":[3441,3496],"source":"Runs tests whose `FullyQualifiedName` contains `XUnit`."},{"content":"Available in <ph id=\"ph1\">`vstest 15.1+`</ph>.","pos":[3498,3526],"source":"  Available in `vstest 15.1+`."},{"pos":[3575,3632],"content":"Runs tests which have <ph id=\"ph1\">`[Trait(\"Category\", \"CategoryA\")]`</ph>.","source":"Runs tests which have `[Trait(\"Category\", \"CategoryA\")]`."},{"pos":[3636,3679],"content":"<bpt id=\"p1\">**</bpt>Using conditional operators | and <ph id=\"ph1\">&amp;amp;</ph><ept id=\"p1\">**</ept>","source":"**Using conditional operators | and &amp;**"},{"content":"Expression","pos":[3683,3693]},{"content":"Result","pos":[3696,3702]},{"pos":[3823,3914],"content":"Runs tests which has <ph id=\"ph1\">`TestClass1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>or<ept id=\"p1\">**</ept> <ph id=\"ph3\">`Category`</ph> is <ph id=\"ph4\">`CategoryA`</ph>.","source":"Runs tests which has `TestClass1` in `FullyQualifiedName` **or** `Category` is `CategoryA`."},{"pos":[3995,4087],"content":"Runs tests which has <ph id=\"ph1\">`TestClass1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`Category`</ph> is <ph id=\"ph4\">`CategoryA`</ph>.","source":"Runs tests which has `TestClass1` in `FullyQualifiedName` **and** `Category` is `CategoryA`."},{"pos":[4197,4328],"content":"Runs tests which have either <ph id=\"ph1\">`FullyQualifiedName`</ph> containing <ph id=\"ph2\">`TestClass1`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`Category`</ph> is <ph id=\"ph4\">`CategoryA`</ph> <bpt id=\"p2\">**</bpt>or<ept id=\"p2\">**</ept> <ph id=\"ph5\">`Priority`</ph> is 1.","source":"Runs tests which have either `FullyQualifiedName` containing `TestClass1` **and** `Category` is `CategoryA` **or** `Priority` is 1."},{"pos":[4335,4340],"content":"NUnit","linkify":"NUnit","nodes":[{"content":"NUnit","pos":[0,5]}]},{"content":"Expression","pos":[4690,4700]},{"content":"Result","pos":[4703,4709]},{"content":"Runs tests whose <ph id=\"ph1\">`FullyQualifiedName`</ph> contains <ph id=\"ph2\">`Method`</ph>.","pos":[4770,4826],"source":"Runs tests whose `FullyQualifiedName` contains `Method`."},{"content":"Available in <ph id=\"ph1\">`vstest 15.1+`</ph>.","pos":[4827,4855],"source":" Available in `vstest 15.1+`."},{"pos":[4902,4947],"content":"Runs tests whose name contains <ph id=\"ph1\">`TestMethod1`</ph>.","source":"Runs tests whose name contains `TestMethod1`."},{"content":"Runs tests which are in class <ph id=\"ph1\">`NUnitNamespace.UnitTest1`</ph>.","pos":[5021,5078],"source":"Runs tests which are in class `NUnitNamespace.UnitTest1`."},{"pos":[5167,5228],"content":"Runs all tests except <ph id=\"ph1\">`NUnitNamespace.UnitTest1.TestMethod1`</ph>.","source":"Runs all tests except `NUnitNamespace.UnitTest1.TestMethod1`."},{"pos":[5281,5343],"content":"Runs tests which are annotated with <ph id=\"ph1\">`[Category(\"CategoryA\")]`</ph>.","source":"Runs tests which are annotated with `[Category(\"CategoryA\")]`."},{"content":"Runs tests which are annotated with <ph id=\"ph1\">`[Priority(2)]`</ph>.","pos":[5384,5436],"source":"Runs tests which are annotated with `[Priority(2)]`."},{"pos":[5442,5485],"content":"<bpt id=\"p1\">**</bpt>Using conditional operators | and <ph id=\"ph1\">&amp;amp;</ph><ept id=\"p1\">**</ept>","source":"**Using conditional operators | and &amp;**"},{"content":"Expression","pos":[5489,5499]},{"content":"Result","pos":[5502,5508]},{"pos":[5632,5727],"content":"Runs tests which have <ph id=\"ph1\">`UnitTest1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>or<ept id=\"p1\">**</ept> <ph id=\"ph3\">`TestCategory`</ph> is <ph id=\"ph4\">`CategoryA`</ph>.","source":"Runs tests which have `UnitTest1` in `FullyQualifiedName` **or** `TestCategory` is `CategoryA`."},{"pos":[5811,5907],"content":"Runs tests which have <ph id=\"ph1\">`UnitTest1`</ph> in <ph id=\"ph2\">`FullyQualifiedName`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`TestCategory`</ph> is <ph id=\"ph4\">`CategoryA`</ph>.","source":"Runs tests which have `UnitTest1` in `FullyQualifiedName` **and** `TestCategory` is `CategoryA`."},{"pos":[6020,6154],"content":"Runs tests which have either <ph id=\"ph1\">`FullyQualifiedName`</ph> containing <ph id=\"ph2\">`UnitTest1`</ph> <bpt id=\"p1\">**</bpt>and<ept id=\"p1\">**</ept> <ph id=\"ph3\">`TestCategory`</ph> is <ph id=\"ph4\">`CategoryA`</ph> <bpt id=\"p2\">**</bpt>or<ept id=\"p2\">**</ept> <ph id=\"ph5\">`Priority`</ph> is 1.","source":"Runs tests which have either `FullyQualifiedName` containing `UnitTest1` **and** `TestCategory` is `CategoryA` **or** `Priority` is 1."}]}