{"content":"---\ntitle: \"How to: Control Ordering in a PLINQ Query\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"PLINQ queries, how to control ordering\"\nms.assetid: c67eccc7-004d-4b2f-987e-919cbbd62ef7\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# How to: Control Ordering in a PLINQ Query\nThese examples show how to control the ordering in a PLINQ query by using the <xref:System.Linq.ParallelEnumerable.AsOrdered%2A> extension method.  \n  \n> [!WARNING]\n>  These examples are primarily intended to demonstrate usage, and may or may not run faster than the equivalent sequential LINQ to Objects queries.  \n  \n## Example  \n The following example preserves the ordering of the source sequence. This is sometimes necessary; for example some query operators require an ordered source sequence to produce correct results.  \n  \n [!code-csharp[PLINQ#12](../../../samples/snippets/csharp/VS_Snippets_Misc/plinq/cs/plinqsamples.cs#12)]\n [!code-vb[PLINQ#12](../../../samples/snippets/visualbasic/VS_Snippets_Misc/plinq/vb/plinqsnippets1.vb#12)]  \n  \n## Example  \n The following example shows some query operators whose source sequence is probably expected to be ordered. These operators will work on unordered sequences, but they might produce unexpected results.  \n  \n [!code-csharp[PLINQ#14](../../../samples/snippets/csharp/VS_Snippets_Misc/plinq/cs/plinqsamples.cs#14)]\n [!code-vb[PLINQ#14](../../../samples/snippets/visualbasic/VS_Snippets_Misc/plinq/vb/plinqsnippets1.vb#14)]  \n  \n To run this method, paste it into the PLINQDataSample class in the [PLINQ Data Sample](../../../docs/standard/parallel-programming/plinq-data-sample.md) project and press F5.  \n  \n## Example  \n The following example shows how to preserve ordering for the first part of a query, then remove the ordering to increase the performance of a join clause, and then reapply ordering to the final result sequence.  \n  \n [!code-csharp[PLINQ#15](../../../samples/snippets/csharp/VS_Snippets_Misc/plinq/cs/plinqsamples.cs#15)]\n [!code-vb[PLINQ#15](../../../samples/snippets/visualbasic/VS_Snippets_Misc/plinq/vb/plinqsnippets1.vb#15)]  \n  \n To run this method, paste it into the PLINQDataSample class in the [PLINQ Data Sample](../../../docs/standard/parallel-programming/plinq-data-sample.md) project and press F5.  \n  \n## See also\n\n- <xref:System.Linq.ParallelEnumerable>\n- [Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)\n","nodes":[{"pos":[4,297],"embed":true,"restype":"x-metadata","content":"title: \"How to: Control Ordering in a PLINQ Query\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"PLINQ queries, how to control ordering\"\nms.assetid: c67eccc7-004d-4b2f-987e-919cbbd62ef7\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"How to: Control Ordering in a PLINQ Query","nodes":[{"pos":[0,41],"content":"How to: Control Ordering in a PLINQ Query","nodes":[{"content":"How to: Control Ordering in a PLINQ Query","pos":[0,41]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[304,345],"content":"How to: Control Ordering in a PLINQ Query","linkify":"How to: Control Ordering in a PLINQ Query","nodes":[{"content":"How to: Control Ordering in a PLINQ Query","pos":[0,41]}]},{"pos":[346,492],"content":"These examples show how to control the ordering in a PLINQ query by using the <ph id=\"ph1\">&lt;xref:System.Linq.ParallelEnumerable.AsOrdered%2A&gt;</ph> extension method.","source":"These examples show how to control the ordering in a PLINQ query by using the <xref:System.Linq.ParallelEnumerable.AsOrdered%2A> extension method."},{"pos":[500,659],"content":"[!WARNING]\n These examples are primarily intended to demonstrate usage, and may or may not run faster than the equivalent sequential LINQ to Objects queries.","leadings":["","> "],"nodes":[{"content":"These examples are primarily intended to demonstrate usage, and may or may not run faster than the equivalent sequential LINQ to Objects queries.","pos":[12,157]}]},{"pos":[668,675],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example preserves the ordering of the source sequence.","pos":[679,747]},{"content":"This is sometimes necessary; for example some query operators require an ordered source sequence to produce correct results.","pos":[748,872]},{"pos":[1099,1106],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows some query operators whose source sequence is probably expected to be ordered.","pos":[1110,1216]},{"content":"These operators will work on unordered sequences, but they might produce unexpected results.","pos":[1217,1309]},{"pos":[1534,1708],"content":"To run this method, paste it into the PLINQDataSample class in the <bpt id=\"p1\">[</bpt>PLINQ Data Sample<ept id=\"p1\">](../../../docs/standard/parallel-programming/plinq-data-sample.md)</ept> project and press F5.","source":"To run this method, paste it into the PLINQDataSample class in the [PLINQ Data Sample](../../../docs/standard/parallel-programming/plinq-data-sample.md) project and press F5."},{"pos":[1717,1724],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to preserve ordering for the first part of a query, then remove the ordering to increase the performance of a join clause, and then reapply ordering to the final result sequence.","pos":[1728,1938]},{"pos":[2163,2337],"content":"To run this method, paste it into the PLINQDataSample class in the <bpt id=\"p1\">[</bpt>PLINQ Data Sample<ept id=\"p1\">](../../../docs/standard/parallel-programming/plinq-data-sample.md)</ept> project and press F5.","source":"To run this method, paste it into the PLINQDataSample class in the [PLINQ Data Sample](../../../docs/standard/parallel-programming/plinq-data-sample.md) project and press F5."},{"pos":[2346,2354],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2398,2489],"content":"<bpt id=\"p1\">[</bpt>Parallel LINQ (PLINQ)<ept id=\"p1\">](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>","source":"[Parallel LINQ (PLINQ)](../../../docs/standard/parallel-programming/parallel-linq-plinq.md)"}]}