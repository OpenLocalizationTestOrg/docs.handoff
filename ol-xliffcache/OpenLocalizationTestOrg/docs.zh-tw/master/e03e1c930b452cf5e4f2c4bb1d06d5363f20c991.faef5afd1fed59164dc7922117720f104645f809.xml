{"content":"---\ntitle: \"Operator Keywords - C# Reference\"\nms.custom: seodec18\n\nms.date: 12/10/2018\nhelpviewer_keywords: \n  - \"keywords [C#], operators\"\n  - \"operators [C#], keywords\"\nms.assetid: f745c81f-f8d8-4673-86a1-0f3a85cc63c3\n---\n# Operator Keywords (C# Reference)\n\nUsed to perform miscellaneous actions such as creating objects, checking the run-time type of an object, obtaining the size of a type, and other actions. This section introduces the following keywords:\n\n- [as](as.md) Converts an object to a compatible type.\n\n- [await](await.md) Suspends an [async](async.md) method until an awaited task is completed.\n\n- [is](is.md) Checks the run-time type of an object, or (starting with C# 7.0) tests an expression against a pattern.\n\n- [new](new.md)\n\n  - [new Operator](new-operator.md) Creates objects.\n\n  - [new Modifier](new-modifier.md) Hides an inherited member.\n\n  - [new Constraint](new-constraint.md) Qualifies a type parameter.\n\n- [nameof](nameof.md) Obtains the simple (unqualified) string name of a variable, type, or member.\n\n- [sizeof](sizeof.md) Obtains the size of an unmanaged type.  \n\n- [typeof](typeof.md) Obtains the <xref:System.Type?displayProperty=nameWithType> object for a type.  \n\n- [true](true.md)  \n\n  - [true Operator](true-false-operators.md) Returns the [bool](bool.md) value `true` to indicate that the operand is definitely true.\n\n  - [true Literal](true-literal.md) Represents the [bool](bool.md) value `true`.\n\n- [false](false.md)  \n\n  - [false Operator](true-false-operators.md) Returns the [bool](bool.md) value `true` to indicate that the operand is definitely false.\n\n  - [false Literal](false-literal.md) Represents the [bool](bool.md) value `false`.\n\n- [stackalloc](stackalloc.md) Allocates a block of memory on the stack.  \n\nThe following keywords, which can be used as operators and as statements, are covered in the [Statements](statement-keywords.md) section:\n\n- [checked](checked.md) Specifies checked context.  \n\n- [unchecked](unchecked.md) Specifies unchecked context.  \n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [C# Operators](../operators/index.md)\n","nodes":[{"pos":[4,219],"embed":true,"restype":"x-metadata","content":"title: \"Operator Keywords - C# Reference\"\nms.custom: seodec18\n\nms.date: 12/10/2018\nhelpviewer_keywords: \n  - \"keywords [C#], operators\"\n  - \"operators [C#], keywords\"\nms.assetid: f745c81f-f8d8-4673-86a1-0f3a85cc63c3","nodes":[{"content":"Operator Keywords - C# Reference","nodes":[{"pos":[0,32],"content":"Operator Keywords - C# Reference","nodes":[{"content":"Operator Keywords - C# Reference","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[226,258],"content":"Operator Keywords (C# Reference)","linkify":"Operator Keywords (C# Reference)","nodes":[{"content":"Operator Keywords (C# Reference)","pos":[0,32]}]},{"content":"Used to perform miscellaneous actions such as creating objects, checking the run-time type of an object, obtaining the size of a type, and other actions.","pos":[260,413]},{"content":"This section introduces the following keywords:","pos":[414,461]},{"pos":[465,517],"content":"<bpt id=\"p1\">[</bpt>as<ept id=\"p1\">](as.md)</ept> Converts an object to a compatible type.","source":"[as](as.md) Converts an object to a compatible type."},{"pos":[521,611],"content":"<bpt id=\"p1\">[</bpt>await<ept id=\"p1\">](await.md)</ept> Suspends an <bpt id=\"p2\">[</bpt>async<ept id=\"p2\">](async.md)</ept> method until an awaited task is completed.","source":"[await](await.md) Suspends an [async](async.md) method until an awaited task is completed."},{"pos":[615,730],"content":"<bpt id=\"p1\">[</bpt>is<ept id=\"p1\">](is.md)</ept> Checks the run-time type of an object, or (starting with C# 7.0) tests an expression against a pattern.","source":"[is](is.md) Checks the run-time type of an object, or (starting with C# 7.0) tests an expression against a pattern."},{"pos":[734,747],"content":"<bpt id=\"p1\">[</bpt>new<ept id=\"p1\">](new.md)</ept>","source":"[new](new.md)"},{"pos":[753,801],"content":"<bpt id=\"p1\">[</bpt>new Operator<ept id=\"p1\">](new-operator.md)</ept> Creates objects.","source":"[new Operator](new-operator.md) Creates objects."},{"pos":[807,865],"content":"<bpt id=\"p1\">[</bpt>new Modifier<ept id=\"p1\">](new-modifier.md)</ept> Hides an inherited member.","source":"[new Modifier](new-modifier.md) Hides an inherited member."},{"pos":[871,934],"content":"<bpt id=\"p1\">[</bpt>new Constraint<ept id=\"p1\">](new-constraint.md)</ept> Qualifies a type parameter.","source":"[new Constraint](new-constraint.md) Qualifies a type parameter."},{"pos":[938,1034],"content":"<bpt id=\"p1\">[</bpt>nameof<ept id=\"p1\">](nameof.md)</ept> Obtains the simple (unqualified) string name of a variable, type, or member.","source":"[nameof](nameof.md) Obtains the simple (unqualified) string name of a variable, type, or member."},{"pos":[1038,1096],"content":"<bpt id=\"p1\">[</bpt>sizeof<ept id=\"p1\">](sizeof.md)</ept> Obtains the size of an unmanaged type.","source":"[sizeof](sizeof.md) Obtains the size of an unmanaged type."},{"pos":[1102,1200],"content":"<bpt id=\"p1\">[</bpt>typeof<ept id=\"p1\">](typeof.md)</ept> Obtains the <ph id=\"ph1\">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> object for a type.","source":"[typeof](typeof.md) Obtains the <xref:System.Type?displayProperty=nameWithType> object for a type."},{"pos":[1206,1221],"content":"<bpt id=\"p1\">[</bpt>true<ept id=\"p1\">](true.md)</ept>","source":"[true](true.md)"},{"pos":[1229,1359],"content":"<bpt id=\"p1\">[</bpt>true Operator<ept id=\"p1\">](true-false-operators.md)</ept> Returns the <bpt id=\"p2\">[</bpt>bool<ept id=\"p2\">](bool.md)</ept> value <ph id=\"ph1\">`true`</ph> to indicate that the operand is definitely true.","source":"[true Operator](true-false-operators.md) Returns the [bool](bool.md) value `true` to indicate that the operand is definitely true."},{"pos":[1365,1441],"content":"<bpt id=\"p1\">[</bpt>true Literal<ept id=\"p1\">](true-literal.md)</ept> Represents the <bpt id=\"p2\">[</bpt>bool<ept id=\"p2\">](bool.md)</ept> value <ph id=\"ph1\">`true`</ph>.","source":"[true Literal](true-literal.md) Represents the [bool](bool.md) value `true`."},{"pos":[1445,1462],"content":"<bpt id=\"p1\">[</bpt>false<ept id=\"p1\">](false.md)</ept>","source":"[false](false.md)"},{"pos":[1470,1602],"content":"<bpt id=\"p1\">[</bpt>false Operator<ept id=\"p1\">](true-false-operators.md)</ept> Returns the <bpt id=\"p2\">[</bpt>bool<ept id=\"p2\">](bool.md)</ept> value <ph id=\"ph1\">`true`</ph> to indicate that the operand is definitely false.","source":"[false Operator](true-false-operators.md) Returns the [bool](bool.md) value `true` to indicate that the operand is definitely false."},{"pos":[1608,1687],"content":"<bpt id=\"p1\">[</bpt>false Literal<ept id=\"p1\">](false-literal.md)</ept> Represents the <bpt id=\"p2\">[</bpt>bool<ept id=\"p2\">](bool.md)</ept> value <ph id=\"ph1\">`false`</ph>.","source":"[false Literal](false-literal.md) Represents the [bool](bool.md) value `false`."},{"pos":[1691,1760],"content":"<bpt id=\"p1\">[</bpt>stackalloc<ept id=\"p1\">](stackalloc.md)</ept> Allocates a block of memory on the stack.","source":"[stackalloc](stackalloc.md) Allocates a block of memory on the stack."},{"pos":[1764,1901],"content":"The following keywords, which can be used as operators and as statements, are covered in the <bpt id=\"p1\">[</bpt>Statements<ept id=\"p1\">](statement-keywords.md)</ept> section:","source":"The following keywords, which can be used as operators and as statements, are covered in the [Statements](statement-keywords.md) section:"},{"pos":[1905,1953],"content":"<bpt id=\"p1\">[</bpt>checked<ept id=\"p1\">](checked.md)</ept> Specifies checked context.","source":"[checked](checked.md) Specifies checked context."},{"pos":[1959,2013],"content":"<bpt id=\"p1\">[</bpt>unchecked<ept id=\"p1\">](unchecked.md)</ept> Specifies unchecked context.","source":"[unchecked](unchecked.md) Specifies unchecked context."},{"pos":[2020,2028],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2032,2059],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[2062,2118],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[2121,2144],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[2147,2184],"content":"<bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](../operators/index.md)</ept>","source":"[C# Operators](../operators/index.md)"}]}