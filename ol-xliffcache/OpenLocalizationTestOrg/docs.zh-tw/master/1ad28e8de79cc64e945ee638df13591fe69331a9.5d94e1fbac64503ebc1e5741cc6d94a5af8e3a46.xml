{"content":"---\ntitle: \"How to: Test Whether Two Objects Are the Same (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"variables [Visual Basic], reference\"\n  - \"Is operator [Visual Basic], comparing objects\"\n  - \"reference variables\"\n  - \"variables [Visual Basic], referring to same object\"\n  - \"objects [Visual Basic], variables referring to same\"\n  - \"Visual Basic code, operators\"\nms.assetid: f760e828-8704-4256-bc2d-c22a4c93b524\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Test Whether Two Objects Are the Same (Visual Basic)\nIf you have two variables that refer to objects, you can use either the `Is` or `IsNot` operator, or both, to determine whether they refer to the same instance.  \n  \n### To test whether two objects are the same  \n  \n-   Use the [Is Operator](../../../../visual-basic/language-reference/operators/is-operator.md) or the [IsNot Operator](../../../../visual-basic/language-reference/operators/isnot-operator.md) with the two variables as operands.  \n  \n     [!code-vb[VbVbalrOperators#69](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-test-whether-two-objects-are-the-same_1.vb)]  \n  \n You might want to take a certain action depending on whether two objects refer to the same instance. The preceding example compares control `c` against the active control on form `f`. If there is no active control, or if there is one but it is not the same control instance as `c`, then the `If` statement fails and the procedure returns without further processing.  \n  \n Whether you use `Is` or `IsNot` is a matter of personal convenience to you. One might be easier to read than the other in a given expression.  \n  \n## See Also  \n [Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)","nodes":[{"pos":[4,847],"embed":true,"restype":"x-metadata","content":"title: \"How to: Test Whether Two Objects Are the Same (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"variables [Visual Basic], reference\"\n  - \"Is operator [Visual Basic], comparing objects\"\n  - \"reference variables\"\n  - \"variables [Visual Basic], referring to same object\"\n  - \"objects [Visual Basic], variables referring to same\"\n  - \"Visual Basic code, operators\"\nms.assetid: f760e828-8704-4256-bc2d-c22a4c93b524\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"How to: Test Whether Two Objects Are the Same (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,77],"content":"How to: Test Whether Two Objects Are the Same (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Test Whether Two Objects Are the Same (Visual Basic) | Microsoft Docs","pos":[0,77]}]}],"path":["title"]}],"yml":true},{"pos":[854,914],"content":"How to: Test Whether Two Objects Are the Same (Visual Basic)","linkify":"How to: Test Whether Two Objects Are the Same (Visual Basic)","nodes":[{"content":"How to: Test Whether Two Objects Are the Same (Visual Basic)","pos":[0,60]}]},{"pos":[915,1075],"content":"If you have two variables that refer to objects, you can use either the <ph id=\"ph1\">`Is`</ph> or <ph id=\"ph2\">`IsNot`</ph> operator, or both, to determine whether they refer to the same instance.","source":"If you have two variables that refer to objects, you can use either the `Is` or `IsNot` operator, or both, to determine whether they refer to the same instance."},{"pos":[1085,1125],"content":"To test whether two objects are the same","linkify":"To test whether two objects are the same","nodes":[{"content":"To test whether two objects are the same","pos":[0,40]}]},{"pos":[1135,1359],"content":"Use the <bpt id=\"p1\">[</bpt>Is Operator<ept id=\"p1\">](../../../../visual-basic/language-reference/operators/is-operator.md)</ept> or the <bpt id=\"p2\">[</bpt>IsNot Operator<ept id=\"p2\">](../../../../visual-basic/language-reference/operators/isnot-operator.md)</ept> with the two variables as operands.","source":"Use the [Is Operator](../../../../visual-basic/language-reference/operators/is-operator.md) or the [IsNot Operator](../../../../visual-basic/language-reference/operators/isnot-operator.md) with the two variables as operands."},{"content":"You might want to take a certain action depending on whether two objects refer to the same instance.","pos":[1537,1637]},{"content":"The preceding example compares control <ph id=\"ph1\">`c`</ph> against the active control on form <ph id=\"ph2\">`f`</ph>.","pos":[1638,1720],"source":" The preceding example compares control `c` against the active control on form `f`."},{"content":"If there is no active control, or if there is one but it is not the same control instance as <ph id=\"ph1\">`c`</ph>, then the <ph id=\"ph2\">`If`</ph> statement fails and the procedure returns without further processing.","pos":[1721,1902],"source":" If there is no active control, or if there is one but it is not the same control instance as `c`, then the `If` statement fails and the procedure returns without further processing."},{"content":"Whether you use <ph id=\"ph1\">`Is`</ph> or <ph id=\"ph2\">`IsNot`</ph> is a matter of personal convenience to you.","pos":[1909,1984],"source":"Whether you use `Is` or `IsNot` is a matter of personal convenience to you."},{"content":"One might be easier to read than the other in a given expression.","pos":[1985,2050]},{"pos":[2059,2067],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2071,2221],"content":"<bpt id=\"p1\">[</bpt>Comparison Operators in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)</ept>","source":"[Comparison Operators in Visual Basic](../../../../visual-basic/programming-guide/language-features/operators-and-expressions/comparison-operators.md)"}]}