{"content":"---\ntitle: \"Finding the Default Paragraph Style (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: be102177-8ab0-444a-b671-7023e555ffdb\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\n---\n# Finding the Default Paragraph Style (C#)\nThe first task in the Manipulating Information in a WordprocessingML Document tutorial is to find the default style of paragraphs in the document.  \n  \n## Example  \n  \n### Description  \n The following example opens an Office Open XML WordprocessingML document, finds the document and style parts of the package, and then executes a query that finds the default style name. For information about Office Open XML document packages, and the parts they consist of, see [Details of Office Open XML WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md).  \n  \n The query finds a node named `w:style` that has an attribute named `w:type` with a value of \"paragraph\", and also has an attribute named `w:default` with a value of \"1\". Because there will be only one XML node with these attributes, the query uses the <xref:System.Linq.Enumerable.First%2A?displayProperty=fullName> operator to convert a collection to a singleton. It then gets the value of the attribute with the name `w:styleId`.  \n  \n This example uses classes from the WindowsBase assembly. It uses types in the <xref:System.IO.Packaging?displayProperty=fullName> namespace.  \n  \n### Code  \n  \n```csharp  \nconst string fileName = \"SampleDoc.docx\";  \n  \nconst string documentRelationshipType =  \n  \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\";  \nconst string stylesRelationshipType =  \n  \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\";  \nconst string wordmlNamespace =  \n  \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\";  \nXNamespace w = wordmlNamespace;  \n  \nXDocument xDoc = null;  \nXDocument styleDoc = null;  \n  \nusing (Package wdPackage = Package.Open(fileName, FileMode.Open, FileAccess.Read))  \n{  \n    PackageRelationship docPackageRelationship =  \n      wdPackage.GetRelationshipsByType(documentRelationshipType).FirstOrDefault();  \n    if (docPackageRelationship != null)  \n    {  \n        Uri documentUri = PackUriHelper.ResolvePartUri(new Uri(\"/\", UriKind.Relative),  \n          docPackageRelationship.TargetUri);  \n        PackagePart documentPart = wdPackage.GetPart(documentUri);  \n  \n        //  Load the document XML in the part into an XDocument instance.  \n        xDoc = XDocument.Load(XmlReader.Create(documentPart.GetStream()));  \n  \n        //  Find the styles part. There will only be one.  \n        PackageRelationship styleRelation =  \n          documentPart.GetRelationshipsByType(stylesRelationshipType).FirstOrDefault();  \n        if (styleRelation != null)  \n        {  \n            Uri styleUri = PackUriHelper.ResolvePartUri(documentUri, styleRelation.TargetUri);  \n            PackagePart stylePart = wdPackage.GetPart(styleUri);  \n  \n            //  Load the style XML in the part into an XDocument instance.  \n            styleDoc = XDocument.Load(XmlReader.Create(stylePart.GetStream()));  \n        }  \n    }  \n}  \n  \n// The following query finds all the paragraphs that have the default style.  \nstring defaultStyle =   \n    (string)(  \n        from style in styleDoc.Root.Elements(w + \"style\")  \n        where (string)style.Attribute(w + \"type\") == \"paragraph\"&&  \n              (string)style.Attribute(w + \"default\") == \"1\"  \n              select style  \n    ).First().Attribute(w + \"styleId\");  \n  \nConsole.WriteLine(\"The default style is: {0}\", defaultStyle);  \n```  \n  \n### Comments  \n This example produces the following output:  \n  \n```  \nThe default style is: Normal  \n```  \n  \n## Next Steps  \n In the next example, you'll create a similar query that finds all the paragraphs in a document and their styles:  \n  \n-   [Retrieving the Paragraphs and Their Styles (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)  \n  \n## See Also  \n [Tutorial: Manipulating Content in a WordprocessingML Document](http://msdn.microsoft.com/library/2696355e-4f83-4eaf-91b2-baa721f42fb4)","nodes":[{"pos":[12,69],"content":"Finding the Default Paragraph Style (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Finding the Default Paragraph Style (C#) | Microsoft Docs","pos":[0,57]}]},{"pos":[354,394],"content":"Finding the Default Paragraph Style (C#)","linkify":"Finding the Default Paragraph Style (C#)","nodes":[{"content":"Finding the Default Paragraph Style (C#)","pos":[0,40]}]},{"content":"The first task in the Manipulating Information in a WordprocessingML Document tutorial is to find the default style of paragraphs in the document.","pos":[395,541]},{"pos":[550,557],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[567,578],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"content":"The following example opens an Office Open XML WordprocessingML document, finds the document and style parts of the package, and then executes a query that finds the default style name.","pos":[582,767]},{"content":"For information about Office Open XML document packages, and the parts they consist of, see <bpt id=\"p1\">[</bpt>Details of Office Open XML WordprocessingML Documents (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)</ept>.","pos":[768,1030],"source":" For information about Office Open XML document packages, and the parts they consist of, see [Details of Office Open XML WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)."},{"content":"The query finds a node named <ph id=\"ph1\">`w:style`</ph> that has an attribute named <ph id=\"ph2\">`w:type`</ph> with a value of \"paragraph\", and also has an attribute named <ph id=\"ph3\">`w:default`</ph> with a value of \"1\".","pos":[1037,1206],"source":"The query finds a node named `w:style` that has an attribute named `w:type` with a value of \"paragraph\", and also has an attribute named `w:default` with a value of \"1\"."},{"content":"Because there will be only one XML node with these attributes, the query uses the <ph id=\"ph1\">&lt;xref:System.Linq.Enumerable.First%2A?displayProperty=fullName&gt;</ph> operator to convert a collection to a singleton.","pos":[1207,1401],"source":" Because there will be only one XML node with these attributes, the query uses the <xref:System.Linq.Enumerable.First%2A?displayProperty=fullName> operator to convert a collection to a singleton."},{"content":"It then gets the value of the attribute with the name <ph id=\"ph1\">`w:styleId`</ph>.","pos":[1402,1468],"source":" It then gets the value of the attribute with the name `w:styleId`."},{"content":"This example uses classes from the WindowsBase assembly.","pos":[1475,1531]},{"content":"It uses types in the <ph id=\"ph1\">&lt;xref:System.IO.Packaging?displayProperty=fullName&gt;</ph> namespace.","pos":[1532,1615],"source":" It uses types in the <xref:System.IO.Packaging?displayProperty=fullName> namespace."},{"pos":[1625,1629],"content":"Code","linkify":"Code","nodes":[{"content":"Code","pos":[0,4]}]},{"pos":[3842,3850],"content":"Comments","linkify":"Comments","nodes":[{"content":"Comments","pos":[0,8]}]},{"content":"This example produces the following output:","pos":[3854,3897]},{"pos":[3952,3962],"content":"Next Steps","linkify":"Next Steps","nodes":[{"content":"Next Steps","pos":[0,10]}]},{"content":"In the next example, you'll create a similar query that finds all the paragraphs in a document and their styles:","pos":[3966,4078]},{"pos":[4088,4235],"content":"<bpt id=\"p1\">[</bpt>Retrieving the Paragraphs and Their Styles (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)</ept>","source":"[Retrieving the Paragraphs and Their Styles (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)"},{"pos":[4244,4252],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[4256,4391],"content":"<bpt id=\"p1\">[</bpt>Tutorial: Manipulating Content in a WordprocessingML Document<ept id=\"p1\">](http://msdn.microsoft.com/library/2696355e-4f83-4eaf-91b2-baa721f42fb4)</ept>","source":"[Tutorial: Manipulating Content in a WordprocessingML Document](http://msdn.microsoft.com/library/2696355e-4f83-4eaf-91b2-baa721f42fb4)"}]}