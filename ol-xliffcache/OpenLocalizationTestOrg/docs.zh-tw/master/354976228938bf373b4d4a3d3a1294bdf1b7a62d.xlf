<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">354976228938bf373b4d4a3d3a1294bdf1b7a62d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\pick-activity.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc8d9a06646d4774178a4ed5351511b1044f5a1a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bde749f4cdba5646db1aa0b970965682dc5a9ce5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Pick Activity | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Pick Activity</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity simplifies the modeling of a set of event triggers followed by their corresponding handlers.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity contains a collection of <ph id="ph2">&lt;xref:System.Activities.Statements.PickBranch&gt;</ph> activities, where each <ph id="ph3">&lt;xref:System.Activities.Statements.PickBranch&gt;</ph> is a pairing between a <ph id="ph4">&lt;xref:System.Activities.Statements.PickBranch.Trigger%2A&gt;</ph> activity and an <ph id="ph5">&lt;xref:System.Activities.Statements.PickBranch.Action%2A&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>At execution time, the triggers for all branches are executed in parallel.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When one trigger completes, then its corresponding action is executed, and all other triggers are canceled.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The behavior of the <ph id="ph1">[!INCLUDE[netfx_current_short](../../../includes/netfx-current-short-md.md)]</ph><ph id="ph2">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity is similar to the <ph id="ph3">[!INCLUDE[netfx35_short](../../../includes/netfx35-short-md.md)]</ph><ph id="ph4">&lt;xref:System.Workflow.Activities.ListenActivity&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following screenshot from the <bpt id="p1">[</bpt>Using the Pick Activity<ept id="p1">](../../../docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md)</ept> SDK sample shows a Pick activity with two branches.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>One branch has a trigger called <bpt id="p1">**</bpt>Read input<ept id="p1">**</ept>, a custom activity that reads input from the command line.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The second branch has a <ph id="ph1">&lt;xref:System.Activities.Statements.Delay&gt;</ph> activity trigger.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>Read input<ept id="p1">**</ept> activity receives data before the <ph id="ph1">&lt;xref:System.Activities.Statements.Delay&gt;</ph> activity finishes, <ph id="ph2">&lt;xref:System.Activities.Statements.Delay&gt;</ph> Delay will be canceled and a greeting will be written to the console.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Otherwise, if the <bpt id="p1">**</bpt>Read input<ept id="p1">**</ept> activity does not receive data in the allotted time, then it will be canceled and a timeout message will be written to the console.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is a common pattern used to add a timeout to any action.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Pick Activity<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/pickconceptual.JPG "</bpt>PickConceptual<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Best practices</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When using Pick, the branch that executes is the branch whose trigger completes first.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Conceptually, all triggers execute in parallel, and one trigger may have executed the majority of its logic before it is canceled by the completion of another trigger.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>With this in mind, a general guideline to follow when using the Pick activity is to treat the trigger as representing a single event, and to put as little logic as possible into it.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Ideally, the trigger should contain just enough logic to receive an event, and all the processing of that event should go into the action of the branch.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This method minimizes the amount of overlap between the execution of the triggers.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, consider a <ph id="ph1">&lt;xref:System.Activities.Statements.Pick&gt;</ph> with two triggers, where each trigger contains a <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activity followed by additional logic.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the additional logic introduces an idle point, then there is the possibility of both <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activities completing successfully.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>One trigger will fully complete, while another will partially complete.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In some scenarios, accepting a message, and then partially completing the processing of it is unacceptable.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Therefore, when using WF built-in messaging activities such as <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph>, while <ph id="ph3">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> is commonly used in the trigger, <ph id="ph4">&lt;xref:System.ServiceModel.Activities.SendReply&gt;</ph> and other logic should be put in the action whenever possible.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Using the Pick activity in the designer</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To use Pick in the designer, find <bpt id="p1">**</bpt>Pick<ept id="p1">**</ept> and <bpt id="p2">**</bpt>PickBranch<ept id="p2">**</ept> in the toolbox.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Drag and drop <bpt id="p1">**</bpt>Pick<ept id="p1">**</ept> onto the canvas.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>By default, a new <bpt id="p1">**</bpt>Pick<ept id="p1">**</ept> Activity in the designer will contain two branches.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To add additional branches, drag the <bpt id="p1">**</bpt>PickBranch<ept id="p1">**</ept> activity and drop it next to existing branches.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Activities can be dropped onto the <bpt id="p1">**</bpt>Pick<ept id="p1">**</ept> Activity into either the <bpt id="p2">**</bpt>Trigger<ept id="p2">**</ept> area or the <bpt id="p3">**</bpt>Action<ept id="p3">**</ept> area of any <bpt id="p4">**</bpt>PickBranch<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Using the Pick Activity in code</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity is used by populating its <ph id="ph2">&lt;xref:System.Activities.Statements.Pick.Branches%2A&gt;</ph> collection with <ph id="ph3">&lt;xref:System.Activities.Statements.PickBranch&gt;</ph> activities.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.PickBranch&gt;</ph> activities each have a <ph id="ph2">&lt;xref:System.Activities.Statements.PickBranch.Trigger%2A&gt;</ph> property of type <ph id="ph3">&lt;xref:System.Activities.Activity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When the specified activity completes execution, the <ph id="ph1">&lt;xref:System.Activities.Statements.PickBranch.Action%2A&gt;</ph> executes.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity to implement a timeout for an activity that reads a line from the console.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>