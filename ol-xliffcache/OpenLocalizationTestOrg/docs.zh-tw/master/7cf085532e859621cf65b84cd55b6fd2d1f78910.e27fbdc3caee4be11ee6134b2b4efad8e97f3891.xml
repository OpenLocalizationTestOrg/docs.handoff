{"content":"---\ntitle: \"&lt;add&gt; Element for &lt;listeners&gt; for &lt;trace&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"http://schemas.microsoft.com/.NetConfiguration/v2.0#configuration/system.diagnostics/trace/listeners/add\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"initializeData attribute\"\n  - \"<add> element for <listeners>\"\n  - \"add element for <listeners>\"\nms.assetid: 81e804a3-ef11-4d39-bbde-bfa012c179e2\ncaps.latest.revision: 24\nauthor: \"mcleblanc\"\nms.author: \"markl\"\nmanager: \"markl\"\n---\n# &lt;add&gt; Element for &lt;listeners&gt; for &lt;trace&gt;\nAdds a listener to the **Listeners** collection.  \n  \n \\<configuration>  \n\\<system.diagnostics>  \n\\<trace>  \n\\<listeners>  \n\\<add>  \n  \n## Syntax  \n  \n```  \n<add name=\"name\"   \n     type=\"trace listener class name, Version, Culture, PublicKeyToken\"  \n     initializeData=\"data\"/>  \n```  \n  \n## Attributes and Elements  \n The following sections describe attributes, child elements, and parent elements.  \n  \n### Attributes  \n  \n|Attribute|Description|  \n|---------------|-----------------|  \n|**type**|Required attribute.<br /><br /> Specifies the type of the listener. You must use a string that meets the requirements specified in [Specifying Fully Qualified Type Names](../../../../../docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md).|  \n|**initializeData**|Optional attribute.<br /><br /> The string passed to the constructor for the specified class.|  \n|**name**|Optional attribute.<br /><br /> Specifies the name of the listener.|  \n  \n### Child Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|[\\<filter>](../../../../../docs/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-listeners-for-trace.md)|Adds a filter to a listener in the `Listeners` collection for a trace.|  \n  \n### Parent Elements  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|`configuration`|The root element in every configuration file used by the common language runtime and .NET Framework applications.|  \n|`listeners`|Specifies a listener that collects, stores, and routes messages. Listeners direct the tracing output to an appropriate target.|  \n|`system.diagnostics`|Specifies the root element for the ASP.NET configuration section.|  \n|`trace`|Contains listeners that collect, store, and route tracing messages.|  \n  \n## Remarks  \n The <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes share the same **Listeners** collection. If you add a listener object to the collection in one of these classes, the other class uses the same listener. The listener classes derive from the <xref:System.Diagnostics.TraceListener>.  \n  \n If you do not specify the `nam`e attribute of the trace listener, the <xref:System.Diagnostics.TraceListener.Name%2A> of the trace listener defaults to an empty string (\"\"). If your application has only one listener, you can add it without specifying a name, and remove it by specifying an empty string for the name. However, if your application has more than one listener, you should specify unique names for each trace listener, which allows you to identify and manage individual trace listeners within the <xref:System.Diagnostics.Debug.Listeners%2A> and <xref:System.Diagnostics.Trace.Listeners%2A> collections.  \n  \n> [!NOTE]\n>  Adding more than one trace listener of the same type and with the same name results in only one trace listener of that type and name being added to the `Listeners` collection. However, you can programmatically add multiple identical listeners to the `Listeners` collection.  \n  \n The value for the **initializeData** attribute depends on the type of listener you create. Not all trace listeners require that you specify **initializeData**.  \n  \n> [!NOTE]\n>  When you use the `initializeData` attribute, you may get the compiler warning \"The 'initializeData' attribute is not declared.\" This warning occurs because the configuration settings are validated against the abstract base class <xref:System.Diagnostics.TraceListener>, which does not recognize the `initializeData` attribute. Typically, you can ignore this warning for trace listener implementations that have a constructor that takes a parameter.  \n  \n The following table shows the trace listeners that are included with the .NET Framework and describes the value of their **initializeData** attributes.  \n  \n|Trace listener class|initializeData attribute value|  \n|--------------------------|------------------------------------|  \n|<xref:System.Diagnostics.ConsoleTraceListener?displayProperty=fullName>|The `useErrorStream` value for the <xref:System.Diagnostics.ConsoleTraceListener.%23ctor%2A> constructor.  Set the `initializeData` attribute to \"`true`\" to write trace and debug output to <xref:System.Console.Error%2A?displayProperty=fullName>; \"`false`\" to write to <xref:System.Console.Out%2A?displayProperty=fullName>.|  \n|<xref:System.Diagnostics.DelimitedListTraceListener?displayProperty=fullName>|The name of the file the <xref:System.Diagnostics.DelimitedListTraceListener> writes to.|  \n|<xref:System.Diagnostics.EventLogTraceListener?displayProperty=fullName>|The name of the name of an existing event log source.|  \n|<xref:System.Diagnostics.EventSchemaTraceListener?displayProperty=fullName>|The name of the file that the <xref:System.Diagnostics.EventSchemaTraceListener> writes to.|  \n|<xref:System.Diagnostics.TextWriterTraceListener?displayProperty=fullName>|The name of the file that the <xref:System.Diagnostics.TextWriterTraceListener> writes to.|  \n|<xref:System.Diagnostics.XmlWriterTraceListener?displayProperty=fullName>|The name of the file that the <xref:System.Diagnostics.XmlWriterTraceListener> writes to.|  \n  \n## Example  \n The following example shows how to use **\\<add>** elements to add the listeners `MyListener` and `MyEventListener` to the **Listeners** collection. `MyListener` creates a file called `MyListener.log` and writes the output to the file. `MyEventListener` creates an entry in the event log.  \n  \n```  \n<configuration>  \n   <system.diagnostics>  \n      <trace autoflush=\"true\" indentsize=\"0\">  \n         <listeners>  \n            <add name=\"myListener\" type=\"System.Diagnostics.TextWriterTraceListener, system, version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" initializeData=\"c:\\myListener.log\" />  \n            <add name=\"MyEventListener\"  \n                 type=\"System.Diagnostics.EventLogTraceListener, system, version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"                 initializeData=\"MyConfigEventLog\"/>  \n            <add name=\"configConsoleListener\"  \n                 type=\"System.Diagnostics.ConsoleTraceListener, system, version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>  \n         </listeners>  \n      </trace>  \n   </system.diagnostics>  \n</configuration>  \n```  \n  \n## See Also  \n <xref:System.Diagnostics.Trace>   \n <xref:System.Diagnostics.Debug>   \n <xref:System.Diagnostics.EventLogTraceListener>   \n <xref:System.Diagnostics.ConsoleTraceListener>   \n <xref:System.Diagnostics.TextWriterTraceListener>   \n [Trace and Debug Settings Schema](../../../../../docs/framework/configure-apps/file-schema/trace-debug/index.md)   \n [Trace Listeners](../../../../../docs/framework/debug-trace-profile/trace-listeners.md)\n","nodes":[{"pos":[4,686],"embed":true,"restype":"x-metadata","content":"title: \"&lt;add&gt; Element for &lt;listeners&gt; for &lt;trace&gt; | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nf1_keywords: \n  - \"http://schemas.microsoft.com/.NetConfiguration/v2.0#configuration/system.diagnostics/trace/listeners/add\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"initializeData attribute\"\n  - \"<add> element for <listeners>\"\n  - \"add element for <listeners>\"\nms.assetid: 81e804a3-ef11-4d39-bbde-bfa012c179e2\ncaps.latest.revision: 24\nauthor: \"mcleblanc\"\nms.author: \"markl\"\nmanager: \"markl\"","nodes":[{"content":"&lt;add&gt; Element for &lt;listeners&gt; for &lt;trace&gt; | Microsoft Docs","nodes":[{"pos":[0,76],"content":"&lt;add&gt; Element for &lt;listeners&gt; for &lt;trace&gt; | Microsoft Docs","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>add<ph id=\"ph2\">&amp;gt;</ph> Element for <ph id=\"ph3\">&amp;lt;</ph>listeners<ph id=\"ph4\">&amp;gt;</ph> for <ph id=\"ph5\">&amp;lt;</ph>trace<ph id=\"ph6\">&amp;gt;</ph> | Microsoft Docs","pos":[0,76],"source":"&lt;add&gt; Element for &lt;listeners&gt; for &lt;trace&gt; | Microsoft Docs"}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[693,752],"content":"&lt;add&gt; Element for &lt;listeners&gt; for &lt;trace&gt;","linkify":"&lt;add&gt; Element for &lt;listeners&gt; for &lt;trace&gt;","nodes":[{"content":"<ph id=\"ph1\">&amp;lt;</ph>add<ph id=\"ph2\">&amp;gt;</ph> Element for <ph id=\"ph3\">&amp;lt;</ph>listeners<ph id=\"ph4\">&amp;gt;</ph> for <ph id=\"ph5\">&amp;lt;</ph>trace<ph id=\"ph6\">&amp;gt;</ph>","pos":[0,59],"source":"&lt;add&gt; Element for &lt;listeners&gt; for &lt;trace&gt;"}]},{"pos":[753,801],"content":"Adds a listener to the <bpt id=\"p1\">**</bpt>Listeners<ept id=\"p1\">**</ept> collection.","source":"Adds a listener to the **Listeners** collection."},{"content":"<ph id=\"ph1\">\\&lt;</ph>configuration&gt;","pos":[808,824],"source":"\\<configuration>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>system.diagnostics&gt;","pos":[827,848],"source":"\\<system.diagnostics>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>trace&gt;","pos":[851,859],"source":"\\<trace>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>listeners&gt;","pos":[862,874],"source":"\\<listeners>"},{"content":"<ph id=\"ph1\">\\&lt;</ph>add&gt;","pos":[877,883],"source":"\\<add>"},{"pos":[892,898],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1047,1070],"content":"Attributes and Elements","linkify":"Attributes and Elements","nodes":[{"content":"Attributes and Elements","pos":[0,23]}]},{"content":"The following sections describe attributes, child elements, and parent elements.","pos":[1074,1154]},{"pos":[1164,1174],"content":"Attributes","linkify":"Attributes","nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"Attribute","pos":[1181,1190]},{"content":"Description","pos":[1191,1202]},{"pos":[1245,1253],"content":"<bpt id=\"p1\">**</bpt>type<ept id=\"p1\">**</ept>","source":"**type**"},{"content":"Required attribute.","pos":[1254,1273]},{"content":"Specifies the type of the listener.","pos":[1286,1321]},{"content":"You must use a string that meets the requirements specified in <bpt id=\"p1\">[</bpt>Specifying Fully Qualified Type Names<ept id=\"p1\">](../../../../../docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md)</ept>.","pos":[1322,1520],"source":" You must use a string that meets the requirements specified in [Specifying Fully Qualified Type Names](../../../../../docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md)."},{"pos":[1525,1543],"content":"<bpt id=\"p1\">**</bpt>initializeData<ept id=\"p1\">**</ept>","source":"**initializeData**"},{"content":"Optional attribute.","pos":[1544,1563]},{"content":"The string passed to the constructor for the specified class.","pos":[1576,1637]},{"pos":[1642,1650],"content":"<bpt id=\"p1\">**</bpt>name<ept id=\"p1\">**</ept>","source":"**name**"},{"content":"Optional attribute.","pos":[1651,1670]},{"content":"Specifies the name of the listener.","pos":[1683,1718]},{"pos":[1729,1743],"content":"Child Elements","linkify":"Child Elements","nodes":[{"content":"Child Elements","pos":[0,14]}]},{"content":"Element","pos":[1750,1757]},{"content":"Description","pos":[1758,1769]},{"pos":[1810,1941],"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>filter&gt;<ept id=\"p1\">](../../../../../docs/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-listeners-for-trace.md)</ept>","source":"[\\<filter>](../../../../../docs/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-listeners-for-trace.md)"},{"pos":[1942,2012],"content":"Adds a filter to a listener in the <ph id=\"ph1\">`Listeners`</ph> collection for a trace.","source":"Adds a filter to a listener in the `Listeners` collection for a trace."},{"pos":[2023,2038],"content":"Parent Elements","linkify":"Parent Elements","nodes":[{"content":"Parent Elements","pos":[0,15]}]},{"content":"Element","pos":[2045,2052]},{"content":"Description","pos":[2053,2064]},{"content":"The root element in every configuration file used by the common language runtime and .NET Framework applications.","pos":[2121,2234]},{"content":"Specifies a listener that collects, stores, and routes messages.","pos":[2251,2315]},{"content":"Listeners direct the tracing output to an appropriate target.","pos":[2316,2377]},{"content":"Specifies the root element for the ASP.NET configuration section.","pos":[2403,2468]},{"content":"Contains listeners that collect, store, and route tracing messages.","pos":[2481,2548]},{"pos":[2558,2565],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes share the same <bpt id=\"p1\">**</bpt>Listeners<ept id=\"p1\">**</ept> collection.","pos":[2569,2689],"source":"The <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes share the same **Listeners** collection."},{"content":"If you add a listener object to the collection in one of these classes, the other class uses the same listener.","pos":[2690,2801]},{"content":"The listener classes derive from the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.","pos":[2802,2879],"source":" The listener classes derive from the <xref:System.Diagnostics.TraceListener>."},{"content":"If you do not specify the <ph id=\"ph1\">`nam`</ph>e attribute of the trace listener, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> of the trace listener defaults to an empty string (\"\").","pos":[2886,3059],"source":"If you do not specify the `nam`e attribute of the trace listener, the <xref:System.Diagnostics.TraceListener.Name%2A> of the trace listener defaults to an empty string (\"\")."},{"content":"If your application has only one listener, you can add it without specifying a name, and remove it by specifying an empty string for the name.","pos":[3060,3202]},{"content":"However, if your application has more than one listener, you should specify unique names for each trace listener, which allows you to identify and manage individual trace listeners within the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collections.","pos":[3203,3501],"source":" However, if your application has more than one listener, you should specify unique names for each trace listener, which allows you to identify and manage individual trace listeners within the <xref:System.Diagnostics.Debug.Listeners%2A> and <xref:System.Diagnostics.Trace.Listeners%2A> collections."},{"pos":[3509,3793],"content":"[!NOTE]\n Adding more than one trace listener of the same type and with the same name results in only one trace listener of that type and name being added to the `Listeners` collection. However, you can programmatically add multiple identical listeners to the `Listeners` collection.","leadings":["","> "],"nodes":[{"content":"Adding more than one trace listener of the same type and with the same name results in only one trace listener of that type and name being added to the `Listeners` collection. However, you can programmatically add multiple identical listeners to the `Listeners` collection.","pos":[9,282],"nodes":[{"content":"Adding more than one trace listener of the same type and with the same name results in only one trace listener of that type and name being added to the <ph id=\"ph1\">`Listeners`</ph> collection.","pos":[0,175],"source":"Adding more than one trace listener of the same type and with the same name results in only one trace listener of that type and name being added to the `Listeners` collection."},{"content":"However, you can programmatically add multiple identical listeners to the <ph id=\"ph1\">`Listeners`</ph> collection.","pos":[176,273],"source":" However, you can programmatically add multiple identical listeners to the `Listeners` collection."}]}]},{"content":"The value for the <bpt id=\"p1\">**</bpt>initializeData<ept id=\"p1\">**</ept> attribute depends on the type of listener you create.","pos":[3800,3890],"source":"The value for the **initializeData** attribute depends on the type of listener you create."},{"content":"Not all trace listeners require that you specify <bpt id=\"p1\">**</bpt>initializeData<ept id=\"p1\">**</ept>.","pos":[3891,3959],"source":" Not all trace listeners require that you specify **initializeData**."},{"pos":[3967,4426],"content":"[!NOTE]\n When you use the `initializeData` attribute, you may get the compiler warning \"The 'initializeData' attribute is not declared.\" This warning occurs because the configuration settings are validated against the abstract base class <xref:System.Diagnostics.TraceListener>, which does not recognize the `initializeData` attribute. Typically, you can ignore this warning for trace listener implementations that have a constructor that takes a parameter.","leadings":["","> "],"nodes":[{"content":"When you use the `initializeData` attribute, you may get the compiler warning \"The 'initializeData' attribute is not declared.\" This warning occurs because the configuration settings are validated against the abstract base class <xref:System.Diagnostics.TraceListener>, which does not recognize the `initializeData` attribute. Typically, you can ignore this warning for trace listener implementations that have a constructor that takes a parameter.","pos":[9,457],"nodes":[{"content":"When you use the <ph id=\"ph1\">`initializeData`</ph> attribute, you may get the compiler warning \"The 'initializeData' attribute is not declared.\"","pos":[0,127],"source":"When you use the `initializeData` attribute, you may get the compiler warning \"The 'initializeData' attribute is not declared.\""},{"content":"This warning occurs because the configuration settings are validated against the abstract base class <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>, which does not recognize the <ph id=\"ph2\">`initializeData`</ph> attribute.","pos":[128,326],"source":" This warning occurs because the configuration settings are validated against the abstract base class <xref:System.Diagnostics.TraceListener>, which does not recognize the `initializeData` attribute."},{"content":"Typically, you can ignore this warning for trace listener implementations that have a constructor that takes a parameter.","pos":[327,448]}]}]},{"pos":[4433,4584],"content":"The following table shows the trace listeners that are included with the .NET Framework and describes the value of their <bpt id=\"p1\">**</bpt>initializeData<ept id=\"p1\">**</ept> attributes.","source":"The following table shows the trace listeners that are included with the .NET Framework and describes the value of their **initializeData** attributes."},{"content":"Trace listener class","pos":[4591,4611]},{"content":"initializeData attribute value","pos":[4612,4642]},{"content":"The <ph id=\"ph1\">`useErrorStream`</ph> value for the <ph id=\"ph2\">&lt;xref:System.Diagnostics.ConsoleTraceListener.%23ctor%2A&gt;</ph> constructor.","pos":[4787,4892],"source":"The `useErrorStream` value for the <xref:System.Diagnostics.ConsoleTraceListener.%23ctor%2A> constructor."},{"content":"Set the <ph id=\"ph1\">`initializeData`</ph> attribute to \"<ph id=\"ph2\">`true`</ph>\" to write trace and debug output to <ph id=\"ph3\">&lt;xref:System.Console.Error%2A?displayProperty=fullName&gt;</ph>; \"<ph id=\"ph4\">`false`</ph>\" to write to <ph id=\"ph5\">&lt;xref:System.Console.Out%2A?displayProperty=fullName&gt;</ph>.","pos":[4894,5109],"source":"  Set the `initializeData` attribute to \"`true`\" to write trace and debug output to <xref:System.Console.Error%2A?displayProperty=fullName>; \"`false`\" to write to <xref:System.Console.Out%2A?displayProperty=fullName>."},{"pos":[5192,5280],"content":"The name of the file the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> writes to.","source":"The name of the file the <xref:System.Diagnostics.DelimitedListTraceListener> writes to."},{"content":"The name of the name of an existing event log source.","pos":[5358,5411]},{"pos":[5492,5583],"content":"The name of the file that the <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> writes to.","source":"The name of the file that the <xref:System.Diagnostics.EventSchemaTraceListener> writes to."},{"pos":[5663,5753],"content":"The name of the file that the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> writes to.","source":"The name of the file that the <xref:System.Diagnostics.TextWriterTraceListener> writes to."},{"pos":[5832,5921],"content":"The name of the file that the <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> writes to.","source":"The name of the file that the <xref:System.Diagnostics.XmlWriterTraceListener> writes to."},{"pos":[5931,5938],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to use <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>add&gt;<ept id=\"p1\">**</ept> elements to add the listeners <ph id=\"ph2\">`MyListener`</ph> and <ph id=\"ph3\">`MyEventListener`</ph> to the <bpt id=\"p2\">**</bpt>Listeners<ept id=\"p2\">**</ept> collection.","pos":[5942,6089],"source":"The following example shows how to use **\\<add>** elements to add the listeners `MyListener` and `MyEventListener` to the **Listeners** collection."},{"content":"<ph id=\"ph1\">`MyListener`</ph> creates a file called <ph id=\"ph2\">`MyListener.log`</ph> and writes the output to the file.","pos":[6090,6176],"source":"`MyListener` creates a file called `MyListener.log` and writes the output to the file."},{"content":"<ph id=\"ph1\">`MyEventListener`</ph> creates an entry in the event log.","pos":[6177,6229],"source":"`MyEventListener` creates an entry in the event log."},{"pos":[7091,7099],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Trace and Debug Settings Schema<ept id=\"p1\">](../../../../../docs/framework/configure-apps/file-schema/trace-debug/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[7332,7445],"source":"[Trace and Debug Settings Schema](../../../../../docs/framework/configure-apps/file-schema/trace-debug/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Trace Listeners<ept id=\"p1\">](../../../../../docs/framework/debug-trace-profile/trace-listeners.md)</ept>","pos":[7449,7536],"source":"[Trace Listeners](../../../../../docs/framework/debug-trace-profile/trace-listeners.md)"}]}