{"content":"---\ntitle: \"How to: Define a Conversion Operator (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"procedures, defining\"\n  - \"operators [Visual Basic], defining\"\n  - \"procedures, operator\"\n  - \"operators [Visual Basic], overloading\"\n  - \"return values, Operator procedures\"\n  - \"operator overloading\"\nms.assetid: 54203dfa-c24b-463f-9942-d5153e89e762\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Define a Conversion Operator (Visual Basic)\nIf you have defined a class or structure, you can define a type conversion operator between the type of your class or structure and another data type (such as `Integer`, `Double`, or `String`).  \n  \n Define the type conversion as a [CType Function](../../../../visual-basic/language-reference/functions/ctype-function.md) procedure within the class or structure. All conversion procedures must be `Public Shared`, and each one must specify either [Widening](../../../../visual-basic/language-reference/modifiers/widening.md) or [Narrowing](../../../../visual-basic/language-reference/modifiers/narrowing.md).  \n  \n Defining an operator on a class or structure is also called *overloading* the operator.  \n  \n## Example  \n The following example defines conversion operators between a structure called `digit` and a `Byte`.  \n  \n [!code-vb[VbVbcnProcedures#27](./codesnippet/VisualBasic/how-to-define-a-conversion-operator_1.vb)]  \n  \n You can test the structure `digit` with the following code.  \n  \n [!code-vb[VbVbcnProcedures#28](./codesnippet/VisualBasic/how-to-define-a-conversion-operator_2.vb)]  \n  \n## See Also  \n [Operator Procedures](./operator-procedures.md)   \n [How to: Define an Operator](./how-to-define-an-operator.md)   \n [How to: Call an Operator Procedure](./how-to-call-an-operator-procedure.md)   \n [How to: Use a Class that Defines Operators](./how-to-use-a-class-that-defines-operators.md)   \n [Operator Statement](../../../../visual-basic/language-reference/statements/operator-statement.md)   \n [Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md)   \n [How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)   \n [Implicit and Explicit Conversions](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)   \n [Widening and Narrowing Conversions](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)","nodes":[{"pos":[4,775],"embed":true,"restype":"x-metadata","content":"title: \"How to: Define a Conversion Operator (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"procedures, defining\"\n  - \"operators [Visual Basic], defining\"\n  - \"procedures, operator\"\n  - \"operators [Visual Basic], overloading\"\n  - \"return values, Operator procedures\"\n  - \"operator overloading\"\nms.assetid: 54203dfa-c24b-463f-9942-d5153e89e762\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"How to: Define a Conversion Operator (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,68],"content":"How to: Define a Conversion Operator (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Define a Conversion Operator (Visual Basic) | Microsoft Docs","pos":[0,68]}]}],"path":["title"]}],"yml":true},{"pos":[782,833],"content":"How to: Define a Conversion Operator (Visual Basic)","linkify":"How to: Define a Conversion Operator (Visual Basic)","nodes":[{"content":"How to: Define a Conversion Operator (Visual Basic)","pos":[0,51]}]},{"pos":[834,1027],"content":"If you have defined a class or structure, you can define a type conversion operator between the type of your class or structure and another data type (such as <ph id=\"ph1\">`Integer`</ph>, <ph id=\"ph2\">`Double`</ph>, or <ph id=\"ph3\">`String`</ph>).","source":"If you have defined a class or structure, you can define a type conversion operator between the type of your class or structure and another data type (such as `Integer`, `Double`, or `String`)."},{"content":"Define the type conversion as a <bpt id=\"p1\">[</bpt>CType Function<ept id=\"p1\">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> procedure within the class or structure.","pos":[1034,1196],"source":"Define the type conversion as a [CType Function](../../../../visual-basic/language-reference/functions/ctype-function.md) procedure within the class or structure."},{"content":"All conversion procedures must be <ph id=\"ph1\">`Public Shared`</ph>, and each one must specify either <bpt id=\"p1\">[</bpt>Widening<ept id=\"p1\">](../../../../visual-basic/language-reference/modifiers/widening.md)</ept> or <bpt id=\"p2\">[</bpt>Narrowing<ept id=\"p2\">](../../../../visual-basic/language-reference/modifiers/narrowing.md)</ept>.","pos":[1197,1442],"source":" All conversion procedures must be `Public Shared`, and each one must specify either [Widening](../../../../visual-basic/language-reference/modifiers/widening.md) or [Narrowing](../../../../visual-basic/language-reference/modifiers/narrowing.md)."},{"pos":[1449,1536],"content":"Defining an operator on a class or structure is also called <bpt id=\"p1\">*</bpt>overloading<ept id=\"p1\">*</ept> the operator.","source":"Defining an operator on a class or structure is also called *overloading* the operator."},{"pos":[1545,1552],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1556,1655],"content":"The following example defines conversion operators between a structure called <ph id=\"ph1\">`digit`</ph> and a <ph id=\"ph2\">`Byte`</ph>.","source":"The following example defines conversion operators between a structure called `digit` and a `Byte`."},{"pos":[1768,1827],"content":"You can test the structure <ph id=\"ph1\">`digit`</ph> with the following code.","source":"You can test the structure `digit` with the following code."},{"pos":[1942,1950],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Operator Procedures<ept id=\"p1\">](./operator-procedures.md)</ept><ph id=\"ph1\"> </ph>","pos":[1954,2002],"source":"[Operator Procedures](./operator-procedures.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Define an Operator<ept id=\"p1\">](./how-to-define-an-operator.md)</ept><ph id=\"ph1\"> </ph>","pos":[2006,2067],"source":"[How to: Define an Operator](./how-to-define-an-operator.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Call an Operator Procedure<ept id=\"p1\">](./how-to-call-an-operator-procedure.md)</ept><ph id=\"ph1\"> </ph>","pos":[2071,2148],"source":"[How to: Call an Operator Procedure](./how-to-call-an-operator-procedure.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Use a Class that Defines Operators<ept id=\"p1\">](./how-to-use-a-class-that-defines-operators.md)</ept><ph id=\"ph1\"> </ph>","pos":[2152,2245],"source":"[How to: Use a Class that Defines Operators](./how-to-use-a-class-that-defines-operators.md) "},{"content":"<bpt id=\"p1\">[</bpt>Operator Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/operator-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2249,2348],"source":"[Operator Statement](../../../../visual-basic/language-reference/statements/operator-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/structure-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2352,2453],"source":"[Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Declare a Structure<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)</ept><ph id=\"ph1\"> </ph>","pos":[2457,2590],"source":"[How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md) "},{"content":"<bpt id=\"p1\">[</bpt>Implicit and Explicit Conversions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept><ph id=\"ph1\"> </ph>","pos":[2594,2740],"source":"[Implicit and Explicit Conversions](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md) "},{"content":"<bpt id=\"p1\">[</bpt>Widening and Narrowing Conversions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)</ept>","pos":[2744,2891],"source":"[Widening and Narrowing Conversions](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)"}]}