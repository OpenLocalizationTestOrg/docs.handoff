<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="msgbox-sample.md" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1019467a56de1cfbbd4a9126307f407c8d1d7041</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\interop\msgbox-sample.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89719567b80eb9502b44cc7a564adf37b26de1cc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98e7d75be4c9a557286ac11c8319cce3b66eb884</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>MsgBox Sample | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>MsgBox Sample</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to pass string types by value as In parameters and when to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.CharSet&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling&gt;</ph> fields.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The MsgBox sample uses the following unmanaged function, shown with its original function declaration:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MessageBox<ept id="p1">**</ept> exported from User32.dll.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this sample, the <ph id="ph1">`LibWrap`</ph> class contains a managed prototype for each unmanaged function called by the <ph id="ph2">`MsgBoxSample`</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The managed prototype methods <ph id="ph1">`MsgBox`</ph>, <ph id="ph2">`MsgBox2`</ph>, and <ph id="ph3">`MsgBox3`</ph> have different declarations for the same unmanaged function.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The declaration for <ph id="ph1">`MsgBox2`</ph> produces incorrect output in the message box because the character type, specified as ANSI, is mismatched with the entry point <ph id="ph2">`MessageBoxW`</ph>, which is the name of the Unicode function.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The declaration for <ph id="ph1">`MsgBox3`</ph> creates a mismatch between the <bpt id="p1">**</bpt>EntryPoint<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CharSet<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>ExactSpelling<ept id="p3">**</ept> fields.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When called, <ph id="ph1">`MsgBox3`</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For detailed information on string naming and name marshaling, see <bpt id="p1">[</bpt>Specifying a Character Set<ept id="p1">](../../../docs/framework/interop/specifying-a-character-set.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Declaring Prototypes</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Conceptual.Interop.Marshaling#5<ept id="p2">](../../../samples/snippets/cpp/VS_Snippets_CLR/conceptual.interop.marshaling/cpp/msgbox.cpp#5)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.Interop.Marshaling#5<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.interop.marshaling/cs/msgbox.cs#5)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>Conceptual.Interop.Marshaling#5<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.interop.marshaling/vb/msgbox.vb#5)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Calling Functions</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Conceptual.Interop.Marshaling#6<ept id="p2">](../../../samples/snippets/cpp/VS_Snippets_CLR/conceptual.interop.marshaling/cpp/msgbox.cpp#6)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Conceptual.Interop.Marshaling#6<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.interop.marshaling/cs/msgbox.cs#6)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>Conceptual.Interop.Marshaling#6<ept id="p2">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.interop.marshaling/vb/msgbox.vb#6)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Marshaling Strings<ept id="p1">](../../../docs/framework/interop/marshaling-strings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Platform Invoke Data Types<ept id="p1">](http://msdn.microsoft.com/en-us/16014d9f-d6bd-481e-83f0-df11377c550f)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Default Marshaling for Strings<ept id="p1">](../../../docs/framework/interop/default-marshaling-for-strings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating Prototypes in Managed Code<ept id="p1">](../../../docs/framework/interop/creating-prototypes-in-managed-code.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Specifying a Character Set<ept id="p1">](../../../docs/framework/interop/specifying-a-character-set.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>