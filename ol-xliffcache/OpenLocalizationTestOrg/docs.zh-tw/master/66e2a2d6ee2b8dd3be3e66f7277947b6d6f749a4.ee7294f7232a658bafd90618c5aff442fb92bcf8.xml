{"content":"---\ntitle: \"How to: Query the Contents of Text Files in a Folder (LINQ) (C#)\"\nms.date: 07/20/2015\nms.assetid: f5b4dce7-1a34-4eb4-9bf1-60d5bdda264c\n---\n# How to: Query the Contents of Text Files in a Folder (LINQ) (C#)\nThis example shows how to query over all the files in a specified directory tree, open each file, and inspect its contents. This type of technique could be used to create indexes or reverse indexes of the contents of a directory tree. A simple string search is performed in this example. However, more complex types of pattern matching can be performed with a regular expression. For more information, see [How to: Combine LINQ Queries with Regular Expressions (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-combine-linq-queries-with-regular-expressions.md).  \n  \n## Example  \n  \n```csharp  \nclass QueryContents  \n{  \n    public static void Main()  \n    {  \n        // Modify this path as necessary.  \n        string startFolder = @\"c:\\program files\\Microsoft Visual Studio 9.0\\\";  \n  \n        // Take a snapshot of the file system.  \n        System.IO.DirectoryInfo dir = new System.IO.DirectoryInfo(startFolder);  \n  \n        // This method assumes that the application has discovery permissions  \n        // for all folders under the specified path.  \n        IEnumerable<System.IO.FileInfo> fileList = dir.GetFiles(\"*.*\", System.IO.SearchOption.AllDirectories);  \n  \n        string searchTerm = @\"Visual Studio\";  \n  \n        // Search the contents of each file.  \n        // A regular expression created with the RegEx class  \n        // could be used instead of the Contains method.  \n        // queryMatchingFiles is an IEnumerable<string>.  \n        var queryMatchingFiles =  \n            from file in fileList  \n            where file.Extension == \".htm\"  \n            let fileText = GetFileText(file.FullName)  \n            where fileText.Contains(searchTerm)  \n            select file.FullName;  \n  \n        // Execute the query.  \n        Console.WriteLine(\"The term \\\"{0}\\\" was found in:\", searchTerm);  \n        foreach (string filename in queryMatchingFiles)  \n        {  \n            Console.WriteLine(filename);  \n        }  \n  \n        // Keep the console window open in debug mode.  \n        Console.WriteLine(\"Press any key to exit\");  \n        Console.ReadKey();  \n    }  \n  \n    // Read the contents of the file.  \n    static string GetFileText(string name)  \n    {  \n        string fileContents = String.Empty;  \n  \n        // If the file has been deleted since we took   \n        // the snapshot, ignore it and return the empty string.  \n        if (System.IO.File.Exists(name))  \n        {  \n            fileContents = System.IO.File.ReadAllText(name);  \n        }  \n        return fileContents;  \n    }  \n}  \n```  \n  \n## Compiling the Code  \n Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and `using` directives for the System.Linq and System.IO namespaces.  \n  \n## See also\n\n- [LINQ and File Directories (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)\n- [LINQ to Objects (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-objects.md)\n","nodes":[{"pos":[4,146],"embed":true,"restype":"x-metadata","content":"title: \"How to: Query the Contents of Text Files in a Folder (LINQ) (C#)\"\nms.date: 07/20/2015\nms.assetid: f5b4dce7-1a34-4eb4-9bf1-60d5bdda264c","nodes":[{"content":"How to: Query the Contents of Text Files in a Folder (LINQ) (C#)","nodes":[{"pos":[0,64],"content":"How to: Query the Contents of Text Files in a Folder (LINQ) (C#)","nodes":[{"content":"How to: Query the Contents of Text Files in a Folder (LINQ) (C#)","pos":[0,64]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[153,217],"content":"How to: Query the Contents of Text Files in a Folder (LINQ) (C#)","linkify":"How to: Query the Contents of Text Files in a Folder (LINQ) (C#)","nodes":[{"content":"How to: Query the Contents of Text Files in a Folder (LINQ) (C#)","pos":[0,64]}]},{"content":"This example shows how to query over all the files in a specified directory tree, open each file, and inspect its contents.","pos":[218,341]},{"content":"This type of technique could be used to create indexes or reverse indexes of the contents of a directory tree.","pos":[342,452]},{"content":"A simple string search is performed in this example.","pos":[453,505]},{"content":"However, more complex types of pattern matching can be performed with a regular expression.","pos":[506,597]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Combine LINQ Queries with Regular Expressions (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-combine-linq-queries-with-regular-expressions.md)</ept>.","pos":[598,793],"source":" For more information, see [How to: Combine LINQ Queries with Regular Expressions (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-combine-linq-queries-with-regular-expressions.md)."},{"pos":[802,809],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2782,2800],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[2804,2981],"content":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and <ph id=\"ph1\">`using`</ph> directives for the System.Linq and System.IO namespaces.","source":"Create a project that targets the .NET Framework  version 3.5 or higher, with a reference to System.Core.dll and `using` directives for the System.Linq and System.IO namespaces."},{"pos":[2990,2998],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3002,3115],"content":"<bpt id=\"p1\">[</bpt>LINQ and File Directories (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)</ept>","source":"[LINQ and File Directories (C#)](../../../../csharp/programming-guide/concepts/linq/linq-and-file-directories.md)"},{"pos":[3118,3211],"content":"<bpt id=\"p1\">[</bpt>LINQ to Objects (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-to-objects.md)</ept>","source":"[LINQ to Objects (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-objects.md)"}]}