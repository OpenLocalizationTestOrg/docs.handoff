{"content":"---\ntitle: \"Managing DataViews\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 0b67fab5-1722-4d2b-bfc1-247a75f0f1ee\n---\n# Managing DataViews\nYou can use a <xref:System.Data.DataViewManager> to manage view settings for all the tables in a <xref:System.Data.DataView>. If you have a control that you want to bind to multiple tables, such as a grid that navigates relationships, a **DataViewManager** is ideal.  \n  \n The **DataViewManager** contains a collection of <xref:System.Data.DataViewSetting> objects that are used to set the view setting of the tables in the <xref:System.Data.DataSet>. The <xref:System.Data.DataViewSettingCollection> contains one <xref:System.Data.DataViewSetting> object for each table in a **DataSet**. You can set the default **ApplyDefaultSort**, **Sort**, **RowFilter**, and **RowStateFilter** properties of the referenced table by using its **DataViewSetting**. You can reference the **DataViewSetting** for a particular table by name or ordinal reference, or by passing a reference to that specific table object. You can access the collection of **DataViewSetting** objects in a **DataViewManager** by using the **DataViewSettings** property.  \n  \n The following code example fills a **DataSet** with the SQL Server **Northwind** database tables **Customers**, **Orders**, and **Order Details**, creates the relationships between the tables, uses a **DataViewManager** to set default **DataView** settings, and binds a **DataGrid** to the **DataViewManager**. The example sets the default **DataView** settings for all tables in the **DataSet** to sort by the primary key of the table (**ApplyDefaultSort** = **true**), and then modifies the sort order of the **Customers** table to sort by **CompanyName**.  \n  \n```vb  \n' Assumes connection is a valid SqlConnection to Northwind.  \n' Create a Connection, DataAdapters, and a DataSet.  \nDim custDA As SqlDataAdapter = New SqlDataAdapter( _  \n  \"SELECT CustomerID, CompanyName FROM Customers\", connection)  \nDim orderDA As SqlDataAdapter = New SqlDataAdapter( _  \n  \"SELECT OrderID, CustomerID FROM Orders\", connection)  \nDim ordDetDA As SqlDataAdapter = New SqlDataAdapter( _  \n  \"SELECT OrderID, ProductID, Quantity FROM [Order Details]\", connection)  \n  \nDim custDS As DataSet = New DataSet()  \n  \n' Open the Connection.  \nconnection.Open()  \n  \n    ' Fill the DataSet with schema information and data.  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  \n    orderDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  \n    ordDetDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  \n  \n    custDA.Fill(custDS, \"Customers\")  \n    orderDA.Fill(custDS, \"Orders\")  \n    ordDetDA.Fill(custDS, \"OrderDetails\")  \n  \n    ' Close the Connection.  \n    connection.Close()  \n  \n    ' Create relationships.  \n    custDS.Relations.Add(\"CustomerOrders\", _  \n          custDS.Tables(\"Customers\").Columns(\"CustomerID\"), _  \n          custDS.Tables(\"Orders\").Columns(\"CustomerID\"))  \n  \n    custDS.Relations.Add(\"OrderDetails\", _  \n          custDS.Tables(\"Orders\").Columns(\"OrderID\"), _  \n          custDS.Tables(\"OrderDetails\").Columns(\"OrderID\"))  \n  \n' Create default DataView settings.  \nDim viewManager As DataViewManager = New DataViewManager(custDS)  \n  \nDim viewSetting As DataViewSetting  \nFor Each viewSetting In viewManager.DataViewSettings  \n  viewSetting.ApplyDefaultSort = True  \nNext  \n  \nviewManager.DataViewSettings(\"Customers\").Sort = \"CompanyName\"  \n  \n' Bind to a DataGrid.  \nDim grid As System.Windows.Forms.DataGrid = New System.Windows.Forms.DataGrid()  \ngrid.SetDataBinding(viewManager, \"Customers\")  \n```  \n  \n```csharp  \n// Assumes connection is a valid SqlConnection to Northwind.  \n// Create a Connection, DataAdapters, and a DataSet.  \nSqlDataAdapter custDA = new SqlDataAdapter(  \n  \"SELECT CustomerID, CompanyName FROM Customers\", connection);  \nSqlDataAdapter orderDA = new SqlDataAdapter(  \n  \"SELECT OrderID, CustomerID FROM Orders\", connection);  \nSqlDataAdapter ordDetDA = new SqlDataAdapter(  \n  \"SELECT OrderID, ProductID, Quantity FROM [Order Details]\", connection);  \n  \nDataSet custDS = new DataSet();  \n  \n// Open the Connection.  \nconnection.Open();  \n  \n    // Fill the DataSet with schema information and data.  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n    orderDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n    ordDetDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n  \n    custDA.Fill(custDS, \"Customers\");  \n    orderDA.Fill(custDS, \"Orders\");  \n    ordDetDA.Fill(custDS, \"OrderDetails\");  \n  \n    // Close the Connection.  \n    connection.Close();  \n  \n    // Create relationships.  \n    custDS.Relations.Add(\"CustomerOrders\",  \n          custDS.Tables[\"Customers\"].Columns[\"CustomerID\"],  \n          custDS.Tables[\"Orders\"].Columns[\"CustomerID\"]);  \n  \n    custDS.Relations.Add(\"OrderDetails\",  \n          custDS.Tables[\"Orders\"].Columns[\"OrderID\"],  \n          custDS.Tables[\"OrderDetails\"].Columns[\"OrderID\"]);  \n  \n// Create default DataView settings.  \nDataViewManager viewManager = new DataViewManager(custDS);  \n  \nforeach (DataViewSetting viewSetting in viewManager.DataViewSettings)  \n  viewSetting.ApplyDefaultSort = true;  \n  \nviewManager.DataViewSettings[\"Customers\"].Sort = \"CompanyName\";  \n  \n// Bind to a DataGrid.  \nSystem.Windows.Forms.DataGrid grid = new System.Windows.Forms.DataGrid();  \ngrid.SetDataBinding(viewManager, \"Customers\");  \n```  \n  \n## See also\n\n- <xref:System.Data.DataSet>\n- <xref:System.Data.DataViewManager>\n- <xref:System.Data.DataViewSetting>\n- <xref:System.Data.DataViewSettingCollection>\n- [DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataviews.md)\n- [ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)\n","nodes":[{"pos":[4,136],"embed":true,"restype":"x-metadata","content":"title: \"Managing DataViews\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 0b67fab5-1722-4d2b-bfc1-247a75f0f1ee","nodes":[{"content":"Managing DataViews","nodes":[{"pos":[0,18],"content":"Managing DataViews","nodes":[{"content":"Managing DataViews","pos":[0,18]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[143,161],"content":"Managing DataViews","linkify":"Managing DataViews","nodes":[{"content":"Managing DataViews","pos":[0,18]}]},{"content":"You can use a <ph id=\"ph1\">&lt;xref:System.Data.DataViewManager&gt;</ph> to manage view settings for all the tables in a <ph id=\"ph2\">&lt;xref:System.Data.DataView&gt;</ph>.","pos":[162,287],"source":"You can use a <xref:System.Data.DataViewManager> to manage view settings for all the tables in a <xref:System.Data.DataView>."},{"content":"If you have a control that you want to bind to multiple tables, such as a grid that navigates relationships, a <bpt id=\"p1\">**</bpt>DataViewManager<ept id=\"p1\">**</ept> is ideal.","pos":[288,428],"source":" If you have a control that you want to bind to multiple tables, such as a grid that navigates relationships, a **DataViewManager** is ideal."},{"content":"The <bpt id=\"p1\">**</bpt>DataViewManager<ept id=\"p1\">**</ept> contains a collection of <ph id=\"ph1\">&lt;xref:System.Data.DataViewSetting&gt;</ph> objects that are used to set the view setting of the tables in the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[435,613],"source":"The **DataViewManager** contains a collection of <xref:System.Data.DataViewSetting> objects that are used to set the view setting of the tables in the <xref:System.Data.DataSet>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataViewSettingCollection&gt;</ph> contains one <ph id=\"ph2\">&lt;xref:System.Data.DataViewSetting&gt;</ph> object for each table in a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept>.","pos":[614,750],"source":" The <xref:System.Data.DataViewSettingCollection> contains one <xref:System.Data.DataViewSetting> object for each table in a **DataSet**."},{"content":"You can set the default <bpt id=\"p1\">**</bpt>ApplyDefaultSort<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Sort<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>RowFilter<ept id=\"p3\">**</ept>, and <bpt id=\"p4\">**</bpt>RowStateFilter<ept id=\"p4\">**</ept> properties of the referenced table by using its <bpt id=\"p5\">**</bpt>DataViewSetting<ept id=\"p5\">**</ept>.","pos":[751,913],"source":" You can set the default **ApplyDefaultSort**, **Sort**, **RowFilter**, and **RowStateFilter** properties of the referenced table by using its **DataViewSetting**."},{"content":"You can reference the <bpt id=\"p1\">**</bpt>DataViewSetting<ept id=\"p1\">**</ept> for a particular table by name or ordinal reference, or by passing a reference to that specific table object.","pos":[914,1065],"source":" You can reference the **DataViewSetting** for a particular table by name or ordinal reference, or by passing a reference to that specific table object."},{"content":"You can access the collection of <bpt id=\"p1\">**</bpt>DataViewSetting<ept id=\"p1\">**</ept> objects in a <bpt id=\"p2\">**</bpt>DataViewManager<ept id=\"p2\">**</ept> by using the <bpt id=\"p3\">**</bpt>DataViewSettings<ept id=\"p3\">**</ept> property.","pos":[1066,1195],"source":" You can access the collection of **DataViewSetting** objects in a **DataViewManager** by using the **DataViewSettings** property."},{"content":"The following code example fills a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> with the SQL Server <bpt id=\"p2\">**</bpt>Northwind<ept id=\"p2\">**</ept> database tables <bpt id=\"p3\">**</bpt>Customers<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>Orders<ept id=\"p4\">**</ept>, and <bpt id=\"p5\">**</bpt>Order Details<ept id=\"p5\">**</ept>, creates the relationships between the tables, uses a <bpt id=\"p6\">**</bpt>DataViewManager<ept id=\"p6\">**</ept> to set default <bpt id=\"p7\">**</bpt>DataView<ept id=\"p7\">**</ept> settings, and binds a <bpt id=\"p8\">**</bpt>DataGrid<ept id=\"p8\">**</ept> to the <bpt id=\"p9\">**</bpt>DataViewManager<ept id=\"p9\">**</ept>.","pos":[1202,1512],"source":"The following code example fills a **DataSet** with the SQL Server **Northwind** database tables **Customers**, **Orders**, and **Order Details**, creates the relationships between the tables, uses a **DataViewManager** to set default **DataView** settings, and binds a **DataGrid** to the **DataViewManager**."},{"content":"The example sets the default <bpt id=\"p1\">**</bpt>DataView<ept id=\"p1\">**</ept> settings for all tables in the <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> to sort by the primary key of the table (<bpt id=\"p3\">**</bpt>ApplyDefaultSort<ept id=\"p3\">**</ept><ph id=\"ph1\"> = </ph><bpt id=\"p4\">**</bpt>true<ept id=\"p4\">**</ept>), and then modifies the sort order of the <bpt id=\"p5\">**</bpt>Customers<ept id=\"p5\">**</ept> table to sort by <bpt id=\"p6\">**</bpt>CompanyName<ept id=\"p6\">**</ept>.","pos":[1513,1760],"source":" The example sets the default **DataView** settings for all tables in the **DataSet** to sort by the primary key of the table (**ApplyDefaultSort** = **true**), and then modifies the sort order of the **Customers** table to sort by **CompanyName**."},{"pos":[5479,5487],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5641,5735],"content":"<bpt id=\"p1\">[</bpt>DataViews<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataviews.md)</ept>","source":"[DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/dataviews.md)"},{"pos":[5738,5842],"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept>","source":"[ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)"}]}