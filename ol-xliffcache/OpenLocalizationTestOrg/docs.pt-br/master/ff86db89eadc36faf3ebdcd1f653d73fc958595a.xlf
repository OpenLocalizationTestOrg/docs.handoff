<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-store-asymmetric-keys-in-a-key-container.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff86db89eadc36faf3ebdcd1f653d73fc958595a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\security\how-to-store-asymmetric-keys-in-a-key-container.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73e94732bfcce1a9693588477087ef80ec77924f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bcf9a36448e388e6b4ed47e4d5b2a2933368785</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Store Asymmetric Keys in a Key Container</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Store Asymmetric Keys in a Key Container</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Asymmetric private keys should never be stored verbatim or in plain text on the local computer.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you need to store a private key, you should use a key container.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information on key containers, see <bpt id="p1">[</bpt>Understanding Machine-Level and User-Level RSA Key Containers<ept id="p1">](https://docs.microsoft.com/previous-versions/aspnet/f5cs0acs(v=vs.100))</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create an asymmetric key and save it in a key container</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create a new instance of a <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> class and pass the name that you want to call the key container to the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName?displayProperty=nameWithType&gt;</ph> field.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Create a new instance of a class that derives from the <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> class (usually <bpt id="p1">**</bpt>RSACryptoServiceProvider<ept id="p1">**</ept> or <bpt id="p2">**</bpt>DSACryptoServiceProvider<ept id="p2">**</ept>) and pass the previously created <bpt id="p3">**</bpt>CspParameters<ept id="p3">**</ept> object to its constructor.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To delete the key from a key container</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a new instance of a <bpt id="p1">**</bpt>CspParameters<ept id="p1">**</ept> class and pass the name that you want to call the key container to the <bpt id="p2">**</bpt>CspParameters.KeyContainerName<ept id="p2">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create a new instance of a class that derives from the <bpt id="p1">**</bpt>AsymmetricAlgorithm<ept id="p1">**</ept> class (usually <bpt id="p2">**</bpt>RSACryptoServiceProvider<ept id="p2">**</ept> or <bpt id="p3">**</bpt>DSACryptoServiceProvider<ept id="p3">**</ept>) and pass the previously created <bpt id="p4">**</bpt>CspParameters<ept id="p4">**</ept> object to its constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>PersistKeyInCSP<ept id="p1">**</ept> property of the class that derives from <bpt id="p2">**</bpt>AsymmetricAlgorithm<ept id="p2">**</ept> to <bpt id="p3">**</bpt>false<ept id="p3">**</ept> (<bpt id="p4">**</bpt>False<ept id="p4">**</ept> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">**</bpt>Clear<ept id="p1">**</ept> method of the class that derives from <bpt id="p2">**</bpt>AsymmetricAlgorithm<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This method releases all resources of the class and clears the key container.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to create an asymmetric key, save it in a key container, retrieve the key at a later time, and delete the key from the container.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Notice that code in the <ph id="ph1">`GenKey_SaveInContainer`</ph> method and the <ph id="ph2">`GetKeyFromContainer`</ph> method is similar.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When you specify a key container name for a <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object and pass it to an <ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> object with the <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph> property or <ph id="ph4">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph> property set to true, the following occurs.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If a key container with the specified name does not exist, then one is created and the key is persisted.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If a key container with the specified name does exist, then the key in the container is automatically loaded into the current <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Therefore, the code in the <ph id="ph1">`GenKey_SaveInContainer`</ph> method persists the key because it is run first, while the code in the <ph id="ph2">`GetKeyFromContainer`</ph> method loads the key because it is run second.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generating Keys for Encryption and Decryption<ept id="p1">](../../../docs/standard/security/generating-keys-for-encryption-and-decryption.md)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Encrypting Data<ept id="p1">](../../../docs/standard/security/encrypting-data.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Decrypting Data<ept id="p1">](../../../docs/standard/security/decrypting-data.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Cryptographic Services<ept id="p1">](../../../docs/standard/security/cryptographic-services.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>