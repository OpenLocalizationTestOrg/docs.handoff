{"content":"---\ntitle: \"How to: Create a File or Folder - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"folders [C#]\"\n  - \"creating files [C#]\"\n  - \"files [C#]\"\n  - \"creating folders [C#]\"\nms.assetid: 4582ee2d-d72d-4687-bcb9-08d336c62c25\n---\n# How to: Create a File or Folder (C# Programming Guide)\nYou can programmatically create a folder on your computer, create a subfolder, create a file in the subfolder, and write data to the file.  \n  \n## Example  \n [!code-csharp[csFilesandFolders#10](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csFilesAndFolders/CS/FileIteration.cs#10)]  \n  \n If the folder already exists, <xref:System.IO.Directory.CreateDirectory%2A> does nothing, and no exception is thrown. However, <xref:System.IO.File.Create%2A?displayProperty=nameWithType> replaces an existing file with a new file. The example uses an `if`-`else` statement to prevent an existing file from being replaced.  \n  \n By making the following changes in the example, you can specify different outcomes based on whether a file with a certain name already exists. If such a file doesn't exist, the code creates one. If such a file exists, the code appends data to that file.  \n  \n-   Specify a non-random file name.  \n  \n    ```csharp  \n    // Comment out the following line.  \n    //string fileName = System.IO.Path.GetRandomFileName();  \n  \n    // Replace that line with the following assignment.  \n    string fileName = \"MyNewFile.txt\";  \n    ```  \n  \n-   Replace the `if`-`else` statement with the `using` statement in the following code.  \n  \n    ```csharp  \n    using (System.IO.FileStream fs = new System.IO.FileStream(pathString, FileMode.Append))   \n    {  \n        for (byte i = 0; i < 100; i++)  \n        {  \n            fs.WriteByte(i);  \n        }  \n    }  \n    ```  \n  \n Run the example several times to verify that data is added to the file each time.  \n  \n For more `FileMode` values that you can try, see <xref:System.IO.FileMode>.  \n  \n The following conditions may cause an exception:  \n  \n-   The folder name is malformed. For example, it contains illegal characters or is only white space (<xref:System.ArgumentException> class). Use the <xref:System.IO.Path> class to create valid path names.  \n  \n-   The parent folder of the folder to be created is read-only (<xref:System.IO.IOException> class).  \n  \n-   The folder name is `null` (<xref:System.ArgumentNullException> class).  \n  \n-   The folder name is too long (<xref:System.IO.PathTooLongException> class).  \n  \n-   The folder name is only a colon, \":\" (<xref:System.IO.PathTooLongException> class).  \n  \n## .NET Framework Security  \n An instance of the <xref:System.Security.SecurityException> class may be thrown in partial-trust situations.  \n  \n If you don’t have permission to create the folder, the example throws an instance of the <xref:System.UnauthorizedAccessException> class.  \n  \n## See also\n\n- <xref:System.IO?displayProperty=nameWithType>\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [File System and the Registry (C# Programming Guide)](../../../csharp/programming-guide/file-system/index.md)\n","nodes":[{"pos":[4,268],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create a File or Folder - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"folders [C#]\"\n  - \"creating files [C#]\"\n  - \"files [C#]\"\n  - \"creating folders [C#]\"\nms.assetid: 4582ee2d-d72d-4687-bcb9-08d336c62c25","nodes":[{"content":"How to: Create a File or Folder - C# Programming Guide","nodes":[{"pos":[0,54],"content":"How to: Create a File or Folder - C# Programming Guide","nodes":[{"content":"How to: Create a File or Folder - C# Programming Guide","pos":[0,54]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[275,329],"content":"How to: Create a File or Folder (C# Programming Guide)","linkify":"How to: Create a File or Folder (C# Programming Guide)","nodes":[{"content":"How to: Create a File or Folder (C# Programming Guide)","pos":[0,54]}]},{"content":"You can programmatically create a folder on your computer, create a subfolder, create a file in the subfolder, and write data to the file.","pos":[330,468]},{"pos":[477,484],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"If the folder already exists, <ph id=\"ph1\">&lt;xref:System.IO.Directory.CreateDirectory%2A&gt;</ph> does nothing, and no exception is thrown.","pos":[620,737],"source":"If the folder already exists, <xref:System.IO.Directory.CreateDirectory%2A> does nothing, and no exception is thrown."},{"content":"However, <ph id=\"ph1\">&lt;xref:System.IO.File.Create%2A?displayProperty=nameWithType&gt;</ph> replaces an existing file with a new file.","pos":[738,850],"source":" However, <xref:System.IO.File.Create%2A?displayProperty=nameWithType> replaces an existing file with a new file."},{"content":"The example uses an <ph id=\"ph1\">`if`</ph><ph id=\"ph2\">-</ph><ph id=\"ph3\">`else`</ph> statement to prevent an existing file from being replaced.","pos":[851,941],"source":" The example uses an `if`-`else` statement to prevent an existing file from being replaced."},{"content":"By making the following changes in the example, you can specify different outcomes based on whether a file with a certain name already exists.","pos":[948,1090]},{"content":"If such a file doesn't exist, the code creates one.","pos":[1091,1142]},{"content":"If such a file exists, the code appends data to that file.","pos":[1143,1201]},{"content":"Specify a non-random file name.","pos":[1211,1242]},{"pos":[1486,1569],"content":"Replace the <ph id=\"ph1\">`if`</ph><ph id=\"ph2\">-</ph><ph id=\"ph3\">`else`</ph> statement with the <ph id=\"ph4\">`using`</ph> statement in the following code.","source":"Replace the `if`-`else` statement with the `using` statement in the following code."},{"content":"Run the example several times to verify that data is added to the file each time.","pos":[1812,1893]},{"pos":[1900,1975],"content":"For more <ph id=\"ph1\">`FileMode`</ph> values that you can try, see <ph id=\"ph2\">&lt;xref:System.IO.FileMode&gt;</ph>.","source":"For more `FileMode` values that you can try, see <xref:System.IO.FileMode>."},{"content":"The following conditions may cause an exception:","pos":[1982,2030]},{"content":"The folder name is malformed.","pos":[2040,2069]},{"content":"For example, it contains illegal characters or is only white space (<ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> class).","pos":[2070,2177],"source":" For example, it contains illegal characters or is only white space (<xref:System.ArgumentException> class)."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Path&gt;</ph> class to create valid path names.","pos":[2178,2241],"source":" Use the <xref:System.IO.Path> class to create valid path names."},{"pos":[2251,2347],"content":"The parent folder of the folder to be created is read-only (<ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph> class).","source":"The parent folder of the folder to be created is read-only (<xref:System.IO.IOException> class)."},{"pos":[2357,2427],"content":"The folder name is <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">&lt;xref:System.ArgumentNullException&gt;</ph> class).","source":"The folder name is `null` (<xref:System.ArgumentNullException> class)."},{"pos":[2437,2511],"content":"The folder name is too long (<ph id=\"ph1\">&lt;xref:System.IO.PathTooLongException&gt;</ph> class).","source":"The folder name is too long (<xref:System.IO.PathTooLongException> class)."},{"pos":[2521,2604],"content":"The folder name is only a colon, \":\" (<ph id=\"ph1\">&lt;xref:System.IO.PathTooLongException&gt;</ph> class).","source":"The folder name is only a colon, \":\" (<xref:System.IO.PathTooLongException> class)."},{"pos":[2613,2636],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[2640,2748],"content":"An instance of the <ph id=\"ph1\">&lt;xref:System.Security.SecurityException&gt;</ph> class may be thrown in partial-trust situations.","source":"An instance of the <xref:System.Security.SecurityException> class may be thrown in partial-trust situations."},{"pos":[2755,2892],"content":"If you don’t have permission to create the folder, the example throws an instance of the <ph id=\"ph1\">&lt;xref:System.UnauthorizedAccessException&gt;</ph> class.","source":"If you don’t have permission to create the folder, the example throws an instance of the <xref:System.UnauthorizedAccessException> class."},{"pos":[2901,2909],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2961,3027],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[3030,3139],"content":"<bpt id=\"p1\">[</bpt>File System and the Registry (C# Programming Guide)<ept id=\"p1\">](../../../csharp/programming-guide/file-system/index.md)</ept>","source":"[File System and the Registry (C# Programming Guide)](../../../csharp/programming-guide/file-system/index.md)"}]}