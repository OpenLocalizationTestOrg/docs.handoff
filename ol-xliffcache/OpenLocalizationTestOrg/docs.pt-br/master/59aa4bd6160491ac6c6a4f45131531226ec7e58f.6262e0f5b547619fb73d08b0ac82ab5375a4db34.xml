{"content":"---\ntitle: \"Hashtable and Dictionary Collection Types | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"Hashtable class, grouping data in collections\"\n  - \"Hashtable collection type\"\n  - \"hash tables\"\n  - \"grouping data in collections, Hashtable collection type\"\n  - \"hash function\"\n  - \"collections [.NET Framework], Hashtable collection type\"\nms.assetid: bfc20837-3d02-4fc7-8a8f-c5215b6b7913\ncaps.latest.revision: 16\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Hashtable and Dictionary Collection Types\nThe <xref:System.Collections.Hashtable?displayProperty=fullName> class, and the <xref:System.Collections.Generic.Dictionary%602?displayProperty=fullName> and <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=fullName> generic classes, implement the <xref:System.Collections.IDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Generic.Dictionary%602> generic class also implements the <xref:System.Collections.Generic.IDictionary%602> generic interface. Therefore, each element in these collections is a key-and-value pair.  \n  \n A <xref:System.Collections.Hashtable> object consists of buckets that contain the elements of the collection. A bucket is a virtual subgroup of elements within the <xref:System.Collections.Hashtable>, which makes searching and retrieving easier and faster than in most collections. Each bucket is associated with a hash code, which is generated using a hash function and is based on the key of the element.  \n  \n The generic <xref:System.Collections.Generic.HashSet%601> class is an unordered collection for containing unique elements.  \n  \n A hash function is an algorithm that returns a numeric hash code based on a key. The key is the value of some property of the object being stored. A hash function must always return the same hash code for the same key. It is possible for a hash function to generate the same hash code for two different keys, but a hash function that generates a unique hash code for each unique key results in better performance when retrieving elements from the hash table.  \n  \n Each object that is used as an element in a <xref:System.Collections.Hashtable> must be able to generate a hash code for itself by using an implementation of the <xref:System.Object.GetHashCode%2A> method. However, you can also specify a hash function for all elements in a <xref:System.Collections.Hashtable> by using a <xref:System.Collections.Hashtable> constructor that accepts an <xref:System.Collections.IHashCodeProvider> implementation as one of its parameters.  \n  \n When an object is added to a <xref:System.Collections.Hashtable>, it is stored in the bucket that is associated with the hash code that matches the object's hash code. When a value is being searched for in the <xref:System.Collections.Hashtable>, the hash code is generated for that value, and the bucket associated with that hash code is searched.  \n  \n For example, a hash function for a string might take the ASCII codes of each character in the string and add them together to generate a hash code. The string \"picnic\" would have a hash code that is different from the hash code for the string \"basket\"; therefore, the strings \"picnic\" and \"basket\" would be in different buckets. In contrast, \"stressed\" and \"desserts\" would have the same hash code and would be in the same bucket.  \n  \n The <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Concurrent.ConcurrentDictionary%602>classes have the same functionality as the <xref:System.Collections.Hashtable> class. A <xref:System.Collections.Generic.Dictionary%602> of a specific type (other than <xref:System.Object>) provides better performance than a <xref:System.Collections.Hashtable> for value types. This is because the elements of <xref:System.Collections.Hashtable> are of type <xref:System.Object>; therefore, boxing and unboxing typically occur when you store or retrieve a value type. The <xref:System.Collections.Concurrent.ConcurrentDictionary%602>class should be used when multiple threads might be accessing the collection simultaneously.  \n  \n## See Also  \n <xref:System.Collections.Hashtable>   \n <xref:System.Collections.IDictionary>   \n <xref:System.Collections.IHashCodeProvider>   \n <xref:System.Collections.Generic.Dictionary%602>   \n <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>   \n <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=fullName>   \n [Commonly Used Collection Types](../../../docs/standard/collections/commonly-used-collection-types.md)","nodes":[{"pos":[12,70],"content":"Hashtable and Dictionary Collection Types | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Hashtable and Dictionary Collection Types | Microsoft Docs","pos":[0,58]}]},{"pos":[627,668],"content":"Hashtable and Dictionary Collection Types","linkify":"Hashtable and Dictionary Collection Types","nodes":[{"content":"Hashtable and Dictionary Collection Types","pos":[0,41]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Hashtable?displayProperty=fullName&gt;</ph> class, and the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.Dictionary%602?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=fullName&gt;</ph> generic classes, implement the <ph id=\"ph4\">&lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt;</ph> interface.","pos":[669,1018],"source":"The <xref:System.Collections.Hashtable?displayProperty=fullName> class, and the <xref:System.Collections.Generic.Dictionary%602?displayProperty=fullName> and <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=fullName> generic classes, implement the <xref:System.Collections.IDictionary?displayProperty=fullName> interface."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class also implements the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generic interface.","pos":[1019,1174],"source":" The <xref:System.Collections.Generic.Dictionary%602> generic class also implements the <xref:System.Collections.Generic.IDictionary%602> generic interface."},{"content":"Therefore, each element in these collections is a key-and-value pair.","pos":[1175,1244]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Collections.Hashtable&gt;</ph> object consists of buckets that contain the elements of the collection.","pos":[1251,1360],"source":"A <xref:System.Collections.Hashtable> object consists of buckets that contain the elements of the collection."},{"content":"A bucket is a virtual subgroup of elements within the <ph id=\"ph1\">&lt;xref:System.Collections.Hashtable&gt;</ph>, which makes searching and retrieving easier and faster than in most collections.","pos":[1361,1532],"source":" A bucket is a virtual subgroup of elements within the <xref:System.Collections.Hashtable>, which makes searching and retrieving easier and faster than in most collections."},{"content":"Each bucket is associated with a hash code, which is generated using a hash function and is based on the key of the element.","pos":[1533,1657]},{"content":"The generic <ph id=\"ph1\">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class is an unordered collection for containing unique elements.","pos":[1664,1786],"source":"The generic <xref:System.Collections.Generic.HashSet%601> class is an unordered collection for containing unique elements."},{"content":"A hash function is an algorithm that returns a numeric hash code based on a key.","pos":[1793,1873]},{"content":"The key is the value of some property of the object being stored.","pos":[1874,1939]},{"content":"A hash function must always return the same hash code for the same key.","pos":[1940,2011]},{"content":"It is possible for a hash function to generate the same hash code for two different keys, but a hash function that generates a unique hash code for each unique key results in better performance when retrieving elements from the hash table.","pos":[2012,2251]},{"content":"Each object that is used as an element in a <ph id=\"ph1\">&lt;xref:System.Collections.Hashtable&gt;</ph> must be able to generate a hash code for itself by using an implementation of the <ph id=\"ph2\">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> method.","pos":[2258,2463],"source":"Each object that is used as an element in a <xref:System.Collections.Hashtable> must be able to generate a hash code for itself by using an implementation of the <xref:System.Object.GetHashCode%2A> method."},{"content":"However, you can also specify a hash function for all elements in a <ph id=\"ph1\">&lt;xref:System.Collections.Hashtable&gt;</ph> by using a <ph id=\"ph2\">&lt;xref:System.Collections.Hashtable&gt;</ph> constructor that accepts an <ph id=\"ph3\">&lt;xref:System.Collections.IHashCodeProvider&gt;</ph> implementation as one of its parameters.","pos":[2464,2727],"source":" However, you can also specify a hash function for all elements in a <xref:System.Collections.Hashtable> by using a <xref:System.Collections.Hashtable> constructor that accepts an <xref:System.Collections.IHashCodeProvider> implementation as one of its parameters."},{"content":"When an object is added to a <ph id=\"ph1\">&lt;xref:System.Collections.Hashtable&gt;</ph>, it is stored in the bucket that is associated with the hash code that matches the object's hash code.","pos":[2734,2901],"source":"When an object is added to a <xref:System.Collections.Hashtable>, it is stored in the bucket that is associated with the hash code that matches the object's hash code."},{"content":"When a value is being searched for in the <ph id=\"ph1\">&lt;xref:System.Collections.Hashtable&gt;</ph>, the hash code is generated for that value, and the bucket associated with that hash code is searched.","pos":[2902,3082],"source":" When a value is being searched for in the <xref:System.Collections.Hashtable>, the hash code is generated for that value, and the bucket associated with that hash code is searched."},{"content":"For example, a hash function for a string might take the ASCII codes of each character in the string and add them together to generate a hash code.","pos":[3089,3236]},{"content":"The string \"picnic\" would have a hash code that is different from the hash code for the string \"basket\"; therefore, the strings \"picnic\" and \"basket\" would be in different buckets.","pos":[3237,3417]},{"content":"In contrast, \"stressed\" and \"desserts\" would have the same hash code and would be in the same bucket.","pos":[3418,3519]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>classes have the same functionality as the <ph id=\"ph3\">&lt;xref:System.Collections.Hashtable&gt;</ph> class.","pos":[3526,3729],"source":"The <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Concurrent.ConcurrentDictionary%602>classes have the same functionality as the <xref:System.Collections.Hashtable> class."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of a specific type (other than <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>) provides better performance than a <ph id=\"ph3\">&lt;xref:System.Collections.Hashtable&gt;</ph> for value types.","pos":[3730,3921],"source":" A <xref:System.Collections.Generic.Dictionary%602> of a specific type (other than <xref:System.Object>) provides better performance than a <xref:System.Collections.Hashtable> for value types."},{"content":"This is because the elements of <ph id=\"ph1\">&lt;xref:System.Collections.Hashtable&gt;</ph> are of type <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>; therefore, boxing and unboxing typically occur when you store or retrieve a value type.","pos":[3922,4111],"source":" This is because the elements of <xref:System.Collections.Hashtable> are of type <xref:System.Object>; therefore, boxing and unboxing typically occur when you store or retrieve a value type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>class should be used when multiple threads might be accessing the collection simultaneously.","pos":[4112,4269],"source":" The <xref:System.Collections.Concurrent.ConcurrentDictionary%602>class should be used when multiple threads might be accessing the collection simultaneously."},{"pos":[4278,4286],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Hashtable&gt;</ph>","pos":[4290,4325],"source":"<xref:System.Collections.Hashtable> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IDictionary&gt;</ph>","pos":[4330,4367],"source":" <xref:System.Collections.IDictionary> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IHashCodeProvider&gt;</ph>","pos":[4372,4415],"source":" <xref:System.Collections.IHashCodeProvider> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>","pos":[4420,4468],"source":" <xref:System.Collections.Generic.Dictionary%602> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName&gt;</ph>","pos":[4473,4547],"source":" <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=fullName&gt;</ph>","pos":[4552,4638],"source":" <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=fullName> "},{"content":"<bpt id=\"p1\"> [</bpt>Commonly Used Collection Types<ept id=\"p1\">](../../../docs/standard/collections/commonly-used-collection-types.md)</ept>","pos":[4642,4745],"source":" [Commonly Used Collection Types](../../../docs/standard/collections/commonly-used-collection-types.md)"}]}