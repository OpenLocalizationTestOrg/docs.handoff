{"content":"---\ntitle: \"Type &#39;&lt;typename&gt;&#39; cannot inherit from a type parameter | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"bc32055\"\n  - \"vbc32055\"\nhelpviewer_keywords: \n  - \"BC32055\"\nms.assetid: 97af7cad-6e40-41e3-892d-1fbcbd86356d\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Type &#39;&lt;typename&gt;&#39; cannot inherit from a type parameter\nA class or interface includes an [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md) specifying a generic type parameter.  \n  \n A type cannot inherit from a type that is not yet defined. Inheritance involves the ability to reuse members of the base class, which in turn requires that these members be defined. A generic type parameter is a placeholder that is to be replaced by a specific type supplied by a type argument. Therefore, a type cannot inherit from the placeholder.  \n  \n **Error ID:** BC32055  \n  \n## To correct this error  \n  \n-   If the inheriting type must inherit from another type, use a specific type instead of a type parameter.  \n  \n-   If the base type must be represented by a generic type parameter, no other type can inherit from it. Remove the [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md).  \n  \n## See Also  \n [NOT IN BUILD: Inheritance in Visual Basic](http://msdn.microsoft.com/en-us/e5e6e240-ed31-4657-820c-079b7c79313c)   \n [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)","nodes":[{"pos":[12,97],"content":"Type &#39;&lt;typename&gt;&#39; cannot inherit from a type parameter | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Type &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>typename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; cannot inherit from a type parameter | Microsoft Docs","pos":[0,85],"source":"Type &#39;&lt;typename&gt;&#39; cannot inherit from a type parameter | Microsoft Docs"}]},{"pos":[614,682],"content":"Type &#39;&lt;typename&gt;&#39; cannot inherit from a type parameter","linkify":"Type &#39;&lt;typename&gt;&#39; cannot inherit from a type parameter","nodes":[{"content":"Type &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>typename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; cannot inherit from a type parameter","pos":[0,68],"source":"Type &#39;&lt;typename&gt;&#39; cannot inherit from a type parameter"}]},{"pos":[683,845],"content":"A class or interface includes an <bpt id=\"p1\">[</bpt>Inherits Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/inherits-statement.md)</ept> specifying a generic type parameter.","source":"A class or interface includes an [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md) specifying a generic type parameter."},{"content":"A type cannot inherit from a type that is not yet defined.","pos":[852,910]},{"content":"Inheritance involves the ability to reuse members of the base class, which in turn requires that these members be defined.","pos":[911,1033]},{"content":"A generic type parameter is a placeholder that is to be replaced by a specific type supplied by a type argument.","pos":[1034,1146]},{"content":"Therefore, a type cannot inherit from the placeholder.","pos":[1147,1201]},{"pos":[1208,1229],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32055","source":"**Error ID:** BC32055"},{"pos":[1238,1259],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If the inheriting type must inherit from another type, use a specific type instead of a type parameter.","pos":[1269,1372]},{"content":"If the base type must be represented by a generic type parameter, no other type can inherit from it.","pos":[1382,1482]},{"content":"Remove the <bpt id=\"p1\">[</bpt>Inherits Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/inherits-statement.md)</ept>.","pos":[1483,1587],"source":" Remove the [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md)."},{"pos":[1596,1604],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>NOT IN BUILD: Inheritance in Visual Basic<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e5e6e240-ed31-4657-820c-079b7c79313c)</ept><ph id=\"ph1\"> </ph>","pos":[1608,1722],"source":"[NOT IN BUILD: Inheritance in Visual Basic](http://msdn.microsoft.com/en-us/e5e6e240-ed31-4657-820c-079b7c79313c) "},{"content":"<bpt id=\"p1\"> [</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","pos":[1725,1841],"source":" [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"}]}