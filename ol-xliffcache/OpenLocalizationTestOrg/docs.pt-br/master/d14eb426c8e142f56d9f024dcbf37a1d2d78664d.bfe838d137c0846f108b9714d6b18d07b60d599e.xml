{"content":"---\ntitle: \"Programming Pluggable Protocols\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"downloading Internet resources, pluggable protocols\"\n  - \"WebRequest class, pluggable protocols\"\n  - \"response to Internet request, pluggable protocols\"\n  - \"WebResponse class, pluggable protocols\"\n  - \"sending data, pluggable protocols\"\n  - \"network resources, pluggable protocols\"\n  - \"Internet, pluggable protocols\"\n  - \"programming pluggable protocols\"\n  - \"pluggable protocols, programming\"\n  - \"requesting data from Internet, pluggable protocols\"\n  - \"receiving data, pluggable protocols\"\n  - \"protocols, pluggable\"\nms.assetid: 66ef8456-7576-4e97-8956-959b216373db\n---\n# Programming Pluggable Protocols\nThe abstract <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes provide the base for pluggable protocols. By deriving protocol-specific classes from <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse>, an application can request data from an Internet resource and read the response without specifying the protocol being used.  \n  \n Before you can create a protocol-specific <xref:System.Net.WebRequest>, you must register its Create method. Use the static <xref:System.Net.WebRequest.RegisterPrefix%28System.String%2CSystem.Net.IWebRequestCreate%29> method of <xref:System.Net.WebRequest> to register a <xref:System.Net.WebRequest> descendant to handle a set of requests to a particular Internet scheme, to a scheme and server, or to a scheme, server, and path.  \n  \n In most cases you will be able to send and receive data using the methods and properties of the <xref:System.Net.WebRequest> class. However, if you need to access protocol-specific properties, you can typecast a <xref:System.Net.WebRequest> to a specific derived-class instance.  \n  \n To take advantage of pluggable protocols, your <xref:System.Net.WebRequest> descendants must provide a default request-and-response transaction that does not require protocol-specific properties to be set. For example, the <xref:System.Net.HttpWebRequest> class, which implements the <xref:System.Net.WebRequest> class for HTTP, provides a `GET` request by default and returns an <xref:System.Net.HttpWebResponse> that contains the stream returned from the Web server.  \n  \n## See also\n\n- [Deriving from WebRequest](../../../docs/framework/network-programming/deriving-from-webrequest.md)\n- [Deriving from WebResponse](../../../docs/framework/network-programming/deriving-from-webresponse.md)\n- [Network Programming in the .NET Framework](../../../docs/framework/network-programming/index.md)\n- [How to: Typecast a WebRequest to Access Protocol Specific Properties](../../../docs/framework/network-programming/how-to-typecast-a-webrequest-to-access-protocol-specific-properties.md)\n","nodes":[{"pos":[4,664],"embed":true,"restype":"x-metadata","content":"title: \"Programming Pluggable Protocols\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"downloading Internet resources, pluggable protocols\"\n  - \"WebRequest class, pluggable protocols\"\n  - \"response to Internet request, pluggable protocols\"\n  - \"WebResponse class, pluggable protocols\"\n  - \"sending data, pluggable protocols\"\n  - \"network resources, pluggable protocols\"\n  - \"Internet, pluggable protocols\"\n  - \"programming pluggable protocols\"\n  - \"pluggable protocols, programming\"\n  - \"requesting data from Internet, pluggable protocols\"\n  - \"receiving data, pluggable protocols\"\n  - \"protocols, pluggable\"\nms.assetid: 66ef8456-7576-4e97-8956-959b216373db","nodes":[{"content":"Programming Pluggable Protocols","nodes":[{"pos":[0,31],"content":"Programming Pluggable Protocols","nodes":[{"content":"Programming Pluggable Protocols","pos":[0,31]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[671,702],"content":"Programming Pluggable Protocols","linkify":"Programming Pluggable Protocols","nodes":[{"content":"Programming Pluggable Protocols","pos":[0,31]}]},{"content":"The abstract <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.WebResponse&gt;</ph> classes provide the base for pluggable protocols.","pos":[703,828],"source":"The abstract <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes provide the base for pluggable protocols."},{"content":"By deriving protocol-specific classes from <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.WebResponse&gt;</ph>, an application can request data from an Internet resource and read the response without specifying the protocol being used.","pos":[829,1059],"source":" By deriving protocol-specific classes from <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse>, an application can request data from an Internet resource and read the response without specifying the protocol being used."},{"content":"Before you can create a protocol-specific <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph>, you must register its Create method.","pos":[1066,1174],"source":"Before you can create a protocol-specific <xref:System.Net.WebRequest>, you must register its Create method."},{"content":"Use the static <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.RegisterPrefix%28System.String%2CSystem.Net.IWebRequestCreate%29&gt;</ph> method of <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> to register a <ph id=\"ph3\">&lt;xref:System.Net.WebRequest&gt;</ph> descendant to handle a set of requests to a particular Internet scheme, to a scheme and server, or to a scheme, server, and path.","pos":[1175,1495],"source":" Use the static <xref:System.Net.WebRequest.RegisterPrefix%28System.String%2CSystem.Net.IWebRequestCreate%29> method of <xref:System.Net.WebRequest> to register a <xref:System.Net.WebRequest> descendant to handle a set of requests to a particular Internet scheme, to a scheme and server, or to a scheme, server, and path."},{"content":"In most cases you will be able to send and receive data using the methods and properties of the <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> class.","pos":[1502,1633],"source":"In most cases you will be able to send and receive data using the methods and properties of the <xref:System.Net.WebRequest> class."},{"content":"However, if you need to access protocol-specific properties, you can typecast a <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> to a specific derived-class instance.","pos":[1634,1780],"source":" However, if you need to access protocol-specific properties, you can typecast a <xref:System.Net.WebRequest> to a specific derived-class instance."},{"content":"To take advantage of pluggable protocols, your <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> descendants must provide a default request-and-response transaction that does not require protocol-specific properties to be set.","pos":[1787,1992],"source":"To take advantage of pluggable protocols, your <xref:System.Net.WebRequest> descendants must provide a default request-and-response transaction that does not require protocol-specific properties to be set."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class, which implements the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> class for HTTP, provides a <ph id=\"ph3\">`GET`</ph> request by default and returns an <ph id=\"ph4\">&lt;xref:System.Net.HttpWebResponse&gt;</ph> that contains the stream returned from the Web server.","pos":[1993,2255],"source":" For example, the <xref:System.Net.HttpWebRequest> class, which implements the <xref:System.Net.WebRequest> class for HTTP, provides a `GET` request by default and returns an <xref:System.Net.HttpWebResponse> that contains the stream returned from the Web server."},{"pos":[2264,2272],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2276,2375],"content":"<bpt id=\"p1\">[</bpt>Deriving from WebRequest<ept id=\"p1\">](../../../docs/framework/network-programming/deriving-from-webrequest.md)</ept>","source":"[Deriving from WebRequest](../../../docs/framework/network-programming/deriving-from-webrequest.md)"},{"pos":[2378,2479],"content":"<bpt id=\"p1\">[</bpt>Deriving from WebResponse<ept id=\"p1\">](../../../docs/framework/network-programming/deriving-from-webresponse.md)</ept>","source":"[Deriving from WebResponse](../../../docs/framework/network-programming/deriving-from-webresponse.md)"},{"pos":[2482,2579],"content":"<bpt id=\"p1\">[</bpt>Network Programming in the .NET Framework<ept id=\"p1\">](../../../docs/framework/network-programming/index.md)</ept>","source":"[Network Programming in the .NET Framework](../../../docs/framework/network-programming/index.md)"},{"pos":[2582,2768],"content":"<bpt id=\"p1\">[</bpt>How to: Typecast a WebRequest to Access Protocol Specific Properties<ept id=\"p1\">](../../../docs/framework/network-programming/how-to-typecast-a-webrequest-to-access-protocol-specific-properties.md)</ept>","source":"[How to: Typecast a WebRequest to Access Protocol Specific Properties](../../../docs/framework/network-programming/how-to-typecast-a-webrequest-to-access-protocol-specific-properties.md)"}]}