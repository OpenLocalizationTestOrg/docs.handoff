{"content":"---\ntitle: \"Detecting Changes with SqlDependency | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: e6a58316-f005-4477-92e1-45cc2eb8c5b4\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Detecting Changes with SqlDependency\nA <xref:System.Data.SqlClient.SqlDependency> object can be associated with a <xref:System.Data.SqlClient.SqlCommand> in order to detect when query results differ from those originally retrieved. You can also assign a delegate to the `OnChange` event, which will fire when the results change for an associated command. You must associate the <xref:System.Data.SqlClient.SqlDependency> with the command before you execute the command. The `HasChanges` property of the <xref:System.Data.SqlClient.SqlDependency> can also be used to determine if the query results have changed since the data was first retrieved.  \n  \n## Security Considerations  \n The dependency infrastructure relies on a <xref:System.Data.SqlClient.SqlConnection> that is opened when <xref:System.Data.SqlClient.SqlDependency.Start%2A> is called in order to receive notifications that the underlying data has changed for a given command. The ability for a client to initiate the call to `SqlDependency.Start` is controlled through the use of <xref:System.Data.SqlClient.SqlClientPermission> and code access security attributes. For more information, see [Enabling Query Notifications](../../../../../docs/framework/data/adonet/sql/enabling-query-notifications.md) and [Code Access Security and ADO.NET](../../../../../docs/framework/data/adonet/code-access-security.md).  \n  \n### Example  \n The following steps illustrate how to declare a dependency, execute a command, and receive a notification when the result set changes:  \n  \n1.  Initiate a `SqlDependency` connection to the server.  \n  \n2.  Create <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> objects to connect to the server and define a Transact-SQL statement.  \n  \n3.  Create a new `SqlDependency` object, or use an existing one, and bind it to the `SqlCommand` object. Internally, this creates a <xref:System.Data.Sql.SqlNotificationRequest> object and binds it to the command object as needed. This notification request contains an internal identifier that uniquely identifies this `SqlDependency` object. It also starts the client listener if it is not already active.  \n  \n4.  Subscribe an event handler to the `OnChange` event of the `SqlDependency` object.  \n  \n5.  Execute the command using any of the `Execute` methods of the `SqlCommand` object. Because the command is bound to the notification object, the server recognizes that it must generate a notification, and the queue information will point to the dependencies queue.  \n  \n6.  Stop the `SqlDependency` connection to the server.  \n  \n If any user subsequently changes the underlying data, Microsoft SQL Server detects that there is a notification pending for such a change, and posts a notification that is processed and forwarded to the client through the underlying `SqlConnection` that was created by calling `SqlDependency.Start`. The client listener receives the invalidation message. The client listener then locates the associated `SqlDependency` object and fires the `OnChange` event.  \n  \n The following code fragment shows the design pattern you would use to create a sample application.  \n  \n```vb  \nSub Initialization()  \n    ' Create a dependency connection.  \n    SqlDependency.Start(connectionString, queueName)  \nEnd Sub  \n  \nSub SomeMethod()   \n    ' Assume connection is an open SqlConnection.  \n    ' Create a new SqlCommand object.  \n    Using command As New SqlCommand( _  \n      \"SELECT ShipperID, CompanyName, Phone FROM dbo.Shippers\", _  \n      connection)  \n  \n        ' Create a dependency and associate it with the SqlCommand.  \n        Dim dependency As New SqlDependency(command)  \n        ' Maintain the refence in a class member.  \n        ' Subscribe to the SqlDependency event.  \n        AddHandler dependency.OnChange, AddressOf OnDependencyChange  \n  \n        ' Execute the command.  \n        Using reader = command.ExecuteReader()  \n            ' Process the DataReader.  \n        End Using  \n    End Using  \nEnd Sub   \n  \n' Handler method  \nSub OnDependencyChange(ByVal sender As Object, _  \n    ByVal e As SqlNotificationEventArgs)   \n    ' Handle the event (for example, invalidate this cache entry).  \nEnd Sub  \n  \nSub Termination()  \n    ' Release the dependency  \n    SqlDependency.Stop(connectionString, queueName)  \nEnd Sub  \n```  \n  \n```csharp  \nvoid Initialization()  \n{  \n    // Create a dependency connection.  \n    SqlDependency.Start(connectionString, queueName);  \n}  \n  \nvoid SomeMethod()  \n{  \n    // Assume connection is an open SqlConnection.  \n  \n    // Create a new SqlCommand object.  \n    using (SqlCommand command=new SqlCommand(  \n        \"SELECT ShipperID, CompanyName, Phone FROM dbo.Shippers\",   \n        connection))  \n    {  \n  \n        // Create a dependency and associate it with the SqlCommand.  \n        SqlDependency dependency=new SqlDependency(command);  \n        // Maintain the refence in a class member.  \n  \n        // Subscribe to the SqlDependency event.  \n        dependency.OnChange+=new  \n           OnChangeEventHandler(OnDependencyChange);  \n  \n        // Execute the command.  \n        using (SqlDataReader reader = command.ExecuteReader())  \n        {  \n            // Process the DataReader.  \n        }  \n    }  \n}  \n  \n// Handler method  \nvoid OnDependencyChange(object sender,   \n   SqlNotificationEventArgs e )  \n{  \n  // Handle the event (for example, invalidate this cache entry).  \n}  \n  \nvoid Termination()  \n{  \n    // Release the dependency.  \n    SqlDependency.Stop(connectionString, queueName);  \n}  \n```  \n  \n## See Also  \n [Query Notifications in SQL Server](../../../../../docs/framework/data/adonet/sql/query-notifications-in-sql-server.md)   \n [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)","nodes":[{"pos":[4,367],"nodes":[{"content":"Detecting Changes with SqlDependency | Microsoft Docs","nodes":[{"pos":[0,53],"content":"Detecting Changes with SqlDependency | Microsoft Docs","nodes":[{"content":"Detecting Changes with SqlDependency | Microsoft Docs","pos":[0,53]}]}],"pos":[6,62],"yaml":true}],"content":"title: \"Detecting Changes with SqlDependency | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: e6a58316-f005-4477-92e1-45cc2eb8c5b4\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","yamlblock":true},{"pos":[374,410],"content":"Detecting Changes with SqlDependency","linkify":"Detecting Changes with SqlDependency","nodes":[{"content":"Detecting Changes with SqlDependency","pos":[0,36]}]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> object can be associated with a <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> in order to detect when query results differ from those originally retrieved.","pos":[411,605],"source":"A <xref:System.Data.SqlClient.SqlDependency> object can be associated with a <xref:System.Data.SqlClient.SqlCommand> in order to detect when query results differ from those originally retrieved."},{"content":"You can also assign a delegate to the <ph id=\"ph1\">`OnChange`</ph> event, which will fire when the results change for an associated command.","pos":[606,728],"source":" You can also assign a delegate to the `OnChange` event, which will fire when the results change for an associated command."},{"content":"You must associate the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> with the command before you execute the command.","pos":[729,843],"source":" You must associate the <xref:System.Data.SqlClient.SqlDependency> with the command before you execute the command."},{"content":"The <ph id=\"ph1\">`HasChanges`</ph> property of the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> can also be used to determine if the query results have changed since the data was first retrieved.","pos":[844,1019],"source":" The `HasChanges` property of the <xref:System.Data.SqlClient.SqlDependency> can also be used to determine if the query results have changed since the data was first retrieved."},{"pos":[1028,1051],"content":"Security Considerations","linkify":"Security Considerations","nodes":[{"content":"Security Considerations","pos":[0,23]}]},{"content":"The dependency infrastructure relies on a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is opened when <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDependency.Start%2A&gt;</ph> is called in order to receive notifications that the underlying data has changed for a given command.","pos":[1055,1313],"source":"The dependency infrastructure relies on a <xref:System.Data.SqlClient.SqlConnection> that is opened when <xref:System.Data.SqlClient.SqlDependency.Start%2A> is called in order to receive notifications that the underlying data has changed for a given command."},{"content":"The ability for a client to initiate the call to <ph id=\"ph1\">`SqlDependency.Start`</ph> is controlled through the use of <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlClientPermission&gt;</ph> and code access security attributes.","pos":[1314,1503],"source":" The ability for a client to initiate the call to `SqlDependency.Start` is controlled through the use of <xref:System.Data.SqlClient.SqlClientPermission> and code access security attributes."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Enabling Query Notifications<ept id=\"p1\">](../../../../../docs/framework/data/adonet/sql/enabling-query-notifications.md)</ept> and <bpt id=\"p2\">[</bpt>Code Access Security and ADO.NET<ept id=\"p2\">](../../../../../docs/framework/data/adonet/code-access-security.md)</ept>.","pos":[1504,1746],"source":" For more information, see [Enabling Query Notifications](../../../../../docs/framework/data/adonet/sql/enabling-query-notifications.md) and [Code Access Security and ADO.NET](../../../../../docs/framework/data/adonet/code-access-security.md)."},{"pos":[1756,1763],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following steps illustrate how to declare a dependency, execute a command, and receive a notification when the result set changes:","pos":[1767,1901]},{"pos":[1911,1963],"content":"Initiate a <ph id=\"ph1\">`SqlDependency`</ph> connection to the server.","source":"Initiate a `SqlDependency` connection to the server."},{"content":"Create <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> objects to connect to the server and define a Transact-SQL statement.","pos":[1973,2136],"source":"Create <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> objects to connect to the server and define a Transact-SQL statement."},{"content":"Create a new <ph id=\"ph1\">`SqlDependency`</ph> object, or use an existing one, and bind it to the <ph id=\"ph2\">`SqlCommand`</ph> object.","pos":[2146,2246],"source":"Create a new `SqlDependency` object, or use an existing one, and bind it to the `SqlCommand` object."},{"content":"Internally, this creates a <ph id=\"ph1\">&lt;xref:System.Data.Sql.SqlNotificationRequest&gt;</ph> object and binds it to the command object as needed.","pos":[2247,2372],"source":" Internally, this creates a <xref:System.Data.Sql.SqlNotificationRequest> object and binds it to the command object as needed."},{"content":"This notification request contains an internal identifier that uniquely identifies this <ph id=\"ph1\">`SqlDependency`</ph> object.","pos":[2373,2484],"source":" This notification request contains an internal identifier that uniquely identifies this `SqlDependency` object."},{"content":"It also starts the client listener if it is not already active.","pos":[2485,2548]},{"pos":[2558,2639],"content":"Subscribe an event handler to the <ph id=\"ph1\">`OnChange`</ph> event of the <ph id=\"ph2\">`SqlDependency`</ph> object.","source":"Subscribe an event handler to the `OnChange` event of the `SqlDependency` object."},{"content":"Execute the command using any of the <ph id=\"ph1\">`Execute`</ph> methods of the <ph id=\"ph2\">`SqlCommand`</ph> object.","pos":[2649,2731],"source":"Execute the command using any of the `Execute` methods of the `SqlCommand` object."},{"content":"Because the command is bound to the notification object, the server recognizes that it must generate a notification, and the queue information will point to the dependencies queue.","pos":[2732,2912]},{"pos":[2922,2972],"content":"Stop the <ph id=\"ph1\">`SqlDependency`</ph> connection to the server.","source":"Stop the `SqlDependency` connection to the server."},{"content":"If any user subsequently changes the underlying data, Microsoft SQL Server detects that there is a notification pending for such a change, and posts a notification that is processed and forwarded to the client through the underlying <ph id=\"ph1\">`SqlConnection`</ph> that was created by calling <ph id=\"ph2\">`SqlDependency.Start`</ph>.","pos":[2979,3278],"source":"If any user subsequently changes the underlying data, Microsoft SQL Server detects that there is a notification pending for such a change, and posts a notification that is processed and forwarded to the client through the underlying `SqlConnection` that was created by calling `SqlDependency.Start`."},{"content":"The client listener receives the invalidation message.","pos":[3279,3333]},{"content":"The client listener then locates the associated <ph id=\"ph1\">`SqlDependency`</ph> object and fires the <ph id=\"ph2\">`OnChange`</ph> event.","pos":[3334,3436],"source":" The client listener then locates the associated `SqlDependency` object and fires the `OnChange` event."},{"content":"The following code fragment shows the design pattern you would use to create a sample application.","pos":[3443,3541]},{"pos":[5956,5964],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Query Notifications in SQL Server<ept id=\"p1\">](../../../../../docs/framework/data/adonet/sql/query-notifications-in-sql-server.md)</ept><ph id=\"ph1\"> </ph>","pos":[5968,6088],"source":"[Query Notifications in SQL Server](../../../../../docs/framework/data/adonet/sql/query-notifications-in-sql-server.md) "},{"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept>","pos":[6092,6195],"source":"[ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)"}]}