{"content":"---\ntitle: \"Implicitly Typed Arrays (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"arrays [C#], implicity-typed\"\n  - \"implicitly-typed arrays [C#]\"\n  - \"C# language, implicitly typed arrays\"\nms.assetid: e05be95c-6732-403d-ae42-b35f057cbbea\ncaps.latest.revision: 13\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Implicitly Typed Arrays (C# Programming Guide)\nYou can create an implicitly-typed array in which the type of the array instance is inferred from the elements specified in the array initializer. The rules for any implicitly-typed variable also apply to implicitly-typed arrays. For more information, see [Implicitly Typed Local Variables](../../../csharp/programming-guide/classes-and-structs/implicitly-typed-local-variables.md).  \n  \n Implicitly-typed arrays are usually used in query expressions together with anonymous types and object and collection initializers.  \n  \n The following examples show how to create an implicitly-typed array:  \n  \n [!code-cs[csProgGuideLINQ#37](../../../csharp/programming-guide/arrays/codesnippet/CSharp/implicitly-typed-arrays_1.cs)]  \n  \n In the previous example, notice that with implicitly-typed arrays, no square brackets are used on the left side of the initialization statement. Note also that jagged arrays are initialized by using `new []` just like single-dimension arrays.  \n  \n## Implicitly-typed Arrays in Object Initializers  \n When you create an anonymous type that contains an array, the array must be implicitly typed in the type's object initializer. In the following example, `contacts` is an implicitly-typed array of anonymous types, each of which contains an array named `PhoneNumbers`. Note that the `var` keyword is not used inside the object initializers.  \n  \n [!code-cs[csProgGuideLINQ#38](../../../csharp/programming-guide/arrays/codesnippet/CSharp/implicitly-typed-arrays_2.cs)]  \n  \n## See Also  \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Implicitly Typed Local Variables](../../../csharp/programming-guide/classes-and-structs/implicitly-typed-local-variables.md)   \n [Arrays](../../../csharp/programming-guide/arrays/index.md)   \n [Anonymous Types](../../../csharp/programming-guide/classes-and-structs/anonymous-types.md)   \n [Object and Collection Initializers](../../../csharp/programming-guide/classes-and-structs/object-and-collection-initializers.md)   \n [var](../../../csharp/language-reference/keywords/var.md)   \n [LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)","nodes":[{"pos":[4,631],"nodes":[{"content":"Implicitly Typed Arrays (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,63],"content":"Implicitly Typed Arrays (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"Implicitly Typed Arrays (C# Programming Guide) | Microsoft Docs","pos":[0,63]}]}],"pos":[6,72],"yaml":true}],"content":"title: \"Implicitly Typed Arrays (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"arrays [C#], implicity-typed\"\n  - \"implicitly-typed arrays [C#]\"\n  - \"C# language, implicitly typed arrays\"\nms.assetid: e05be95c-6732-403d-ae42-b35f057cbbea\ncaps.latest.revision: 13\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[638,684],"content":"Implicitly Typed Arrays (C# Programming Guide)","linkify":"Implicitly Typed Arrays (C# Programming Guide)","nodes":[{"content":"Implicitly Typed Arrays (C# Programming Guide)","pos":[0,46]}]},{"content":"You can create an implicitly-typed array in which the type of the array instance is inferred from the elements specified in the array initializer.","pos":[685,831]},{"content":"The rules for any implicitly-typed variable also apply to implicitly-typed arrays.","pos":[832,914]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Implicitly Typed Local Variables<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/implicitly-typed-local-variables.md)</ept>.","pos":[915,1067],"source":" For more information, see [Implicitly Typed Local Variables](../../../csharp/programming-guide/classes-and-structs/implicitly-typed-local-variables.md)."},{"content":"Implicitly-typed arrays are usually used in query expressions together with anonymous types and object and collection initializers.","pos":[1074,1205]},{"content":"The following examples show how to create an implicitly-typed array:","pos":[1212,1280]},{"pos":[1287,1407],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideLINQ#37<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/implicitly-typed-arrays_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideLINQ#37](../../../csharp/programming-guide/arrays/codesnippet/CSharp/implicitly-typed-arrays_1.cs)]"},{"content":"In the previous example, notice that with implicitly-typed arrays, no square brackets are used on the left side of the initialization statement.","pos":[1414,1558]},{"content":"Note also that jagged arrays are initialized by using <ph id=\"ph1\">`new []`</ph> just like single-dimension arrays.","pos":[1559,1656],"source":" Note also that jagged arrays are initialized by using `new []` just like single-dimension arrays."},{"pos":[1665,1711],"content":"Implicitly-typed Arrays in Object Initializers","linkify":"Implicitly-typed Arrays in Object Initializers","nodes":[{"content":"Implicitly-typed Arrays in Object Initializers","pos":[0,46]}]},{"content":"When you create an anonymous type that contains an array, the array must be implicitly typed in the type's object initializer.","pos":[1715,1841]},{"content":"In the following example, <ph id=\"ph1\">`contacts`</ph> is an implicitly-typed array of anonymous types, each of which contains an array named <ph id=\"ph2\">`PhoneNumbers`</ph>.","pos":[1842,1981],"source":" In the following example, `contacts` is an implicitly-typed array of anonymous types, each of which contains an array named `PhoneNumbers`."},{"content":"Note that the <ph id=\"ph1\">`var`</ph> keyword is not used inside the object initializers.","pos":[1982,2053],"source":" Note that the `var` keyword is not used inside the object initializers."},{"pos":[2060,2180],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideLINQ#38<ept id=\"p2\">](../../../csharp/programming-guide/arrays/codesnippet/CSharp/implicitly-typed-arrays_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideLINQ#38](../../../csharp/programming-guide/arrays/codesnippet/CSharp/implicitly-typed-arrays_2.cs)]"},{"pos":[2189,2197],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2201,2268],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Implicitly Typed Local Variables<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/implicitly-typed-local-variables.md)</ept><ph id=\"ph1\"> </ph>","pos":[2272,2398],"source":"[Implicitly Typed Local Variables](../../../csharp/programming-guide/classes-and-structs/implicitly-typed-local-variables.md) "},{"content":"<bpt id=\"p1\">[</bpt>Arrays<ept id=\"p1\">](../../../csharp/programming-guide/arrays/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2402,2462],"source":"[Arrays](../../../csharp/programming-guide/arrays/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Anonymous Types<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/anonymous-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2466,2558],"source":"[Anonymous Types](../../../csharp/programming-guide/classes-and-structs/anonymous-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Object and Collection Initializers<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/object-and-collection-initializers.md)</ept><ph id=\"ph1\"> </ph>","pos":[2562,2692],"source":"[Object and Collection Initializers](../../../csharp/programming-guide/classes-and-structs/object-and-collection-initializers.md) "},{"content":"<bpt id=\"p1\">[</bpt>var<ept id=\"p1\">](../../../csharp/language-reference/keywords/var.md)</ept><ph id=\"ph1\"> </ph>","pos":[2696,2754],"source":"[var](../../../csharp/language-reference/keywords/var.md) "},{"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](../../../csharp/programming-guide/linq-query-expressions/index.md)</ept>","pos":[2758,2849],"source":"[LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)"}]}