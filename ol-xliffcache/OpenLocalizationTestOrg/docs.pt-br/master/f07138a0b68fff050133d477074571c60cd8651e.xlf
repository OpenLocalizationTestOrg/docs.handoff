<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-animate-the-opacity-of-an-element-or-brush.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f07138a0b68fff050133d477074571c60cd8651e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\how-to-animate-the-opacity-of-an-element-or-brush.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25a6da14b7c1c94c598e641228f2c93ded331e68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">397e7be6fbcd4dce647acc58a0c30e6bb6b2f308</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Animate the Opacity of an Element or Brush</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Animate the Opacity of an Element or Brush</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To make a framework element fade in and out of view, you can animate its <ph id="ph1">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> property or you can animate the <ph id="ph2">&lt;xref:System.Windows.Media.Brush.Opacity%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Brush&gt;</ph> (or brushes) used to paint it.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Animating the element's opacity makes it and its children fade in and out of view, but animating the brush used to paint the element enables you to be more selective about which portion of the element fades.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, you could animate the opacity of a brush used to paint a button's background.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This would cause the button's background to fade in and out of view, while leaving its text fully opaque.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Animating the <ph id="ph1">&lt;xref:System.Windows.Media.Brush.Opacity%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Media.Brush&gt;</ph> provides performance benefits over animating the <ph id="ph3">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> property of an element.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the following example, two buttons are animated so that they fade in and out of view.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Opacity of the first <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> is animated from <ph id="ph2">`1.0`</ph> to <ph id="ph3">`0.0`</ph> over a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of five seconds.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The second button is also animated, but the Opacity of the SolidColorBrush used to paint its <ph id="ph1">&lt;xref:System.Windows.Controls.Control.Background%2A&gt;</ph> is animated rather than the opacity of the entire button.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When the example is run, the first button completely fades in and out of view, while only the background of the second button fades in and out of view.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Its text and border remain fully opaque.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Code has been omitted from this example.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The full sample also shows how to animate the opacity of a <ph id="ph1">&lt;xref:System.Windows.Media.Color&gt;</ph> within a <ph id="ph2">&lt;xref:System.Windows.Media.LinearGradientBrush&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For the full sample, see the <bpt id="p1">[</bpt>Animating the Opacity of an Element Sample<ept id="p1">](https://github.com/Microsoft/WPF-Samples/tree/master/Animation/OpacityAnimation)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>