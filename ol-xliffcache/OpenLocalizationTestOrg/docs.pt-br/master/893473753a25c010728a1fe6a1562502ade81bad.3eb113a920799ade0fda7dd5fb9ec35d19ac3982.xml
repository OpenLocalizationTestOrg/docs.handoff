{"content":"---\ntitle: \"Nested Types (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"nested types [C#]\"\nms.assetid: f2e1b315-e3d1-48ce-977f-7bae0960ba99\ncaps.latest.revision: 13\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Nested Types (C# Programming Guide)\nA type defined within a [class](../../../csharp/language-reference/keywords/class.md) or [struct](../../../csharp/language-reference/keywords/struct.md) is called a nested type. For example:  \n  \n [!code-cs[csProgGuideObjects#68](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_1.cs)]  \n  \n Regardless of whether the outer type is a class or a struct, nested types default to [private](../../../csharp/language-reference/keywords/private.md), but can be made [public](../../../csharp/language-reference/keywords/public.md), protected internal, [protected](../../../csharp/language-reference/keywords/protected.md), [internal](../../../csharp/language-reference/keywords/internal.md), or [private](../../../csharp/language-reference/keywords/private.md). In the previous example, `Nested` is inaccessible to external types, but can be made public like this:  \n  \n [!code-cs[csProgGuideObjects#69](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_2.cs)]  \n  \n The nested, or inner type can access the containing, or outer type. To access the containing type, pass it as a constructor to the nested type. For example:  \n  \n [!code-cs[csProgGuideObjects#70](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_3.cs)]  \n  \n A nested type has access to all of the members that are accessible to its containing type. It can access private and protected members of the containing type, including any inherited protected members.  \n  \n In the previous declaration, the full name of class `Nested` is `Container.Nested`. This is the name used to create a new instance of the nested class, as follows:  \n  \n [!code-cs[csProgGuideObjects#71](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_4.cs)]  \n  \n## See Also  \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Classes and Structs](../../../csharp/programming-guide/classes-and-structs/index.md)   \n [Access Modifiers](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md)   \n [Constructors](../../../csharp/programming-guide/classes-and-structs/constructors.md)","nodes":[{"pos":[4,557],"nodes":[{"content":"Nested Types (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,52],"content":"Nested Types (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"Nested Types (C# Programming Guide) | Microsoft Docs","pos":[0,52]}]}],"pos":[6,61],"yaml":true}],"content":"title: \"Nested Types (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"nested types [C#]\"\nms.assetid: f2e1b315-e3d1-48ce-977f-7bae0960ba99\ncaps.latest.revision: 13\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","yamlblock":true},{"pos":[564,599],"content":"Nested Types (C# Programming Guide)","linkify":"Nested Types (C# Programming Guide)","nodes":[{"content":"Nested Types (C# Programming Guide)","pos":[0,35]}]},{"content":"A type defined within a <bpt id=\"p1\">[</bpt>class<ept id=\"p1\">](../../../csharp/language-reference/keywords/class.md)</ept> or <bpt id=\"p2\">[</bpt>struct<ept id=\"p2\">](../../../csharp/language-reference/keywords/struct.md)</ept> is called a nested type.","pos":[600,777],"source":"A type defined within a [class](../../../csharp/language-reference/keywords/class.md) or [struct](../../../csharp/language-reference/keywords/struct.md) is called a nested type."},{"content":"For example:","pos":[778,790]},{"pos":[797,922],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideObjects#68<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideObjects#68](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_1.cs)]"},{"content":"Regardless of whether the outer type is a class or a struct, nested types default to <bpt id=\"p1\">[</bpt>private<ept id=\"p1\">](../../../csharp/language-reference/keywords/private.md)</ept>, but can be made <bpt id=\"p2\">[</bpt>public<ept id=\"p2\">](../../../csharp/language-reference/keywords/public.md)</ept>, protected internal, <bpt id=\"p3\">[</bpt>protected<ept id=\"p3\">](../../../csharp/language-reference/keywords/protected.md)</ept>, <bpt id=\"p4\">[</bpt>internal<ept id=\"p4\">](../../../csharp/language-reference/keywords/internal.md)</ept>, or <bpt id=\"p5\">[</bpt>private<ept id=\"p5\">](../../../csharp/language-reference/keywords/private.md)</ept>.","pos":[929,1391],"source":"Regardless of whether the outer type is a class or a struct, nested types default to [private](../../../csharp/language-reference/keywords/private.md), but can be made [public](../../../csharp/language-reference/keywords/public.md), protected internal, [protected](../../../csharp/language-reference/keywords/protected.md), [internal](../../../csharp/language-reference/keywords/internal.md), or [private](../../../csharp/language-reference/keywords/private.md)."},{"content":"In the previous example, <ph id=\"ph1\">`Nested`</ph> is inaccessible to external types, but can be made public like this:","pos":[1392,1494],"source":" In the previous example, `Nested` is inaccessible to external types, but can be made public like this:"},{"pos":[1501,1626],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideObjects#69<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_2.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideObjects#69](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_2.cs)]"},{"content":"The nested, or inner type can access the containing, or outer type.","pos":[1633,1700]},{"content":"To access the containing type, pass it as a constructor to the nested type.","pos":[1701,1776]},{"content":"For example:","pos":[1777,1789]},{"pos":[1796,1921],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideObjects#70<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_3.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideObjects#70](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_3.cs)]"},{"content":"A nested type has access to all of the members that are accessible to its containing type.","pos":[1928,2018]},{"content":"It can access private and protected members of the containing type, including any inherited protected members.","pos":[2019,2129]},{"content":"In the previous declaration, the full name of class <ph id=\"ph1\">`Nested`</ph> is <ph id=\"ph2\">`Container.Nested`</ph>.","pos":[2136,2219],"source":"In the previous declaration, the full name of class `Nested` is `Container.Nested`."},{"content":"This is the name used to create a new instance of the nested class, as follows:","pos":[2220,2299]},{"pos":[2306,2431],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideObjects#71<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_4.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csProgGuideObjects#71](../../../csharp/programming-guide/classes-and-structs/codesnippet/CSharp/nested-types_4.cs)]"},{"pos":[2440,2448],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2452,2519],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Classes and Structs<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2523,2609],"source":"[Classes and Structs](../../../csharp/programming-guide/classes-and-structs/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Access Modifiers<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md)</ept><ph id=\"ph1\"> </ph>","pos":[2613,2707],"source":"[Access Modifiers](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md) "},{"content":"<bpt id=\"p1\">[</bpt>Constructors<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/constructors.md)</ept>","pos":[2711,2796],"source":"[Constructors](../../../csharp/programming-guide/classes-and-structs/constructors.md)"}]}