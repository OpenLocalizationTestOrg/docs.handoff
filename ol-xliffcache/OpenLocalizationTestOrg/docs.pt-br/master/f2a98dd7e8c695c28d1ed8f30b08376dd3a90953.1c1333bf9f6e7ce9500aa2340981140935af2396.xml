{"content":"---\ntitle: \"NoPersistScope Activity | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 9a0baeb7-a05c-4fac-b905-252758cb71bb\ncaps.latest.revision: 10\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# NoPersistScope Activity\nThis sample shows how to manipulate a non-serializable and disposable state within a workflow. It is important that workflows do not attempt to persist non-serializable state and it is also important for disposable objects to be cleaned up after they are used in workflow.  \n  \n## Demonstrates  \n `NoPersistScope` custom activity and designer.  \n  \n## Using the NoPersistZone activity  \n When the sample workflow runs, a custom activity called `CreateTextWriter` creates an object of type <xref:System.IO.TextWriter> and saves it into a workflow variable. <xref:System.IO.TextWriter> is an <xref:System.IDisposable> object. This <xref:System.IO.TextWriter>, which is configured to write to a file named ‘out.txt’ in the directory in which the sample runs, is used by a <xref:System.Activities.Statements.WriteLine> activity as it echoes any text you type in at the console.  \n  \n The echo logic runs within a `NoPersistScope` activity (the code for which is also part of this sample), which prevents the workflow from being persisted. If you type in `unload` at the console, the host attempts to persist the workflow instance but this operation times out because the workflow remains within a `NoPersistScope`. The workflow also utilizes a custom activity called `Dispose` to dispose the <xref:System.IO.TextWriter> object when the workflow is finished using it. The `Dispose` activity is placed within the <xref:System.Activities.Statements.TryCatch.Finally%2A> block of the <xref:System.Activities.Statements.TryCatch> activity in which the <xref:System.IO.TextWriter> variable is declared, to ensure that it runs even if an exception should occur during execution of the Try block.  \n  \n You can type in `exit` to complete the workflow instance and exit the program.  \n  \n#### To run the sample  \n  \n1.  Open the NoPersistZone.sln solution in [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)].  \n  \n2.  To build the solution, press CTRL+SHIFT+B or select **Build Solution** from the **Build** menu.  \n  \n3.  Once the build has succeeded, press F5 or select **Start Debugging** from the **Debug** menu alternatively, you can press CTRL+F5 or select **Start Without Debugging** from the **Debug** menu to run without debugging.  \n  \n#### To cleanup (optional)  \n  \n1.  To remove the SQL Instance Store, run Cleanup.cmd.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Scenario\\ActivityLibrary\\NoPersistScope`  \n  \n## See Also","nodes":[{"pos":[12,52],"content":"NoPersistScope Activity | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"NoPersistScope Activity | Microsoft Docs","pos":[0,40]}]},{"pos":[318,341],"content":"NoPersistScope Activity","linkify":"NoPersistScope Activity","nodes":[{"content":"NoPersistScope Activity","pos":[0,23]}]},{"content":"This sample shows how to manipulate a non-serializable and disposable state within a workflow.","pos":[342,436]},{"content":"It is important that workflows do not attempt to persist non-serializable state and it is also important for disposable objects to be cleaned up after they are used in workflow.","pos":[437,614]},{"pos":[623,635],"content":"Demonstrates","linkify":"Demonstrates","nodes":[{"content":"Demonstrates","pos":[0,12]}]},{"pos":[639,685],"content":"<ph id=\"ph1\">`NoPersistScope`</ph> custom activity and designer.","source":"`NoPersistScope` custom activity and designer."},{"pos":[694,726],"content":"Using the NoPersistZone activity","linkify":"Using the NoPersistZone activity","nodes":[{"content":"Using the NoPersistZone activity","pos":[0,32]}]},{"content":"When the sample workflow runs, a custom activity called <ph id=\"ph1\">`CreateTextWriter`</ph> creates an object of type <ph id=\"ph2\">&lt;xref:System.IO.TextWriter&gt;</ph> and saves it into a workflow variable.","pos":[730,897],"source":"When the sample workflow runs, a custom activity called `CreateTextWriter` creates an object of type <xref:System.IO.TextWriter> and saves it into a workflow variable."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.TextWriter&gt;</ph> is an <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> object.","pos":[898,965],"source":"<xref:System.IO.TextWriter> is an <xref:System.IDisposable> object."},{"content":"This <ph id=\"ph1\">&lt;xref:System.IO.TextWriter&gt;</ph>, which is configured to write to a file named ‘out.txt’ in the directory in which the sample runs, is used by a <ph id=\"ph2\">&lt;xref:System.Activities.Statements.WriteLine&gt;</ph> activity as it echoes any text you type in at the console.","pos":[966,1215],"source":" This <xref:System.IO.TextWriter>, which is configured to write to a file named ‘out.txt’ in the directory in which the sample runs, is used by a <xref:System.Activities.Statements.WriteLine> activity as it echoes any text you type in at the console."},{"content":"The echo logic runs within a <ph id=\"ph1\">`NoPersistScope`</ph> activity (the code for which is also part of this sample), which prevents the workflow from being persisted.","pos":[1222,1376],"source":"The echo logic runs within a `NoPersistScope` activity (the code for which is also part of this sample), which prevents the workflow from being persisted."},{"content":"If you type in <ph id=\"ph1\">`unload`</ph> at the console, the host attempts to persist the workflow instance but this operation times out because the workflow remains within a <ph id=\"ph2\">`NoPersistScope`</ph>.","pos":[1377,1552],"source":" If you type in `unload` at the console, the host attempts to persist the workflow instance but this operation times out because the workflow remains within a `NoPersistScope`."},{"content":"The workflow also utilizes a custom activity called <ph id=\"ph1\">`Dispose`</ph> to dispose the <ph id=\"ph2\">&lt;xref:System.IO.TextWriter&gt;</ph> object when the workflow is finished using it.","pos":[1553,1704],"source":" The workflow also utilizes a custom activity called `Dispose` to dispose the <xref:System.IO.TextWriter> object when the workflow is finished using it."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> activity is placed within the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.TryCatch.Finally%2A&gt;</ph> block of the <ph id=\"ph3\">&lt;xref:System.Activities.Statements.TryCatch&gt;</ph> activity in which the <ph id=\"ph4\">&lt;xref:System.IO.TextWriter&gt;</ph> variable is declared, to ensure that it runs even if an exception should occur during execution of the Try block.","pos":[1705,2026],"source":" The `Dispose` activity is placed within the <xref:System.Activities.Statements.TryCatch.Finally%2A> block of the <xref:System.Activities.Statements.TryCatch> activity in which the <xref:System.IO.TextWriter> variable is declared, to ensure that it runs even if an exception should occur during execution of the Try block."},{"pos":[2033,2111],"content":"You can type in <ph id=\"ph1\">`exit`</ph> to complete the workflow instance and exit the program.","source":"You can type in `exit` to complete the workflow instance and exit the program."},{"pos":[2122,2139],"content":"To run the sample","linkify":"To run the sample","nodes":[{"content":"To run the sample","pos":[0,17]}]},{"pos":[2149,2242],"content":"Open the NoPersistZone.sln solution in <ph id=\"ph1\">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>.","source":"Open the NoPersistZone.sln solution in [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]."},{"pos":[2252,2347],"content":"To build the solution, press CTRL+SHIFT+B or select <bpt id=\"p1\">**</bpt>Build Solution<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Build<ept id=\"p2\">**</ept> menu.","source":"To build the solution, press CTRL+SHIFT+B or select **Build Solution** from the **Build** menu."},{"pos":[2357,2574],"content":"Once the build has succeeded, press F5 or select <bpt id=\"p1\">**</bpt>Start Debugging<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Debug<ept id=\"p2\">**</ept> menu alternatively, you can press CTRL+F5 or select <bpt id=\"p3\">**</bpt>Start Without Debugging<ept id=\"p3\">**</ept> from the <bpt id=\"p4\">**</bpt>Debug<ept id=\"p4\">**</ept> menu to run without debugging.","source":"Once the build has succeeded, press F5 or select **Start Debugging** from the **Debug** menu alternatively, you can press CTRL+F5 or select **Start Without Debugging** from the **Debug** menu to run without debugging."},{"pos":[2585,2606],"content":"To cleanup (optional)","linkify":"To cleanup (optional)","nodes":[{"content":"To cleanup (optional)","pos":[0,21]}]},{"content":"To remove the SQL Instance Store, run Cleanup.cmd.","pos":[2616,2666]},{"pos":[2674,2806],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[2860,3186],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[3187,3237]},{"pos":[3332,3340],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}