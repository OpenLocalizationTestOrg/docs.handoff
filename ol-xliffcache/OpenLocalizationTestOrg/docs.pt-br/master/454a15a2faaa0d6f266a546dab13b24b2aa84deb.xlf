<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">454a15a2faaa0d6f266a546dab13b24b2aa84deb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\dataset-datatable-dataview\loading-a-dataset-from-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">694941659876926fbf437e59e774306a5d444b7a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88ce2f70b10300121fc64fafc86a5e4c82e56991</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Loading a DataSet from XML | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Loading a DataSet from XML</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The contents of an ADO.NET <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be created from an XML stream or document.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In addition, with the .NET Framework you have great flexibility over what information is loaded from XML, and how the schema or relational structure of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To fill a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with data from XML, use the <bpt id="p1">**</bpt>ReadXml<ept id="p1">**</ept> method of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ReadXml<ept id="p1">**</ept> method reads from a file, a stream, or an <bpt id="p2">**</bpt>XmlReader<ept id="p2">**</ept>, and takes as arguments the source of the XML plus an optional <bpt id="p3">**</bpt>XmlReadMode<ept id="p3">**</ept> argument.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>(For more information about the <bpt id="p1">**</bpt>XmlReader<ept id="p1">**</ept>, see <bpt id="p2">[</bpt>NIB: Reading XML Data with XmlTextReader<ept id="p2">](http://msdn.microsoft.com/en-us/762c069b-b50c-41b8-936e-39eacfb0d540)</ept>.) The <bpt id="p3">**</bpt>ReadXml<ept id="p3">**</ept> method reads the contents of the XML stream or document and loads the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with data.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It will also create the relational schema of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on the <bpt id="p1">**</bpt>XmlReadMode<ept id="p1">**</ept> specified and whether or not a relational schema already exists.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following table describes the options for the <bpt id="p1">**</bpt>XmlReadMode<ept id="p1">**</ept> argument.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Option</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Auto<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is the default.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Examines the XML and chooses the most appropriate option in the following order:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   If the XML is a DiffGram, <bpt id="p1">**</bpt>DiffGram<ept id="p1">**</ept> is used.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains a schema or the XML contains an inline schema, <bpt id="p1">**</bpt>ReadSchema<ept id="p1">**</ept> is used.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-   If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> does not contain a schema and the XML does not contain an inline schema, <bpt id="p1">**</bpt>InferSchema<ept id="p1">**</ept> is used.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you know the format of the XML being read, for best performance it is recommended that you set an explicit <bpt id="p1">**</bpt>XmlReadMode<ept id="p1">**</ept>, rather than accept the <bpt id="p2">**</bpt>Auto<ept id="p2">**</ept> default.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ReadSchema<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Reads any inline schema and loads the data and schema.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> already contains a schema, new tables are added from the inline schema to the existing schema in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If any tables in the inline schema already exist in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You will not be able to modify the schema of an existing table using <bpt id="p1">**</bpt>XmlReadMode.ReadSchema<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> does not contain a schema, and there is no inline schema, no data is read.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Inline schema can be defined using XML Schema definition language (XSD) schema.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For details about writing inline schema as XML Schema, see <bpt id="p1">[</bpt>Deriving DataSet Relational Structure from XML Schema (XSD)<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IgnoreSchema<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Ignores any inline schema and loads the data into the existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Any data that does not match the existing schema is discarded.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If no schema exists in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, no data is loaded.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the data is a DiffGram, <bpt id="p1">**</bpt>IgnoreSchema<ept id="p1">**</ept> has the same functionality as <bpt id="p2">**</bpt>DiffGram<ept id="p2">**</ept> <bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>InferSchema<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Ignores any inline schema and infers the schema per the structure of the XML data, then loads the data.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> already contains a schema, the current schema is extended by adding columns to existing tables.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Extra tables will not be added if there are not existing tables.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An exception is thrown if an inferred table already exists with a different namespace, or if any inferred columns conflict with existing columns.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For details about how <bpt id="p1">**</bpt>ReadXmlSchema<ept id="p1">**</ept> infers a schema from an XML document, see <bpt id="p2">[</bpt>Inferring DataSet Relational Structure from XML<ept id="p2">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DiffGram<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Reads a DiffGram and adds the data to the current schema.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DiffGram<ept id="p1">**</ept> merges new rows with existing rows where the unique identifier values match.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See "Merging Data from XML" at the end of this topic.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about DiffGrams, see <bpt id="p1">[</bpt>DiffGrams<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Fragment<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Continues reading multiple XML fragments until the end of the stream is reached.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Fragments that match the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema are appended to the appropriate tables.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Fragments that do not match the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema are discarded.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you pass an <bpt id="p1">**</bpt>XmlReader<ept id="p1">**</ept> to <bpt id="p2">**</bpt>ReadXml<ept id="p2">**</ept> that is positioned part of the way into an XML document, <bpt id="p3">**</bpt>ReadXml<ept id="p3">**</ept> will read to the next element node and will treat that as the root element, reading until the end of the element node only.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This does not apply if you specify <bpt id="p1">**</bpt>XmlReadMode.Fragment<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>DTD Entities</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If your XML contains entities defined in a document type definition (DTD) schema, an exception will be thrown if you attempt to load a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> by passing a file name, stream, or non-validating <bpt id="p1">**</bpt>XmlReader<ept id="p1">**</ept> to <bpt id="p2">**</bpt>ReadXml<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Instead, you must create an <bpt id="p1">**</bpt>XmlValidatingReader<ept id="p1">**</ept>, with <bpt id="p2">**</bpt>EntityHandling<ept id="p2">**</ept> set to <bpt id="p3">**</bpt>EntityHandling.ExpandEntities<ept id="p3">**</ept>, and pass your <bpt id="p4">**</bpt>XmlValidatingReader<ept id="p4">**</ept> to <bpt id="p5">**</bpt>ReadXml<ept id="p5">**</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XmlValidatingReader<ept id="p1">**</ept> will expand the entities prior to being read by the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following code examples show how to load a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> from an XML stream.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The first example shows a file name being passed to the <bpt id="p1">**</bpt>ReadXml<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The second example shows a string that contains XML being loaded using a <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you call <bpt id="p1">**</bpt>ReadXml<ept id="p1">**</ept> to load a very large file, you may encounter slow performance.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To ensure best performance for <bpt id="p1">**</bpt>ReadXml<ept id="p1">**</ept>, on a large file, call the <ph id="ph1">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> method for each table in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and then call <bpt id="p2">**</bpt>ReadXml<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Finally, call <ph id="ph1">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph> for each table in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If the XSD schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes a <bpt id="p1">**</bpt>targetNamespace<ept id="p1">**</ept>, data may not be read, and you may encounter exceptions, when calling <bpt id="p2">**</bpt>ReadXml<ept id="p2">**</ept> to load the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To read unqualified elements in this case, set <bpt id="p1">**</bpt>elementFormDefault<ept id="p1">**</ept> equal to "qualified" in your XSD schema.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Merging Data from XML</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> already contains data, the new data from the XML is added to the data already present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ReadXml<ept id="p1">**</ept> does not merge from the XML into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> any row information with matching primary keys.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To overwrite existing row information with new information from XML, use <bpt id="p1">**</bpt>ReadXml<ept id="p1">**</ept> to create a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and then <ph id="ph2">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> the new <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> into the existing <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Note that loading a DiffGram using <bpt id="p1">**</bpt>ReadXML<ept id="p1">**</ept> with an <bpt id="p2">**</bpt>XmlReadMode<ept id="p2">**</ept> of <bpt id="p3">**</bpt>DiffGram<ept id="p3">**</ept> will merge rows that have the same unique identifier.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Using XML in a DataSet<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>DiffGrams<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Deriving DataSet Relational Structure from XML Schema (XSD)<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Inferring DataSet Relational Structure from XML<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Loading DataSet Schema Information from XML<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-dataset-schema-information-from-xml.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>DataSets, DataTables, and DataViews<ept id="p1">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>