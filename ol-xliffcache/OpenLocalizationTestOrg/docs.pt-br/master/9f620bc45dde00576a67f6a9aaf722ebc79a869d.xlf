<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-ffc129d" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f620bc45dde00576a67f6a9aaf722ebc79a869d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\advanced\why-transformation-order-is-significant.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd126c6aac489c58fc1eee01166a69544eb8b3d9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b5cb0be0019706ee9b1b338904a5a55b308219a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Why Transformation Order Is Significant | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Why Transformation Order Is Significant</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A single <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object can store a single transformation or a sequence of transformations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The latter is called a composite transformation.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The matrix of a composite transformation is obtained by multiplying the matrices of individual transformations.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Composite Transform Examples</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)]</ph>, composite transformations are built from left to right.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If S, R, and T are scale, rotation, and translation matrices respectively, then the product SRT (in that order) is the matrix of the composite transformation that first scales, then rotates, then translates.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The matrix produced by the product SRT is different from the matrix produced by the product TRS.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following example combines scaling, rotation and translation (in that order) to form a composite transformation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The argument <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> passed to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.RotateTransform%2A&gt;</ph> method indicates that the rotation will follow the scaling.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Likewise, the argument <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> passed to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.TranslateTransform%2A&gt;</ph> method indicates that the translation will follow the rotation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> are members of the <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Drawing.MiscLegacyTopics#21<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscLegacyTopics/CS/Class1.cs#21)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Drawing.MiscLegacyTopics#21<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscLegacyTopics/VB/Class1.vb#21)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example makes the same method calls as the preceding example, but the order of the calls is reversed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The resulting order of operations is first translate, then rotate, then scale, which produces a very different result than first scale, then rotate, then translate.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Drawing.MiscLegacyTopics#22<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscLegacyTopics/CS/Class1.cs#22)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Drawing.MiscLegacyTopics#22<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscLegacyTopics/VB/Class1.vb#22)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>One way to reverse the order of individual transformations in a composite transformation is to reverse the order of a sequence of method calls.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A second way to control the order of operations is to change the matrix order argument.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following example is the same as the preceding example, except that <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> has been changed to <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The matrix multiplication is done in the order SRT, where S, R, and T are the matrices for scale, rotate, and translate, respectively.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The order of the composite transformation is first scale, then rotate, then translate.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Drawing.MiscLegacyTopics#23<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscLegacyTopics/CS/Class1.cs#23)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Drawing.MiscLegacyTopics#23<ept id="p4">](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscLegacyTopics/VB/Class1.vb#23)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The result of the immediately preceding example is the same as the result of the first example in this topic.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is because we reversed both the order of the method calls and the order of the matrix multiplication.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Coordinate Systems and Transformations<ept id="p1">](../../../../docs/framework/winforms/advanced/coordinate-systems-and-transformations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Using Transformations in Managed GDI+<ept id="p1">](../../../../docs/framework/winforms/advanced/using-transformations-in-managed-gdi.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>