{"content":"---\ntitle: \"'Optional' cannot be applied to the first parameter of an extension method\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc36553\"\n  - \"vbc36553\"\nhelpviewer_keywords: \n  - \"BC36553\"\nms.assetid: 8ea0b90c-f155-47a9-988b-5b8009b510af\n---\n# 'Optional' cannot be applied to the first parameter of an extension method\n'Optional' cannot be applied to the first parameter of an extension method. The first parameter specifies which type to extend.  \n  \n The first parameter of an extension method specifies the data type that the method extends. When the method is executed, the first parameter is bound to the instance of the data type that invokes the method. Therefore, the first parameter is required and cannot be optional.  \n  \n The restriction applies only to the first parameter. Other parameters can be optional or not, following the same rules as in any other method. For more information, see [Parameter List](../../visual-basic/language-reference/statements/parameter-list.md).  \n  \n **Error ID:** BC36553  \n  \n## To correct this error  \n  \n-   If you want the current first parameter to specify the data type being extended, remove the `Optional` keyword.  \n  \n-   If the current first parameter is a standard parameter to the method and you do not want it to represent the data type being extended, add a new first parameter.  \n  \n## Example  \n The first parameter in the following example is the only indication that the `Print` method extends the `String` data type. Therefore, it cannot be optional.  \n  \n```  \n<Extension()>  \nPublic Sub Print (ByVal str As String)  \n    Console.WriteLine(str)  \nEnd Sub  \n```  \n  \n When the extension method is called as follows, parameter `str` in the method is bound to `greeting`, the instance of `String` that calls `Print`. The compiler uses `greeting` as the argument to extension method `Print`.  \n  \n```  \nDim greeting As String = \"Hello\"  \ngreeting.Print()  \n```  \n  \n## See also\n\n- [Extension Methods](../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)\n- [Optional Parameters](../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)\n","nodes":[{"pos":[4,235],"embed":true,"restype":"x-metadata","content":"title: \"'Optional' cannot be applied to the first parameter of an extension method\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc36553\"\n  - \"vbc36553\"\nhelpviewer_keywords: \n  - \"BC36553\"\nms.assetid: 8ea0b90c-f155-47a9-988b-5b8009b510af","nodes":[{"content":"'Optional' cannot be applied to the first parameter of an extension method","nodes":[{"pos":[0,74],"content":"'Optional' cannot be applied to the first parameter of an extension method","nodes":[{"content":"'Optional' cannot be applied to the first parameter of an extension method","pos":[0,74]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[242,316],"content":"'Optional' cannot be applied to the first parameter of an extension method","linkify":"'Optional' cannot be applied to the first parameter of an extension method","nodes":[{"content":"'Optional' cannot be applied to the first parameter of an extension method","pos":[0,74]}]},{"content":"'Optional' cannot be applied to the first parameter of an extension method.","pos":[317,392]},{"content":"The first parameter specifies which type to extend.","pos":[393,444]},{"content":"The first parameter of an extension method specifies the data type that the method extends.","pos":[451,542]},{"content":"When the method is executed, the first parameter is bound to the instance of the data type that invokes the method.","pos":[543,658]},{"content":"Therefore, the first parameter is required and cannot be optional.","pos":[659,725]},{"content":"The restriction applies only to the first parameter.","pos":[732,784]},{"content":"Other parameters can be optional or not, following the same rules as in any other method.","pos":[785,874]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Parameter List<ept id=\"p1\">](../../visual-basic/language-reference/statements/parameter-list.md)</ept>.","pos":[875,986],"source":" For more information, see [Parameter List](../../visual-basic/language-reference/statements/parameter-list.md)."},{"pos":[993,1014],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC36553","source":"**Error ID:** BC36553"},{"pos":[1023,1044],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1054,1165],"content":"If you want the current first parameter to specify the data type being extended, remove the <ph id=\"ph1\">`Optional`</ph> keyword.","source":"If you want the current first parameter to specify the data type being extended, remove the `Optional` keyword."},{"content":"If the current first parameter is a standard parameter to the method and you do not want it to represent the data type being extended, add a new first parameter.","pos":[1175,1336]},{"pos":[1345,1352],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The first parameter in the following example is the only indication that the <ph id=\"ph1\">`Print`</ph> method extends the <ph id=\"ph2\">`String`</ph> data type.","pos":[1356,1479],"source":"The first parameter in the following example is the only indication that the `Print` method extends the `String` data type."},{"content":"Therefore, it cannot be optional.","pos":[1480,1513]},{"content":"When the extension method is called as follows, parameter <ph id=\"ph1\">`str`</ph> in the method is bound to <ph id=\"ph2\">`greeting`</ph>, the instance of <ph id=\"ph3\">`String`</ph> that calls <ph id=\"ph4\">`Print`</ph>.","pos":[1631,1777],"source":"When the extension method is called as follows, parameter `str` in the method is bound to `greeting`, the instance of `String` that calls `Print`."},{"content":"The compiler uses <ph id=\"ph1\">`greeting`</ph> as the argument to extension method <ph id=\"ph2\">`Print`</ph>.","pos":[1778,1851],"source":" The compiler uses `greeting` as the argument to extension method `Print`."},{"pos":[1929,1937],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1941,2048],"content":"<bpt id=\"p1\">[</bpt>Extension Methods<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)</ept>","source":"[Extension Methods](../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)"},{"pos":[2051,2162],"content":"<bpt id=\"p1\">[</bpt>Optional Parameters<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)</ept>","source":"[Optional Parameters](../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)"}]}