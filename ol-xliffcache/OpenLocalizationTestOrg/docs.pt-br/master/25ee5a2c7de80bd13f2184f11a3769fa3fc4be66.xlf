<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="textelement-content-model-overview.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25ee5a2c7de80bd13f2184f11a3769fa3fc4be66</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\advanced\textelement-content-model-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f98405eb9dc8673bded78fad89d87eac34052d2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0edefcc85a3b26fe84b96250fb5babdabd081508</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>TextElement Content Model Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TextElement Content Model Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This content model overview describes the supported content for a              <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The              <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> class is a type of              <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A content model describes what objects/elements can be contained in others.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This overview summarizes the content model used for objects derived from              <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see              <bpt id="p1">[</bpt>Flow Document Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/flow-document-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Content Model Diagram</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following diagram summarizes the content model for classes derived from                  <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> as well as how other non-                 <ph id="ph2">`TextElement`</ph> classes fit into this model.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram: Flow content containment schema<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/flow-content-schema.png "</bpt>Flow_Content_Schema<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As can be seen from the preceding diagram, the children allowed for an element are not necessarily determined by whether a class is derived from the                  <ph id="ph1">&lt;xref:System.Windows.Documents.Block&gt;</ph> class or an                  <ph id="ph2">&lt;xref:System.Windows.Documents.Inline&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, a                  <ph id="ph1">&lt;xref:System.Windows.Documents.Span&gt;</ph> (an                  <ph id="ph2">&lt;xref:System.Windows.Documents.Inline&gt;</ph>-derived class) can only have                  <ph id="ph3">&lt;xref:System.Windows.Documents.Inline&gt;</ph> child elements, but a                  <ph id="ph4">&lt;xref:System.Windows.Documents.Figure&gt;</ph> (also an                  <ph id="ph5">&lt;xref:System.Windows.Documents.Inline&gt;</ph>-derived class) can only have                  <ph id="ph6">&lt;xref:System.Windows.Documents.Block&gt;</ph> child elements.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Therefore, a diagram is useful for quickly determining what element can be contained in another.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As an example, let's use the diagram to determine how to construct the flow content of a                  <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A                          <ph id="ph1">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> must contain a                          <ph id="ph2">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> which in turn must contain a                          <ph id="ph3">&lt;xref:System.Windows.Documents.Block&gt;</ph>-derived object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following is the corresponding segment from the preceding diagram.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram: RichTextBox containment rules<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/flow-ovw-schemawalkthrough1.png "</bpt>Flow_Ovw_SchemaWalkThrough1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Thus far, this is what the markup might look like.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>FlowOvwSnippets_snip#SchemaWalkThrough1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/FlowOvwSnippets_snip/CS/MiscSnippets.xaml#schemawalkthrough1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>According to the diagram, there are several                          <ph id="ph1">&lt;xref:System.Windows.Documents.Block&gt;</ph> elements to choose from including                          <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>,                          <ph id="ph3">&lt;xref:System.Windows.Documents.Section&gt;</ph>,                          <ph id="ph4">&lt;xref:System.Windows.Documents.Table&gt;</ph>,                          <ph id="ph5">&lt;xref:System.Windows.Documents.List&gt;</ph>, and                          <ph id="ph6">&lt;xref:System.Windows.Documents.BlockUIContainer&gt;</ph> (see Block-derived classes in the preceding diagram).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Let's say we want a                          <ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>According to the preceding diagram, a                          <ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> contains a                          <ph id="ph2">&lt;xref:System.Windows.Documents.TableRowGroup&gt;</ph> containing                          <ph id="ph3">&lt;xref:System.Windows.Documents.TableRow&gt;</ph> elements, which contain                          <ph id="ph4">&lt;xref:System.Windows.Documents.TableCell&gt;</ph> elements which contain a                          <ph id="ph5">&lt;xref:System.Windows.Documents.Block&gt;</ph>-derived object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following is the corresponding segment for                          <ph id="ph1">&lt;xref:System.Windows.Documents.Table&gt;</ph> taken from the preceding diagram.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram: Parent&amp;#47;child schema for Table<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/flow-ovw-schemawalkthrough2.png "</bpt>Flow_Ovw_SchemaWalkThrough2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following is the corresponding markup.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>FlowOvwSnippets_snip#SchemaWalkThrough2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/FlowOvwSnippets_snip/CS/MiscSnippets.xaml#schemawalkthrough2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Again, one or more                          <ph id="ph1">&lt;xref:System.Windows.Documents.Block&gt;</ph> elements are required underneath a                          <ph id="ph2">&lt;xref:System.Windows.Documents.TableCell&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To make it simple, let's place some text inside the cell.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>We can do this using a                          <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> with a                          <ph id="ph2">&lt;xref:System.Windows.Documents.Run&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following is the corresponding segments from the diagram showing that a                          <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph> can take an                          <ph id="ph2">&lt;xref:System.Windows.Documents.Inline&gt;</ph> element and that a                          <ph id="ph3">&lt;xref:System.Windows.Documents.Run&gt;</ph> (an                          <ph id="ph4">&lt;xref:System.Windows.Documents.Inline&gt;</ph> element) can only take plain text.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram: Parent&amp;#47;child schema for Paragraph<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/flow-ovw-schemawalkthrough3.png "</bpt>Flow_Ovw_SchemaWalkThrough3<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram: Parent&amp;#47;Child schema for Run<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/advanced/media/flow-ovw-schemawalkthrough4.png "</bpt>Flow_Ovw_SchemaWalkThrough4<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following is the entire example in markup.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>FlowOvwSnippets_snip#SchemaExampleWholePage<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/FlowOvwSnippets_snip/CS/SchemaExample.xaml#schemaexamplewholepage)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Working with TextElement Content Programmatically</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The contents of a                  <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> is made up by collections and so programmatically manipulating the contents of                  <ph id="ph2">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> objects is done by working with these collections.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>There are three different collections used by                  <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> -derived classes:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.InlineCollection&gt;</ph>: Represents a collection of                          <ph id="ph2">&lt;xref:System.Windows.Documents.Inline&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.InlineCollection&gt;</ph> defines the allowable child content of the                          <ph id="ph2">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>,                          <ph id="ph3">&lt;xref:System.Windows.Documents.Span&gt;</ph>, and                          <ph id="ph4">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.BlockCollection&gt;</ph>: Represents a collection of                          <ph id="ph2">&lt;xref:System.Windows.Documents.Block&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.BlockCollection&gt;</ph> defines the allowable child content of the                          <ph id="ph2">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>,                          <ph id="ph3">&lt;xref:System.Windows.Documents.Section&gt;</ph>,                          <ph id="ph4">&lt;xref:System.Windows.Documents.ListItem&gt;</ph>,                          <ph id="ph5">&lt;xref:System.Windows.Documents.TableCell&gt;</ph>,                          <ph id="ph6">&lt;xref:System.Windows.Documents.Floater&gt;</ph>, and                          <ph id="ph7">&lt;xref:System.Windows.Documents.Figure&gt;</ph> elements.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.ListItemCollection&gt;</ph>: A flow content element that represents a particular content item in an ordered or unordered                          <ph id="ph2">&lt;xref:System.Windows.Documents.List&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can manipulate (add or remove items) from these collections using the respective properties of                  <bpt id="p1">**</bpt>Inlines<ept id="p1">**</ept>,                  <bpt id="p2">**</bpt>Blocks<ept id="p2">**</ept>, and                  <bpt id="p3">**</bpt>ListItems<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following examples show how to manipulate the contents of a Span using the                  <bpt id="p1">**</bpt>Inlines<ept id="p1">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Table uses several collections to manipulate its contents, but they are not covered here.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see                      <bpt id="p1">[</bpt>Table Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/table-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following example creates a new                  <ph id="ph1">&lt;xref:System.Windows.Documents.Span&gt;</ph> object, and then uses the                  <ph id="ph2">`Add`</ph> method to add two text runs as content children of the                  <ph id="ph3">&lt;xref:System.Windows.Documents.Span&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>SpanSnippets#_SpanInlinesAdd<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_spaninlinesadd)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>SpanSnippets#_SpanInlinesAdd<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_spaninlinesadd)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following example creates a new                  <ph id="ph1">&lt;xref:System.Windows.Documents.Run&gt;</ph> element and inserts it at the beginning of the                  <ph id="ph2">&lt;xref:System.Windows.Documents.Span&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>SpanSnippets#_SpanInlinesInsert<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_spaninlinesinsert)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>SpanSnippets#_SpanInlinesInsert<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_spaninlinesinsert)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following example deletes the last                  <ph id="ph1">&lt;xref:System.Windows.Documents.Inline&gt;</ph> element in the                  <ph id="ph2">&lt;xref:System.Windows.Documents.Span&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>SpanSnippets#_SpanInlinesRemoveLast<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_spaninlinesremovelast)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>SpanSnippets#_SpanInlinesRemoveLast<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_spaninlinesremovelast)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example clears all of the contents (                 <ph id="ph1">&lt;xref:System.Windows.Documents.Inline&gt;</ph> elements) from the                  <ph id="ph2">&lt;xref:System.Windows.Documents.Span&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>SpanSnippets#_SpanInlinesClear<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_spaninlinesclear)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>SpanSnippets#_SpanInlinesClear<ept id="p2">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_spaninlinesclear)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Types That Share This Content Model</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following types inherit from the                  <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph> class and may be used to display the content described in this overview.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.Bold&gt;</ph>,                  <ph id="ph2">&lt;xref:System.Windows.Documents.Figure&gt;</ph>,                  <ph id="ph3">&lt;xref:System.Windows.Documents.Floater&gt;</ph>,                  <ph id="ph4">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph>,                  <ph id="ph5">&lt;xref:System.Windows.Documents.InlineUIContainer&gt;</ph>,                  <ph id="ph6">&lt;xref:System.Windows.Documents.Italic&gt;</ph>,                  <ph id="ph7">&lt;xref:System.Windows.Documents.LineBreak&gt;</ph>,                  <ph id="ph8">&lt;xref:System.Windows.Documents.List&gt;</ph>,                  <ph id="ph9">&lt;xref:System.Windows.Documents.ListItem&gt;</ph>,                  <ph id="ph10">&lt;xref:System.Windows.Documents.Paragraph&gt;</ph>,                  <ph id="ph11">&lt;xref:System.Windows.Documents.Run&gt;</ph>,                  <ph id="ph12">&lt;xref:System.Windows.Documents.Section&gt;</ph>,                  <ph id="ph13">&lt;xref:System.Windows.Documents.Span&gt;</ph>,                  <ph id="ph14">&lt;xref:System.Windows.Documents.Table&gt;</ph>,                  <ph id="ph15">&lt;xref:System.Windows.Documents.Underline&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Note that this list only includes nonabstract types distributed with the                  <ph id="ph1">[!INCLUDE[TLA2#tla_winfxsdk](../../../../includes/tla2sharptla-winfxsdk-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You may use other types that inherit from                  <ph id="ph1">&lt;xref:System.Windows.Documents.TextElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Types That Can Contain TextElement Objects</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>See                  <bpt id="p1">[</bpt>WPF Content Model<ept id="p1">](../../../../docs/framework/wpf/controls/wpf-content-model.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulate a FlowDocument through the Blocks Property<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-manipulate-a-flowdocument-through-the-blocks-property.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulate Flow Content Elements through the Blocks Property<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-manipulate-flow-content-elements-through-the-blocks-property.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulate a FlowDocument through the Blocks Property<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-manipulate-a-flowdocument-through-the-blocks-property.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulate a Table's Columns through the Columns Property<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-manipulate-table-columns-through-the-columns-property.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulate a Table's Row Groups through the RowGroups Property<ept id="p1">](../../../../docs/framework/wpf/advanced/how-to-manipulate-table-row-groups-through-the-rowgroups-property.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>