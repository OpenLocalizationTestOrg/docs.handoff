{"content":"---\ntitle: \"How to: Access Objects Bound to Windows Forms DataGridView Rows\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"object binding [Windows Forms], accessing bound objects\"\n  - \"data grids [Windows Forms], accessing bound objects\"\n  - \"DataGridView control [Windows Forms], accessing objects bound to rows\"\nms.assetid: 0e05748f-4403-4eb8-8b2f-b098108181b5\n---\n# How to: Access Objects Bound to Windows Forms DataGridView Rows\nSometimes it is useful to display a table of information stored in a collection of business objects. When you bind a <xref:System.Windows.Forms.DataGridView> control to such a collection, each public property is displayed in its own column unless the property has been marked non-browsable with a <xref:System.ComponentModel.BrowsableAttribute>. For example, a collection of `Customer` objects would have columns such as **Name** and **Address**.  \n  \n If these objects contain additional information and code that you want to access, you can reach it through row objects. In the following code example, users can select multiple rows and click a button to send an invoice to each of the corresponding customers.  \n  \n### To access row-bound objects  \n  \n-   Use the <xref:System.Windows.Forms.DataGridViewRow.DataBoundItem%2A?displayProperty=nameWithType> property.  \n  \n     [!code-csharp[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/CS/datagridviewobjectbinding.cs#10)]\n     [!code-vb[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/VB/datagridviewobjectbinding.vb#10)]  \n  \n## Example  \n The complete code example includes a simple `Customer` implementation and binds the <xref:System.Windows.Forms.DataGridView> to an <xref:System.Collections.ArrayList> containing a few `Customer` objects. The <xref:System.Windows.Forms.Control.Click> event handler of the <xref:System.Windows.Forms.Button?displayProperty=nameWithType> must access the `Customer` objects through the rows, because the customer collection is not accessible outside the <xref:System.Windows.Forms.Form.Load?displayProperty=nameWithType> event handler.  \n  \n [!code-csharp[System.Windows.Forms.DataGridViewObjectBinding#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/CS/datagridviewobjectbinding.cs#00)]\n [!code-vb[System.Windows.Forms.DataGridViewObjectBinding#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/VB/datagridviewobjectbinding.vb#00)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project.  \n  \n## See also\n\n- <xref:System.Windows.Forms.DataGridView>\n- <xref:System.Windows.Forms.DataGridViewRow>\n- <xref:System.Windows.Forms.DataGridViewRow.DataBoundItem%2A?displayProperty=nameWithType>\n- [Displaying Data in the Windows Forms DataGridView Control](displaying-data-in-the-windows-forms-datagridview-control.md)\n- [How to: Bind Objects to Windows Forms DataGridView Controls](how-to-bind-objects-to-windows-forms-datagridview-controls.md)\n","nodes":[{"pos":[4,399],"embed":true,"restype":"x-metadata","content":"title: \"How to: Access Objects Bound to Windows Forms DataGridView Rows\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"object binding [Windows Forms], accessing bound objects\"\n  - \"data grids [Windows Forms], accessing bound objects\"\n  - \"DataGridView control [Windows Forms], accessing objects bound to rows\"\nms.assetid: 0e05748f-4403-4eb8-8b2f-b098108181b5","nodes":[{"content":"How to: Access Objects Bound to Windows Forms DataGridView Rows","nodes":[{"pos":[0,63],"content":"How to: Access Objects Bound to Windows Forms DataGridView Rows","nodes":[{"content":"How to: Access Objects Bound to Windows Forms DataGridView Rows","pos":[0,63]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[406,469],"content":"How to: Access Objects Bound to Windows Forms DataGridView Rows","linkify":"How to: Access Objects Bound to Windows Forms DataGridView Rows","nodes":[{"content":"How to: Access Objects Bound to Windows Forms DataGridView Rows","pos":[0,63]}]},{"content":"Sometimes it is useful to display a table of information stored in a collection of business objects.","pos":[470,570]},{"content":"When you bind a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to such a collection, each public property is displayed in its own column unless the property has been marked non-browsable with a <ph id=\"ph2\">&lt;xref:System.ComponentModel.BrowsableAttribute&gt;</ph>.","pos":[571,815],"source":" When you bind a <xref:System.Windows.Forms.DataGridView> control to such a collection, each public property is displayed in its own column unless the property has been marked non-browsable with a <xref:System.ComponentModel.BrowsableAttribute>."},{"content":"For example, a collection of <ph id=\"ph1\">`Customer`</ph> objects would have columns such as <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Address<ept id=\"p2\">**</ept>.","pos":[816,916],"source":" For example, a collection of `Customer` objects would have columns such as **Name** and **Address**."},{"content":"If these objects contain additional information and code that you want to access, you can reach it through row objects.","pos":[923,1042]},{"content":"In the following code example, users can select multiple rows and click a button to send an invoice to each of the corresponding customers.","pos":[1043,1182]},{"pos":[1192,1219],"content":"To access row-bound objects","linkify":"To access row-bound objects","nodes":[{"content":"To access row-bound objects","pos":[0,27]}]},{"pos":[1229,1336],"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridViewRow.DataBoundItem%2A?displayProperty=nameWithType&gt;</ph> property.","source":"Use the <xref:System.Windows.Forms.DataGridViewRow.DataBoundItem%2A?displayProperty=nameWithType> property."},{"pos":[1347,1744],"content":"[!code-csharp[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/CS/datagridviewobjectbinding.cs#10)]\n [!code-vb[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/VB/datagridviewobjectbinding.vb#10)]","leadings":["","    "],"nodes":[]},{"pos":[1753,1760],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The complete code example includes a simple <ph id=\"ph1\">`Customer`</ph> implementation and binds the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> to an <ph id=\"ph3\">&lt;xref:System.Collections.ArrayList&gt;</ph> containing a few <ph id=\"ph4\">`Customer`</ph> objects.","pos":[1764,1967],"source":"The complete code example includes a simple `Customer` implementation and binds the <xref:System.Windows.Forms.DataGridView> to an <xref:System.Collections.ArrayList> containing a few `Customer` objects."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Button?displayProperty=nameWithType&gt;</ph> must access the <ph id=\"ph3\">`Customer`</ph> objects through the rows, because the customer collection is not accessible outside the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.Load?displayProperty=nameWithType&gt;</ph> event handler.","pos":[1968,2295],"source":" The <xref:System.Windows.Forms.Control.Click> event handler of the <xref:System.Windows.Forms.Button?displayProperty=nameWithType> must access the `Customer` objects through the rows, because the customer collection is not accessible outside the <xref:System.Windows.Forms.Form.Load?displayProperty=nameWithType> event handler."},{"pos":[2704,2722],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[2726,2748]},{"content":"References to the System and System.Windows.Forms assemblies.","pos":[2758,2819]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[2826,3180],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[3181,3269]},{"pos":[3278,3286],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3471,3592],"content":"<bpt id=\"p1\">[</bpt>Displaying Data in the Windows Forms DataGridView Control<ept id=\"p1\">](displaying-data-in-the-windows-forms-datagridview-control.md)</ept>","source":"[Displaying Data in the Windows Forms DataGridView Control](displaying-data-in-the-windows-forms-datagridview-control.md)"},{"pos":[3595,3719],"content":"<bpt id=\"p1\">[</bpt>How to: Bind Objects to Windows Forms DataGridView Controls<ept id=\"p1\">](how-to-bind-objects-to-windows-forms-datagridview-controls.md)</ept>","source":"[How to: Bind Objects to Windows Forms DataGridView Controls](how-to-bind-objects-to-windows-forms-datagridview-controls.md)"}]}