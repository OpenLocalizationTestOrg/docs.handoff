{"content":"---\ntitle: \"AddFile Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink.AddFile\"\n  - \"AddFile\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"AddFile\"\nhelpviewer_keywords: \n  - \"AddFile method\"\nms.assetid: 9e707abb-f905-4568-9356-12aa21d1b11c\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# AddFile Method\nAdds files to the assembly. Can also be used to create unbound modules.  \n  \n## Syntax  \n  \n```  \nHRESULT AddFile(  \n    mdAssembly      AssemblyID,  \n    LPCWSTR         pszFilename,  \n    DWORD           dwFlags,  \n    IMetaDataEmit*  pEmitter,  \n    mdFile*         pFileToken  \n) PURE;  \n```  \n  \n## Parameters  \n `AssemblyID`  \n Unique ID of the assembly to be augmented.  \n  \n `pszFilename`  \n Fully qualified name of file to be added.  \n  \n `dwFlags`  \n COM+ FileDef flags such as `ffContainsNoMetaData` and `ffWriteable`. `dwFlags` is passed to [DefineFile Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-definefile-method.md).  \n  \n `pEmitter`  \n [IMetaDataEmit Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataemit-interface.md) interface to be used to emit metadata, if necessary.  \n  \n `pFileToken`  \n Pointer to where the unique ID of the added file will be stored.  \n  \n## Return Value  \n Returns S_OK if the method succeeds.  \n  \n## Requirements  \n Requires alink.h.  \n  \n## See also\n\n- [IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)\n- [IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)\n- [ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)\n","nodes":[{"pos":[4,330],"embed":true,"restype":"x-metadata","content":"title: \"AddFile Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IALink.AddFile\"\n  - \"AddFile\"\napi_location: \n  - \"alink.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"AddFile\"\nhelpviewer_keywords: \n  - \"AddFile method\"\nms.assetid: 9e707abb-f905-4568-9356-12aa21d1b11c\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"AddFile Method","nodes":[{"pos":[0,14],"content":"AddFile Method","nodes":[{"content":"AddFile Method","pos":[0,14]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[337,351],"content":"AddFile Method","linkify":"AddFile Method","nodes":[{"content":"AddFile Method","pos":[0,14]}]},{"content":"Adds files to the assembly.","pos":[352,379]},{"content":"Can also be used to create unbound modules.","pos":[380,423]},{"pos":[432,438],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[656,666],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Unique ID of the assembly to be augmented.","pos":[686,728]},{"content":"Fully qualified name of file to be added.","pos":[752,793]},{"content":"COM+ FileDef flags such as <ph id=\"ph1\">`ffContainsNoMetaData`</ph> and <ph id=\"ph2\">`ffWriteable`</ph>.","pos":[813,881],"source":"COM+ FileDef flags such as `ffContainsNoMetaData` and `ffWriteable`."},{"content":"<ph id=\"ph1\">`dwFlags`</ph> is passed to <bpt id=\"p1\">[</bpt>DefineFile Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-definefile-method.md)</ept>.","pos":[882,1019],"source":"`dwFlags` is passed to [DefineFile Method](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-definefile-method.md)."},{"content":"<bpt id=\"p1\">[</bpt>IMetaDataEmit Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataemit-interface.md)</ept> interface to be used to emit metadata, if necessary.","pos":[1040,1196],"source":"[IMetaDataEmit Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataemit-interface.md) interface to be used to emit metadata, if necessary."},{"content":"Pointer to where the unique ID of the added file will be stored.","pos":[1219,1283]},{"pos":[1292,1304],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"Returns S_OK if the method succeeds.","pos":[1308,1344]},{"pos":[1353,1365],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"Requires alink.h.","pos":[1369,1386]},{"pos":[1395,1403],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1407,1493],"content":"<bpt id=\"p1\">[</bpt>IALink Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)</ept>","source":"[IALink Interface](../../../../docs/framework/unmanaged-api/alink/ialink-interface.md)"},{"pos":[1496,1584],"content":"<bpt id=\"p1\">[</bpt>IALink2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)</ept>","source":"[IALink2 Interface](../../../../docs/framework/unmanaged-api/alink/ialink2-interface.md)"},{"pos":[1587,1655],"content":"<bpt id=\"p1\">[</bpt>ALink API<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/alink/index.md)</ept>","source":"[ALink API](../../../../docs/framework/unmanaged-api/alink/index.md)"}]}