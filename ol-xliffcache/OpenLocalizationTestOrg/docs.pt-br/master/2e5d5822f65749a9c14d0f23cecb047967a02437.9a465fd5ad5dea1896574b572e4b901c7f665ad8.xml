{"content":"---\ntitle: \"How to: Display Milliseconds in Date and Time Values | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"DateTime.ToString method\"\n  - \"displaying date and time data\"\n  - \"time [.NET Framework], milliseconds\"\n  - \"dates [.NET Framework], milliseconds\"\n  - \"milliseconds [.NET Framework]\"\nms.assetid: ae1a0610-90b9-4877-8eb6-4e30bc5e00cf\ncaps.latest.revision: 6\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# How to: Display Milliseconds in Date and Time Values\nThe default date and time formatting methods, such as <xref:System.DateTime.ToString?displayProperty=fullName>, include the hours, minutes, and seconds of a time value but exclude its milliseconds component. This topic shows how to include a date and time's millisecond component in formatted date and time strings.  \n  \n### To display the millisecond component of a DateTime value  \n  \n1.  If you are working with the string representation of a date, convert it to a <xref:System.DateTime> or a <xref:System.DateTimeOffset> value by using the static <xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName> or <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName> method.  \n  \n2.  To extract the string representation of a time's millisecond component, call the date and time value's <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> or <xref:System.DateTimeOffset.ToString%2A> method, and pass the `fff` or `FFF` custom format pattern either alone or with other custom format specifiers as the `format` parameter.  \n  \n## Example  \n The example displays the millisecond component of a <xref:System.DateTime> and a <xref:System.DateTimeOffset> value to the console, both alone and included in a longer date and time string.  \n  \n [!code-csharp[Formatting.HowTo.Millisecond#1](../../../samples/snippets/csharp/VS_Snippets_CLR/Formatting.HowTo.Millisecond/cs/Millisecond.cs#1)]\n [!code-vb[Formatting.HowTo.Millisecond#1](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Formatting.HowTo.Millisecond/vb/Millisecond.vb#1)]  \n  \n The `fff` format pattern includes any trailing zeros in the millisecond value. The `FFF` format pattern suppresses them. The difference is illustrated in the following example.  \n  \n [!code-csharp[Formatting.HowTo.Millisecond#2](../../../samples/snippets/csharp/VS_Snippets_CLR/Formatting.HowTo.Millisecond/cs/Millisecond.cs#2)]\n [!code-vb[Formatting.HowTo.Millisecond#2](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Formatting.HowTo.Millisecond/vb/Millisecond.vb#2)]  \n  \n A problem with defining a complete custom format specifier that includes the millisecond component of a date and time is that it defines a hard-coded format that may not correspond to the arrangement of time elements in the application's current culture. A better alternative is to retrieve one of the date and time display patterns defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object and modify it to include milliseconds. The example also illustrates this approach. It retrieves the current culture's full date and time pattern from the <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A?displayProperty=fullName> property, and then inserts the custom pattern `.ffff` after its seconds pattern. Note that the example uses a regular expression to perform this operation in a single method call.  \n  \n You can also use a custom format specifier to display a fractional part of seconds other than milliseconds. For example, the `f` or `F` custom format specifier displays tenths of a second, the `ff` or `FF` custom format specifier displays hundredths of a second, and the `ffff` or `FFFF` custom format specifier displays ten thousandths of a second. Fractional parts of a millisecond are truncated instead of rounded in the returned string. These format specifiers are used in the following example.  \n  \n [!code-csharp[Formatting.HowTo.Millisecond#3](../../../samples/snippets/csharp/VS_Snippets_CLR/Formatting.HowTo.Millisecond/cs/Millisecond.cs#3)]\n [!code-vb[Formatting.HowTo.Millisecond#3](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Formatting.HowTo.Millisecond/vb/Millisecond.vb#3)]  \n  \n> [!NOTE]\n>  It is possible to display very small fractional units of a second, such as ten thousandths of a second or hundred-thousandths of a second. However, these values may not be meaningful. The precision of date and time values depends on the resolution of the system clock. On Windows NT 3.5 and later, and [!INCLUDE[windowsver](../../../includes/windowsver-md.md)] operating systems, the clock's resolution is approximately 10-15 milliseconds.  \n  \n## Compiling the Code  \n Compile the code at the command line using csc.exe or vb.exe. To compile the code in [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)], put it in a console application project template.  \n  \n## See Also  \n <xref:System.Globalization.DateTimeFormatInfo>   \n [Custom Date and Time Format Strings](../../../docs/standard/base-types/custom-date-and-time-format-strings.md)","nodes":[{"pos":[12,81],"content":"How to: Display Milliseconds in Date and Time Values | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Display Milliseconds in Date and Time Values | Microsoft Docs","pos":[0,69]}]},{"pos":[582,634],"content":"How to: Display Milliseconds in Date and Time Values","linkify":"How to: Display Milliseconds in Date and Time Values","nodes":[{"content":"How to: Display Milliseconds in Date and Time Values","pos":[0,52]}]},{"content":"The default date and time formatting methods, such as <ph id=\"ph1\">&lt;xref:System.DateTime.ToString?displayProperty=fullName&gt;</ph>, include the hours, minutes, and seconds of a time value but exclude its milliseconds component.","pos":[635,842],"source":"The default date and time formatting methods, such as <xref:System.DateTime.ToString?displayProperty=fullName>, include the hours, minutes, and seconds of a time value but exclude its milliseconds component."},{"content":"This topic shows how to include a date and time's millisecond component in formatted date and time strings.","pos":[843,950]},{"pos":[960,1016],"content":"To display the millisecond component of a DateTime value","linkify":"To display the millisecond component of a DateTime value","nodes":[{"content":"To display the millisecond component of a DateTime value","pos":[0,56]}]},{"content":"If you are working with the string representation of a date, convert it to a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> or a <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value by using the static <ph id=\"ph3\">&lt;xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName&gt;</ph> method.","pos":[1026,1348],"source":"If you are working with the string representation of a date, convert it to a <xref:System.DateTime> or a <xref:System.DateTimeOffset> value by using the static <xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName> or <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName> method."},{"pos":[1358,1717],"content":"To extract the string representation of a time's millisecond component, call the date and time value's <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method, and pass the <ph id=\"ph3\">`fff`</ph> or <ph id=\"ph4\">`FFF`</ph> custom format pattern either alone or with other custom format specifiers as the <ph id=\"ph5\">`format`</ph> parameter.","source":"To extract the string representation of a time's millisecond component, call the date and time value's <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> or <xref:System.DateTimeOffset.ToString%2A> method, and pass the `fff` or `FFF` custom format pattern either alone or with other custom format specifiers as the `format` parameter."},{"pos":[1726,1733],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The example displays the millisecond component of a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> and a <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value to the console, both alone and included in a longer date and time string.","pos":[1737,1926],"source":"The example displays the millisecond component of a <xref:System.DateTime> and a <xref:System.DateTimeOffset> value to the console, both alone and included in a longer date and time string."},{"pos":[1933,2226],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>Formatting.HowTo.Millisecond#1<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/Formatting.HowTo.Millisecond/cs/Millisecond.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>Formatting.HowTo.Millisecond#1<ept id=\"p4\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Formatting.HowTo.Millisecond/vb/Millisecond.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[Formatting.HowTo.Millisecond#1](../../../samples/snippets/csharp/VS_Snippets_CLR/Formatting.HowTo.Millisecond/cs/Millisecond.cs#1)]\n [!code-vb[Formatting.HowTo.Millisecond#1](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Formatting.HowTo.Millisecond/vb/Millisecond.vb#1)]"},{"content":"The <ph id=\"ph1\">`fff`</ph> format pattern includes any trailing zeros in the millisecond value.","pos":[2233,2311],"source":"The `fff` format pattern includes any trailing zeros in the millisecond value."},{"content":"The <ph id=\"ph1\">`FFF`</ph> format pattern suppresses them.","pos":[2312,2353],"source":" The `FFF` format pattern suppresses them."},{"content":"The difference is illustrated in the following example.","pos":[2354,2409]},{"pos":[2416,2709],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>Formatting.HowTo.Millisecond#2<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/Formatting.HowTo.Millisecond/cs/Millisecond.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>Formatting.HowTo.Millisecond#2<ept id=\"p4\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Formatting.HowTo.Millisecond/vb/Millisecond.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[Formatting.HowTo.Millisecond#2](../../../samples/snippets/csharp/VS_Snippets_CLR/Formatting.HowTo.Millisecond/cs/Millisecond.cs#2)]\n [!code-vb[Formatting.HowTo.Millisecond#2](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Formatting.HowTo.Millisecond/vb/Millisecond.vb#2)]"},{"content":"A problem with defining a complete custom format specifier that includes the millisecond component of a date and time is that it defines a hard-coded format that may not correspond to the arrangement of time elements in the application's current culture.","pos":[2716,2970]},{"content":"A better alternative is to retrieve one of the date and time display patterns defined by the current culture's <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object and modify it to include milliseconds.","pos":[2971,3174],"source":" A better alternative is to retrieve one of the date and time display patterns defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object and modify it to include milliseconds."},{"content":"The example also illustrates this approach.","pos":[3175,3218]},{"content":"It retrieves the current culture's full date and time pattern from the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A?displayProperty=fullName&gt;</ph> property, and then inserts the custom pattern <ph id=\"ph2\">`.ffff`</ph> after its seconds pattern.","pos":[3219,3465],"source":" It retrieves the current culture's full date and time pattern from the <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A?displayProperty=fullName> property, and then inserts the custom pattern `.ffff` after its seconds pattern."},{"content":"Note that the example uses a regular expression to perform this operation in a single method call.","pos":[3466,3564]},{"content":"You can also use a custom format specifier to display a fractional part of seconds other than milliseconds.","pos":[3571,3678]},{"content":"For example, the <ph id=\"ph1\">`f`</ph> or <ph id=\"ph2\">`F`</ph> custom format specifier displays tenths of a second, the <ph id=\"ph3\">`ff`</ph> or <ph id=\"ph4\">`FF`</ph> custom format specifier displays hundredths of a second, and the <ph id=\"ph5\">`ffff`</ph> or <ph id=\"ph6\">`FFFF`</ph> custom format specifier displays ten thousandths of a second.","pos":[3679,3920],"source":" For example, the `f` or `F` custom format specifier displays tenths of a second, the `ff` or `FF` custom format specifier displays hundredths of a second, and the `ffff` or `FFFF` custom format specifier displays ten thousandths of a second."},{"content":"Fractional parts of a millisecond are truncated instead of rounded in the returned string.","pos":[3921,4011]},{"content":"These format specifiers are used in the following example.","pos":[4012,4070]},{"pos":[4077,4370],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>Formatting.HowTo.Millisecond#3<ept id=\"p2\">](../../../samples/snippets/csharp/VS_Snippets_CLR/Formatting.HowTo.Millisecond/cs/Millisecond.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>Formatting.HowTo.Millisecond#3<ept id=\"p4\">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Formatting.HowTo.Millisecond/vb/Millisecond.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[Formatting.HowTo.Millisecond#3](../../../samples/snippets/csharp/VS_Snippets_CLR/Formatting.HowTo.Millisecond/cs/Millisecond.cs#3)]\n [!code-vb[Formatting.HowTo.Millisecond#3](../../../samples/snippets/visualbasic/VS_Snippets_CLR/Formatting.HowTo.Millisecond/vb/Millisecond.vb#3)]"},{"pos":[4378,4828],"content":"[!NOTE]\n It is possible to display very small fractional units of a second, such as ten thousandths of a second or hundred-thousandths of a second. However, these values may not be meaningful. The precision of date and time values depends on the resolution of the system clock. On Windows NT 3.5 and later, and [!INCLUDE[windowsver](../../../includes/windowsver-md.md)] operating systems, the clock's resolution is approximately 10-15 milliseconds.","leadings":["","> "],"nodes":[{"content":" It is possible to display very small fractional units of a second, such as ten thousandths of a second or hundred-thousandths of a second. However, these values may not be meaningful. The precision of date and time values depends on the resolution of the system clock. On Windows NT 3.5 and later, and [!INCLUDE[windowsver](../../../includes/windowsver-md.md)] operating systems, the clock's resolution is approximately 10-15 milliseconds.","pos":[8,448],"nodes":[{"content":"It is possible to display very small fractional units of a second, such as ten thousandths of a second or hundred-thousandths of a second.","pos":[1,139]},{"content":"However, these values may not be meaningful.","pos":[140,184]},{"content":"The precision of date and time values depends on the resolution of the system clock.","pos":[185,269]},{"content":"On Windows NT 3.5 and later, and <ph id=\"ph1\">[!INCLUDE[windowsver](../../../includes/windowsver-md.md)]</ph> operating systems, the clock's resolution is approximately 10-15 milliseconds.","pos":[270,440],"source":" On Windows NT 3.5 and later, and [!INCLUDE[windowsver](../../../includes/windowsver-md.md)] operating systems, the clock's resolution is approximately 10-15 milliseconds."}]}]},{"pos":[4837,4855],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"Compile the code at the command line using csc.exe or vb.exe.","pos":[4859,4920]},{"content":"To compile the code in <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)]</ph>, put it in a console application project template.","pos":[4921,5045],"source":" To compile the code in [!INCLUDE[vsprvs](../../../includes/vsprvs-md.md)], put it in a console application project template."},{"pos":[5054,5062],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>Custom Date and Time Format Strings<ept id=\"p1\">](../../../docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>","pos":[5116,5228],"source":" [Custom Date and Time Format Strings](../../../docs/standard/base-types/custom-date-and-time-format-strings.md)"}]}