{"content":"---\ntitle: \"How to: Find Sibling Nodes (XPath-LINQ to XML) (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: e2c73d10-a8ca-4e11-b5aa-d055de285874\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\n---\n# How to: Find Sibling Nodes (XPath-LINQ to XML) (C#)\nYou might want to find all siblings of a node that have a specific name. The resulting collection might include the context node if the context node also has the specific name.  \n  \n The XPath expression is:  \n  \n `../Book`  \n  \n## Example  \n This example first finds a `Book` element, and then finds all sibling elements named `Book`. The resulting collection includes the context node.  \n  \n This example uses the following XML document: [Sample XML File: Books (LINQ to XML)](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-books-linq-to-xml.md).  \n  \n```csharp  \nXDocument books = XDocument.Load(\"Books.xml\");  \n  \nXElement book =   \n    books  \n    .Root  \n    .Elements(\"Book\")  \n    .Skip(1)  \n    .First();  \n  \n// LINQ to XML query  \nIEnumerable<XElement> list1 =  \n    book  \n    .Parent  \n    .Elements(\"Book\");  \n  \n// XPath expression  \nIEnumerable<XElement> list2 = book.XPathSelectElements(\"../Book\");  \n  \nif (list1.Count() == list2.Count() &&  \n        list1.Intersect(list2).Count() == list1.Count())  \n    Console.WriteLine(\"Results are identical\");  \nelse  \n    Console.WriteLine(\"Results differ\");  \nforeach (XElement el in list1)  \n    Console.WriteLine(el);  \n```  \n  \n This example produces the following output:  \n  \n```  \nResults are identical  \n<Book id=\"bk101\">  \n  <Author>Garghentini, Davide</Author>  \n  <Title>XML Developer's Guide</Title>  \n  <Genre>Computer</Genre>  \n  <Price>44.95</Price>  \n  <PublishDate>2000-10-01</PublishDate>  \n  <Description>An in-depth look at creating applications   \n      with XML.</Description>  \n</Book>  \n<Book id=\"bk102\">  \n  <Author>Garcia, Debra</Author>  \n  <Title>Midnight Rain</Title>  \n  <Genre>Fantasy</Genre>  \n  <Price>5.95</Price>  \n  <PublishDate>2000-12-16</PublishDate>  \n  <Description>A former architect battles corporate zombies,   \n      an evil sorceress, and her own childhood to become queen   \n      of the world.</Description>  \n</Book>  \n```  \n  \n## See Also  \n [LINQ to XML for XPath Users (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)","nodes":[{"pos":[12,80],"content":"How to: Find Sibling Nodes (XPath-LINQ to XML) (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Find Sibling Nodes (XPath-LINQ to XML) (C#) | Microsoft Docs","pos":[0,68]}]},{"pos":[365,416],"content":"How to: Find Sibling Nodes (XPath-LINQ to XML) (C#)","linkify":"How to: Find Sibling Nodes (XPath-LINQ to XML) (C#)","nodes":[{"content":"How to: Find Sibling Nodes (XPath-LINQ to XML) (C#)","pos":[0,51]}]},{"content":"You might want to find all siblings of a node that have a specific name.","pos":[417,489]},{"content":"The resulting collection might include the context node if the context node also has the specific name.","pos":[490,593]},{"content":"The XPath expression is:","pos":[600,624]},{"pos":[649,656],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example first finds a <ph id=\"ph1\">`Book`</ph> element, and then finds all sibling elements named <ph id=\"ph2\">`Book`</ph>.","pos":[660,752],"source":"This example first finds a `Book` element, and then finds all sibling elements named `Book`."},{"content":"The resulting collection includes the context node.","pos":[753,804]},{"pos":[811,985],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Books (LINQ to XML)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-books-linq-to-xml.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Books (LINQ to XML)](../../../../csharp/programming-guide/concepts/linq/sample-xml-file-books-linq-to-xml.md)."},{"content":"This example produces the following output:","pos":[1629,1672]},{"pos":[2376,2384],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2388,2505],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML for XPath Users (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept>","source":"[LINQ to XML for XPath Users (C#)](../../../../csharp/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)"}]}