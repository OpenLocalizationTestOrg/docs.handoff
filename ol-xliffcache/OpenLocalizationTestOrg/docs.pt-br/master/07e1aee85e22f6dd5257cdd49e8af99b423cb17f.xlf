<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="whats-new-in-wif.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07e1aee85e22f6dd5257cdd49e8af99b423cb17f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\security\whats-new-in-wif.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">123048e84fb0729132598a93edaac5fcf08bdaaf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7971024fc52e5a101c1552ea2e354c619a6fe5c9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>What's New in Windows Identity Foundation 4.5</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>What's New in Windows Identity Foundation 4.5</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The first version of Windows Identity Foundation (WIF) shipped as a standalone download and is known as WIF 3.5 because it was introduced in the .NET 3.5 SP1 timeframe.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Starting with .NET 4.5, WIF is part of the .NET framework.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Having the WIF classes directly available in the framework allows for a much deeper integration of claims-based identity in .NET, making it easier to use claims.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Applications written for WIF 3.5 will need to be modified in order to take advantage of the new model; for information, see <bpt id="p1">[</bpt>Guidelines for Migrating an Application Built Using WIF 3.5 to WIF 4.5<ept id="p1">](../../../docs/framework/security/guidelines-for-migrating-an-application-built-using-wif-3-5-to-wif-4-5.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Below you can find some highlights of the main changes.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>WIF Is Now Part of the .NET Framework</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>WIF classes are now spread across several assemblies, the main ones being <ph id="ph1">`mscorlib`</ph>, <ph id="ph2">`System.IdentityModel`</ph>, <ph id="ph3">`System.IdentityModel.Services`</ph>, and <ph id="ph4">`System.ServiceModel`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Likewise, the WIF classes are spread across several namespaces: <ph id="ph1">&lt;xref:System.Security.Claims?displayProperty=nameWithType&gt;</ph>, several <bpt id="p1">[</bpt>System.IdentityModel<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=272004)</ept> namespaces, and <ph id="ph2">&lt;xref:System.ServiceModel.Security?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims?displayProperty=nameWithType&gt;</ph> namespace contains the new <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> classes (see below).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>All principals in .NET now derive from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more detailed information about the WIF namespaces and the kinds of classes that they contain, see <bpt id="p1">[</bpt>WIF API Reference<ept id="p1">](../../../docs/framework/security/wif-api-reference.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For information about how namespaces map between WIF 3.5 and WIF 4.5, see <bpt id="p1">[</bpt>Namespace Mapping between WIF 3.5 and WIF 4.5<ept id="p1">](../../../docs/framework/security/namespace-mapping-between-wif-3-5-and-wif-4-5.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>New Claims Model and Principal Object</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Claims are at the very core of the .NET Framework 4.5.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The base claim classes (<ph id="ph1">&lt;xref:System.Security.Claims.Claim&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Claims.ClaimTypes&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.Claims.ClaimValueTypes&gt;</ph>) all live directly in <ph id="ph6">`mscorlib`</ph> in the <ph id="ph7">&lt;xref:System.Security.Claims?displayProperty=nameWithType&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is no longer necessary to use interfaces in order to plug claims into the .NET identity system: <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Principal.GenericPrincipal&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.Security.RolePrincipal&gt;</ph> now inherit from <ph id="ph4">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>; and <ph id="ph5">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>, <ph id="ph6">&lt;xref:System.Security.Principal.GenericIdentity&gt;</ph>, and <ph id="ph7">&lt;xref:System.Web.Security.FormsIdentity&gt;</ph> now inherit from <ph id="ph8">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In short, every principal class will now serve claims.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The WIF 3.5 integration classes and interfaces (<ph id="ph1">`WindowsClaimsIdentity`</ph>, <ph id="ph2">`WindowsClaimsPrincipal`</ph>, <ph id="ph3">`IClaimsPrincipal`</ph>, <ph id="ph4">`IClaimsIdentity`</ph>) have thus been removed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> class now exposes methods which make it easier to query the identity’s claims collection.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Changes to the WIF 4.5 Visual Studio Experience</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add STS Reference …<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Visual Studio functionality (cmdline utility FedUtil) no longer exists; instead you can use the new Visual Studio extension <bpt id="p1">**</bpt>Identity and Access Tool for Visual Studio 2012<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This allows you to federate with an existing STS or use LocalSTS to test your solutions.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>After installing the extension you can right-click on your project and look for <bpt id="p1">**</bpt>Identity and Access<ept id="p1">**</ept> in the context menu.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The ASP.NET and STS templates are no longer provided as claims can be used directly in existing project templates for ASP.Net, web sites, and WCF.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The controls in the <ph id="ph1">`Microsoft.IdentityModel.Web.Controls`</ph> namespace (<ph id="ph2">`SignInControl`</ph>, <ph id="ph3">`FederatedPassiveSignInControl`</ph>, and <ph id="ph4">`FederatedPassiveSignInStatus`</ph>) are not carried over into WIF 4.5.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Changes to the WIF 4.5 API</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In general, claims related classes are in the <ph id="ph1">&lt;xref:System.Security.Claims?displayProperty=nameWithType&gt;</ph> namespace; WCF related classes –- service contracts, channels, channel factories, and service hosts that are used for WS-Trust scenarios -- are in <ph id="ph2">&lt;xref:System.ServiceModel.Security?displayProperty=nameWithType&gt;</ph>; and all other WIF classes are spread across various <bpt id="p1">[</bpt>System.IdentityModel<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=272004)</ept> namespaces – these include, for example, classes that represent WS-* and SAML artifacts, token handlers and related classes, and classes used in WS-Federation scenarios.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Namespace Mapping between WIF 3.5 and WIF 4.5<ept id="p1">](../../../docs/framework/security/namespace-mapping-between-wif-3-5-and-wif-4-5.md)</ept> and <bpt id="p2">[</bpt>WIF API Reference<ept id="p2">](../../../docs/framework/security/wif-api-reference.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Machine key has been enabled for use in session cookies for web farm scenarios.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WIF and Web Farms<ept id="p1">](../../../docs/framework/security/wif-and-web-farms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You now declaratively configure WIF under the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>system.identityModel&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/system-identitymodel.md)</ept> and <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>system.identityModel.services&gt;<ept id="p2">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/system-identitymodel-services.md)</ept> elements.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information about WIF configuration, see <bpt id="p1">[</bpt>WIF Configuration Reference<ept id="p1">](../../../docs/framework/security/wif-configuration-reference.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Other notable .NET changes or features that are caused by the integration of WIF into .NET</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The potential for performing claims-based authorization (CBAC) is now integral to the .NET framework.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can configure a <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> object and then use the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> classes to perform imperative and declarative access checks in your code.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CBAC provides more flexibility and greater granularity than traditional role-based access checks (RBAC).</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>It also allows greater separation of authorization policy from business logic because the business logic can base the access check on a specific claim or set of claims and the authorization policy for those claims can be configured declaratively under the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>claimsAuthorizationManager&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>WCF changes as a result of WIF integration:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The WCF claims-based identity model is superseded by WIF.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This means that classes in the <ph id="ph1">&lt;xref:System.IdentityModel.Claims?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Policy?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.IdentityModel.Selectors?displayProperty=nameWithType&gt;</ph> namespaces should be dropped in favor of using WIF classes.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>WIF is now enabled on a WCF service by specifying the <ph id="ph1">`useIdentityConfiguration`</ph> attribute on the <ph id="ph2">`&lt;system.serviceModel&gt;`</ph><ph id="ph3">/</ph><ph id="ph4">`&lt;behaviors&gt;`</ph><ph id="ph5">/</ph><ph id="ph6">`&lt;serviceBehaviors&gt;`</ph><ph id="ph7">/</ph><ph id="ph8">`&lt;serviceCredentials&gt;`</ph> element as in the following XML:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">**</bpt>Identity and Access Tool for Visual Studio 2012<ept id="p1">**</ept> (see <bpt id="p2">**</bpt>Changes to the Visual Studio Experience<ept id="p2">**</ept> above), the tool adds a <ph id="ph1">`&lt;serviceCredentials&gt;`</ph> element with the <ph id="ph2">`useIdentityConfiguration`</ph> attribute set to the configuration file for you.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It also adds a corresponding <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>system.identityModel&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/windows-identity-foundation/system-identitymodel.md)</ept> element that contains the WIF configuration settings and adds a binding and other settings necessary to outsource authentication to your chosen STS.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guidelines for Migrating an Application Built Using WIF 3.5 to WIF 4.5<ept id="p1">](../../../docs/framework/security/guidelines-for-migrating-an-application-built-using-wif-3-5-to-wif-4-5.md)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Namespace Mapping between WIF 3.5 and WIF 4.5<ept id="p1">](../../../docs/framework/security/namespace-mapping-between-wif-3-5-and-wif-4-5.md)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WIF API Reference<ept id="p1">](../../../docs/framework/security/wif-api-reference.md)</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WIF Configuration Reference<ept id="p1">](../../../docs/framework/security/wif-configuration-reference.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>