{"content":"---\ntitle: \"Serializing with an XML Declaration (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: c237fa4a-a042-40fd-886f-17b54c66bb75\ncaps.latest.revision: 3\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Serializing with an XML Declaration (C#)\nThis topic describes how to control whether serialization generates an XML declaration.  \n  \n## XML Declaration Generation  \n Serializing to a <xref:System.IO.File> or a <xref:System.IO.TextWriter> using the <xref:System.Xml.Linq.XElement.Save%2A?displayProperty=fullName> method or the <xref:System.Xml.Linq.XDocument.Save%2A?displayProperty=fullName> method generates an XML declaration. When you serialize to an <xref:System.Xml.XmlWriter>, the writer settings (specified in an <xref:System.Xml.XmlWriterSettings> object) determine whether an XML declaration is generated or not.  \n  \n If you are serializing to a string using the `ToString` method, the resulting XML will not include an XML declaration.  \n  \n### Serializing with an XML Declaration  \n The following example creates an <xref:System.Xml.Linq.XElement>, saves the document to a file, and then prints the file to the console:  \n  \n```csharp  \nXElement root = new XElement(\"Root\",  \n    new XElement(\"Child\", \"child content\")  \n);  \nroot.Save(\"Root.xml\");  \nstring str = File.ReadAllText(\"Root.xml\");  \nConsole.WriteLine(str);  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<Root>  \n  <Child>child content</Child>  \n</Root>  \n```  \n  \n### Serializing without an XML Declaration  \n The following example shows how to save an <xref:System.Xml.Linq.XElement> to an <xref:System.Xml.XmlWriter>.  \n  \n```csharp  \nStringBuilder sb = new StringBuilder();  \nXmlWriterSettings xws = new XmlWriterSettings();  \nxws.OmitXmlDeclaration = true;  \n  \nusing (XmlWriter xw = XmlWriter.Create(sb, xws)) {  \n    XElement root = new XElement(\"Root\",  \n        new XElement(\"Child\", \"child content\")  \n    );  \n    root.Save(xw);  \n}  \nConsole.WriteLine(sb.ToString());  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root><Child>child content</Child></Root>  \n```  \n  \n## See Also  \n [Serializing XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/serializing-xml-trees.md)","nodes":[{"pos":[12,69],"content":"Serializing with an XML Declaration (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Serializing with an XML Declaration (C#) | Microsoft Docs","pos":[0,57]}]},{"pos":[428,468],"content":"Serializing with an XML Declaration (C#)","linkify":"Serializing with an XML Declaration (C#)","nodes":[{"content":"Serializing with an XML Declaration (C#)","pos":[0,40]}]},{"content":"This topic describes how to control whether serialization generates an XML declaration.","pos":[469,556]},{"pos":[565,591],"content":"XML Declaration Generation","linkify":"XML Declaration Generation","nodes":[{"content":"XML Declaration Generation","pos":[0,26]}]},{"content":"Serializing to a <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> or a <ph id=\"ph2\">&lt;xref:System.IO.TextWriter&gt;</ph> using the <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XElement.Save%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph4\">&lt;xref:System.Xml.Linq.XDocument.Save%2A?displayProperty=fullName&gt;</ph> method generates an XML declaration.","pos":[595,858],"source":"Serializing to a <xref:System.IO.File> or a <xref:System.IO.TextWriter> using the <xref:System.Xml.Linq.XElement.Save%2A?displayProperty=fullName> method or the <xref:System.Xml.Linq.XDocument.Save%2A?displayProperty=fullName> method generates an XML declaration."},{"content":"When you serialize to an <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, the writer settings (specified in an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object) determine whether an XML declaration is generated or not.","pos":[859,1051],"source":" When you serialize to an <xref:System.Xml.XmlWriter>, the writer settings (specified in an <xref:System.Xml.XmlWriterSettings> object) determine whether an XML declaration is generated or not."},{"pos":[1058,1176],"content":"If you are serializing to a string using the <ph id=\"ph1\">`ToString`</ph> method, the resulting XML will not include an XML declaration.","source":"If you are serializing to a string using the `ToString` method, the resulting XML will not include an XML declaration."},{"pos":[1186,1221],"content":"Serializing with an XML Declaration","linkify":"Serializing with an XML Declaration","nodes":[{"content":"Serializing with an XML Declaration","pos":[0,35]}]},{"content":"The following example creates an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, saves the document to a file, and then prints the file to the console:","pos":[1225,1361],"source":"The following example creates an <xref:System.Xml.Linq.XElement>, saves the document to a file, and then prints the file to the console:"},{"content":"This example produces the following output:","pos":[1574,1617]},{"pos":[1738,1776],"content":"Serializing without an XML Declaration","linkify":"Serializing without an XML Declaration","nodes":[{"content":"Serializing without an XML Declaration","pos":[0,38]}]},{"content":"The following example shows how to save an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> to an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[1780,1889],"source":"The following example shows how to save an <xref:System.Xml.Linq.XElement> to an <xref:System.Xml.XmlWriter>."},{"content":"This example produces the following output:","pos":[2261,2304]},{"pos":[2375,2383],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2387,2492],"content":"<bpt id=\"p1\">[</bpt>Serializing XML Trees (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/serializing-xml-trees.md)</ept>","source":"[Serializing XML Trees (C#)](../../../../csharp/programming-guide/concepts/linq/serializing-xml-trees.md)"}]}