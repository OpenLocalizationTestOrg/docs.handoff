<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="whats-new-in-wf-in-dotnet.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2eff11ad1631dd971a2ffdfb3aeb383cd6f6bb3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\whats-new-in-wf-in-dotnet.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b84813b62edf1bf61cf7341d9740566bdc4afa77</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07e7f7e2a62b5f6df40c03ed129136b20260806d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>What&amp;#39;s New in Windows Workflow Foundation in .NET 4.5 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>What&amp;#39;s New in Windows Workflow Foundation in .NET 4.5</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>in <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> introduces many new features, such as new activities, designer capabilities, and workflow development models.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Many, but not all, of the new workflow features introduced in <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> are supported in the re-hosted workflow designer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> the new features that are supported, see <bpt id="p1">[</bpt>Support for New Workflow Foundation 4.5 Features in the Rehosted Workflow Designer<ept id="p1">](../../../docs/framework/windows-workflow-foundation/wf-features-in-the-rehosted-workflow-designer.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> migrating .NET 3.0 and .NET 3.5 workflow applications to use the latest version, see <bpt id="p1">[</bpt>Migration Guidance<ept id="p1">](../../../docs/framework/windows-workflow-foundation/migration-guidance.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic provides an overview of the new workflow features introduced in <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">[!INCLUDE[wf2](../../../includes/wf2-md.md)]</ph> features introduced in <ph id="ph2">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> are not available for projects that target previous versions of the framework.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If a project that targets <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> is re-targeted to a previous version of the framework, several issues can occur.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>C# expressions will be replaced in the designer with the message <bpt id="p1">**</bpt>Value was set in XAML<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Many build errors will occur, including the following error.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The file format is not compatible with current targeting framework. To convert the file format, please explicitly save the file. This error message will go away after you save the file and reopen the designer.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_Versioning"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Workflow Versioning</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>introduced several new versioning features based around the new <ph id="ph1">&lt;xref:System.Activities.WorkflowIdentity&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowIdentity&gt;</ph> provides workflow application authors a mechanism for mapping a persisted workflow instance with its definition.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Developers using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> hosting can use <ph id="ph2">&lt;xref:System.Activities.WorkflowIdentity&gt;</ph> to enable hosting multiple versions of a workflow side-by-side.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Persisted workflow instances can be loaded using the new <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationInstance&gt;</ph> class, and then the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplicationInstance.DefinitionIdentity%2A&gt;</ph> can be used by the host to provide the correct version of the workflow definition when instantiating the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using WorkflowIdentity and Versioning<ept id="p1">](../../../docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)</ept> and <bpt id="p2">[</bpt>How to: Host Multiple Versions of a Workflow Side-by-Side<ept id="p2">](../../../docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> is now a multi-version host.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When a new version of a workflow service is deployed, new instances are created using the new service, but existing instances complete using the previous version.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Side by Side Versioning in WorkflowServiceHost<ept id="p1">](../../../docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Dynamic update is introduced which provides a mechanism for updating the definition of a persisted workflow instance.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Dynamic Update<ept id="p1">](../../../docs/framework/windows-workflow-foundation/dynamic-update.md)</ept> and <bpt id="p2">[</bpt>How to: Update the Definition of a Running Workflow Instance<ept id="p2">](../../../docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A SqlWorkflowInstanceStoreSchemaUpgrade.sql database script is provided to upgrade persistence databases created using the <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph> database scripts.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This script updates <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph> persistence databases to support the new versioning capabilities introduced in <ph id="ph2">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The persisted workflow instances in the database are given default versioning values, and can participate in side-by-side execution and dynamic update.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Upgrading .NET Framework 4 Persistence Databases to Support Workflow Versioning<ept id="p1">](../../../docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md#UpdatingWF4PersistenceDatabases)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_NewActivities"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Activities</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The built-in activity library contains new activities and new features for existing activities.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_NoPersistScope"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> NoPersist Scope</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.Statements.NoPersistScope&gt;</ph> is a new container activity that prevents a workflow from being persisted when the NoPersistScope’s child activities are executing.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is useful in scenarios where it is not appropriate for the workflow to be persisted, such as when the workflow is using machine-specific resources such as file handles, or during database transactions.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Previously, to prevent persistence from occurring during an activity's execution, a custom <ph id="ph1">&lt;xref:System.Activities.NativeActivity&gt;</ph> that used a <ph id="ph2">&lt;xref:System.Activities.NoPersistHandle&gt;</ph> was required.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_NewFlowchartCapabilities"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> New Flowchart Capabilities</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Flowcharts are updated for <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> and have the following new capabilities:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DisplayName`</ph> property of a <ph id="ph2">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph> or <ph id="ph3">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> activity is editable.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This will let the activity designer show more information about the activity's purpose.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Flowcharts have a new property called <ph id="ph1">&lt;xref:System.Activities.Statements.Flowchart.ValidateUnconnectedNodes%2A&gt;</ph>; the default for this property is <ph id="ph2">`False`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If this property is set to <ph id="ph1">`True`</ph>, then unconnected flowchart nodes will produce validation errors.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Support for Partial Trust</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Workflows in <ph id="ph1">[!INCLUDE[netfx40_long](../../../includes/netfx40-long-md.md)]</ph> required a fully trusted application domain.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, workflows can operate in a partial trust environment.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In a partial trust environment, third-party components can be used without granting them full access to the resources of the host.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Some concerns about running workflows in partial trust are as follows:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Using legacy components (including Rules) contained in the <ph id="ph1">&lt;xref:System.Activities.Statements.Interop&gt;</ph> activity is not supported under partial trust.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Running workflows in partial trust in <ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> is not supported.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Persisting exceptions in a partial-trust scenario is a potential security threat.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To disable persisting of exceptions, an extension of type <ph id="ph1">&lt;xref:System.Activities.ExceptionPersistenceExtension&gt;</ph> must be added to the project in order to opt out of persisting exceptions.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to implement this type.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If exceptions are not to be serialized, ensure that exceptions are used within a <ph id="ph1">&lt;xref:System.Activities.Statements.NoPersistScope&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Activity authors should override <ph id="ph1">&lt;xref:System.Activities.Activity.CacheMetadata%2A&gt;</ph> to avoid having the workflow runtime automatically execute reflection against the type.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Arguments and child activities must be non-null, and <ph id="ph1">&lt;xref:System.Activities.ActivityMetadata.Bind%2A&gt;</ph> must be called explicitly.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information on overriding <ph id="ph1">&lt;xref:System.Activities.Activity.CacheMetadata%2A&gt;</ph>, see <bpt id="p1">[</bpt>Exposing data with CacheMetadata<ept id="p1">](../../../docs/framework/windows-workflow-foundation/exposing-data-with-cachemetadata.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Also, instances of arguments that are of a type that is <ph id="ph1">`internal`</ph> or <bpt id="p1">**</bpt>private<ept id="p1">**</ept> must be explicitly created in  <ph id="ph2">&lt;xref:System.Activities.Activity.CacheMetadata%2A&gt;</ph> to avoid being created by reflection.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Types will not use <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph> for serialization; types that are to be serialized must support <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Expressions that use <ph id="ph1">&lt;xref:System.Activities.Expressions.LambdaValue%601&gt;</ph> require <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess%2A&gt;</ph>, and thus will not work under partial trust.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Workflows that use <ph id="ph1">&lt;xref:System.Activities.Expressions.LambdaValue%601&gt;</ph> should replace those expressions with activities that derive from <ph id="ph2">&lt;xref:System.Activities.CodeActivity%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Expressions cannot be compiled using <ph id="ph1">&lt;xref:System.Activities.XamlIntegration.TextExpressionCompiler&gt;</ph> or the Visual Basic hosted compiler in partial trust, but previously compiled expressions can be run.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A single assembly that uses <bpt id="p1">[</bpt>Level 2 Transparency<ept id="p1">](http://aka.ms/Level2Transparency)</ept> cannot be used in <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph>, <ph id="ph2">[!INCLUDE[netfx_current_short](../../../includes/netfx-current-short-md.md)]</ph> in full trust, and <ph id="ph3">[!INCLUDE[netfx_current_short](../../../includes/netfx-current-short-md.md)]</ph> in partial trust.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_NewDesignerCapabilites"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> New Designer Capabilities</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_DesignerSearch"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Designer Search</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To make larger workflows more manageable, workflows can now be searched by keyword.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This feature is only available in <ph id="ph1">[!INCLUDE[vs_current_short](../../../includes/vs-current-short-md.md)]</ph>; this feature is not available in a rehosted designer.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>There are two kinds of searches available:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Quick Find, initiated with either <bpt id="p1">**</bpt>Ctrl+F<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Edit<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Find and Replace<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Quick Find<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Find in Files, initiated with either <bpt id="p1">**</bpt>Ctrl+Shift+F<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Edit<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Find and Replace<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Find in Files<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Note that Replace is not supported.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_QuickFind"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Quick Find</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Keywords searched in workflows will match the following designer items:</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Properties of <ph id="ph1">&lt;xref:System.Activities.Activity&gt;</ph> objects, <ph id="ph2">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> objects, <ph id="ph3">&lt;xref:System.Activities.Statements.State&gt;</ph> objects, <ph id="ph4">&lt;xref:System.Activities.Statements.Transition&gt;</ph> objects, and other custom flow-control items.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Variables</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Arguments</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Expressions</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Quick Find is performed on the designer's <ph id="ph1">&lt;xref:System.Activities.Presentation.Model.ModelItem&gt;</ph> tree.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Quick Find will not locate namespaces imported in the workflow definition.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_FindInFiles"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Find in Files</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Keywords searched in workflows will match the actual content of the workflow files.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The search results will be shown in Visual Studio Find Results view pane.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Double-clicking the result item will navigate to the activity which contains the match in workflow designer.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_VariableDeleteContextMenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Delete context menu item in variable and argument designer</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph>, variables and arguments could only be deleted in the designer using the keyboard.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Starting with <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, variables and arguments can be deleted using the context menu.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following screenshot shows the variable and argument designer context menu.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Variable and Argument Designer Context Menu<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/designercontextmenu.png "</bpt>DesignerContextMenu<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_AutoSurround"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Auto-surround with Sequence</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Since a workflow or certain container activities (such as <ph id="ph1">&lt;xref:System.Activities.Statements.NoPersistScope&gt;</ph>) can only contain a single body activity, adding a second activity required the developer to delete the first activity, add a <ph id="ph2">&lt;xref:System.Activities.Statements.Sequence&gt;</ph> activity, and then add both activities to the sequence activity.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Starting with <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, when adding a second activity to the designer surface, a <ph id="ph2">`Sequence`</ph> activity will be automatically created to wrap both activities.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following screenshot shows a <ph id="ph1">`WriteLine`</ph> activity in the <ph id="ph2">`Body`</ph> of a <ph id="ph3">`NoPersistScope`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Auto&amp;#45;surround drop location<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/autosurround1.png "</bpt>AutoSurround1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The following screenshot shows the automatically created <ph id="ph1">`Sequence`</ph> activity in the <ph id="ph2">`Body`</ph> when a second <ph id="ph3">`WriteLine`</ph> is dropped below the first.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Automatically created sequence activity<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/autosurround2.png "</bpt>AutoSurround2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_PanMode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Pan Mode</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To more easily navigate a large workflow in the designer, pan mode can be enabled, allowing the developer to click and drag to move the visible portion of the workflow, rather than needing to use the scroll bars.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The button to activate pan mode is in the lower right corner of the designer.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following screenshot shows the pan button which is located at the bottom right corner of the workflow designer.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Pan button in workflow designer<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/panbutton.png "</bpt>PanButton<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The middle mouse button or space bar can also be used to pan the workflow designer.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_MultiSelect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Multi-select</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Multiple activities can be selected at one time, either by dragging a rectangle around them (when pan mode is not enabled), or by holding down Ctrl and click the desired activities one by one.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Multiple activity selections can also be dragged and dropped within the designer, and can also be interacted with using the context menu.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_DocumentOutline"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Outline view of workflow items</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>In order to make hierarchical workflows easier to navigate, components of a workflow are shown in a tree-style outline view.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The outline view is displayed in the <bpt id="p1">**</bpt>Document Outline<ept id="p1">**</ept> view.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To open this view, from the top menu, select <bpt id="p1">**</bpt>View<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Other Windows<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Document Outline<ept id="p3">**</ept>, or press Ctrl W,U.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Clicking on a node in outline view will navigate to the corresponding activity in the workflow designer, and the outline view will be updated to show activities that are selected in the designer.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following screenshot of the completed workflow from the <bpt id="p1">[</bpt>Getting Started Tutorial<ept id="p1">](../../../docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept> shows the outline view with a sequential workflow.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Outline View in Workflow Designer<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/outlineviewinworkflowdesigner.jpg "</bpt>OutlineViewinWorkflowDesigner<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_CSharpExpressions"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> C# Expressions</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Prior to <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, all expressions in workflows could only be written in Visual Basic.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, Visual Basic expressions are only used for projects created using Visual Basic.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Visual C# projects now use C# for expressions.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A fully functional C# expression editor is provided which capabilities such as grammar highlighting and intellisense.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>C# workflow projects created in previous versions that use Visual Basic expressions will continue to work.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>C# expressions are validated at design-time.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Errors in C# expressions will be marked with a red wavy underline.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>C# expressions, see <bpt id="p1">[</bpt>C# Expressions<ept id="p1">](../../../docs/framework/windows-workflow-foundation/csharp-expressions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_Visibility"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> More control of visibility of shell bar and header items</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In a rehosted designer, some of the standard UI controls may not have meaning for a given workflow, and may be turned off.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph>, this customization is only supported by the shell bar at the bottom of the designer.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, the visibility of shell header items at the top of the designer can be adjusted by setting <ph id="ph2">&lt;xref:System.Activities.Presentation.View.DesignerView.WorkflowShellHeaderItemsVisibility%2A&gt;</ph> with the appropriate <ph id="ph3">&lt;xref:System.Activities.Presentation.View.ShellHeaderItemsVisibility&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_AutoConnect"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Auto-connect and auto-insert in Flowchart and State Machine workflows</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph>, connections between nodes in a Flowchart workflow had to be added manually.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, Flowchart and State Machine nodes have auto-connect points that become visible when an activity is dragged from the toolbox onto the designer surface.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Dropping an activity on one of these points automatically adds the activity along with the necessary connection.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The following screenshot shows the attachment points that become visible when an activity is dragged from the toolbox.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Flowchart start node showing autoconnect points<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/autoconnect1.png "</bpt>Autoconnect1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Activities can also be dragged onto connections between flowchart nodes and states to auto-insert the node between two other nodes.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The following screenshot shows the highlighted connecting line where activities can be dragged from the toolbox and dropped.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Auto&amp;#45;insert handle for dropping activities<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/autoinsert.png "</bpt>Autoinsert<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_Annotations"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Designer Annotations</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To facilitate developing larger workflows, the designer now supports adding annotations to help keep track of the design process.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Annotation can be added to activities, states, flowchart nodes, variables and arguments.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The following screenshot shows the context menu used to add annotations to the designer.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Annotation context menu<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/annotationdialog.png "</bpt>annotationdialog<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Debugging states</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph>, non-activity elements could not support debug breakpoints since they were not units of execution.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This release provides a mechanism for adding breakpoints to <ph id="ph1">&lt;xref:System.Activities.Statements.State&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>When a breakpoint is set on a <ph id="ph1">&lt;xref:System.Activities.Statements.State&gt;</ph>, execution will break when the state is transitioned to, before its entry activities or triggers are scheduled.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ActivityDelegates"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Define and consume ActivityDelegate objects in the designer</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Activities in <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph> used <ph id="ph2">&lt;xref:System.Activities.ActivityDelegate&gt;</ph> objects to expose execution points where other parts of the workflow could interact with a workflow's execution, but using these execution points usually required a fair amount of code.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>In this release, developers can define and consume activity delegates using the workflow designer.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Define and consume activity delegates in the Workflow Designer<ept id="p1">](/visualstudio/workflow-designer/how-to-define-and-consume-activity-delegates-in-the-workflow-designer)</ept>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_BuildTimeValidation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Build-time validation</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph>, workflow validation errors weren’t counted as build errors during the build of a workflow project.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This meant that building a workflow project could succeed even when there were workflow validation errors.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, workflow validation errors cause the build to fail.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_DesignTimeValidation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Design-time background validation</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph>, workflows were validated as a foreground process, which could potentially hang the UI during complex or time-consuming validation processes.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Workflow validation now takes place on a background thread, so that the UI is not blocked.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ViewState"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> View state located in a separate location in XAML files</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[netfx40_short](../../../includes/netfx40-short-md.md)]</ph>, the view state information for a workflow is stored across the XAML file in many different locations.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>This is inconvenient for developers who want to read XAML directly, or write code to remove the view state information.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, the view state information in the XAML file is serialized as a separate element in the XAML file.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Developers can easily locate and edit the view state information of an activity, or remove the view state altogether.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ExpressionExtensibility"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Expression extensibility</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>, we provide a way for developers to create their own expression and expression authoring experience that can be plugged into the workflow designer.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_BackwardCompatRehostedDesigner"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Opt-in for Workflow 4.5 features in rehosted designer</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>To preserve backward compatibility, some new features included in <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph> are not enabled by default in the rehosted designer.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>This is to ensure that existing applications that use the rehosted designer are not broken by updating to the latest version.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>To enable new features in the rehosted designer, either set <ph id="ph1">&lt;xref:System.Activities.Presentation.DesignerConfigurationService.TargetFrameworkName%2A&gt;</ph> to ".NET Framework 4.5", or set individual members of <ph id="ph2">&lt;xref:System.Activities.Presentation.DesignerConfigurationService&gt;</ph> to enable individual features.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_NewWFModels"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> New Workflow Development Models</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In addition to flowchart and sequential workflow development models, this release includes State Machine workflows, and contract-first workflow services.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_StateMachine"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> State machine workflows</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>State machine workflows were introduced as part of the .NET Framework 4, version 4.0.1 in the <bpt id="p1">[</bpt>Microsoft .NET Framework 4 Platform Update 1<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=215092)</ept>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This update included several new classes and activities which allowed developers to create state machine workflows.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>These classes and activities have been updated for <ph id="ph1">[!INCLUDE[net_v45](../../../includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Updates include:</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The ability to set breakpoints on states</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The ability to copy and paste transitions in the workflow designer</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Designer support for shared trigger transition creation</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Activities used to create State Machine workflows, including: <ph id="ph1">&lt;xref:System.Activities.Statements.StateMachine&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.Statements.State&gt;</ph>, and <ph id="ph3">&lt;xref:System.Activities.Statements.Transition&gt;</ph></source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The following screenshot shows the completed state machine workflow from the <bpt id="p1">[</bpt>Getting Started Tutorial<ept id="p1">](../../../docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept> step <bpt id="p2">[</bpt>How to: Create a State Machine Workflow<ept id="p2">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-state-machine-workflow.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Completed State Machine Workflow<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/windows-workflow-foundation/media/wfstatemachinegettingstartedtutorialcomplete.JPG "</bpt>WFStateMachineGettingStartedTutorialComplete<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>For more information on creating state machine workflows, see <bpt id="p1">[</bpt>State Machine Workflows<ept id="p1">](../../../docs/framework/windows-workflow-foundation/state-machine-workflows.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_ContractFirst"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Contract-first workflow development</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The contract-first workflow development tool allows the developer to design a contract in code first, then, with a few clicks in <ph id="ph1">[!INCLUDE[vs_current_short](../../../includes/vs-current-short-md.md)]</ph>, automatically generate an activity template in the toolbox representing each operation.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>These activities are then used to create a workflow that implements the operations defined by the contract.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The workflow designer will validate the workflow service to ensure that these operations are implemented and the signature of the workflow matches the contract signature.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The developer can also associate a workflow service with a collection of implemented contracts.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For more information on contract-first workflow service development, see <bpt id="p1">[</bpt>How to: Create a workflow service that consumes an existing service contract<ept id="p1">](../../../docs/framework/windows-workflow-foundation/how-to-create-a-workflow-service-that-consumes-an-existing-service-contract.md)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>