{"content":"---\ntitle: \"ANYELEMENT (Entity SQL)\"\nms.date: \"03/30/2017\"\nms.assetid: 475a9ad6-8c8d-4f49-9970-af273e5360f1\n---\n# ANYELEMENT (Entity SQL)\nExtracts an element from a multivalued collection.  \n  \n## Syntax  \n  \n```  \nANYELEMENT ( expression )  \n```  \n  \n## Arguments  \n `expression`  \n Any valid query expression that returns a collection to extract an element from.  \n  \n## Return Value  \n A single element in the collection or an arbitrary element if the collection has more than one; if the collection is empty, returns `null`. If `collection` is a collection of type `Collection<T>`, then `ANYELEMENT(collection)` is a valid expression that yields an instance of type `T`.  \n  \n## Remarks  \n ANYELEMENT extracts an arbitrary element from a multivalued collection. For example, the following example attempts to extract a singleton element from the set `Customers`.  \n  \n```  \nANYELEMENT(Customers)  \n```  \n  \n## Example  \n The following [!INCLUDE[esql](../../../../../../includes/esql-md.md)] query uses the ANYELEMENT operator to extract an element from a multivalued collection. The query is based on the AdventureWorks Sales Model. To compile and run this query, follow these steps:  \n  \n1.  Follow the procedure in [How to: Execute a Query that Returns StructuralType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md).  \n  \n2.  Pass the following query as an argument to the `ExecuteStructuralTypeQuery` method:  \n  \n [!code-csharp[DP EntityServices Concepts 2#ANYELEMENT](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts 2/cs/entitysql.cs#anyelement)]  \n  \n## See also\n\n- [Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)\n- [Nullable Structured Types](../../../../../../docs/framework/data/adonet/ef/language-reference/nullable-structured-types-entity-sql.md)\n","nodes":[{"pos":[4,107],"embed":true,"restype":"x-metadata","content":"title: \"ANYELEMENT (Entity SQL)\"\nms.date: \"03/30/2017\"\nms.assetid: 475a9ad6-8c8d-4f49-9970-af273e5360f1","nodes":[{"content":"ANYELEMENT (Entity SQL)","nodes":[{"pos":[0,23],"content":"ANYELEMENT (Entity SQL)","nodes":[{"content":"ANYELEMENT (Entity SQL)","pos":[0,23]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[114,137],"content":"ANYELEMENT (Entity SQL)","linkify":"ANYELEMENT (Entity SQL)","nodes":[{"content":"ANYELEMENT (Entity SQL)","pos":[0,23]}]},{"content":"Extracts an element from a multivalued collection.","pos":[138,188]},{"pos":[197,203],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[255,264],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"Any valid query expression that returns a collection to extract an element from.","pos":[284,364]},{"pos":[373,385],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A single element in the collection or an arbitrary element if the collection has more than one; if the collection is empty, returns <ph id=\"ph1\">`null`</ph>.","pos":[389,528],"source":"A single element in the collection or an arbitrary element if the collection has more than one; if the collection is empty, returns `null`."},{"content":"If <ph id=\"ph1\">`collection`</ph> is a collection of type <ph id=\"ph2\">`Collection&lt;T&gt;`</ph>, then <ph id=\"ph3\">`ANYELEMENT(collection)`</ph> is a valid expression that yields an instance of type <ph id=\"ph4\">`T`</ph>.","pos":[529,674],"source":" If `collection` is a collection of type `Collection<T>`, then `ANYELEMENT(collection)` is a valid expression that yields an instance of type `T`."},{"pos":[683,690],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"ANYELEMENT extracts an arbitrary element from a multivalued collection.","pos":[694,765]},{"content":"For example, the following example attempts to extract a singleton element from the set <ph id=\"ph1\">`Customers`</ph>.","pos":[766,866],"source":" For example, the following example attempts to extract a singleton element from the set `Customers`."},{"pos":[914,921],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> query uses the ANYELEMENT operator to extract an element from a multivalued collection.","pos":[925,1082],"source":"The following [!INCLUDE[esql](../../../../../../includes/esql-md.md)] query uses the ANYELEMENT operator to extract an element from a multivalued collection."},{"content":"The query is based on the AdventureWorks Sales Model.","pos":[1083,1136]},{"content":"To compile and run this query, follow these steps:","pos":[1137,1187]},{"pos":[1197,1394],"content":"Follow the procedure in <bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns StructuralType Results<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)</ept>.","source":"Follow the procedure in [How to: Execute a Query that Returns StructuralType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-structuraltype-results.md)."},{"pos":[1404,1487],"content":"Pass the following query as an argument to the <ph id=\"ph1\">`ExecuteStructuralTypeQuery`</ph> method:","source":"Pass the following query as an argument to the `ExecuteStructuralTypeQuery` method:"},{"pos":[1674,1682],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1686,1800],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept>","source":"[Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)"},{"pos":[1803,1938],"content":"<bpt id=\"p1\">[</bpt>Nullable Structured Types<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/nullable-structured-types-entity-sql.md)</ept>","source":"[Nullable Structured Types](../../../../../../docs/framework/data/adonet/ef/language-reference/nullable-structured-types-entity-sql.md)"}]}