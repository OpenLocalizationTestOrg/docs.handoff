{"content":"---\ntitle: \"How to: Manually Render Buffered Graphics\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"flicker [Windows Forms], reducing by manually rendering graphics\"\n  - \"graphics [Windows Forms], rendering\"\nms.assetid: 5192295e-bd8e-45f7-8bd6-5c4f6bd21e61\n---\n# How to: Manually Render Buffered Graphics\nIf you are managing your own buffered graphics, you will need to be able to create and render graphics buffers. You can create instances of the <xref:System.Drawing.BufferedGraphics> class that is associated with drawing surfaces on your screen by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. This method creates a <xref:System.Drawing.BufferedGraphics> instance that is associated with a particular rendering surface, such as a form or control. After you have created a <xref:System.Drawing.BufferedGraphics> instance, you can draw graphics to the buffer it represents through the <xref:System.Drawing.BufferedGraphics.Graphics%2A> property. After you have performed all graphics operations, you can copy the contents of the buffer to the screen by calling the <xref:System.Drawing.BufferedGraphics.Render%2A> method.  \n  \n> [!NOTE]\n>  If you perform your own rendering, memory consumption will increase, though the increase may only be slight.  \n  \n### To manually display buffered graphics  \n  \n1.  Obtain a reference to an instance of the <xref:System.Drawing.BufferedGraphicsContext> class. For more information, see [How to: Manually Manage Buffered Graphics](how-to-manually-manage-buffered-graphics.md).  \n  \n2.  Create an instance of the <xref:System.Drawing.BufferedGraphics> class by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method, as shown in the following code example.  \n  \n     [!code-csharp[System.Windows.Forms.LegacyBufferedGraphics#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/CS/Class1.cs#21)]\n     [!code-vb[System.Windows.Forms.LegacyBufferedGraphics#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/VB/Class1.vb#21)]  \n  \n3.  Draw graphics to the graphics buffer by setting the <xref:System.Drawing.BufferedGraphics.Graphics%2A> property. For example:  \n  \n     [!code-csharp[System.Windows.Forms.LegacyBufferedGraphics#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/CS/Class1.cs#22)]\n     [!code-vb[System.Windows.Forms.LegacyBufferedGraphics#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/VB/Class1.vb#22)]  \n  \n4.  When you have completed all of your drawing operations to the graphics buffer, call the <xref:System.Drawing.BufferedGraphics.Render%2A> method to render the buffer, either to the drawing surface associated with that buffer, or to a specified drawing surface, as shown in the following code example.  \n  \n     [!code-csharp[System.Windows.Forms.LegacyBufferedGraphics#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/CS/Class1.cs#23)]\n     [!code-vb[System.Windows.Forms.LegacyBufferedGraphics#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/VB/Class1.vb#23)]  \n  \n5.  After you are finished rendering graphics, call the `Dispose` method on the <xref:System.Drawing.BufferedGraphics> instance to free system resources.  \n  \n     [!code-csharp[System.Windows.Forms.LegacyBufferedGraphics#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/CS/Class1.cs#24)]\n     [!code-vb[System.Windows.Forms.LegacyBufferedGraphics#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/VB/Class1.vb#24)]  \n  \n## See also\n\n- <xref:System.Drawing.BufferedGraphicsContext>\n- <xref:System.Drawing.BufferedGraphics>\n- [Double Buffered Graphics](double-buffered-graphics.md)\n- [How to: Manually Manage Buffered Graphics](how-to-manually-manage-buffered-graphics.md)\n","nodes":[{"pos":[4,294],"embed":true,"restype":"x-metadata","content":"title: \"How to: Manually Render Buffered Graphics\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"flicker [Windows Forms], reducing by manually rendering graphics\"\n  - \"graphics [Windows Forms], rendering\"\nms.assetid: 5192295e-bd8e-45f7-8bd6-5c4f6bd21e61","nodes":[{"content":"How to: Manually Render Buffered Graphics","nodes":[{"pos":[0,41],"content":"How to: Manually Render Buffered Graphics","nodes":[{"content":"How to: Manually Render Buffered Graphics","pos":[0,41]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[301,342],"content":"How to: Manually Render Buffered Graphics","linkify":"How to: Manually Render Buffered Graphics","nodes":[{"content":"How to: Manually Render Buffered Graphics","pos":[0,41]}]},{"content":"If you are managing your own buffered graphics, you will need to be able to create and render graphics buffers.","pos":[343,454]},{"content":"You can create instances of the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class that is associated with drawing surfaces on your screen by calling the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.","pos":[455,668],"source":" You can create instances of the <xref:System.Drawing.BufferedGraphics> class that is associated with drawing surfaces on your screen by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method."},{"content":"This method creates a <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> instance that is associated with a particular rendering surface, such as a form or control.","pos":[669,821],"source":" This method creates a <xref:System.Drawing.BufferedGraphics> instance that is associated with a particular rendering surface, such as a form or control."},{"content":"After you have created a <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> instance, you can draw graphics to the buffer it represents through the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> property.","pos":[822,1018],"source":" After you have created a <xref:System.Drawing.BufferedGraphics> instance, you can draw graphics to the buffer it represents through the <xref:System.Drawing.BufferedGraphics.Graphics%2A> property."},{"content":"After you have performed all graphics operations, you can copy the contents of the buffer to the screen by calling the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method.","pos":[1019,1194],"source":" After you have performed all graphics operations, you can copy the contents of the buffer to the screen by calling the <xref:System.Drawing.BufferedGraphics.Render%2A> method."},{"pos":[1202,1321],"content":"[!NOTE]\n If you perform your own rendering, memory consumption will increase, though the increase may only be slight.","leadings":["","> "],"nodes":[{"content":"If you perform your own rendering, memory consumption will increase, though the increase may only be slight.","pos":[9,117]}]},{"pos":[1331,1368],"content":"To manually display buffered graphics","linkify":"To manually display buffered graphics","nodes":[{"content":"To manually display buffered graphics","pos":[0,37]}]},{"content":"Obtain a reference to an instance of the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class.","pos":[1378,1471],"source":"Obtain a reference to an instance of the <xref:System.Drawing.BufferedGraphicsContext> class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Manually Manage Buffered Graphics<ept id=\"p1\">](how-to-manually-manage-buffered-graphics.md)</ept>.","pos":[1472,1587],"source":" For more information, see [How to: Manually Manage Buffered Graphics](how-to-manually-manage-buffered-graphics.md)."},{"pos":[1597,1788],"content":"Create an instance of the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class by calling the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method, as shown in the following code example.","source":"Create an instance of the <xref:System.Drawing.BufferedGraphics> class by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method, as shown in the following code example."},{"pos":[1799,2146],"content":"[!code-csharp[System.Windows.Forms.LegacyBufferedGraphics#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/CS/Class1.cs#21)]\n [!code-vb[System.Windows.Forms.LegacyBufferedGraphics#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/VB/Class1.vb#21)]","leadings":["","    "],"nodes":[]},{"content":"Draw graphics to the graphics buffer by setting the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> property.","pos":[2156,2268],"source":"Draw graphics to the graphics buffer by setting the <xref:System.Drawing.BufferedGraphics.Graphics%2A> property."},{"content":"For example:","pos":[2269,2281]},{"pos":[2292,2639],"content":"[!code-csharp[System.Windows.Forms.LegacyBufferedGraphics#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/CS/Class1.cs#22)]\n [!code-vb[System.Windows.Forms.LegacyBufferedGraphics#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/VB/Class1.vb#22)]","leadings":["","    "],"nodes":[]},{"pos":[2649,2948],"content":"When you have completed all of your drawing operations to the graphics buffer, call the <ph id=\"ph1\">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method to render the buffer, either to the drawing surface associated with that buffer, or to a specified drawing surface, as shown in the following code example.","source":"When you have completed all of your drawing operations to the graphics buffer, call the <xref:System.Drawing.BufferedGraphics.Render%2A> method to render the buffer, either to the drawing surface associated with that buffer, or to a specified drawing surface, as shown in the following code example."},{"pos":[2959,3306],"content":"[!code-csharp[System.Windows.Forms.LegacyBufferedGraphics#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/CS/Class1.cs#23)]\n [!code-vb[System.Windows.Forms.LegacyBufferedGraphics#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/VB/Class1.vb#23)]","leadings":["","    "],"nodes":[]},{"pos":[3316,3465],"content":"After you are finished rendering graphics, call the <ph id=\"ph1\">`Dispose`</ph> method on the <ph id=\"ph2\">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> instance to free system resources.","source":"After you are finished rendering graphics, call the `Dispose` method on the <xref:System.Drawing.BufferedGraphics> instance to free system resources."},{"pos":[3476,3823],"content":"[!code-csharp[System.Windows.Forms.LegacyBufferedGraphics#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/CS/Class1.cs#24)]\n [!code-vb[System.Windows.Forms.LegacyBufferedGraphics#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LegacyBufferedGraphics/VB/Class1.vb#24)]","leadings":["","    "],"nodes":[]},{"pos":[3832,3840],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3933,3988],"content":"<bpt id=\"p1\">[</bpt>Double Buffered Graphics<ept id=\"p1\">](double-buffered-graphics.md)</ept>","source":"[Double Buffered Graphics](double-buffered-graphics.md)"},{"pos":[3991,4079],"content":"<bpt id=\"p1\">[</bpt>How to: Manually Manage Buffered Graphics<ept id=\"p1\">](how-to-manually-manage-buffered-graphics.md)</ept>","source":"[How to: Manually Manage Buffered Graphics](how-to-manually-manage-buffered-graphics.md)"}]}