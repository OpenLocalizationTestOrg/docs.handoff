{"content":"---\ntitle: \"How to: Handle the MouseDoubleClick Event for Each Item in a ListView | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"ListView controls, MouseDoubleClick event\"\nms.assetid: 81b39369-655a-4585-ac58-4640e5bb8fed\ncaps.latest.revision: 6\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Handle the MouseDoubleClick Event for Each Item in a ListView\nTo handle an event for an item in a <xref:System.Windows.Controls.ListView>, you need to add an event handler to each <xref:System.Windows.Controls.ListViewItem>. When a <xref:System.Windows.Controls.ListView> is bound to a data source, you don't explicitly create a <xref:System.Windows.Controls.ListViewItem>, but you can handle the event for each item by adding an <xref:System.Windows.EventSetter> to a style of a <xref:System.Windows.Controls.ListViewItem>.  \n  \n## Example  \n The following example creates a data-bound <xref:System.Windows.Controls.ListView> and creates a <xref:System.Windows.Style> to add an event handler to each <xref:System.Windows.Controls.ListViewItem>.  \n  \n [!code-xml[ListViewHowTos#1](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ListViewHowTos/CSharp/Window1.xaml#1)]  \n[!code-xml[ListViewHowTos#5](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ListViewHowTos/CSharp/Window1.xaml#5)]  \n[!code-xml[ListViewHowTos#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ListViewHowTos/CSharp/Window1.xaml#2)]  \n  \n The following example handles the <xref:System.Windows.Controls.Control.MouseDoubleClick> event.  \n  \n [!code-csharp[ListViewHowTos#6](../../../../samples/snippets/csharp/VS_Snippets_Wpf/ListViewHowTos/CSharp/Window1.xaml.cs#6)]\n [!code-vb[ListViewHowTos#6](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewHowTos/VisualBasic/Window1.xaml.vb#6)]  \n  \n> [!NOTE]\n>  Although it is most common to bind a <xref:System.Windows.Controls.ListView> to a data source, you can use a style to add an event handler to each <xref:System.Windows.Controls.ListViewItem> in a non-data-bound <xref:System.Windows.Controls.ListView> regardless of whether you explicitly create a <xref:System.Windows.Controls.ListViewItem>.  For more information about explicitly and implicitly created <xref:System.Windows.Controls.ListViewItem> controls, see <xref:System.Windows.Controls.ItemsControl>.  \n  \n## See Also  \n <xref:System.Xml.XmlElement>   \n [Data Binding Overview](../../../../docs/framework/wpf/data/data-binding-overview.md)   \n [Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md)   \n [Bind to XML Data Using an XMLDataProvider and XPath Queries](../../../../docs/framework/wpf/data/how-to-bind-to-xml-data-using-an-xmldataprovider-and-xpath-queries.md)   \n [ListView Overview](../../../../docs/framework/wpf/controls/listview-overview.md)","nodes":[{"pos":[4,468],"embed":true,"restype":"x-metadata","content":"title: \"How to: Handle the MouseDoubleClick Event for Each Item in a ListView | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"ListView controls, MouseDoubleClick event\"\nms.assetid: 81b39369-655a-4585-ac58-4640e5bb8fed\ncaps.latest.revision: 6\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Handle the MouseDoubleClick Event for Each Item in a ListView | Microsoft Docs","nodes":[{"pos":[0,86],"content":"How to: Handle the MouseDoubleClick Event for Each Item in a ListView | Microsoft Docs","nodes":[{"content":"How to: Handle the MouseDoubleClick Event for Each Item in a ListView | Microsoft Docs","pos":[0,86]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[475,544],"content":"How to: Handle the MouseDoubleClick Event for Each Item in a ListView","linkify":"How to: Handle the MouseDoubleClick Event for Each Item in a ListView","nodes":[{"content":"How to: Handle the MouseDoubleClick Event for Each Item in a ListView","pos":[0,69]}]},{"content":"To handle an event for an item in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, you need to add an event handler to each <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListViewItem&gt;</ph>.","pos":[545,707],"source":"To handle an event for an item in a <xref:System.Windows.Controls.ListView>, you need to add an event handler to each <xref:System.Windows.Controls.ListViewItem>."},{"content":"When a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListView&gt;</ph> is bound to a data source, you don't explicitly create a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListViewItem&gt;</ph>, but you can handle the event for each item by adding an <ph id=\"ph3\">&lt;xref:System.Windows.EventSetter&gt;</ph> to a style of a <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ListViewItem&gt;</ph>.","pos":[708,1007],"source":" When a <xref:System.Windows.Controls.ListView> is bound to a data source, you don't explicitly create a <xref:System.Windows.Controls.ListViewItem>, but you can handle the event for each item by adding an <xref:System.Windows.EventSetter> to a style of a <xref:System.Windows.Controls.ListViewItem>."},{"pos":[1016,1023],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1027,1228],"content":"The following example creates a data-bound <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListView&gt;</ph> and creates a <ph id=\"ph2\">&lt;xref:System.Windows.Style&gt;</ph> to add an event handler to each <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ListViewItem&gt;</ph>.","source":"The following example creates a data-bound <xref:System.Windows.Controls.ListView> and creates a <xref:System.Windows.Style> to add an event handler to each <xref:System.Windows.Controls.ListViewItem>."},{"pos":[1605,1701],"content":"The following example handles the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;</ph> event.","source":"The following example handles the <xref:System.Windows.Controls.Control.MouseDoubleClick> event."},{"pos":[1974,2491],"content":"[!NOTE]\n Although it is most common to bind a <xref:System.Windows.Controls.ListView> to a data source, you can use a style to add an event handler to each <xref:System.Windows.Controls.ListViewItem> in a non-data-bound <xref:System.Windows.Controls.ListView> regardless of whether you explicitly create a <xref:System.Windows.Controls.ListViewItem>.  For more information about explicitly and implicitly created <xref:System.Windows.Controls.ListViewItem> controls, see <xref:System.Windows.Controls.ItemsControl>.","leadings":["","> "],"nodes":[{"content":"Although it is most common to bind a <xref:System.Windows.Controls.ListView> to a data source, you can use a style to add an event handler to each <xref:System.Windows.Controls.ListViewItem> in a non-data-bound <xref:System.Windows.Controls.ListView> regardless of whether you explicitly create a <xref:System.Windows.Controls.ListViewItem>.  For more information about explicitly and implicitly created <xref:System.Windows.Controls.ListViewItem> controls, see <xref:System.Windows.Controls.ItemsControl>.","pos":[9,515],"nodes":[{"content":"Although it is most common to bind a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListView&gt;</ph> to a data source, you can use a style to add an event handler to each <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListViewItem&gt;</ph> in a non-data-bound <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ListView&gt;</ph> regardless of whether you explicitly create a <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ListViewItem&gt;</ph>.","pos":[0,341],"source":"Although it is most common to bind a <xref:System.Windows.Controls.ListView> to a data source, you can use a style to add an event handler to each <xref:System.Windows.Controls.ListViewItem> in a non-data-bound <xref:System.Windows.Controls.ListView> regardless of whether you explicitly create a <xref:System.Windows.Controls.ListViewItem>."},{"content":"For more information about explicitly and implicitly created <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListViewItem&gt;</ph> controls, see <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.","pos":[343,506],"source":"  For more information about explicitly and implicitly created <xref:System.Windows.Controls.ListViewItem> controls, see <xref:System.Windows.Controls.ItemsControl>."}]}]},{"pos":[2500,2508],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](../../../../docs/framework/wpf/data/data-binding-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[2545,2631],"source":"[Data Binding Overview](../../../../docs/framework/wpf/data/data-binding-overview.md) "},{"content":"<bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](../../../../docs/framework/wpf/controls/styling-and-templating.md)</ept><ph id=\"ph1\"> </ph>","pos":[2635,2727],"source":"[Styling and Templating](../../../../docs/framework/wpf/controls/styling-and-templating.md) "},{"content":"<bpt id=\"p1\">[</bpt>Bind to XML Data Using an XMLDataProvider and XPath Queries<ept id=\"p1\">](../../../../docs/framework/wpf/data/how-to-bind-to-xml-data-using-an-xmldataprovider-and-xpath-queries.md)</ept><ph id=\"ph1\"> </ph>","pos":[2731,2900],"source":"[Bind to XML Data Using an XMLDataProvider and XPath Queries](../../../../docs/framework/wpf/data/how-to-bind-to-xml-data-using-an-xmldataprovider-and-xpath-queries.md) "},{"content":"<bpt id=\"p1\">[</bpt>ListView Overview<ept id=\"p1\">](../../../../docs/framework/wpf/controls/listview-overview.md)</ept>","pos":[2904,2985],"source":"[ListView Overview](../../../../docs/framework/wpf/controls/listview-overview.md)"}]}