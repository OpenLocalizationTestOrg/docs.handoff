<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="wcf-test-client-wcftestclient-exe.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd6f0d7a98ca5bc5f6bee45ad296341a5b91b2a4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\wcf-test-client-wcftestclient-exe.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59fa32fff0c997f6a0ad5089afb76b439e814514</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1799c83f9c7bf10d5d99a156f6497ce55f5a8159</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>WCF Test Client (WcfTestClient.exe)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WCF Test Client (WcfTestClient.exe)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Communication Foundation (WCF) Test Client (WcfTestClient.exe) is a GUI tool that enables users to input test parameters, submit that input to the service, and view the response that the service sends back.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It provides a seamless service testing experience when combined with WCF Service Host.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can typically find the WCF Test Client (WcfTestClient.exe) in the following location: <ph id="ph1">`C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE`</ph> - Community may be one of "Enterprise", "Professional" or "Community" depending on which level of Visual Studio is installed.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Scenarios for Using Test Client</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following sections discuss the most common scenarios in which you can use WCF Test Client to streamline your development process.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Inside Visual Studio</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>WCF Service Host Starts WCF Test Client with a Single Service</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After you create a new WCF service project and press F5 to start the debugger, the WCF Service Host begins to host the service in your project.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Then, WCF Test Client opens and displays a list of service endpoints defined in the configuration file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can test the parameters and invoke the service, and repeat this process to continuously test and validate your service.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>WCF Service Host Starts WCF Test Client with Multiple Services</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use WCF Test Client to help debug a service project that contains multiple services.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When WCF Test Client opens, it automatically iterates the list of services in your project and opens them for testing.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Outside Visual Studio</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can also invoke the WCF Test Client (WcfTestClient.exe) outside Visual Studio to test an arbitrary service on the Internet.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To locate the tool, go to the following location:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE`</ph> (where community can be one of "Enterprise", "Professional" or "Community" depending on which level of Visual Studio is installed on the machine)</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To use the tool, double-click the file name to open it from this location, or launch it from a command line.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>WCF Test Client takes an arbitrary number of URIs as command line arguments.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These are the URIs of services that can be tested.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>After the WCF Test Client window is opened, click <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1">-&gt;</ph><bpt id="p2">**</bpt>Add Service<ept id="p2">**</ept>, and enter the endpoint address of the service you want to open.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>WCF Test Client User Interface</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can use WCF Test Client with a single service or multiple services.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Service Operations</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The left pane of the WCF Test Client main window lists all the available services, along with their respective endpoints and operations.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When you double-click an operation, you can view its content in the right pane inside a new tab with the operation's name.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The left pane also lists client configuration files.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Double-click any of the items to display the content of the file in a new tabbed window in the right pane.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Entering Test Parameters</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To view the test parameters, double-click an operation to open it in the right pane.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The parameters are showed in <bpt id="p1">**</bpt>Formatted<ept id="p1">**</ept> view by default, and you can enter arbitrary values for the parameters to test the service.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To view the message's XML, click <bpt id="p1">**</bpt>XML<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To send them to the service, click <bpt id="p1">**</bpt>Invoke<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For a DataSet parameter, click the <bpt id="p1">**</bpt>…<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>button next to <bpt id="p1">**</bpt>Edit…<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>to edit it in a new window showing the DataGrid.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Notice the appearance of the <bpt id="p1">**</bpt>Copy DataSet<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Paste DataSet<ept id="p2">**</ept> buttons.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the schema of the DataSet object is unknown upon the first edit, the DataGrid is empty.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You have to paste a DataSet object with the same schema into the current object in the DataGrid.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>(Notice that you need to copy the schema from somewhere else before the paste operation.) You can also copy a Dataset object for future usage by clicking the <bpt id="p1">**</bpt>Copy DataSet<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The service's response appears below the test parameters.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the expected return value is a string, the result will be displayed as a quoted string even though the input provided was not in quotes.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you specified a particular operation as one-way when you created the contract for the service, no service response is displayed.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>As soon as the message is queued for delivery, a dialog box pops up to notify you that the message was successfully sent.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Session Support</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Start a new proxy<ept id="p1">**</ept> check box in a service operation's tab enables you to toggle session support.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This box is cleared by default.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When you enter test parameters for a specific operation (or another operation in the same service endpoint) and click <bpt id="p1">**</bpt>Invoke<ept id="p1">**</ept> multiple times with the check box cleared, these operations share one proxy and the service status is persisted across multiple operations.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>Start a new proxy<ept id="p1">**</ept> check box is checked, a new proxy is started for each <bpt id="p2">**</bpt>Invoke<ept id="p2">**</ept>, the previous session scenario is ended, and the service status is reset.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Editing Client Configuration</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The left pane of the WCF Test Client main window lists client configuration files.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Double-click any of the items to display the contents of the file in the right pane.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Edit with Service Configuration Editor</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Config File<ept id="p1">**</ept> in the left pane and select the context menu <bpt id="p2">**</bpt>Edit with SvcConfigEditor<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Service Configuration Editor is launched with the client configuration content.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can edit the configuration and save it within the tool.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>After saving the file in Service Configuration Editor, WCF Test Client displays a warning message to inform you that the file has been modified outside and asks whether you would like to reload it.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you select <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>, the configuration content in the "Client.dll.config" tab reflects the changes you made in the editor.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you select <bpt id="p1">**</bpt>No<ept id="p1">**</ept>, the configuration content in the "Client.dll.config" tab remains unchanged and the modified content is automatically saved to the source file.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Restore to Default Configuration</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you want to cancel all the changes and restore to the default client configuration, right-click <bpt id="p1">**</bpt>Config File<ept id="p1">**</ept> in the left pane and select the context menu <bpt id="p2">**</bpt>Restore to Default Config<ept id="p2">**</ept>. The default configuration value is loaded and content in "Client.dll.config" tab is restored.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Validate Changes</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When saved changes are being loaded in WCF Test Client, the configuration is checked for validity against WCF schema.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If errors are found, a dialog box is displayed to show error details.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>During proxy generation, binary compiling, or service invoking, menu items that support editing (that is, "Edit …", "Restore …", and so on) are disabled.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Service invocation is also disabled when loading updated configuration to WCF Test Client.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Persist Client Configuration</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Tools<ept id="p1">**</ept><ph id="ph1">-&gt;</ph><bpt id="p2">**</bpt>Options<ept id="p2">**</ept><ph id="ph2">-&gt;</ph><bpt id="p3">**</bpt>Client Configuration<ept id="p3">**</ept> tab contains an <bpt id="p4">**</bpt>Always Regenerate Config When Launching Services<ept id="p4">**</ept> option, which is enabled by default.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This option specifies that every time WCF Test Client loads a service, it regenerates a configuration file based on the latest service contract and service App.config files.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you have edited the client configuration for your WCF service and want to always use this updated file to debug your service, you can uncheck the <bpt id="p1">**</bpt>Regenerate<ept id="p1">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>By doing so, even when you update the service and reopen WCF Test Client, the Client.dll.config file is the one you updated previously instead of a regenerated one based on the updated service.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>However, you might need to edit the configuration file to make it consistent with the regenerated proxy.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the regenerated proxy and configuration file are mismatched due to an updated service, errors will occur when the service is invoked.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If you have modified the client configuration file and select to reuse it in the future, you can find the file in the following location:</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>\Documents and Settings<ph id="ph1">\\</ph>[User Account]\My Documents\Test Client Projects.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Any updated credential information stored to the client configuration file is protected by the Access Control List (ACL) of this folder.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Adding, Removing and Refreshing Services</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Add Service</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1">-&gt;</ph><bpt id="p2">**</bpt>Add Service<ept id="p2">**</ept> to add a service to WCF Test Client.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You are then required to type the URI (endpoint address) of the service to be added.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The service’s address can be a mex address or WSDL address.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can also find a list of 10 recently added services' endpoints in the <bpt id="p1">**</bpt>Recent Services<ept id="p1">**</ept> submenu.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you select one of them, the specified service is added to WCF Test Client.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can also right-click the root of service tree <bpt id="p1">**</bpt>My Service Projects<ept id="p1">**</ept>, and select <bpt id="p2">**</bpt>Add Service<ept id="p2">**</ept> to achieve the same result.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>During proxy generation, binary compiling, or service invocation, menu items that support adding a service are disabled.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Service invocation is also disabled.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Remove Service</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Right-click the service root of the service to be removed, and select <bpt id="p1">**</bpt>Remove Service<ept id="p1">**</ept> to remove a service from WCF Test Client.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>During proxy generation, binary compiling, or service invocation, menu items that support removing a service are disabled.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Service invocation is also disabled.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Refresh Service</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If a change is made to the service while WCF Test Client is running and you want to ensure that the WCF Test Client implementation for that service is up-to-date, right-click the service root of the service, and select <bpt id="p1">**</bpt>Refresh Service<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Note that after refreshing, the service status is reset.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>During proxy generation, binary compiling, or service invocation, menu items that support refreshing a service are disabled.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Service invocation is also disabled.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Location of Files Generated by the Test Client</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>By default, WCF Test Client stores generated client code and configuration files in the "%appdata%\Local\temp\Test Client Projects" folder.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This folder is deleted after WCF Test Client exits.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If a configuration file is modified in WCF Test Client and the <bpt id="p1">**</bpt>Always Regenerate Config When Launching Services<ept id="p1">**</ept> option is disabled, the modified file is copied to the "CachedConfig" folder under "My Documents\Test Client Projects" with a mapping (metadata-address-to-file-name) XML file as an index.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You can also start WCF Test Client in a command line, use the <ph id="ph1">`/ProjectPath`</ph> switch to specify a new desired path for storing generated files, or use the <ph id="ph2">`/RestoreProjectPath`</ph> switch to restore the default location.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Running this command does not open WCF Test Client.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Only the folder location is changed.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can run this command whether WCF Test Client is running or not.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The new location is applied when WCF Test Client is restarted.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The location information can be saved in registry, or in the WcfTestClient.exe.option file in the "%appdata%\Local\temp\Test Client Projects" folder.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Features supported by WCF Test Client</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The following is a list of features supported by WCF Test Client:</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Service Invocation: Request/Response and One-way message.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Bindings: all bindings supported by Svcutil.exe.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Controlling Session.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Message Contract.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>XML serialization.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The following is a list of features not supported by WCF Test Client:</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Types: <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.XmlAttribute&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.XmlNode&gt;</ph>, types that implement the <ph id="ph6">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface, including the related <ph id="ph7">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> attribute, and the <ph id="ph8">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> and <ph id="ph9">&lt;xref:System.Xml.Linq.XElement&gt;</ph> types and the ADO.NET <ph id="ph10">&lt;xref:System.Data.DataTable&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Duplex contract.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Transaction.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Security: <ph id="ph1">[!INCLUDE[infocard](../../../includes/infocard-md.md)]</ph> , Certificate, and Username/Password.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Bindings: WSFederationbinding, any Context bindings and Https binding, WebHttpbinding (Json response message support).</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Closing WCF Test Client</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>You can close WCF Test Client in the following ways:</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Exit<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Alternatively, in the WCF Test Client main window, click <bpt id="p1">**</bpt>Close<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Both of these actions also shut down WCF Service Auto Host and stop the Visual Studio debugging process if WCF Test Client was launched by Visual Studio.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>WCF Service Host<ept id="p1">**</ept> icon in the notification area, and then click <bpt id="p2">**</bpt>Exit.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This shuts down both WCF Service Auto Host and WCF Test Client and stops the Visual Studio debugging process.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Service Host (WcfSvcHost.exe)<ept id="p1">](../../../docs/framework/wcf/wcf-service-host-wcfsvchost-exe.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>