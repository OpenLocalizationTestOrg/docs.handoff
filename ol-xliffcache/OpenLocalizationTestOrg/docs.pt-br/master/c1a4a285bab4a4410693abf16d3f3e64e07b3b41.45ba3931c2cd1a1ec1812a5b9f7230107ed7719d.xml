{"content":"---\ntitle: \"Using JSONP | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: f386718c-b4ba-4931-a610-40c27a46672a\ncaps.latest.revision: 7\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Using JSONP\nJSON Padding (JSONP) is a mechanism that enables cross-site scripting support in Web browsers. JSONP is designed around the ability of Web browsers to load scripts from a site different from the one the current loaded document was retrieved from. The mechanism works by padding the JSON payload with a user-defined callback function name, as shown in the following example.  \n  \n```  \ncallback({\"a\" = \\\"b\\\" });  \n```  \n  \n In the preceding example the JSON payload, `{\"a\" = \\\"b\\\"}`, is wrapped in a function call, `callback`. The callback function must already be defined in the current Web page. The content type of a JSONP response is \"application/javascript\".  \n  \n## Using JSONP  \n JSONP is not automatically enabled. To enable it, set the `javascriptCallbackEnabled` attribute to `true` on one of the HTTP standard endpoints (<xref:System.ServiceModel.Description.WebHttpEndpoint> or <xref:System.ServiceModel.Description.WebScriptEndpoint>), as shown in the following example.  \n  \n```xml  \n<system.serviceModel>  \n    <standardEndpoints>  \n      <webHttpEndpoint>  \n        <standardEndpoint name=\"\" javascriptCallbackEnabled=\"true\"/>  \n      </webHttpEndpoint>  \n    </standardEndpoints>     \n  </system.serviceModel>  \n```  \n  \n The name of the callback function can be specified in a query variable called callback as shown in the following URL.  \n  \n```  \nhttp://baseaddress/Service/RestService?callback=functionName  \n```  \n  \n When invoked, the service sends a response like the following.  \n  \n```jscript  \nfunctionName({\"root\":\"Something});  \n```  \n  \n You can also specify the callback function name by applying the <xref:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute> to the service class, as shown in the following example.  \n  \n```csharp  \n[ServiceContract]  \n[JavascriptCallbackBehavior(ParameterName = \"$callback\")]  \npublic class Service1  \n{  \n    [OperationContract]  \n    [WebGet(ResponseFormat=WebMessageFormat.Json)]  \n    public string GetData()  \n    {              \n    }  \n}  \n```  \n  \n For the service shown previously, a request looks like the following.  \n  \n```  \nhttp://baseaddress/Service/RestService?$callback=anotherFunction  \n```  \n  \n When invoked, the service responds with the following.  \n  \n```  \nanotherFunction ({\"root\":\"Something});  \n```  \n  \n## HTTP Status Codes  \n JSONP responses with HTTP status codes other than 200 include a second parameter with the numeric representation of the HTTP status code, as shown in the following example.  \n  \n```  \nanotherFunction ({\"root\":\"Something}, 201);  \n```  \n  \n## Validations  \n The following validations are performed when JSONP is enabled:  \n  \n-   The WCF infrastructure throws an exception if `javascriptCallback` is enabled, a callback query-string parameter is present in the request and the response format is set to JSON.  \n  \n-   If the request contains the callback query string parameter but the operation is not an HTTP GET, the callback parameter is ignored.  \n  \n-   If the callback name is `null` or empty string the response is not formatted as JSONP.  \n  \n## See Also  \n [WCF Web HTTP Programming Model Overview](../../../../docs/framework/wcf/feature-details/wcf-web-http-programming-model-overview.md)","nodes":[{"pos":[12,40],"content":"Using JSONP | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Using JSONP | Microsoft Docs","pos":[0,28]}]},{"pos":[338,349],"content":"Using JSONP","linkify":"Using JSONP","nodes":[{"content":"Using JSONP","pos":[0,11]}]},{"content":"JSON Padding (JSONP) is a mechanism that enables cross-site scripting support in Web browsers.","pos":[350,444]},{"content":"JSONP is designed around the ability of Web browsers to load scripts from a site different from the one the current loaded document was retrieved from.","pos":[445,596]},{"content":"The mechanism works by padding the JSON payload with a user-defined callback function name, as shown in the following example.","pos":[597,723]},{"content":"In the preceding example the JSON payload, <ph id=\"ph1\">`{\"a\" = \\\"b\\\"}`</ph>, is wrapped in a function call, <ph id=\"ph2\">`callback`</ph>.","pos":[773,875],"source":"In the preceding example the JSON payload, `{\"a\" = \\\"b\\\"}`, is wrapped in a function call, `callback`."},{"content":"The callback function must already be defined in the current Web page.","pos":[876,946]},{"content":"The content type of a JSONP response is \"application/javascript\".","pos":[947,1012]},{"pos":[1021,1032],"content":"Using JSONP","linkify":"Using JSONP","nodes":[{"content":"Using JSONP","pos":[0,11]}]},{"content":"JSONP is not automatically enabled.","pos":[1036,1071]},{"content":"To enable it, set the <ph id=\"ph1\">`javascriptCallbackEnabled`</ph> attribute to <ph id=\"ph2\">`true`</ph> on one of the HTTP standard endpoints (<ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.WebHttpEndpoint&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.ServiceModel.Description.WebScriptEndpoint&gt;</ph>), as shown in the following example.","pos":[1072,1332],"source":" To enable it, set the `javascriptCallbackEnabled` attribute to `true` on one of the HTTP standard endpoints (<xref:System.ServiceModel.Description.WebHttpEndpoint> or <xref:System.ServiceModel.Description.WebScriptEndpoint>), as shown in the following example."},{"content":"The name of the callback function can be specified in a query variable called callback as shown in the following URL.","pos":[1588,1705]},{"content":"When invoked, the service sends a response like the following.","pos":[1790,1852]},{"content":"You can also specify the callback function name by applying the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute&gt;</ph> to the service class, as shown in the following example.","pos":[1918,2105],"source":"You can also specify the callback function name by applying the <xref:System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute> to the service class, as shown in the following example."},{"content":"For the service shown previously, a request looks like the following.","pos":[2382,2451]},{"content":"When invoked, the service responds with the following.","pos":[2540,2594]},{"pos":[2659,2676],"content":"HTTP Status Codes","linkify":"HTTP Status Codes","nodes":[{"content":"HTTP Status Codes","pos":[0,17]}]},{"content":"JSONP responses with HTTP status codes other than 200 include a second parameter with the numeric representation of the HTTP status code, as shown in the following example.","pos":[2680,2852]},{"pos":[2922,2933],"content":"Validations","linkify":"Validations","nodes":[{"content":"Validations","pos":[0,11]}]},{"content":"The following validations are performed when JSONP is enabled:","pos":[2937,2999]},{"pos":[3009,3187],"content":"The WCF infrastructure throws an exception if <ph id=\"ph1\">`javascriptCallback`</ph> is enabled, a callback query-string parameter is present in the request and the response format is set to JSON.","source":"The WCF infrastructure throws an exception if `javascriptCallback` is enabled, a callback query-string parameter is present in the request and the response format is set to JSON."},{"content":"If the request contains the callback query string parameter but the operation is not an HTTP GET, the callback parameter is ignored.","pos":[3197,3329]},{"pos":[3339,3425],"content":"If the callback name is <ph id=\"ph1\">`null`</ph> or empty string the response is not formatted as JSONP.","source":"If the callback name is `null` or empty string the response is not formatted as JSONP."},{"pos":[3434,3442],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3446,3578],"content":"<bpt id=\"p1\">[</bpt>WCF Web HTTP Programming Model Overview<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/wcf-web-http-programming-model-overview.md)</ept>","source":"[WCF Web HTTP Programming Model Overview](../../../../docs/framework/wcf/feature-details/wcf-web-http-programming-model-overview.md)"}]}