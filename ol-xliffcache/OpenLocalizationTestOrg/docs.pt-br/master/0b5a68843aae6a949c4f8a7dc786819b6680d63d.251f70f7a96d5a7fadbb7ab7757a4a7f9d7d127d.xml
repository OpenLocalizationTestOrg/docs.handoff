{"content":"---\ntitle: \"Expressions2 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 43a85905-77b5-4893-bb38-1cb9b293d69d\ncaps.latest.revision: 14\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Expressions\nThis sample demonstrates how to use basic expressions in a workflow. It consists of a workflow that calculates basic salary statistics for two employees of a fictitious company. Two classes, `Employee` and `SalaryStats`, are defined in Employee.cs and SalaryStats.cs. These classes are used in a workflow that shows how to perform simple arithmetic and string operations on properties of variables of complex types.  \n  \n The salary calculation workflow is defined both in XAML and in C# to demonstrate the two authoring styles. The XAML version is contained in SalaryCalculation.xaml and can be viewed and edited in the workflow designer. The C# version resides in Program.cs. The expressions used in XAML conform to Visual Basic syntax, and use <xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601> and <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> expression activities to execute. [!INCLUDE[crabout](../../../../includes/crabout-md.md)] Visual Basic expressions see, [Visual Basic Expressions](http://go.microsoft.com/fwlink/?LinkId=165912). On the other hand, expressions in C# are written as lambda expressions and use <xref:System.Activities.Expressions.LambdaValue%601> and <xref:System.Activities.Expressions.LambdaReference%601> expression activities. Writing expressions as lambda expressions allows the C# compiler to provide syntax highlighting and static verification. [!INCLUDE[crabout](../../../../includes/crabout-md.md)] lambda expressions in C#, see [Lambda Expressions (C# Programming Guide)](http://go.microsoft.com/fwlink/?LinkId=182082). If a workflow is authored in code using Visual Basic, then Visual Basic lambda expressions are used. [!INCLUDE[crabout](../../../../includes/crabout-md.md)] lambda expressions in Visual Basic, see [Lambda Expressions (Visual Basic)](http://go.microsoft.com/fwlink/?LinkId=152437). [!INCLUDE[crabout](../../../../includes/crabout-md.md)] about authoring workflows using code, see [Authoring Workflows, Activities, and Expressions Using Imperative Code](../../../../docs/framework/windows-workflow-foundation/authoring-workflows-activities-and-expressions-using-imperative-code.md).  \n  \n#### To run the sample  \n  \n1.  Open the Expressions.sln solution in [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)].  \n  \n2.  Press CTRL+SHIFT+B to build the solution or select **Build Solution** from the **Build** menu.  \n  \n    > [!NOTE]\n    >  To open SalaryCalculation.xaml in the Visual Studio designer, you must first compile your project to ensure that `Employee` and `SalaryStats` classes are available to the designer.  \n  \n3.  Once the build has succeeded, press F5 or select **Start Debugging** from the **Debug** menu. Alternatively you can press Ctrl+F5 or select **Start Without Debugging** from the **Debug** menu to run without debugging.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your computer. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Basic\\Expressions`  \n  \n## See Also","nodes":[{"pos":[12,41],"content":"Expressions2 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Expressions2 | Microsoft Docs","pos":[0,29]}]},{"pos":[307,318],"content":"Expressions","linkify":"Expressions","nodes":[{"content":"Expressions","pos":[0,11]}]},{"content":"This sample demonstrates how to use basic expressions in a workflow.","pos":[319,387]},{"content":"It consists of a workflow that calculates basic salary statistics for two employees of a fictitious company.","pos":[388,496]},{"content":"Two classes, <ph id=\"ph1\">`Employee`</ph> and <ph id=\"ph2\">`SalaryStats`</ph>, are defined in Employee.cs and SalaryStats.cs.","pos":[497,586],"source":" Two classes, `Employee` and `SalaryStats`, are defined in Employee.cs and SalaryStats.cs."},{"content":"These classes are used in a workflow that shows how to perform simple arithmetic and string operations on properties of variables of complex types.","pos":[587,734]},{"content":"The salary calculation workflow is defined both in XAML and in C# to demonstrate the two authoring styles.","pos":[741,847]},{"content":"The XAML version is contained in SalaryCalculation.xaml and can be viewed and edited in the workflow designer.","pos":[848,958]},{"content":"The C# version resides in Program.cs.","pos":[959,996]},{"content":"The expressions used in XAML conform to Visual Basic syntax, and use <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601&gt;</ph> and <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601&gt;</ph> expression activities to execute.","pos":[997,1229],"source":" The expressions used in XAML conform to Visual Basic syntax, and use <xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601> and <xref:Microsoft.VisualBasic.Activities.VisualBasicReference%601> expression activities to execute."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> Visual Basic expressions see, <bpt id=\"p1\">[</bpt>Visual Basic Expressions<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=165912)</ept>.","pos":[1230,1390],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] Visual Basic expressions see, [Visual Basic Expressions](http://go.microsoft.com/fwlink/?LinkId=165912)."},{"content":"On the other hand, expressions in C# are written as lambda expressions and use <ph id=\"ph1\">&lt;xref:System.Activities.Expressions.LambdaValue%601&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Activities.Expressions.LambdaReference%601&gt;</ph> expression activities.","pos":[1391,1606],"source":" On the other hand, expressions in C# are written as lambda expressions and use <xref:System.Activities.Expressions.LambdaValue%601> and <xref:System.Activities.Expressions.LambdaReference%601> expression activities."},{"content":"Writing expressions as lambda expressions allows the C# compiler to provide syntax highlighting and static verification.","pos":[1607,1727]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> lambda expressions in C#, see <bpt id=\"p1\">[</bpt>Lambda Expressions (C# Programming Guide)<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=182082)</ept>.","pos":[1728,1905],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] lambda expressions in C#, see [Lambda Expressions (C# Programming Guide)](http://go.microsoft.com/fwlink/?LinkId=182082)."},{"content":"If a workflow is authored in code using Visual Basic, then Visual Basic lambda expressions are used.","pos":[1906,2006]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> lambda expressions in Visual Basic, see <bpt id=\"p1\">[</bpt>Lambda Expressions (Visual Basic)<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=152437)</ept>.","pos":[2007,2186],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] lambda expressions in Visual Basic, see [Lambda Expressions (Visual Basic)](http://go.microsoft.com/fwlink/?LinkId=152437)."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> about authoring workflows using code, see <bpt id=\"p1\">[</bpt>Authoring Workflows, Activities, and Expressions Using Imperative Code<ept id=\"p1\">](../../../../docs/framework/windows-workflow-foundation/authoring-workflows-activities-and-expressions-using-imperative-code.md)</ept>.","pos":[2187,2486],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] about authoring workflows using code, see [Authoring Workflows, Activities, and Expressions Using Imperative Code](../../../../docs/framework/windows-workflow-foundation/authoring-workflows-activities-and-expressions-using-imperative-code.md)."},{"pos":[2497,2514],"content":"To run the sample","linkify":"To run the sample","nodes":[{"content":"To run the sample","pos":[0,17]}]},{"pos":[2524,2615],"content":"Open the Expressions.sln solution in <ph id=\"ph1\">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>.","source":"Open the Expressions.sln solution in [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]."},{"pos":[2625,2719],"content":"Press CTRL+SHIFT+B to build the solution or select <bpt id=\"p1\">**</bpt>Build Solution<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Build<ept id=\"p2\">**</ept> menu.","source":"Press CTRL+SHIFT+B to build the solution or select **Build Solution** from the **Build** menu."},{"pos":[2731,2926],"content":"[!NOTE]\nTo open SalaryCalculation.xaml in the Visual Studio designer, you must first compile your project to ensure that `Employee` and `SalaryStats` classes are available to the designer.","leadings":["","    >  "],"nodes":[{"content":"To open SalaryCalculation.xaml in the Visual Studio designer, you must first compile your project to ensure that <ph id=\"ph1\">`Employee`</ph> and <ph id=\"ph2\">`SalaryStats`</ph> classes are available to the designer.","pos":[8,188],"source":"To open SalaryCalculation.xaml in the Visual Studio designer, you must first compile your project to ensure that `Employee` and `SalaryStats` classes are available to the designer."}]},{"content":"Once the build has succeeded, press F5 or select <bpt id=\"p1\">**</bpt>Start Debugging<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Debug<ept id=\"p2\">**</ept> menu.","pos":[2936,3029],"source":"Once the build has succeeded, press F5 or select **Start Debugging** from the **Debug** menu."},{"content":"Alternatively you can press Ctrl+F5 or select <bpt id=\"p1\">**</bpt>Start Without Debugging<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Debug<ept id=\"p2\">**</ept> menu to run without debugging.","pos":[3030,3153],"source":" Alternatively you can press Ctrl+F5 or select **Start Without Debugging** from the **Debug** menu to run without debugging."},{"pos":[3161,3294],"content":"[!IMPORTANT]\n The samples may already be installed on your computer. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your computer. Check for the following (default) directory before continuing.","pos":[13,131],"nodes":[{"content":"The samples may already be installed on your computer.","pos":[1,55]},{"content":"Check for the following (default) directory before continuing.","pos":[56,118]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[3348,3674],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[3675,3725]},{"pos":[3798,3806],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}