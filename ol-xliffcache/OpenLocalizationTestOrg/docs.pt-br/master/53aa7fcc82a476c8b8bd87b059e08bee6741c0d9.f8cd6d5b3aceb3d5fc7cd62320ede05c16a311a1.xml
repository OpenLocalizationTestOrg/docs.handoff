{"content":"---\ntitle: \"Constructing Types (Entity SQL)\"\nms.date: \"03/30/2017\"\nms.assetid: 41fa7bde-8d20-4a3f-a3d2-fb791e128010\n---\n# Constructing Types (Entity SQL)\n[!INCLUDE[esql](../../../../../../includes/esql-md.md)] provides three kinds of constructors: row constructors, named type constructors, and collection constructors.  \n  \n## Row Constructors  \n You use row constructors in [!INCLUDE[esql](../../../../../../includes/esql-md.md)] to construct anonymous, structurally typed records from one or more values. The result type of a row constructor is a row type whose field types correspond to the types of the values used to construct the row. For example, the following expression constructs a value of type `Record(a int, b string, c int)`:  \n  \n `ROW(1 AS a, \"abc\" AS b, a + 34 AS c)`  \n  \n If you do not provide an alias for an expression in a row constructor, the Entity Framework will try to generate one. For more information, see the \"Aliasing Rules\" section in [Identifiers](../../../../../../docs/framework/data/adonet/ef/language-reference/identifiers-entity-sql.md).  \n  \n The following rules apply to expression aliasing in a row constructor:  \n  \n-   Expressions in a row constructor cannot refer to other aliases in the same constructor.  \n  \n-   Two expressions in the same row constructor cannot have the same alias.  \n  \n For more information about row constructors, see [ROW](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md).  \n  \n## Collection Constructors  \n You use collection constructors in [!INCLUDE[esql](../../../../../../includes/esql-md.md)] to create an instance of a multiset from a list of values. All the values in the constructor must be of mutually compatible type `T`, and the constructor produces a collection of type `Multiset<T>`. For example, the following expression creates a collection of integers:  \n  \n `Multiset(1, 2, 3)`  \n  \n `{1, 2, 3}`  \n  \n Empty multiset constructors are not allowed because the type of the elements cannot be determined. The following is not valid:  \n  \n `multiset() {}`  \n  \n For more information, see [MULTISET](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md).  \n  \n## Named Type Constructors (NamedType Initializers)  \n [!INCLUDE[esql](../../../../../../includes/esql-md.md)] allows type constructors (initializers) to create instances of named complex types and entity types. For example, the following expression creates an instance of a `Person` type.  \n  \n `Person(\"abc\", 12)`  \n  \n The following expression creates an instance of a complex type.  \n  \n `MyModel.ZipCode(‘98118’, ‘4567’)`  \n  \n The following expression creates an instance of a nested complex type.  \n  \n `MyModel.AddressInfo('My street address', 'Seattle', 'WA', MyModel.ZipCode('98118', '4567'))`  \n  \n The following expression creates an instance of an entity with a nested complex type.  \n  \n `MyModel.Person(\"Bill\", MyModel.AddressInfo('My street address', 'Seattle', 'WA', MyModel.ZipCode('98118', '4567')))`  \n  \n The following example shows how to initialize a property of a complex type to null. `MyModel.ZipCode(‘98118’, null)`  \n  \n The arguments to the constructor are assumed to be in the same order as the declaration of the attributes of the type.  \n  \n For more information, see [Named Type Constructor](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md).  \n  \n## See also\n\n- [Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)\n- [Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)\n- [Type System](../../../../../../docs/framework/data/adonet/ef/language-reference/type-system-entity-sql.md)\n","nodes":[{"pos":[4,115],"embed":true,"restype":"x-metadata","content":"title: \"Constructing Types (Entity SQL)\"\nms.date: \"03/30/2017\"\nms.assetid: 41fa7bde-8d20-4a3f-a3d2-fb791e128010","nodes":[{"content":"Constructing Types (Entity SQL)","nodes":[{"pos":[0,31],"content":"Constructing Types (Entity SQL)","nodes":[{"content":"Constructing Types (Entity SQL)","pos":[0,31]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[122,153],"content":"Constructing Types (Entity SQL)","linkify":"Constructing Types (Entity SQL)","nodes":[{"content":"Constructing Types (Entity SQL)","pos":[0,31]}]},{"pos":[154,319],"content":"<ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> provides three kinds of constructors: row constructors, named type constructors, and collection constructors.","source":"[!INCLUDE[esql](../../../../../../includes/esql-md.md)] provides three kinds of constructors: row constructors, named type constructors, and collection constructors."},{"pos":[328,344],"content":"Row Constructors","linkify":"Row Constructors","nodes":[{"content":"Row Constructors","pos":[0,16]}]},{"content":"You use row constructors in <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> to construct anonymous, structurally typed records from one or more values.","pos":[348,507],"source":"You use row constructors in [!INCLUDE[esql](../../../../../../includes/esql-md.md)] to construct anonymous, structurally typed records from one or more values."},{"content":"The result type of a row constructor is a row type whose field types correspond to the types of the values used to construct the row.","pos":[508,641]},{"content":"For example, the following expression constructs a value of type <ph id=\"ph1\">`Record(a int, b string, c int)`</ph>:","pos":[642,740],"source":" For example, the following expression constructs a value of type `Record(a int, b string, c int)`:"},{"content":"If you do not provide an alias for an expression in a row constructor, the Entity Framework will try to generate one.","pos":[792,909]},{"content":"For more information, see the \"Aliasing Rules\" section in <bpt id=\"p1\">[</bpt>Identifiers<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/identifiers-entity-sql.md)</ept>.","pos":[910,1076],"source":" For more information, see the \"Aliasing Rules\" section in [Identifiers](../../../../../../docs/framework/data/adonet/ef/language-reference/identifiers-entity-sql.md)."},{"content":"The following rules apply to expression aliasing in a row constructor:","pos":[1083,1153]},{"content":"Expressions in a row constructor cannot refer to other aliases in the same constructor.","pos":[1163,1250]},{"content":"Two expressions in the same row constructor cannot have the same alias.","pos":[1260,1331]},{"pos":[1338,1479],"content":"For more information about row constructors, see <bpt id=\"p1\">[</bpt>ROW<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md)</ept>.","source":"For more information about row constructors, see [ROW](../../../../../../docs/framework/data/adonet/ef/language-reference/row-entity-sql.md)."},{"pos":[1488,1511],"content":"Collection Constructors","linkify":"Collection Constructors","nodes":[{"content":"Collection Constructors","pos":[0,23]}]},{"content":"You use collection constructors in <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> to create an instance of a multiset from a list of values.","pos":[1515,1664],"source":"You use collection constructors in [!INCLUDE[esql](../../../../../../includes/esql-md.md)] to create an instance of a multiset from a list of values."},{"content":"All the values in the constructor must be of mutually compatible type <ph id=\"ph1\">`T`</ph>, and the constructor produces a collection of type <ph id=\"ph2\">`Multiset&lt;T&gt;`</ph>.","pos":[1665,1804],"source":" All the values in the constructor must be of mutually compatible type `T`, and the constructor produces a collection of type `Multiset<T>`."},{"content":"For example, the following expression creates a collection of integers:","pos":[1805,1876]},{"content":"Empty multiset constructors are not allowed because the type of the elements cannot be determined.","pos":[1927,2025]},{"content":"The following is not valid:","pos":[2026,2053]},{"pos":[2082,2210],"content":"For more information, see <bpt id=\"p1\">[</bpt>MULTISET<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md)</ept>.","source":"For more information, see [MULTISET](../../../../../../docs/framework/data/adonet/ef/language-reference/multiset-entity-sql.md)."},{"pos":[2219,2267],"content":"Named Type Constructors (NamedType Initializers)","linkify":"Named Type Constructors (NamedType Initializers)","nodes":[{"content":"Named Type Constructors (NamedType Initializers)","pos":[0,48]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> allows type constructors (initializers) to create instances of named complex types and entity types.","pos":[2271,2427],"source":"[!INCLUDE[esql](../../../../../../includes/esql-md.md)] allows type constructors (initializers) to create instances of named complex types and entity types."},{"content":"For example, the following expression creates an instance of a <ph id=\"ph1\">`Person`</ph> type.","pos":[2428,2505],"source":" For example, the following expression creates an instance of a `Person` type."},{"content":"The following expression creates an instance of a complex type.","pos":[2538,2601]},{"content":"The following expression creates an instance of a nested complex type.","pos":[2649,2719]},{"content":"The following expression creates an instance of an entity with a nested complex type.","pos":[2826,2911]},{"content":"The following example shows how to initialize a property of a complex type to null.","pos":[3042,3125]},{"content":"The arguments to the constructor are assumed to be in the same order as the declaration of the attributes of the type.","pos":[3165,3283]},{"pos":[3290,3446],"content":"For more information, see <bpt id=\"p1\">[</bpt>Named Type Constructor<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md)</ept>.","source":"For more information, see [Named Type Constructor](../../../../../../docs/framework/data/adonet/ef/language-reference/named-type-constructor-entity-sql.md)."},{"pos":[3455,3463],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3467,3581],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept>","source":"[Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)"},{"pos":[3584,3696],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Overview<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)</ept>","source":"[Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)"},{"pos":[3699,3806],"content":"<bpt id=\"p1\">[</bpt>Type System<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/type-system-entity-sql.md)</ept>","source":"[Type System](../../../../../../docs/framework/data/adonet/ef/language-reference/type-system-entity-sql.md)"}]}