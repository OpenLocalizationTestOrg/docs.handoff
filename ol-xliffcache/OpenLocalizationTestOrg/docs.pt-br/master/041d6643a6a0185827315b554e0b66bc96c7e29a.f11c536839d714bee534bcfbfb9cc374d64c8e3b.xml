{"content":"---\ntitle: \"'Structure' constraint and a specific class type constraint cannot be combined\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32108\"\n  - \"bc32108\"\nhelpviewer_keywords: \n  - \"BC32108\"\nms.assetid: de461824-5aec-48d1-967d-b0e0609a8ba6\n---\n# 'Structure' constraint and a specific class type constraint cannot be combined\nA constraint list includes both the [Structure (Visual Basic)](../../visual-basic/language-reference/statements/structure-statement.md) constraint and the name of a defined class.  \n  \n A constraint list imposes requirements on the type argument passed to the type parameter. You can specify the following requirements in any combination:  \n  \n-   The type argument must implement one or more interfaces  \n  \n-   The type argument must inherit from at most one class  \n  \n-   The type argument must expose a parameterless constructor that the creating code can access (include the `New` constraint)  \n  \n If you do not include any specific class or interface in the constraint list, you can impose a more general requirement by specifying one of the following:  \n  \n-   The type argument must be a value type (include the `Structure` constraint)  \n  \n-   The type argument must be a reference type (include the `Class` constraint)  \n  \n You cannot specify both `Structure` and `Class` for the same type parameter, and you cannot specify either one more than once.  \n  \n **Error ID:** BC32108  \n  \n## To correct this error  \n  \n-   If you want the type argument to be a value type, remove the class name from the constraint list.  \n  \n-   If you want the type argument to inherit from the specified class name, remove the `Structure` keyword from the constraint list.  \n  \n## See also\n\n- [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n- [Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)\n","nodes":[{"pos":[4,239],"embed":true,"restype":"x-metadata","content":"title: \"'Structure' constraint and a specific class type constraint cannot be combined\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc32108\"\n  - \"bc32108\"\nhelpviewer_keywords: \n  - \"BC32108\"\nms.assetid: de461824-5aec-48d1-967d-b0e0609a8ba6","nodes":[{"content":"'Structure' constraint and a specific class type constraint cannot be combined","nodes":[{"pos":[0,78],"content":"'Structure' constraint and a specific class type constraint cannot be combined","nodes":[{"content":"'Structure' constraint and a specific class type constraint cannot be combined","pos":[0,78]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[246,324],"content":"'Structure' constraint and a specific class type constraint cannot be combined","linkify":"'Structure' constraint and a specific class type constraint cannot be combined","nodes":[{"content":"'Structure' constraint and a specific class type constraint cannot be combined","pos":[0,78]}]},{"pos":[325,504],"content":"A constraint list includes both the <bpt id=\"p1\">[</bpt>Structure (Visual Basic)<ept id=\"p1\">](../../visual-basic/language-reference/statements/structure-statement.md)</ept> constraint and the name of a defined class.","source":"A constraint list includes both the [Structure (Visual Basic)](../../visual-basic/language-reference/statements/structure-statement.md) constraint and the name of a defined class."},{"content":"A constraint list imposes requirements on the type argument passed to the type parameter.","pos":[511,600]},{"content":"You can specify the following requirements in any combination:","pos":[601,663]},{"content":"The type argument must implement one or more interfaces","pos":[673,728]},{"content":"The type argument must inherit from at most one class","pos":[738,791]},{"pos":[801,923],"content":"The type argument must expose a parameterless constructor that the creating code can access (include the <ph id=\"ph1\">`New`</ph> constraint)","source":"The type argument must expose a parameterless constructor that the creating code can access (include the `New` constraint)"},{"content":"If you do not include any specific class or interface in the constraint list, you can impose a more general requirement by specifying one of the following:","pos":[930,1085]},{"pos":[1095,1170],"content":"The type argument must be a value type (include the <ph id=\"ph1\">`Structure`</ph> constraint)","source":"The type argument must be a value type (include the `Structure` constraint)"},{"pos":[1180,1255],"content":"The type argument must be a reference type (include the <ph id=\"ph1\">`Class`</ph> constraint)","source":"The type argument must be a reference type (include the `Class` constraint)"},{"pos":[1262,1388],"content":"You cannot specify both <ph id=\"ph1\">`Structure`</ph> and <ph id=\"ph2\">`Class`</ph> for the same type parameter, and you cannot specify either one more than once.","source":"You cannot specify both `Structure` and `Class` for the same type parameter, and you cannot specify either one more than once."},{"pos":[1395,1416],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32108","source":"**Error ID:** BC32108"},{"pos":[1425,1446],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If you want the type argument to be a value type, remove the class name from the constraint list.","pos":[1456,1553]},{"pos":[1563,1691],"content":"If you want the type argument to inherit from the specified class name, remove the <ph id=\"ph1\">`Structure`</ph> keyword from the constraint list.","source":"If you want the type argument to inherit from the specified class name, remove the `Structure` keyword from the constraint list."},{"pos":[1700,1708],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1712,1827],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"},{"pos":[1830,1965],"content":"<bpt id=\"p1\">[</bpt>Value Types and Reference Types<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept>","source":"[Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)"}]}