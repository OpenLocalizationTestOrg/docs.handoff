{"content":"---\ntitle: \"Nothing and Strings in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"strings [Visual Basic], Nothing\"\nms.assetid: 261380af-2024-4ecf-823b-43b1034d92cd\n---\n# Nothing and Strings in Visual Basic\nThe Visual Basic runtime and the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] evaluate `Nothing` differently when it comes to strings.  \n  \n## Visual Basic Runtime and the .NET Framework  \n Consider the following example:  \n  \n [!code-vb[VbVbalrStrings#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class2.vb#47)]  \n  \n The Visual Basic runtime usually evaluates `Nothing` as an empty string (\"\"). The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] does not, however, and throws an exception whenever an attempt is made to perform a string operation on `Nothing`.  \n  \n## See also\n\n- [Introduction to Strings in Visual Basic](../../../../visual-basic/programming-guide/language-features/strings/introduction-to-strings.md)\n","nodes":[{"pos":[4,177],"embed":true,"restype":"x-metadata","content":"title: \"Nothing and Strings in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"strings [Visual Basic], Nothing\"\nms.assetid: 261380af-2024-4ecf-823b-43b1034d92cd","nodes":[{"content":"Nothing and Strings in Visual Basic","nodes":[{"pos":[0,35],"content":"Nothing and Strings in Visual Basic","nodes":[{"content":"Nothing and Strings in Visual Basic","pos":[0,35]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[184,219],"content":"Nothing and Strings in Visual Basic","linkify":"Nothing and Strings in Visual Basic","nodes":[{"content":"Nothing and Strings in Visual Basic","pos":[0,35]}]},{"pos":[220,363],"content":"The Visual Basic runtime and the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> evaluate <ph id=\"ph2\">`Nothing`</ph> differently when it comes to strings.","source":"The Visual Basic runtime and the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] evaluate `Nothing` differently when it comes to strings."},{"pos":[372,415],"content":"Visual Basic Runtime and the .NET Framework","linkify":"Visual Basic Runtime and the .NET Framework","nodes":[{"content":"Visual Basic Runtime and the .NET Framework","pos":[0,43]}]},{"content":"Consider the following example:","pos":[419,450]},{"content":"The Visual Basic runtime usually evaluates <ph id=\"ph1\">`Nothing`</ph> as an empty string (\"\").","pos":[577,654],"source":"The Visual Basic runtime usually evaluates `Nothing` as an empty string (\"\")."},{"content":"The <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> does not, however, and throws an exception whenever an attempt is made to perform a string operation on <ph id=\"ph2\">`Nothing`</ph>.","pos":[655,827],"source":" The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] does not, however, and throws an exception whenever an attempt is made to perform a string operation on `Nothing`."},{"pos":[836,844],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[848,986],"content":"<bpt id=\"p1\">[</bpt>Introduction to Strings in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/strings/introduction-to-strings.md)</ept>","source":"[Introduction to Strings in Visual Basic](../../../../visual-basic/programming-guide/language-features/strings/introduction-to-strings.md)"}]}