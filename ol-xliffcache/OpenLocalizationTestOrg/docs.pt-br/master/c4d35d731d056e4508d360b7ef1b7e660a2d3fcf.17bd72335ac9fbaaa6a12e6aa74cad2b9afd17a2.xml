{"content":"---\ntitle: \"XML Schema (XSD) Validation with XmlSchemaCollection | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: ad0b5717-3d32-41ad-a4d7-072c3e492b82\ncaps.latest.revision: 3\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# XML Schema (XSD) Validation with XmlSchemaCollection\nYou can use the <xref:System.Xml.Schema.XmlSchemaCollection> to validate an XML document against XML Schema definition language (XSD) schemas. The <xref:System.Xml.Schema.XmlSchemaCollection> improves performance by storing schemas in the collection so they are not loaded into memory each time validation occurs. If the schema exists in the schema collection, the `schemaLocation` attribute is used to look up the schema in the collection.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.Schema.XmlSchemaCollection> class is now obsolete and has been replaced with the <xref:System.Xml.Schema.XmlSchemaSet> class. For more information about the <xref:System.Xml.Schema.XmlSchemaSet> class see, [XmlSchemaSet for Schema Compilation](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md).  \n  \n The following example shows the root element of a data file.  \n  \n```  \n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"  \n    xmlns=\"urn:bookstore-schema\"  \n    elementFormDefault=\"qualified\"  \n    targetNamespace=\"urn:bookstore-schema\">  \n```  \n  \n For this example, the value of the `targetNamespace` attribute is `urn:bookstore-schema`, which is the same namespace that is used when adding the schema to the <xref:System.Xml.Schema.XmlSchemaCollection>.  \n  \n The following code example adds an XML Schema to the <xref:System.Xml.Schema.XmlSchemaCollection>.  \n  \n```vb  \nDim xsc As New XmlSchemaCollection()  \n' XML Schema.  \nxsc.Add(\"urn:bookstore-schema\", schema)   \nreader = New XmlTextReader(filename)  \nvreader = New XmlValidatingReader(reader)  \nvreader.Schemas.Add(xsc)  \n```  \n  \n```csharp  \nXmlSchemaCollection xsc = new XmlSchemaCollection();  \n// XML Schema.  \nxsc.Add(\"urn:bookstore-schema\", schema);  \nreader = new XmlTextReader (filename);  \nvreader = new XmlValidatingReader (reader);  \nvreader.Schemas.Add(xsc);  \n```  \n  \n The `targetNamespace` attribute is generally used when you add the `namespaceURI` property in the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method for the <xref:System.Xml.Schema.XmlSchemaCollection>. You can specify a null reference before adding the schema to the <xref:System.Xml.Schema.XmlSchemaCollection>. An empty string (\"\") should be used for schemas without a namespace. The <xref:System.Xml.Schema.XmlSchemaCollection> can have only one schema without a namespace.  \n  \n The following code example adds an XML Schema, HeadCount.xsd, to the <xref:System.Xml.Schema.XmlSchemaCollection> and validates HeadCount.xml.  \n  \n```vb  \nImports System  \nImports System.IO  \nImports System.Xml  \nImports System.Xml.Schema  \n  \nNamespace ValidationSample  \n  \n   Class Sample  \n  \n      Public Shared Sub Main()  \n         Dim tr As New XmlTextReader(\"HeadCount.xml\")  \n         Dim vr As New XmlValidatingReader(tr)  \n  \n         vr.Schemas.Add(\"xsdHeadCount\", \"HeadCount.xsd\")  \n         vr.ValidationType = ValidationType.Schema  \n         AddHandler vr.ValidationEventHandler, AddressOf ValidationHandler  \n  \n         While vr.Read()  \n         End While  \n         Console.WriteLine(\"Validation finished\")  \n      End Sub  \n      ' Main  \n  \n      Public Shared Sub ValidationHandler(sender As Object, args As ValidationEventArgs)  \n         Console.WriteLine(\"***Validation error\")  \n         Console.WriteLine(\"Severity:{0}\", args.Severity)  \n         Console.WriteLine(\"Message:{0}\", args.Message)  \n      End Sub  \n      ' ValidationHandler  \n   End Class  \n   ' Sample  \nEnd Namespace  \n' ValidationSample  \n```  \n  \n```csharp  \nusing System;  \nusing System.IO;  \nusing System.Xml;  \nusing System.Xml.Schema;  \n  \nnamespace ValidationSample  \n{  \n   class Sample  \n   {  \n      public static void Main()  \n      {  \n         XmlTextReader tr = new XmlTextReader(\"HeadCount.xml\");  \n         XmlValidatingReader vr = new XmlValidatingReader(tr);  \n  \n         vr.Schemas.Add(\"xsdHeadCount\", \"HeadCount.xsd\");  \n         vr.ValidationType = ValidationType.Schema;  \n         vr.ValidationEventHandler += new ValidationEventHandler (ValidationHandler);  \n  \n         while(vr.Read());  \n         Console.WriteLine(\"Validation finished\");  \n      }  \n  \n      public static void ValidationHandler(object sender, ValidationEventArgs args)  \n      {  \n         Console.WriteLine(\"***Validation error\");  \n         Console.WriteLine(\"\\tSeverity:{0}\", args.Severity);  \n         Console.WriteLine(\"\\tMessage  :{0}\", args.Message);  \n      }  \n   }  \n}  \n```  \n  \n The following outlines the contents of the input file, HeadCount.xml, to be validated.  \n  \n```  \n<!--Load HeadCount.xsd in SchemaCollection for Validation-->  \n<hc:HeadCount xmlns:hc='xsdHeadCount'>  \n   <Name>Waldo Pepper</Name>  \n   <Name>Red Pepper</Name>  \n</hc:HeadCount>  \n```  \n  \n The following outlines the contents of the XML Schema file, HeadCount.xsd, to be validated against.  \n  \n```  \n<xs:schema xmlns=\"xsdHeadCount\" targetNamespace=\"xsdHeadCount\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">  \n   <xs:element name='HeadCount' type=\"HEADCOUNT\"/>  \n   <xs:complexType name=\"HEADCOUNT\">  \n      <xs:sequence>  \n         <xs:element name='Name' type='xs:string' maxOccurs='unbounded'/>  \n      </xs:sequence>  \n      <xs:attribute name='division' type='xs:int' use='optional' default='8'/>  \n   </xs:complexType>  \n</xs:schema>  \n```  \n  \n The following code example creates an <xref:System.Xml.XmlValidatingReader> that takes an <xref:System.Xml.XmlTextReader>. The input file, sample4.xml, is validated against the XML Schema, sample4.xsd.  \n  \n```vb  \nDim tr As New XmlTextReader(\"sample4.xml\")  \nDim vr As New XmlValidatingReader(tr)  \nvr.ValidationType = ValidationType.Schema  \nvr.Schemas.Add(\"datatypesTest\", \"sample4.xsd\")  \nAddHandler vr.ValidationEventHandler, AddressOf ValidationCallBack  \nWhile vr.Read()  \n   Console.WriteLine(\"NodeType: {0} NodeName: {1}\", vr.NodeType, vr.Name)  \nEnd While  \n```  \n  \n```csharp  \nXmlTextReader tr = new XmlTextReader(\"sample4.xml\");  \nXmlValidatingReader vr = new XmlValidatingReader(tr);  \nvr.ValidationType = ValidationType.Schema;  \n        vr.Schemas.Add(\"datatypesTest\", \"sample4.xsd\");  \nvr.ValidationEventHandler += new ValidationEventHandler(ValidationCallBack);  \nwhile(vr.Read()) {  \n    Console.WriteLine(\"NodeType: {0} NodeName: {1}\", vr.NodeType, vr.Name);  \n    }  \n```  \n  \n The following outlines the contents of the input file, sample4.xml, to be validated.  \n  \n```  \n<datatypes xmlns=\"datatypesTest\">  \n    <number>  \n        <number_1>123</number_1>  \n    </number>  \n</datatypes>  \n```  \n  \n The following outlines the contents of the XML Schema file, sample4.xsd, to be validated against.  \n  \n```  \n<xs:schema   \n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"   \n    xmlns:tns=\"datatypesTest\"   \n    targetNamespace=\"datatypesTest\"  \n    elementFormDefault=\"qualified\">  \n  \n<xs:element name = \"datatypes\">  \n  <xs:complexType>  \n    <xs:all>  \n        <xs:element name=\"number\">  \n            <xs:complexType>  \n                <xs:sequence>  \n                    <xs:element name=\"number_1\" type=\"xs:decimal\" maxOccurs=\"unbounded\"/>  \n                </xs:sequence>  \n            </xs:complexType>  \n        </xs:element>  \n    </xs:all>  \n  </xs:complexType>  \n</xs:element>  \n</xs:schema>  \n```  \n  \n## See Also  \n <xref:System.Xml.XmlParserContext>   \n <xref:System.Xml.XmlValidatingReader.ValidationEventHandler?displayProperty=fullName>   \n <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName>   \n [XmlSchemaCollection Schema Compilation](../../../../docs/standard/data/xml/xmlschemacollection-schema-compilation.md)","nodes":[{"pos":[4,419],"nodes":[{"content":"XML Schema (XSD) Validation with XmlSchemaCollection | Microsoft Docs","nodes":[{"pos":[0,69],"content":"XML Schema (XSD) Validation with XmlSchemaCollection | Microsoft Docs","nodes":[{"content":"XML Schema (XSD) Validation with XmlSchemaCollection | Microsoft Docs","pos":[0,69]}]}],"pos":[6,78],"yaml":true}],"content":"title: \"XML Schema (XSD) Validation with XmlSchemaCollection | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: ad0b5717-3d32-41ad-a4d7-072c3e492b82\ncaps.latest.revision: 3\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[426,478],"content":"XML Schema (XSD) Validation with XmlSchemaCollection","linkify":"XML Schema (XSD) Validation with XmlSchemaCollection","nodes":[{"content":"XML Schema (XSD) Validation with XmlSchemaCollection","pos":[0,52]}]},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> to validate an XML document against XML Schema definition language (XSD) schemas.","pos":[479,621],"source":"You can use the <xref:System.Xml.Schema.XmlSchemaCollection> to validate an XML document against XML Schema definition language (XSD) schemas."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> improves performance by storing schemas in the collection so they are not loaded into memory each time validation occurs.","pos":[622,792],"source":" The <xref:System.Xml.Schema.XmlSchemaCollection> improves performance by storing schemas in the collection so they are not loaded into memory each time validation occurs."},{"content":"If the schema exists in the schema collection, the <ph id=\"ph1\">`schemaLocation`</ph> attribute is used to look up the schema in the collection.","pos":[793,919],"source":" If the schema exists in the schema collection, the `schemaLocation` attribute is used to look up the schema in the collection."},{"pos":[927,1283],"content":"[!IMPORTANT]\n The <xref:System.Xml.Schema.XmlSchemaCollection> class is now obsolete and has been replaced with the <xref:System.Xml.Schema.XmlSchemaSet> class. For more information about the <xref:System.Xml.Schema.XmlSchemaSet> class see, [XmlSchemaSet for Schema Compilation](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md).","leadings":["","> "],"nodes":[{"content":"The <xref:System.Xml.Schema.XmlSchemaCollection> class is now obsolete and has been replaced with the <xref:System.Xml.Schema.XmlSchemaSet> class. For more information about the <xref:System.Xml.Schema.XmlSchemaSet> class see, [XmlSchemaSet for Schema Compilation](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md).","pos":[14,354],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> class is now obsolete and has been replaced with the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class.","pos":[0,146],"source":"The <xref:System.Xml.Schema.XmlSchemaCollection> class is now obsolete and has been replaced with the <xref:System.Xml.Schema.XmlSchemaSet> class."},{"content":"For more information about the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class see, <bpt id=\"p1\">[</bpt>XmlSchemaSet for Schema Compilation<ept id=\"p1\">](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)</ept>.","pos":[147,340],"source":" For more information about the <xref:System.Xml.Schema.XmlSchemaSet> class see, [XmlSchemaSet for Schema Compilation](../../../../docs/standard/data/xml/xmlschemaset-for-schema-compilation.md)."}]}]},{"content":"The following example shows the root element of a data file.","pos":[1290,1350]},{"pos":[1547,1753],"content":"For this example, the value of the <ph id=\"ph1\">`targetNamespace`</ph> attribute is <ph id=\"ph2\">`urn:bookstore-schema`</ph>, which is the same namespace that is used when adding the schema to the <ph id=\"ph3\">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.","source":"For this example, the value of the `targetNamespace` attribute is `urn:bookstore-schema`, which is the same namespace that is used when adding the schema to the <xref:System.Xml.Schema.XmlSchemaCollection>."},{"content":"The following code example adds an XML Schema to the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.","pos":[1760,1858],"source":"The following code example adds an XML Schema to the <xref:System.Xml.Schema.XmlSchemaCollection>."},{"content":"The <ph id=\"ph1\">`targetNamespace`</ph> attribute is generally used when you add the <ph id=\"ph2\">`namespaceURI`</ph> property in the <ph id=\"ph3\">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A&gt;</ph> method for the <ph id=\"ph4\">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.","pos":[2341,2551],"source":"The `targetNamespace` attribute is generally used when you add the `namespaceURI` property in the <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> method for the <xref:System.Xml.Schema.XmlSchemaCollection>."},{"content":"You can specify a null reference before adding the schema to the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.","pos":[2552,2662],"source":" You can specify a null reference before adding the schema to the <xref:System.Xml.Schema.XmlSchemaCollection>."},{"content":"An empty string (\"\") should be used for schemas without a namespace.","pos":[2663,2731]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> can have only one schema without a namespace.","pos":[2732,2826],"source":" The <xref:System.Xml.Schema.XmlSchemaCollection> can have only one schema without a namespace."},{"content":"The following code example adds an XML Schema, HeadCount.xsd, to the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> and validates HeadCount.xml.","pos":[2833,2975],"source":"The following code example adds an XML Schema, HeadCount.xsd, to the <xref:System.Xml.Schema.XmlSchemaCollection> and validates HeadCount.xml."},{"content":"The following outlines the contents of the input file, HeadCount.xml, to be validated.","pos":[4917,5003]},{"content":"The following outlines the contents of the XML Schema file, HeadCount.xsd, to be validated against.","pos":[5207,5306]},{"content":"The following code example creates an <ph id=\"ph1\">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> that takes an <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextReader&gt;</ph>.","pos":[5770,5892],"source":"The following code example creates an <xref:System.Xml.XmlValidatingReader> that takes an <xref:System.Xml.XmlTextReader>."},{"content":"The input file, sample4.xml, is validated against the XML Schema, sample4.xsd.","pos":[5893,5971]},{"content":"The following outlines the contents of the input file, sample4.xml, to be validated.","pos":[6769,6853]},{"content":"The following outlines the contents of the XML Schema file, sample4.xsd, to be validated against.","pos":[6992,7089]},{"pos":[7710,7718],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlParserContext&gt;</ph>","pos":[7722,7756],"source":"<xref:System.Xml.XmlParserContext> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlValidatingReader.ValidationEventHandler?displayProperty=fullName&gt;</ph>","pos":[7761,7846],"source":"<xref:System.Xml.XmlValidatingReader.ValidationEventHandler?displayProperty=fullName> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName&gt;</ph>","pos":[7851,7924],"source":"<xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=fullName> "},{"content":"<bpt id=\"p1\">[</bpt>XmlSchemaCollection Schema Compilation<ept id=\"p1\">](../../../../docs/standard/data/xml/xmlschemacollection-schema-compilation.md)</ept>","pos":[7929,8047],"source":"[XmlSchemaCollection Schema Compilation](../../../../docs/standard/data/xml/xmlschemacollection-schema-compilation.md)"}]}