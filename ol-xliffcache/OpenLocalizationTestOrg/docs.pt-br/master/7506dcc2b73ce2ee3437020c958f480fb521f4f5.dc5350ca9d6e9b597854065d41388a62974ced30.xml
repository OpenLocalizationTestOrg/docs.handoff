{"content":"---\ntitle: \"Announcements Sample\"\nms.date: \"03/30/2017\"\nms.assetid: 954a75e4-9a97-41d6-94fc-43765d4205a9\n---\n# Announcements Sample\nThis sample shows how to use the Announcement functionality of the Discovery feature. Announcements allow services to send out announcement messages that contain metadata about the service. By default a hello announcement is sent when the service starts up and a bye announcement is sent when the service shuts down. These announcements can be multicast or they can be sent point-to-point. This sample consists of two projects service and client.  \n  \n## Service  \n This project contains a self-hosted calculator service. In the `Main` method, a service host is created and a service endpoint is added to it. Next, a <xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior> is created. To enable announcements, an announcement endpoint must be added to the <xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior>. In this case a standard endpoint, using UDP multicast is added as the announcement endpoint. This broadcasts the announcements over a well-known UDP address.  \n  \n```csharp\nUri baseAddress = new Uri(\"http://localhost:8000/\" + Guid.NewGuid().ToString());  \n  \n// Create a ServiceHost for the CalculatorService type.  \nusing (ServiceHost serviceHost = new ServiceHost(typeof(CalculatorService), baseAddress))  \n{  \n     serviceHost.AddServiceEndpoint(typeof(ICalculatorService), new WSHttpBinding(), String.Empty);  \n  \n     ServiceDiscoveryBehavior serviceDiscoveryBehavior = new ServiceDiscoveryBehavior();  \n  \n     // Announce the availability of the service over UDP multicast  \n    serviceDiscoveryBehavior.AnnouncementEndpoints.Add(new UdpAnnouncementEndpoint());  \n  \n    // Make the service discoverable over UDP multicast.  \n    serviceHost.Description.Behaviors.Add(serviceDiscoveryBehavior);                  \n    serviceHost.AddServiceEndpoint(new UdpDiscoveryEndpoint());  \n    serviceHost.Open();  \n    // ...  \n}  \n```  \n  \n## Client  \n In this project, note that the client hosts an <xref:System.ServiceModel.Discovery.AnnouncementService>. Furthermore, two delegates are registered with events. These events dictate what the client does when online and offline announcements are received.  \n  \n```csharp\n// Create an AnnouncementService instance  \nAnnouncementService announcementService = new AnnouncementService();  \n  \n// Subscribe the announcement events  \nannouncementService.OnlineAnnouncementReceived += OnOnlineEvent;  \nannouncementService.OfflineAnnouncementReceived += OnOfflineEvent;  \n```  \n  \n The `OnOnlineEvent` and `OnOfflineEvent` methods handle the hello and bye announcement messages respectively.  \n  \n```csharp\nstatic void OnOnlineEvent(object sender, AnnouncementEventArgs e)  \n{  \n    Console.WriteLine();              \n    Console.WriteLine(\"Received an online announcement from {0}:\", e.AnnouncementMessage.EndpointDiscoveryMetadata.Address);  \nPrintEndpointDiscoveryMetadata(e.AnnouncementMessage.EndpointDiscoveryMetadata);  \n}  \n  \nstatic void OnOfflineEvent(object sender, AnnouncementEventArgs e)  \n{  \n    Console.WriteLine();  \n    Console.WriteLine(\"Received an offline announcement from {0}:\", e.AnnouncementMessage.EndpointDiscoveryMetadata.Address);  \n            PrintEndpointDiscoveryMetadata(e.AnnouncementMessage.EndpointDiscoveryMetadata);  \n}  \n```  \n  \n#### To use this sample  \n  \n1.  This sample uses HTTP endpoints and to run this sample, proper URL ACLs must be added see [Configuring HTTP and HTTPS](https://go.microsoft.com/fwlink/?LinkId=70353) for details. Executing the following command at an elevated privilege should add the appropriate ACLs. You may want to substitute your Domain and Username for the following arguments if the command does not work as is. `netsh http add urlacl url=http://+:8000/ user=%DOMAIN%\\%UserName%`  \n  \n2.  Build the solution.  \n  \n3.  Run the client.exe application.  \n  \n4.  Run the service.exe application. Note the client receives an online announcement.  \n  \n5.  Close the service.exe application. Note the client receives an offline announcement.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Basic\\Discovery\\Announcements`  \n","nodes":[{"pos":[4,104],"embed":true,"restype":"x-metadata","content":"title: \"Announcements Sample\"\nms.date: \"03/30/2017\"\nms.assetid: 954a75e4-9a97-41d6-94fc-43765d4205a9","nodes":[{"content":"Announcements Sample","nodes":[{"pos":[0,20],"content":"Announcements Sample","nodes":[{"content":"Announcements Sample","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[111,131],"content":"Announcements Sample","linkify":"Announcements Sample","nodes":[{"content":"Announcements Sample","pos":[0,20]}]},{"content":"This sample shows how to use the Announcement functionality of the Discovery feature.","pos":[132,217]},{"content":"Announcements allow services to send out announcement messages that contain metadata about the service.","pos":[218,321]},{"content":"By default a hello announcement is sent when the service starts up and a bye announcement is sent when the service shuts down.","pos":[322,448]},{"content":"These announcements can be multicast or they can be sent point-to-point.","pos":[449,521]},{"content":"This sample consists of two projects service and client.","pos":[522,578]},{"pos":[587,594],"content":"Service","linkify":"Service","nodes":[{"content":"Service","pos":[0,7]}]},{"content":"This project contains a self-hosted calculator service.","pos":[598,653]},{"content":"In the <ph id=\"ph1\">`Main`</ph> method, a service host is created and a service endpoint is added to it.","pos":[654,740],"source":" In the `Main` method, a service host is created and a service endpoint is added to it."},{"content":"Next, a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> is created.","pos":[741,822],"source":" Next, a <xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior> is created."},{"content":"To enable announcements, an announcement endpoint must be added to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph>.","pos":[823,956],"source":" To enable announcements, an announcement endpoint must be added to the <xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior>."},{"content":"In this case a standard endpoint, using UDP multicast is added as the announcement endpoint.","pos":[957,1049]},{"content":"This broadcasts the announcements over a well-known UDP address.","pos":[1050,1114]},{"pos":[1998,2004],"content":"Client","linkify":"Client","nodes":[{"content":"Client","pos":[0,6]}]},{"content":"In this project, note that the client hosts an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Discovery.AnnouncementService&gt;</ph>.","pos":[2008,2112],"source":"In this project, note that the client hosts an <xref:System.ServiceModel.Discovery.AnnouncementService>."},{"content":"Furthermore, two delegates are registered with events.","pos":[2113,2167]},{"content":"These events dictate what the client does when online and offline announcements are received.","pos":[2168,2261]},{"pos":[2580,2689],"content":"The <ph id=\"ph1\">`OnOnlineEvent`</ph> and <ph id=\"ph2\">`OnOfflineEvent`</ph> methods handle the hello and bye announcement messages respectively.","source":"The `OnOnlineEvent` and `OnOfflineEvent` methods handle the hello and bye announcement messages respectively."},{"pos":[3374,3392],"content":"To use this sample","linkify":"To use this sample","nodes":[{"content":"To use this sample","pos":[0,18]}]},{"content":"This sample uses HTTP endpoints and to run this sample, proper URL ACLs must be added see <bpt id=\"p1\">[</bpt>Configuring HTTP and HTTPS<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=70353)</ept> for details.","pos":[3402,3580],"source":"This sample uses HTTP endpoints and to run this sample, proper URL ACLs must be added see [Configuring HTTP and HTTPS](https://go.microsoft.com/fwlink/?LinkId=70353) for details."},{"content":"Executing the following command at an elevated privilege should add the appropriate ACLs.","pos":[3581,3670]},{"content":"You may want to substitute your Domain and Username for the following arguments if the command does not work as is.","pos":[3671,3786]},{"content":"Build the solution.","pos":[3864,3883]},{"content":"Run the client.exe application.","pos":[3893,3924]},{"content":"Run the service.exe application.","pos":[3934,3966]},{"content":"Note the client receives an online announcement.","pos":[3967,4015]},{"content":"Close the service.exe application.","pos":[4025,4059]},{"content":"Note the client receives an offline announcement.","pos":[4060,4109]},{"pos":[4117,4249],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":"The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[14,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[0,53]},{"content":"Check for the following (default) directory before continuing.","pos":[54,116]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all Windows Communication Foundation (WCF) and <ph id=\"ph1\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[4303,4613],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](https://go.microsoft.com/fwlink/?LinkId=150780) to download all Windows Communication Foundation (WCF) and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[4614,4664]}]}