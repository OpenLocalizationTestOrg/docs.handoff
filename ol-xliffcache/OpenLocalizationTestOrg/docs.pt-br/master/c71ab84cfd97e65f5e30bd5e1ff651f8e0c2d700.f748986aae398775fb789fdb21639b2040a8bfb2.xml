{"content":"---\ntitle: Publish .NET Core apps with the CLI\ndescription: Learn to publish a .NET Core app with the .NET Core SDK command-line interface (CLI) tools.\nauthor: thraka\nms.author: adegeo\nms.date: 01/16/2019\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nms.custom: seodec18\n---\n\n# Publish .NET Core apps with the CLI\n\nThis article demonstrates how you can publish your .NET Core application from the command line. .NET Core provides three ways to publish your applications. Framework-dependent deployment produces a cross-platform .dll file that uses the locally installed .NET Core runtime. Framework-dependent executable produces a platform-specific executable that uses the locally installed .NET Core runtime. Self-contained executable produces a platform-specific executable and includes a local copy of the .NET Core runtime.\n\nFor an overview of these publishing modes, see [.NET Core Application Deployment](index.md).\n\nLooking for some quick help on using the CLI? The following table shows some examples of how to publish your app. You can specify the target framework with the `-f <TFM>` parameter or by editing the project file. For more information, see [Publishing basics](#publishing-basics).\n\n| Publish Mode | SDK Version | Command |\n| ------------ | ----------- | ------- |\n| Framework-dependent deployment | 2.x | `dotnet publish -c Release` |\n| Framework-dependent executable | 2.2 | `dotnet publish -c Release -r <RID> --self-contained false` |\n|                                | 3.0 | `dotnet publish -c Release -r <RID> --self-contained false` |\n|                                | 3.0* | `dotnet publish -c Release` |\n| Self-contained deployment      | 2.1 | `dotnet publish -c Release -r <RID> --self-contained true` |\n|                                | 2.2 | `dotnet publish -c Release -r <RID> --self-contained true` |\n|                                | 3.0 | `dotnet publish -c Release -r <RID> --self-contained true` |\n\n> [!IMPORTANT]\n> \\*When using SDK version 3.0, framework-dependent executable this is the default publishing mode when running the basic `dotnet publish` command. This only applies to projects that target **.NET Core 2.1** or **.NET Core 3.0**.\n\n## Publishing basics\n\nThe `<TargetFramework>` setting of the project file specifies the default target framework when you publish your app. You can change the target framework to any valid [Target Framework Moniker (TFM)](../../standard/frameworks.md). For example, if your project uses `<TargetFramework>netcoreapp2.2</TargetFramework>`, a binary that targets .NET Core 2.2 is created. The TFM specified in this setting is the default target used by the [`dotnet publish`](../tools/dotnet-publish.md) command.\n\nIf you want to target more than one framework, you can set the `<TargetFrameworks>` setting to more than one TFM value separated by a semicolon. You can publish one of the frameworks with the `dotnet publish -f <TFM>` command. For example, if you have `<TargetFrameworks>netcoreapp2.1;netcoreapp2.2</TargetFrameworks>` and run `dotnet publish -f netcoreapp2.1`, a binary that targets .NET Core 2.1 is created.\n\nUnless otherwise set, the output directory of the [`dotnet publish`](../tools/dotnet-publish.md) command is `./bin/<BUILD-CONFIGURATION>/<TFM>/publish/`. The default **BUILD-CONFIGURATION** mode is **Debug** unless changed with the `-c` parameter. For example, `dotnet publish -c Release -f netcoreapp2.1` publishes to `myfolder/bin/Release/netcoreapp2.1/publish/`.\n\nIf you use .NET Core SDK 3.0, the default publish mode for apps that target .NET Core versions 2.1, 2.2, or 3.0 is framework-dependent executable.\n\nIf you use .NET Core SDK 2.1, the default publish mode for apps that target .NET Core versions 2.1, 2.2 is framework-dependent deployment.\n\n### Native dependencies\n\nIf your app has native dependencies, it may not run on a different operating system. For example, if your app uses the native Windows API, it won't run on macOS or Linux. You would need to provide platform-specific code and compile an executable for each platform.\n\nConsider also, if a library you referenced has a native dependency, your app may not run on every platform. However, it's possible a NuGet package you're referencing has included platform-specific versions to handle the required native dependencies for you.\n\nWhen distributing an app with native dependencies, you may need to use the `dotnet publish -r <RID>` switch to specify the target platform you want to publish for. For a list of runtime identifiers, see [Runtime Identifier (RID) catalog](../rid-catalog.md).\n\nMore information about platform-specific binaries is covered in the [Framework-dependent executable](#framework-dependent-executable) and [Self-contained deployment](#self-contained-deployment) sections.\n\n## Sample app\n\nYou can use either the following app to explore the publishing commands. The app is created by running the following commands in your terminal:\n\n```dotnetcli\nmkdir apptest1\ncd apptest1\ndotnet new console\ndotnet add package Figgle\n```\n\nThe `Program.cs` or `Program.vb` file that is generated by the console template needs to be changed to the following:\n\n```csharp\nusing System;\n\nnamespace apptest1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(Figgle.FiggleFonts.Standard.Render(\"Hello, World!\"));\n        }\n    }\n}\n```\n\n```vb\nImports System\n\nModule Program\n    Sub Main(args As String())\n        Console.WriteLine(Figgle.FiggleFonts.Standard.Render(\"Hello, World!\"))\n    End Sub\nEnd Module\n```\n\nWhen you run the app ([`dotnet run`](../tools/dotnet-run.md)), the following output is displayed:\n\n```terminal\n  _   _      _ _         __        __         _     _ _\n | | | | ___| | | ___    \\ \\      / /__  _ __| | __| | |\n | |_| |/ _ \\ | |/ _ \\    \\ \\ /\\ / / _ \\| '__| |/ _` | |\n |  _  |  __/ | | (_) |    \\ V  V / (_) | |  | | (_| |_|\n |_| |_|\\___|_|_|\\___( )    \\_/\\_/ \\___/|_|  |_|\\__,_(_)\n                     |/\n```\n\n## Framework-dependent deployment\n\nFor the .NET Core SDK 2.x CLI, framework-dependent deployment (FDD) is the default mode for the basic `dotnet publish` command.\n\nWhen you publish your app as an FDD, a `<PROJECT-NAME>.dll` file is created in the `./bin/<BUILD-CONFIGURATION>/<TFM>/publish/` folder. To run your app, navigate to the output folder and use the `dotnet <PROJECT-NAME>.dll` command.\n\nYour app is configured to target a specific version of .NET Core. That targeted .NET Core runtime is required to be on the machine where you want to run your app. For example, if your app targets .NET Core 2.2, any machine that your app runs on must have the .NET Core 2.2 runtime installed. As stated in the [Publishing basics](#publishing-basics) section, you can edit your project file to change the default target framework or to target more than one framework.\n\nPublishing an FDD creates an app that automatically rolls-forward to the latest .NET Core security patch available on the system that runs the app. For more information on version binding at compile time, see [Select the .NET Core version to use](../versions/selection.md#framework-dependent-apps-roll-forward).\n\n## Framework-dependent executable\n\nFor the .NET Core SDK 3.x CLI, framework-dependent executable (FDE) the default mode for the basic `dotnet publish` command. You don't need to specify any other parameters as long as you want to target the current operating system.\n\nIn this mode, a platform-specific executable host is created to host your cross-platform app. This mode is similar to FDD as FDD requires a host in the form of the `dotnet` command. The host executable filename varies per platform, and is named something similar to `<PROJECT-FILE>.exe`. You can run this executable directly instead of calling `dotnet <PROJECT-FILE>.dll` which is still an acceptable way to run the app.\n\nYour app is configured to target a specific version of .NET Core. That targeted .NET Core runtime is required to be on the machine where you want to run your app. For example, if your app targets .NET Core 2.2, any machine that your app runs on must have the .NET Core 2.2 runtime installed. As stated in the [Publishing basics](#publishing-basics) section, you can edit your project file to change the default target framework or to target more than one framework.\n\nPublishing an FDE creates an app that automatically rolls-forward to the latest .NET Core security patch available on the system that runs the app. For more information on version binding at compile time, see [Select the .NET Core version to use](../versions/selection.md#framework-dependent-apps-roll-forward).\n\nYou must (except for .NET Core 3.x when you target the current platform) use the following switches with the `dotnet publish` command to publish an FDE:\n\n- `-r <RID>`\n  This switch uses an identifier (RID) to specify the target platform. For a list of runtime identifiers, see [Runtime Identifier (RID) catalog](../rid-catalog.md).\n\n- `--self-contained false`\n  This switch tells the .NET Core SDK to create an executable as an FDE.\n\nWhenever you use the `-r` switch, the output folder path changes to: `./bin/<BUILD-CONFIGURATION>/<TFM>/<RID>/publish/`\n\nIf you use the [example app](#sample-app), run `dotnet publish -f netcoreapp2.2 -r win10-x64 --self-contained false`. This command creates the following executable: `./bin/Debug/netcoreapp2.2/win10-x64/publish/apptest1.exe`\n\n> [!NOTE]\n> You can reduce the total size of your deployment by enabling **globalization invariant mode**. This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture). For more information about **globalization invariant mode** and how to enable it, see [.NET Core Globalization Invariant Mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)\n\n## Self-contained deployment\n\nWhen you publish a self-contained deployment (SCD), the .NET Core SDK creates a platform-specific executable. Publishing an SCD includes all  required .NET Core files to run your app but it doesn't include the [native dependencies of .NET Core](https://github.com/dotnet/core/blob/master/Documentation/prereqs.md). These dependencies must be present on the system before the app runs.\n\nPublishing an SCD creates an app that doesn't roll-forward to the latest available .NET Core security patch. For more information on version binding at compile time, see [Select the .NET Core version to use](../versions/selection.md#self-contained-deployments-include-the-selected-runtime).\n\nYou must use the following switches with the `dotnet publish` command to publish an SCD:\n\n- `-r <RID>`\n  This switch uses an identifier (RID) to specify the target platform. For a list of runtime identifiers, see [Runtime Identifier (RID) catalog](../rid-catalog.md).\n\n- `--self-contained true`\n  This switch tells the .NET Core SDK to create an executable as an SCD.\n\n> [!NOTE]\n> You can reduce the total size of your deployment by enabling **globalization invariant mode**. This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture). For more information about **globalization invariant mode** and how to enable it, see [.NET Core Globalization Invariant Mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)\n\n## See also\n\n- [.NET Core Application Deployment Overview](index.md)\n- [.NET Core Runtime IDentifier (RID) catalog](../rid-catalog.md)\n","nodes":[{"pos":[4,257],"embed":true,"restype":"x-metadata","content":"title: Publish .NET Core apps with the CLI\ndescription: Learn to publish a .NET Core app with the .NET Core SDK command-line interface (CLI) tools.\nauthor: thraka\nms.author: adegeo\nms.date: 01/16/2019\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nms.custom: seodec18","nodes":[{"content":"Publish .NET Core apps with the CLI","nodes":[{"pos":[0,35],"content":"Publish .NET Core apps with the CLI","nodes":[{"content":"Publish .NET Core apps with the CLI","pos":[0,35]}]}],"path":["title"],"nosxs":false},{"content":"Learn to publish a .NET Core app with the .NET Core SDK command-line interface (CLI) tools.","nodes":[{"pos":[0,91],"content":"Learn to publish a .NET Core app with the .NET Core SDK command-line interface (CLI) tools.","nodes":[{"content":"Learn to publish a .NET Core app with the .NET Core SDK command-line interface (CLI) tools.","pos":[0,91]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[265,300],"content":"Publish .NET Core apps with the CLI","linkify":"Publish .NET Core apps with the CLI","nodes":[{"content":"Publish .NET Core apps with the CLI","pos":[0,35]}]},{"content":"This article demonstrates how you can publish your .NET Core application from the command line.","pos":[302,397]},{"content":".NET Core provides three ways to publish your applications.","pos":[398,457]},{"content":"Framework-dependent deployment produces a cross-platform .dll file that uses the locally installed .NET Core runtime.","pos":[458,575]},{"content":"Framework-dependent executable produces a platform-specific executable that uses the locally installed .NET Core runtime.","pos":[576,697]},{"content":"Self-contained executable produces a platform-specific executable and includes a local copy of the .NET Core runtime.","pos":[698,815]},{"pos":[817,909],"content":"For an overview of these publishing modes, see <bpt id=\"p1\">[</bpt>.NET Core Application Deployment<ept id=\"p1\">](index.md)</ept>.","source":"For an overview of these publishing modes, see [.NET Core Application Deployment](index.md)."},{"content":"Looking for some quick help on using the CLI?","pos":[911,956]},{"content":"The following table shows some examples of how to publish your app.","pos":[957,1024]},{"content":"You can specify the target framework with the <ph id=\"ph1\">`-f &lt;TFM&gt;`</ph> parameter or by editing the project file.","pos":[1025,1123],"source":" You can specify the target framework with the `-f <TFM>` parameter or by editing the project file."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Publishing basics<ept id=\"p1\">](#publishing-basics)</ept>.","pos":[1124,1190],"source":" For more information, see [Publishing basics](#publishing-basics)."},{"content":"Publish Mode","pos":[1194,1206]},{"content":"SDK Version","pos":[1209,1220]},{"content":"Command","pos":[1223,1230]},{"content":"Framework-dependent deployment","pos":[1276,1306]},{"content":"2.x","pos":[1309,1312]},{"content":"Framework-dependent executable","pos":[1347,1377]},{"content":"2.2","pos":[1380,1383]},{"content":"3.0","pos":[1483,1486]},{"content":"3.0*","pos":[1586,1590]},{"content":"Self-contained deployment","pos":[1625,1650]},{"content":"2.1","pos":[1658,1661]},{"content":"2.2","pos":[1760,1763]},{"content":"3.0","pos":[1862,1865]},{"pos":[1932,2174],"content":"[!IMPORTANT]\n\\*When using SDK version 3.0, framework-dependent executable this is the default publishing mode when running the basic `dotnet publish` command. This only applies to projects that target **.NET Core 2.1** or **.NET Core 3.0**.","leadings":["","> "],"nodes":[{"content":"\\*When using SDK version 3.0, framework-dependent executable this is the default publishing mode when running the basic `dotnet publish` command. This only applies to projects that target **.NET Core 2.1** or **.NET Core 3.0**.","pos":[13,240],"nodes":[{"content":"<ph id=\"ph1\">\\*</ph>When using SDK version 3.0, framework-dependent executable this is the default publishing mode when running the basic <ph id=\"ph2\">`dotnet publish`</ph> command.","pos":[0,145],"source":"\\*When using SDK version 3.0, framework-dependent executable this is the default publishing mode when running the basic `dotnet publish` command."},{"content":"This only applies to projects that target <bpt id=\"p1\">**</bpt>.NET Core 2.1<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>.NET Core 3.0<ept id=\"p2\">**</ept>.","pos":[146,227],"source":" This only applies to projects that target **.NET Core 2.1** or **.NET Core 3.0**."}]}]},{"pos":[2179,2196],"content":"Publishing basics","linkify":"Publishing basics","nodes":[{"content":"Publishing basics","pos":[0,17]}]},{"content":"The <ph id=\"ph1\">`&lt;TargetFramework&gt;`</ph> setting of the project file specifies the default target framework when you publish your app.","pos":[2198,2315],"source":"The `<TargetFramework>` setting of the project file specifies the default target framework when you publish your app."},{"content":"You can change the target framework to any valid <bpt id=\"p1\">[</bpt>Target Framework Moniker (TFM)<ept id=\"p1\">](../../standard/frameworks.md)</ept>.","pos":[2316,2428],"source":" You can change the target framework to any valid [Target Framework Moniker (TFM)](../../standard/frameworks.md)."},{"content":"For example, if your project uses <ph id=\"ph1\">`&lt;TargetFramework&gt;netcoreapp2.2&lt;/TargetFramework&gt;`</ph>, a binary that targets .NET Core 2.2 is created.","pos":[2429,2562],"source":" For example, if your project uses `<TargetFramework>netcoreapp2.2</TargetFramework>`, a binary that targets .NET Core 2.2 is created."},{"content":"The TFM specified in this setting is the default target used by the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`dotnet publish`</ph><ept id=\"p1\">](../tools/dotnet-publish.md)</ept> command.","pos":[2563,2686],"source":" The TFM specified in this setting is the default target used by the [`dotnet publish`](../tools/dotnet-publish.md) command."},{"content":"If you want to target more than one framework, you can set the <ph id=\"ph1\">`&lt;TargetFrameworks&gt;`</ph> setting to more than one TFM value separated by a semicolon.","pos":[2688,2832],"source":"If you want to target more than one framework, you can set the `<TargetFrameworks>` setting to more than one TFM value separated by a semicolon."},{"content":"You can publish one of the frameworks with the <ph id=\"ph1\">`dotnet publish -f &lt;TFM&gt;`</ph> command.","pos":[2833,2914],"source":" You can publish one of the frameworks with the `dotnet publish -f <TFM>` command."},{"content":"For example, if you have <ph id=\"ph1\">`&lt;TargetFrameworks&gt;netcoreapp2.1;netcoreapp2.2&lt;/TargetFrameworks&gt;`</ph> and run <ph id=\"ph2\">`dotnet publish -f netcoreapp2.1`</ph>, a binary that targets .NET Core 2.1 is created.","pos":[2915,3097],"source":" For example, if you have `<TargetFrameworks>netcoreapp2.1;netcoreapp2.2</TargetFrameworks>` and run `dotnet publish -f netcoreapp2.1`, a binary that targets .NET Core 2.1 is created."},{"content":"Unless otherwise set, the output directory of the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`dotnet publish`</ph><ept id=\"p1\">](../tools/dotnet-publish.md)</ept> command is <ph id=\"ph2\">`./bin/&lt;BUILD-CONFIGURATION&gt;/&lt;TFM&gt;/publish/`</ph>.","pos":[3099,3252],"source":"Unless otherwise set, the output directory of the [`dotnet publish`](../tools/dotnet-publish.md) command is `./bin/<BUILD-CONFIGURATION>/<TFM>/publish/`."},{"content":"The default <bpt id=\"p1\">**</bpt>BUILD-CONFIGURATION<ept id=\"p1\">**</ept> mode is <bpt id=\"p2\">**</bpt>Debug<ept id=\"p2\">**</ept> unless changed with the <ph id=\"ph1\">`-c`</ph> parameter.","pos":[3253,3346],"source":" The default **BUILD-CONFIGURATION** mode is **Debug** unless changed with the `-c` parameter."},{"content":"For example, <ph id=\"ph1\">`dotnet publish -c Release -f netcoreapp2.1`</ph> publishes to <ph id=\"ph2\">`myfolder/bin/Release/netcoreapp2.1/publish/`</ph>.","pos":[3347,3464],"source":" For example, `dotnet publish -c Release -f netcoreapp2.1` publishes to `myfolder/bin/Release/netcoreapp2.1/publish/`."},{"content":"If you use .NET Core SDK 3.0, the default publish mode for apps that target .NET Core versions 2.1, 2.2, or 3.0 is framework-dependent executable.","pos":[3466,3612]},{"content":"If you use .NET Core SDK 2.1, the default publish mode for apps that target .NET Core versions 2.1, 2.2 is framework-dependent deployment.","pos":[3614,3752]},{"pos":[3758,3777],"content":"Native dependencies","linkify":"Native dependencies","nodes":[{"content":"Native dependencies","pos":[0,19]}]},{"content":"If your app has native dependencies, it may not run on a different operating system.","pos":[3779,3863]},{"content":"For example, if your app uses the native Windows API, it won't run on macOS or Linux.","pos":[3864,3949]},{"content":"You would need to provide platform-specific code and compile an executable for each platform.","pos":[3950,4043]},{"content":"Consider also, if a library you referenced has a native dependency, your app may not run on every platform.","pos":[4045,4152]},{"content":"However, it's possible a NuGet package you're referencing has included platform-specific versions to handle the required native dependencies for you.","pos":[4153,4302]},{"content":"When distributing an app with native dependencies, you may need to use the <ph id=\"ph1\">`dotnet publish -r &lt;RID&gt;`</ph> switch to specify the target platform you want to publish for.","pos":[4304,4467],"source":"When distributing an app with native dependencies, you may need to use the `dotnet publish -r <RID>` switch to specify the target platform you want to publish for."},{"content":"For a list of runtime identifiers, see <bpt id=\"p1\">[</bpt>Runtime Identifier (RID) catalog<ept id=\"p1\">](../rid-catalog.md)</ept>.","pos":[4468,4561],"source":" For a list of runtime identifiers, see [Runtime Identifier (RID) catalog](../rid-catalog.md)."},{"pos":[4563,4766],"content":"More information about platform-specific binaries is covered in the <bpt id=\"p1\">[</bpt>Framework-dependent executable<ept id=\"p1\">](#framework-dependent-executable)</ept> and <bpt id=\"p2\">[</bpt>Self-contained deployment<ept id=\"p2\">](#self-contained-deployment)</ept> sections.","source":"More information about platform-specific binaries is covered in the [Framework-dependent executable](#framework-dependent-executable) and [Self-contained deployment](#self-contained-deployment) sections."},{"pos":[4771,4781],"content":"Sample app","linkify":"Sample app","nodes":[{"content":"Sample app","pos":[0,10]}]},{"content":"You can use either the following app to explore the publishing commands.","pos":[4783,4855]},{"content":"The app is created by running the following commands in your terminal:","pos":[4856,4926]},{"pos":[5018,5135],"content":"The <ph id=\"ph1\">`Program.cs`</ph> or <ph id=\"ph2\">`Program.vb`</ph> file that is generated by the console template needs to be changed to the following:","source":"The `Program.cs` or `Program.vb` file that is generated by the console template needs to be changed to the following:"},{"pos":[5539,5636],"content":"When you run the app (<bpt id=\"p1\">[</bpt><ph id=\"ph1\">`dotnet run`</ph><ept id=\"p1\">](../tools/dotnet-run.md)</ept>), the following output is displayed:","source":"When you run the app ([`dotnet run`](../tools/dotnet-run.md)), the following output is displayed:"},{"pos":[5966,5996],"content":"Framework-dependent deployment","linkify":"Framework-dependent deployment","nodes":[{"content":"Framework-dependent deployment","pos":[0,30]}]},{"pos":[5998,6125],"content":"For the .NET Core SDK 2.x CLI, framework-dependent deployment (FDD) is the default mode for the basic <ph id=\"ph1\">`dotnet publish`</ph> command.","source":"For the .NET Core SDK 2.x CLI, framework-dependent deployment (FDD) is the default mode for the basic `dotnet publish` command."},{"content":"When you publish your app as an FDD, a <ph id=\"ph1\">`&lt;PROJECT-NAME&gt;.dll`</ph> file is created in the <ph id=\"ph2\">`./bin/&lt;BUILD-CONFIGURATION&gt;/&lt;TFM&gt;/publish/`</ph> folder.","pos":[6127,6262],"source":"When you publish your app as an FDD, a `<PROJECT-NAME>.dll` file is created in the `./bin/<BUILD-CONFIGURATION>/<TFM>/publish/` folder."},{"content":"To run your app, navigate to the output folder and use the <ph id=\"ph1\">`dotnet &lt;PROJECT-NAME&gt;.dll`</ph> command.","pos":[6263,6358],"source":" To run your app, navigate to the output folder and use the `dotnet <PROJECT-NAME>.dll` command."},{"content":"Your app is configured to target a specific version of .NET Core.","pos":[6360,6425]},{"content":"That targeted .NET Core runtime is required to be on the machine where you want to run your app.","pos":[6426,6522]},{"content":"For example, if your app targets .NET Core 2.2, any machine that your app runs on must have the .NET Core 2.2 runtime installed.","pos":[6523,6651]},{"content":"As stated in the <bpt id=\"p1\">[</bpt>Publishing basics<ept id=\"p1\">](#publishing-basics)</ept> section, you can edit your project file to change the default target framework or to target more than one framework.","pos":[6652,6825],"source":" As stated in the [Publishing basics](#publishing-basics) section, you can edit your project file to change the default target framework or to target more than one framework."},{"content":"Publishing an FDD creates an app that automatically rolls-forward to the latest .NET Core security patch available on the system that runs the app.","pos":[6827,6974]},{"content":"For more information on version binding at compile time, see <bpt id=\"p1\">[</bpt>Select the .NET Core version to use<ept id=\"p1\">](../versions/selection.md#framework-dependent-apps-roll-forward)</ept>.","pos":[6975,7138],"source":" For more information on version binding at compile time, see [Select the .NET Core version to use](../versions/selection.md#framework-dependent-apps-roll-forward)."},{"pos":[7143,7173],"content":"Framework-dependent executable","linkify":"Framework-dependent executable","nodes":[{"content":"Framework-dependent executable","pos":[0,30]}]},{"content":"For the .NET Core SDK 3.x CLI, framework-dependent executable (FDE) the default mode for the basic <ph id=\"ph1\">`dotnet publish`</ph> command.","pos":[7175,7299],"source":"For the .NET Core SDK 3.x CLI, framework-dependent executable (FDE) the default mode for the basic `dotnet publish` command."},{"content":"You don't need to specify any other parameters as long as you want to target the current operating system.","pos":[7300,7406]},{"content":"In this mode, a platform-specific executable host is created to host your cross-platform app.","pos":[7408,7501]},{"content":"This mode is similar to FDD as FDD requires a host in the form of the <ph id=\"ph1\">`dotnet`</ph> command.","pos":[7502,7589],"source":" This mode is similar to FDD as FDD requires a host in the form of the `dotnet` command."},{"content":"The host executable filename varies per platform, and is named something similar to <ph id=\"ph1\">`&lt;PROJECT-FILE&gt;.exe`</ph>.","pos":[7590,7695],"source":" The host executable filename varies per platform, and is named something similar to `<PROJECT-FILE>.exe`."},{"content":"You can run this executable directly instead of calling <ph id=\"ph1\">`dotnet &lt;PROJECT-FILE&gt;.dll`</ph> which is still an acceptable way to run the app.","pos":[7696,7828],"source":" You can run this executable directly instead of calling `dotnet <PROJECT-FILE>.dll` which is still an acceptable way to run the app."},{"content":"Your app is configured to target a specific version of .NET Core.","pos":[7830,7895]},{"content":"That targeted .NET Core runtime is required to be on the machine where you want to run your app.","pos":[7896,7992]},{"content":"For example, if your app targets .NET Core 2.2, any machine that your app runs on must have the .NET Core 2.2 runtime installed.","pos":[7993,8121]},{"content":"As stated in the <bpt id=\"p1\">[</bpt>Publishing basics<ept id=\"p1\">](#publishing-basics)</ept> section, you can edit your project file to change the default target framework or to target more than one framework.","pos":[8122,8295],"source":" As stated in the [Publishing basics](#publishing-basics) section, you can edit your project file to change the default target framework or to target more than one framework."},{"content":"Publishing an FDE creates an app that automatically rolls-forward to the latest .NET Core security patch available on the system that runs the app.","pos":[8297,8444]},{"content":"For more information on version binding at compile time, see <bpt id=\"p1\">[</bpt>Select the .NET Core version to use<ept id=\"p1\">](../versions/selection.md#framework-dependent-apps-roll-forward)</ept>.","pos":[8445,8608],"source":" For more information on version binding at compile time, see [Select the .NET Core version to use](../versions/selection.md#framework-dependent-apps-roll-forward)."},{"pos":[8610,8762],"content":"You must (except for .NET Core 3.x when you target the current platform) use the following switches with the <ph id=\"ph1\">`dotnet publish`</ph> command to publish an FDE:","source":"You must (except for .NET Core 3.x when you target the current platform) use the following switches with the `dotnet publish` command to publish an FDE:"},{"pos":[8766,8941],"content":"`-r <RID>`\nThis switch uses an identifier (RID) to specify the target platform. For a list of runtime identifiers, see [Runtime Identifier (RID) catalog](../rid-catalog.md).","leadings":["","  "],"nodes":[{"content":"<ph id=\"ph1\">`-r &lt;RID&gt;`</ph> This switch uses an identifier (RID) to specify the target platform.","pos":[0,79],"source":"`-r <RID>`\nThis switch uses an identifier (RID) to specify the target platform."},{"content":"For a list of runtime identifiers, see <bpt id=\"p1\">[</bpt>Runtime Identifier (RID) catalog<ept id=\"p1\">](../rid-catalog.md)</ept>.","pos":[80,173],"source":" For a list of runtime identifiers, see [Runtime Identifier (RID) catalog](../rid-catalog.md)."}]},{"pos":[8945,9042],"content":"<ph id=\"ph1\">`--self-contained false`</ph> This switch tells the .NET Core SDK to create an executable as an FDE.","leadings":["","  "],"source":"`--self-contained false`\nThis switch tells the .NET Core SDK to create an executable as an FDE."},{"pos":[9044,9163],"content":"Whenever you use the <ph id=\"ph1\">`-r`</ph> switch, the output folder path changes to: <ph id=\"ph2\">`./bin/&lt;BUILD-CONFIGURATION&gt;/&lt;TFM&gt;/&lt;RID&gt;/publish/`</ph>","source":"Whenever you use the `-r` switch, the output folder path changes to: `./bin/<BUILD-CONFIGURATION>/<TFM>/<RID>/publish/`"},{"content":"If you use the <bpt id=\"p1\">[</bpt>example app<ept id=\"p1\">](#sample-app)</ept>, run <ph id=\"ph1\">`dotnet publish -f netcoreapp2.2 -r win10-x64 --self-contained false`</ph>.","pos":[9165,9282],"source":"If you use the [example app](#sample-app), run `dotnet publish -f netcoreapp2.2 -r win10-x64 --self-contained false`."},{"content":"This command creates the following executable: <ph id=\"ph1\">`./bin/Debug/netcoreapp2.2/win10-x64/publish/apptest1.exe`</ph>","pos":[9283,9388],"source":" This command creates the following executable: `./bin/Debug/netcoreapp2.2/win10-x64/publish/apptest1.exe`"},{"pos":[9392,9979],"content":"[!NOTE]\nYou can reduce the total size of your deployment by enabling **globalization invariant mode**. This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture). For more information about **globalization invariant mode** and how to enable it, see [.NET Core Globalization Invariant Mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)","leadings":["","> "],"nodes":[{"content":"You can reduce the total size of your deployment by enabling **globalization invariant mode**. This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture). For more information about **globalization invariant mode** and how to enable it, see [.NET Core Globalization Invariant Mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)","pos":[8,585],"nodes":[{"content":"You can reduce the total size of your deployment by enabling <bpt id=\"p1\">**</bpt>globalization invariant mode<ept id=\"p1\">**</ept>.","pos":[0,94],"source":"You can reduce the total size of your deployment by enabling **globalization invariant mode**."},{"content":"This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the <bpt id=\"p1\">[</bpt>invariant culture<ept id=\"p1\">](xref:System.Globalization.CultureInfo.InvariantCulture)</ept>.","pos":[95,345],"source":" This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture)."},{"content":"For more information about <bpt id=\"p1\">**</bpt>globalization invariant mode<ept id=\"p1\">**</ept> and how to enable it, see <bpt id=\"p2\">[</bpt>.NET Core Globalization Invariant Mode<ept id=\"p2\">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)</ept>","pos":[346,577],"source":" For more information about **globalization invariant mode** and how to enable it, see [.NET Core Globalization Invariant Mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)"}]}]},{"pos":[9984,10009],"content":"Self-contained deployment","linkify":"Self-contained deployment","nodes":[{"content":"Self-contained deployment","pos":[0,25]}]},{"content":"When you publish a self-contained deployment (SCD), the .NET Core SDK creates a platform-specific executable.","pos":[10011,10120]},{"content":"Publishing an SCD includes all  required .NET Core files to run your app but it doesn't include the <bpt id=\"p1\">[</bpt>native dependencies of .NET Core<ept id=\"p1\">](https://github.com/dotnet/core/blob/master/Documentation/prereqs.md)</ept>.","pos":[10121,10325],"source":" Publishing an SCD includes all  required .NET Core files to run your app but it doesn't include the [native dependencies of .NET Core](https://github.com/dotnet/core/blob/master/Documentation/prereqs.md)."},{"content":"These dependencies must be present on the system before the app runs.","pos":[10326,10395]},{"content":"Publishing an SCD creates an app that doesn't roll-forward to the latest available .NET Core security patch.","pos":[10397,10505]},{"content":"For more information on version binding at compile time, see <bpt id=\"p1\">[</bpt>Select the .NET Core version to use<ept id=\"p1\">](../versions/selection.md#self-contained-deployments-include-the-selected-runtime)</ept>.","pos":[10506,10687],"source":" For more information on version binding at compile time, see [Select the .NET Core version to use](../versions/selection.md#self-contained-deployments-include-the-selected-runtime)."},{"pos":[10689,10777],"content":"You must use the following switches with the <ph id=\"ph1\">`dotnet publish`</ph> command to publish an SCD:","source":"You must use the following switches with the `dotnet publish` command to publish an SCD:"},{"pos":[10781,10956],"content":"`-r <RID>`\nThis switch uses an identifier (RID) to specify the target platform. For a list of runtime identifiers, see [Runtime Identifier (RID) catalog](../rid-catalog.md).","leadings":["","  "],"nodes":[{"content":"<ph id=\"ph1\">`-r &lt;RID&gt;`</ph> This switch uses an identifier (RID) to specify the target platform.","pos":[0,79],"source":"`-r <RID>`\nThis switch uses an identifier (RID) to specify the target platform."},{"content":"For a list of runtime identifiers, see <bpt id=\"p1\">[</bpt>Runtime Identifier (RID) catalog<ept id=\"p1\">](../rid-catalog.md)</ept>.","pos":[80,173],"source":" For a list of runtime identifiers, see [Runtime Identifier (RID) catalog](../rid-catalog.md)."}]},{"pos":[10960,11056],"content":"<ph id=\"ph1\">`--self-contained true`</ph> This switch tells the .NET Core SDK to create an executable as an SCD.","leadings":["","  "],"source":"`--self-contained true`\nThis switch tells the .NET Core SDK to create an executable as an SCD."},{"pos":[11060,11647],"content":"[!NOTE]\nYou can reduce the total size of your deployment by enabling **globalization invariant mode**. This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture). For more information about **globalization invariant mode** and how to enable it, see [.NET Core Globalization Invariant Mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)","leadings":["","> "],"nodes":[{"content":"You can reduce the total size of your deployment by enabling **globalization invariant mode**. This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture). For more information about **globalization invariant mode** and how to enable it, see [.NET Core Globalization Invariant Mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)","pos":[8,585],"nodes":[{"content":"You can reduce the total size of your deployment by enabling <bpt id=\"p1\">**</bpt>globalization invariant mode<ept id=\"p1\">**</ept>.","pos":[0,94],"source":"You can reduce the total size of your deployment by enabling **globalization invariant mode**."},{"content":"This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the <bpt id=\"p1\">[</bpt>invariant culture<ept id=\"p1\">](xref:System.Globalization.CultureInfo.InvariantCulture)</ept>.","pos":[95,345],"source":" This mode is useful for applications that are not globally aware and that can use the formatting conventions, casing conventions, and string comparison and sort order of the [invariant culture](xref:System.Globalization.CultureInfo.InvariantCulture)."},{"content":"For more information about <bpt id=\"p1\">**</bpt>globalization invariant mode<ept id=\"p1\">**</ept> and how to enable it, see <bpt id=\"p2\">[</bpt>.NET Core Globalization Invariant Mode<ept id=\"p2\">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)</ept>","pos":[346,577],"source":" For more information about **globalization invariant mode** and how to enable it, see [.NET Core Globalization Invariant Mode](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/globalization-invariant-mode.md)"}]}]},{"pos":[11652,11660],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[11664,11717],"content":"<bpt id=\"p1\">[</bpt>.NET Core Application Deployment Overview<ept id=\"p1\">](index.md)</ept>","source":"[.NET Core Application Deployment Overview](index.md)"},{"pos":[11720,11783],"content":"<bpt id=\"p1\">[</bpt>.NET Core Runtime IDentifier (RID) catalog<ept id=\"p1\">](../rid-catalog.md)</ept>","source":"[.NET Core Runtime IDentifier (RID) catalog](../rid-catalog.md)"}]}