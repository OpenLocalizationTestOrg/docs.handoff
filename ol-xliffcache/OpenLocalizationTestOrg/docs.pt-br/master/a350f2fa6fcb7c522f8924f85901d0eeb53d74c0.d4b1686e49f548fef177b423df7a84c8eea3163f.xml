{"content":"---\ntitle: \"Windows Workflow Foundation Glossary for .NET Framework 4.5 | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"Windows Workflow Foundation [WF], glossary\"\n  - \"WF [WF], glossary\"\nms.assetid: ab682b2f-3779-45ca-b831-b7c03d7dbb3a\ncaps.latest.revision: 259\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Windows Workflow Foundation Glossary for .NET Framework 4.5\nThe following terms are used in the Windows Workflow Foundation documentation.  \n  \n## Terms  \n  \n|Term|Definition|  \n|----------|----------------|  \n|activity|A unit of program behavior in Windows Workflow Foundation. Single activities can be composed together into more complex activities.|  \n|activity action|A data structure used to expose callbacks for workflow and activity execution.|  \n|argument|Defines the data flow into and out of an activity. Each argument has a specified direction: in, out, or in/out. These represent the input, output, and input/output parameters of the activity.|  \n|bookmark|The point at which an activity can pause and wait to be resumed.|  \n|compensation|A group of actions designed to undo or mitigate the effect of previously completed work.|  \n|correlation|The mechanism for routing messages to a workflow or service instance.|  \n|expression|A construct that takes in one or more arguments, performs an operation on the arguments and returns a single value. Expressions can be used anywhere an activity can be used.|  \n|flowchart|A well-known modeling paradigm that represents program components as symbols linked together with directional arrows.  In the .NET Framework 4, workflows can be modeled as flowcharts using the Flowchart activity.|  \n|long-running process|A unit of program execution that does not return immediately and may span system restarts.|  \n|persistence|Saving the state of a workflow or service to a durable medium, so that it can be unloaded from memory or recovered after a system failure.|  \n|state machine|A well-known modeling paradigm that represents program components as individual states linked together with event-driven state transitions.  Workflows can be modeled as state machines using the StateMachine activity.|  \n|substance|Represents a group of related bookmarks under a common identifier and allows the runtime to make decisions about whether a particular bookmark resumption is valid or may become valid.|  \n|type converter|A CLR type can be associated with one or more System.ComponentModel.TypeConverter derived types that enable converting instances of the CLR type to and from instances of other types. A type converterr is associated with a CLR type using the System.ComponentModel.TypeConverterAttribute attribute.  A TypeConverterAttribute can be specified directly on the CLR type or on a property. A type converter specified on a property always takes precedence over a type converter specified on the CLR type of the property.|  \n|variable|Represents the storage of some data that must be saved and accessed later.|  \n|workflow|A single activity or tree of activities invoked by a host process.|  \n|XAML|eXtensible Application Markup Language|","nodes":[{"pos":[12,88],"content":"Windows Workflow Foundation Glossary for .NET Framework 4.5 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Windows Workflow Foundation Glossary for .NET Framework 4.5 | Microsoft Docs","pos":[0,76]}]},{"pos":[450,509],"content":"Windows Workflow Foundation Glossary for .NET Framework 4.5","linkify":"Windows Workflow Foundation Glossary for .NET Framework 4.5","nodes":[{"content":"Windows Workflow Foundation Glossary for .NET Framework 4.5","pos":[0,59]}]},{"content":"The following terms are used in the Windows Workflow Foundation documentation.","pos":[510,588]},{"pos":[597,602],"content":"Terms","linkify":"Terms","nodes":[{"content":"Terms","pos":[0,5]}]},{"content":"Term","pos":[609,613]},{"content":"Definition","pos":[614,624]},{"content":"activity","pos":[661,669]},{"content":"A unit of program behavior in Windows Workflow Foundation.","pos":[670,728]},{"content":"Single activities can be composed together into more complex activities.","pos":[729,801]},{"content":"activity action","pos":[806,821]},{"content":"A data structure used to expose callbacks for workflow and activity execution.","pos":[822,900]},{"content":"argument","pos":[905,913]},{"content":"Defines the data flow into and out of an activity.","pos":[914,964]},{"content":"Each argument has a specified direction: in, out, or in/out.","pos":[965,1025]},{"content":"These represent the input, output, and input/output parameters of the activity.","pos":[1026,1105]},{"content":"bookmark","pos":[1110,1118]},{"content":"The point at which an activity can pause and wait to be resumed.","pos":[1119,1183]},{"content":"compensation","pos":[1188,1200]},{"content":"A group of actions designed to undo or mitigate the effect of previously completed work.","pos":[1201,1289]},{"content":"correlation","pos":[1294,1305]},{"content":"The mechanism for routing messages to a workflow or service instance.","pos":[1306,1375]},{"content":"expression","pos":[1380,1390]},{"content":"A construct that takes in one or more arguments, performs an operation on the arguments and returns a single value.","pos":[1391,1506]},{"content":"Expressions can be used anywhere an activity can be used.","pos":[1507,1564]},{"content":"flowchart","pos":[1569,1578]},{"content":"A well-known modeling paradigm that represents program components as symbols linked together with directional arrows.","pos":[1579,1696]},{"content":"In the .NET Framework 4, workflows can be modeled as flowcharts using the Flowchart activity.","pos":[1698,1791]},{"content":"long-running process","pos":[1796,1816]},{"content":"A unit of program execution that does not return immediately and may span system restarts.","pos":[1817,1907]},{"content":"persistence","pos":[1912,1923]},{"content":"Saving the state of a workflow or service to a durable medium, so that it can be unloaded from memory or recovered after a system failure.","pos":[1924,2062]},{"content":"state machine","pos":[2067,2080]},{"content":"A well-known modeling paradigm that represents program components as individual states linked together with event-driven state transitions.","pos":[2081,2220]},{"content":"Workflows can be modeled as state machines using the StateMachine activity.","pos":[2222,2297]},{"content":"substance","pos":[2302,2311]},{"content":"Represents a group of related bookmarks under a common identifier and allows the runtime to make decisions about whether a particular bookmark resumption is valid or may become valid.","pos":[2312,2495]},{"content":"type converter","pos":[2500,2514]},{"content":"A CLR type can be associated with one or more System.ComponentModel.TypeConverter derived types that enable converting instances of the CLR type to and from instances of other types.","pos":[2515,2697]},{"content":"A type converterr is associated with a CLR type using the System.ComponentModel.TypeConverterAttribute attribute.","pos":[2698,2811]},{"content":"A TypeConverterAttribute can be specified directly on the CLR type or on a property.","pos":[2813,2897]},{"content":"A type converter specified on a property always takes precedence over a type converter specified on the CLR type of the property.","pos":[2898,3027]},{"content":"variable","pos":[3032,3040]},{"content":"Represents the storage of some data that must be saved and accessed later.","pos":[3041,3115]},{"content":"workflow","pos":[3120,3128]},{"content":"A single activity or tree of activities invoked by a host process.","pos":[3129,3195]},{"content":"XAML","pos":[3200,3204]},{"content":"eXtensible Application Markup Language","pos":[3205,3243]}]}