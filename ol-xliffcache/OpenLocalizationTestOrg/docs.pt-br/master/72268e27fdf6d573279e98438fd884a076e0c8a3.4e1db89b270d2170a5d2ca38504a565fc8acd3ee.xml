{"content":"---\ntitle: \"Aggregation Operations (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 0f47e92c-5dd2-4007-baf4-c5fe5dc3b4a8\n---\n# Aggregation Operations (Visual Basic)\nAn aggregation operation computes a single value from a collection of values. An example of an aggregation operation is calculating the average daily temperature from a month's worth of daily temperature values.  \n  \n The following illustration shows the results of two different aggregation operations on a sequence of numbers. The first operation sums the numbers. The second operation returns the maximum value in the sequence.  \n  \n ![Illustration that shows LINQ aggregation operations.](./media/aggregation-operations/linq-aggregation-operations.png)  \n  \n The standard query operator methods that perform aggregation operations are listed in the following section.  \n  \n## Methods  \n  \n|Method Name|Description|Visual Basic Query Expression Syntax|More Information|  \n|-----------------|-----------------|------------------------------------------|----------------------|  \n|Aggregate|Performs a custom aggregation operation on the values of a collection.|Not applicable.|<xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=nameWithType><br /><br /> <xref:System.Linq.Queryable.Aggregate%2A?displayProperty=nameWithType>|  \n|Average|Calculates the average value of a collection of values.|`Aggregate … In … Into Average()`|<xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType><br /><br /> <xref:System.Linq.Queryable.Average%2A?displayProperty=nameWithType>|  \n|Count|Counts the elements in a collection, optionally only those elements that satisfy a predicate function.|`Aggregate … In … Into Count()`|<xref:System.Linq.Enumerable.Count%2A?displayProperty=nameWithType><br /><br /> <xref:System.Linq.Queryable.Count%2A?displayProperty=nameWithType>|  \n|LongCount|Counts the elements in a large collection, optionally only those elements that satisfy a predicate function.|`Aggregate … In … Into LongCount()`|<xref:System.Linq.Enumerable.LongCount%2A?displayProperty=nameWithType><br /><br /> <xref:System.Linq.Queryable.LongCount%2A?displayProperty=nameWithType>|  \n|Max|Determines the maximum value in a collection.|`Aggregate … In … Into Max()`|<xref:System.Linq.Enumerable.Max%2A?displayProperty=nameWithType><br /><br /> <xref:System.Linq.Queryable.Max%2A?displayProperty=nameWithType>|  \n|Min|Determines the minimum value in a collection.|`Aggregate … In … Into Min()`|<xref:System.Linq.Enumerable.Min%2A?displayProperty=nameWithType><br /><br /> <xref:System.Linq.Queryable.Min%2A?displayProperty=nameWithType>|  \n|Sum|Calculates the sum of the values in a collection.|`Aggregate … In … Into Sum()`|<xref:System.Linq.Enumerable.Sum%2A?displayProperty=nameWithType><br /><br /> <xref:System.Linq.Queryable.Sum%2A?displayProperty=nameWithType>|  \n  \n## Query Expression Syntax Examples  \n  \n### Average  \n The following code example uses the `Aggregate Into Average` clause in Visual Basic to calculate the average temperature in an array of numbers that represent temperatures.  \n  \n [!code-vb[CsLINQAggregating#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/CsLINQAggregating/VB/Aggregating.vb#1)]  \n  \n### Count  \n The following code example uses the `Aggregate Into Count` clause in Visual Basic to count the number of values in an array that are greater than or equal to 80.  \n  \n [!code-vb[CsLINQAggregating#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/CsLINQAggregating/VB/Aggregating.vb#2)]  \n  \n### LongCount  \n The following code example uses the `Aggregate Into LongCount` clause to count the number of values in an array.  \n  \n [!code-vb[CsLINQAggregating#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/CsLINQAggregating/VB/Aggregating.vb#3)]  \n  \n### Max  \n The following code example uses the `Aggregate Into Max` clause  to calculate the maximum temperature in an array of numbers that represent temperatures.  \n  \n [!code-vb[CsLINQAggregating#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/CsLINQAggregating/VB/Aggregating.vb#4)]  \n  \n### Min  \n The following code example uses the `Aggregate Into Min` clause  to calculate the minimum temperature in an array of numbers that represent temperatures.  \n  \n [!code-vb[CsLINQAggregating#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/CsLINQAggregating/VB/Aggregating.vb#5)]  \n  \n### Sum  \n The following code example uses the `Aggregate Into Sum` clause  to calculate the total expense amount from an array of values that represent expenses.  \n  \n [!code-vb[CsLINQAggregating#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/CsLINQAggregating/VB/Aggregating.vb#6)]  \n  \n## See also\n\n- <xref:System.Linq>\n- [Standard Query Operators Overview (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)\n- [Aggregate Clause](../../../../visual-basic/language-reference/queries/aggregate-clause.md)\n- [How to: Compute Column Values in a CSV Text File (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md)\n- [How to: Count, Sum, or Average Data](../../../../visual-basic/programming-guide/language-features/linq/how-to-count-sum-or-average-data-by-using-linq.md)\n- [How to: Find the Minimum or Maximum Value in a Query Result](../../../../visual-basic/programming-guide/language-features/linq/how-to-find-the-minimum-or-maximum-value-in-a-query-result.md)\n- [How to: Query for the Largest File or Files in a Directory Tree (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-query-for-the-largest-file-or-files-in-a-directory-tree.md)\n- [How to: Query for the Total Number of Bytes in a Set of Folders (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-query-for-the-total-number-of-bytes-in-a-set-of-folders.md)\n","nodes":[{"pos":[4,119],"embed":true,"restype":"x-metadata","content":"title: \"Aggregation Operations (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 0f47e92c-5dd2-4007-baf4-c5fe5dc3b4a8","nodes":[{"content":"Aggregation Operations (Visual Basic)","nodes":[{"pos":[0,37],"content":"Aggregation Operations (Visual Basic)","nodes":[{"content":"Aggregation Operations (Visual Basic)","pos":[0,37]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[126,163],"content":"Aggregation Operations (Visual Basic)","linkify":"Aggregation Operations (Visual Basic)","nodes":[{"content":"Aggregation Operations (Visual Basic)","pos":[0,37]}]},{"content":"An aggregation operation computes a single value from a collection of values.","pos":[164,241]},{"content":"An example of an aggregation operation is calculating the average daily temperature from a month's worth of daily temperature values.","pos":[242,375]},{"content":"The following illustration shows the results of two different aggregation operations on a sequence of numbers.","pos":[382,492]},{"content":"The first operation sums the numbers.","pos":[493,530]},{"content":"The second operation returns the maximum value in the sequence.","pos":[531,594]},{"content":"Illustration that shows LINQ aggregation operations.","pos":[603,655]},{"content":"The standard query operator methods that perform aggregation operations are listed in the following section.","pos":[727,835]},{"pos":[844,851],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method Name","pos":[858,869]},{"content":"Description","pos":[870,881]},{"content":"Visual Basic Query Expression Syntax","pos":[882,918]},{"content":"More Information","pos":[919,935]},{"content":"Aggregate","pos":[1046,1055]},{"content":"Performs a custom aggregation operation on the values of a collection.","pos":[1056,1126]},{"content":"Not applicable.","pos":[1127,1142]},{"content":"Average","pos":[1302,1309]},{"content":"Calculates the average value of a collection of values.","pos":[1310,1365]},{"content":"Count","pos":[1555,1560]},{"content":"Counts the elements in a collection, optionally only those elements that satisfy a predicate function.","pos":[1561,1663]},{"content":"LongCount","pos":[1847,1856]},{"content":"Counts the elements in a large collection, optionally only those elements that satisfy a predicate function.","pos":[1857,1965]},{"content":"Max","pos":[2161,2164]},{"content":"Determines the maximum value in a collection.","pos":[2165,2210]},{"content":"Min","pos":[2388,2391]},{"content":"Determines the minimum value in a collection.","pos":[2392,2437]},{"content":"Sum","pos":[2615,2618]},{"content":"Calculates the sum of the values in a collection.","pos":[2619,2668]},{"pos":[2851,2883],"content":"Query Expression Syntax Examples","linkify":"Query Expression Syntax Examples","nodes":[{"content":"Query Expression Syntax Examples","pos":[0,32]}]},{"pos":[2893,2900],"content":"Average","linkify":"Average","nodes":[{"content":"Average","pos":[0,7]}]},{"pos":[2904,3076],"content":"The following code example uses the <ph id=\"ph1\">`Aggregate Into Average`</ph> clause in Visual Basic to calculate the average temperature in an array of numbers that represent temperatures.","source":"The following code example uses the `Aggregate Into Average` clause in Visual Basic to calculate the average temperature in an array of numbers that represent temperatures."},{"pos":[3215,3220],"content":"Count","linkify":"Count","nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[3224,3385],"content":"The following code example uses the <ph id=\"ph1\">`Aggregate Into Count`</ph> clause in Visual Basic to count the number of values in an array that are greater than or equal to 80.","source":"The following code example uses the `Aggregate Into Count` clause in Visual Basic to count the number of values in an array that are greater than or equal to 80."},{"pos":[3524,3533],"content":"LongCount","linkify":"LongCount","nodes":[{"content":"LongCount","pos":[0,9]}]},{"pos":[3537,3649],"content":"The following code example uses the <ph id=\"ph1\">`Aggregate Into LongCount`</ph> clause to count the number of values in an array.","source":"The following code example uses the `Aggregate Into LongCount` clause to count the number of values in an array."},{"pos":[3788,3791],"content":"Max","linkify":"Max","nodes":[{"content":"Max","pos":[0,3]}]},{"pos":[3795,3948],"content":"The following code example uses the <ph id=\"ph1\">`Aggregate Into Max`</ph> clause  to calculate the maximum temperature in an array of numbers that represent temperatures.","source":"The following code example uses the `Aggregate Into Max` clause  to calculate the maximum temperature in an array of numbers that represent temperatures."},{"pos":[4087,4090],"content":"Min","linkify":"Min","nodes":[{"content":"Min","pos":[0,3]}]},{"pos":[4094,4247],"content":"The following code example uses the <ph id=\"ph1\">`Aggregate Into Min`</ph> clause  to calculate the minimum temperature in an array of numbers that represent temperatures.","source":"The following code example uses the `Aggregate Into Min` clause  to calculate the minimum temperature in an array of numbers that represent temperatures."},{"pos":[4386,4389],"content":"Sum","linkify":"Sum","nodes":[{"content":"Sum","pos":[0,3]}]},{"pos":[4393,4544],"content":"The following code example uses the <ph id=\"ph1\">`Aggregate Into Sum`</ph> clause  to calculate the total expense amount from an array of values that represent expenses.","source":"The following code example uses the `Aggregate Into Sum` clause  to calculate the total expense amount from an array of values that represent expenses."},{"pos":[4682,4690],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4715,4860],"content":"<bpt id=\"p1\">[</bpt>Standard Query Operators Overview (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept>","source":"[Standard Query Operators Overview (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)"},{"pos":[4863,4954],"content":"<bpt id=\"p1\">[</bpt>Aggregate Clause<ept id=\"p1\">](../../../../visual-basic/language-reference/queries/aggregate-clause.md)</ept>","source":"[Aggregate Clause](../../../../visual-basic/language-reference/queries/aggregate-clause.md)"},{"pos":[4957,5143],"content":"<bpt id=\"p1\">[</bpt>How to: Compute Column Values in a CSV Text File (LINQ) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md)</ept>","source":"[How to: Compute Column Values in a CSV Text File (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md)"},{"pos":[5146,5300],"content":"<bpt id=\"p1\">[</bpt>How to: Count, Sum, or Average Data<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/linq/how-to-count-sum-or-average-data-by-using-linq.md)</ept>","source":"[How to: Count, Sum, or Average Data](../../../../visual-basic/programming-guide/language-features/linq/how-to-count-sum-or-average-data-by-using-linq.md)"},{"pos":[5303,5493],"content":"<bpt id=\"p1\">[</bpt>How to: Find the Minimum or Maximum Value in a Query Result<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/linq/how-to-find-the-minimum-or-maximum-value-in-a-query-result.md)</ept>","source":"[How to: Find the Minimum or Maximum Value in a Query Result](../../../../visual-basic/programming-guide/language-features/linq/how-to-find-the-minimum-or-maximum-value-in-a-query-result.md)"},{"pos":[5496,5707],"content":"<bpt id=\"p1\">[</bpt>How to: Query for the Largest File or Files in a Directory Tree (LINQ) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/how-to-query-for-the-largest-file-or-files-in-a-directory-tree.md)</ept>","source":"[How to: Query for the Largest File or Files in a Directory Tree (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-query-for-the-largest-file-or-files-in-a-directory-tree.md)"},{"pos":[5710,5921],"content":"<bpt id=\"p1\">[</bpt>How to: Query for the Total Number of Bytes in a Set of Folders (LINQ) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/how-to-query-for-the-total-number-of-bytes-in-a-set-of-folders.md)</ept>","source":"[How to: Query for the Total Number of Bytes in a Set of Folders (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-query-for-the-total-number-of-bytes-in-a-set-of-folders.md)"}]}