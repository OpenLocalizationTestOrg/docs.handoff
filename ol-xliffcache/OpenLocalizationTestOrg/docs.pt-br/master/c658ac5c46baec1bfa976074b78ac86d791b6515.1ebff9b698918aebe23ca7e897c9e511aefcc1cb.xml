{"content":"---\ntitle: \"Grouping Data (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 8f3a0871-6958-4aef-8f6f-493e189fd57d\n---\n# Grouping Data (Visual Basic)\nGrouping refers to the operation of putting data into groups so that the elements in each group share a common attribute.  \n  \n The following illustration shows the results of grouping a sequence of characters. The key for each group is the character.  \n  \n ![LINQ Grouping Operations](../../../../csharp/programming-guide/concepts/linq/media/linq_group.png \"LINQ_Group\")  \n  \n The standard query operator methods that group data elements are listed in the following section.  \n  \n## Methods  \n  \n|Method Name|Description|Visual Basic Query Expression Syntax|More Information|  \n|-----------------|-----------------|------------------------------------------|----------------------|  \n|GroupBy|Groups elements that share a common attribute. Each group is represented by an <xref:System.Linq.IGrouping%602> object.|`Group … By … Into …`|<xref:System.Linq.Enumerable.GroupBy%2A?displayProperty=nameWithType><br /><br /> <xref:System.Linq.Queryable.GroupBy%2A?displayProperty=nameWithType>|  \n|ToLookup|Inserts elements into a <xref:System.Linq.Lookup%602> (a one-to-many dictionary) based on a key selector function.|Not applicable.|<xref:System.Linq.Enumerable.ToLookup%2A?displayProperty=nameWithType>|  \n  \n## Query Expression Syntax Example  \n The following code example uses the `Group By` clause to group integers in a list according to whether they are even or odd.  \n  \n```vb  \nDim numbers As New System.Collections.Generic.List(Of Integer)(  \n     New Integer() {35, 44, 200, 84, 3987, 4, 199, 329, 446, 208})  \n  \nDim query = From number In numbers   \n            Group By Remainder = (number Mod 2) Into Group  \n  \nDim sb As New System.Text.StringBuilder()  \nFor Each group In query  \n    sb.AppendLine(If(group.Remainder = 0, vbCrLf & \"Even numbers:\", vbCrLf & \"Odd numbers:\"))  \n    For Each num In group.Group  \n        sb.AppendLine(num)  \n    Next  \nNext  \n  \n' Display the results.  \nMsgBox(sb.ToString())  \n  \n' This code produces the following output:  \n  \n' Odd numbers:  \n' 35  \n' 3987  \n' 199  \n' 329  \n  \n' Even numbers:  \n' 44  \n' 200  \n' 84  \n' 4  \n' 446  \n' 208  \n```  \n  \n## See also\n\n- <xref:System.Linq>\n- [Standard Query Operators Overview (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)\n- [Group By Clause](../../../../visual-basic/language-reference/queries/group-by-clause.md)\n- [How to: Group Files by Extension (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-group-files-by-extension-linq.md)\n- [How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md)\n","nodes":[{"pos":[4,110],"embed":true,"restype":"x-metadata","content":"title: \"Grouping Data (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 8f3a0871-6958-4aef-8f6f-493e189fd57d","nodes":[{"content":"Grouping Data (Visual Basic)","nodes":[{"pos":[0,28],"content":"Grouping Data (Visual Basic)","nodes":[{"content":"Grouping Data (Visual Basic)","pos":[0,28]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[117,145],"content":"Grouping Data (Visual Basic)","linkify":"Grouping Data (Visual Basic)","nodes":[{"content":"Grouping Data (Visual Basic)","pos":[0,28]}]},{"content":"Grouping refers to the operation of putting data into groups so that the elements in each group share a common attribute.","pos":[146,267]},{"content":"The following illustration shows the results of grouping a sequence of characters.","pos":[274,356]},{"content":"The key for each group is the character.","pos":[357,397]},{"pos":[404,517],"content":"<bpt id=\"p1\">![</bpt>LINQ Grouping Operations<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../csharp/programming-guide/concepts/linq/media/linq_group.png \"</bpt>LINQ_Group<ept id=\"p2\">\")</ept>","source":"![LINQ Grouping Operations](../../../../csharp/programming-guide/concepts/linq/media/linq_group.png \"LINQ_Group\")"},{"content":"The standard query operator methods that group data elements are listed in the following section.","pos":[524,621]},{"pos":[630,637],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method Name","pos":[644,655]},{"content":"Description","pos":[656,667]},{"content":"Visual Basic Query Expression Syntax","pos":[668,704]},{"content":"More Information","pos":[705,721]},{"content":"GroupBy","pos":[832,839]},{"content":"Groups elements that share a common attribute.","pos":[840,886]},{"content":"Each group is represented by an <ph id=\"ph1\">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.","pos":[887,959],"source":" Each group is represented by an <xref:System.Linq.IGrouping%602> object."},{"content":"ToLookup","pos":[1137,1145]},{"pos":[1146,1260],"content":"Inserts elements into a <ph id=\"ph1\">&lt;xref:System.Linq.Lookup%602&gt;</ph> (a one-to-many dictionary) based on a key selector function.","source":"Inserts elements into a <xref:System.Linq.Lookup%602> (a one-to-many dictionary) based on a key selector function."},{"content":"Not applicable.","pos":[1261,1276]},{"pos":[1357,1388],"content":"Query Expression Syntax Example","linkify":"Query Expression Syntax Example","nodes":[{"content":"Query Expression Syntax Example","pos":[0,31]}]},{"pos":[1392,1516],"content":"The following code example uses the <ph id=\"ph1\">`Group By`</ph> clause to group integers in a list according to whether they are even or odd.","source":"The following code example uses the `Group By` clause to group integers in a list according to whether they are even or odd."},{"pos":[2246,2254],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2279,2424],"content":"<bpt id=\"p1\">[</bpt>Standard Query Operators Overview (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept>","source":"[Standard Query Operators Overview (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)"},{"pos":[2427,2516],"content":"<bpt id=\"p1\">[</bpt>Group By Clause<ept id=\"p1\">](../../../../visual-basic/language-reference/queries/group-by-clause.md)</ept>","source":"[Group By Clause](../../../../visual-basic/language-reference/queries/group-by-clause.md)"},{"pos":[2519,2673],"content":"<bpt id=\"p1\">[</bpt>How to: Group Files by Extension (LINQ) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/how-to-group-files-by-extension-linq.md)</ept>","source":"[How to: Group Files by Extension (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-group-files-by-extension-linq.md)"},{"pos":[2676,2870],"content":"<bpt id=\"p1\">[</bpt>How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md)</ept>","source":"[How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md)"}]}