{"content":"---\ntitle: \"where clause - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"whereclause_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"where keyword [C#]\"\n  - \"where clause [C#]\"\nms.assetid: 7f9bf952-7744-4f91-b676-cddb55d107c3\n---\n# where clause (C# Reference)\n\nThe `where` clause is used in a query expression to specify which elements from the data source will be returned in the query expression. It applies a Boolean condition (*predicate*) to each source element (referenced by the range variable) and returns those for which the specified condition is true. A single query expression may contain multiple `where` clauses and a single clause may contain multiple predicate subexpressions.\n\n## Example\n\nIn the following example, the `where` clause filters out all numbers except those that are less than five. If you remove the `where` clause, all numbers from the data source would be returned. The expression `num < 5` is the predicate that is applied to each element.\n\n[!code-csharp[cscsrefQueryKeywords#5](~/samples/snippets/csharp/VS_Snippets_VBCSharp/CsCsrefQueryKeywords/CS/Where.cs#5)]\n\n## Example\n\nWithin a single `where` clause, you can specify as many predicates as necessary by using the [&&](../operators/conditional-and-operator.md) and [&#124;&#124;](../operators/conditional-or-operator.md) operators. In the following example, the query specifies two predicates in order to select only the even numbers that are less than five.\n\n[!code-csharp[cscsrefQueryKeywords#6](~/samples/snippets/csharp/VS_Snippets_VBCSharp/CsCsrefQueryKeywords/CS/Where.cs#6)]  \n\n## Example\n\nA `where` clause may contain one or more methods that return Boolean values. In the following example, the `where` clause uses a method to determine whether the current value of the range variable is even or odd.\n\n[!code-csharp[cscsrefQueryKeywords#7](~/samples/snippets/csharp/VS_Snippets_VBCSharp/CsCsrefQueryKeywords/CS/Where.cs#7)]\n\n## Remarks\n\nThe `where` clause is a filtering mechanism. It can be positioned almost anywhere in a query expression, except it cannot be the first or last clause. A `where` clause may appear either before or after a [group](group-clause.md) clause depending on whether you have to filter the source elements before or after they are grouped.\n\nIf a specified predicate is not valid for the elements in the data source, a compile-time error will result. This is one benefit of the strong type-checking provided by [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)].\n\nAt compile time the `where` keyword is converted into a call to the <xref:System.Linq.Enumerable.Where%2A> Standard Query Operator method.\n\n## See also\n\n- [Query Keywords (LINQ)](query-keywords.md)\n- [from clause](from-clause.md)\n- [select clause](select-clause.md)\n- [Filtering Data](../../programming-guide/concepts/linq/filtering-data.md)\n- [LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)\n- [Getting Started with LINQ in C#](../../programming-guide/concepts/linq/getting-started-with-linq.md)","nodes":[{"pos":[4,247],"embed":true,"restype":"x-metadata","content":"title: \"where clause - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"whereclause_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"where keyword [C#]\"\n  - \"where clause [C#]\"\nms.assetid: 7f9bf952-7744-4f91-b676-cddb55d107c3","nodes":[{"content":"where clause - C# Reference","nodes":[{"pos":[0,27],"content":"where clause - C# Reference","nodes":[{"content":"where clause - C# Reference","pos":[0,27]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[254,281],"content":"where clause (C# Reference)","linkify":"where clause (C# Reference)","nodes":[{"content":"where clause (C# Reference)","pos":[0,27]}]},{"content":"The <ph id=\"ph1\">`where`</ph> clause is used in a query expression to specify which elements from the data source will be returned in the query expression.","pos":[283,420],"source":"The `where` clause is used in a query expression to specify which elements from the data source will be returned in the query expression."},{"content":"It applies a Boolean condition (<bpt id=\"p1\">*</bpt>predicate<ept id=\"p1\">*</ept>) to each source element (referenced by the range variable) and returns those for which the specified condition is true.","pos":[421,584],"source":" It applies a Boolean condition (*predicate*) to each source element (referenced by the range variable) and returns those for which the specified condition is true."},{"content":"A single query expression may contain multiple <ph id=\"ph1\">`where`</ph> clauses and a single clause may contain multiple predicate subexpressions.","pos":[585,714],"source":" A single query expression may contain multiple `where` clauses and a single clause may contain multiple predicate subexpressions."},{"pos":[719,726],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In the following example, the <ph id=\"ph1\">`where`</ph> clause filters out all numbers except those that are less than five.","pos":[728,834],"source":"In the following example, the `where` clause filters out all numbers except those that are less than five."},{"content":"If you remove the <ph id=\"ph1\">`where`</ph> clause, all numbers from the data source would be returned.","pos":[835,920],"source":" If you remove the `where` clause, all numbers from the data source would be returned."},{"content":"The expression <ph id=\"ph1\">`num &lt; 5`</ph> is the predicate that is applied to each element.","pos":[921,995],"source":" The expression `num < 5` is the predicate that is applied to each element."},{"pos":[1123,1130],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"Within a single <ph id=\"ph1\">`where`</ph> clause, you can specify as many predicates as necessary by using the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">&amp;&amp;</ph><ept id=\"p1\">](../operators/conditional-and-operator.md)</ept> and <bpt id=\"p2\">[</bpt>&amp;#124;&amp;#124;<ept id=\"p2\">](../operators/conditional-or-operator.md)</ept> operators.","pos":[1132,1342],"source":"Within a single `where` clause, you can specify as many predicates as necessary by using the [&&](../operators/conditional-and-operator.md) and [&#124;&#124;](../operators/conditional-or-operator.md) operators."},{"content":"In the following example, the query specifies two predicates in order to select only the even numbers that are less than five.","pos":[1343,1469]},{"pos":[1599,1606],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"A <ph id=\"ph1\">`where`</ph> clause may contain one or more methods that return Boolean values.","pos":[1608,1684],"source":"A `where` clause may contain one or more methods that return Boolean values."},{"content":"In the following example, the <ph id=\"ph1\">`where`</ph> clause uses a method to determine whether the current value of the range variable is even or odd.","pos":[1685,1820],"source":" In the following example, the `where` clause uses a method to determine whether the current value of the range variable is even or odd."},{"pos":[1948,1955],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`where`</ph> clause is a filtering mechanism.","pos":[1957,2001],"source":"The `where` clause is a filtering mechanism."},{"content":"It can be positioned almost anywhere in a query expression, except it cannot be the first or last clause.","pos":[2002,2107]},{"content":"A <ph id=\"ph1\">`where`</ph> clause may appear either before or after a <bpt id=\"p1\">[</bpt>group<ept id=\"p1\">](group-clause.md)</ept> clause depending on whether you have to filter the source elements before or after they are grouped.","pos":[2108,2286],"source":" A `where` clause may appear either before or after a [group](group-clause.md) clause depending on whether you have to filter the source elements before or after they are grouped."},{"content":"If a specified predicate is not valid for the elements in the data source, a compile-time error will result.","pos":[2288,2396]},{"content":"This is one benefit of the strong type-checking provided by <ph id=\"ph1\">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph>.","pos":[2397,2507],"source":" This is one benefit of the strong type-checking provided by [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]."},{"pos":[2509,2647],"content":"At compile time the <ph id=\"ph1\">`where`</ph> keyword is converted into a call to the <ph id=\"ph2\">&lt;xref:System.Linq.Enumerable.Where%2A&gt;</ph> Standard Query Operator method.","source":"At compile time the `where` keyword is converted into a call to the <xref:System.Linq.Enumerable.Where%2A> Standard Query Operator method."},{"pos":[2652,2660],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2664,2706],"content":"<bpt id=\"p1\">[</bpt>Query Keywords (LINQ)<ept id=\"p1\">](query-keywords.md)</ept>","source":"[Query Keywords (LINQ)](query-keywords.md)"},{"pos":[2709,2738],"content":"<bpt id=\"p1\">[</bpt>from clause<ept id=\"p1\">](from-clause.md)</ept>","source":"[from clause](from-clause.md)"},{"pos":[2741,2774],"content":"<bpt id=\"p1\">[</bpt>select clause<ept id=\"p1\">](select-clause.md)</ept>","source":"[select clause](select-clause.md)"},{"pos":[2777,2850],"content":"<bpt id=\"p1\">[</bpt>Filtering Data<ept id=\"p1\">](../../programming-guide/concepts/linq/filtering-data.md)</ept>","source":"[Filtering Data](../../programming-guide/concepts/linq/filtering-data.md)"},{"pos":[2853,2944],"content":"<bpt id=\"p1\">[</bpt>LINQ Query Expressions<ept id=\"p1\">](../../../csharp/programming-guide/linq-query-expressions/index.md)</ept>","source":"[LINQ Query Expressions](../../../csharp/programming-guide/linq-query-expressions/index.md)"},{"pos":[2947,3048],"content":"<bpt id=\"p1\">[</bpt>Getting Started with LINQ in C#<ept id=\"p1\">](../../programming-guide/concepts/linq/getting-started-with-linq.md)</ept>","source":"[Getting Started with LINQ in C#](../../programming-guide/concepts/linq/getting-started-with-linq.md)"}]}