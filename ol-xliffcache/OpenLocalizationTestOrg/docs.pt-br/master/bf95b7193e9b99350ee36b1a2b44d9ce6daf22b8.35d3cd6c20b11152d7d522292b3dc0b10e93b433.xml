{"content":"---\ntitle: \"How to: Use a Windows Communication Foundation Client | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"WCF clients [WCF], using\"\nms.assetid: 190349fc-0573-49c7-bb85-8e316df7f31f\ncaps.latest.revision: 38\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Use a Windows Communication Foundation Client\nThis is the last of six tasks required to create a basic [!INCLUDE[indigo1](../../../includes/indigo1-md.md)] application. For an overview of all six of the tasks, see the [Getting Started Tutorial](../../../docs/framework/wcf/getting-started-tutorial.md) topic.  \n  \n Once a [!INCLUDE[indigo1](../../../includes/indigo1-md.md)] proxy has been created and configured, a client instance can be created and the client application can be compiled and used to communicate with the [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] service. This topic describes procedures for instantiating and using a [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] client. This procedure does three things:  \n  \n1.  Instantiates a [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] client.  \n  \n2.  Calls the service operations from the generated proxy.  \n  \n3.  Closes the client once the operation call is completed.  \n  \n### To use a Windows Communication Foundation client  \n  \n1.  Open the Program.cs or Program.vb file from the GettingStartedClient project and replace the existing code with the following code:  \n  \n    ```  \n    using System;  \n    using System.Collections.Generic;  \n    using System.Linq;  \n    using System.Text;  \n    using GettingStartedClient.ServiceReference1;  \n  \n    namespace GettingStartedClient  \n    {  \n        class Program  \n        {  \n            static void Main(string[] args)  \n            {  \n                //Step 1: Create an instance of the WCF proxy.  \n                CalculatorClient client = new CalculatorClient();  \n  \n                // Step 2: Call the service operations.  \n                // Call the Add service operation.  \n                double value1 = 100.00D;  \n                double value2 = 15.99D;  \n                double result = client.Add(value1, value2);  \n                Console.WriteLine(\"Add({0},{1}) = {2}\", value1, value2, result);  \n  \n                // Call the Subtract service operation.  \n                value1 = 145.00D;  \n                value2 = 76.54D;  \n                result = client.Subtract(value1, value2);  \n                Console.WriteLine(\"Subtract({0},{1}) = {2}\", value1, value2, result);  \n  \n                // Call the Multiply service operation.  \n                value1 = 9.00D;  \n                value2 = 81.25D;  \n                result = client.Multiply(value1, value2);  \n                Console.WriteLine(\"Multiply({0},{1}) = {2}\", value1, value2, result);  \n  \n                // Call the Divide service operation.  \n                value1 = 22.00D;  \n                value2 = 7.00D;  \n                result = client.Divide(value1, value2);  \n                Console.WriteLine(\"Divide({0},{1}) = {2}\", value1, value2, result);  \n  \n                //Step 3: Closing the client gracefully closes the connection and cleans up resources.  \n                client.Close();  \n            }  \n        }  \n    }  \n    ```  \n  \n    ```  \n    Imports System  \n    Imports System.Collections.Generic  \n    Imports System.Text  \n    Imports System.ServiceModel  \n    Imports GettingStartedClientVB2.ServiceReference1  \n  \n    Module Module1  \n  \n        Sub Main()  \n            ' Step 1: Create an instance of the WCF proxy  \n            Dim Client As New CalculatorClient()  \n  \n            'Step 2: Call the service operations.  \n            'Call the Add service operation.  \n            Dim value1 As Double = 100D  \n            Dim value2 As Double = 15.99D  \n            Dim result As Double = Client.Add(value1, value2)  \n            Console.WriteLine(\"Add({0},{1}) = {2}\", value1, value2, result)  \n  \n            'Call the Subtract service operation.  \n            value1 = 145D  \n            value2 = 76.54D  \n            result = Client.Subtract(value1, value2)  \n            Console.WriteLine(\"Subtract({0},{1}) = {2}\", value1, value2, result)  \n  \n            'Call the Multiply service operation.  \n            value1 = 9D  \n            value2 = 81.25D  \n            result = Client.Multiply(value1, value2)  \n            Console.WriteLine(\"Multiply({0},{1}) = {2}\", value1, value2, result)  \n  \n            'Call the Divide service operation.  \n            value1 = 22D  \n            value2 = 7D  \n            result = Client.Divide(value1, value2)  \n            Console.WriteLine(\"Divide({0},{1}) = {2}\", value1, value2, result)  \n  \n            ' Step 3: Closing the client gracefully closes the connection and cleans up resources.  \n            Client.Close()  \n  \n            Console.WriteLine()  \n            Console.WriteLine(\"Press <ENTER> to terminate client.\")  \n            Console.ReadLine()  \n  \n        End Sub  \n  \n    End Module  \n  \n    ```  \n  \n     Notice the using or imports statement that imports the GettingStartedClient.ServiceReference1. This imports the code generated by Add Service Reference in Visual Studio. The code instantiates the WCF proxy and then calls each of the service operations exposed by the calculator service, closes the proxy and terminates.  \n  \n You have now completed the tutorial. You defined a service contract, implemented the service contract, generated a WCF proxy, configured a WCF client application, and then used the proxy to call service operations. To test out the application first run GettingStartedHost to start the service and then run GettingStartedClient. The output from GettingStartedHost should look like this:  \n  \n```Output  \nThe service is ready.Press <ENTER> to terminate service.Received Add(100,15.99)Return: 115.99Received Subtract(145,76.54)Return: 68.46Received Multiply(9,81.25)Return: 731.25Received Divide(22,7)Return: 3.14285714285714  \n```  \n  \n The output from GettingStartedClient should look like this:  \n  \n```Output  \nAdd(100,15.99) = 115.99Subtract(145,76.54) = 68.46Multiply(9,81.25) = 731.25Divide(22,7) = 3.14285714285714Press <ENTER> to terminate client.  \n```  \n  \n## See Also  \n [Building Clients](../../../docs/framework/wcf/building-clients.md)   \n [How to: Create a Client](../../../docs/framework/wcf/how-to-create-a-wcf-client.md)   \n [Getting Started Tutorial](../../../docs/framework/wcf/getting-started-tutorial.md)   \n [Basic WCF Programming](../../../docs/framework/wcf/basic-wcf-programming.md)   \n [How to: Create a Duplex Contract](../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)   \n [How to: Access Services with a Duplex Contract](../../../docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)   \n [Getting Started](../../../docs/framework/wcf/samples/getting-started-sample.md)   \n [Self-Host](../../../docs/framework/wcf/samples/self-host.md)","nodes":[{"pos":[4,461],"nodes":[{"content":"How to: Use a Windows Communication Foundation Client | Microsoft Docs","nodes":[{"pos":[0,70],"content":"How to: Use a Windows Communication Foundation Client | Microsoft Docs","nodes":[{"content":"How to: Use a Windows Communication Foundation Client | Microsoft Docs","pos":[0,70]}]}],"pos":[6,79],"yaml":true}],"content":"title: \"How to: Use a Windows Communication Foundation Client | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"WCF clients [WCF], using\"\nms.assetid: 190349fc-0573-49c7-bb85-8e316df7f31f\ncaps.latest.revision: 38\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","yamlblock":true},{"pos":[468,521],"content":"How to: Use a Windows Communication Foundation Client","linkify":"How to: Use a Windows Communication Foundation Client","nodes":[{"content":"How to: Use a Windows Communication Foundation Client","pos":[0,53]}]},{"content":"This is the last of six tasks required to create a basic <ph id=\"ph1\">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> application.","pos":[522,644],"source":"This is the last of six tasks required to create a basic [!INCLUDE[indigo1](../../../includes/indigo1-md.md)] application."},{"content":"For an overview of all six of the tasks, see the <bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](../../../docs/framework/wcf/getting-started-tutorial.md)</ept> topic.","pos":[645,784],"source":" For an overview of all six of the tasks, see the [Getting Started Tutorial](../../../docs/framework/wcf/getting-started-tutorial.md) topic."},{"content":"Once a <ph id=\"ph1\">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> proxy has been created and configured, a client instance can be created and the client application can be compiled and used to communicate with the <ph id=\"ph2\">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> service.","pos":[791,1060],"source":"Once a [!INCLUDE[indigo1](../../../includes/indigo1-md.md)] proxy has been created and configured, a client instance can be created and the client application can be compiled and used to communicate with the [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] service."},{"content":"This topic describes procedures for instantiating and using a <ph id=\"ph1\">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> client.","pos":[1061,1183],"source":" This topic describes procedures for instantiating and using a [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] client."},{"content":"This procedure does three things:","pos":[1184,1217]},{"pos":[1227,1302],"content":"Instantiates a <ph id=\"ph1\">[!INCLUDE[indigo2](../../../includes/indigo2-md.md)]</ph> client.","source":"Instantiates a [!INCLUDE[indigo2](../../../includes/indigo2-md.md)] client."},{"content":"Calls the service operations from the generated proxy.","pos":[1312,1366]},{"content":"Closes the client once the operation call is completed.","pos":[1376,1431]},{"pos":[1441,1489],"content":"To use a Windows Communication Foundation client","linkify":"To use a Windows Communication Foundation client","nodes":[{"content":"To use a Windows Communication Foundation client","pos":[0,48]}]},{"content":"Open the Program.cs or Program.vb file from the GettingStartedClient project and replace the existing code with the following code:","pos":[1499,1630]},{"content":"Notice the using or imports statement that imports the GettingStartedClient.ServiceReference1.","pos":[5204,5298]},{"content":"This imports the code generated by Add Service Reference in Visual Studio.","pos":[5299,5373]},{"content":"The code instantiates the WCF proxy and then calls each of the service operations exposed by the calculator service, closes the proxy and terminates.","pos":[5374,5523]},{"content":"You have now completed the tutorial.","pos":[5530,5566]},{"content":"You defined a service contract, implemented the service contract, generated a WCF proxy, configured a WCF client application, and then used the proxy to call service operations.","pos":[5567,5744]},{"content":"To test out the application first run GettingStartedHost to start the service and then run GettingStartedClient.","pos":[5745,5857]},{"content":"The output from GettingStartedHost should look like this:","pos":[5858,5915]},{"content":"The output from GettingStartedClient should look like this:","pos":[6165,6224]},{"pos":[6398,6406],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Building Clients<ept id=\"p1\">](../../../docs/framework/wcf/building-clients.md)</ept><ph id=\"ph1\"> </ph>","pos":[6410,6478],"source":"[Building Clients](../../../docs/framework/wcf/building-clients.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Create a Client<ept id=\"p1\">](../../../docs/framework/wcf/how-to-create-a-wcf-client.md)</ept><ph id=\"ph1\"> </ph>","pos":[6482,6567],"source":"[How to: Create a Client](../../../docs/framework/wcf/how-to-create-a-wcf-client.md) "},{"content":"<bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](../../../docs/framework/wcf/getting-started-tutorial.md)</ept><ph id=\"ph1\"> </ph>","pos":[6571,6655],"source":"[Getting Started Tutorial](../../../docs/framework/wcf/getting-started-tutorial.md) "},{"content":"<bpt id=\"p1\">[</bpt>Basic WCF Programming<ept id=\"p1\">](../../../docs/framework/wcf/basic-wcf-programming.md)</ept><ph id=\"ph1\"> </ph>","pos":[6659,6737],"source":"[Basic WCF Programming](../../../docs/framework/wcf/basic-wcf-programming.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Create a Duplex Contract<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)</ept><ph id=\"ph1\"> </ph>","pos":[6741,6856],"source":"[How to: Create a Duplex Contract](../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Access Services with a Duplex Contract<ept id=\"p1\">](../../../docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)</ept><ph id=\"ph1\"> </ph>","pos":[6860,7003],"source":"[How to: Access Services with a Duplex Contract](../../../docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md) "},{"content":"<bpt id=\"p1\">[</bpt>Getting Started<ept id=\"p1\">](../../../docs/framework/wcf/samples/getting-started-sample.md)</ept><ph id=\"ph1\"> </ph>","pos":[7007,7088],"source":"[Getting Started](../../../docs/framework/wcf/samples/getting-started-sample.md) "},{"content":"<bpt id=\"p1\">[</bpt>Self-Host<ept id=\"p1\">](../../../docs/framework/wcf/samples/self-host.md)</ept>","pos":[7092,7153],"source":"[Self-Host](../../../docs/framework/wcf/samples/self-host.md)"}]}