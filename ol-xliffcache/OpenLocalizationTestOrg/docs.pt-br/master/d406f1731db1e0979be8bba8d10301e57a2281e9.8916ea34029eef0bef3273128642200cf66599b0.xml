{"content":"---\ntitle: \"How to: Convert a String to a Number (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"conversions [C#]\"\n  - \"conversions [C#], string to int\"\n  - \"converting strings to int [C#]\"\n  - \"strings [C#], converting to int\"\nms.assetid: 467b9979-86ee-4afd-b734-30299cda91e3\ncaps.latest.revision: 34\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Convert a String to a Number (C# Programming Guide)\nYou can convert a [string](../../../csharp/language-reference/keywords/string.md) to a number by using methods in the <xref:System.Convert> class or by using the `TryParse` method found on the various numeric types (int, long, float, etc.).  \n  \n If you have a string, it is slightly more efficient and straightforward to call a `TryParse` method (for example, `int.TryParse(\"11\")`).  Using a `Convert` method is more useful for general objects that implement <xref:System.IConvertible>.  \n  \n You can use `Parse` or `TryParse` methods on the numeric type you expect the string contains, such as the <xref:System.Int32?displayProperty=fullName> type.  The <xref:System.Convert.ToUInt32%2A?displayProperty=fullName> method uses <xref:System.Int32.Parse%2A> internally.  If the string is not in a valid format, `Parse` throws an exception whereas `TryParse` returns [false](../../../csharp/language-reference/keywords/false.md).  \n  \n## Example  \n The `Parse` and `TryParse` methods ignore whitespace at the beginning and at the end of the string, but all other characters must be characters that form the appropriate numeric type (int, long, ulong, float, decimal, etc.).  Any whitespace within the characters that form the number cause an error.  For example, you can use `decimal.TryParse` to parse \"10\", \"10.3\", \"  10  \", but you cannot use this method to parse 10 from \"10X\", \"1 0\" (note space), \"10 .3\" (note space), \"10e1\" (`float.TryParse` works here), and so on.  \n  \n The examples below demonstrate both successful and unsuccessful calls to `Parse` and `TryParse`.  \n  \n [!code-cs[csProgGuideTypes#5555](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_1.cs)]  \n[!code-cs[csProgGuideTypes#25](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_2.cs)]  \n[!code-cs[csProgGuideTypes#26](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_3.cs)]  \n[!code-cs[csProgGuideTypes#27](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_4.cs)]  \n[!code-cs[csProgGuideTypes#28](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_5.cs)]  \n[!code-cs[csProgGuideTypes#100](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_6.cs)]  \n  \n## Example  \n The following table lists some of the methods from the <xref:System.Convert> class that you can use.  \n  \n|Numeric Type|Method|  \n|------------------|------------|  \n|`decimal`|<xref:System.Convert.ToDecimal%28System.String%29>|  \n|`float`|<xref:System.Convert.ToSingle%28System.String%29>|  \n|`double`|<xref:System.Convert.ToDouble%28System.String%29>|  \n|`short`|<xref:System.Convert.ToInt16%28System.String%29>|  \n|`int`|<xref:System.Convert.ToInt32%28System.String%29>|  \n|`long`|<xref:System.Convert.ToInt64%28System.String%29>|  \n|`ushort`|<xref:System.Convert.ToUInt16%28System.String%29>|  \n|`uint`|<xref:System.Convert.ToUInt32%28System.String%29>|  \n|`ulong`|<xref:System.Convert.ToUInt64%28System.String%29>|  \n  \n This example calls the <xref:System.Convert.ToInt32%28System.String%29?displayProperty=fullName> method to convert an input [string](../../../csharp/language-reference/keywords/string.md) to an [int](../../../csharp/language-reference/keywords/int.md) . The code catches the two most common exceptions that can be thrown by this method, <xref:System.FormatException> and <xref:System.OverflowException>. If the number can be incremented without overflowing the integer storage location, the program adds 1 to the result and prints the output.  \n  \n [!code-cs[csProgGuideTypes#5555](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_1.cs)]  \n[!code-cs[csProgGuideTypes#24](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_7.cs)]  \n  \n## See Also  \n [Types](../../../csharp/programming-guide/types/index.md)   \n [How to: Determine Whether a String Represents a Numeric Value](../../../csharp/programming-guide/strings/how-to-determine-whether-a-string-represents-a-numeric-value.md)   \n [.NET Framework 4 Formatting Utility](http://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d)","nodes":[{"pos":[12,88],"content":"How to: Convert a String to a Number (C# Programming Guide) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Convert a String to a Number (C# Programming Guide) | Microsoft Docs","pos":[0,76]}]},{"pos":[674,733],"content":"How to: Convert a String to a Number (C# Programming Guide)","linkify":"How to: Convert a String to a Number (C# Programming Guide)","nodes":[{"content":"How to: Convert a String to a Number (C# Programming Guide)","pos":[0,59]}]},{"pos":[734,974],"content":"You can convert a <bpt id=\"p1\">[</bpt>string<ept id=\"p1\">](../../../csharp/language-reference/keywords/string.md)</ept> to a number by using methods in the <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> class or by using the <ph id=\"ph2\">`TryParse`</ph> method found on the various numeric types (int, long, float, etc.).","source":"You can convert a [string](../../../csharp/language-reference/keywords/string.md) to a number by using methods in the <xref:System.Convert> class or by using the `TryParse` method found on the various numeric types (int, long, float, etc.)."},{"content":"If you have a string, it is slightly more efficient and straightforward to call a <ph id=\"ph1\">`TryParse`</ph> method (for example, <ph id=\"ph2\">`int.TryParse(\"11\")`</ph>).","pos":[981,1117],"source":"If you have a string, it is slightly more efficient and straightforward to call a `TryParse` method (for example, `int.TryParse(\"11\")`)."},{"content":"Using a <ph id=\"ph1\">`Convert`</ph> method is more useful for general objects that implement <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph>.","pos":[1119,1221],"source":"  Using a `Convert` method is more useful for general objects that implement <xref:System.IConvertible>."},{"content":"You can use <ph id=\"ph1\">`Parse`</ph> or <ph id=\"ph2\">`TryParse`</ph> methods on the numeric type you expect the string contains, such as the <ph id=\"ph3\">&lt;xref:System.Int32?displayProperty=fullName&gt;</ph> type.","pos":[1228,1384],"source":"You can use `Parse` or `TryParse` methods on the numeric type you expect the string contains, such as the <xref:System.Int32?displayProperty=fullName> type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt32%2A?displayProperty=fullName&gt;</ph> method uses <ph id=\"ph2\">&lt;xref:System.Int32.Parse%2A&gt;</ph> internally.","pos":[1386,1501],"source":"  The <xref:System.Convert.ToUInt32%2A?displayProperty=fullName> method uses <xref:System.Int32.Parse%2A> internally."},{"content":"If the string is not in a valid format, <ph id=\"ph1\">`Parse`</ph> throws an exception whereas <ph id=\"ph2\">`TryParse`</ph> returns <bpt id=\"p1\">[</bpt>false<ept id=\"p1\">](../../../csharp/language-reference/keywords/false.md)</ept>.","pos":[1503,1660],"source":"  If the string is not in a valid format, `Parse` throws an exception whereas `TryParse` returns [false](../../../csharp/language-reference/keywords/false.md)."},{"pos":[1669,1676],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`Parse`</ph> and <ph id=\"ph2\">`TryParse`</ph> methods ignore whitespace at the beginning and at the end of the string, but all other characters must be characters that form the appropriate numeric type (int, long, ulong, float, decimal, etc.).","pos":[1680,1904],"source":"The `Parse` and `TryParse` methods ignore whitespace at the beginning and at the end of the string, but all other characters must be characters that form the appropriate numeric type (int, long, ulong, float, decimal, etc.)."},{"content":"Any whitespace within the characters that form the number cause an error.","pos":[1906,1979]},{"content":"For example, you can use <ph id=\"ph1\">`decimal.TryParse`</ph> to parse \"10\", \"10.3\", \"  10  \", but you cannot use this method to parse 10 from \"10X\", \"1 0\" (note space), \"10 .3\" (note space), \"10e1\" (<ph id=\"ph2\">`float.TryParse`</ph> works here), and so on.","pos":[1981,2203],"source":"  For example, you can use `decimal.TryParse` to parse \"10\", \"10.3\", \"  10  \", but you cannot use this method to parse 10 from \"10X\", \"1 0\" (note space), \"10 .3\" (note space), \"10e1\" (`float.TryParse` works here), and so on."},{"pos":[2210,2306],"content":"The examples below demonstrate both successful and unsuccessful calls to <ph id=\"ph1\">`Parse`</ph> and <ph id=\"ph2\">`TryParse`</ph>.","source":"The examples below demonstrate both successful and unsuccessful calls to `Parse` and `TryParse`."},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#5555<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_1.cs)</ept><ept id=\"p1\">]</ept>","pos":[2313,2456],"source":"[!code-cs[csProgGuideTypes#5555](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_1.cs)]"},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#25<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_2.cs)</ept><ept id=\"p1\">]</ept>","pos":[2459,2600],"source":"[!code-cs[csProgGuideTypes#25](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_2.cs)]"},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#26<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_3.cs)</ept><ept id=\"p1\">]</ept>","pos":[2603,2744],"source":"[!code-cs[csProgGuideTypes#26](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_3.cs)]"},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#27<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_4.cs)</ept><ept id=\"p1\">]</ept>","pos":[2747,2888],"source":"[!code-cs[csProgGuideTypes#27](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_4.cs)]"},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#28<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_5.cs)</ept><ept id=\"p1\">]</ept>","pos":[2891,3032],"source":"[!code-cs[csProgGuideTypes#28](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_5.cs)]"},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#100<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_6.cs)</ept><ept id=\"p1\">]</ept>","pos":[3035,3177],"source":"[!code-cs[csProgGuideTypes#100](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_6.cs)]"},{"pos":[3186,3193],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following table lists some of the methods from the <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> class that you can use.","pos":[3197,3297],"source":"The following table lists some of the methods from the <xref:System.Convert> class that you can use."},{"content":"Numeric Type","pos":[3304,3316]},{"content":"Method","pos":[3317,3323]},{"content":"This example calls the <ph id=\"ph1\">&lt;xref:System.Convert.ToInt32%28System.String%29?displayProperty=fullName&gt;</ph> method to convert an input <bpt id=\"p1\">[</bpt>string<ept id=\"p1\">](../../../csharp/language-reference/keywords/string.md)</ept> to an <bpt id=\"p2\">[</bpt>int<ept id=\"p2\">](../../../csharp/language-reference/keywords/int.md)</ept> .","pos":[3923,4176],"source":"This example calls the <xref:System.Convert.ToInt32%28System.String%29?displayProperty=fullName> method to convert an input [string](../../../csharp/language-reference/keywords/string.md) to an [int](../../../csharp/language-reference/keywords/int.md) ."},{"content":"The code catches the two most common exceptions that can be thrown by this method, <ph id=\"ph1\">&lt;xref:System.FormatException&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.OverflowException&gt;</ph>.","pos":[4177,4326],"source":" The code catches the two most common exceptions that can be thrown by this method, <xref:System.FormatException> and <xref:System.OverflowException>."},{"content":"If the number can be incremented without overflowing the integer storage location, the program adds 1 to the result and prints the output.","pos":[4327,4465]},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#5555<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_1.cs)</ept><ept id=\"p1\">]</ept>","pos":[4472,4615],"source":"[!code-cs[csProgGuideTypes#5555](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_1.cs)]"},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csProgGuideTypes#24<ept id=\"p2\">](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_7.cs)</ept><ept id=\"p1\">]</ept>","pos":[4618,4759],"source":"[!code-cs[csProgGuideTypes#24](../../../csharp/programming-guide/nullable-types/codesnippet/CSharp/how-to-convert-a-string-to-a-number_7.cs)]"},{"pos":[4768,4776],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Types<ept id=\"p1\">](../../../csharp/programming-guide/types/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[4780,4838],"source":"[Types](../../../csharp/programming-guide/types/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Determine Whether a String Represents a Numeric Value<ept id=\"p1\">](../../../csharp/programming-guide/strings/how-to-determine-whether-a-string-represents-a-numeric-value.md)</ept><ph id=\"ph1\"> </ph>","pos":[4841,5013],"source":" [How to: Determine Whether a String Represents a Numeric Value](../../../csharp/programming-guide/strings/how-to-determine-whether-a-string-represents-a-numeric-value.md) "},{"content":"<bpt id=\"p1\"> [</bpt>.NET Framework 4 Formatting Utility<ept id=\"p1\">](http://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d)</ept>","pos":[5016,5122],"source":" [.NET Framework 4 Formatting Utility](http://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d)"}]}