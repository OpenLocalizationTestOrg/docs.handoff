{"content":"---\ntitle: \"StateMachine Scenario Using a Combination of FlowChart and Pick | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 88d81395-f7a3-41d8-8439-20a425c538a6\ncaps.latest.revision: 10\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# StateMachine Scenario Using a Combination of FlowChart and Pick\nThis sample demonstrates how to implement a simple stopwatch scenario using a combination of the <xref:System.Activities.Statements.Flowchart> and <xref:System.Activities.Statements.Pick> activities. It uses Receive and Send within the Pick activity to listen for stopwatch events.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to (download page) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Scenario\\StateMachineWithPick`  \n  \n## Sample Details  \n The following table lists the projects in this sample.  \n  \n|Project Name|Description|  \n|-|-|  \n|StopWatchService|This project contains the implementation of a state machine for the stopwatch sample using a combination of the <xref:System.Activities.Statements.Flowchart> and <xref:System.Activities.Statements.Pick> activities.<br /><br /> The <xref:System.Activities.Statements.Pick> activity has 3 <xref:System.Activities.Statements.PickBranch> statements within the <xref:System.Activities.Statements.Pick.Branches%2A> property that listen for `GetStart`, `GetStop` and `GetOff` events. Based on the incoming event, the triggers for one of the branches activate and the corresponding <xref:System.Activities.Statements.PickBranch.Action%2A> is triggered. In the <xref:System.Activities.Statements.PickBranch.Action%2A> property, there is a <xref:System.Activities.Statements.Switch%601> statement that evaluates whether the transition is a legitimate transition and if it is, the `currentState` property is updated to the transitioning state and sent to the client.<br /><br /> The <xref:System.Activities.Statements.FlowDecision> activity at the end of the <xref:System.Activities.Statements.Flowchart> evaluates the `currentState` property to determine whether the state is terminal. If it is, the workflow ends; otherwise control loops back to the start of the <xref:System.Activities.Statements.Pick> activity where the workflow waits for more stopwatch events.|  \n|StopWatchClient|This is a simple sequential workflow console application that sends various stopwatch events with simple Send or Receive activity combinations.|  \n  \n#### To use this sample  \n  \n1.  Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open StateMachineWithPick.sln solution file.  \n  \n2.  To build the solution, press CTRL+SHIFT+B.  \n  \n3.  Start the StopWatchService.exe from [!INCLUDE[fileExplorer](../../../../includes/fileexplorer-md.md)] as an administrator by right clicking the .exe file and selecting **Run as administrator**.  \n  \n    1.  Navigate to the StateMachineWithPick\\CS\\StopWatchService\\bin\\Debug folder.  \n  \n    2.  Right-click the StopWatchService.exe file and select **Run as administrator**.  \n  \n4.  Start the StopWatchClient client application from within [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)].  \n  \n    1.  In **Solution Explorer**, select the **StopWatchClient** project and right-click **Set as StartUp Project**.  \n  \n    2.  To run the solution, press CTRL+F5.  \n  \n5.  Switch back to the console window for the StopWatchService.exe to view the state transitions.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Scenario\\StateMachineWithPick`  \n  \n## See Also","nodes":[{"pos":[12,92],"content":"StateMachine Scenario Using a Combination of FlowChart and Pick | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"StateMachine Scenario Using a Combination of FlowChart and Pick | Microsoft Docs","pos":[0,80]}]},{"pos":[358,421],"content":"StateMachine Scenario Using a Combination of FlowChart and Pick","linkify":"StateMachine Scenario Using a Combination of FlowChart and Pick","nodes":[{"content":"StateMachine Scenario Using a Combination of FlowChart and Pick","pos":[0,63]}]},{"content":"This sample demonstrates how to implement a simple stopwatch scenario using a combination of the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Flowchart&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activities.","pos":[422,621],"source":"This sample demonstrates how to implement a simple stopwatch scenario using a combination of the <xref:System.Activities.Statements.Flowchart> and <xref:System.Activities.Statements.Pick> activities."},{"content":"It uses Receive and Send within the Pick activity to listen for stopwatch events.","pos":[622,703]},{"pos":[711,843],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to (download page) to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[897,1085],"source":"If this directory does not exist, go to (download page) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[1086,1136]},{"pos":[1221,1235],"content":"Sample Details","linkify":"Sample Details","nodes":[{"content":"Sample Details","pos":[0,14]}]},{"content":"The following table lists the projects in this sample.","pos":[1239,1293]},{"content":"Project Name","pos":[1300,1312]},{"content":"Description","pos":[1313,1324]},{"content":"StopWatchService","pos":[1337,1353]},{"content":"This project contains the implementation of a state machine for the stopwatch sample using a combination of the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Flowchart&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activities.","pos":[1354,1568],"source":"This project contains the implementation of a state machine for the stopwatch sample using a combination of the <xref:System.Activities.Statements.Flowchart> and <xref:System.Activities.Statements.Pick> activities."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity has 3 <ph id=\"ph2\">&lt;xref:System.Activities.Statements.PickBranch&gt;</ph> statements within the <ph id=\"ph3\">&lt;xref:System.Activities.Statements.Pick.Branches%2A&gt;</ph> property that listen for <ph id=\"ph4\">`GetStart`</ph>, <ph id=\"ph5\">`GetStop`</ph> and <ph id=\"ph6\">`GetOff`</ph> events.","pos":[1581,1830],"source":" The <xref:System.Activities.Statements.Pick> activity has 3 <xref:System.Activities.Statements.PickBranch> statements within the <xref:System.Activities.Statements.Pick.Branches%2A> property that listen for `GetStart`, `GetStop` and `GetOff` events."},{"content":"Based on the incoming event, the triggers for one of the branches activate and the corresponding <ph id=\"ph1\">&lt;xref:System.Activities.Statements.PickBranch.Action%2A&gt;</ph> is triggered.","pos":[1831,1998],"source":" Based on the incoming event, the triggers for one of the branches activate and the corresponding <xref:System.Activities.Statements.PickBranch.Action%2A> is triggered."},{"content":"In the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.PickBranch.Action%2A&gt;</ph> property, there is a <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Switch%601&gt;</ph> statement that evaluates whether the transition is a legitimate transition and if it is, the <ph id=\"ph3\">`currentState`</ph> property is updated to the transitioning state and sent to the client.","pos":[1999,2309],"source":" In the <xref:System.Activities.Statements.PickBranch.Action%2A> property, there is a <xref:System.Activities.Statements.Switch%601> statement that evaluates whether the transition is a legitimate transition and if it is, the `currentState` property is updated to the transitioning state and sent to the client."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> activity at the end of the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Flowchart&gt;</ph> evaluates the <ph id=\"ph3\">`currentState`</ph> property to determine whether the state is terminal.","pos":[2322,2529],"source":" The <xref:System.Activities.Statements.FlowDecision> activity at the end of the <xref:System.Activities.Statements.Flowchart> evaluates the `currentState` property to determine whether the state is terminal."},{"content":"If it is, the workflow ends; otherwise control loops back to the start of the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Pick&gt;</ph> activity where the workflow waits for more stopwatch events.","pos":[2530,2709],"source":" If it is, the workflow ends; otherwise control loops back to the start of the <xref:System.Activities.Statements.Pick> activity where the workflow waits for more stopwatch events."},{"content":"StopWatchClient","pos":[2714,2729]},{"content":"This is a simple sequential workflow console application that sends various stopwatch events with simple Send or Receive activity combinations.","pos":[2730,2873]},{"pos":[2885,2903],"content":"To use this sample","linkify":"To use this sample","nodes":[{"content":"To use this sample","pos":[0,18]}]},{"pos":[2913,3018],"content":"Using <ph id=\"ph1\">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>, open StateMachineWithPick.sln solution file.","source":"Using [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)], open StateMachineWithPick.sln solution file."},{"content":"To build the solution, press CTRL+SHIFT+B.","pos":[3028,3070]},{"pos":[3080,3273],"content":"Start the StopWatchService.exe from <ph id=\"ph1\">[!INCLUDE[fileExplorer](../../../../includes/fileexplorer-md.md)]</ph> as an administrator by right clicking the .exe file and selecting <bpt id=\"p1\">**</bpt>Run as administrator<ept id=\"p1\">**</ept>.","source":"Start the StopWatchService.exe from [!INCLUDE[fileExplorer](../../../../includes/fileexplorer-md.md)] as an administrator by right clicking the .exe file and selecting **Run as administrator**."},{"content":"Navigate to the StateMachineWithPick\\CS\\StopWatchService\\bin\\Debug folder.","pos":[3287,3361]},{"pos":[3375,3453],"content":"Right-click the StopWatchService.exe file and select <bpt id=\"p1\">**</bpt>Run as administrator<ept id=\"p1\">**</ept>.","source":"Right-click the StopWatchService.exe file and select **Run as administrator**."},{"pos":[3463,3574],"content":"Start the StopWatchClient client application from within <ph id=\"ph1\">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>.","source":"Start the StopWatchClient client application from within [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]."},{"pos":[3588,3696],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, select the <bpt id=\"p2\">**</bpt>StopWatchClient<ept id=\"p2\">**</ept> project and right-click <bpt id=\"p3\">**</bpt>Set as StartUp Project<ept id=\"p3\">**</ept>.","source":"In **Solution Explorer**, select the **StopWatchClient** project and right-click **Set as StartUp Project**."},{"content":"To run the solution, press CTRL+F5.","pos":[3710,3745]},{"content":"Switch back to the console window for the StopWatchService.exe to view the state transitions.","pos":[3755,3848]},{"pos":[3856,3988],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[4042,4368],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[4369,4419]},{"pos":[4504,4512],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}