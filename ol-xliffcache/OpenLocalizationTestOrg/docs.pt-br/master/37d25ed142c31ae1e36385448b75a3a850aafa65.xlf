<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="isolated-storage.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37d25ed142c31ae1e36385448b75a3a850aafa65</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\io\isolated-storage.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffe55410de3a3df7481654d92dc4d2333f3750ad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd73fe64e725a533450599c8d844aab9650548e6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Isolated Storage</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Isolated Storage</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="top"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> For <ph id="ph1">[!INCLUDE[desktop_appname](../../../includes/desktop-appname-md.md)]</ph> apps, isolated storage is a data storage mechanism that provides isolation and safety by defining standardized ways of associating code with saved data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Standardization provides other benefits as well.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Administrators can use tools designed to manipulate isolated storage to configure file storage space, set security policies, and delete unused data.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>With isolated storage, your code no longer needs unique paths to specify safe locations in the file system, and data is protected from other applications that only have isolated storage access.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Hard-coded information that indicates where an application's storage area is located is unnecessary.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Isolated storage is not available for <ph id="ph1">[!INCLUDE[win8_appname_long](../../../includes/win8-appname-long-md.md)]</ph> apps.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Instead, use the application data classes in the <ph id="ph1">`Windows.Storage`</ph> namespaces included in the <ph id="ph2">[!INCLUDE[wrt](../../../includes/wrt-md.md)]</ph> API to store local data and files.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Application data<ept id="p1">](https://docs.microsoft.com/previous-versions/windows/apps/hh464917(v=win.10))</ept> in the Windows Dev Center.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This topic contains the following sections:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Compartments and Stores<ept id="p1">](#data_compartments_and_stores)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Quotas for Isolated Storage<ept id="p1">](#quotas)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Secure Access<ept id="p1">](#secure_access)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Allowed Usage and Security Risks<ept id="p1">](#allowed_usage)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Isolated Storage Locations<ept id="p1">](#isolated_storage_locations)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating, Enumerating, and Deleting Isolated Storage<ept id="p1">](#isolated_storage_tasks)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Scenarios for Isolated Storage<ept id="p1">](#scenarios_for_isolated_storage)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Related Topics<ept id="p1">](#related_topics)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reference<ept id="p1">](#reference)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Data Compartments and Stores</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When an application stores data in a file, the file name and storage location must be carefully chosen to minimize the possibility that the storage location will be known to another application and, therefore, will be vulnerable to corruption.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Without a standard system in place to manage these problems, developing ad hoc techniques that minimize storage conflicts can be complex, and the results can be unreliable.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>With isolated storage, data is always isolated by user and by assembly.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Credentials such as the origin or the strong name of the assembly determine assembly identity.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Data can also be isolated by application domain, using similar credentials.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you use isolated storage, your application saves data to a unique data compartment that is associated with some aspect of the code's identity, such as its publisher or signature.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The data compartment is an abstraction, not a specific storage location; it consists of one or more isolated storage files, called stores, which contain the actual directory locations where data is stored.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, an application might have a data compartment associated with it, and a directory in the file system would implement the store that actually preserves the data for that application.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The data saved in the store can be any kind of data, from user preference information to application state.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For the developer, the location of the data compartment is transparent.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Stores usually reside on the client, but a server application could use isolated stores to store information by impersonating the user on whose behalf it is functioning.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Isolated storage can also store information on a server with a user's roaming profile so that the information will travel with the roaming user.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Quotas for Isolated Storage</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A quota is a limit on the amount of isolated storage that can be used.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The quota includes bytes of file space as well as the overhead associated with the directory and other information in the store.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Isolated storage uses permission quotas, which are storage limits that are set by using <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStoragePermission&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you try to write data that exceeds the quota, an <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageException&gt;</ph> exception is thrown.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Security policy, which can be modified using the .NET Framework Configuration Tool (Mscorcfg.msc), determines which permissions are granted to code.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Code that has been granted <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStoragePermission&gt;</ph> is restricted to using no more storage than the <ph id="ph2">&lt;xref:System.Security.Permissions.IsolatedStoragePermission.UserQuota%2A&gt;</ph> property allows.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>However, because code can bypass permission quotas by presenting different user identities, permission quotas serve as guidelines for how code should behave rather than as a firm limit on code behavior.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Quotas are not enforced on roaming stores.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Because of this, a slightly higher level of permission is required for code to use them.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The enumeration values <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser&gt;</ph> specify a permission to use isolated storage for a roaming user.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Secure Access</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Using isolated storage enables partially trusted applications to store data in a manner that is controlled by the computer's security policy.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This is especially useful for downloaded components that a user might want to run cautiously.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Security policy rarely grants this kind of code permission when you access the file system by using standard I/O mechanisms.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>However, by default, code running from the local computer, a local network, or the Internet is granted the right to use isolated storage.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Administrators can limit how much isolated storage an application or a user has available, based on an appropriate trust level.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In addition, administrators can remove a user's persisted data completely.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To create or access isolated storage, code must be granted the appropriate <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt;</ph> permission.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To access isolated storage, code must have all necessary native platform operating system rights.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The access control lists (ACLs) that control which users have the rights to use the file system must be satisfied.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>.NET Framework applications already have operating system rights to access isolated storage unless they perform (platform-specific) impersonation.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In this case, the application is responsible for ensuring that the impersonated user identity has the proper operating system rights to access isolated storage.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This access provides a convenient way for code that is run or downloaded from the web to read and write to a storage area related to a particular user.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To control access to isolated storage, the common language runtime uses <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Each object has properties that specify the following values:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Allowed usage, which indicates the type of access that is allowed.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The values are members of the <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageContainment&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For more information about these values, see the table in the next section.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Storage quota, as discussed in the preceding section.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The runtime demands <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt;</ph> permission when code first attempts to open a store.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>It decides whether to grant this permission, based on how much the code is trusted.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the permission is granted, the allowed usage and storage quota values are determined by security policy and by the code's request for <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Security policy is set by using the .NET Framework Configuration Tool (Mscorcfg.msc).</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>All callers in the call stack are checked to ensure that each caller has at least the appropriate allowed usage.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The runtime also checks the quota imposed on the code that opened or created the store in which the file is to be saved.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If these conditions are satisfied, permission is granted.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The quota is checked again every time a file is written to the store.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Application code is not required to request permission because the common language runtime will grant whatever <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt;</ph> is appropriate based on security policy.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>However, there are good reasons to request specific permissions that your application needs, including <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Allowed Usage and Security Risks</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The allowed usage specified by <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt;</ph> determines the degree to which code will be allowed to create and use isolated storage.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The following table shows how the allowed usage specified in the permission corresponds to types of isolation and summarizes the security risks associated with each allowed usage.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Allowed usage</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Isolation types</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Security impact</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>No isolated storage use is allowed.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>There is no security impact.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Isolation by user, domain, and assembly.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Each assembly has a separate substore within the domain.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Stores that use this permission are also implicitly isolated by computer.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This permission level leaves resources open to unauthorized overuse, although enforced quotas make it more difficult.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This is called a denial of service attack.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Same as <ph id="ph1">`DomainIsolationByUser`</ph>, but store is saved to a location that will roam if roaming user profiles are enabled and quotas are not enforced.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Because quotas must be disabled, storage resources are more vulnerable to a denial of service attack.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Isolation by user and assembly.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Stores that use this permission are also implicitly isolated by computer.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Quotas are enforced at this level to help prevent a denial of service attack.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The same assembly in another domain can access this store, opening the possibility that information could be leaked between applications.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Same as <ph id="ph1">`AssemblyIsolationByUser`</ph>, but store is saved to a location that will roam if roaming user profiles are enabled and quotas are not enforced.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Same as in <ph id="ph1">`AssemblyIsolationByUser`</ph>, but without quotas, the risk of a denial of service attack increases.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Isolation by user.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Typically, only administrative or debugging tools use this level of permission.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Access with this permission allows code to view or delete any of a user's isolated storage files or directories (regardless of assembly isolation).</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Risks include, but are not limited to, leaking information and data loss.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Isolation by all users, domains, and assemblies.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Typically, only administrative or debugging tools use this level of permission.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This permission creates the potential for a total compromise of all isolated stores for all users.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Isolated Storage Locations</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Sometimes it is helpful to verify a change to isolated storage by using the file system of the operating system.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You might also want to know the location of isolated storage files.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This location is different depending on the operating system.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The following table shows the root locations where isolated storage is created on a few common operating systems.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Look for Microsoft\IsolatedStorage directories under this root location.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>You must change folder settings to show hidden files and folders in order to see isolated storage in the file system.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Operating system</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Location in file system</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Windows 2000, Windows XP, Windows Server 2003  (upgrade from Windows NT 4.0)</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Roaming-enabled stores =</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>SYSTEMROOT&gt;\Profiles<ph id="ph2">\\</ph>&lt;user<ph id="ph3">\&gt;</ph>\Application Data</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Nonroaming stores =</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>SYSTEMROOT&gt;\Profiles<ph id="ph2">\\</ph>&lt;user<ph id="ph3">\&gt;</ph>\Local Settings\Application Data</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Windows 2000  - clean installation (and upgrades from Windows 98 and Windows NT 3.51)</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Roaming-enabled stores =</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>SYSTEMDRIVE&gt;\Documents and Settings<ph id="ph2">\\</ph>&lt;user<ph id="ph3">\&gt;</ph>\Application Data</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Nonroaming stores =</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>SYSTEMDRIVE&gt;\Documents and Settings<ph id="ph2">\\</ph>&lt;user<ph id="ph3">\&gt;</ph>\Local Settings\Application Data</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Windows XP, Windows Server 2003 - clean installation (and upgrades from Windows 2000 and Windows 98)</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Roaming-enabled stores =</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>SYSTEMDRIVE&gt;\Documents and Settings<ph id="ph2">\\</ph>&lt;user<ph id="ph3">\&gt;</ph>\Application Data</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Nonroaming stores =</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>SYSTEMDRIVE&gt;\Documents and Settings<ph id="ph2">\\</ph>&lt;user<ph id="ph3">\&gt;</ph>\Local Settings\Application Data</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[win8](../../../includes/win8-md.md)]</ph>, Windows 7, Windows Server 2008, Windows Vista</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Roaming-enabled stores =</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>SYSTEMDRIVE&gt;\Users<ph id="ph2">\\</ph>&lt;user<ph id="ph3">\&gt;</ph>\AppData\Roaming</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Nonroaming stores =</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>SYSTEMDRIVE&gt;\Users<ph id="ph2">\\</ph>&lt;user<ph id="ph3">\&gt;</ph>\AppData\Local</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Creating, Enumerating, and Deleting Isolated Storage</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides three classes in the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage&gt;</ph> namespace to help you perform tasks that involve isolated storage:</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph>, derives from <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorage?displayProperty=nameWithType&gt;</ph> and provides basic management of stored assembly and application files.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>An instance of the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> class represents a single store located in the file system.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> derives from <ph id="ph2">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> and provides access to the files in a store.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageScope&gt;</ph> is an enumeration that enables you to create and select a store with the appropriate isolation type.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The isolated storage classes enable you to create, enumerate, and delete isolated storage.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The methods for performing these tasks are available through the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Some operations require you to have the <ph id="ph1">&lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt;</ph> permission that represents the right to administer isolated storage; you might also need to have operating system rights to access the file or directory.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For a series of examples that demonstrate common isolated storage tasks, see the how-to topics listed in <bpt id="p1">[</bpt>Related Topics<ept id="p1">](#related_topics)</ept>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Scenarios for Isolated Storage</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Isolated storage is useful in many situations, including these four scenarios:</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Downloaded controls.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Managed code controls downloaded from the Internet are not allowed to write to the hard drive through normal I/O classes, but they can use isolated storage to persist users' settings and application states.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Shared component storage.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Components that are shared between applications can use isolated storage to provide controlled access to data stores.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Server storage.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Server applications can use isolated storage to provide individual stores for a large number of users making requests to the application.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Because isolated storage is always segregated by user, the server must impersonate the user making the request.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In this case, data is isolated based on the identity of the principal, which is the same identity the application uses to distinguish between its users.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Roaming.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Applications can also use isolated storage with roaming user profiles.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>This allows a user's isolated stores to roam with the profile.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>You should not use isolated storage in the following situations:</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>To store high-value secrets, such as unencrypted keys or passwords, because isolated storage is not protected from highly trusted code, from unmanaged code, or from trusted users of the computer.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>To store code.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>To store configuration and deployment settings, which administrators control.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>(User preferences are not considered to be configuration settings because administrators do not control them.)</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Many applications use a database to store and isolate data, in which case one or more rows in a database might represent storage for a specific user.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>You might choose to use isolated storage instead of a database when the number of users is small, when the overhead of using a database is significant, or when no database facility exists.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Also, when the application requires storage that is more flexible and complex than what a row in a database provides, isolated storage can provide a viable alternative.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Title</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Types of Isolation<ept id="p1">](../../../docs/standard/io/types-of-isolation.md)</ept></source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Describes the different types of isolation.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Obtain Stores for Isolated Storage<ept id="p1">](../../../docs/standard/io/how-to-obtain-stores-for-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Provides an example of using the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> class to obtain a store isolated by user and assembly.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Enumerate Stores for Isolated Storage<ept id="p1">](../../../docs/standard/io/how-to-enumerate-stores-for-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Shows how to use the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method to calculate the size of all isolated storage for the user.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Delete Stores in Isolated Storage<ept id="p1">](../../../docs/standard/io/how-to-delete-stores-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Shows how to use the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile.Remove%2A?displayProperty=nameWithType&gt;</ph> method in two different ways to delete isolated stores.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Anticipate Out-of-Space Conditions with Isolated Storage<ept id="p1">](../../../docs/standard/io/how-to-anticipate-out-of-space-conditions-with-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Shows how to measure the remaining space in an isolated store.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create Files and Directories in Isolated Storage<ept id="p1">](../../../docs/standard/io/how-to-create-files-and-directories-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Provides some examples of creating files and directories in an isolated store.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Find Existing Files and Directories in Isolated Storage<ept id="p1">](../../../docs/standard/io/how-to-find-existing-files-and-directories-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Demonstrates how to read the directory structure and files in isolated storage.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Read and Write to Files in Isolated Storage<ept id="p1">](../../../docs/standard/io/how-to-read-and-write-to-files-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Provides an example of writing a string to an isolated storage file and reading it back.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Delete Files and Directories in Isolated Storage<ept id="p1">](../../../docs/standard/io/how-to-delete-files-and-directories-in-isolated-storage.md)</ept></source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Demonstrates how to delete isolated storage files and directories.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>File and Stream I/O<ept id="p1">](../../../docs/standard/io/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Explains how you can perform synchronous and asynchronous file and data stream access.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Reference</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>