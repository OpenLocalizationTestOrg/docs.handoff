{"content":"---\ntitle: \"How to: Work with Dictionaries Using LINQ to XML (C#)\"\nms.date: 07/20/2015\nms.assetid: 57bcefe3-8433-4d3b-935a-511c9bcbdfa8\n---\n# How to: Work with Dictionaries Using LINQ to XML (C#)\nIt is often convenient to convert varieties of data structures to XML, and XML back to other data structures. This topic shows a specific implementation of this general approach by converting a <xref:System.Collections.Generic.Dictionary%602> to XML and back.  \n  \n## Example  \n This example uses a form of functional construction in which a query projects new <xref:System.Xml.Linq.XElement> objects, and the resulting collection is passed as an argument to the constructor of the Root <xref:System.Xml.Linq.XElement> object.  \n  \n```csharp  \nDictionary<string, string> dict = new Dictionary<string, string>();  \ndict.Add(\"Child1\", \"Value1\");  \ndict.Add(\"Child2\", \"Value2\");  \ndict.Add(\"Child3\", \"Value3\");  \ndict.Add(\"Child4\", \"Value4\");  \nXElement root = new XElement(\"Root\",  \n    from keyValue in dict  \n    select new XElement(keyValue.Key, keyValue.Value)  \n);  \nConsole.WriteLine(root);  \n```  \n  \n This code produces the following output:  \n  \n```xml  \n<Root>  \n  <Child1>Value1</Child1>  \n  <Child2>Value2</Child2>  \n  <Child3>Value3</Child3>  \n  <Child4>Value4</Child4>  \n</Root>  \n```  \n  \n## Example  \n The following code creates a dictionary from XML.  \n  \n```csharp  \nXElement root = new XElement(\"Root\",  \n    new XElement(\"Child1\", \"Value1\"),  \n    new XElement(\"Child2\", \"Value2\"),  \n    new XElement(\"Child3\", \"Value3\"),  \n    new XElement(\"Child4\", \"Value4\")  \n);  \n  \nDictionary<string, string> dict = new Dictionary<string, string>();  \nforeach (XElement el in root.Elements())  \n    dict.Add(el.Name.LocalName, el.Value);  \nforeach (string str in dict.Keys)  \n    Console.WriteLine(\"{0}:{1}\", str, dict[str]);  \n```  \n  \n This code produces the following output:  \n  \n```  \nChild1:Value1  \nChild2:Value2  \nChild3:Value3  \nChild4:Value4  \n```  \n  \n## See also\n\n- [Projections and Transformations (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)\n","nodes":[{"pos":[4,135],"embed":true,"restype":"x-metadata","content":"title: \"How to: Work with Dictionaries Using LINQ to XML (C#)\"\nms.date: 07/20/2015\nms.assetid: 57bcefe3-8433-4d3b-935a-511c9bcbdfa8","nodes":[{"content":"How to: Work with Dictionaries Using LINQ to XML (C#)","nodes":[{"pos":[0,53],"content":"How to: Work with Dictionaries Using LINQ to XML (C#)","nodes":[{"content":"How to: Work with Dictionaries Using LINQ to XML (C#)","pos":[0,53]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[142,195],"content":"How to: Work with Dictionaries Using LINQ to XML (C#)","linkify":"How to: Work with Dictionaries Using LINQ to XML (C#)","nodes":[{"content":"How to: Work with Dictionaries Using LINQ to XML (C#)","pos":[0,53]}]},{"content":"It is often convenient to convert varieties of data structures to XML, and XML back to other data structures.","pos":[196,305]},{"content":"This topic shows a specific implementation of this general approach by converting a <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> to XML and back.","pos":[306,455],"source":" This topic shows a specific implementation of this general approach by converting a <xref:System.Collections.Generic.Dictionary%602> to XML and back."},{"pos":[464,471],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[475,722],"content":"This example uses a form of functional construction in which a query projects new <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects, and the resulting collection is passed as an argument to the constructor of the Root <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object.","source":"This example uses a form of functional construction in which a query projects new <xref:System.Xml.Linq.XElement> objects, and the resulting collection is passed as an argument to the constructor of the Root <xref:System.Xml.Linq.XElement> object."},{"content":"This code produces the following output:","pos":[1103,1143]},{"pos":[1301,1308],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code creates a dictionary from XML.","pos":[1312,1361]},{"content":"This code produces the following output:","pos":[1841,1881]},{"pos":[1969,1977],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1981,2132],"content":"<bpt id=\"p1\">[</bpt>Projections and Transformations (LINQ to XML) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)</ept>","source":"[Projections and Transformations (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)"}]}