{"content":"---\ntitle: \"How to: Use Hit Testing with a Region | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"hit tests, using regions\"\n  - \"regions, hit testing\"\nms.assetid: 3a4c07cb-a40a-4d14-ad35-008f531910a8\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Use Hit Testing with a Region\nThe purpose of hit testing is to determine whether the cursor is over a given object, such as an icon or a button.  \n  \n## Example  \n The following example creates a plus-shaped region by forming the union of two rectangular regions. Assume that the variable `point` holds the location of the most recent click. The code checks to see whether `point` is in the plus-shaped region. If the point is in the region (a hit), the region is filled with an opaque red brush. Otherwise, the region is filled with a semitransparent red brush.  \n  \n [!code-csharp[System.Drawing.MiscLegacyTopics#31](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscLegacyTopics/CS/Class1.cs#31)]\n [!code-vb[System.Drawing.MiscLegacyTopics#31](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscLegacyTopics/VB/Class1.vb#31)]  \n  \n## Compiling the Code  \n The preceding example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> `e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.  \n  \n## See Also  \n <xref:System.Drawing.Region>   \n [Regions in GDI+](../../../../docs/framework/winforms/advanced/regions-in-gdi.md)   \n [How to: Use Clipping with a Region](../../../../docs/framework/winforms/advanced/how-to-use-clipping-with-a-region.md)","nodes":[{"pos":[4,477],"embed":true,"restype":"x-metadata","content":"title: \"How to: Use Hit Testing with a Region | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"hit tests, using regions\"\n  - \"regions, hit testing\"\nms.assetid: 3a4c07cb-a40a-4d14-ad35-008f531910a8\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Use Hit Testing with a Region | Microsoft Docs","nodes":[{"pos":[0,54],"content":"How to: Use Hit Testing with a Region | Microsoft Docs","nodes":[{"content":"How to: Use Hit Testing with a Region | Microsoft Docs","pos":[0,54]}]}],"path":["title"]}],"yml":true},{"pos":[484,521],"content":"How to: Use Hit Testing with a Region","linkify":"How to: Use Hit Testing with a Region","nodes":[{"content":"How to: Use Hit Testing with a Region","pos":[0,37]}]},{"content":"The purpose of hit testing is to determine whether the cursor is over a given object, such as an icon or a button.","pos":[522,636]},{"pos":[645,652],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example creates a plus-shaped region by forming the union of two rectangular regions.","pos":[656,755]},{"content":"Assume that the variable <ph id=\"ph1\">`point`</ph> holds the location of the most recent click.","pos":[756,833],"source":" Assume that the variable `point` holds the location of the most recent click."},{"content":"The code checks to see whether <ph id=\"ph1\">`point`</ph> is in the plus-shaped region.","pos":[834,902],"source":" The code checks to see whether `point` is in the plus-shaped region."},{"content":"If the point is in the region (a hit), the region is filled with an opaque red brush.","pos":[903,988]},{"content":"Otherwise, the region is filled with a semitransparent red brush.","pos":[989,1054]},{"pos":[1385,1403],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[1407,1603],"content":"The preceding example is designed for use with Windows Forms, and it requires <ph id=\"ph1\">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id=\"ph2\">`e`</ph>, which is a parameter of <ph id=\"ph3\">&lt;xref:System.Windows.Forms.PaintEventHandler&gt;</ph>.","source":"The preceding example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> `e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>."},{"pos":[1612,1620],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Drawing.Region&gt;</ph>","pos":[1624,1652],"source":"<xref:System.Drawing.Region> "},{"content":"<bpt id=\"p1\">[</bpt>Regions in GDI+<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/regions-in-gdi.md)</ept><ph id=\"ph1\"> </ph>","pos":[1657,1739],"source":"[Regions in GDI+](../../../../docs/framework/winforms/advanced/regions-in-gdi.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Use Clipping with a Region<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/how-to-use-clipping-with-a-region.md)</ept>","pos":[1743,1862],"source":"[How to: Use Clipping with a Region](../../../../docs/framework/winforms/advanced/how-to-use-clipping-with-a-region.md)"}]}