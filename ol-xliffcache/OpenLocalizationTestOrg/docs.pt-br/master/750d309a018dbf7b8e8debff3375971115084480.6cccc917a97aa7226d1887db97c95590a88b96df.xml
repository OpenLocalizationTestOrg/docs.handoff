{"content":"---\ntitle: \"Member '<membername1>' conflicts with a member implicitly declared for member '<membername2>' in the base type '<basetypename>' and so should not be declared 'Overloads'\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc40023\"\n  - \"bc40023\"\nhelpviewer_keywords: \n  - \"BC40023\"\nms.assetid: 82bb29a6-8d49-47a4-8c19-b21e97dfc7de\n---\n# Member '\\<membername1>' conflicts with a member implicitly declared for member '\\<membername2>' in the base type '\\<basetypename>' and so should not be declared 'Overloads'\nA property or procedure in a derived class uses the same name as an implicit member of the base class and specifies the [Overloads](../../visual-basic/language-reference/modifiers/overloads.md) keyword.  \n  \n Overloading is used to define multiple versions of a property or procedure all in the same class. You cannot define an additional version of a base class member unless that base class member already specifies `Overloads`. Because implicit members do not specify `Overloads`, the compiler assumes that this property or procedure [Shadows](../../visual-basic/language-reference/modifiers/shadows.md) the implicit base class member.  \n  \n The Visual Basic compiler creates implicit members corresponding to certain programming elements you declare. The following table summarizes these implicit, or *synthetic*, members.  \n  \n|Declared element|Implicitly created members|  \n|----------------------|--------------------------------|  \n|Enumeration|`value__` member|  \n|Event|`add_<eventname>` procedure<br /><br /> `remove_<eventname>` procedure<br /><br /> `<eventname>Event` field<br /><br /> `<eventname>EventHandler` delegate|  \n|Property|`get_<propertyname>` procedure<br /><br /> `set_<propertyname>` procedure|  \n|`My.Form` member, `My.WebService` member, or member of a class marked with the <xref:Microsoft.VisualBasic.MyGroupCollectionAttribute> attribute|`m_<variablename>` `Static` variable<br /><br /> `<variablename>` property<br /><br /> `get_<variablename>` procedure<br /><br /> `set_<variablename>` procedure|  \n|`WithEvents` variable|`_<variablename>` variable<br /><br /> `<variablename>` property<br /><br /> `get_<variablename>` procedure<br /><br /> `set_<variablename>` procedure|  \n  \n Because of the risk of name conflicts, you should avoid naming any declared programming element using the same form as any one of these implicit members. For example, you should avoid any element name that starts with `get_` or `set_`.  \n  \n By default, this message is a warning. For more information about hiding warnings and treating warnings as errors, see [Configuring Warnings in Visual Basic](/visualstudio/ide/configuring-warnings-in-visual-basic).  \n  \n **Error ID:** BC40023  \n  \n## To correct this error  \n  \n-   Change the name of the property or procedure to avoid conflicts with the names listed in the previous table.  \n  \n## See also\n\n- [Declared Element Names](../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)\n","nodes":[{"pos":[4,330],"embed":true,"restype":"x-metadata","content":"title: \"Member '<membername1>' conflicts with a member implicitly declared for member '<membername2>' in the base type '<basetypename>' and so should not be declared 'Overloads'\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc40023\"\n  - \"bc40023\"\nhelpviewer_keywords: \n  - \"BC40023\"\nms.assetid: 82bb29a6-8d49-47a4-8c19-b21e97dfc7de","nodes":[{"content":"Member '<membername1>' conflicts with a member implicitly declared for member '<membername2>' in the base type '<basetypename>' and so should not be declared 'Overloads'","nodes":[{"pos":[0,169],"content":"Member '<ph id=\"ph1\">&lt;membername1&gt;</ph>' conflicts with a member implicitly declared for member '<ph id=\"ph2\">&lt;membername2&gt;</ph>' in the base type '<ph id=\"ph3\">&lt;basetypename&gt;</ph>' and so should not be declared 'Overloads'","source":"Member '<membername1>' conflicts with a member implicitly declared for member '<membername2>' in the base type '<basetypename>' and so should not be declared 'Overloads'"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[337,509],"content":"Member '\\<membername1>' conflicts with a member implicitly declared for member '\\<membername2>' in the base type '\\<basetypename>' and so should not be declared 'Overloads'","linkify":"Member '\\<membername1>' conflicts with a member implicitly declared for member '\\<membername2>' in the base type '\\<basetypename>' and so should not be declared 'Overloads'","nodes":[{"content":"Member '<ph id=\"ph1\">\\&lt;</ph>membername1&gt;' conflicts with a member implicitly declared for member '<ph id=\"ph2\">\\&lt;</ph>membername2&gt;' in the base type '<ph id=\"ph3\">\\&lt;</ph>basetypename&gt;' and so should not be declared 'Overloads'","pos":[0,172],"source":"Member '\\<membername1>' conflicts with a member implicitly declared for member '\\<membername2>' in the base type '\\<basetypename>' and so should not be declared 'Overloads'"}]},{"pos":[510,712],"content":"A property or procedure in a derived class uses the same name as an implicit member of the base class and specifies the <bpt id=\"p1\">[</bpt>Overloads<ept id=\"p1\">](../../visual-basic/language-reference/modifiers/overloads.md)</ept> keyword.","source":"A property or procedure in a derived class uses the same name as an implicit member of the base class and specifies the [Overloads](../../visual-basic/language-reference/modifiers/overloads.md) keyword."},{"content":"Overloading is used to define multiple versions of a property or procedure all in the same class.","pos":[719,816]},{"content":"You cannot define an additional version of a base class member unless that base class member already specifies <ph id=\"ph1\">`Overloads`</ph>.","pos":[817,940],"source":" You cannot define an additional version of a base class member unless that base class member already specifies `Overloads`."},{"content":"Because implicit members do not specify <ph id=\"ph1\">`Overloads`</ph>, the compiler assumes that this property or procedure <bpt id=\"p1\">[</bpt>Shadows<ept id=\"p1\">](../../visual-basic/language-reference/modifiers/shadows.md)</ept> the implicit base class member.","pos":[941,1148],"source":" Because implicit members do not specify `Overloads`, the compiler assumes that this property or procedure [Shadows](../../visual-basic/language-reference/modifiers/shadows.md) the implicit base class member."},{"content":"The Visual Basic compiler creates implicit members corresponding to certain programming elements you declare.","pos":[1155,1264]},{"content":"The following table summarizes these implicit, or <bpt id=\"p1\">*</bpt>synthetic<ept id=\"p1\">*</ept>, members.","pos":[1265,1336],"source":" The following table summarizes these implicit, or *synthetic*, members."},{"content":"Declared element","pos":[1343,1359]},{"content":"Implicitly created members","pos":[1360,1386]},{"content":"Enumeration","pos":[1451,1462]},{"pos":[1463,1479],"content":"<ph id=\"ph1\">`value__`</ph> member","source":"`value__` member"},{"content":"Event","pos":[1484,1489]},{"content":"<ph id=\"ph1\">`add_&lt;eventname&gt;`</ph> procedure","pos":[1490,1517],"source":"`add_<eventname>` procedure"},{"content":"<ph id=\"ph1\">`remove_&lt;eventname&gt;`</ph> procedure","pos":[1530,1560],"source":"`remove_<eventname>` procedure"},{"content":"<ph id=\"ph1\">`&lt;eventname&gt;Event`</ph> field","pos":[1573,1597],"source":"`<eventname>Event` field"},{"content":"<ph id=\"ph1\">`&lt;eventname&gt;EventHandler`</ph> delegate","pos":[1610,1644],"source":"`<eventname>EventHandler` delegate"},{"content":"Property","pos":[1649,1657]},{"content":"<ph id=\"ph1\">`get_&lt;propertyname&gt;`</ph> procedure","pos":[1658,1688],"source":"`get_<propertyname>` procedure"},{"content":"<ph id=\"ph1\">`set_&lt;propertyname&gt;`</ph> procedure","pos":[1701,1731],"source":"`set_<propertyname>` procedure"},{"pos":[1736,1880],"content":"<ph id=\"ph1\">`My.Form`</ph> member, <ph id=\"ph2\">`My.WebService`</ph> member, or member of a class marked with the <ph id=\"ph3\">&lt;xref:Microsoft.VisualBasic.MyGroupCollectionAttribute&gt;</ph> attribute","source":"`My.Form` member, `My.WebService` member, or member of a class marked with the <xref:Microsoft.VisualBasic.MyGroupCollectionAttribute> attribute"},{"content":"<ph id=\"ph1\">`m_&lt;variablename&gt;`</ph> <ph id=\"ph2\">`Static`</ph> variable","pos":[1881,1917],"source":"`m_<variablename>` `Static` variable"},{"content":"<ph id=\"ph1\">`&lt;variablename&gt;`</ph> property","pos":[1930,1955],"source":"`<variablename>` property"},{"content":"<ph id=\"ph1\">`get_&lt;variablename&gt;`</ph> procedure","pos":[1968,1998],"source":"`get_<variablename>` procedure"},{"content":"<ph id=\"ph1\">`set_&lt;variablename&gt;`</ph> procedure","pos":[2011,2041],"source":"`set_<variablename>` procedure"},{"pos":[2046,2067],"content":"<ph id=\"ph1\">`WithEvents`</ph> variable","source":"`WithEvents` variable"},{"content":"<ph id=\"ph1\">`_&lt;variablename&gt;`</ph> variable","pos":[2068,2094],"source":"`_<variablename>` variable"},{"content":"<ph id=\"ph1\">`&lt;variablename&gt;`</ph> property","pos":[2107,2132],"source":"`<variablename>` property"},{"content":"<ph id=\"ph1\">`get_&lt;variablename&gt;`</ph> procedure","pos":[2145,2175],"source":"`get_<variablename>` procedure"},{"content":"<ph id=\"ph1\">`set_&lt;variablename&gt;`</ph> procedure","pos":[2188,2218],"source":"`set_<variablename>` procedure"},{"content":"Because of the risk of name conflicts, you should avoid naming any declared programming element using the same form as any one of these implicit members.","pos":[2226,2379]},{"content":"For example, you should avoid any element name that starts with <ph id=\"ph1\">`get_`</ph> or <ph id=\"ph2\">`set_`</ph>.","pos":[2380,2461],"source":" For example, you should avoid any element name that starts with `get_` or `set_`."},{"content":"By default, this message is a warning.","pos":[2468,2506]},{"content":"For more information about hiding warnings and treating warnings as errors, see <bpt id=\"p1\">[</bpt>Configuring Warnings in Visual Basic<ept id=\"p1\">](/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.","pos":[2507,2682],"source":" For more information about hiding warnings and treating warnings as errors, see [Configuring Warnings in Visual Basic](/visualstudio/ide/configuring-warnings-in-visual-basic)."},{"pos":[2689,2710],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC40023","source":"**Error ID:** BC40023"},{"pos":[2719,2740],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Change the name of the property or procedure to avoid conflicts with the names listed in the previous table.","pos":[2750,2858]},{"pos":[2867,2875],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2879,3003],"content":"<bpt id=\"p1\">[</bpt>Declared Element Names<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>","source":"[Declared Element Names](../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)"}]}