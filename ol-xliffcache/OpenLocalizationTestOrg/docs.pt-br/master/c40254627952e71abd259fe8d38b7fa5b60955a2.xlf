<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-execute-a-query-that-returns-structuraltype-results.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c40254627952e71abd259fe8d38b7fa5b60955a2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\how-to-execute-a-query-that-returns-structuraltype-results.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc333fa66918c937b6e04a51460045ab109417fb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fc038630e658e0116078f351295895aaf78f846</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Execute a Query that Returns StructuralType Results</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Execute a Query that Returns StructuralType Results</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to execute a command against a conceptual model by using an <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> object, and how to retrieve the <ph id="ph2">&lt;xref:System.Data.Metadata.Edm.StructuralType&gt;</ph> results by using an <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityDataReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntityType&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Metadata.Edm.RowType&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.ComplexType&gt;</ph> classes derive from the <ph id="ph4">&lt;xref:System.Data.Metadata.Edm.StructuralType&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To run the code in this example</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Add the <bpt id="p1">[</bpt>AdventureWorks Sales Model<ept id="p1">](https://github.com/Microsoft/sql-server-samples/releases/tag/adventureworks)</ept> to your project and configure your project to use the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../includes/adonet-ef-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Use the Entity Data Model Wizard<ept id="p1">](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738677(v=vs.100))</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the code page for your application, add the following <ph id="ph1">`using`</ph> statements (<ph id="ph2">`Imports`</ph> in Visual Basic):</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This example executes a query that returns <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntityType&gt;</ph> results.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you pass the following query as an argument to the <ph id="ph1">`ExecuteStructuralTypeQuery`</ph> function, the function displays details about the <ph id="ph2">`Products`</ph>:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you pass a parameterized query, like the following, add the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityParameter&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityCommand.Parameters%2A&gt;</ph> property on the <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Entity SQL Reference<ept id="p1">](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>EntityClient Provider for the Entity Framework<ept id="p1">](../../../../../docs/framework/data/adonet/ef/entityclient-provider-for-the-entity-framework.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>