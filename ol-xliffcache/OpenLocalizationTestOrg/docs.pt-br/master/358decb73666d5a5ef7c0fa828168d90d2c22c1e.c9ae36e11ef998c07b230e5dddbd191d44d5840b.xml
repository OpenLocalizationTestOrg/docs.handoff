{"content":"---\ntitle: \"How to: increment and decrement pointers - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"pointers [C#], increment and decrement\"\n  - \"pointer expressions [C#], increment and decrement\"\nms.assetid: 1b8b9281-44ee-485a-9045-3db38a4b4b89\n---\n# How to: increment and decrement pointers (C# Programming Guide)\n\nUse the increment and the decrement operators, `++` and `--`, to change the pointer location by `sizeof(pointer-type)` for a pointer of the type `pointer-type*`. The increment and decrement expressions take the following form:  \n  \n```csharp\n++p;  \np++;  \n--p;  \np--;  \n```  \n  \n The increment and decrement operators can be applied to pointers of any type except the type `void*`.  \n  \n The effect of applying the increment operator to a pointer of the type `pointer-type*` is to add `sizeof(pointer-type)` to the address that is contained in the pointer variable.  \n  \n The effect of applying the decrement operator to a pointer of the type `pointer-type*` is to subtract `sizeof(pointer-type)` from the address that is contained in the pointer variable.  \n  \n No exceptions are generated when the operation overflows the domain of the pointer, and the result depends on the implementation.  \n  \n## Example  \n In this example, you step through an array by incrementing the pointer by the size of `int`. With each step, you display the address and the content of the array element.  \n  \n [!code-csharp[csProgGuidePointers#3](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuidePointers/CS/Pointers2.cs#3)]  \n  \n [!code-csharp[csProgGuidePointers#13](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuidePointers/CS/Pointers.cs#13)]  \n  \n**Value:0 @ Address:12860272**\n**Value:1 @ Address:12860276**\n**Value:2 @ Address:12860280**\n**Value:3 @ Address:12860284**\n**Value:4 @ Address:12860288**\n\n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Pointer Expressions](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md)\n- [C# Operators](../../../csharp/language-reference/operators/index.md)\n- [Manipulating Pointers](../../../csharp/programming-guide/unsafe-code-pointers/manipulating-pointers.md)\n- [Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)\n- [Types](../../../csharp/language-reference/keywords/types.md)\n- [unsafe](../../../csharp/language-reference/keywords/unsafe.md)\n- [fixed Statement](../../../csharp/language-reference/keywords/fixed-statement.md)\n- [stackalloc](../../../csharp/language-reference/keywords/stackalloc.md)\n- [sizeof](../../../csharp/language-reference/keywords/sizeof.md)\n","nodes":[{"pos":[4,288],"embed":true,"restype":"x-metadata","content":"title: \"How to: increment and decrement pointers - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"pointers [C#], increment and decrement\"\n  - \"pointer expressions [C#], increment and decrement\"\nms.assetid: 1b8b9281-44ee-485a-9045-3db38a4b4b89","nodes":[{"content":"How to: increment and decrement pointers - C# Programming Guide","nodes":[{"pos":[0,63],"content":"How to: increment and decrement pointers - C# Programming Guide","nodes":[{"content":"How to: increment and decrement pointers - C# Programming Guide","pos":[0,63]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[295,358],"content":"How to: increment and decrement pointers (C# Programming Guide)","linkify":"How to: increment and decrement pointers (C# Programming Guide)","nodes":[{"content":"How to: increment and decrement pointers (C# Programming Guide)","pos":[0,63]}]},{"content":"Use the increment and the decrement operators, <ph id=\"ph1\">`++`</ph> and <ph id=\"ph2\">`--`</ph>, to change the pointer location by <ph id=\"ph3\">`sizeof(pointer-type)`</ph> for a pointer of the type <ph id=\"ph4\">`pointer-type*`</ph>.","pos":[360,521],"source":"Use the increment and the decrement operators, `++` and `--`, to change the pointer location by `sizeof(pointer-type)` for a pointer of the type `pointer-type*`."},{"content":"The increment and decrement expressions take the following form:","pos":[522,586]},{"pos":[640,741],"content":"The increment and decrement operators can be applied to pointers of any type except the type <ph id=\"ph1\">`void*`</ph>.","source":"The increment and decrement operators can be applied to pointers of any type except the type `void*`."},{"pos":[748,925],"content":"The effect of applying the increment operator to a pointer of the type <ph id=\"ph1\">`pointer-type*`</ph> is to add <ph id=\"ph2\">`sizeof(pointer-type)`</ph> to the address that is contained in the pointer variable.","source":"The effect of applying the increment operator to a pointer of the type `pointer-type*` is to add `sizeof(pointer-type)` to the address that is contained in the pointer variable."},{"pos":[932,1116],"content":"The effect of applying the decrement operator to a pointer of the type <ph id=\"ph1\">`pointer-type*`</ph> is to subtract <ph id=\"ph2\">`sizeof(pointer-type)`</ph> from the address that is contained in the pointer variable.","source":"The effect of applying the decrement operator to a pointer of the type `pointer-type*` is to subtract `sizeof(pointer-type)` from the address that is contained in the pointer variable."},{"content":"No exceptions are generated when the operation overflows the domain of the pointer, and the result depends on the implementation.","pos":[1123,1252]},{"pos":[1261,1268],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In this example, you step through an array by incrementing the pointer by the size of <ph id=\"ph1\">`int`</ph>.","pos":[1272,1364],"source":"In this example, you step through an array by incrementing the pointer by the size of `int`."},{"content":"With each step, you display the address and the content of the array element.","pos":[1365,1442]},{"pos":[1709,1863],"content":"<bpt id=\"p1\">**</bpt>Value:0 @ Address:12860272<ept id=\"p1\">**</ept><ph id=\"ph1\">\n</ph><bpt id=\"p2\">**</bpt>Value:1 @ Address:12860276<ept id=\"p2\">**</ept><ph id=\"ph2\">\n</ph><bpt id=\"p3\">**</bpt>Value:2 @ Address:12860280<ept id=\"p3\">**</ept><ph id=\"ph3\">\n</ph><bpt id=\"p4\">**</bpt>Value:3 @ Address:12860284<ept id=\"p4\">**</ept><ph id=\"ph4\">\n</ph><bpt id=\"p5\">**</bpt>Value:4 @ Address:12860288<ept id=\"p5\">**</ept>","source":"**Value:0 @ Address:12860272**\n**Value:1 @ Address:12860276**\n**Value:2 @ Address:12860280**\n**Value:3 @ Address:12860284**\n**Value:4 @ Address:12860288**"},{"pos":[1868,1876],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1880,1946],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[1949,2049],"content":"<bpt id=\"p1\">[</bpt>Pointer Expressions<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md)</ept>","source":"[Pointer Expressions](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md)"},{"pos":[2052,2121],"content":"<bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](../../../csharp/language-reference/operators/index.md)</ept>","source":"[C# Operators](../../../csharp/language-reference/operators/index.md)"},{"pos":[2124,2228],"content":"<bpt id=\"p1\">[</bpt>Manipulating Pointers<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/manipulating-pointers.md)</ept>","source":"[Manipulating Pointers](../../../csharp/programming-guide/unsafe-code-pointers/manipulating-pointers.md)"},{"pos":[2231,2319],"content":"<bpt id=\"p1\">[</bpt>Pointer types<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)</ept>","source":"[Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)"},{"pos":[2322,2383],"content":"<bpt id=\"p1\">[</bpt>Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/types.md)</ept>","source":"[Types](../../../csharp/language-reference/keywords/types.md)"},{"pos":[2386,2449],"content":"<bpt id=\"p1\">[</bpt>unsafe<ept id=\"p1\">](../../../csharp/language-reference/keywords/unsafe.md)</ept>","source":"[unsafe](../../../csharp/language-reference/keywords/unsafe.md)"},{"pos":[2452,2533],"content":"<bpt id=\"p1\">[</bpt>fixed Statement<ept id=\"p1\">](../../../csharp/language-reference/keywords/fixed-statement.md)</ept>","source":"[fixed Statement](../../../csharp/language-reference/keywords/fixed-statement.md)"},{"pos":[2536,2607],"content":"<bpt id=\"p1\">[</bpt>stackalloc<ept id=\"p1\">](../../../csharp/language-reference/keywords/stackalloc.md)</ept>","source":"[stackalloc](../../../csharp/language-reference/keywords/stackalloc.md)"},{"pos":[2610,2673],"content":"<bpt id=\"p1\">[</bpt>sizeof<ept id=\"p1\">](../../../csharp/language-reference/keywords/sizeof.md)</ept>","source":"[sizeof](../../../csharp/language-reference/keywords/sizeof.md)"}]}