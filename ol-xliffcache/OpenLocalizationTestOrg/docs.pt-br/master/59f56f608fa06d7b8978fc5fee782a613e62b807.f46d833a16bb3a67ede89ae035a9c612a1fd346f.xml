{"content":"---\ntitle: \"How to: Make a UIElement Transparent or Semi-Transparent | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"UIElements, transparency\"\n  - \"opacity, of UIElements\"\n  - \"transparency of UIElements\"\n  - \"UIElements, opacity\"\nms.assetid: a49fc8d6-7b32-4f28-9122-39b632a19b4b\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Make a UIElement Transparent or Semi-Transparent\nThis example shows how to make a <xref:System.Windows.UIElement> transparent or semi-transparent. To make an element transparent or semi-transparent, you set its <xref:System.Windows.UIElement.Opacity%2A> property. A value of `0.0` makes the element completely transparent, while a value of `1.0` makes the element completely opaque. A value of `0.5` makes the element 50% opaque, and so on. An element's <xref:System.Windows.UIElement.Opacity%2A> is set to `1.0` by default.  \n  \n## Example  \n The following example sets the <xref:System.Windows.UIElement.Opacity%2A> of a button to `0.25`, making it and its contents (in this case, the button's text) 25% opaque.  \n  \n [!code-xml[brushsamples_snip#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_snip/CS/OpacityExample.xaml#2)]  \n  \n [!code-csharp[brushsamples_procedural_snip#2](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_procedural_snip/CSharp/OpacityExample.cs#2)]  \n  \n If an element's contents have their own <xref:System.Windows.UIElement.Opacity%2A> settings, those values are multiplied against the containing elements <xref:System.Windows.UIElement.Opacity%2A>.  \n  \n The following example sets a button's <xref:System.Windows.UIElement.Opacity%2A> to `0.25`, and the <xref:System.Windows.UIElement.Opacity%2A> of an <xref:System.Windows.Controls.Image> control contained with in the button to `0.5`. As a result, the image appears 12.5% opaque: 0.25 * 0.5 = 0.125.  \n  \n [!code-xml[brushsamples_snip#3](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_snip/CS/OpacityExample.xaml#3)]  \n  \n [!code-csharp[brushsamples_procedural_snip#3](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_procedural_snip/CSharp/OpacityExample.cs#3)]  \n  \n Another way to control the opacity of an element is to set the opacity of the <xref:System.Windows.Media.Brush> that paints the element. This approach enables you to selectively alter the opacity of portions of an element, and provides performance benefits over using the element's <xref:System.Windows.UIElement.Opacity%2A> property. The following example sets the <xref:System.Windows.Media.Brush.Opacity%2A> of a <xref:System.Windows.Media.SolidColorBrush> used to paint the button's <xref:System.Windows.Controls.Control.Background%2A> is set to `0.25`. As a result, the brush's background is 25% opaque, but its contents (the button's text) remain 100% opaque.  \n  \n [!code-xml[brushsamples_snip#4](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_snip/CS/OpacityExample.xaml#4)]  \n  \n [!code-csharp[brushsamples_procedural_snip#4](../../../../samples/snippets/csharp/VS_Snippets_Wpf/brushsamples_procedural_snip/CSharp/OpacityExample.cs#4)]  \n  \n You may also control the opacity of individual colors within a brush. For more information about colors and brushes, see [Painting with Solid Colors and Gradients Overview](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md). For an example showing how to animate an element's opacity, see [Animate the Opacity of an Element or Brush](../../../../docs/framework/wpf/graphics-multimedia/how-to-animate-the-opacity-of-an-element-or-brush.md).","nodes":[{"pos":[4,527],"embed":true,"restype":"x-metadata","content":"title: \"How to: Make a UIElement Transparent or Semi-Transparent | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"UIElements, transparency\"\n  - \"opacity, of UIElements\"\n  - \"transparency of UIElements\"\n  - \"UIElements, opacity\"\nms.assetid: a49fc8d6-7b32-4f28-9122-39b632a19b4b\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Make a UIElement Transparent or Semi-Transparent | Microsoft Docs","nodes":[{"pos":[0,73],"content":"How to: Make a UIElement Transparent or Semi-Transparent | Microsoft Docs","nodes":[{"content":"How to: Make a UIElement Transparent or Semi-Transparent | Microsoft Docs","pos":[0,73]}]}],"path":["title"]}],"yml":true},{"pos":[534,590],"content":"How to: Make a UIElement Transparent or Semi-Transparent","linkify":"How to: Make a UIElement Transparent or Semi-Transparent","nodes":[{"content":"How to: Make a UIElement Transparent or Semi-Transparent","pos":[0,56]}]},{"content":"This example shows how to make a <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> transparent or semi-transparent.","pos":[591,688],"source":"This example shows how to make a <xref:System.Windows.UIElement> transparent or semi-transparent."},{"content":"To make an element transparent or semi-transparent, you set its <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> property.","pos":[689,805],"source":" To make an element transparent or semi-transparent, you set its <xref:System.Windows.UIElement.Opacity%2A> property."},{"content":"A value of <ph id=\"ph1\">`0.0`</ph> makes the element completely transparent, while a value of <ph id=\"ph2\">`1.0`</ph> makes the element completely opaque.","pos":[806,924],"source":" A value of `0.0` makes the element completely transparent, while a value of `1.0` makes the element completely opaque."},{"content":"A value of <ph id=\"ph1\">`0.5`</ph> makes the element 50% opaque, and so on.","pos":[925,982],"source":" A value of `0.5` makes the element 50% opaque, and so on."},{"content":"An element's <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> is set to <ph id=\"ph2\">`1.0`</ph> by default.","pos":[983,1066],"source":" An element's <xref:System.Windows.UIElement.Opacity%2A> is set to `1.0` by default."},{"pos":[1075,1082],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1086,1255],"content":"The following example sets the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> of a button to <ph id=\"ph2\">`0.25`</ph>, making it and its contents (in this case, the button's text) 25% opaque.","source":"The following example sets the <xref:System.Windows.UIElement.Opacity%2A> of a button to `0.25`, making it and its contents (in this case, the button's text) 25% opaque."},{"content":"If an element's contents have their own <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> settings, those values are multiplied against the containing elements <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph>.","pos":[1559,1755],"source":"If an element's contents have their own <xref:System.Windows.UIElement.Opacity%2A> settings, those values are multiplied against the containing elements <xref:System.Windows.UIElement.Opacity%2A>."},{"content":"The following example sets a button's <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> to <ph id=\"ph2\">`0.25`</ph>, and the <ph id=\"ph3\">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> of an <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Image&gt;</ph> control contained with in the button to <ph id=\"ph5\">`0.5`</ph>.","pos":[1762,1994],"source":"The following example sets a button's <xref:System.Windows.UIElement.Opacity%2A> to `0.25`, and the <xref:System.Windows.UIElement.Opacity%2A> of an <xref:System.Windows.Controls.Image> control contained with in the button to `0.5`."},{"content":"As a result, the image appears 12.5% opaque: 0.25 * 0.5 = 0.125.","pos":[1995,2059]},{"content":"Another way to control the opacity of an element is to set the opacity of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush&gt;</ph> that paints the element.","pos":[2363,2499],"source":"Another way to control the opacity of an element is to set the opacity of the <xref:System.Windows.Media.Brush> that paints the element."},{"content":"This approach enables you to selectively alter the opacity of portions of an element, and provides performance benefits over using the element's <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> property.","pos":[2500,2697],"source":" This approach enables you to selectively alter the opacity of portions of an element, and provides performance benefits over using the element's <xref:System.Windows.UIElement.Opacity%2A> property."},{"content":"The following example sets the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Brush.Opacity%2A&gt;</ph> of a <ph id=\"ph2\">&lt;xref:System.Windows.Media.SolidColorBrush&gt;</ph> used to paint the button's <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Control.Background%2A&gt;</ph> is set to <ph id=\"ph4\">`0.25`</ph>.","pos":[2698,2920],"source":" The following example sets the <xref:System.Windows.Media.Brush.Opacity%2A> of a <xref:System.Windows.Media.SolidColorBrush> used to paint the button's <xref:System.Windows.Controls.Control.Background%2A> is set to `0.25`."},{"content":"As a result, the brush's background is 25% opaque, but its contents (the button's text) remain 100% opaque.","pos":[2921,3028]},{"content":"You may also control the opacity of individual colors within a brush.","pos":[3332,3401]},{"content":"For more information about colors and brushes, see <bpt id=\"p1\">[</bpt>Painting with Solid Colors and Gradients Overview<ept id=\"p1\">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md)</ept>.","pos":[3402,3610],"source":" For more information about colors and brushes, see [Painting with Solid Colors and Gradients Overview](../../../../docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md)."},{"content":"For an example showing how to animate an element's opacity, see <bpt id=\"p1\">[</bpt>Animate the Opacity of an Element or Brush<ept id=\"p1\">](../../../../docs/framework/wpf/graphics-multimedia/how-to-animate-the-opacity-of-an-element-or-brush.md)</ept>.","pos":[3611,3825],"source":" For an example showing how to animate an element's opacity, see [Animate the Opacity of an Element or Brush](../../../../docs/framework/wpf/graphics-multimedia/how-to-animate-the-opacity-of-an-element-or-brush.md)."}]}