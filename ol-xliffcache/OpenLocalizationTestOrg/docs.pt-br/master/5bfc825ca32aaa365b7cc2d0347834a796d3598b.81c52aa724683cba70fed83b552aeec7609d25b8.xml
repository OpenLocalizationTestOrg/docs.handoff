{"content":"---\ntitle: \"How to: Read and Write an Encoded Document (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 159d868f-5ac8-40f2-95ca-07dd925f35c6\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# How to: Read and Write an Encoded Document (Visual Basic)\nTo create an encoded XML document, you add an <xref:System.Xml.Linq.XDeclaration> to the XML tree, setting the encoding to the desired code page name.  \n  \n Any value returned by <xref:System.Text.Encoding.WebName%2A> is a valid value.  \n  \n If you read an encoded document, the <xref:System.Xml.Linq.XDeclaration.Encoding%2A> property will be set to the code page name.  \n  \n If you set <xref:System.Xml.Linq.XDeclaration.Encoding%2A> to a valid code page name, [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] will serialize with the specified encoding.  \n  \n## Example  \n The following example creates two documents, one with utf-8 encoding, and one with utf-16 encoding. It then loads the documents and prints the encoding to the console.  \n  \n```vb  \nConsole.WriteLine(\"Creating a document with utf-8 encoding\")  \nDim encodedDoc8 As XDocument = _  \n        <?xml version='1.0' encoding='utf-8' standalone='yes'?>  \n        <Root>Content</Root>   \n  \nencodedDoc8.Save(\"EncodedUtf8.xml\")  \nConsole.WriteLine(\"Encoding is:{0}\", encodedDoc8.Declaration.Encoding)  \nConsole.WriteLine()  \n  \nConsole.WriteLine(\"Creating a document with utf-16 encoding\")  \nDim encodedDoc16 As XDocument = _  \n        <?xml version='1.0' encoding='utf-16' standalone='yes'?>  \n        <Root>Content</Root>  \n  \nencodedDoc16.Save(\"EncodedUtf16.xml\")  \nConsole.WriteLine(\"Encoding is:{0}\", encodedDoc16.Declaration.Encoding)  \nConsole.WriteLine()  \n  \nDim newDoc8 As XDocument = XDocument.Load(\"EncodedUtf8.xml\")  \nConsole.WriteLine(\"Encoded document:\")  \nConsole.WriteLine(File.ReadAllText(\"EncodedUtf8.xml\"))  \nConsole.WriteLine()  \nConsole.WriteLine(\"Encoding of loaded document is:{0}\", newDoc8.Declaration.Encoding)  \nConsole.WriteLine()  \n  \nDim newDoc16 As XDocument = XDocument.Load(\"EncodedUtf16.xml\")  \nConsole.WriteLine(\"Encoded document:\")  \nConsole.WriteLine(File.ReadAllText(\"EncodedUtf16.xml\"))  \nConsole.WriteLine()  \nConsole.WriteLine(\"Encoding of loaded document is:{0}\", newDoc16.Declaration.Encoding)  \n```  \n  \n This example produces the following output:  \n  \n```  \nCreating a document with utf-8 encoding  \nEncoding is:utf-8  \n  \nCreating a document with utf-16 encoding  \nEncoding is:utf-16  \n  \nEncoded document:  \n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>  \n<Root>Content</Root>  \n  \nEncoding of loaded document is:utf-8  \n  \nEncoded document:  \n<?xml version=\"1.0\" encoding=\"utf-16\" standalone=\"yes\"?>  \n<Root>Content</Root>  \n  \nEncoding of loaded document is:utf-16  \n```  \n  \n## See Also  \n <xref:System.Xml.Linq.XDeclaration.Encoding%2A?displayProperty=fullName>   \n [Advanced LINQ to XML Programming (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)","nodes":[{"pos":[12,86],"content":"How to: Read and Write an Encoded Document (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Read and Write an Encoded Document (Visual Basic) | Microsoft Docs","pos":[0,74]}]},{"pos":[467,524],"content":"How to: Read and Write an Encoded Document (Visual Basic)","linkify":"How to: Read and Write an Encoded Document (Visual Basic)","nodes":[{"content":"How to: Read and Write an Encoded Document (Visual Basic)","pos":[0,57]}]},{"content":"To create an encoded XML document, you add an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDeclaration&gt;</ph> to the XML tree, setting the encoding to the desired code page name.","pos":[525,675],"source":"To create an encoded XML document, you add an <xref:System.Xml.Linq.XDeclaration> to the XML tree, setting the encoding to the desired code page name."},{"content":"Any value returned by <ph id=\"ph1\">&lt;xref:System.Text.Encoding.WebName%2A&gt;</ph> is a valid value.","pos":[682,760],"source":"Any value returned by <xref:System.Text.Encoding.WebName%2A> is a valid value."},{"content":"If you read an encoded document, the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDeclaration.Encoding%2A&gt;</ph> property will be set to the code page name.","pos":[767,895],"source":"If you read an encoded document, the <xref:System.Xml.Linq.XDeclaration.Encoding%2A> property will be set to the code page name."},{"pos":[902,1134],"content":"If you set <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDeclaration.Encoding%2A&gt;</ph> to a valid code page name, <ph id=\"ph2\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> will serialize with the specified encoding.","source":"If you set <xref:System.Xml.Linq.XDeclaration.Encoding%2A> to a valid code page name, [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] will serialize with the specified encoding."},{"pos":[1143,1150],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example creates two documents, one with utf-8 encoding, and one with utf-16 encoding.","pos":[1154,1253]},{"content":"It then loads the documents and prints the encoding to the console.","pos":[1254,1321]},{"content":"This example produces the following output:","pos":[2591,2634]},{"pos":[3081,3089],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>Advanced LINQ to XML Programming (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)</ept>","pos":[3169,3313],"source":" [Advanced LINQ to XML Programming (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/advanced-linq-to-xml-programming.md)"}]}