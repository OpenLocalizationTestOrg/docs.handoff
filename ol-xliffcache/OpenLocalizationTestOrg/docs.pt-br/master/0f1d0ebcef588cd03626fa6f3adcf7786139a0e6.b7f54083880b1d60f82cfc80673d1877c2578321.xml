{"content":"---\ntitle: \"Type '<typename>' cannot inherit from a type nested within it\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc30908\"\n  - \"vbc30908\"\nhelpviewer_keywords: \n  - \"BC30908\"\nms.assetid: bca164b2-a4a9-4ed4-9f71-a9a5a42f181a\n---\n# Type '\\<typename>' cannot inherit from a type nested within it\nA class or interface definition includes an [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md) that specifies a type nested within it.  \n  \n Inheritance must be linear, not circular. A type cannot inherit from a type that inherits from it.  \n  \n A related restriction is that a type cannot inherit from a type that is not yet defined. Inheritance involves the ability to reuse members of the base class, which in turn requires that these members be defined. Therefore, Visual Basic cannot compile code such as the following example.  \n  \n```  \nPublic Class outerClass  \n    ' The following statement is INVALID because innerClass is not defined.  \n    Inherits innerClass  \n    Public Class innerClass  \n        Public Sub doSomething()  \n        End Sub  \n    End Class  \nEnd Class  \n```  \n  \n **Error ID:** BC30908  \n  \n## To correct this error  \n  \n-   If the inheriting type (the outer type in the nesting) must inherit from the inner type, move the inner type out of the outer type.  \n  \n-   If the inner type must be nested within the outer type, the outer type cannot inherit from it. Remove the [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md).  \n  \n## See also\n\n- [Inheritance basics (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)\n","nodes":[{"pos":[4,222],"embed":true,"restype":"x-metadata","content":"title: \"Type '<typename>' cannot inherit from a type nested within it\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc30908\"\n  - \"vbc30908\"\nhelpviewer_keywords: \n  - \"BC30908\"\nms.assetid: bca164b2-a4a9-4ed4-9f71-a9a5a42f181a","nodes":[{"content":"Type '<typename>' cannot inherit from a type nested within it","nodes":[{"pos":[0,61],"content":"Type '<ph id=\"ph1\">&lt;typename&gt;</ph>' cannot inherit from a type nested within it","source":"Type '<typename>' cannot inherit from a type nested within it"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[229,291],"content":"Type '\\<typename>' cannot inherit from a type nested within it","linkify":"Type '\\<typename>' cannot inherit from a type nested within it","nodes":[{"content":"Type '<ph id=\"ph1\">\\&lt;</ph>typename&gt;' cannot inherit from a type nested within it","pos":[0,62],"source":"Type '\\<typename>' cannot inherit from a type nested within it"}]},{"pos":[292,468],"content":"A class or interface definition includes an <bpt id=\"p1\">[</bpt>Inherits Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/inherits-statement.md)</ept> that specifies a type nested within it.","source":"A class or interface definition includes an [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md) that specifies a type nested within it."},{"content":"Inheritance must be linear, not circular.","pos":[475,516]},{"content":"A type cannot inherit from a type that inherits from it.","pos":[517,573]},{"content":"A related restriction is that a type cannot inherit from a type that is not yet defined.","pos":[580,668]},{"content":"Inheritance involves the ability to reuse members of the base class, which in turn requires that these members be defined.","pos":[669,791]},{"content":"Therefore, Visual Basic cannot compile code such as the following example.","pos":[792,866]},{"pos":[1129,1150],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC30908","source":"**Error ID:** BC30908"},{"pos":[1159,1180],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If the inheriting type (the outer type in the nesting) must inherit from the inner type, move the inner type out of the outer type.","pos":[1190,1321]},{"content":"If the inner type must be nested within the outer type, the outer type cannot inherit from it.","pos":[1331,1425]},{"content":"Remove the <bpt id=\"p1\">[</bpt>Inherits Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/inherits-statement.md)</ept>.","pos":[1426,1530],"source":" Remove the [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md)."},{"pos":[1539,1547],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1551,1685],"content":"<bpt id=\"p1\">[</bpt>Inheritance basics (Visual Basic)<ept id=\"p1\">](~/docs/visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept>","source":"[Inheritance basics (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)"}]}