{"content":"---\ntitle: \"ICorProfilerCallback::Shutdown Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.Shutdown\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::Shutdown\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorProfilerCallback::Shutdown method [.NET Framework profiling]\"\n  - \"Shutdown method [.NET Framework profiling]\"\nms.assetid: 1ea194f0-a331-4855-a2ce-37393b8e5f84\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 13\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ICorProfilerCallback::Shutdown Method\nNotifies the profiler that the application is shutting down.  \n  \n## Syntax  \n  \n```  \nHRESULT Shutdown();  \n```  \n  \n## Remarks  \n The profiler code cannot safely call methods of the [ICorProfilerInfo](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md) interface after the `Shutdown` method is called. Any calls to `ICorProfilerInfo` methods result in undefined behavior after the `Shutdown` method returns. Certain immutable events may still occur after shutdown; the profiler should take care to return immediately when this occurs.  \n  \n The `Shutdown` method will be called only if the managed application that is being profiled started as managed code (that is, the initial frame on the process stack is managed). If the application started as unmanaged code but later jumped into managed code, thereby creating an instance of the common language runtime (CLR), then `Shutdown` will not be called. For these cases, the profiler should include in its library a `DllMain` routine that uses the DLL_PROCESS_DETACH value to free any resources and perform clean-up processing of its data, such as flushing traces to disk and so on.  \n  \n In general, the profiler must cope with unexpected shutdowns. For example, a process might be halted by Win32's `TerminateProcess` method (declared in Winbase.h). In other cases, the CLR will halt certain managed threads (background threads) without delivering orderly destruction messages for them.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)   \n [Initialize Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-initialize-method.md)","nodes":[{"pos":[4,705],"nodes":[{"content":"ICorProfilerCallback::Shutdown Method | Microsoft Docs","nodes":[{"pos":[0,54],"content":"ICorProfilerCallback::Shutdown Method | Microsoft Docs","nodes":[{"content":"ICorProfilerCallback::Shutdown Method | Microsoft Docs","pos":[0,54]}]}],"pos":[6,63],"yaml":true}],"content":"title: \"ICorProfilerCallback::Shutdown Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.Shutdown\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::Shutdown\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"ICorProfilerCallback::Shutdown method [.NET Framework profiling]\"\n  - \"Shutdown method [.NET Framework profiling]\"\nms.assetid: 1ea194f0-a331-4855-a2ce-37393b8e5f84\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 13\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[712,749],"content":"ICorProfilerCallback::Shutdown Method","linkify":"ICorProfilerCallback::Shutdown Method","nodes":[{"content":"ICorProfilerCallback::Shutdown Method","pos":[0,37]}]},{"content":"Notifies the profiler that the application is shutting down.","pos":[750,810]},{"pos":[819,825],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[871,878],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The profiler code cannot safely call methods of the <bpt id=\"p1\">[</bpt>ICorProfilerInfo<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md)</ept> interface after the <ph id=\"ph1\">`Shutdown`</ph> method is called.","pos":[882,1083],"source":"The profiler code cannot safely call methods of the [ICorProfilerInfo](../../../../docs/framework/unmanaged-api/profiling/icorprofilerinfo-interface.md) interface after the `Shutdown` method is called."},{"content":"Any calls to <ph id=\"ph1\">`ICorProfilerInfo`</ph> methods result in undefined behavior after the <ph id=\"ph2\">`Shutdown`</ph> method returns.","pos":[1084,1189],"source":" Any calls to `ICorProfilerInfo` methods result in undefined behavior after the `Shutdown` method returns."},{"content":"Certain immutable events may still occur after shutdown; the profiler should take care to return immediately when this occurs.","pos":[1190,1316]},{"content":"The <ph id=\"ph1\">`Shutdown`</ph> method will be called only if the managed application that is being profiled started as managed code (that is, the initial frame on the process stack is managed).","pos":[1323,1500],"source":"The `Shutdown` method will be called only if the managed application that is being profiled started as managed code (that is, the initial frame on the process stack is managed)."},{"content":"If the application started as unmanaged code but later jumped into managed code, thereby creating an instance of the common language runtime (CLR), then <ph id=\"ph1\">`Shutdown`</ph> will not be called.","pos":[1501,1684],"source":" If the application started as unmanaged code but later jumped into managed code, thereby creating an instance of the common language runtime (CLR), then `Shutdown` will not be called."},{"content":"For these cases, the profiler should include in its library a <ph id=\"ph1\">`DllMain`</ph> routine that uses the DLL_PROCESS_DETACH value to free any resources and perform clean-up processing of its data, such as flushing traces to disk and so on.","pos":[1685,1913],"source":" For these cases, the profiler should include in its library a `DllMain` routine that uses the DLL_PROCESS_DETACH value to free any resources and perform clean-up processing of its data, such as flushing traces to disk and so on."},{"content":"In general, the profiler must cope with unexpected shutdowns.","pos":[1920,1981]},{"content":"For example, a process might be halted by Win32's <ph id=\"ph1\">`TerminateProcess`</ph> method (declared in Winbase.h).","pos":[1982,2082],"source":" For example, a process might be halted by Win32's `TerminateProcess` method (declared in Winbase.h)."},{"content":"In other cases, the CLR will halt certain managed threads (background threads) without delivering orderly destruction messages for them.","pos":[2083,2219]},{"pos":[2228,2240],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2244,2348],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2355,2389],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[2396,2421],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2428,2536],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[2545,2553],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorProfilerCallback Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2557,2676],"source":"[ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>Initialize Method<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-initialize-method.md)</ept>","pos":[2680,2793],"source":"[Initialize Method](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-initialize-method.md)"}]}