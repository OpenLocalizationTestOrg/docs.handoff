{"content":"---\ntitle: \"How to: Return a LINQ Query Result as a Specific Type (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"queries [LINQ in Visual Basic], specific type returned\"\n  - \"projection [LINQ in Visual Basic]\"\n  - \"anonymous types [Visual Basic]\"\n  - \"querying databases [LINQ]\"\n  - \"queries [LINQ in Visual Basic], how-to topics\"\n  - \"query samples [Visual Basic]\"\nms.assetid: 621bb10a-e5d7-44fb-a025-317964b19d92\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Return a LINQ Query Result as a Specific Type (Visual Basic)\nLanguage-Integrated Query (LINQ) makes it easy to access database information and execute queries. By default, LINQ queries return a list of objects as an anonymous type. You can also specify that a query return a list of a specific type by using the `Select` clause.  \n  \n The following example shows how to create a new application that performs queries against a SQL Server database and projects the results as a specific named type. For more information, see [Anonymous Types](../../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md) and [Select Clause](../../../../visual-basic/language-reference/queries/select-clause.md).  \n  \n The examples in this topic use the Northwind sample database. If you do not have the Northwind sample database on your development computer, you can download it from the [Microsoft Download Center](http://go.microsoft.com/fwlink/?LinkID=98088) Web site. For instructions, see [Downloading Sample Databases](https://msdn.microsoft.com/library/bb399411).  \n  \n[!INCLUDE[note_settings_general](../../../../csharp/language-reference/compiler-messages/includes/note_settings_general_md.md)]  \n  \n### To create a connection to a database  \n  \n1.  In Visual Studio, open **Server Explorer**/**Database Explorer** by clicking **Server Explorer**/**Database Explorer** on the **View** menu.  \n  \n2.  Right-click **Data Connections** in **Server Explorer**/**Database Explorer** and then click **Add Connection**.  \n  \n3.  Specify a valid connection to the Northwind sample database.  \n  \n### To add a project that contains a LINQ to SQL file  \n  \n1.  In Visual Studio, on the **File** menu, point to **New** and then click **Project**. Select Visual Basic **Windows Forms Application** as the project type.  \n  \n2.  On the **Project** menu, click **Add New Item**. Select the **LINQ to SQL Classes** item template.  \n  \n3.  Name the file `northwind.dbml`. Click **Add**. The Object Relational Designer (O/R Designer) is opened for the northwind.dbml file.  \n  \n### To add tables to query to the O/R Designer  \n  \n1.  In **Server Explorer**/**Database Explorer**, expand the connection to the Northwind database. Expand the **Tables** folder.  \n  \n     If you have closed the O/R Designer, you can reopen it by double-clicking the northwind.dbml file that you added earlier.  \n  \n2.  Click the Customers table and drag it to the left pane of the designer.  \n  \n     The designer creates a new `Customer` object for your project. You can project a query result as the `Customer` type or as a type that you create. This sample will create a new type in a later procedure and project a query result as that type.  \n  \n3.  Save your changes and close the designer.  \n  \n4.  Save your project.  \n  \n### To add code to query the database and display the results  \n  \n1.  From the **Toolbox**, drag a <xref:System.Windows.Forms.DataGridView> control onto the default Windows Form for your project, Form1.  \n  \n2.  Double-click Form1 to modify the Form1 class.  \n  \n3.  After the `End Class` statement of the Form1 class, add the following code to create a `CustomerInfo` type to hold the query results for this sample.  \n  \n     [!code-vb[VbLINQToSQLHowTos#16](../../../../visual-basic/programming-guide/language-features/linq/codesnippet/VisualBasic/how-to-return-a-linq-query-result-as-a-specific-type_1.vb)]  \n  \n4.  When you added tables to the O/R Designer, the designer added a <xref:System.Data.Linq.DataContext> object to your project. This object contains the code that you must have to access those tables, and to access individual objects and collections for each table. The <xref:System.Data.Linq.DataContext> object for your project is named based on the name of your .dbml file. For this project, the <xref:System.Data.Linq.DataContext> object is named `northwindDataContext`.  \n  \n     You can create an instance of the <xref:System.Data.Linq.DataContext> in your code and query the tables specified by the O/R Designer.  \n  \n     In the `Load` event of the Form1 class, add the following code to query the tables that are exposed as properties of your data context. The `Select` clause of the query will create a new `CustomerInfo` type instead of an anonymous type for each item of the query result.  \n  \n     [!code-vb[VbLINQToSQLHowTos#15](../../../../visual-basic/programming-guide/language-features/linq/codesnippet/VisualBasic/how-to-return-a-linq-query-result-as-a-specific-type_2.vb)]  \n  \n5.  Press F5 to run your project and view the results.  \n  \n## See Also  \n [LINQ](../../../../visual-basic/programming-guide/language-features/linq/index.md)   \n [Queries](../../../../visual-basic/language-reference/queries/queries.md)   \n [LINQ to SQL](https://msdn.microsoft.com/library/bb386976)   \n [DataContext Methods (O/R Designer)](https://docs.microsoft.com/visualstudio/data-tools/datacontext-methods-o-r-designer)\n","nodes":[{"pos":[4,841],"nodes":[{"content":"How to: Return a LINQ Query Result as a Specific Type (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,85],"content":"How to: Return a LINQ Query Result as a Specific Type (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Return a LINQ Query Result as a Specific Type (Visual Basic) | Microsoft Docs","pos":[0,85]}]}],"pos":[6,94],"yaml":true}],"content":"title: \"How to: Return a LINQ Query Result as a Specific Type (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"queries [LINQ in Visual Basic], specific type returned\"\n  - \"projection [LINQ in Visual Basic]\"\n  - \"anonymous types [Visual Basic]\"\n  - \"querying databases [LINQ]\"\n  - \"queries [LINQ in Visual Basic], how-to topics\"\n  - \"query samples [Visual Basic]\"\nms.assetid: 621bb10a-e5d7-44fb-a025-317964b19d92\ncaps.latest.revision: 8\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[848,916],"content":"How to: Return a LINQ Query Result as a Specific Type (Visual Basic)","linkify":"How to: Return a LINQ Query Result as a Specific Type (Visual Basic)","nodes":[{"content":"How to: Return a LINQ Query Result as a Specific Type (Visual Basic)","pos":[0,68]}]},{"content":"Language-Integrated Query (LINQ) makes it easy to access database information and execute queries.","pos":[917,1015]},{"content":"By default, LINQ queries return a list of objects as an anonymous type.","pos":[1016,1087]},{"content":"You can also specify that a query return a list of a specific type by using the <ph id=\"ph1\">`Select`</ph> clause.","pos":[1088,1184],"source":" You can also specify that a query return a list of a specific type by using the `Select` clause."},{"content":"The following example shows how to create a new application that performs queries against a SQL Server database and projects the results as a specific named type.","pos":[1191,1353]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Anonymous Types<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept> and <bpt id=\"p2\">[</bpt>Select Clause<ept id=\"p2\">](../../../../visual-basic/language-reference/queries/select-clause.md)</ept>.","pos":[1354,1589],"source":" For more information, see [Anonymous Types](../../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md) and [Select Clause](../../../../visual-basic/language-reference/queries/select-clause.md)."},{"content":"The examples in this topic use the Northwind sample database.","pos":[1596,1657]},{"content":"If you do not have the Northwind sample database on your development computer, you can download it from the <bpt id=\"p1\">[</bpt>Microsoft Download Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=98088)</ept> Web site.","pos":[1658,1849],"source":" If you do not have the Northwind sample database on your development computer, you can download it from the [Microsoft Download Center](http://go.microsoft.com/fwlink/?LinkID=98088) Web site."},{"content":"For instructions, see <bpt id=\"p1\">[</bpt>Downloading Sample Databases<ept id=\"p1\">](https://msdn.microsoft.com/library/bb399411)</ept>.","pos":[1850,1948],"source":" For instructions, see [Downloading Sample Databases](https://msdn.microsoft.com/library/bb399411)."},{"pos":[2091,2127],"content":"To create a connection to a database","linkify":"To create a connection to a database","nodes":[{"content":"To create a connection to a database","pos":[0,36]}]},{"pos":[2137,2277],"content":"In Visual Studio, open <bpt id=\"p1\">**</bpt>Server Explorer<ept id=\"p1\">**</ept><ph id=\"ph1\">/</ph><bpt id=\"p2\">**</bpt>Database Explorer<ept id=\"p2\">**</ept> by clicking <bpt id=\"p3\">**</bpt>Server Explorer<ept id=\"p3\">**</ept><ph id=\"ph2\">/</ph><bpt id=\"p4\">**</bpt>Database Explorer<ept id=\"p4\">**</ept> on the <bpt id=\"p5\">**</bpt>View<ept id=\"p5\">**</ept> menu.","source":"In Visual Studio, open **Server Explorer**/**Database Explorer** by clicking **Server Explorer**/**Database Explorer** on the **View** menu."},{"pos":[2287,2399],"content":"Right-click <bpt id=\"p1\">**</bpt>Data Connections<ept id=\"p1\">**</ept> in <bpt id=\"p2\">**</bpt>Server Explorer<ept id=\"p2\">**</ept><ph id=\"ph1\">/</ph><bpt id=\"p3\">**</bpt>Database Explorer<ept id=\"p3\">**</ept> and then click <bpt id=\"p4\">**</bpt>Add Connection<ept id=\"p4\">**</ept>.","source":"Right-click **Data Connections** in **Server Explorer**/**Database Explorer** and then click **Add Connection**."},{"content":"Specify a valid connection to the Northwind sample database.","pos":[2409,2469]},{"pos":[2479,2528],"content":"To add a project that contains a LINQ to SQL file","linkify":"To add a project that contains a LINQ to SQL file","nodes":[{"content":"To add a project that contains a LINQ to SQL file","pos":[0,49]}]},{"content":"In Visual Studio, on the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, point to <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept> and then click <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","pos":[2538,2622],"source":"In Visual Studio, on the **File** menu, point to **New** and then click **Project**."},{"content":"Select Visual Basic <bpt id=\"p1\">**</bpt>Windows Forms Application<ept id=\"p1\">**</ept> as the project type.","pos":[2623,2693],"source":" Select Visual Basic **Windows Forms Application** as the project type."},{"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Add New Item<ept id=\"p2\">**</ept>.","pos":[2703,2751],"source":"On the **Project** menu, click **Add New Item**."},{"content":"Select the <bpt id=\"p1\">**</bpt>LINQ to SQL Classes<ept id=\"p1\">**</ept> item template.","pos":[2752,2801],"source":" Select the **LINQ to SQL Classes** item template."},{"content":"Name the file <ph id=\"ph1\">`northwind.dbml`</ph>.","pos":[2811,2842],"source":"Name the file `northwind.dbml`."},{"content":"Click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.","pos":[2843,2857],"source":" Click **Add**."},{"content":"The Object Relational Designer (O/R Designer) is opened for the northwind.dbml file.","pos":[2858,2942]},{"pos":[2952,2994],"content":"To add tables to query to the O/R Designer","linkify":"To add tables to query to the O/R Designer","nodes":[{"content":"To add tables to query to the O/R Designer","pos":[0,42]}]},{"content":"In <bpt id=\"p1\">**</bpt>Server Explorer<ept id=\"p1\">**</ept><ph id=\"ph1\">/</ph><bpt id=\"p2\">**</bpt>Database Explorer<ept id=\"p2\">**</ept>, expand the connection to the Northwind database.","pos":[3004,3098],"source":"In **Server Explorer**/**Database Explorer**, expand the connection to the Northwind database."},{"content":"Expand the <bpt id=\"p1\">**</bpt>Tables<ept id=\"p1\">**</ept> folder.","pos":[3099,3128],"source":" Expand the **Tables** folder."},{"content":"If you have closed the O/R Designer, you can reopen it by double-clicking the northwind.dbml file that you added earlier.","pos":[3139,3260]},{"content":"Click the Customers table and drag it to the left pane of the designer.","pos":[3270,3341]},{"content":"The designer creates a new <ph id=\"ph1\">`Customer`</ph> object for your project.","pos":[3352,3414],"source":"The designer creates a new `Customer` object for your project."},{"content":"You can project a query result as the <ph id=\"ph1\">`Customer`</ph> type or as a type that you create.","pos":[3415,3498],"source":" You can project a query result as the `Customer` type or as a type that you create."},{"content":"This sample will create a new type in a later procedure and project a query result as that type.","pos":[3499,3595]},{"content":"Save your changes and close the designer.","pos":[3605,3646]},{"content":"Save your project.","pos":[3656,3674]},{"pos":[3684,3741],"content":"To add code to query the database and display the results","linkify":"To add code to query the database and display the results","nodes":[{"content":"To add code to query the database and display the results","pos":[0,57]}]},{"pos":[3751,3883],"content":"From the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept>, drag a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control onto the default Windows Form for your project, Form1.","source":"From the **Toolbox**, drag a <xref:System.Windows.Forms.DataGridView> control onto the default Windows Form for your project, Form1."},{"content":"Double-click Form1 to modify the Form1 class.","pos":[3893,3938]},{"pos":[3948,4097],"content":"After the <ph id=\"ph1\">`End Class`</ph> statement of the Form1 class, add the following code to create a <ph id=\"ph2\">`CustomerInfo`</ph> type to hold the query results for this sample.","source":"After the `End Class` statement of the Form1 class, add the following code to create a `CustomerInfo` type to hold the query results for this sample."},{"pos":[4108,4289],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbLINQToSQLHowTos#16<ept id=\"p2\">](../../../../visual-basic/programming-guide/language-features/linq/codesnippet/VisualBasic/how-to-return-a-linq-query-result-as-a-specific-type_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbLINQToSQLHowTos#16](../../../../visual-basic/programming-guide/language-features/linq/codesnippet/VisualBasic/how-to-return-a-linq-query-result-as-a-specific-type_1.vb)]"},{"content":"When you added tables to the O/R Designer, the designer added a <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> object to your project.","pos":[4299,4422],"source":"When you added tables to the O/R Designer, the designer added a <xref:System.Data.Linq.DataContext> object to your project."},{"content":"This object contains the code that you must have to access those tables, and to access individual objects and collections for each table.","pos":[4423,4560]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> object for your project is named based on the name of your .dbml file.","pos":[4561,4671],"source":" The <xref:System.Data.Linq.DataContext> object for your project is named based on the name of your .dbml file."},{"content":"For this project, the <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> object is named <ph id=\"ph2\">`northwindDataContext`</ph>.","pos":[4672,4769],"source":" For this project, the <xref:System.Data.Linq.DataContext> object is named `northwindDataContext`."},{"content":"You can create an instance of the <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> in your code and query the tables specified by the O/R Designer.","pos":[4780,4914],"source":"You can create an instance of the <xref:System.Data.Linq.DataContext> in your code and query the tables specified by the O/R Designer."},{"content":"In the <ph id=\"ph1\">`Load`</ph> event of the Form1 class, add the following code to query the tables that are exposed as properties of your data context.","pos":[4925,5060],"source":"In the `Load` event of the Form1 class, add the following code to query the tables that are exposed as properties of your data context."},{"content":"The <ph id=\"ph1\">`Select`</ph> clause of the query will create a new <ph id=\"ph2\">`CustomerInfo`</ph> type instead of an anonymous type for each item of the query result.","pos":[5061,5195],"source":" The `Select` clause of the query will create a new `CustomerInfo` type instead of an anonymous type for each item of the query result."},{"pos":[5206,5387],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbLINQToSQLHowTos#15<ept id=\"p2\">](../../../../visual-basic/programming-guide/language-features/linq/codesnippet/VisualBasic/how-to-return-a-linq-query-result-as-a-specific-type_2.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbLINQToSQLHowTos#15](../../../../visual-basic/programming-guide/language-features/linq/codesnippet/VisualBasic/how-to-return-a-linq-query-result-as-a-specific-type_2.vb)]"},{"content":"Press F5 to run your project and view the results.","pos":[5397,5447]},{"pos":[5456,5464],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>LINQ<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/linq/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[5468,5551],"source":"[LINQ](../../../../visual-basic/programming-guide/language-features/linq/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Queries<ept id=\"p1\">](../../../../visual-basic/language-reference/queries/queries.md)</ept><ph id=\"ph1\"> </ph>","pos":[5555,5629],"source":"[Queries](../../../../visual-basic/language-reference/queries/queries.md) "},{"content":"<bpt id=\"p1\">[</bpt>LINQ to SQL<ept id=\"p1\">](https://msdn.microsoft.com/library/bb386976)</ept><ph id=\"ph1\"> </ph>","pos":[5633,5692],"source":"[LINQ to SQL](https://msdn.microsoft.com/library/bb386976) "},{"content":"<bpt id=\"p1\">[</bpt>DataContext Methods (O/R Designer)<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/data-tools/datacontext-methods-o-r-designer)</ept>","pos":[5696,5817],"source":"[DataContext Methods (O/R Designer)](https://docs.microsoft.com/visualstudio/data-tools/datacontext-methods-o-r-designer)"}]}