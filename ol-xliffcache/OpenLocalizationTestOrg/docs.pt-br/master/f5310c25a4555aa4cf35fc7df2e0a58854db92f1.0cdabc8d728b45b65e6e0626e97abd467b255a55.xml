{"content":"---\ntitle: \"Numeric and Comparison Operators | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 25b4a26a-06f2-4f80-87a9-76705ed46197\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Numeric and Comparison Operators\nArithmetic and comparison operators work as expected in the common language runtime (CLR) except as follows:  \n  \n-   SQL does not support the modulus operator on floating-point numbers.  \n  \n-   SQL does not support unchecked arithmetic.  \n  \n-   Increment and decrement operators cause side-effects when you use them in expressions that cannot be replicated in SQL and are, therefore, not supported.  \n  \n## Supported Operators  \n [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] supports the following operators.  \n  \n-   Basic arithmetic operators:  \n  \n    -   `+`  \n  \n    -   `-` (subtraction)  \n  \n    -   `*`  \n  \n    -   `/`  \n  \n    -   Visual Basic integer division (`\\`)  \n  \n    -   `%` (Visual Basic `Mod`)  \n  \n    -   `<<`  \n  \n    -   `>>`  \n  \n    -   `-` (unary negation)  \n  \n-   Basic comparison operators:  \n  \n    -   Visual Basic `=` and C# `==`  \n  \n    -   Visual Basic `<>` and C# `!=`  \n  \n    -   Visual Basic `Is/IsNot`  \n  \n    -   `<`  \n  \n    -   `<=`  \n  \n    -   `>`  \n  \n    -   `>=`  \n  \n## See Also  \n [Data Types and Functions](../../../../../../docs/framework/data/adonet/sql/linq/data-types-and-functions.md)   \n [C# Operators](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)   \n [Operators](../../../../../visual-basic/language-reference/operators/index.md)","nodes":[{"pos":[12,61],"content":"Numeric and Comparison Operators | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Numeric and Comparison Operators | Microsoft Docs","pos":[0,49]}]},{"pos":[370,402],"content":"Numeric and Comparison Operators","linkify":"Numeric and Comparison Operators","nodes":[{"content":"Numeric and Comparison Operators","pos":[0,32]}]},{"content":"Arithmetic and comparison operators work as expected in the common language runtime (CLR) except as follows:","pos":[403,511]},{"content":"SQL does not support the modulus operator on floating-point numbers.","pos":[521,589]},{"content":"SQL does not support unchecked arithmetic.","pos":[599,641]},{"content":"Increment and decrement operators cause side-effects when you use them in expressions that cannot be replicated in SQL and are, therefore, not supported.","pos":[651,804]},{"pos":[813,832],"content":"Supported Operators","linkify":"Supported Operators","nodes":[{"content":"Supported Operators","pos":[0,19]}]},{"pos":[836,937],"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> supports the following operators.","source":"[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] supports the following operators."},{"content":"Basic arithmetic operators:","pos":[947,974]},{"pos":[1005,1022],"content":"<ph id=\"ph1\">`-`</ph> (subtraction)","source":"`-` (subtraction)"},{"pos":[1070,1105],"content":"Visual Basic integer division (<ph id=\"ph1\">`\\`</ph>)","source":"Visual Basic integer division (`\\`)"},{"pos":[1119,1143],"content":"<ph id=\"ph1\">`%`</ph> (Visual Basic <ph id=\"ph2\">`Mod`</ph>)","source":"`%` (Visual Basic `Mod`)"},{"pos":[1193,1213],"content":"<ph id=\"ph1\">`-`</ph> (unary negation)","source":"`-` (unary negation)"},{"content":"Basic comparison operators:","pos":[1223,1250]},{"pos":[1264,1292],"content":"Visual Basic <ph id=\"ph1\">`=`</ph> and C# <ph id=\"ph2\">`==`</ph>","source":"Visual Basic `=` and C# `==`"},{"pos":[1306,1335],"content":"Visual Basic <ph id=\"ph1\">`&lt;&gt;`</ph> and C# <ph id=\"ph2\">`!=`</ph>","source":"Visual Basic `<>` and C# `!=`"},{"pos":[1349,1372],"content":"Visual Basic <ph id=\"ph1\">`Is/IsNot`</ph>","source":"Visual Basic `Is/IsNot`"},{"pos":[1451,1459],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Data Types and Functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/data-types-and-functions.md)</ept><ph id=\"ph1\"> </ph>","pos":[1463,1573],"source":"[Data Types and Functions](../../../../../../docs/framework/data/adonet/sql/linq/data-types-and-functions.md) "},{"content":"<bpt id=\"p1\"> [</bpt>C# Operators<ept id=\"p1\">](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)</ept><ph id=\"ph1\"> </ph>","pos":[1576,1664],"source":" [C# Operators](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43) "},{"content":"<bpt id=\"p1\"> [</bpt>Operators<ept id=\"p1\">](../../../../../visual-basic/language-reference/operators/index.md)</ept>","pos":[1667,1746],"source":" [Operators](../../../../../visual-basic/language-reference/operators/index.md)"}]}