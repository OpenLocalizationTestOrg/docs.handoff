<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">435798ac1373c566025d26d7a9d75ae8a2acfbbc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\samples\usage-of-the-switch-activity-with-custom-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c919fe1684ce440e717e6ed2f2a1118117bfa3a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9573e6d3faa0d5d6ce0bb0bcbc5ff39444619789</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Usage of the Switch Activity with Custom Types | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Usage of the Switch Activity with Custom Types</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample describes how to enable a <ph id="ph1">&lt;!--zz &lt;xref:System.Activities.&gt;--&gt;</ph> <ph id="ph2">`xref:System.Activities`</ph> Statements.Switch<ph id="ph3">`1?qualifyHint=False&amp;autoUpgrade=True activity to evaluate a user-defined complex type at runtime. In most traditional procedural programming languages, a [switch](http://go.microsoft.com/fwlink/?LinkId=180521) statement selects an execution logic based on the conditional evaluation of a variable. Traditionally, a `</ph>switch` statement operates on an expression that can be statically evaluated.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, in C# this means that only primitive types, such as <ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, <ph id="ph3">&lt;xref:System.String&gt;</ph>, and enumeration types are supported.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To enable switching on a custom class, logic must be implemented to evaluate values of the custom complex type at runtime.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This sample demonstrates how to enable switching on a custom complex type named <ph id="ph1">`Person`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the custom class <ph id="ph1">`Person`</ph>, a <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> attribute is declared with the name of the custom <ph id="ph3">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the custom class <ph id="ph1">`Person`</ph>, the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> classes are overridden.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A custom <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class is implemented that performs the conversion of an instance of the custom class to a string and a string to an instance of a custom class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following files are included in this sample:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Person.cs<ept id="p1">**</ept>: Defines the <ph id="ph1">`Person`</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PersonConverter.cs<ept id="p1">**</ept>: The type converter for the <ph id="ph1">`Person`</ph> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Sequence.xaml<ept id="p1">**</ept>: a workflow that switches over the <ph id="ph1">`Person`</ph> type.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept>: The main function that runs the workflow.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Load Switch.sln in <ph id="ph1">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Press CTRL+SHIFT+B to build the solution.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Press CTRL + F5 to run the sample.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Built-In Activity Library<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/net-framework-4-5-built-in-activity-library.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>