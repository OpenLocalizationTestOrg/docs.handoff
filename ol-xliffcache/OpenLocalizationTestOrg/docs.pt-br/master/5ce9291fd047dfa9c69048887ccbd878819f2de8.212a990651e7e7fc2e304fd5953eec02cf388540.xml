{"content":"---\ntitle: \"checked keyword - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"checked_CSharpKeyword\"\n  - \"checked\"\nhelpviewer_keywords: \n  - \"checked keyword [C#]\"\nms.assetid: 718a1194-988d-48a3-b089-d6ee8bd1608d\n---\n# checked (C# Reference)\n\nThe `checked` keyword is used to explicitly enable overflow checking for integral-type arithmetic operations and conversions.\n\nBy default, an expression that contains only constant values causes a compiler error if the expression produces a value that is outside the range of the destination type. If the expression contains one or more non-constant values, the compiler does not detect the overflow. Evaluating the expression assigned to `i2` in the following example does not cause a compiler error.\n\n[!code-csharp[csrefKeywordsChecked#3](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsChecked/CS/csrefKeywordsChecked.cs#3)]\n\nBy default, these non-constant expressions are not checked for overflow at run time either, and they do not raise overflow exceptions. The previous example displays -2,147,483,639 as the sum of two positive integers.\n\nOverflow checking can be enabled by compiler options, environment configuration, or use of the `checked` keyword. The following examples demonstrate how to use a `checked` expression or a `checked` block to detect the overflow that is produced by the previous sum at run time. Both examples raise an overflow exception.\n\n[!code-csharp[csrefKeywordsChecked#4](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsChecked/CS/csrefKeywordsChecked.cs#4)]\n\nThe [unchecked](../../../csharp/language-reference/keywords/unchecked.md) keyword can be used to prevent overflow checking.\n\n## Example\n\nThis sample shows how to use `checked` to enable overflow checking at run time.\n\n[!code-csharp[csrefKeywordsChecked#1](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsChecked/CS/csrefKeywordsChecked.cs#1)]\n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../../../csharp/language-reference/index.md)\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [C# Keywords](../../../csharp/language-reference/keywords/index.md)\n- [Checked and Unchecked](../../../csharp/language-reference/keywords/checked-and-unchecked.md)\n- [unchecked](../../../csharp/language-reference/keywords/unchecked.md)\n","nodes":[{"pos":[4,238],"embed":true,"restype":"x-metadata","content":"title: \"checked keyword - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"checked_CSharpKeyword\"\n  - \"checked\"\nhelpviewer_keywords: \n  - \"checked keyword [C#]\"\nms.assetid: 718a1194-988d-48a3-b089-d6ee8bd1608d","nodes":[{"content":"checked keyword - C# Reference","nodes":[{"pos":[0,30],"content":"checked keyword - C# Reference","nodes":[{"content":"checked keyword - C# Reference","pos":[0,30]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[245,267],"content":"checked (C# Reference)","linkify":"checked (C# Reference)","nodes":[{"content":"checked (C# Reference)","pos":[0,22]}]},{"pos":[269,394],"content":"The <ph id=\"ph1\">`checked`</ph> keyword is used to explicitly enable overflow checking for integral-type arithmetic operations and conversions.","source":"The `checked` keyword is used to explicitly enable overflow checking for integral-type arithmetic operations and conversions."},{"content":"By default, an expression that contains only constant values causes a compiler error if the expression produces a value that is outside the range of the destination type.","pos":[396,566]},{"content":"If the expression contains one or more non-constant values, the compiler does not detect the overflow.","pos":[567,669]},{"content":"Evaluating the expression assigned to <ph id=\"ph1\">`i2`</ph> in the following example does not cause a compiler error.","pos":[670,770],"source":" Evaluating the expression assigned to `i2` in the following example does not cause a compiler error."},{"content":"By default, these non-constant expressions are not checked for overflow at run time either, and they do not raise overflow exceptions.","pos":[910,1044]},{"content":"The previous example displays -2,147,483,639 as the sum of two positive integers.","pos":[1045,1126]},{"content":"Overflow checking can be enabled by compiler options, environment configuration, or use of the <ph id=\"ph1\">`checked`</ph> keyword.","pos":[1128,1241],"source":"Overflow checking can be enabled by compiler options, environment configuration, or use of the `checked` keyword."},{"content":"The following examples demonstrate how to use a <ph id=\"ph1\">`checked`</ph> expression or a <ph id=\"ph2\">`checked`</ph> block to detect the overflow that is produced by the previous sum at run time.","pos":[1242,1404],"source":" The following examples demonstrate how to use a `checked` expression or a `checked` block to detect the overflow that is produced by the previous sum at run time."},{"content":"Both examples raise an overflow exception.","pos":[1405,1447]},{"pos":[1587,1710],"content":"The <bpt id=\"p1\">[</bpt>unchecked<ept id=\"p1\">](../../../csharp/language-reference/keywords/unchecked.md)</ept> keyword can be used to prevent overflow checking.","source":"The [unchecked](../../../csharp/language-reference/keywords/unchecked.md) keyword can be used to prevent overflow checking."},{"pos":[1715,1722],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1724,1803],"content":"This sample shows how to use <ph id=\"ph1\">`checked`</ph> to enable overflow checking at run time.","source":"This sample shows how to use `checked` to enable overflow checking at run time."},{"pos":[1946,1971],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[2037,2045],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2049,2108],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept>","source":"[C# Reference](../../../csharp/language-reference/index.md)"},{"pos":[2111,2177],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[2180,2247],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept>","source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md)"},{"pos":[2250,2343],"content":"<bpt id=\"p1\">[</bpt>Checked and Unchecked<ept id=\"p1\">](../../../csharp/language-reference/keywords/checked-and-unchecked.md)</ept>","source":"[Checked and Unchecked](../../../csharp/language-reference/keywords/checked-and-unchecked.md)"},{"pos":[2346,2415],"content":"<bpt id=\"p1\">[</bpt>unchecked<ept id=\"p1\">](../../../csharp/language-reference/keywords/unchecked.md)</ept>","source":"[unchecked](../../../csharp/language-reference/keywords/unchecked.md)"}]}