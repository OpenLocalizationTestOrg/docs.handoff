{"content":"---\ntitle: \"How to: Create Event Handlers at Run Time for Windows Forms | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"Windows Forms, event handling\"\n  - \"event handlers, creating\"\n  - \"run time, creating event handlers at\"\n  - \"examples [Windows Forms], event handling\"\n  - \"Button control [Windows Forms], event handlers\"\nms.assetid: 2e7c9e1a-61fe-444d-8113-3c5bacf1c8cb\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Create Event Handlers at Run Time for Windows Forms\nIn addition to creating events using the Windows Forms Designer, you can also create an event handler at run time. This action allows you to connect event handlers based on conditions in code at run time as opposed to having them connected when the program initially starts.  \n  \n### To create an event handler at run time  \n  \n1.  Open the form in the Code Editor that you want to add an event handler to.  \n  \n2.  Add a method to your form with the method signature for the event that you want to handle.  \n  \n     For example, if you were handling the <xref:System.Windows.Forms.Control.Click> event of a <xref:System.Windows.Forms.Button> control, you would create a method such as the following:  \n  \n    ```vb  \n    Private Sub Button1_Click(ByVal sender As Object, ByVal e As EventArgs)  \n       ' Add event handler code here.  \n    End Sub  \n  \n    ```  \n  \n    ```csharp  \n    private void button1_Click(object sender, System.EventArgs e)   \n    {  \n    // Add event handler code here.  \n    }  \n  \n    ```  \n  \n    ```cpp  \n    private:  \n       void button1_Click(System::Object ^ sender,   \n          System::EventArgs ^ e)  \n       {  \n          // Add event handler code here.  \n       }  \n    ```  \n  \n3.  Add code to the event handler as appropriate to your application.  \n  \n4.  Determine which form or control you want to create an event handler for.  \n  \n5.  In a method within your form's class, add code that specifies the event handler to handle the event. For example, the following code specifies the event handler `button1_Click` handles the <xref:System.Windows.Forms.Control.Click> event of a <xref:System.Windows.Forms.Button> control:  \n  \n    ```vb  \n    AddHandler Button1.Click, AddressOf Button1_Click  \n  \n    ```  \n  \n    ```csharp  \n    button1.Click += new EventHandler(button1_Click);  \n  \n    ```  \n  \n    ```cpp  \n    button1->Click += gcnew System::EventHandler(this, &Form1::button1_Click);  \n    ```  \n  \n     The <xref:System.ComponentModel.EventHandlerList.AddHandler%2A> method demonstrated in the Visual Basic code above establishes a click event handler for the button.  \n  \n## See Also  \n [Creating Event Handlers in Windows Forms](../../../docs/framework/winforms/creating-event-handlers-in-windows-forms.md)   \n [Event Handlers Overview](../../../docs/framework/winforms/event-handlers-overview-windows-forms.md)   \n [Troubleshooting Inherited Event Handlers in Visual Basic](~/docs/visual-basic/programming-guide/language-features/events/troubleshooting-inherited-event-handlers.md)","nodes":[{"pos":[4,651],"nodes":[{"content":"How to: Create Event Handlers at Run Time for Windows Forms | Microsoft Docs","nodes":[{"pos":[0,76],"content":"How to: Create Event Handlers at Run Time for Windows Forms | Microsoft Docs","nodes":[{"content":"How to: Create Event Handlers at Run Time for Windows Forms | Microsoft Docs","pos":[0,76]}]}],"pos":[6,85],"yaml":true}],"content":"title: \"How to: Create Event Handlers at Run Time for Windows Forms | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"Windows Forms, event handling\"\n  - \"event handlers, creating\"\n  - \"run time, creating event handlers at\"\n  - \"examples [Windows Forms], event handling\"\n  - \"Button control [Windows Forms], event handlers\"\nms.assetid: 2e7c9e1a-61fe-444d-8113-3c5bacf1c8cb\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","yamlblock":true},{"pos":[658,717],"content":"How to: Create Event Handlers at Run Time for Windows Forms","linkify":"How to: Create Event Handlers at Run Time for Windows Forms","nodes":[{"content":"How to: Create Event Handlers at Run Time for Windows Forms","pos":[0,59]}]},{"content":"In addition to creating events using the Windows Forms Designer, you can also create an event handler at run time.","pos":[718,832]},{"content":"This action allows you to connect event handlers based on conditions in code at run time as opposed to having them connected when the program initially starts.","pos":[833,992]},{"pos":[1002,1040],"content":"To create an event handler at run time","linkify":"To create an event handler at run time","nodes":[{"content":"To create an event handler at run time","pos":[0,38]}]},{"content":"Open the form in the Code Editor that you want to add an event handler to.","pos":[1050,1124]},{"content":"Add a method to your form with the method signature for the event that you want to handle.","pos":[1134,1224]},{"content":"For example, if you were handling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, you would create a method such as the following:","pos":[1235,1418],"source":"For example, if you were handling the <xref:System.Windows.Forms.Control.Click> event of a <xref:System.Windows.Forms.Button> control, you would create a method such as the following:"},{"content":"Add code to the event handler as appropriate to your application.","pos":[1939,2004]},{"content":"Determine which form or control you want to create an event handler for.","pos":[2014,2086]},{"content":"In a method within your form's class, add code that specifies the event handler to handle the event.","pos":[2096,2196]},{"content":"For example, the following code specifies the event handler <ph id=\"ph1\">`button1_Click`</ph> handles the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control:","pos":[2197,2381],"source":" For example, the following code specifies the event handler `button1_Click` handles the <xref:System.Windows.Forms.Control.Click> event of a <xref:System.Windows.Forms.Button> control:"},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.EventHandlerList.AddHandler%2A&gt;</ph> method demonstrated in the Visual Basic code above establishes a click event handler for the button.","pos":[2671,2835],"source":"The <xref:System.ComponentModel.EventHandlerList.AddHandler%2A> method demonstrated in the Visual Basic code above establishes a click event handler for the button."},{"pos":[2844,2852],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Creating Event Handlers in Windows Forms<ept id=\"p1\">](../../../docs/framework/winforms/creating-event-handlers-in-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[2856,2977],"source":"[Creating Event Handlers in Windows Forms](../../../docs/framework/winforms/creating-event-handlers-in-windows-forms.md) "},{"content":"<bpt id=\"p1\">[</bpt>Event Handlers Overview<ept id=\"p1\">](../../../docs/framework/winforms/event-handlers-overview-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[2981,3082],"source":"[Event Handlers Overview](../../../docs/framework/winforms/event-handlers-overview-windows-forms.md) "},{"content":"<bpt id=\"p1\">[</bpt>Troubleshooting Inherited Event Handlers in Visual Basic<ept id=\"p1\">](~/docs/visual-basic/programming-guide/language-features/events/troubleshooting-inherited-event-handlers.md)</ept>","pos":[3086,3252],"source":"[Troubleshooting Inherited Event Handlers in Visual Basic](~/docs/visual-basic/programming-guide/language-features/events/troubleshooting-inherited-event-handlers.md)"}]}