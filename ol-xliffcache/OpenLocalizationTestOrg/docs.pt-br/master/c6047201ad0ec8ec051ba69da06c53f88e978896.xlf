<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="navigation-topologies-overview.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6047201ad0ec8ec051ba69da06c53f88e978896</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\app-development\navigation-topologies-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">299d74708407f99f8dc0addb24eda7e4810c5c35</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f52e59c2c1649aa353ab70990d4772d50b5e720</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Navigation Topologies Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Navigation Topologies Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="introduction"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> This overview provides an introduction to navigation topologies in              <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Three common navigation topologies, with samples, are subsequently discussed.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Before reading this topic, you should be familiar with the concept of structured navigation in                  <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph> using page functions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information on both of these topics, see                  <bpt id="p1">[</bpt>Structured Navigation Overview<ept id="p1">](../../../../docs/framework/wpf/app-development/structured-navigation-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic contains the following sections:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Navigation Topologies<ept id="p1">](#Navigation_Topologies)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Structured Navigation Topologies<ept id="p1">](#Structured_Navigation_Topologies)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Navigation over a Fixed Linear Topology<ept id="p1">](#Navigation_over_a_Fixed_Linear_Topology)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dynamic Navigation over a Fixed Hierarchical Topology<ept id="p1">](#Dynamic_Navigation_over_a_Fixed_Hierarchical_Topology)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Navigation over a Dynamically Generated Topology<ept id="p1">](#Navigation_over_a_Dynamically_Generated_Topology)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Navigation Topologies</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In                  <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../../includes/tla2sharptla-wpf-md.md)]</ph>, navigation typically consists of pages (                 <ph id="ph2">&lt;xref:System.Windows.Controls.Page&gt;</ph>) with hyperlinks (                 <ph id="ph3">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph>) that navigate to other pages when clicked.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Pages that are navigated to are identified by                  <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](../../../../includes/tlasharptla-urisharpplural-md.md)]</ph> (see                  <bpt id="p1">[</bpt>Pack URIs in WPF<ept id="p1">](../../../../docs/framework/wpf/app-development/pack-uris-in-wpf.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Consider the following simple example that shows pages, hyperlinks, and                  <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](../../../../includes/tlasharptla-urisharpplural-md.md)]</ph>:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>These pages are arranged in a                  <bpt id="p1">*</bpt>navigation topology<ept id="p1">*</ept> whose structure is determined by how you can navigate between the pages.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This particular navigation topology is suitable in simple scenarios, although navigation can require more complex topologies, some of which can only be defined when an application is running.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This topic covers three common navigation topologies:                  <bpt id="p1">*</bpt>fixed linear<ept id="p1">*</ept>,                  <bpt id="p2">*</bpt>fixed hierarchical<ept id="p2">*</ept>, and                  <bpt id="p3">*</bpt>dynamically generated<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Each navigation topology is demonstrated with a sample that has a                  <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> like the one that is shown in the following figure:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Task pages with data items<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/app-development/media/navigationtopologyfigure6.png "</bpt>NavigationTopologyFigure6<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Structured Navigation Topologies</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>There are two broad types of navigation topologies:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Fixed Topology<ept id="p1">**</ept>: defined at compile time and does not change at run time.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Fixed topologies are useful for navigation through a fixed sequence of pages in either a linear or hierarchical order.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Dynamic Topology<ept id="p1">**</ept>: defined at run time based on input that is collected from the user, the application, or the system.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Dynamic topologies are useful when pages can be navigated in different sequences.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Although it is possible to create navigation topologies using pages, the samples use page functions because they provide additional support that simplifies support for passing and returning data through the pages of a topology.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Navigation over a Fixed Linear Topology</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A fixed linear topology is analogous to the structure of a wizard that has one or more wizard pages that are navigated in a fixed sequence.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following figure shows the high-level structure and flow of a wizard with a fixed linear topology.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Navigation topology diagram<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/app-development/media/navigationtopologyfigure1.png "</bpt>NavigationTopologyFigure1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The typical behaviors for navigating over a fixed linear topology include the following:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Navigating from the calling page to a launcher page that initializes the wizard and navigates to the first wizard page.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A launcher page (a                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>-less                          <ph id="ph2">&lt;xref:System.Windows.Navigation.PageFunction%601&gt;</ph>) is not required, since a calling page can call the first wizard page directly.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Using a launcher page, however, can simplify wizard initialization, particularly if initialization is complex.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Users can navigate between pages by using Back and Forward buttons (or hyperlinks).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Users can navigate between pages using the journal.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Users can cancel the wizard from any wizard page by pressing a Cancel button.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Users can accept the wizard on the last wizard page by pressing a Finish button.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If a wizard is canceled, the wizard returns an appropriate result, and does not return any data.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If a user accepts a wizard, the wizard returns an appropriate result, and returns the data it collected.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When the wizard is complete (accepted or canceled), the pages that the wizard comprises are removed from the journal.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This keeps each instance of the wizard isolated, thereby avoiding potential data or state anomalies.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Dynamic Navigation over a Fixed Hierarchical Topology</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In some applications, pages allow navigation to two or more other pages, as shown in the following figure.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A page that can navigate to multiple pages<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/app-development/media/navigationtopologyfigure2.png "</bpt>NavigationTopologyFigure2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This structure is known as a fixed hierarchical topology, and the sequence in which the hierarchy is traversed is often determined at run time by either the application or the user.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>At run time, each page in the hierarchy that allows navigation to two or more other pages gathers the data required to determine which page to navigate to.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following figure illustrates one of several possible navigation sequences based on the previous figure.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Navigation topology diagram<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/app-development/media/navigationtopologyfigure3.png "</bpt>NavigationTopologyFigure3<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Even though the sequence in which pages in a fixed hierarchical structure are navigated is determined at run time, the user experience is the same as the user experience for a fixed linear topology:</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Navigating from the calling page to a launcher page that initializes the wizard and navigates to the first wizard page.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A launcher page (a                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>-less                          <ph id="ph2">&lt;xref:System.Windows.Navigation.PageFunction%601&gt;</ph>) is not required, since a calling page can call the first wizard page directly.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Using a launcher page, however, can simplify wizard initialization, particularly if initialization is complex.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Users can navigate between pages by using Back and Forward buttons (or hyperlinks).</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Users can navigate between pages using the journal.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Users can change the navigation sequence if they navigate back through the journal.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Users can cancel the wizard from any wizard page by pressing a Cancel button.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Users can accept the wizard on the last wizard page by pressing a Finish button.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If a wizard is canceled, the wizard returns an appropriate result, and does not return any data.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If a user accepts a wizard, the wizard returns an appropriate result, and returns the data it collected.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When the wizard is complete (accepted or canceled), the pages that the wizard comprises are removed from the journal.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This keeps each instance of the wizard isolated, thereby avoiding potential data or state anomalies.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Navigation over a Dynamically Generated Topology</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In some applications, the sequence in which two or more pages are navigated can only be determined at run time, whether by the user, the application, or external data.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following figure illustrates a set of pages with an undetermined navigation sequence.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Navigation topology diagram<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/app-development/media/navigationtopologyfigure4.png "</bpt>NavigationTopologyFigure4<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The next figure illustrates a navigation sequence that was chosen by the user at run time.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Navigation diagram<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/app-development/media/navigationtopologyfigure5.png "</bpt>NavigationTopologyFigure5<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The navigation sequence is known as a dynamically generated topology.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For the user, as with the other navigation topologies, the user experience is the same as it is for the previous topologies:</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Navigating from the calling page to a launcher page that initializes the wizard and navigates to the first wizard page.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A launcher page (a                          <ph id="ph1">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>-less                          <ph id="ph2">&lt;xref:System.Windows.Navigation.PageFunction%601&gt;</ph>) is not required, since a calling page can call the first wizard page directly.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Using a launcher page, however, can simplify wizard initialization, particularly if initialization is complex.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Users can navigate between pages by using Back and Forward buttons (or hyperlinks).</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Users can navigate between pages using the journal.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Users can cancel the wizard from any wizard page by pressing a Cancel button.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Users can accept the wizard on the last wizard page by pressing a Finish button.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If a wizard is canceled, the wizard returns an appropriate result, and does not return any data.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If a user accepts a wizard, the wizard returns an appropriate result, and returns the data it collected.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When the wizard is complete (accepted or canceled), the pages that the wizard comprises are removed from the journal.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This keeps each instance of the wizard isolated, thereby avoiding potential data or state anomalies.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Structured Navigation Overview<ept id="p1">](../../../../docs/framework/wpf/app-development/structured-navigation-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>