{"content":"---\ntitle: \"Loading a DataSet from XML | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 49c083b7-a5ed-41cf-aabc-5aaba96f00e6\ncaps.latest.revision: 4\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Loading a DataSet from XML\nThe contents of an ADO.NET <xref:System.Data.DataSet> can be created from an XML stream or document. In addition, with the .NET Framework you have great flexibility over what information is loaded from XML, and how the schema or relational structure of the <xref:System.Data.DataSet> is created.  \n  \n To fill a <xref:System.Data.DataSet> with data from XML, use the **ReadXml** method of the <xref:System.Data.DataSet> object. The **ReadXml** method reads from a file, a stream, or an **XmlReader**, and takes as arguments the source of the XML plus an optional **XmlReadMode** argument. (For more information about the **XmlReader**, see [NIB: Reading XML Data with XmlTextReader](http://msdn.microsoft.com/en-us/762c069b-b50c-41b8-936e-39eacfb0d540).) The **ReadXml** method reads the contents of the XML stream or document and loads the <xref:System.Data.DataSet> with data. It will also create the relational schema of the <xref:System.Data.DataSet> depending on the **XmlReadMode** specified and whether or not a relational schema already exists.  \n  \n The following table describes the options for the **XmlReadMode** argument.  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**Auto**|This is the default. Examines the XML and chooses the most appropriate option in the following order:<br /><br /> -   If the XML is a DiffGram, **DiffGram** is used.<br />-   If the <xref:System.Data.DataSet> contains a schema or the XML contains an inline schema, **ReadSchema** is used.<br />-   If the <xref:System.Data.DataSet> does not contain a schema and the XML does not contain an inline schema, **InferSchema** is used.<br /><br /> If you know the format of the XML being read, for best performance it is recommended that you set an explicit **XmlReadMode**, rather than accept the **Auto** default.|  \n|**ReadSchema**|Reads any inline schema and loads the data and schema.<br /><br /> If the <xref:System.Data.DataSet> already contains a schema, new tables are added from the inline schema to the existing schema in the <xref:System.Data.DataSet>. If any tables in the inline schema already exist in the <xref:System.Data.DataSet>, an exception is thrown. You will not be able to modify the schema of an existing table using **XmlReadMode.ReadSchema**.<br /><br /> If the <xref:System.Data.DataSet> does not contain a schema, and there is no inline schema, no data is read.<br /><br /> Inline schema can be defined using XML Schema definition language (XSD) schema. For details about writing inline schema as XML Schema, see [Deriving DataSet Relational Structure from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md).|  \n|**IgnoreSchema**|Ignores any inline schema and loads the data into the existing <xref:System.Data.DataSet> schema. Any data that does not match the existing schema is discarded. If no schema exists in the <xref:System.Data.DataSet>, no data is loaded.<br /><br /> If the data is a DiffGram, **IgnoreSchema** has the same functionality as **DiffGram** *.*|  \n|**InferSchema**|Ignores any inline schema and infers the schema per the structure of the XML data, then loads the data.<br /><br /> If the <xref:System.Data.DataSet> already contains a schema, the current schema is extended by adding columns to existing tables. Extra tables will not be added if there are not existing tables. An exception is thrown if an inferred table already exists with a different namespace, or if any inferred columns conflict with existing columns.<br /><br /> For details about how **ReadXmlSchema** infers a schema from an XML document, see [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md).|  \n|**DiffGram**|Reads a DiffGram and adds the data to the current schema. **DiffGram** merges new rows with existing rows where the unique identifier values match. See \"Merging Data from XML\" at the end of this topic. For more information about DiffGrams, see [DiffGrams](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md).|  \n|**Fragment**|Continues reading multiple XML fragments until the end of the stream is reached. Fragments that match the <xref:System.Data.DataSet> schema are appended to the appropriate tables. Fragments that do not match the <xref:System.Data.DataSet> schema are discarded.|  \n  \n> [!NOTE]\n>  If you pass an **XmlReader** to **ReadXml** that is positioned part of the way into an XML document, **ReadXml** will read to the next element node and will treat that as the root element, reading until the end of the element node only. This does not apply if you specify **XmlReadMode.Fragment**.  \n  \n## DTD Entities  \n If your XML contains entities defined in a document type definition (DTD) schema, an exception will be thrown if you attempt to load a <xref:System.Data.DataSet> by passing a file name, stream, or non-validating **XmlReader** to **ReadXml**. Instead, you must create an **XmlValidatingReader**, with **EntityHandling** set to **EntityHandling.ExpandEntities**, and pass your **XmlValidatingReader** to **ReadXml**. The **XmlValidatingReader** will expand the entities prior to being read by the <xref:System.Data.DataSet>.  \n  \n The following code examples show how to load a <xref:System.Data.DataSet> from an XML stream. The first example shows a file name being passed to the **ReadXml** method. The second example shows a string that contains XML being loaded using a <xref:System.IO.StringReader>.  \n  \n```vb  \nDim dataSet As DataSet = New DataSet  \ndataSet.ReadXml(\"input.xml\", XmlReadMode.ReadSchema)  \n```  \n  \n```csharp  \nDataSet dataSet = new DataSet();  \ndataSet.ReadXml(\"input.xml\", XmlReadMode.ReadSchema);  \n```  \n  \n```vb  \nDim dataSet As DataSet = New DataSet  \nDim dataTable As DataTable = New DataTable(\"table1\")  \ndataTable.Columns.Add(\"col1\", Type.GetType(\"System.String\"))  \ndataSet.Tables.Add(dataTable)  \n  \nDim xmlData As String = \"<XmlDS><table1><col1>Value1</col1></table1><table1><col1>Value2</col1></table1></XmlDS>\"  \n  \nDim xmlSR As System.IO.StringReader = New System.IO.StringReader(xmlData)  \n  \ndataSet.ReadXml(xmlSR, XmlReadMode.IgnoreSchema)  \n```  \n  \n```csharp  \nDataSet dataSet = new DataSet();  \nDataTable dataTable = new DataTable(\"table1\");  \ndataTable.Columns.Add(\"col1\", typeof(string));  \ndataSet.Tables.Add(dataTable);  \n  \nstring xmlData = \"<XmlDS><table1><col1>Value1</col1></table1><table1><col1>Value2</col1></table1></XmlDS>\";  \n  \nSystem.IO.StringReader xmlSR = new System.IO.StringReader(xmlData);  \n  \ndataSet.ReadXml(xmlSR, XmlReadMode.IgnoreSchema);  \n```  \n  \n> [!NOTE]\n>  If you call **ReadXml** to load a very large file, you may encounter slow performance. To ensure best performance for **ReadXml**, on a large file, call the <xref:System.Data.DataTable.BeginLoadData%2A> method for each table in the <xref:System.Data.DataSet>, and then call **ReadXml**. Finally, call <xref:System.Data.DataTable.EndLoadData%2A> for each table in the <xref:System.Data.DataSet>, as shown in the following example.  \n  \n```vb  \nDim dataTable As DataTable  \n  \nFor Each dataTable In dataSet.Tables  \n   dataTable.BeginLoadData()  \nNext  \n  \ndataSet.ReadXml(\"file.xml\")  \n  \nFor Each dataTable in dataSet.Tables  \n   dataTable.EndLoadData()  \nNext  \n```  \n  \n```csharp  \nforeach (DataTable dataTable in dataSet.Tables)  \n   dataTable.BeginLoadData();  \n  \ndataSet.ReadXml(\"file.xml\");   \n  \nforeach (DataTable dataTable in dataSet.Tables)  \n   dataTable.EndLoadData();  \n```  \n  \n> [!NOTE]\n>  If the XSD schema for your <xref:System.Data.DataSet> includes a **targetNamespace**, data may not be read, and you may encounter exceptions, when calling **ReadXml** to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements in this case, set **elementFormDefault** equal to \"qualified\" in your XSD schema. For example:  \n  \n```  \n<xsd:schema id=\"customDataSet\"   \n  elementFormDefault=\"qualified\"  \n  targetNamespace=\"http://www.tempuri.org/customDataSet.xsd\"   \n  xmlns=\"http://www.tempuri.org/customDataSet.xsd\"   \n  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   \n  xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n</xsd:schema>  \n```  \n  \n## Merging Data from XML  \n If the <xref:System.Data.DataSet> already contains data, the new data from the XML is added to the data already present in the <xref:System.Data.DataSet>. **ReadXml** does not merge from the XML into the <xref:System.Data.DataSet> any row information with matching primary keys. To overwrite existing row information with new information from XML, use **ReadXml** to create a new <xref:System.Data.DataSet>, and then <xref:System.Data.DataSet.Merge%2A> the new <xref:System.Data.DataSet> into the existing <xref:System.Data.DataSet>. Note that loading a DiffGram using **ReadXML** with an **XmlReadMode** of **DiffGram** will merge rows that have the same unique identifier.  \n  \n## See Also  \n <xref:System.Data.DataSet.Merge%2A?displayProperty=fullName>   \n [Using XML in a DataSet](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)   \n [DiffGrams](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)   \n [Deriving DataSet Relational Structure from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)   \n [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)   \n [Loading DataSet Schema Information from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-dataset-schema-information-from-xml.md)   \n [DataSets, DataTables, and DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)   \n [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)","nodes":[{"pos":[12,55],"content":"Loading a DataSet from XML | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Loading a DataSet from XML | Microsoft Docs","pos":[0,43]}]},{"pos":[364,390],"content":"Loading a DataSet from XML","linkify":"Loading a DataSet from XML","nodes":[{"content":"Loading a DataSet from XML","pos":[0,26]}]},{"content":"The contents of an ADO.NET <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> can be created from an XML stream or document.","pos":[391,491],"source":"The contents of an ADO.NET <xref:System.Data.DataSet> can be created from an XML stream or document."},{"content":"In addition, with the .NET Framework you have great flexibility over what information is loaded from XML, and how the schema or relational structure of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> is created.","pos":[492,686],"source":" In addition, with the .NET Framework you have great flexibility over what information is loaded from XML, and how the schema or relational structure of the <xref:System.Data.DataSet> is created."},{"content":"To fill a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> with data from XML, use the <bpt id=\"p1\">**</bpt>ReadXml<ept id=\"p1\">**</ept> method of the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph> object.","pos":[693,818],"source":"To fill a <xref:System.Data.DataSet> with data from XML, use the **ReadXml** method of the <xref:System.Data.DataSet> object."},{"content":"The <bpt id=\"p1\">**</bpt>ReadXml<ept id=\"p1\">**</ept> method reads from a file, a stream, or an <bpt id=\"p2\">**</bpt>XmlReader<ept id=\"p2\">**</ept>, and takes as arguments the source of the XML plus an optional <bpt id=\"p3\">**</bpt>XmlReadMode<ept id=\"p3\">**</ept> argument.","pos":[819,979],"source":" The **ReadXml** method reads from a file, a stream, or an **XmlReader**, and takes as arguments the source of the XML plus an optional **XmlReadMode** argument."},{"content":"(For more information about the <bpt id=\"p1\">**</bpt>XmlReader<ept id=\"p1\">**</ept>, see <bpt id=\"p2\">[</bpt>NIB: Reading XML Data with XmlTextReader<ept id=\"p2\">](http://msdn.microsoft.com/en-us/762c069b-b50c-41b8-936e-39eacfb0d540)</ept>.) The <bpt id=\"p3\">**</bpt>ReadXml<ept id=\"p3\">**</ept> method reads the contents of the XML stream or document and loads the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> with data.","pos":[980,1269],"source":" (For more information about the **XmlReader**, see [NIB: Reading XML Data with XmlTextReader](http://msdn.microsoft.com/en-us/762c069b-b50c-41b8-936e-39eacfb0d540).) The **ReadXml** method reads the contents of the XML stream or document and loads the <xref:System.Data.DataSet> with data."},{"content":"It will also create the relational schema of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> depending on the <bpt id=\"p1\">**</bpt>XmlReadMode<ept id=\"p1\">**</ept> specified and whether or not a relational schema already exists.","pos":[1270,1443],"source":" It will also create the relational schema of the <xref:System.Data.DataSet> depending on the **XmlReadMode** specified and whether or not a relational schema already exists."},{"pos":[1450,1525],"content":"The following table describes the options for the <bpt id=\"p1\">**</bpt>XmlReadMode<ept id=\"p1\">**</ept> argument.","source":"The following table describes the options for the **XmlReadMode** argument."},{"content":"Option","pos":[1532,1538]},{"content":"Description","pos":[1539,1550]},{"pos":[1590,1598],"content":"<bpt id=\"p1\">**</bpt>Auto<ept id=\"p1\">**</ept>","source":"**Auto**"},{"content":"This is the default.","pos":[1599,1619]},{"content":"Examines the XML and chooses the most appropriate option in the following order:","pos":[1620,1700]},{"content":"-   If the XML is a DiffGram, <bpt id=\"p1\">**</bpt>DiffGram<ept id=\"p1\">**</ept> is used.","pos":[1713,1764],"source":" -   If the XML is a DiffGram, **DiffGram** is used."},{"content":"-   If the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> contains a schema or the XML contains an inline schema, <bpt id=\"p1\">**</bpt>ReadSchema<ept id=\"p1\">**</ept> is used.","pos":[1770,1887],"source":"-   If the <xref:System.Data.DataSet> contains a schema or the XML contains an inline schema, **ReadSchema** is used."},{"content":"-   If the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> does not contain a schema and the XML does not contain an inline schema, <bpt id=\"p1\">**</bpt>InferSchema<ept id=\"p1\">**</ept> is used.","pos":[1893,2028],"source":"-   If the <xref:System.Data.DataSet> does not contain a schema and the XML does not contain an inline schema, **InferSchema** is used."},{"content":"If you know the format of the XML being read, for best performance it is recommended that you set an explicit <bpt id=\"p1\">**</bpt>XmlReadMode<ept id=\"p1\">**</ept>, rather than accept the <bpt id=\"p2\">**</bpt>Auto<ept id=\"p2\">**</ept> default.","pos":[2041,2208],"source":" If you know the format of the XML being read, for best performance it is recommended that you set an explicit **XmlReadMode**, rather than accept the **Auto** default."},{"pos":[2213,2227],"content":"<bpt id=\"p1\">**</bpt>ReadSchema<ept id=\"p1\">**</ept>","source":"**ReadSchema**"},{"content":"Reads any inline schema and loads the data and schema.","pos":[2228,2282]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> already contains a schema, new tables are added from the inline schema to the existing schema in the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[2295,2457],"source":" If the <xref:System.Data.DataSet> already contains a schema, new tables are added from the inline schema to the existing schema in the <xref:System.Data.DataSet>."},{"content":"If any tables in the inline schema already exist in the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>, an exception is thrown.","pos":[2458,2565],"source":" If any tables in the inline schema already exist in the <xref:System.Data.DataSet>, an exception is thrown."},{"content":"You will not be able to modify the schema of an existing table using <bpt id=\"p1\">**</bpt>XmlReadMode.ReadSchema<ept id=\"p1\">**</ept>.","pos":[2566,2662],"source":" You will not be able to modify the schema of an existing table using **XmlReadMode.ReadSchema**."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> does not contain a schema, and there is no inline schema, no data is read.","pos":[2675,2783],"source":" If the <xref:System.Data.DataSet> does not contain a schema, and there is no inline schema, no data is read."},{"content":"Inline schema can be defined using XML Schema definition language (XSD) schema.","pos":[2796,2875]},{"content":"For details about writing inline schema as XML Schema, see <bpt id=\"p1\">[</bpt>Deriving DataSet Relational Structure from XML Schema (XSD)<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)</ept>.","pos":[2876,3128],"source":" For details about writing inline schema as XML Schema, see [Deriving DataSet Relational Structure from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)."},{"pos":[3133,3149],"content":"<bpt id=\"p1\">**</bpt>IgnoreSchema<ept id=\"p1\">**</ept>","source":"**IgnoreSchema**"},{"content":"Ignores any inline schema and loads the data into the existing <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> schema.","pos":[3150,3247],"source":"Ignores any inline schema and loads the data into the existing <xref:System.Data.DataSet> schema."},{"content":"Any data that does not match the existing schema is discarded.","pos":[3248,3310]},{"content":"If no schema exists in the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>, no data is loaded.","pos":[3311,3384],"source":" If no schema exists in the <xref:System.Data.DataSet>, no data is loaded."},{"content":"If the data is a DiffGram, <bpt id=\"p1\">**</bpt>IgnoreSchema<ept id=\"p1\">**</ept> has the same functionality as <bpt id=\"p2\">**</bpt>DiffGram<ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>.<ept id=\"p3\">*</ept>","pos":[3397,3487],"source":" If the data is a DiffGram, **IgnoreSchema** has the same functionality as **DiffGram** *.*"},{"pos":[3492,3507],"content":"<bpt id=\"p1\">**</bpt>InferSchema<ept id=\"p1\">**</ept>","source":"**InferSchema**"},{"content":"Ignores any inline schema and infers the schema per the structure of the XML data, then loads the data.","pos":[3508,3611]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> already contains a schema, the current schema is extended by adding columns to existing tables.","pos":[3624,3753],"source":" If the <xref:System.Data.DataSet> already contains a schema, the current schema is extended by adding columns to existing tables."},{"content":"Extra tables will not be added if there are not existing tables.","pos":[3754,3818]},{"content":"An exception is thrown if an inferred table already exists with a different namespace, or if any inferred columns conflict with existing columns.","pos":[3819,3964]},{"content":"For details about how <bpt id=\"p1\">**</bpt>ReadXmlSchema<ept id=\"p1\">**</ept> infers a schema from an XML document, see <bpt id=\"p2\">[</bpt>Inferring DataSet Relational Structure from XML<ept id=\"p2\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)</ept>.","pos":[3977,4230],"source":" For details about how **ReadXmlSchema** infers a schema from an XML document, see [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)."},{"pos":[4235,4247],"content":"<bpt id=\"p1\">**</bpt>DiffGram<ept id=\"p1\">**</ept>","source":"**DiffGram**"},{"content":"Reads a DiffGram and adds the data to the current schema.","pos":[4248,4305]},{"content":"<bpt id=\"p1\">**</bpt>DiffGram<ept id=\"p1\">**</ept> merges new rows with existing rows where the unique identifier values match.","pos":[4306,4395],"source":"**DiffGram** merges new rows with existing rows where the unique identifier values match."},{"content":"See \"Merging Data from XML\" at the end of this topic.","pos":[4396,4449]},{"content":"For more information about DiffGrams, see <bpt id=\"p1\">[</bpt>DiffGrams<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept>.","pos":[4450,4587],"source":" For more information about DiffGrams, see [DiffGrams](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)."},{"pos":[4592,4604],"content":"<bpt id=\"p1\">**</bpt>Fragment<ept id=\"p1\">**</ept>","source":"**Fragment**"},{"content":"Continues reading multiple XML fragments until the end of the stream is reached.","pos":[4605,4685]},{"content":"Fragments that match the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> schema are appended to the appropriate tables.","pos":[4686,4784],"source":" Fragments that match the <xref:System.Data.DataSet> schema are appended to the appropriate tables."},{"content":"Fragments that do not match the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> schema are discarded.","pos":[4785,4865],"source":" Fragments that do not match the <xref:System.Data.DataSet> schema are discarded."},{"pos":[4874,5182],"content":"[!NOTE]\n If you pass an **XmlReader** to **ReadXml** that is positioned part of the way into an XML document, **ReadXml** will read to the next element node and will treat that as the root element, reading until the end of the element node only. This does not apply if you specify **XmlReadMode.Fragment**.","leadings":["","> "],"nodes":[{"content":" If you pass an **XmlReader** to **ReadXml** that is positioned part of the way into an XML document, **ReadXml** will read to the next element node and will treat that as the root element, reading until the end of the element node only. This does not apply if you specify **XmlReadMode.Fragment**.","pos":[8,306],"nodes":[{"content":"If you pass an <bpt id=\"p1\">**</bpt>XmlReader<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>ReadXml<ept id=\"p2\">**</ept> that is positioned part of the way into an XML document, <bpt id=\"p3\">**</bpt>ReadXml<ept id=\"p3\">**</ept> will read to the next element node and will treat that as the root element, reading until the end of the element node only.","pos":[1,237],"source":" If you pass an **XmlReader** to **ReadXml** that is positioned part of the way into an XML document, **ReadXml** will read to the next element node and will treat that as the root element, reading until the end of the element node only."},{"content":"This does not apply if you specify <bpt id=\"p1\">**</bpt>XmlReadMode.Fragment<ept id=\"p1\">**</ept>.","pos":[238,298],"source":" This does not apply if you specify **XmlReadMode.Fragment**."}]}]},{"pos":[5191,5203],"content":"DTD Entities","linkify":"DTD Entities","nodes":[{"content":"DTD Entities","pos":[0,12]}]},{"content":"If your XML contains entities defined in a document type definition (DTD) schema, an exception will be thrown if you attempt to load a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> by passing a file name, stream, or non-validating <bpt id=\"p1\">**</bpt>XmlReader<ept id=\"p1\">**</ept> to <bpt id=\"p2\">**</bpt>ReadXml<ept id=\"p2\">**</ept>.","pos":[5207,5448],"source":"If your XML contains entities defined in a document type definition (DTD) schema, an exception will be thrown if you attempt to load a <xref:System.Data.DataSet> by passing a file name, stream, or non-validating **XmlReader** to **ReadXml**."},{"content":"Instead, you must create an <bpt id=\"p1\">**</bpt>XmlValidatingReader<ept id=\"p1\">**</ept>, with <bpt id=\"p2\">**</bpt>EntityHandling<ept id=\"p2\">**</ept> set to <bpt id=\"p3\">**</bpt>EntityHandling.ExpandEntities<ept id=\"p3\">**</ept>, and pass your <bpt id=\"p4\">**</bpt>XmlValidatingReader<ept id=\"p4\">**</ept> to <bpt id=\"p5\">**</bpt>ReadXml<ept id=\"p5\">**</ept>.","pos":[5449,5621],"source":" Instead, you must create an **XmlValidatingReader**, with **EntityHandling** set to **EntityHandling.ExpandEntities**, and pass your **XmlValidatingReader** to **ReadXml**."},{"content":"The <bpt id=\"p1\">**</bpt>XmlValidatingReader<ept id=\"p1\">**</ept> will expand the entities prior to being read by the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[5622,5729],"source":" The **XmlValidatingReader** will expand the entities prior to being read by the <xref:System.Data.DataSet>."},{"content":"The following code examples show how to load a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> from an XML stream.","pos":[5736,5829],"source":"The following code examples show how to load a <xref:System.Data.DataSet> from an XML stream."},{"content":"The first example shows a file name being passed to the <bpt id=\"p1\">**</bpt>ReadXml<ept id=\"p1\">**</ept> method.","pos":[5830,5905],"source":" The first example shows a file name being passed to the **ReadXml** method."},{"content":"The second example shows a string that contains XML being loaded using a <ph id=\"ph1\">&lt;xref:System.IO.StringReader&gt;</ph>.","pos":[5906,6009],"source":" The second example shows a string that contains XML being loaded using a <xref:System.IO.StringReader>."},{"pos":[7126,7566],"content":"[!NOTE]\n If you call **ReadXml** to load a very large file, you may encounter slow performance. To ensure best performance for **ReadXml**, on a large file, call the <xref:System.Data.DataTable.BeginLoadData%2A> method for each table in the <xref:System.Data.DataSet>, and then call **ReadXml**. Finally, call <xref:System.Data.DataTable.EndLoadData%2A> for each table in the <xref:System.Data.DataSet>, as shown in the following example.","leadings":["","> "],"nodes":[{"content":" If you call **ReadXml** to load a very large file, you may encounter slow performance. To ensure best performance for **ReadXml**, on a large file, call the <xref:System.Data.DataTable.BeginLoadData%2A> method for each table in the <xref:System.Data.DataSet>, and then call **ReadXml**. Finally, call <xref:System.Data.DataTable.EndLoadData%2A> for each table in the <xref:System.Data.DataSet>, as shown in the following example.","pos":[8,438],"nodes":[{"content":"If you call <bpt id=\"p1\">**</bpt>ReadXml<ept id=\"p1\">**</ept> to load a very large file, you may encounter slow performance.","pos":[1,87],"source":" If you call **ReadXml** to load a very large file, you may encounter slow performance."},{"content":"To ensure best performance for <bpt id=\"p1\">**</bpt>ReadXml<ept id=\"p1\">**</ept>, on a large file, call the <ph id=\"ph1\">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> method for each table in the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>, and then call <bpt id=\"p2\">**</bpt>ReadXml<ept id=\"p2\">**</ept>.","pos":[88,287],"source":" To ensure best performance for **ReadXml**, on a large file, call the <xref:System.Data.DataTable.BeginLoadData%2A> method for each table in the <xref:System.Data.DataSet>, and then call **ReadXml**."},{"content":"Finally, call <ph id=\"ph1\">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph> for each table in the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>, as shown in the following example.","pos":[288,430],"source":" Finally, call <xref:System.Data.DataTable.EndLoadData%2A> for each table in the <xref:System.Data.DataSet>, as shown in the following example."}]}]},{"pos":[8032,8434],"content":"[!NOTE]\n If the XSD schema for your <xref:System.Data.DataSet> includes a **targetNamespace**, data may not be read, and you may encounter exceptions, when calling **ReadXml** to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements in this case, set **elementFormDefault** equal to \"qualified\" in your XSD schema. For example:","leadings":["","> "],"nodes":[{"content":" If the XSD schema for your <xref:System.Data.DataSet> includes a **targetNamespace**, data may not be read, and you may encounter exceptions, when calling **ReadXml** to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace. To read unqualified elements in this case, set **elementFormDefault** equal to \"qualified\" in your XSD schema. For example:","pos":[8,400],"nodes":[{"content":"If the XSD schema for your <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> includes a <bpt id=\"p1\">**</bpt>targetNamespace<ept id=\"p1\">**</ept>, data may not be read, and you may encounter exceptions, when calling <bpt id=\"p2\">**</bpt>ReadXml<ept id=\"p2\">**</ept> to load the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.","pos":[1,268],"source":" If the XSD schema for your <xref:System.Data.DataSet> includes a **targetNamespace**, data may not be read, and you may encounter exceptions, when calling **ReadXml** to load the <xref:System.Data.DataSet> with XML that contains elements with no qualifying namespace."},{"content":"To read unqualified elements in this case, set <bpt id=\"p1\">**</bpt>elementFormDefault<ept id=\"p1\">**</ept> equal to \"qualified\" in your XSD schema.","pos":[269,379],"source":" To read unqualified elements in this case, set **elementFormDefault** equal to \"qualified\" in your XSD schema."},{"content":"For example:","pos":[380,392]}]}]},{"pos":[8768,8789],"content":"Merging Data from XML","linkify":"Merging Data from XML","nodes":[{"content":"Merging Data from XML","pos":[0,21]}]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> already contains data, the new data from the XML is added to the data already present in the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[8793,8947],"source":"If the <xref:System.Data.DataSet> already contains data, the new data from the XML is added to the data already present in the <xref:System.Data.DataSet>."},{"content":"<bpt id=\"p1\">**</bpt>ReadXml<ept id=\"p1\">**</ept> does not merge from the XML into the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> any row information with matching primary keys.","pos":[8948,9071],"source":"**ReadXml** does not merge from the XML into the <xref:System.Data.DataSet> any row information with matching primary keys."},{"content":"To overwrite existing row information with new information from XML, use <bpt id=\"p1\">**</bpt>ReadXml<ept id=\"p1\">**</ept> to create a new <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>, and then <ph id=\"ph2\">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> the new <ph id=\"ph3\">&lt;xref:System.Data.DataSet&gt;</ph> into the existing <ph id=\"ph4\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[9072,9326],"source":" To overwrite existing row information with new information from XML, use **ReadXml** to create a new <xref:System.Data.DataSet>, and then <xref:System.Data.DataSet.Merge%2A> the new <xref:System.Data.DataSet> into the existing <xref:System.Data.DataSet>."},{"content":"Note that loading a DiffGram using <bpt id=\"p1\">**</bpt>ReadXML<ept id=\"p1\">**</ept> with an <bpt id=\"p2\">**</bpt>XmlReadMode<ept id=\"p2\">**</ept> of <bpt id=\"p3\">**</bpt>DiffGram<ept id=\"p3\">**</ept> will merge rows that have the same unique identifier.","pos":[9327,9467],"source":" Note that loading a DiffGram using **ReadXML** with an **XmlReadMode** of **DiffGram** will merge rows that have the same unique identifier."},{"pos":[9476,9484],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.DataSet.Merge%2A?displayProperty=fullName&gt;</ph>","pos":[9488,9548],"source":"<xref:System.Data.DataSet.Merge%2A?displayProperty=fullName> "},{"content":"<bpt id=\"p1\"> [</bpt>Using XML in a DataSet<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)</ept><ph id=\"ph1\"> </ph>","pos":[9552,9674],"source":" [Using XML in a DataSet](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md) "},{"content":"<bpt id=\"p1\"> [</bpt>DiffGrams<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept><ph id=\"ph1\"> </ph>","pos":[9677,9773],"source":" [DiffGrams](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Deriving DataSet Relational Structure from XML Schema (XSD)<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)</ept><ph id=\"ph1\"> </ph>","pos":[9776,9970],"source":" [Deriving DataSet Relational Structure from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Inferring DataSet Relational Structure from XML<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)</ept><ph id=\"ph1\"> </ph>","pos":[9973,10145],"source":" [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Loading DataSet Schema Information from XML<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-dataset-schema-information-from-xml.md)</ept><ph id=\"ph1\"> </ph>","pos":[10148,10312],"source":" [Loading DataSet Schema Information from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-dataset-schema-information-from-xml.md) "},{"content":"<bpt id=\"p1\"> [</bpt>DataSets, DataTables, and DataViews<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[10315,10433],"source":" [DataSets, DataTables, and DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept>","pos":[10436,10540],"source":" [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)"}]}