{"content":"---\ntitle: \"XPathNodeIterator in Transformations\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 2bc6ddc6-674a-4f75-b264-abc35e4e5857\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# XPathNodeIterator in Transformations\nThe <xref:System.Xml.XPath.XPathNodeIterator> provides methods to iterate over a set of nodes created as the result of an XML Path Language (XPath) query or a result tree fragment converted to a node set by use of the node-set method. The <xref:System.Xml.XPath.XPathNodeIterator> enables you to iterate over the nodes within that node set. Once a node set is retrieved, the <xref:System.Xml.XPath.XPathNodeIterator> class provides a read-only, forward-only cursor to the selected set of nodes. The node set is created in document order, so calling this method moves to the next node in document order. <xref:System.Xml.XPath.XPathNodeIterator> does not build a node tree of all the nodes in the set. Instead, it provides a single node window into the data, exposing the underlying node it points to as you move around in the tree. The methods and properties available from the <xref:System.Xml.XPath.XPathNodeIterator> class enable you to get information from the current node. For a list of the available methods and properties, see <xref:System.Windows.Forms.ToolBar>.  \n  \n Since an <xref:System.Xml.XPath.XPathNodeIterator> moves over a set of nodes created from an XPath query and moves forward only, the way to move is by using the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method. The return type of this method is `Boolean`, returning `true` if it moves to the next selected node, and `false` if there are no more selected nodes. If it returns `true`, the following list shows the properties available:  \n  \n-   <xref:System.Xml.XPath.XPathNodeIterator.Current%2A>  \n  \n-   <xref:System.Xml.XPath.XPathNodeIterator.CurrentPosition%2A>  \n  \n-   <xref:System.Xml.XPath.XPathNodeIterator.Count%2A>  \n  \n When you are looking at a node set for the first time, a call to <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> must be made to position the <xref:System.Xml.XPath.XPathNodeIterator> on the first node of the selected set. This allows a while loop to be written.  \n  \n The following code example shows how to pass an <xref:System.Xml.XPath.XPathNodeIterator> to an <xref:System.Xml.Xsl.XslTransform> as a parameter in the <xref:System.Xml.Xsl.XsltArgumentList>. The input to the code is **books.xml**, and the style sheet is **text.xsl**. The file **test.xml** is the <xref:System.Xml.XPath.XPathDocument>.  \n  \n```vb  \nImports System  \nImports System.IO  \nImports System.Xml  \nImports System.Xml.Xsl  \nImports System.Xml.XPath  \nImports System.Text  \n  \nPublic Class sample  \n  \n   Public Shared Sub Main()  \n      Dim Doc As New XPathDocument(\"books.xml\")  \n      Dim nav As XPathNavigator = Doc.CreateNavigator()  \n      Dim Iterator As XPathNodeIterator = nav.Select(\"/bookstore/book\")  \n  \n      Dim arg As New XsltArgumentList()  \n      arg.AddParam(\"param1\", \"\", Iterator)  \n  \n      Dim xslt As New XslTransform()  \n      xslt.Load(\"test.xsl\")  \n  \n      Dim xd As New XPathDocument(\"test.xml\")  \n  \n      Dim strmTemp = New FileStream(\"out.xml\", FileMode.Create, FileAccess.ReadWrite)  \n      xslt.Transform(xd, arg, strmTemp, Nothing)  \n   End Sub 'Main  \nEnd Class 'sample  \n```  \n  \n```csharp  \nusing System;  \nusing System.IO;  \nusing System.Xml;  \nusing System.Xml.Xsl;  \nusing System.Xml.XPath;  \nusing System.Text;  \n  \npublic class sample  \n{  \n    public static void Main()  \n    {  \n        XPathDocument Doc = new XPathDocument(\"books.xml\");  \n        XPathNavigator nav = Doc.CreateNavigator();  \n        XPathNodeIterator Iterator = nav.Select(\"/bookstore/book\");  \n  \n        XsltArgumentList arg = new XsltArgumentList();  \n        arg.AddParam(\"param1\", \"\", Iterator);  \n  \n        XslTransform xslt = new XslTransform();  \n        xslt.Load(\"test.xsl\");  \n  \n        XPathDocument xd = new XPathDocument(\"test.xml\");  \n  \n        Stream strmTemp = new FileStream(\"out.xml\", FileMode.Create, FileAccess.ReadWrite);  \n        xslt.Transform(xd, arg, strmTemp, null);  \n    }  \n}  \n```  \n  \n## books.xml  \n  \n```xml  \n<?xml version='1.0'?>  \n<!-- This file represents a fragment of a book store inventory database. -->  \n<bookstore specialty=\"novel\">  \n    <book style=\"autobiography\">  \n    <title>Seven Years in Trenton</title>  \n        <author>  \n            <first-name>Jay</first-name>  \n            <last-name>Adams</last-name>  \n            <award>Trenton Literary Review Honorable Mention</award>  \n            <country>USA</country>  \n        </author>  \n        <price>12</price>  \n    </book>  \n    <book style=\"textbook\">  \n        <title>History of Trenton</title>  \n        <author>  \n            <first-name>Kim</first-name>  \n            <last-name>Akers</last-name>  \n            <publication>  \n                Selected Short Stories of  \n                <first-name>Scott</first-name>  \n                <last-name>Bishop</last-name>  \n                <country>US</country>  \n            </publication>  \n        </author>  \n        <price>55</price>  \n    </book>  \n</bookstore>  \n```  \n  \n## test.xsl  \n  \n```xml  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  \nxmlns:msxsl=\"urn:schemas-microsoft-com:xslt\" exclude-result-prefixes=\"msxsl\">  \n  \n<xsl:output method=\"xml\" indent=\"yes\"/>  \n<xsl:param name=\"param1\"/>  \n  \n<xsl:template match=\"/\">  \n    <out>  \n        <xsl:for-each select=\"$param1/title\">  \n            <title><xsl:value-of select=\".\"/></title>  \n        </xsl:for-each>  \n    </out>  \n</xsl:template>  \n  \n</xsl:stylesheet>  \n```  \n  \n## test.xml  \n  \n```xml  \n<Title attr=\"Test\">this is a test</Title>  \n```  \n  \n## Output (out.xml)  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<out>  \n  <title>Seven Years in Trenton</title>  \n  <title>History of Trenton</title>  \n</out>  \n```  \n  \n## See also\n\n- [XslTransform Class Implements the XSLT Processor](../../../../docs/standard/data/xml/xsltransform-class-implements-the-xslt-processor.md)\n","nodes":[{"pos":[4,222],"embed":true,"restype":"x-metadata","content":"title: \"XPathNodeIterator in Transformations\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 2bc6ddc6-674a-4f75-b264-abc35e4e5857\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"XPathNodeIterator in Transformations","nodes":[{"pos":[0,36],"content":"XPathNodeIterator in Transformations","nodes":[{"content":"XPathNodeIterator in Transformations","pos":[0,36]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[229,265],"content":"XPathNodeIterator in Transformations","linkify":"XPathNodeIterator in Transformations","nodes":[{"content":"XPathNodeIterator in Transformations","pos":[0,36]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> provides methods to iterate over a set of nodes created as the result of an XML Path Language (XPath) query or a result tree fragment converted to a node set by use of the node-set method.","pos":[266,500],"source":"The <xref:System.Xml.XPath.XPathNodeIterator> provides methods to iterate over a set of nodes created as the result of an XML Path Language (XPath) query or a result tree fragment converted to a node set by use of the node-set method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> enables you to iterate over the nodes within that node set.","pos":[501,606],"source":" The <xref:System.Xml.XPath.XPathNodeIterator> enables you to iterate over the nodes within that node set."},{"content":"Once a node set is retrieved, the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class provides a read-only, forward-only cursor to the selected set of nodes.","pos":[607,760],"source":" Once a node set is retrieved, the <xref:System.Xml.XPath.XPathNodeIterator> class provides a read-only, forward-only cursor to the selected set of nodes."},{"content":"The node set is created in document order, so calling this method moves to the next node in document order.","pos":[761,868]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> does not build a node tree of all the nodes in the set.","pos":[869,966],"source":"<xref:System.Xml.XPath.XPathNodeIterator> does not build a node tree of all the nodes in the set."},{"content":"Instead, it provides a single node window into the data, exposing the underlying node it points to as you move around in the tree.","pos":[967,1097]},{"content":"The methods and properties available from the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class enable you to get information from the current node.","pos":[1098,1244],"source":" The methods and properties available from the <xref:System.Xml.XPath.XPathNodeIterator> class enable you to get information from the current node."},{"content":"For a list of the available methods and properties, see <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>.","pos":[1245,1337],"source":" For a list of the available methods and properties, see <xref:System.Windows.Forms.ToolBar>."},{"content":"Since an <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> moves over a set of nodes created from an XPath query and moves forward only, the way to move is by using the <ph id=\"ph2\">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method.","pos":[1344,1566],"source":"Since an <xref:System.Xml.XPath.XPathNodeIterator> moves over a set of nodes created from an XPath query and moves forward only, the way to move is by using the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method."},{"content":"The return type of this method is <ph id=\"ph1\">`Boolean`</ph>, returning <ph id=\"ph2\">`true`</ph> if it moves to the next selected node, and <ph id=\"ph3\">`false`</ph> if there are no more selected nodes.","pos":[1567,1716],"source":" The return type of this method is `Boolean`, returning `true` if it moves to the next selected node, and `false` if there are no more selected nodes."},{"content":"If it returns <ph id=\"ph1\">`true`</ph>, the following list shows the properties available:","pos":[1717,1789],"source":" If it returns `true`, the following list shows the properties available:"},{"content":"When you are looking at a node set for the first time, a call to <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> must be made to position the <ph id=\"ph2\">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> on the first node of the selected set.","pos":[1988,2216],"source":"When you are looking at a node set for the first time, a call to <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> must be made to position the <xref:System.Xml.XPath.XPathNodeIterator> on the first node of the selected set."},{"content":"This allows a while loop to be written.","pos":[2217,2256]},{"content":"The following code example shows how to pass an <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> to an <ph id=\"ph2\">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> as a parameter in the <ph id=\"ph3\">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph>.","pos":[2263,2455],"source":"The following code example shows how to pass an <xref:System.Xml.XPath.XPathNodeIterator> to an <xref:System.Xml.Xsl.XslTransform> as a parameter in the <xref:System.Xml.Xsl.XsltArgumentList>."},{"content":"The input to the code is <bpt id=\"p1\">**</bpt>books.xml<ept id=\"p1\">**</ept>, and the style sheet is <bpt id=\"p2\">**</bpt>text.xsl<ept id=\"p2\">**</ept>.","pos":[2456,2532],"source":" The input to the code is **books.xml**, and the style sheet is **text.xsl**."},{"content":"The file <bpt id=\"p1\">**</bpt>test.xml<ept id=\"p1\">**</ept> is the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph>.","pos":[2533,2600],"source":" The file **test.xml** is the <xref:System.Xml.XPath.XPathDocument>."},{"pos":[4211,4220],"content":"books.xml","linkify":"books.xml","nodes":[{"content":"books.xml","pos":[0,9]}]},{"pos":[5230,5238],"content":"test.xsl","linkify":"test.xsl","nodes":[{"content":"test.xsl","pos":[0,8]}]},{"pos":[5726,5734],"content":"test.xml","linkify":"test.xml","nodes":[{"content":"test.xml","pos":[0,8]}]},{"pos":[5805,5821],"content":"Output (out.xml)","linkify":"Output (out.xml)","nodes":[{"content":"Output (out.xml)","pos":[0,16]}]},{"pos":[5986,5994],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5998,6136],"content":"<bpt id=\"p1\">[</bpt>XslTransform Class Implements the XSLT Processor<ept id=\"p1\">](../../../../docs/standard/data/xml/xsltransform-class-implements-the-xslt-processor.md)</ept>","source":"[XslTransform Class Implements the XSLT Processor](../../../../docs/standard/data/xml/xsltransform-class-implements-the-xslt-processor.md)"}]}