{"content":"---\ntitle: \"IMetaDataImport::GetRVA Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IMetaDataImport.GetRVA\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IMetaDataImport::GetRVA\"\nhelpviewer_keywords: \n  - \"GetRVA method [.NET Framework metadata]\"\n  - \"IMetaDataImport::GetRVA method [.NET Framework metadata]\"\nms.assetid: ea422217-988b-4acd-b2db-c55357938275\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# IMetaDataImport::GetRVA Method\nGets the relative virtual address (RVA) and the implementation flags of the method or field represented by the specified token.  \n  \n## Syntax  \n  \n```  \nHRESULT GetRVA (  \n   [in]  mdToken     tk,   \n   [out] ULONG       *pulCodeRVA,   \n   [out]  DWORD      *pdwImplFlags  \n);  \n```  \n  \n## Parameters  \n `tk`  \n [in] A MethodDef or FieldDef metadata token that represents the code object to return the RVA for. If the token is a FieldDef, the field must be a global variable.  \n  \n `pulCodeRVA`  \n [out] A pointer to the relative virtual address of the code object represented by the token.  \n  \n `pdwImplFlags`  \n [out] A pointer to the implementation flags for the method. This value is a bitmask from the [CorMethodImpl](../../../../docs/framework/unmanaged-api/metadata/cormethodimpl-enumeration.md) enumeration. The value of `pdwImplFlags` is valid only if `tk` is a MethodDef token.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** Cor.h  \n  \n **Library:** Included as a resource in MsCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See also\n\n- [IMetaDataImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)\n- [IMetaDataImport2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)\n","nodes":[{"pos":[4,446],"embed":true,"restype":"x-metadata","content":"title: \"IMetaDataImport::GetRVA Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IMetaDataImport.GetRVA\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IMetaDataImport::GetRVA\"\nhelpviewer_keywords: \n  - \"GetRVA method [.NET Framework metadata]\"\n  - \"IMetaDataImport::GetRVA method [.NET Framework metadata]\"\nms.assetid: ea422217-988b-4acd-b2db-c55357938275\ntopic_type: \n  - \"apiref\"\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"IMetaDataImport::GetRVA Method","nodes":[{"pos":[0,30],"content":"IMetaDataImport::GetRVA Method","nodes":[{"content":"IMetaDataImport::GetRVA Method","pos":[0,30]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[453,483],"content":"IMetaDataImport::GetRVA Method","linkify":"IMetaDataImport::GetRVA Method","nodes":[{"content":"IMetaDataImport::GetRVA Method","pos":[0,30]}]},{"content":"Gets the relative virtual address (RVA) and the implementation flags of the method or field represented by the specified token.","pos":[484,611]},{"pos":[620,626],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[776,786],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A MethodDef or FieldDef metadata token that represents the code object to return the RVA for.","pos":[798,896]},{"content":"If the token is a FieldDef, the field must be a global variable.","pos":[897,961]},{"content":"[out] A pointer to the relative virtual address of the code object represented by the token.","pos":[984,1076]},{"content":"[out] A pointer to the implementation flags for the method.","pos":[1101,1160]},{"content":"This value is a bitmask from the <bpt id=\"p1\">[</bpt>CorMethodImpl<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/cormethodimpl-enumeration.md)</ept> enumeration.","pos":[1161,1302],"source":" This value is a bitmask from the [CorMethodImpl](../../../../docs/framework/unmanaged-api/metadata/cormethodimpl-enumeration.md) enumeration."},{"content":"The value of <ph id=\"ph1\">`pdwImplFlags`</ph> is valid only if <ph id=\"ph2\">`tk`</ph> is a MethodDef token.","pos":[1303,1374],"source":" The value of `pdwImplFlags` is valid only if `tk` is a MethodDef token."},{"pos":[1383,1395],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1399,1503],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[1510,1527],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> Cor.h","source":"**Header:** Cor.h"},{"pos":[1534,1584],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MsCorEE.dll","source":"**Library:** Included as a resource in MsCorEE.dll"},{"pos":[1591,1699],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[1708,1716],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1720,1827],"content":"<bpt id=\"p1\">[</bpt>IMetaDataImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)</ept>","source":"[IMetaDataImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)"},{"pos":[1830,1939],"content":"<bpt id=\"p1\">[</bpt>IMetaDataImport2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)</ept>","source":"[IMetaDataImport2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)"}]}