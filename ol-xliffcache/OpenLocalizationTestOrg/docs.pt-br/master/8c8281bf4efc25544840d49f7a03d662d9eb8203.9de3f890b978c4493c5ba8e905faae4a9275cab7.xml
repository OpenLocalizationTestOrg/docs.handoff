{"content":"---\ntitle: \"How to: Override the Logical Tree | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"overriding the logical tree\"\n  - \"logical tree, overriding\"\nms.assetid: 0ae4d074-8113-4b06-b4fa-e0f39d4967a6\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Override the Logical Tree\nAlthough it is not necessary in most cases, advanced control authors have the option to override the logical tree.  \n  \n## Example  \n This example describes how to subclass <xref:System.Windows.Controls.StackPanel> to override the logical tree, in this case to enforce a behavior that the panel may only have and will only render a single child element. This isn't necessarily a practically desirable behavior, but is shown here as a means of illustrating the scenario for overriding an element's normal logical tree.  \n  \n [!code-csharp[LogicalOverride#SingletonPanel](../../../../samples/snippets/csharp/VS_Snippets_Wpf/LogicalOverride/CSharp/SDKSampleLibrary/class1.cs#singletonpanel)]  \n  \n For more information on the logical tree, see [Trees in WPF](../../../../docs/framework/wpf/advanced/trees-in-wpf.md).","nodes":[{"pos":[4,449],"embed":true,"restype":"x-metadata","content":"title: \"How to: Override the Logical Tree | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"overriding the logical tree\"\n  - \"logical tree, overriding\"\nms.assetid: 0ae4d074-8113-4b06-b4fa-e0f39d4967a6\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Override the Logical Tree | Microsoft Docs","nodes":[{"pos":[0,50],"content":"How to: Override the Logical Tree | Microsoft Docs","nodes":[{"content":"How to: Override the Logical Tree | Microsoft Docs","pos":[0,50]}]}],"path":["title"]}],"yml":true},{"pos":[456,489],"content":"How to: Override the Logical Tree","linkify":"How to: Override the Logical Tree","nodes":[{"content":"How to: Override the Logical Tree","pos":[0,33]}]},{"content":"Although it is not necessary in most cases, advanced control authors have the option to override the logical tree.","pos":[490,604]},{"pos":[613,620],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example describes how to subclass <ph id=\"ph1\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> to override the logical tree, in this case to enforce a behavior that the panel may only have and will only render a single child element.","pos":[624,843],"source":"This example describes how to subclass <xref:System.Windows.Controls.StackPanel> to override the logical tree, in this case to enforce a behavior that the panel may only have and will only render a single child element."},{"content":"This isn't necessarily a practically desirable behavior, but is shown here as a means of illustrating the scenario for overriding an element's normal logical tree.","pos":[844,1007]},{"pos":[1185,1303],"content":"For more information on the logical tree, see <bpt id=\"p1\">[</bpt>Trees in WPF<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.","source":"For more information on the logical tree, see [Trees in WPF](../../../../docs/framework/wpf/advanced/trees-in-wpf.md)."}]}