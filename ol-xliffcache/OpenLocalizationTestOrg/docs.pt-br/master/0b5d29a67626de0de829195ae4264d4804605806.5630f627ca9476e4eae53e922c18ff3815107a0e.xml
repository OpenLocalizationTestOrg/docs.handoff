{"content":"---\ntitle: \"Variable &#39;&lt;variablename&gt;&#39; is passed by reference before it has been assigned a value | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vbc42030\"\n  - \"BC42030\"\nhelpviewer_keywords: \n  - \"BC42030\"\nms.assetid: 8f1aae99-f032-4fdf-b6dc-3360cc5b94de\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Variable &#39;&lt;variablename&gt;&#39; is passed by reference before it has been assigned a value\nVariable '\\<variablename>' is passed by reference before it has been assigned a value. A null reference exception could result at run time.  \n  \n A procedure call passes a variable as an argument to a `ByRef` parameter before any value is assigned to the variable.  \n  \n If a variable has never been assigned a value, it holds the default value for its data type. For a reference data type, that default value is [Nothing](../../visual-basic/language-reference/nothing.md). Reading a reference variable that has a value of `Nothing` can cause a <xref:System.NullReferenceException> in some circumstances.  \n  \n Passing an argument to a procedure `ByRef` exposes the variable underlying the argument to possible modification by the procedure.  \n  \n By default, this message is a warning. For more information about hiding warnings or treating warnings as errors, see [Configuring Warnings in Visual Basic](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic).  \n  \n **Error ID:** BC42030  \n  \n## To correct this error  \n  \n-   If you intend the procedure to assign a value to the variable through the `ByRef` argument, and if it does not matter whether the variable already holds a value, then no action is necessary.  \n  \n-   If the logic in the procedure reads the argument before assigning any value to it, and if the variable is of a value type, then make sure that the procedure logic does not depend on whether the variable holds its default value or not.  \n  \n-   If the logic in the procedure reads the argument before assigning any value to it, and if the variable is of a reference type, then make sure that the procedure logic can handle a value of `Nothing`. For example, it could use a [Try...Catch...Finally Statement](../../visual-basic/language-reference/statements/try-catch-finally-statement.md) to catch a <xref:System.NullReferenceException>.  \n  \n## See Also  \n [Dim Statement](../../visual-basic/language-reference/statements/dim-statement.md)   \n [Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)   \n [Passing Arguments by Value and by Reference](../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-value-and-by-reference.md)   \n [ByRef](../../visual-basic/language-reference/modifiers/byref.md)   \n [Variable Declaration](../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)   \n [Troubleshooting Variables](../../visual-basic/programming-guide/language-features/variables/troubleshooting-variables.md)","nodes":[{"pos":[12,127],"content":"Variable &#39;&lt;variablename&gt;&#39; is passed by reference before it has been assigned a value | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Variable &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>variablename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; is passed by reference before it has been assigned a value | Microsoft Docs","pos":[0,115],"source":"Variable &#39;&lt;variablename&gt;&#39; is passed by reference before it has been assigned a value | Microsoft Docs"}]},{"pos":[644,742],"content":"Variable &#39;&lt;variablename&gt;&#39; is passed by reference before it has been assigned a value","linkify":"Variable &#39;&lt;variablename&gt;&#39; is passed by reference before it has been assigned a value","nodes":[{"content":"Variable &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>variablename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; is passed by reference before it has been assigned a value","pos":[0,98],"source":"Variable &#39;&lt;variablename&gt;&#39; is passed by reference before it has been assigned a value"}]},{"content":"Variable '<ph id=\"ph1\">\\&lt;</ph>variablename&gt;' is passed by reference before it has been assigned a value.","pos":[743,829],"source":"Variable '\\<variablename>' is passed by reference before it has been assigned a value."},{"content":"A null reference exception could result at run time.","pos":[830,882]},{"pos":[889,1007],"content":"A procedure call passes a variable as an argument to a <ph id=\"ph1\">`ByRef`</ph> parameter before any value is assigned to the variable.","source":"A procedure call passes a variable as an argument to a `ByRef` parameter before any value is assigned to the variable."},{"content":"If a variable has never been assigned a value, it holds the default value for its data type.","pos":[1014,1106]},{"content":"For a reference data type, that default value is <bpt id=\"p1\">[</bpt>Nothing<ept id=\"p1\">](../../visual-basic/language-reference/nothing.md)</ept>.","pos":[1107,1216],"source":" For a reference data type, that default value is [Nothing](../../visual-basic/language-reference/nothing.md)."},{"content":"Reading a reference variable that has a value of <ph id=\"ph1\">`Nothing`</ph> can cause a <ph id=\"ph2\">&lt;xref:System.NullReferenceException&gt;</ph> in some circumstances.","pos":[1217,1347],"source":" Reading a reference variable that has a value of `Nothing` can cause a <xref:System.NullReferenceException> in some circumstances."},{"pos":[1354,1484],"content":"Passing an argument to a procedure <ph id=\"ph1\">`ByRef`</ph> exposes the variable underlying the argument to possible modification by the procedure.","source":"Passing an argument to a procedure `ByRef` exposes the variable underlying the argument to possible modification by the procedure."},{"content":"By default, this message is a warning.","pos":[1491,1529]},{"content":"For more information about hiding warnings or treating warnings as errors, see <bpt id=\"p1\">[</bpt>Configuring Warnings in Visual Basic<ept id=\"p1\">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.","pos":[1530,1730],"source":" For more information about hiding warnings or treating warnings as errors, see [Configuring Warnings in Visual Basic](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)."},{"pos":[1737,1758],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC42030","source":"**Error ID:** BC42030"},{"pos":[1767,1788],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1798,1988],"content":"If you intend the procedure to assign a value to the variable through the <ph id=\"ph1\">`ByRef`</ph> argument, and if it does not matter whether the variable already holds a value, then no action is necessary.","source":"If you intend the procedure to assign a value to the variable through the `ByRef` argument, and if it does not matter whether the variable already holds a value, then no action is necessary."},{"content":"If the logic in the procedure reads the argument before assigning any value to it, and if the variable is of a value type, then make sure that the procedure logic does not depend on whether the variable holds its default value or not.","pos":[1998,2232]},{"content":"If the logic in the procedure reads the argument before assigning any value to it, and if the variable is of a reference type, then make sure that the procedure logic can handle a value of <ph id=\"ph1\">`Nothing`</ph>.","pos":[2242,2441],"source":"If the logic in the procedure reads the argument before assigning any value to it, and if the variable is of a reference type, then make sure that the procedure logic can handle a value of `Nothing`."},{"content":"For example, it could use a <bpt id=\"p1\">[</bpt>Try...Catch...Finally Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept> to catch a <ph id=\"ph1\">&lt;xref:System.NullReferenceException&gt;</ph>.","pos":[2442,2633],"source":" For example, it could use a [Try...Catch...Finally Statement](../../visual-basic/language-reference/statements/try-catch-finally-statement.md) to catch a <xref:System.NullReferenceException>."},{"pos":[2642,2650],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Dim Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/dim-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2654,2737],"source":"[Dim Statement](../../visual-basic/language-reference/statements/dim-statement.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Value Types and Reference Types<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2740,2877],"source":" [Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Passing Arguments by Value and by Reference<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-value-and-by-reference.md)</ept><ph id=\"ph1\"> </ph>","pos":[2880,3041],"source":" [Passing Arguments by Value and by Reference](../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-value-and-by-reference.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ByRef<ept id=\"p1\">](../../visual-basic/language-reference/modifiers/byref.md)</ept><ph id=\"ph1\"> </ph>","pos":[3044,3111],"source":" [ByRef](../../visual-basic/language-reference/modifiers/byref.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Variable Declaration<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id=\"ph1\"> </ph>","pos":[3114,3228],"source":" [Variable Declaration](../../visual-basic/programming-guide/language-features/variables/variable-declaration.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Troubleshooting Variables<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/variables/troubleshooting-variables.md)</ept>","pos":[3231,3354],"source":" [Troubleshooting Variables](../../visual-basic/programming-guide/language-features/variables/troubleshooting-variables.md)"}]}