<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="configuring-serialization-in-a-workflow-service.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e0f03a30aa8e8679cf849aa75948e0bc2314fe5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\configuring-serialization-in-a-workflow-service.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">741386d0f613581a0871ad46d089ed46c83dce77</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05c6fccc98d6196f505bb24e2cf5b128a8c44989</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Configuring Serialization in a Workflow Service</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Configuring Serialization in a Workflow Service</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Workflow services are Windows Communication Foundation (WCF) services and so have the option of using either the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> (the default) or the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When writing non-workflow services the type of serializer to use is specified on the service or operation contract.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When creating WCF workflow services you donâ€™t specify these contracts in code, but rather they are generated at runtime by contract inference.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about contract inference, see  <bpt id="p1">[</bpt>Using Contracts in Workflow<ept id="p1">](../../../../docs/framework/wcf/feature-details/using-contracts-in-workflow.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The serializer is specified using the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive.SerializerOption%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This can be set in the designer as shown in the following illustration.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Setting the SerializerOption property in the Properties Window.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The serializer can also be set in code as shown in the following example,</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Known types can be specified on Workflow services as well.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information about Known Types, see <bpt id="p1">[</bpt>Data Contract Known Types<ept id="p1">](data-contract-known-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Known types can be specified in the designer or in code.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To specify known types in the designer, click the ellipsis button next to the KnownTypes property in the <bpt id="p1">**</bpt>Properties Window<ept id="p1">**</ept> for a <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activity as shown in the following illustration.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Screenshot of the KnownTypes property dialog box.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This displays the Type Collections Editor that allows you to search for and specify known types.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Screenshot of the Type Collections Editor.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Add new type<ept id="p1">**</ept> link and use the drop down to select or search for a type to add to the known types collection.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To specify known types in code use the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive.KnownTypes%2A&gt;</ph> property as shown in the following example.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>