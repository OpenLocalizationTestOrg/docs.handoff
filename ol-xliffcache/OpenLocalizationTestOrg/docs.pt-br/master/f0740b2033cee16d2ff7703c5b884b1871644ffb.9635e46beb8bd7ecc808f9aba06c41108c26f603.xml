{"content":"---\ntitle: \"How to: Create Master-Detail Lists with the Windows Forms DataGrid Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"master-details lists\"\n  - \"DataGrid control [Windows Forms], master-details lists\"\n  - \"related tables, displaying in DataGrid control\"\nms.assetid: 20388c6a-94f9-4d96-be18-8c200491247f\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Create Master/Detail Lists with the Windows Forms DataGrid Control\n> [!NOTE]\n>  The <xref:System.Windows.Forms.DataGridView> control replaces and adds functionality to the <xref:System.Windows.Forms.DataGrid> control; however, the <xref:System.Windows.Forms.DataGrid> control is retained for both backward compatibility and future use, if you choose. For more information, see [Differences Between the Windows Forms DataGridView and DataGrid Controls](../../../../docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md).  \n  \n If your <xref:System.Data.DataSet> contains a series of related tables, you can use two <xref:System.Windows.Forms.DataGrid> controls to display the data in a master/detail format. One <xref:System.Windows.Forms.DataGrid> is designated to be the master grid, and the second is designated to be the details grid. When you select an entry in the master list, all of the related child entries are shown in the details list. For example, if your <xref:System.Data.DataSet> contains a Customers table and a related Orders table, you would specify the Customers table to be the master grid and the Orders table to be the details grid. When a customer is selected from the master grid, all of the orders associated with that customer in the Orders table would be displayed in the details grid.  \n  \n### To set a master/detail relationship programmatically  \n  \n1.  Create two new <xref:System.Windows.Forms.DataGrid> controls and set their properties.  \n  \n2.  Add tables to the dataset.  \n  \n3.  Declare a variable of type <xref:System.Data.DataRelation> to represent the relation you want to create.  \n  \n4.  Instantiate the relationship by specifying a name for the relationship and specifying the table, column, and item that will tie the two tables.  \n  \n5.  Add the relationship to the <xref:System.Data.DataSet> object's <xref:System.Data.DataSet.Relations%2A> collection.  \n  \n6.  Use the <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> method of the <xref:System.Windows.Forms.DataGrid> to bind each of the grids to the <xref:System.Data.DataSet>.  \n  \n     The following example shows how to set a master/detail relationship between the Customers and Orders tables in a previously generated <xref:System.Data.DataSet> (`ds`).  \n  \n    ```vb  \n    Dim myDataRelation As DataRelation  \n    myDataRelation = New DataRelation _  \n       (\"CustOrd\", ds.Tables(\"Customers\").Columns(\"CustomerID\"), _  \n       ds.Tables(\"Orders\").Columns(\"CustomerID\"))  \n    ' Add the relation to the DataSet.  \n    ds.Relations.Add(myDataRelation)  \n    GridOrders.SetDataBinding(ds, \"Customers\")  \n    GridDetails.SetDataBinding(ds, \"Customers.CustOrd\")  \n  \n    ```  \n  \n    ```csharp  \n    DataRelation myDataRelation;  \n    myDataRelation = new DataRelation(\"CustOrd\", ds.Tables[\"Customers\"].Columns[\"CustomerID\"], ds.Tables[\"Orders\"].Columns[\"CustomerID\"]);  \n    // Add the relation to the DataSet.  \n    ds.Relations.Add(myDataRelation);  \n    GridOrders.SetDataBinding(ds,\"Customers\");  \n    GridDetails.SetDataBinding(ds,\"Customers.CustOrd\");  \n  \n    ```  \n  \n    ```cpp  \n    DataRelation^ myDataRelation;  \n    myDataRelation = gcnew DataRelation(\"CustOrd\",  \n       ds->Tables[\"Customers\"]->Columns[\"CustomerID\"],  \n       ds->Tables[\"Orders\"]->Columns[\"CustomerID\"]);  \n    // Add the relation to the DataSet.  \n    ds->Relations->Add(myDataRelation);  \n    GridOrders->SetDataBinding(ds, \"Customers\");  \n    GridDetails->SetDataBinding(ds, \"Customers.CustOrd\");  \n    ```  \n  \n## See Also  \n [DataGrid Control](../../../../docs/framework/winforms/controls/datagrid-control-windows-forms.md)   \n [DataGrid Control Overview](../../../../docs/framework/winforms/controls/datagrid-control-overview-windows-forms.md)   \n [How to: Bind the Windows Forms DataGrid Control to a Data Source](../../../../docs/framework/winforms/controls/how-to-bind-the-windows-forms-datagrid-control-to-a-data-source.md)","nodes":[{"pos":[4,597],"nodes":[{"content":"How to: Create Master-Detail Lists with the Windows Forms DataGrid Control | Microsoft Docs","nodes":[{"pos":[0,91],"content":"How to: Create Master-Detail Lists with the Windows Forms DataGrid Control | Microsoft Docs","nodes":[{"content":"How to: Create Master-Detail Lists with the Windows Forms DataGrid Control | Microsoft Docs","pos":[0,91]}]}],"pos":[6,100],"yaml":true}],"content":"title: \"How to: Create Master-Detail Lists with the Windows Forms DataGrid Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"master-details lists\"\n  - \"DataGrid control [Windows Forms], master-details lists\"\n  - \"related tables, displaying in DataGrid control\"\nms.assetid: 20388c6a-94f9-4d96-be18-8c200491247f\ncaps.latest.revision: 15\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","yamlblock":true},{"pos":[604,678],"content":"How to: Create Master/Detail Lists with the Windows Forms DataGrid Control","linkify":"How to: Create Master/Detail Lists with the Windows Forms DataGrid Control","nodes":[{"content":"How to: Create Master/Detail Lists with the Windows Forms DataGrid Control","pos":[0,74]}]},{"pos":[681,1186],"content":"[!NOTE]\n The <xref:System.Windows.Forms.DataGridView> control replaces and adds functionality to the <xref:System.Windows.Forms.DataGrid> control; however, the <xref:System.Windows.Forms.DataGrid> control is retained for both backward compatibility and future use, if you choose. For more information, see [Differences Between the Windows Forms DataGridView and DataGrid Controls](../../../../docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md).","leadings":["","> "],"nodes":[{"content":"The <xref:System.Windows.Forms.DataGridView> control replaces and adds functionality to the <xref:System.Windows.Forms.DataGrid> control; however, the <xref:System.Windows.Forms.DataGrid> control is retained for both backward compatibility and future use, if you choose. For more information, see [Differences Between the Windows Forms DataGridView and DataGrid Controls](../../../../docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md).","pos":[9,503],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control replaces and adds functionality to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control; however, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control is retained for both backward compatibility and future use, if you choose.","pos":[0,270],"source":"The <xref:System.Windows.Forms.DataGridView> control replaces and adds functionality to the <xref:System.Windows.Forms.DataGrid> control; however, the <xref:System.Windows.Forms.DataGrid> control is retained for both backward compatibility and future use, if you choose."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Differences Between the Windows Forms DataGridView and DataGrid Controls<ept id=\"p1\">](../../../../docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)</ept>.","pos":[271,494],"source":" For more information, see [Differences Between the Windows Forms DataGridView and DataGrid Controls](../../../../docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)."}]}]},{"content":"If your <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> contains a series of related tables, you can use two <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> controls to display the data in a master/detail format.","pos":[1193,1373],"source":"If your <xref:System.Data.DataSet> contains a series of related tables, you can use two <xref:System.Windows.Forms.DataGrid> controls to display the data in a master/detail format."},{"content":"One <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> is designated to be the master grid, and the second is designated to be the details grid.","pos":[1374,1504],"source":" One <xref:System.Windows.Forms.DataGrid> is designated to be the master grid, and the second is designated to be the details grid."},{"content":"When you select an entry in the master list, all of the related child entries are shown in the details list.","pos":[1505,1613]},{"content":"For example, if your <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> contains a Customers table and a related Orders table, you would specify the Customers table to be the master grid and the Orders table to be the details grid.","pos":[1614,1821],"source":" For example, if your <xref:System.Data.DataSet> contains a Customers table and a related Orders table, you would specify the Customers table to be the master grid and the Orders table to be the details grid."},{"content":"When a customer is selected from the master grid, all of the orders associated with that customer in the Orders table would be displayed in the details grid.","pos":[1822,1979]},{"pos":[1989,2041],"content":"To set a master/detail relationship programmatically","linkify":"To set a master/detail relationship programmatically","nodes":[{"content":"To set a master/detail relationship programmatically","pos":[0,52]}]},{"content":"Create two new <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> controls and set their properties.","pos":[2051,2137],"source":"Create two new <xref:System.Windows.Forms.DataGrid> controls and set their properties."},{"content":"Add tables to the dataset.","pos":[2147,2173]},{"content":"Declare a variable of type <ph id=\"ph1\">&lt;xref:System.Data.DataRelation&gt;</ph> to represent the relation you want to create.","pos":[2183,2287],"source":"Declare a variable of type <xref:System.Data.DataRelation> to represent the relation you want to create."},{"content":"Instantiate the relationship by specifying a name for the relationship and specifying the table, column, and item that will tie the two tables.","pos":[2297,2440]},{"content":"Add the relationship to the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id=\"ph2\">&lt;xref:System.Data.DataSet.Relations%2A&gt;</ph> collection.","pos":[2450,2565],"source":"Add the relationship to the <xref:System.Data.DataSet> object's <xref:System.Data.DataSet.Relations%2A> collection."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGrid.SetDataBinding%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> to bind each of the grids to the <ph id=\"ph3\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[2575,2749],"source":"Use the <xref:System.Windows.Forms.DataGrid.SetDataBinding%2A> method of the <xref:System.Windows.Forms.DataGrid> to bind each of the grids to the <xref:System.Data.DataSet>."},{"pos":[2760,2928],"content":"The following example shows how to set a master/detail relationship between the Customers and Orders tables in a previously generated <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> (<ph id=\"ph2\">`ds`</ph>).","source":"The following example shows how to set a master/detail relationship between the Customers and Orders tables in a previously generated <xref:System.Data.DataSet> (`ds`)."},{"pos":[4175,4183],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>DataGrid Control<ept id=\"p1\">](../../../../docs/framework/winforms/controls/datagrid-control-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[4187,4286],"source":"[DataGrid Control](../../../../docs/framework/winforms/controls/datagrid-control-windows-forms.md) "},{"content":"<bpt id=\"p1\">[</bpt>DataGrid Control Overview<ept id=\"p1\">](../../../../docs/framework/winforms/controls/datagrid-control-overview-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[4290,4407],"source":"[DataGrid Control Overview](../../../../docs/framework/winforms/controls/datagrid-control-overview-windows-forms.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Bind the Windows Forms DataGrid Control to a Data Source<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-bind-the-windows-forms-datagrid-control-to-a-data-source.md)</ept>","pos":[4411,4590],"source":"[How to: Bind the Windows Forms DataGrid Control to a Data Source](../../../../docs/framework/winforms/controls/how-to-bind-the-windows-forms-datagrid-control-to-a-data-source.md)"}]}