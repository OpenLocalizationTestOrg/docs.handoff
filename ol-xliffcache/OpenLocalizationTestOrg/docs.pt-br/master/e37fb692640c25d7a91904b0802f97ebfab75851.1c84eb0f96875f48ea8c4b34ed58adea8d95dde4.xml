{"content":"---\ntitle: Custom templates for dotnet new\ndescription: Learn about custom templates for any type of .NET project or files.\nauthor: guardrex\nms.date: 08/11/2017\n---\n# Custom templates for dotnet new\n\nThe [.NET Core SDK](https://www.microsoft.com/net/download/core) comes with many templates pre-installed to use with the [`dotnet new` command](dotnet-new.md). Starting with .NET Core 2.0, you can create your own custom templates for any type of project, such as an app, service, tool, or class library. You can even create a template that outputs one or more independent files, such as a configuration file.\n\nYou can install custom templates from a NuGet package on any NuGet feed, by referencing a NuGet *nupkg* file directly, or by specifying a file system directory that contains the template. The template engine offers features that allow you to replace values, include and exclude files and regions of files, and execute custom processing operations when your template is used.\n\nThe template engine is open source, and the online code repository is at [dotnet/templating](https://github.com/dotnet/templating/) on GitHub. Visit the [dotnet/dotnet-template-samples](https://github.com/dotnet/dotnet-template-samples) repo for samples of templates. More templates, including templates from third parties, are found at [Available templates for dotnet new](https://github.com/dotnet/templating/wiki/Available-templates-for-dotnet-new) on GitHub. For more information about creating and using custom templates, see [How to create your own templates for dotnet new](https://devblogs.microsoft.com/dotnet/how-to-create-your-own-templates-for-dotnet-new/) and the [dotnet/templating GitHub repo Wiki](https://github.com/dotnet/templating/wiki).\n\nTo follow a walkthrough and create a template, see the [Create a custom template for dotnet new](~/docs/core/tutorials/create-custom-template.md) tutorial.\n\n## Configuration\n\nA template is composed of the following components:\n\n- Source files and folders\n- A configuration file (*template.json*)\n\n### Source files and folders\n\nThe source files and folders include whatever files and folders you want the template engine to use when the `dotnet new <TEMPLATE>` command is executed. The template engine is designed to use *runnable projects* as source code to produce projects. This has several benefits:\n\n- The template engine doesn't require you to inject special tokens into your project's source code.\n- The code files aren't special files or modified in any way to work with the template engine. So, the tools you normally use when working with projects also work with template content.\n- You build, run, and debug your template projects just like you do for any of your other projects.\n- You can quickly create a template from an existing project just by adding a *template.json* configuration file to the project.\n\nFiles and folders stored in the template aren't limited to formal .NET project types, such as .NET Core or .NET Framework solutions. Source files and folders may consist of any content that you wish to create when the template is used, even if the template engine produces just one file for its output, such as a configuration file or a solution file. For example, you can create a template that contains a *web.config* source file and creates a modified *web.config* file for projects where the template is used. The modifications to source files are based on logic and settings you've provided in the *template.json* configuration file along with values provided by the user passed as options to the `dotnet new <TEMPLATE>` command.\n\n### template.json\n\nThe *template.json* file is placed in a *.template.config* folder in the root directory of the template. The file provides configuration information to the template engine. The minimum configuration requires the members shown in the following table, which is sufficient to create a functional template.\n\n| Member            | Type          | Description |\n| ----------------- | ------------- | ----------- |\n| `$schema`         | URI           | The JSON schema for the *template.json* file. Editors that support JSON schemas enable JSON-editing features when the schema is specified. For example, [Visual Studio Code](https://code.visualstudio.com/) requires this member to enable IntelliSense. Use a value of `http://json.schemastore.org/template`. |\n| `author`          | string        | The author of the template. |\n| `classifications` | array(string) | Zero or more characteristics of the template that a user might use to find the template when searching for it. The classifications also appear in the *Tags* column when it appears in a list of templates produced by using the <code>dotnet new -l&#124;--list</code> command. |\n| `identity`        | string        | A unique name for this template. |\n| `name`            | string        | The name for the template that users should see. |\n| `shortName`       | string        | A default shorthand for selecting the template that applies to environments where the template name is specified by the user, not selected via a GUI. For example, the short name is useful when using templates from a command prompt with CLI commands. |\n\n#### Example:\n\n```json\n{\n  \"$schema\": \"http://json.schemastore.org/template\",\n  \"author\": \"Catalina Garcia\",\n  \"classifications\": [ \"Common\", \"Console\" ],\n  \"identity\": \"GarciaSoftware.ConsoleTemplate.CSharp\",\n  \"name\": \"Garcia Software Console Application\",\n  \"shortName\": \"garciaconsole\"\n}\n```\n\nThe full schema for the *template.json* file is found at the [JSON Schema Store](http://json.schemastore.org/template).\n\n## .NET default templates\n\nWhen you install the [.NET Core SDK](https://www.microsoft.com/net/download/core), you receive over a dozen built-in templates for creating projects and files, including console apps, class libraries, unit test projects, ASP.NET Core apps (including [Angular](https://angular.io/) and [React](https://facebook.github.io/react/) projects), and configuration files. To list the built-in templates, execute the `dotnet new` command with the `-l|--list` option:\n\n```console\ndotnet new -l\n```\n\n## Packing a template into a NuGet package (nupkg file)\n\nCurrently, a custom template is packed on Windows with [nuget.exe](https://dist.nuget.org/win-x86-commandline/latest/nuget.exe) (not [dotnet pack](dotnet-pack.md)). For cross-platform packaging, consider using [NuGetizer 3000](https://github.com/NuGet/Home/wiki/NuGetizer-3000).\n\nThe contents of the project folder, together with its *.template.config/template.json* file, are placed into a folder named *content*. Next to the *content* folder, add a [*nuspec* file](/nuget/create-packages/creating-a-package), which is an XML manifest file that describes a package's contents and drives the process of creating the NuGet package. Inside of a **\\<packageTypes>** element in the *nuspec* file, include a **\\<packageType>** element with a `name` attribute value of `Template`. Both the *content* folder and the *nuspec* file should reside in the same directory. The table shows the minimum *nuspec* file elements required to produce a template as a NuGet package.\n\n| Element            | Type   | Description |\n| ------------------ | ------ | ----------- |\n| **\\<authors>**     | string | A comma-separated list of packages authors, matching the profile names on nuget.org. Authors are displayed in the NuGet Gallery on nuget.org and are used to cross-reference packages by the same authors. |\n| **\\<description>** | string | A long description of the package for UI display. |\n| **\\<id>**          | string | The case-insensitive package identifier, which must be unique across nuget.org or whatever gallery the package will reside in. IDs may not contain spaces or characters that are not valid for a URL and generally follow .NET namespace rules. See [Choosing a unique package identifier and setting the version number](/nuget/create-packages/creating-a-package#choosing-a-unique-package-identifier-and-setting-the-version-number) for guidance. |\n| **\\<packageType>** | string | Place this element inside a **\\<packageTypes>** element among the **\\<metadata>** elements. Set the `name` attribute of the **\\<packageType>** element to `Template`. |\n| **\\<version>**     | string | The version of the package, following the major.minor.patch pattern. Version numbers may include a pre-release suffix as described in the [Pre-release versions](/nuget/create-packages/prerelease-packages#semantic-versioning) topic. |\n\nSee the [.nuspec reference](/nuget/schema/nuspec) for the complete *nuspec* file schema. An example *nuspec* file for a template appears in the [Create a custom template for dotnet new](~/docs/core/tutorials/create-custom-template.md) tutorial.\n\n[Create a package](/nuget/create-packages/creating-a-package#creating-the-package) using the `nuget pack <PATH_TO_NUSPEC_FILE>` command.\n\n## Installing a template\n\nInstall a custom template from a NuGet package on any NuGet feed by referencing a *nupkg* file directly or by specifying a file system directory that contains a templating configuration. Use the `-i|--install` option with the [dotnet new](dotnet-new.md) command.\n\n### To install a template from a NuGet package stored at nuget.org\n\n```console\ndotnet new -i <NUGET_PACKAGE_ID>\n```\n\n### To install a template from a local nupkg file\n\n```console\ndotnet new -i <PATH_TO_NUPKG_FILE>\n```\n\n### To install a template from a file system directory\n\nThe `FILE_SYSTEM_DIRECTORY` is the project folder containing the project and the *.template.config* folder:\n\n```console\ndotnet new -i <FILE_SYSTEM_DIRECTORY>\n```\n\n## Uninstalling a template\n\nUninstall a custom template by referencing a NuGet package by its `id` or by specifying a file system directory that contains a templating configuration. Use the `-u|--uninstall` install option with the [dotnet new](dotnet-new.md) command.\n\n### To uninstall a template from a NuGet package stored at nuget.org\n\n```console\ndotnet new -u <NUGET_PACKAGE_ID>\n```\n\n### To uninstall a template from a local nupkg file\n\nTo uninstall the template, don't attempt to use the path to the *nupkg* file. Attempting to uninstall a template using `dotnet new -u <PATH_TO_NUPKG_FILE>` fails. Reference the package by its `id`:\n\n```console\ndotnet new -u <NUGET_PACKAGE_ID>\n```\n\n### To uninstall a template from a file system directory\n\nThe `FILE_SYSTEM_DIRECTORY` is the project folder containing the project and the *.template.config* folder. The path provided needs to be the absolute path. Attempting to uninstall a template using a relative path fails. For more information, see the [dotnet new](dotnet-new.md) article.\n\n```console\ndotnet new -u <FILE_SYSTEM_DIRECTORY>\n```\n\n## Create a project using a custom template\n\nAfter a template is installed, use the template by executing the `dotnet new <TEMPLATE>` command as you would with any other pre-installed template. You can also specify [options](dotnet-new.md#options) to the `dotnet new` command, including template specific options you configured in the template settings. Supply the template's short name directly to the command:\n\n```console\ndotnet new <TEMPLATE>\n```\n\n## See also\n\n- [Create a custom template for dotnet new (tutorial)](../tutorials/create-custom-template.md)\n- [dotnet/templating GitHub repo Wiki](https://github.com/dotnet/templating/wiki)\n- [dotnet/dotnet-template-samples GitHub repo](https://github.com/dotnet/dotnet-template-samples)\n- [How to create your own templates for dotnet new](https://devblogs.microsoft.com/dotnet/how-to-create-your-own-templates-for-dotnet-new/)\n- [*template.json* schema at the JSON Schema Store](http://json.schemastore.org/template)\n","nodes":[{"pos":[4,160],"embed":true,"restype":"x-metadata","content":"title: Custom templates for dotnet new\ndescription: Learn about custom templates for any type of .NET project or files.\nauthor: guardrex\nms.date: 08/11/2017","nodes":[{"content":"Custom templates for dotnet new","nodes":[{"pos":[0,31],"content":"Custom templates for dotnet new","nodes":[{"content":"Custom templates for dotnet new","pos":[0,31]}]}],"path":["title"],"nosxs":false},{"content":"Learn about custom templates for any type of .NET project or files.","nodes":[{"pos":[0,67],"content":"Learn about custom templates for any type of .NET project or files.","nodes":[{"content":"Learn about custom templates for any type of .NET project or files.","pos":[0,67]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[167,198],"content":"Custom templates for dotnet new","linkify":"Custom templates for dotnet new","nodes":[{"content":"Custom templates for dotnet new","pos":[0,31]}]},{"content":"The <bpt id=\"p1\">[</bpt>.NET Core SDK<ept id=\"p1\">](https://www.microsoft.com/net/download/core)</ept> comes with many templates pre-installed to use with the <bpt id=\"p2\">[</bpt><ph id=\"ph1\">`dotnet new`</ph> command<ept id=\"p2\">](dotnet-new.md)</ept>.","pos":[200,359],"source":"The [.NET Core SDK](https://www.microsoft.com/net/download/core) comes with many templates pre-installed to use with the [`dotnet new` command](dotnet-new.md)."},{"content":"Starting with .NET Core 2.0, you can create your own custom templates for any type of project, such as an app, service, tool, or class library.","pos":[360,503]},{"content":"You can even create a template that outputs one or more independent files, such as a configuration file.","pos":[504,608]},{"content":"You can install custom templates from a NuGet package on any NuGet feed, by referencing a NuGet <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file directly, or by specifying a file system directory that contains the template.","pos":[610,797],"source":"You can install custom templates from a NuGet package on any NuGet feed, by referencing a NuGet *nupkg* file directly, or by specifying a file system directory that contains the template."},{"content":"The template engine offers features that allow you to replace values, include and exclude files and regions of files, and execute custom processing operations when your template is used.","pos":[798,984]},{"content":"The template engine is open source, and the online code repository is at <bpt id=\"p1\">[</bpt>dotnet/templating<ept id=\"p1\">](https://github.com/dotnet/templating/)</ept> on GitHub.","pos":[986,1128],"source":"The template engine is open source, and the online code repository is at [dotnet/templating](https://github.com/dotnet/templating/) on GitHub."},{"content":"Visit the <bpt id=\"p1\">[</bpt>dotnet/dotnet-template-samples<ept id=\"p1\">](https://github.com/dotnet/dotnet-template-samples)</ept> repo for samples of templates.","pos":[1129,1253],"source":" Visit the [dotnet/dotnet-template-samples](https://github.com/dotnet/dotnet-template-samples) repo for samples of templates."},{"content":"More templates, including templates from third parties, are found at <bpt id=\"p1\">[</bpt>Available templates for dotnet new<ept id=\"p1\">](https://github.com/dotnet/templating/wiki/Available-templates-for-dotnet-new)</ept> on GitHub.","pos":[1254,1448],"source":" More templates, including templates from third parties, are found at [Available templates for dotnet new](https://github.com/dotnet/templating/wiki/Available-templates-for-dotnet-new) on GitHub."},{"content":"For more information about creating and using custom templates, see <bpt id=\"p1\">[</bpt>How to create your own templates for dotnet new<ept id=\"p1\">](https://devblogs.microsoft.com/dotnet/how-to-create-your-own-templates-for-dotnet-new/)</ept> and the <bpt id=\"p2\">[</bpt>dotnet/templating GitHub repo Wiki<ept id=\"p2\">](https://github.com/dotnet/templating/wiki)</ept>.","pos":[1449,1743],"source":" For more information about creating and using custom templates, see [How to create your own templates for dotnet new](https://devblogs.microsoft.com/dotnet/how-to-create-your-own-templates-for-dotnet-new/) and the [dotnet/templating GitHub repo Wiki](https://github.com/dotnet/templating/wiki)."},{"pos":[1745,1900],"content":"To follow a walkthrough and create a template, see the <bpt id=\"p1\">[</bpt>Create a custom template for dotnet new<ept id=\"p1\">](~/docs/core/tutorials/create-custom-template.md)</ept> tutorial.","source":"To follow a walkthrough and create a template, see the [Create a custom template for dotnet new](~/docs/core/tutorials/create-custom-template.md) tutorial."},{"pos":[1905,1918],"content":"Configuration","linkify":"Configuration","nodes":[{"content":"Configuration","pos":[0,13]}]},{"content":"A template is composed of the following components:","pos":[1920,1971]},{"content":"Source files and folders","pos":[1975,1999]},{"pos":[2002,2040],"content":"A configuration file (<bpt id=\"p1\">*</bpt>template.json<ept id=\"p1\">*</ept>)","source":"A configuration file (*template.json*)"},{"pos":[2046,2070],"content":"Source files and folders","linkify":"Source files and folders","nodes":[{"content":"Source files and folders","pos":[0,24]}]},{"content":"The source files and folders include whatever files and folders you want the template engine to use when the <ph id=\"ph1\">`dotnet new &lt;TEMPLATE&gt;`</ph> command is executed.","pos":[2072,2225],"source":"The source files and folders include whatever files and folders you want the template engine to use when the `dotnet new <TEMPLATE>` command is executed."},{"content":"The template engine is designed to use <bpt id=\"p1\">*</bpt>runnable projects<ept id=\"p1\">*</ept> as source code to produce projects.","pos":[2226,2320],"source":" The template engine is designed to use *runnable projects* as source code to produce projects."},{"content":"This has several benefits:","pos":[2321,2347]},{"content":"The template engine doesn't require you to inject special tokens into your project's source code.","pos":[2351,2448]},{"content":"The code files aren't special files or modified in any way to work with the template engine.","pos":[2451,2543]},{"content":"So, the tools you normally use when working with projects also work with template content.","pos":[2544,2634]},{"content":"You build, run, and debug your template projects just like you do for any of your other projects.","pos":[2637,2734]},{"pos":[2737,2863],"content":"You can quickly create a template from an existing project just by adding a <bpt id=\"p1\">*</bpt>template.json<ept id=\"p1\">*</ept> configuration file to the project.","source":"You can quickly create a template from an existing project just by adding a *template.json* configuration file to the project."},{"content":"Files and folders stored in the template aren't limited to formal .NET project types, such as .NET Core or .NET Framework solutions.","pos":[2865,2997]},{"content":"Source files and folders may consist of any content that you wish to create when the template is used, even if the template engine produces just one file for its output, such as a configuration file or a solution file.","pos":[2998,3216]},{"content":"For example, you can create a template that contains a <bpt id=\"p1\">*</bpt>web.config<ept id=\"p1\">*</ept> source file and creates a modified <bpt id=\"p2\">*</bpt>web.config<ept id=\"p2\">*</ept> file for projects where the template is used.","pos":[3217,3378],"source":" For example, you can create a template that contains a *web.config* source file and creates a modified *web.config* file for projects where the template is used."},{"content":"The modifications to source files are based on logic and settings you've provided in the <bpt id=\"p1\">*</bpt>template.json<ept id=\"p1\">*</ept> configuration file along with values provided by the user passed as options to the <ph id=\"ph1\">`dotnet new &lt;TEMPLATE&gt;`</ph> command.","pos":[3379,3599],"source":" The modifications to source files are based on logic and settings you've provided in the *template.json* configuration file along with values provided by the user passed as options to the `dotnet new <TEMPLATE>` command."},{"pos":[3605,3618],"content":"template.json","linkify":"template.json","nodes":[{"content":"template.json","pos":[0,13]}]},{"content":"The <bpt id=\"p1\">*</bpt>template.json<ept id=\"p1\">*</ept> file is placed in a <bpt id=\"p2\">*</bpt>.template.config<ept id=\"p2\">*</ept> folder in the root directory of the template.","pos":[3620,3724],"source":"The *template.json* file is placed in a *.template.config* folder in the root directory of the template."},{"content":"The file provides configuration information to the template engine.","pos":[3725,3792]},{"content":"The minimum configuration requires the members shown in the following table, which is sufficient to create a functional template.","pos":[3793,3922]},{"content":"Member","pos":[3926,3932]},{"content":"Type","pos":[3946,3950]},{"content":"Description","pos":[3962,3973]},{"content":"URI","pos":[4050,4053]},{"content":"The JSON schema for the <bpt id=\"p1\">*</bpt>template.json<ept id=\"p1\">*</ept> file.","pos":[4066,4111],"source":"The JSON schema for the *template.json* file."},{"content":"Editors that support JSON schemas enable JSON-editing features when the schema is specified.","pos":[4112,4204]},{"content":"For example, <bpt id=\"p1\">[</bpt>Visual Studio Code<ept id=\"p1\">](https://code.visualstudio.com/)</ept> requires this member to enable IntelliSense.","pos":[4205,4315],"source":" For example, [Visual Studio Code](https://code.visualstudio.com/) requires this member to enable IntelliSense."},{"content":"Use a value of <ph id=\"ph1\">`http://json.schemastore.org/template`</ph>.","pos":[4316,4370],"source":" Use a value of `http://json.schemastore.org/template`."},{"content":"string","pos":[4395,4401]},{"content":"The author of the template.","pos":[4411,4438]},{"content":"array(string)","pos":[4463,4476]},{"content":"Zero or more characteristics of the template that a user might use to find the template when searching for it.","pos":[4479,4589]},{"content":"The classifications also appear in the <bpt id=\"p1\">*</bpt>Tags<ept id=\"p1\">*</ept> column when it appears in a list of templates produced by using the <ph id=\"ph1\">&lt;code&gt;dotnet new -l&amp;#124;--list&lt;/code&gt;</ph> command.","pos":[4590,4751],"source":" The classifications also appear in the *Tags* column when it appears in a list of templates produced by using the <code>dotnet new -l&#124;--list</code> command."},{"content":"string","pos":[4776,4782]},{"content":"A unique name for this template.","pos":[4792,4824]},{"content":"string","pos":[4849,4855]},{"content":"The name for the template that users should see.","pos":[4865,4913]},{"content":"string","pos":[4938,4944]},{"content":"A default shorthand for selecting the template that applies to environments where the template name is specified by the user, not selected via a GUI.","pos":[4954,5103]},{"content":"For example, the short name is useful when using templates from a command prompt with CLI commands.","pos":[5104,5203]},{"pos":[5212,5220],"content":"Example:","linkify":"Example:","nodes":[{"content":"Example:","pos":[0,8]}]},{"pos":[5504,5623],"content":"The full schema for the <bpt id=\"p1\">*</bpt>template.json<ept id=\"p1\">*</ept> file is found at the <bpt id=\"p2\">[</bpt>JSON Schema Store<ept id=\"p2\">](http://json.schemastore.org/template)</ept>.","source":"The full schema for the *template.json* file is found at the [JSON Schema Store](http://json.schemastore.org/template)."},{"pos":[5628,5650],"content":".NET default templates","linkify":".NET default templates","nodes":[{"content":".NET default templates","pos":[0,22]}]},{"content":"When you install the <bpt id=\"p1\">[</bpt>.NET Core SDK<ept id=\"p1\">](https://www.microsoft.com/net/download/core)</ept>, you receive over a dozen built-in templates for creating projects and files, including console apps, class libraries, unit test projects, ASP.NET Core apps (including <bpt id=\"p2\">[</bpt>Angular<ept id=\"p2\">](https://angular.io/)</ept> and <bpt id=\"p3\">[</bpt>React<ept id=\"p3\">](https://facebook.github.io/react/)</ept> projects), and configuration files.","pos":[5652,6015],"source":"When you install the [.NET Core SDK](https://www.microsoft.com/net/download/core), you receive over a dozen built-in templates for creating projects and files, including console apps, class libraries, unit test projects, ASP.NET Core apps (including [Angular](https://angular.io/) and [React](https://facebook.github.io/react/) projects), and configuration files."},{"content":"To list the built-in templates, execute the <ph id=\"ph1\">`dotnet new`</ph> command with the <ph id=\"ph2\">`-l|--list`</ph> option:","pos":[6016,6109],"source":" To list the built-in templates, execute the `dotnet new` command with the `-l|--list` option:"},{"pos":[6144,6196],"content":"Packing a template into a NuGet package (nupkg file)","linkify":"Packing a template into a NuGet package (nupkg file)","nodes":[{"content":"Packing a template into a NuGet package (nupkg file)","pos":[0,52]}]},{"content":"Currently, a custom template is packed on Windows with <bpt id=\"p1\">[</bpt>nuget.exe<ept id=\"p1\">](https://dist.nuget.org/win-x86-commandline/latest/nuget.exe)</ept> (not <bpt id=\"p2\">[</bpt>dotnet pack<ept id=\"p2\">](dotnet-pack.md)</ept>).","pos":[6198,6362],"source":"Currently, a custom template is packed on Windows with [nuget.exe](https://dist.nuget.org/win-x86-commandline/latest/nuget.exe) (not [dotnet pack](dotnet-pack.md))."},{"content":"For cross-platform packaging, consider using <bpt id=\"p1\">[</bpt>NuGetizer 3000<ept id=\"p1\">](https://github.com/NuGet/Home/wiki/NuGetizer-3000)</ept>.","pos":[6363,6476],"source":" For cross-platform packaging, consider using [NuGetizer 3000](https://github.com/NuGet/Home/wiki/NuGetizer-3000)."},{"content":"The contents of the project folder, together with its <bpt id=\"p1\">*</bpt>.template.config/template.json<ept id=\"p1\">*</ept> file, are placed into a folder named <bpt id=\"p2\">*</bpt>content<ept id=\"p2\">*</ept>.","pos":[6478,6612],"source":"The contents of the project folder, together with its *.template.config/template.json* file, are placed into a folder named *content*."},{"content":"Next to the <bpt id=\"p1\">*</bpt>content<ept id=\"p1\">*</ept> folder, add a <bpt id=\"p2\">[</bpt><bpt id=\"p3\">*</bpt>nuspec<ept id=\"p3\">*</ept> file<ept id=\"p2\">](/nuget/create-packages/creating-a-package)</ept>, which is an XML manifest file that describes a package's contents and drives the process of creating the NuGet package.","pos":[6613,6828],"source":" Next to the *content* folder, add a [*nuspec* file](/nuget/create-packages/creating-a-package), which is an XML manifest file that describes a package's contents and drives the process of creating the NuGet package."},{"content":"Inside of a <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>packageTypes&gt;<ept id=\"p1\">**</ept> element in the <bpt id=\"p2\">*</bpt>nuspec<ept id=\"p2\">*</ept> file, include a <bpt id=\"p3\">**</bpt><ph id=\"ph2\">\\&lt;</ph>packageType&gt;<ept id=\"p3\">**</ept> element with a <ph id=\"ph3\">`name`</ph> attribute value of <ph id=\"ph4\">`Template`</ph>.","pos":[6829,6972],"source":" Inside of a **\\<packageTypes>** element in the *nuspec* file, include a **\\<packageType>** element with a `name` attribute value of `Template`."},{"content":"Both the <bpt id=\"p1\">*</bpt>content<ept id=\"p1\">*</ept> folder and the <bpt id=\"p2\">*</bpt>nuspec<ept id=\"p2\">*</ept> file should reside in the same directory.","pos":[6973,7057],"source":" Both the *content* folder and the *nuspec* file should reside in the same directory."},{"content":"The table shows the minimum <bpt id=\"p1\">*</bpt>nuspec<ept id=\"p1\">*</ept> file elements required to produce a template as a NuGet package.","pos":[7058,7159],"source":" The table shows the minimum *nuspec* file elements required to produce a template as a NuGet package."},{"content":"Element","pos":[7163,7170]},{"content":"Type","pos":[7184,7188]},{"content":"Description","pos":[7193,7204]},{"pos":[7255,7269],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>authors&gt;<ept id=\"p1\">**</ept>","source":"**\\<authors>**"},{"content":"string","pos":[7276,7282]},{"content":"A comma-separated list of packages authors, matching the profile names on nuget.org. Authors are displayed in the NuGet Gallery on nuget.org and are used to cross-reference packages by the same authors.","pos":[7285,7487]},{"pos":[7492,7510],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>description&gt;<ept id=\"p1\">**</ept>","source":"**\\<description>**"},{"content":"string","pos":[7513,7519]},{"content":"A long description of the package for UI display.","pos":[7522,7571]},{"pos":[7576,7585],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>id&gt;<ept id=\"p1\">**</ept>","source":"**\\<id>**"},{"content":"string","pos":[7597,7603]},{"content":"The case-insensitive package identifier, which must be unique across nuget.org or whatever gallery the package will reside in.","pos":[7606,7732]},{"content":"IDs may not contain spaces or characters that are not valid for a URL and generally follow .NET namespace rules.","pos":[7733,7845]},{"content":"See <bpt id=\"p1\">[</bpt>Choosing a unique package identifier and setting the version number<ept id=\"p1\">](/nuget/create-packages/creating-a-package#choosing-a-unique-package-identifier-and-setting-the-version-number)</ept> for guidance.","pos":[7846,8044],"source":" See [Choosing a unique package identifier and setting the version number](/nuget/create-packages/creating-a-package#choosing-a-unique-package-identifier-and-setting-the-version-number) for guidance."},{"pos":[8049,8067],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>packageType&gt;<ept id=\"p1\">**</ept>","source":"**\\<packageType>**"},{"content":"string","pos":[8070,8076]},{"content":"Place this element inside a <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>packageTypes&gt;<ept id=\"p1\">**</ept> element among the <bpt id=\"p2\">**</bpt><ph id=\"ph2\">\\&lt;</ph>metadata&gt;<ept id=\"p2\">**</ept> elements.","pos":[8079,8170],"source":"Place this element inside a **\\<packageTypes>** element among the **\\<metadata>** elements."},{"content":"Set the <ph id=\"ph1\">`name`</ph> attribute of the <bpt id=\"p1\">**</bpt><ph id=\"ph2\">\\&lt;</ph>packageType&gt;<ept id=\"p1\">**</ept> element to <ph id=\"ph3\">`Template`</ph>.","pos":[8171,8244],"source":" Set the `name` attribute of the **\\<packageType>** element to `Template`."},{"pos":[8249,8263],"content":"<bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>version&gt;<ept id=\"p1\">**</ept>","source":"**\\<version>**"},{"content":"string","pos":[8270,8276]},{"content":"The version of the package, following the major.minor.patch pattern.","pos":[8279,8347]},{"content":"Version numbers may include a pre-release suffix as described in the <bpt id=\"p1\">[</bpt>Pre-release versions<ept id=\"p1\">](/nuget/create-packages/prerelease-packages#semantic-versioning)</ept> topic.","pos":[8348,8510],"source":" Version numbers may include a pre-release suffix as described in the [Pre-release versions](/nuget/create-packages/prerelease-packages#semantic-versioning) topic."},{"content":"See the <bpt id=\"p1\">[</bpt>.nuspec reference<ept id=\"p1\">](/nuget/schema/nuspec)</ept> for the complete <bpt id=\"p2\">*</bpt>nuspec<ept id=\"p2\">*</ept> file schema.","pos":[8514,8602],"source":"See the [.nuspec reference](/nuget/schema/nuspec) for the complete *nuspec* file schema."},{"content":"An example <bpt id=\"p1\">*</bpt>nuspec<ept id=\"p1\">*</ept> file for a template appears in the <bpt id=\"p2\">[</bpt>Create a custom template for dotnet new<ept id=\"p2\">](~/docs/core/tutorials/create-custom-template.md)</ept> tutorial.","pos":[8603,8758],"source":" An example *nuspec* file for a template appears in the [Create a custom template for dotnet new](~/docs/core/tutorials/create-custom-template.md) tutorial."},{"pos":[8760,8896],"content":"<bpt id=\"p1\">[</bpt>Create a package<ept id=\"p1\">](/nuget/create-packages/creating-a-package#creating-the-package)</ept> using the <ph id=\"ph1\">`nuget pack &lt;PATH_TO_NUSPEC_FILE&gt;`</ph> command.","source":"[Create a package](/nuget/create-packages/creating-a-package#creating-the-package) using the `nuget pack <PATH_TO_NUSPEC_FILE>` command."},{"pos":[8901,8922],"content":"Installing a template","linkify":"Installing a template","nodes":[{"content":"Installing a template","pos":[0,21]}]},{"content":"Install a custom template from a NuGet package on any NuGet feed by referencing a <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file directly or by specifying a file system directory that contains a templating configuration.","pos":[8924,9110],"source":"Install a custom template from a NuGet package on any NuGet feed by referencing a *nupkg* file directly or by specifying a file system directory that contains a templating configuration."},{"content":"Use the <ph id=\"ph1\">`-i|--install`</ph> option with the <bpt id=\"p1\">[</bpt>dotnet new<ept id=\"p1\">](dotnet-new.md)</ept> command.","pos":[9111,9186],"source":" Use the `-i|--install` option with the [dotnet new](dotnet-new.md) command."},{"pos":[9192,9254],"content":"To install a template from a NuGet package stored at nuget.org","linkify":"To install a template from a NuGet package stored at nuget.org","nodes":[{"content":"To install a template from a NuGet package stored at nuget.org","pos":[0,62]}]},{"pos":[9309,9354],"content":"To install a template from a local nupkg file","linkify":"To install a template from a local nupkg file","nodes":[{"content":"To install a template from a local nupkg file","pos":[0,45]}]},{"pos":[9411,9461],"content":"To install a template from a file system directory","linkify":"To install a template from a file system directory","nodes":[{"content":"To install a template from a file system directory","pos":[0,50]}]},{"pos":[9463,9570],"content":"The <ph id=\"ph1\">`FILE_SYSTEM_DIRECTORY`</ph> is the project folder containing the project and the <bpt id=\"p1\">*</bpt>.template.config<ept id=\"p1\">*</ept> folder:","source":"The `FILE_SYSTEM_DIRECTORY` is the project folder containing the project and the *.template.config* folder:"},{"pos":[9629,9652],"content":"Uninstalling a template","linkify":"Uninstalling a template","nodes":[{"content":"Uninstalling a template","pos":[0,23]}]},{"content":"Uninstall a custom template by referencing a NuGet package by its <ph id=\"ph1\">`id`</ph> or by specifying a file system directory that contains a templating configuration.","pos":[9654,9807],"source":"Uninstall a custom template by referencing a NuGet package by its `id` or by specifying a file system directory that contains a templating configuration."},{"content":"Use the <ph id=\"ph1\">`-u|--uninstall`</ph> install option with the <bpt id=\"p1\">[</bpt>dotnet new<ept id=\"p1\">](dotnet-new.md)</ept> command.","pos":[9808,9893],"source":" Use the `-u|--uninstall` install option with the [dotnet new](dotnet-new.md) command."},{"pos":[9899,9963],"content":"To uninstall a template from a NuGet package stored at nuget.org","linkify":"To uninstall a template from a NuGet package stored at nuget.org","nodes":[{"content":"To uninstall a template from a NuGet package stored at nuget.org","pos":[0,64]}]},{"pos":[10018,10065],"content":"To uninstall a template from a local nupkg file","linkify":"To uninstall a template from a local nupkg file","nodes":[{"content":"To uninstall a template from a local nupkg file","pos":[0,47]}]},{"content":"To uninstall the template, don't attempt to use the path to the <bpt id=\"p1\">*</bpt>nupkg<ept id=\"p1\">*</ept> file.","pos":[10067,10144],"source":"To uninstall the template, don't attempt to use the path to the *nupkg* file."},{"content":"Attempting to uninstall a template using <ph id=\"ph1\">`dotnet new -u &lt;PATH_TO_NUPKG_FILE&gt;`</ph> fails.","pos":[10145,10229],"source":" Attempting to uninstall a template using `dotnet new -u <PATH_TO_NUPKG_FILE>` fails."},{"content":"Reference the package by its <ph id=\"ph1\">`id`</ph>:","pos":[10230,10264],"source":" Reference the package by its `id`:"},{"pos":[10319,10371],"content":"To uninstall a template from a file system directory","linkify":"To uninstall a template from a file system directory","nodes":[{"content":"To uninstall a template from a file system directory","pos":[0,52]}]},{"content":"The <ph id=\"ph1\">`FILE_SYSTEM_DIRECTORY`</ph> is the project folder containing the project and the <bpt id=\"p1\">*</bpt>.template.config<ept id=\"p1\">*</ept> folder.","pos":[10373,10480],"source":"The `FILE_SYSTEM_DIRECTORY` is the project folder containing the project and the *.template.config* folder."},{"content":"The path provided needs to be the absolute path.","pos":[10481,10529]},{"content":"Attempting to uninstall a template using a relative path fails.","pos":[10530,10593]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>dotnet new<ept id=\"p1\">](dotnet-new.md)</ept> article.","pos":[10594,10660],"source":" For more information, see the [dotnet new](dotnet-new.md) article."},{"pos":[10719,10759],"content":"Create a project using a custom template","linkify":"Create a project using a custom template","nodes":[{"content":"Create a project using a custom template","pos":[0,40]}]},{"content":"After a template is installed, use the template by executing the <ph id=\"ph1\">`dotnet new &lt;TEMPLATE&gt;`</ph> command as you would with any other pre-installed template.","pos":[10761,10909],"source":"After a template is installed, use the template by executing the `dotnet new <TEMPLATE>` command as you would with any other pre-installed template."},{"content":"You can also specify <bpt id=\"p1\">[</bpt>options<ept id=\"p1\">](dotnet-new.md#options)</ept> to the <ph id=\"ph1\">`dotnet new`</ph> command, including template specific options you configured in the template settings.","pos":[10910,11069],"source":" You can also specify [options](dotnet-new.md#options) to the `dotnet new` command, including template specific options you configured in the template settings."},{"content":"Supply the template's short name directly to the command:","pos":[11070,11127]},{"pos":[11170,11178],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[11182,11274],"content":"<bpt id=\"p1\">[</bpt>Create a custom template for dotnet new (tutorial)<ept id=\"p1\">](../tutorials/create-custom-template.md)</ept>","source":"[Create a custom template for dotnet new (tutorial)](../tutorials/create-custom-template.md)"},{"pos":[11277,11356],"content":"<bpt id=\"p1\">[</bpt>dotnet/templating GitHub repo Wiki<ept id=\"p1\">](https://github.com/dotnet/templating/wiki)</ept>","source":"[dotnet/templating GitHub repo Wiki](https://github.com/dotnet/templating/wiki)"},{"pos":[11359,11454],"content":"<bpt id=\"p1\">[</bpt>dotnet/dotnet-template-samples GitHub repo<ept id=\"p1\">](https://github.com/dotnet/dotnet-template-samples)</ept>","source":"[dotnet/dotnet-template-samples GitHub repo](https://github.com/dotnet/dotnet-template-samples)"},{"pos":[11457,11594],"content":"<bpt id=\"p1\">[</bpt>How to create your own templates for dotnet new<ept id=\"p1\">](https://devblogs.microsoft.com/dotnet/how-to-create-your-own-templates-for-dotnet-new/)</ept>","source":"[How to create your own templates for dotnet new](https://devblogs.microsoft.com/dotnet/how-to-create-your-own-templates-for-dotnet-new/)"},{"pos":[11597,11684],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">*</bpt>template.json<ept id=\"p2\">*</ept> schema at the JSON Schema Store<ept id=\"p1\">](http://json.schemastore.org/template)</ept>","source":"[*template.json* schema at the JSON Schema Store](http://json.schemastore.org/template)"}]}