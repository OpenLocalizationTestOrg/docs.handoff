<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-create-a-wcf-service-that-communicates-over-websockets.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28a200b3e531f524e246c3d2fa1961573ec4e014</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\how-to-create-a-wcf-service-that-communicates-over-websockets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">786e9e88a80edb064ada04493dcfb9bcad668e3a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0adb8792cbb33e5fde4adfc7d47f9eaec3f31c99</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Create a WCF Service that Communicates over WebSockets</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a WCF Service that Communicates over WebSockets</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>WCF services and clients can use the <ph id="ph1">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> binding to communicate over WebSockets.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>WebSockets will be used when the <ph id="ph1">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> determines the service contract defines a callback contract.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic describes how to implement a WCF service and client that uses the <ph id="ph1">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> to communicate over WebSockets.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Define the Service</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Define a callback contract</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This contract will be implemented by the client application to allow the service to send messages back to the client.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Define the service contract and specify the <ph id="ph1">`IStockQuoteCallback`</ph> interface as the callback contract.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Implement the service contract.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The service operation <ph id="ph1">`StartSendingQuotes`</ph> is implemented as an asynchronous call.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>We retrieve the callback channel using the <ph id="ph1">`OperationContext`</ph> and if the channel is open, we make an async call on the callback channel.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Configure the service</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The service’s configuration file relies on WCF’s default endpoints.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;protocolMapping&gt;`</ph> section is used to specify that the <ph id="ph2">`NetHttpBinding`</ph> should be used for the default endpoints created.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Define the Client</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Implement the callback contract.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The callback contract operation is implemented as an asynchronous method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Implement the client code.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The CallbackHandler is repeated here for clarity.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The client application creates a new InstanceContext and specifies the implementation of the callback interface.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Next it creates an instance of the proxy class sending a reference to the newly created InstanceContext.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When the client calls the service, the service will call the client using the callback contract specified.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Configure the client</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>There is nothing special you need to do in the client configuration, just specify the client side endpoint using the <ph id="ph1">`NetHttpBinding`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following is the complete code used in this topic.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Synchronous and Asynchronous Operations<ept id="p1">](../../../../docs/framework/wcf/synchronous-and-asynchronous-operations.md)</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using the NetHttpBinding<ept id="p1">](../../../../docs/framework/wcf/feature-details/using-the-nethttpbinding.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>