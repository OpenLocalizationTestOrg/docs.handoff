<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="overloads.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d68846938aba809a7a3a6f7d27f185bb90a39cb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\modifiers\overloads.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5af07ec3726e19c4fa253a6c0899a54ec00f1797</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b24d13706e6d78f37248c289fedc0b687e3cd98</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Overloads (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Overloads (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies that a property or procedure redeclares one or more existing properties or procedures with the same name.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Overloading<ept id="p1">*</ept> is the practice of supplying more than one definition for a given property or procedure name in the same scope.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Redeclaring a property or procedure with a different signature is sometimes called <bpt id="p1">*</bpt>hiding by signature<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Rules</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Declaration Context.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`Overloads`</ph> only in a property or procedure declaration statement.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Combined Modifiers.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You cannot specify <ph id="ph1">`Overloads`</ph> together with <bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept> in the same procedure declaration.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Required Differences.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>signature<ept id="p1">*</ept> in this declaration must be different from the signature of every property or procedure that it overloads.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The signature comprises the property or procedure name together with the following:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>the number of parameters</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>the order of the parameters</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>the data types of the parameters</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>the number of type parameters (for a generic procedure)</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>the return type (only for a conversion operator procedure)</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>All overloads must have the same name, but each must differ from all the others in one or more of the preceding respects.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This allows the compiler to distinguish which version to use when code calls the property or procedure.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Disallowed Differences.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Changing one or more of the following is not valid for overloading a property or procedure, because they are not part of the signature:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>whether or not it returns a value (for a procedure)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>the data type of the return value (except for a conversion operator)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>the names of the parameters or type parameters</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>the constraints on the type parameters (for a generic procedure)</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>parameter modifier keywords (such as <ph id="ph1">`ByRef`</ph> or <ph id="ph2">`Optional`</ph>)</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>property or procedure modifier keywords (such as <ph id="ph1">`Public`</ph> or <ph id="ph2">`Shared`</ph>)</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Optional Modifier.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You do not have to use the <ph id="ph1">`Overloads`</ph> modifier when you are defining multiple overloaded properties or procedures in the same class.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>However, if you use <ph id="ph1">`Overloads`</ph> in one of the declarations, you must use it in all of them.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Shadowing and Overloading.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Overloads`</ph> can also be used to shadow an existing member, or set of overloaded members, in a base class.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you use <ph id="ph1">`Overloads`</ph> in this way, you declare the property or method with the same name and the same parameter list as the base class member, and you do not supply the <ph id="ph2">`Shadows`</ph> keyword.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`Overrides`</ph>, the compiler implicitly adds <ph id="ph2">`Overloads`</ph> so that your library APIs work with C# more easily.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Overloads`</ph> modifier can be used in these contexts:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Function Statement<ept id="p1">](../../../visual-basic/language-reference/statements/function-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Statement<ept id="p1">](../../../visual-basic/language-reference/statements/operator-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Property Statement<ept id="p1">](../../../visual-basic/language-reference/statements/property-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sub Statement<ept id="p1">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedure Overloading<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/procedure-overloading.md)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Types in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Define a Conversion Operator<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>