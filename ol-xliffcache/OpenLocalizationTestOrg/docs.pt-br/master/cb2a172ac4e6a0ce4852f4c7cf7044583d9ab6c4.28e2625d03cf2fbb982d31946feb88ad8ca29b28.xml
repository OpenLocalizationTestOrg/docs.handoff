{"content":"---\ntitle: \"Copying DataSet Contents\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: cb846617-2b1a-44ff-bd7f-5835f5ea37fa\n---\n# Copying DataSet Contents\nYou can create a copy of a <xref:System.Data.DataSet> so that you can work with data without affecting the original data, or work with a subset of the data from a **DataSet**. When copying a **DataSet**, you can:  \n  \n-   Create an exact copy of the **DataSet**, including the schema, data, row state information, and row versions.  \n  \n-   Create a **DataSet** that contains the schema of an existing **DataSet**, but only rows that have been modified. You can return all rows that have been modified, or specify a specific **DataRowState**. For more information about row states, see [Row States and Row Versions](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).  \n  \n-   Copy the schema, or relational structure, of the **DataSet** only, without copying any rows. Rows can be imported into an existing <xref:System.Data.DataTable> using <xref:System.Data.DataTable.ImportRow%2A>.  \n  \n To create an exact copy of the **DataSet** that includes both schema and data, use the <xref:System.Data.DataSet.Copy%2A> method of the **DataSet**. The following code example shows how to create an exact copy of the **DataSet**.  \n  \n```vb  \nDim copyDataSet As DataSet = customerDataSet.Copy()  \n```  \n  \n```csharp  \nDataSet copyDataSet = customerDataSet.Copy();  \n```  \n  \n To create a copy of a **DataSet** that includes schema and only the data representing **Added**, **Modified**, or **Deleted** rows, use the <xref:System.Data.DataSet.GetChanges%2A> method of the **DataSet**. You can also use **GetChanges** to return only rows with a specified row state by passing a **DataRowState** value when calling **GetChanges**. The following code example shows how to pass a **DataRowState** when calling **GetChanges**.  \n  \n```vb  \n' Copy all changes.  \nDim changeDataSet As DataSet = customerDataSet.GetChanges()  \n' Copy only new rows.  \nDim addedDataSetAs DataSet = _  \n    customerDataSet.GetChanges(DataRowState.Added)  \n```  \n  \n```csharp  \n// Copy all changes.  \nDataSet changeDataSet = customerDataSet.GetChanges();  \n// Copy only new rows.  \nDataSet addedDataSet= customerDataSet.GetChanges(DataRowState.Added);  \n```  \n  \n To create a copy of a **DataSet** that only includes schema, use the <xref:System.Data.DataSet.Clone%2A> method of the **DataSet**. You can also add existing rows to the cloned **DataSet** using the **ImportRow** method of the **DataTable**. **ImportRow** adds data, row state, and row version information to the specified table. Column values are added only where the column name matches and the data type is compatible.  \n  \n The following code example creates a clone of a **DataSet** and then adds the rows from the original **DataSet** to the **Customers** table in the **DataSet** clone for customers where the **CountryRegion** column has the value \"Germany\".  \n  \n```vb  \nDim customerDataSet As New DataSet  \n        customerDataSet.Tables.Add(New DataTable(\"Customers\"))  \n        customerDataSet.Tables(\"Customers\").Columns.Add(\"Name\", GetType(String))  \n        customerDataSet.Tables(\"Customers\").Columns.Add(\"CountryRegion\", GetType(String))  \n        customerDataSet.Tables(\"Customers\").Rows.Add(\"Juan\", \"Spain\")  \n        customerDataSet.Tables(\"Customers\").Rows.Add(\"Johann\", \"Germany\")  \n        customerDataSet.Tables(\"Customers\").Rows.Add(\"John\", \"UK\")  \n  \nDim germanyCustomers As DataSet = customerDataSet.Clone()  \n  \nDim copyRows() As DataRow = _  \n  customerDataSet.Tables(\"Customers\").Select(\"CountryRegion = 'Germany'\")  \n  \nDim customerTable As DataTable = germanyCustomers.Tables(\"Customers\")  \nDim copyRow As DataRow  \n  \nFor Each copyRow In copyRows  \n  customerTable.ImportRow(copyRow)  \nNext  \n```  \n  \n```csharp  \nDataSet customerDataSet = new DataSet();  \ncustomerDataSet.Tables.Add(new DataTable(\"Customers\"));  \ncustomerDataSet.Tables[\"Customers\"].Columns.Add(\"Name\", typeof(string));  \ncustomerDataSet.Tables[\"Customers\"].Columns.Add(\"CountryRegion\", typeof(string));  \ncustomerDataSet.Tables[\"Customers\"].Rows.Add(\"Juan\", \"Spain\");  \ncustomerDataSet.Tables[\"Customers\"].Rows.Add(\"Johann\", \"Germany\");  \ncustomerDataSet.Tables[\"Customers\"].Rows.Add(\"John\", \"UK\");  \n  \nDataSet germanyCustomers = customerDataSet.Clone();  \n  \nDataRow[] copyRows =   \n  customerDataSet.Tables[\"Customers\"].Select(\"CountryRegion = 'Germany'\");  \n  \nDataTable customerTable = germanyCustomers.Tables[\"Customers\"];  \n  \nforeach (DataRow copyRow in copyRows)  \n  customerTable.ImportRow(copyRow);  \n```  \n  \n## See also\n\n- <xref:System.Data.DataSet>\n- <xref:System.Data.DataTable>\n- [DataSets, DataTables, and DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)\n- [ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)\n","nodes":[{"pos":[4,142],"embed":true,"restype":"x-metadata","content":"title: \"Copying DataSet Contents\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: cb846617-2b1a-44ff-bd7f-5835f5ea37fa","nodes":[{"content":"Copying DataSet Contents","nodes":[{"pos":[0,24],"content":"Copying DataSet Contents","nodes":[{"content":"Copying DataSet Contents","pos":[0,24]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[149,173],"content":"Copying DataSet Contents","linkify":"Copying DataSet Contents","nodes":[{"content":"Copying DataSet Contents","pos":[0,24]}]},{"content":"You can create a copy of a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> so that you can work with data without affecting the original data, or work with a subset of the data from a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept>.","pos":[174,349],"source":"You can create a copy of a <xref:System.Data.DataSet> so that you can work with data without affecting the original data, or work with a subset of the data from a **DataSet**."},{"content":"When copying a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept>, you can:","pos":[350,386],"source":" When copying a **DataSet**, you can:"},{"pos":[396,505],"content":"Create an exact copy of the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept>, including the schema, data, row state information, and row versions.","source":"Create an exact copy of the **DataSet**, including the schema, data, row state information, and row versions."},{"content":"Create a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> that contains the schema of an existing <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept>, but only rows that have been modified.","pos":[515,627],"source":"Create a **DataSet** that contains the schema of an existing **DataSet**, but only rows that have been modified."},{"content":"You can return all rows that have been modified, or specify a specific <bpt id=\"p1\">**</bpt>DataRowState<ept id=\"p1\">**</ept>.","pos":[628,716],"source":" You can return all rows that have been modified, or specify a specific **DataRowState**."},{"content":"For more information about row states, see <bpt id=\"p1\">[</bpt>Row States and Row Versions<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.","pos":[717,891],"source":" For more information about row states, see [Row States and Row Versions](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)."},{"content":"Copy the schema, or relational structure, of the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> only, without copying any rows.","pos":[901,993],"source":"Copy the schema, or relational structure, of the **DataSet** only, without copying any rows."},{"content":"Rows can be imported into an existing <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> using <ph id=\"ph2\">&lt;xref:System.Data.DataTable.ImportRow%2A&gt;</ph>.","pos":[994,1109],"source":" Rows can be imported into an existing <xref:System.Data.DataTable> using <xref:System.Data.DataTable.ImportRow%2A>."},{"content":"To create an exact copy of the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> that includes both schema and data, use the <ph id=\"ph1\">&lt;xref:System.Data.DataSet.Copy%2A&gt;</ph> method of the <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept>.","pos":[1116,1264],"source":"To create an exact copy of the **DataSet** that includes both schema and data, use the <xref:System.Data.DataSet.Copy%2A> method of the **DataSet**."},{"content":"The following code example shows how to create an exact copy of the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept>.","pos":[1265,1345],"source":" The following code example shows how to create an exact copy of the **DataSet**."},{"content":"To create a copy of a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> that includes schema and only the data representing <bpt id=\"p2\">**</bpt>Added<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>Modified<ept id=\"p3\">**</ept>, or <bpt id=\"p4\">**</bpt>Deleted<ept id=\"p4\">**</ept> rows, use the <ph id=\"ph1\">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method of the <bpt id=\"p5\">**</bpt>DataSet<ept id=\"p5\">**</ept>.","pos":[1492,1699],"source":"To create a copy of a **DataSet** that includes schema and only the data representing **Added**, **Modified**, or **Deleted** rows, use the <xref:System.Data.DataSet.GetChanges%2A> method of the **DataSet**."},{"content":"You can also use <bpt id=\"p1\">**</bpt>GetChanges<ept id=\"p1\">**</ept> to return only rows with a specified row state by passing a <bpt id=\"p2\">**</bpt>DataRowState<ept id=\"p2\">**</ept> value when calling <bpt id=\"p3\">**</bpt>GetChanges<ept id=\"p3\">**</ept>.","pos":[1700,1843],"source":" You can also use **GetChanges** to return only rows with a specified row state by passing a **DataRowState** value when calling **GetChanges**."},{"content":"The following code example shows how to pass a <bpt id=\"p1\">**</bpt>DataRowState<ept id=\"p1\">**</ept> when calling <bpt id=\"p2\">**</bpt>GetChanges<ept id=\"p2\">**</ept>.","pos":[1844,1936],"source":" The following code example shows how to pass a **DataRowState** when calling **GetChanges**."},{"content":"To create a copy of a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> that only includes schema, use the <ph id=\"ph1\">&lt;xref:System.Data.DataSet.Clone%2A&gt;</ph> method of the <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept>.","pos":[2351,2482],"source":"To create a copy of a **DataSet** that only includes schema, use the <xref:System.Data.DataSet.Clone%2A> method of the **DataSet**."},{"content":"You can also add existing rows to the cloned <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> using the <bpt id=\"p2\">**</bpt>ImportRow<ept id=\"p2\">**</ept> method of the <bpt id=\"p3\">**</bpt>DataTable<ept id=\"p3\">**</ept>.","pos":[2483,2592],"source":" You can also add existing rows to the cloned **DataSet** using the **ImportRow** method of the **DataTable**."},{"content":"<bpt id=\"p1\">**</bpt>ImportRow<ept id=\"p1\">**</ept> adds data, row state, and row version information to the specified table.","pos":[2593,2680],"source":"**ImportRow** adds data, row state, and row version information to the specified table."},{"content":"Column values are added only where the column name matches and the data type is compatible.","pos":[2681,2772]},{"pos":[2779,3017],"content":"The following code example creates a clone of a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> and then adds the rows from the original <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> to the <bpt id=\"p3\">**</bpt>Customers<ept id=\"p3\">**</ept> table in the <bpt id=\"p4\">**</bpt>DataSet<ept id=\"p4\">**</ept> clone for customers where the <bpt id=\"p5\">**</bpt>CountryRegion<ept id=\"p5\">**</ept> column has the value \"Germany\".","source":"The following code example creates a clone of a **DataSet** and then adds the rows from the original **DataSet** to the **Customers** table in the **DataSet** clone for customers where the **CountryRegion** column has the value \"Germany\"."},{"pos":[4677,4685],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4749,4865],"content":"<bpt id=\"p1\">[</bpt>DataSets, DataTables, and DataViews<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>","source":"[DataSets, DataTables, and DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)"},{"pos":[4868,4972],"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept>","source":"[ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)"}]}