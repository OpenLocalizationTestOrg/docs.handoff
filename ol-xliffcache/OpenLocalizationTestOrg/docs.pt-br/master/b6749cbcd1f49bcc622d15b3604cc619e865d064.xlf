<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6749cbcd1f49bcc622d15b3604cc619e865d064</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\network-programming\using-client-sockets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24d55526295d54ec4598346d8d2615a25bcfdf73</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">319b92863006e07611a423952577beb6453f1690</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using Client Sockets | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using Client Sockets</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Before you can initiate a conversation through a <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, you must create a data pipe between your application and the remote device.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Although other network address families and protocols exist, this example shows how to create a TCP/IP connection to a remote service.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TCP/IP uses a network address and a service port number to uniquely identify a service.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The network address identifies a specific device on the network; the port number identifies the specific service on that device to connect to.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The combination of network address and service port is called an endpoint, which is represented in the .NET Framework by the <ph id="ph1">&lt;xref:System.Net.EndPoint&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A descendant of <bpt id="p1">**</bpt>EndPoint<ept id="p1">**</ept> is defined for each supported address family; for the IP address family, the class is <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Net.Dns&gt;</ph> class provides domain-name services to applications that use TCP/IP Internet services.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Net.Dns.Resolve%2A&gt;</ph> method queries a DNS server to map a user-friendly domain name (such as "host.contoso.com") to a numeric Internet address (such as 192.168.1.1).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Resolve<ept id="p1">**</ept> returns an <ph id="ph1">&lt;xref:System.Net.IPHostEntry&gt;</ph> that contains a list of addresses and aliases for the requested name.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In most cases, you can use the first address returned in the <ph id="ph1">&lt;xref:System.Net.IPHostEntry.AddressList%2A&gt;</ph> array.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following code gets an <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> containing the IP address for the server host.contoso.com.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Internet Assigned Numbers Authority (Iana) defines port numbers for common services (for more information, see www.iana.org/assignments/port-numbers).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Other services can have registered port numbers in the range 1,024 to 65,535.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code combines the IP address for host.contoso.com with a port number to create a remote endpoint for a connection.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After determining the address of the remote device and choosing a port to use for the connection, the application can attempt to establish a connection with the remote device.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following example uses an existing <bpt id="p1">**</bpt>IPEndPoint<ept id="p1">**</ept> to connect to a remote device and catches any exceptions that are thrown.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using a Synchronous Client Socket<ept id="p1">](../../../docs/framework/network-programming/using-a-synchronous-client-socket.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Using an Asynchronous Client Socket<ept id="p1">](../../../docs/framework/network-programming/using-an-asynchronous-client-socket.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Socket<ept id="p1">](../../../docs/framework/network-programming/how-to-create-a-socket.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sockets<ept id="p1">](../../../docs/framework/network-programming/sockets.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>