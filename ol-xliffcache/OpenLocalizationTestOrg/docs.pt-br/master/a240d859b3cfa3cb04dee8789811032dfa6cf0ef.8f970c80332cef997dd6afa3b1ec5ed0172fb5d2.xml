{"content":"---\ntitle: \"IMetaDataDispenser::OpenScopeOnMemory Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IMetaDataDispenser.OpenScopeOnMemory\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IMetaDataDispenser::OpenScopeOnMemory\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"OpenScopeOnMemory method [.NET Framework metadata]\"\n  - \"IMetaDataDispenser::OpenScopeOnMemory method [.NET Framework metadata]\"\nms.assetid: 14218249-bdec-48ae-b5fc-9f57f7ca8501\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# IMetaDataDispenser::OpenScopeOnMemory Method\nOpens an area of memory that contains existing metadata. That is, this method opens a specified area of memory in which the existing data is treated as metadata.  \n  \n## Syntax  \n  \n```  \nHRESULT OpenScopeOnMemory (  \n    [in]  LPCVOID     pData,   \n    [in]  ULONG       cbData,   \n    [in]  DWORD       dwOpenFlags,   \n    [in]  REFIID      riid,   \n    [out] IUnknown    **ppIUnk  \n);  \n```  \n  \n#### Parameters  \n `pData`  \n [in] A pointer that specifies the starting address of the memory area.  \n  \n `cbData`  \n [in] The size of the memory area, in bytes.  \n  \n `dwOpenFlags`  \n [in] A value of the [CorOpenFlags](../../../../docs/framework/unmanaged-api/metadata/coropenflags-enumeration.md) enumeration to specify the mode (read, write, and so on) for opening.  \n  \n `riid`  \n [in] The IID of the desired metadata interface to be returned; the caller will use the interface to import (read) or emit (write) metadata.  \n  \n The value of `riid` must specify one of the \"import\" or \"emit\" interfaces. Valid values are IID_IMetaDataEmit, IID_IMetaDataImport, IID_IMetaDataAssemblyEmit, IID_IMetaDataAssemblyImport, IID_IMetaDataEmit2, or IID_IMetaDataImport2.  \n  \n `ppIUnk`  \n [out] The pointer to the returned interface.  \n  \n## Remarks  \n The in-memory copy of the metadata can be queried using methods from one of the \"import\" interfaces, or added to using methods from the one of the \"emit\" interfaces.  \n  \n The `OpenScopeOnMemory` method is similar to the [IMetaDataDispenser::OpenScope](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md) method, except that the metadata of interest already exists in memory, rather than in a file on disk.  \n  \n If the target area of memory does not contain common language runtime (CLR) metadata, the `OpenScopeOnMemory` method will fail.  \n  \n## Requirements  \n **Platform:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** Cor.h  \n  \n **Library:** Used as a resource in MsCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See Also  \n [IMetaDataDispenser Interface](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-interface.md)   \n [IMetaDataDispenserEx Interface](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenserex-interface.md)   \n [IMetaDataAssemblyEmit Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-interface.md)   \n [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)   \n [IMetaDataEmit Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataemit-interface.md)   \n [IMetaDataEmit2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataemit2-interface.md)   \n [IMetaDataImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)   \n [IMetaDataImport2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)","nodes":[{"pos":[12,73],"content":"IMetaDataDispenser::OpenScopeOnMemory Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IMetaDataDispenser::OpenScopeOnMemory Method | Microsoft Docs","pos":[0,61]}]},{"pos":[746,790],"content":"IMetaDataDispenser::OpenScopeOnMemory Method","linkify":"IMetaDataDispenser::OpenScopeOnMemory Method","nodes":[{"content":"IMetaDataDispenser::OpenScopeOnMemory Method","pos":[0,44]}]},{"content":"Opens an area of memory that contains existing metadata.","pos":[791,847]},{"content":"That is, this method opens a specified area of memory in which the existing data is treated as metadata.","pos":[848,952]},{"pos":[961,967],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1195,1205],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer that specifies the starting address of the memory area.","pos":[1220,1290]},{"content":"[in] The size of the memory area, in bytes.","pos":[1309,1352]},{"content":"[in] A value of the <bpt id=\"p1\">[</bpt>CorOpenFlags<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/coropenflags-enumeration.md)</ept> enumeration to specify the mode (read, write, and so on) for opening.","pos":[1376,1559],"source":" [in] A value of the [CorOpenFlags](../../../../docs/framework/unmanaged-api/metadata/coropenflags-enumeration.md) enumeration to specify the mode (read, write, and so on) for opening."},{"content":"[in] The IID of the desired metadata interface to be returned; the caller will use the interface to import (read) or emit (write) metadata.","pos":[1576,1715]},{"content":"The value of <ph id=\"ph1\">`riid`</ph> must specify one of the \"import\" or \"emit\" interfaces.","pos":[1722,1796],"source":"The value of `riid` must specify one of the \"import\" or \"emit\" interfaces."},{"content":"Valid values are IID_IMetaDataEmit, IID_IMetaDataImport, IID_IMetaDataAssemblyEmit, IID_IMetaDataAssemblyImport, IID_IMetaDataEmit2, or IID_IMetaDataImport2.","pos":[1797,1954]},{"content":"[out] The pointer to the returned interface.","pos":[1973,2017]},{"pos":[2026,2033],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The in-memory copy of the metadata can be queried using methods from one of the \"import\" interfaces, or added to using methods from the one of the \"emit\" interfaces.","pos":[2037,2202]},{"pos":[2209,2481],"content":"The <ph id=\"ph1\">`OpenScopeOnMemory`</ph> method is similar to the <bpt id=\"p1\">[</bpt>IMetaDataDispenser::OpenScope<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md)</ept> method, except that the metadata of interest already exists in memory, rather than in a file on disk.","source":"The `OpenScopeOnMemory` method is similar to the [IMetaDataDispenser::OpenScope](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-openscope-method.md) method, except that the metadata of interest already exists in memory, rather than in a file on disk."},{"pos":[2488,2615],"content":"If the target area of memory does not contain common language runtime (CLR) metadata, the <ph id=\"ph1\">`OpenScopeOnMemory`</ph> method will fail.","source":"If the target area of memory does not contain common language runtime (CLR) metadata, the `OpenScopeOnMemory` method will fail."},{"pos":[2624,2636],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2640,2743],"content":"<bpt id=\"p1\">**</bpt>Platform:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platform:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2750,2767],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> Cor.h","source":"**Header:** Cor.h"},{"pos":[2774,2820],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Used as a resource in MsCorEE.dll","source":"**Library:** Used as a resource in MsCorEE.dll"},{"pos":[2827,2935],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[2944,2952],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>IMetaDataDispenser Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2956,3070],"source":"[IMetaDataDispenser Interface](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenser-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IMetaDataDispenserEx Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenserex-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3073,3192],"source":" [IMetaDataDispenserEx Interface](../../../../docs/framework/unmanaged-api/metadata/imetadatadispenserex-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IMetaDataAssemblyEmit Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3195,3316],"source":" [IMetaDataAssemblyEmit Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyemit-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IMetaDataAssemblyImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3319,3444],"source":" [IMetaDataAssemblyImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataassemblyimport-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IMetaDataEmit Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataemit-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3447,3552],"source":" [IMetaDataEmit Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataemit-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IMetaDataEmit2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataemit2-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3555,3662],"source":" [IMetaDataEmit2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataemit2-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IMetaDataImport Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[3665,3774],"source":" [IMetaDataImport Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IMetaDataImport2 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)</ept>","pos":[3777,3887],"source":" [IMetaDataImport2 Interface](../../../../docs/framework/unmanaged-api/metadata/imetadataimport2-interface.md)"}]}