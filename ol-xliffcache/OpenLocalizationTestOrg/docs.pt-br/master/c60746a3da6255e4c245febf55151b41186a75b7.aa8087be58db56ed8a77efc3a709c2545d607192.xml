{"content":"---\ntitle: \"Creating XML Trees (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: e86ba12b-17de-4579-81bb-66322b84cfbe\ncaps.latest.revision: 4\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Creating XML Trees (Visual Basic)\nOne of the most common XML tasks is constructing an XML tree. This section describes several ways to create them.  \n  \n## In This Section  \n  \n|Topic|Description|  \n|-----------|-----------------|  \n|[Functional Construction (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/functional-construction-linq-to-xml.md)|Provides an overview of functional construction in [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]. Functional construction enables you to create all or part of your XML tree in a single statement. This topic also shows how to embed queries when constructing an XML tree.|  \n|[Introduction to XML Literals in Visual Basic](../../../../visual-basic/programming-guide/concepts/linq/introduction-to-xml-literals.md)|Provides a quick introduction to creating trees in [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] by using XML literals. This topic includes links to the [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] documentation of XML literals.|  \n|[Cloning vs. Attaching (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/cloning-vs-attaching.md)|Demonstrates the difference between adding nodes from an existing XML tree (nodes are cloned and then added) and adding nodes with no parent (they are simply attached).|  \n|[Parsing XML (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/parsing-xml.md)|Shows how to parse XML from a variety of sources. [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] is layered on top of <xref:System.Xml.XmlReader>, which is used to parse the XML.|  \n|[How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-populate-an-xml-tree-with-an-xmlwriter-linq-to-xml.md)|Shows how to populate an XML tree by using an <xref:System.Xml.XmlWriter>.|  \n|[How to: Validate Using XSD (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-validate-using-xsd-linq-to-xml.md)|Shows how to validate an XML tree using XSD.|  \n|[Valid Content of XElement and XDocument Objects](../../../../visual-basic/programming-guide/concepts/linq/valid-content-of-xelement-and-xdocument-objects.md)|Describes the valid arguments that can be passed to the constructors and methods that are used to add content to elements and documents.|  \n  \n## See Also  \n [Programming Guide (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/programming-guide-linq-to-xml.md)","nodes":[{"pos":[12,62],"content":"Creating XML Trees (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Creating XML Trees (Visual Basic) | Microsoft Docs","pos":[0,50]}]},{"pos":[443,476],"content":"Creating XML Trees (Visual Basic)","linkify":"Creating XML Trees (Visual Basic)","nodes":[{"content":"Creating XML Trees (Visual Basic)","pos":[0,33]}]},{"content":"One of the most common XML tasks is constructing an XML tree.","pos":[477,538]},{"content":"This section describes several ways to create them.","pos":[539,590]},{"pos":[599,614],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"Topic","pos":[621,626]},{"content":"Description","pos":[627,638]},{"pos":[677,828],"content":"<bpt id=\"p1\">[</bpt>Functional Construction (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/functional-construction-linq-to-xml.md)</ept>","source":"[Functional Construction (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/functional-construction-linq-to-xml.md)"},{"content":"Provides an overview of functional construction in <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>.","pos":[829,983],"source":"Provides an overview of functional construction in [!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]."},{"content":"Functional construction enables you to create all or part of your XML tree in a single statement.","pos":[984,1081]},{"content":"This topic also shows how to embed queries when constructing an XML tree.","pos":[1082,1155]},{"pos":[1160,1296],"content":"<bpt id=\"p1\">[</bpt>Introduction to XML Literals in Visual Basic<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/introduction-to-xml-literals.md)</ept>","source":"[Introduction to XML Literals in Visual Basic](../../../../visual-basic/programming-guide/concepts/linq/introduction-to-xml-literals.md)"},{"content":"Provides a quick introduction to creating trees in <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> by using XML literals.","pos":[1297,1463],"source":"Provides a quick introduction to creating trees in [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] by using XML literals."},{"content":"This topic includes links to the <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> documentation of XML literals.","pos":[1464,1620],"source":" This topic includes links to the [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] documentation of XML literals."},{"pos":[1625,1745],"content":"<bpt id=\"p1\">[</bpt>Cloning vs. Attaching (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/cloning-vs-attaching.md)</ept>","source":"[Cloning vs. Attaching (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/cloning-vs-attaching.md)"},{"content":"Demonstrates the difference between adding nodes from an existing XML tree (nodes are cloned and then added) and adding nodes with no parent (they are simply attached).","pos":[1746,1914]},{"pos":[1919,2020],"content":"<bpt id=\"p1\">[</bpt>Parsing XML (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/parsing-xml.md)</ept>","source":"[Parsing XML (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/parsing-xml.md)"},{"content":"Shows how to parse XML from a variety of sources.","pos":[2021,2070]},{"content":"<ph id=\"ph1\">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> is layered on top of <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph>, which is used to parse the XML.","pos":[2071,2255],"source":"[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)] is layered on top of <xref:System.Xml.XmlReader>, which is used to parse the XML."},{"pos":[2260,2456],"content":"<bpt id=\"p1\">[</bpt>How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/how-to-populate-an-xml-tree-with-an-xmlwriter-linq-to-xml.md)</ept>","source":"[How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-populate-an-xml-tree-with-an-xmlwriter-linq-to-xml.md)"},{"content":"Shows how to populate an XML tree by using an <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[2457,2531],"source":"Shows how to populate an XML tree by using an <xref:System.Xml.XmlWriter>."},{"pos":[2536,2692],"content":"<bpt id=\"p1\">[</bpt>How to: Validate Using XSD (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/how-to-validate-using-xsd-linq-to-xml.md)</ept>","source":"[How to: Validate Using XSD (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/how-to-validate-using-xsd-linq-to-xml.md)"},{"content":"Shows how to validate an XML tree using XSD.","pos":[2693,2737]},{"pos":[2742,2900],"content":"<bpt id=\"p1\">[</bpt>Valid Content of XElement and XDocument Objects<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/valid-content-of-xelement-and-xdocument-objects.md)</ept>","source":"[Valid Content of XElement and XDocument Objects](../../../../visual-basic/programming-guide/concepts/linq/valid-content-of-xelement-and-xdocument-objects.md)"},{"content":"Describes the valid arguments that can be passed to the constructors and methods that are used to add content to elements and documents.","pos":[2901,3037]},{"pos":[3047,3055],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3059,3198],"content":"<bpt id=\"p1\">[</bpt>Programming Guide (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/programming-guide-linq-to-xml.md)</ept>","source":"[Programming Guide (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/programming-guide-linq-to-xml.md)"}]}