<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="implement-two-way-com-between-dhtml-and-client.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4823bf482e785b1e9d03ca57010a832cb0e26dd9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\implement-two-way-com-between-dhtml-and-client.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94b4bd31b6e6113edf2513204f1605304d0b205a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce5da84af2932dd3bf73fe71fde03b00219a304d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Implement Two-Way Communication Between DHTML Code and Client Application Code</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Implement Two-Way Communication Between DHTML Code and Client Application Code</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control to add existing dynamic HTML (DHTML) Web application code to your Windows Forms client applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is useful when you have invested significant development time in creating DHTML-based controls and you want to take advantage of the rich user interface capabilities of Windows Forms without having to rewrite existing code.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control lets you implement two-way communication between your client application code and your Web page scripting code through the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser.Document%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Additionally, you can configure the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control so that your Web controls blend seamlessly with other controls on your application form, hiding their DHTML implementation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To seamlessly blend the controls, format the page displayed so that its background color and visual style match the rest of the form, and use the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A&gt;</ph> properties to disable standard browser features.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To embed DHTML in your Windows Forms application</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control's <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A&gt;</ph> property to <ph id="ph3">`false`</ph> to prevent the <ph id="ph4">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control from opening files dropped onto it.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Set the control's <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph> to prevent the <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control from displaying its shortcut menu when the user right-clicks it.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Set the control's <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph> to prevent the <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control from responding to shortcut keys.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A&gt;</ph> property in the form's constructor or a <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following code uses the form class itself for the scripting object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Component Object Model (COM) must be able to access the scripting object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To make your form visible to COM, add the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</ph> attribute to your form class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Implement public properties or methods in your application code that your script code will use.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, if you use the form class for the scripting object, add the following code to your form class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`window.external`</ph> object in your scripting code to access public properties and methods of the specified object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following HTML code demonstrates how to call a method on the scripting object from a button click.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Copy this code into the BODY element of an HTML document that you load using the control's <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.Navigate%2A&gt;</ph> method or that you assign to the control's <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.DocumentText%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implement functions in your script code that your application code will use.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following HTML SCRIPT element provides an example function.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Copy this code into the HEAD element of an HTML document that you load using the control's <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.Navigate%2A&gt;</ph> method or that you assign to the control's <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.DocumentText%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.Document%2A&gt;</ph> property to access the script code from your client application code.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, add the following code to a button <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you are finished debugging your DHTML, set the control's <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to prevent the <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control from displaying error messages for script code problems.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following complete code example provides a demonstration application that you can use to understand this feature.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The HTML code is loaded into the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control through the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.DocumentText%2A&gt;</ph> property instead of being loaded from a separate HTML file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This code requires:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>References to the System and System.Windows.Forms assemblies.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id="p1">[</bpt>Building from the Command Line<ept id="p1">](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id="p2">[</bpt>Command-line Building With csc.exe<ept id="p2">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can also build this example in Visual Studio by pasting the code into a new project.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WebBrowser Control<ept id="p1">](webbrowser-control-windows-forms.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>