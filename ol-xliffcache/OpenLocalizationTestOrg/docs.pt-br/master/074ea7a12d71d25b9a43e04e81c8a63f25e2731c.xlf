<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="architecture.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">074ea7a12d71d25b9a43e04e81c8a63f25e2731c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\architecture.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30ae65d16a624a3feb7eaf09a5f428f6c6924294</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e5993146b5797baaa8f64d48ded94505c02ea79</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Windows Workflow Architecture | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Windows Workflow Architecture</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>raises the abstraction level for developing interactive long-running applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Units of work are encapsulated as activities.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Activities run in an environment that provides facilities for flow control, exception handling, fault propagation, persistence of state data, loading and unloading of in-progress workflows from memory, tracking, and transaction flow.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Activity Architecture</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Activities are developed as CLR types that derive from either <ph id="ph1">&lt;xref:System.Activities.Activity&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.CodeActivity&gt;</ph>, <ph id="ph3">&lt;xref:System.Activities.AsyncCodeActivity&gt;</ph>, or <ph id="ph4">&lt;xref:System.Activities.NativeActivity&gt;</ph>, or their variants that return a value, <ph id="ph5">&lt;xref:System.Activities.Activity%601&gt;</ph>, <ph id="ph6">&lt;xref:System.Activities.CodeActivity%601&gt;</ph>, <ph id="ph7">&lt;xref:System.Activities.AsyncCodeActivity%601&gt;</ph>, or <ph id="ph8">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Developing activities that derive from <ph id="ph1">&lt;xref:System.Activities.Activity&gt;</ph> allows the user to assemble pre-existing activities to quickly create units of work that execute in the workflow environment.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.CodeActivity&gt;</ph>, on the other hand, enables execution logic to be authored in managed code using <ph id="ph2">&lt;xref:System.Activities.CodeActivityContext&gt;</ph> primarily for access to activity arguments.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.AsyncCodeActivity&gt;</ph> is similar to <ph id="ph2">&lt;xref:System.Activities.CodeActivity&gt;</ph> except that it can be used to implement asynchronous tasks.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Developing activities that derive from <ph id="ph1">&lt;xref:System.Activities.NativeActivity&gt;</ph> allows users to access the runtime through the <ph id="ph2">&lt;xref:System.Activities.NativeActivityContext&gt;</ph> for functionality like scheduling children, creating bookmarks, invoking asynchronous work, registering transactions, and more.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Authoring activities that derive from <ph id="ph1">&lt;xref:System.Activities.Activity&gt;</ph> is declarative and these activities can be authored in XAML.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the following example, an activity called <ph id="ph1">`Prompt`</ph> is created using other activities for the execution body.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Activity Context</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.ActivityContext&gt;</ph> is the activity author's interface to the workflow runtime and provides access to the runtime's wealth of features.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the following example, an activity is defined that uses the execution context to create a bookmark (the mechanism that allows an activity to register a continuation point in its execution that can be resumed by a host passing data into the activity).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Activity Life Cycle</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An instance of an activity starts out in the <ph id="ph1">&lt;xref:System.Activities.ActivityInstanceState&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Unless exceptions are encountered, it remains in this state until all child activities are finished executing and any other pending work (<ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> objects, for instance) is completed, at which point it transitions to the <ph id="ph2">&lt;xref:System.Activities.ActivityInstanceState&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The parent of an activity instance can request a child to cancel; if the child is able to be canceled it completes in the <ph id="ph1">&lt;xref:System.Activities.ActivityInstanceState&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If an exception is thrown during execution, the runtime puts the activity into the <ph id="ph1">&lt;xref:System.Activities.ActivityInstanceState&gt;</ph> state and propagates the exception up the parent chain of activities.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Following are the three completion states of an activity:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Closed:<ept id="p1">**</ept> The activity has completed its work and exited.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Canceled:<ept id="p1">**</ept> The activity has gracefully abandoned its work and exited.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Work is not explicitly rolled back when this state is entered.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Faulted:<ept id="p1">**</ept> The activity has encountered an error and has exited without completing its work.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Activities remain in the <ph id="ph1">&lt;xref:System.Activities.ActivityInstanceState&gt;</ph> state when they are persisted or unloaded.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>