{"content":"---\ntitle: \"&#39;TryCast&#39; operands must be class-constrained type parameters, but &#39;&lt;typeparametername&gt;&#39; has no class constraint | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"BC30793\"\n  - \"vbc30793\"\nhelpviewer_keywords: \n  - \"BC30793\"\nms.assetid: a38a1da9-4413-4a69-a2ce-0b6d51c2c4ef\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# &#39;TryCast&#39; operands must be class-constrained type parameters, but &#39;&lt;typeparametername&gt;&#39; has no class constraint\nThe [TryCast Operator](../../visual-basic/language-reference/operators/trycast-operator.md) operator is used with a type parameter operand that is not guaranteed to be a reference type.  \n  \n `TryCast` operates only on reference types, such as classes or interfaces. When you pass a type parameter as an argument to `TryCast`, you must constrain that type parameter to be a reference type. You can do this by including one or more of the following in the type parameter's constraint list:  \n  \n-   One or more interface names (the type argument must implement all of them)  \n  \n-   At most one class name (the type argument must inherit from it)  \n  \n-   The [New Operator](../../visual-basic/language-reference/operators/new-operator.md) constraint (the type argument must expose a parameterless constructor that the creating code can access, and therefore it must be a class)  \n  \n-   The [Class (Visual Basic)](http://msdn.microsoft.com/en-us/0777c6e6-46bc-451b-ad70-57b49d4ef4f7) constraint (the type argument must be a reference type)  \n  \n **Error ID:** BC30793  \n  \n## To correct this error  \n  \n-   If you need to pass this type parameter to `TryCast`, constrain it with one or more of the constraints in the preceding list.  \n  \n-   If you cannot require the type parameter to accept only a reference type, you cannot use it with `TryCast`. You might be able to use the [CType Function](../../visual-basic/language-reference/functions/ctype-function.md) instead.  \n  \n## See Also  \n [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)   \n [Type List](../../visual-basic/language-reference/statements/type-list.md)   \n [Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)   \n [Widening and Narrowing Conversions](../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)   \n [Implicit and Explicit Conversions](../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)","nodes":[{"pos":[4,671],"nodes":[{"content":"&#39;TryCast&#39; operands must be class-constrained type parameters, but &#39;&lt;typeparametername&gt;&#39; has no class constraint | Microsoft Docs","nodes":[{"pos":[0,150],"content":"&#39;TryCast&#39; operands must be class-constrained type parameters, but &#39;&lt;typeparametername&gt;&#39; has no class constraint | Microsoft Docs","nodes":[{"content":"&amp;#39;TryCast&amp;#39; operands must be class-constrained type parameters, but &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>typeparametername<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; has no class constraint | Microsoft Docs","pos":[0,150],"source":"&#39;TryCast&#39; operands must be class-constrained type parameters, but &#39;&lt;typeparametername&gt;&#39; has no class constraint | Microsoft Docs"}]}],"pos":[6,159],"yaml":true}],"content":"title: \"&#39;TryCast&#39; operands must be class-constrained type parameters, but &#39;&lt;typeparametername&gt;&#39; has no class constraint | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"BC30793\"\n  - \"vbc30793\"\nhelpviewer_keywords: \n  - \"BC30793\"\nms.assetid: a38a1da9-4413-4a69-a2ce-0b6d51c2c4ef\ncaps.latest.revision: 9\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","yamlblock":true},{"pos":[678,811],"content":"&#39;TryCast&#39; operands must be class-constrained type parameters, but &#39;&lt;typeparametername&gt;&#39; has no class constraint","linkify":"&#39;TryCast&#39; operands must be class-constrained type parameters, but &#39;&lt;typeparametername&gt;&#39; has no class constraint","nodes":[{"content":"&amp;#39;TryCast&amp;#39; operands must be class-constrained type parameters, but &amp;#39;<ph id=\"ph1\">&amp;lt;</ph>typeparametername<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; has no class constraint","pos":[0,133],"source":"&#39;TryCast&#39; operands must be class-constrained type parameters, but &#39;&lt;typeparametername&gt;&#39; has no class constraint"}]},{"pos":[812,997],"content":"The <bpt id=\"p1\">[</bpt>TryCast Operator<ept id=\"p1\">](../../visual-basic/language-reference/operators/trycast-operator.md)</ept> operator is used with a type parameter operand that is not guaranteed to be a reference type.","source":"The [TryCast Operator](../../visual-basic/language-reference/operators/trycast-operator.md) operator is used with a type parameter operand that is not guaranteed to be a reference type."},{"content":"<ph id=\"ph1\">`TryCast`</ph> operates only on reference types, such as classes or interfaces.","pos":[1004,1078],"source":"`TryCast` operates only on reference types, such as classes or interfaces."},{"content":"When you pass a type parameter as an argument to <ph id=\"ph1\">`TryCast`</ph>, you must constrain that type parameter to be a reference type.","pos":[1079,1201],"source":" When you pass a type parameter as an argument to `TryCast`, you must constrain that type parameter to be a reference type."},{"content":"You can do this by including one or more of the following in the type parameter's constraint list:","pos":[1202,1300]},{"content":"One or more interface names (the type argument must implement all of them)","pos":[1310,1384]},{"content":"At most one class name (the type argument must inherit from it)","pos":[1394,1457]},{"pos":[1467,1689],"content":"The <bpt id=\"p1\">[</bpt>New Operator<ept id=\"p1\">](../../visual-basic/language-reference/operators/new-operator.md)</ept> constraint (the type argument must expose a parameterless constructor that the creating code can access, and therefore it must be a class)","source":"The [New Operator](../../visual-basic/language-reference/operators/new-operator.md) constraint (the type argument must expose a parameterless constructor that the creating code can access, and therefore it must be a class)"},{"pos":[1699,1851],"content":"The <bpt id=\"p1\">[</bpt>Class (Visual Basic)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0777c6e6-46bc-451b-ad70-57b49d4ef4f7)</ept> constraint (the type argument must be a reference type)","source":"The [Class (Visual Basic)](http://msdn.microsoft.com/en-us/0777c6e6-46bc-451b-ad70-57b49d4ef4f7) constraint (the type argument must be a reference type)"},{"pos":[1858,1879],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC30793","source":"**Error ID:** BC30793"},{"pos":[1888,1909],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1919,2044],"content":"If you need to pass this type parameter to <ph id=\"ph1\">`TryCast`</ph>, constrain it with one or more of the constraints in the preceding list.","source":"If you need to pass this type parameter to `TryCast`, constrain it with one or more of the constraints in the preceding list."},{"content":"If you cannot require the type parameter to accept only a reference type, you cannot use it with <ph id=\"ph1\">`TryCast`</ph>.","pos":[2054,2161],"source":"If you cannot require the type parameter to accept only a reference type, you cannot use it with `TryCast`."},{"content":"You might be able to use the <bpt id=\"p1\">[</bpt>CType Function<ept id=\"p1\">](../../visual-basic/language-reference/functions/ctype-function.md)</ept> instead.","pos":[2162,2283],"source":" You might be able to use the [CType Function](../../visual-basic/language-reference/functions/ctype-function.md) instead."},{"pos":[2292,2300],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2304,2420],"source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../visual-basic/language-reference/statements/type-list.md)</ept><ph id=\"ph1\"> </ph>","pos":[2424,2499],"source":"[Type List](../../visual-basic/language-reference/statements/type-list.md) "},{"content":"<bpt id=\"p1\">[</bpt>Value Types and Reference Types<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2503,2639],"source":"[Value Types and Reference Types](../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Widening and Narrowing Conversions<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)</ept><ph id=\"ph1\"> </ph>","pos":[2643,2785],"source":"[Widening and Narrowing Conversions](../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md) "},{"content":"<bpt id=\"p1\">[</bpt>Implicit and Explicit Conversions<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept>","pos":[2789,2928],"source":"[Implicit and Explicit Conversions](../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)"}]}