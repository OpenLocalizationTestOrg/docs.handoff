{"content":"---\ntitle: \"Compiler Warning (level 1) CS1683 | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"error-reference\"\nf1_keywords: \n  - \"CS1683\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"CS1683\"\nms.assetid: b3bd2729-a9e3-4b00-9937-d8d859fe87ef\ncaps.latest.revision: 10\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Compiler Warning (level 1) CS1683\nReference to type 'Type Name' claims it is defined in this assembly, but it is not defined in source or any added modules  \n  \n This error can occur when you are importing an assembly that contains a reference back to the assembly you are currently compiling, but the assembly being compiled contains nothing matching the reference. One way to get to this situation is to compile your assembly, which initially does contain the member that the assembly being imported is referencing. Then you update your assembly, mistakenly removing the members that the imported assembly is referencing.","nodes":[{"pos":[12,62],"content":"Compiler Warning (level 1) CS1683 | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Compiler Warning (level 1) CS1683 | Microsoft Docs","pos":[0,50]}]},{"pos":[555,588],"content":"Compiler Warning (level 1) CS1683","linkify":"Compiler Warning (level 1) CS1683","nodes":[{"content":"Compiler Warning (level 1) CS1683","pos":[0,33]}]},{"content":"Reference to type 'Type Name' claims it is defined in this assembly, but it is not defined in source or any added modules","pos":[589,710]},{"content":"This error can occur when you are importing an assembly that contains a reference back to the assembly you are currently compiling, but the assembly being compiled contains nothing matching the reference.","pos":[717,921]},{"content":"One way to get to this situation is to compile your assembly, which initially does contain the member that the assembly being imported is referencing.","pos":[922,1072]},{"content":"Then you update your assembly, mistakenly removing the members that the imported assembly is referencing.","pos":[1073,1178]}]}