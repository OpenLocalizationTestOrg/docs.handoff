{"content":"---\ntitle: \"Customizing Operations by Using Stored Procedures Exclusively\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 441e8ef3-998c-4d12-8825-ce66a178f90f\n---\n# Customizing Operations by Using Stored Procedures Exclusively\nAccess to data by using only stored procedures is a common scenario.  \n  \n## Example  \n  \n### Description  \n You can modify the example provided in [Customizing Operations By Using Stored Procedures](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-by-using-stored-procedures.md) by replacing even the first query (which causes dynamic SQL execution) with a method call that wraps a stored procedure.  \n  \n Assume `CustomersByCity` is the method, as in the following example.  \n  \n### Code  \n [!code-csharp[DLinqOverrideDefaultSproc#4](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqOverrideDefaultSproc/cs/northwind.cs#4)]\n [!code-vb[DLinqOverrideDefaultSproc#4](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqOverrideDefaultSproc/vb/northwind.vb#4)]  \n  \n The following code executes without any dynamic SQL.  \n  \n [!code-csharp[DLinqOverrideDefaultSproc#5](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqOverrideDefaultSproc/cs/Program.cs#5)]\n [!code-vb[DLinqOverrideDefaultSproc#5](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqOverrideDefaultSproc/vb/Module1.vb#5)]  \n  \n## See also\n\n- [Responsibilities of the Developer In Overriding Default Behavior](../../../../../../docs/framework/data/adonet/sql/linq/responsibilities-of-the-developer-in-overriding-default-behavior.md)\n","nodes":[{"pos":[4,179],"embed":true,"restype":"x-metadata","content":"title: \"Customizing Operations by Using Stored Procedures Exclusively\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: 441e8ef3-998c-4d12-8825-ce66a178f90f","nodes":[{"content":"Customizing Operations by Using Stored Procedures Exclusively","nodes":[{"pos":[0,61],"content":"Customizing Operations by Using Stored Procedures Exclusively","nodes":[{"content":"Customizing Operations by Using Stored Procedures Exclusively","pos":[0,61]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[186,247],"content":"Customizing Operations by Using Stored Procedures Exclusively","linkify":"Customizing Operations by Using Stored Procedures Exclusively","nodes":[{"content":"Customizing Operations by Using Stored Procedures Exclusively","pos":[0,61]}]},{"content":"Access to data by using only stored procedures is a common scenario.","pos":[248,316]},{"pos":[325,332],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[342,353],"content":"Description","linkify":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[357,676],"content":"You can modify the example provided in <bpt id=\"p1\">[</bpt>Customizing Operations By Using Stored Procedures<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-by-using-stored-procedures.md)</ept> by replacing even the first query (which causes dynamic SQL execution) with a method call that wraps a stored procedure.","source":"You can modify the example provided in [Customizing Operations By Using Stored Procedures](../../../../../../docs/framework/data/adonet/sql/linq/customizing-operations-by-using-stored-procedures.md) by replacing even the first query (which causes dynamic SQL execution) with a method call that wraps a stored procedure."},{"pos":[683,751],"content":"Assume <ph id=\"ph1\">`CustomersByCity`</ph> is the method, as in the following example.","source":"Assume `CustomersByCity` is the method, as in the following example."},{"pos":[761,765],"content":"Code","linkify":"Code","nodes":[{"content":"Code","pos":[0,4]}]},{"content":"The following code executes without any dynamic SQL.","pos":[1073,1125]},{"pos":[1434,1442],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1446,1635],"content":"<bpt id=\"p1\">[</bpt>Responsibilities of the Developer In Overriding Default Behavior<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/responsibilities-of-the-developer-in-overriding-default-behavior.md)</ept>","source":"[Responsibilities of the Developer In Overriding Default Behavior](../../../../../../docs/framework/data/adonet/sql/linq/responsibilities-of-the-developer-in-overriding-default-behavior.md)"}]}