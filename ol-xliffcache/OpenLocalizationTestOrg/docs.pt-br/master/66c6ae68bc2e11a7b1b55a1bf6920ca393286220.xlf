<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="data-sources-supported-by-windows-forms.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-3be5d15" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66c6ae68bc2e11a7b1b55a1bf6920ca393286220</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\data-sources-supported-by-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07cebced06cf9ca306f00d47ad43d555022e9b06</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bad8e87a978003778fcee9910b4f5e32be054411</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Data Sources Supported by Windows Forms | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Data Sources Supported by Windows Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Traditionally, data binding has been used within applications to take advantage of data stored in databases.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>With Windows Forms data binding, you can access data from databases as well as data in other structures, such as arrays and collections, so long as certain minimum requirements have been met.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Structures to Bind To</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In Windows Forms, you can bind to a wide variety of structures, from simple objects (simple binding) to complex lists such as ADO.NET data tables (complex binding).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For simple binding, Windows Forms supports binding to the public properties on the simple object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows Forms list-based binding generally requires that the object support the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface or the <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Additionally, if you are binding with through a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component, you can bind to an object that supports the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information about interfaces related to data binding, see <bpt id="p1">[</bpt>Interfaces Related to Data Binding<ept id="p1">](../../../docs/framework/winforms/interfaces-related-to-data-binding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following list shows the structures you can bind to in Windows Forms.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> is the most common Windows Forms data source and acts a proxy between a data source and Windows Forms controls.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The general <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> usage pattern is to bind your controls to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> and bind the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> to the data source (for example, an ADO.NET data table or a business object).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> provides services that enable and improve the level of data binding support.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, Windows Forms list based controls such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> do not directly support binding to <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> data sources however, you can enable this scenario by binding through a <ph id="ph4">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> will convert the data source to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Simple objects</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Windows Forms supports data binding control properties to public properties on the instance of an object using the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Windows Forms also supports binding list based controls, such as a <ph id="ph1">&lt;xref:System.Windows.Forms.ListControl&gt;</ph> to an object instance when a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> is used.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>array or collection</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To act as a data source, a list must implement the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface; one example would be an array that is an instance of the <ph id="ph2">&lt;xref:System.Array&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information on arrays, see <bpt id="p1">[</bpt>How to: Create an Array of Objects (Visual Basic)<ept id="p1">](http://msdn.microsoft.com/en-us/6b64e069-0387-400c-9081-3bdc581020c3)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In general, you should use <ph id="ph1">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> when you create lists of objects for data binding.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> is a generic version of the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface extends the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface by adding properties, methods and events necessary for two-way data binding.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Windows Forms controls can be bound to data sources that only support the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface if they are bound through a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vstecado](../../../includes/vstecado-md.md)]</ph> data objects</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vstecado](../../../includes/vstecado-md.md)]</ph> provides a number of data structures suitable for binding to.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each varies in its sophistication and complexity.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is the essential building block of a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, in that a number of columns comprise a table.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> has a <ph id="ph2">&lt;xref:System.Data.DataColumn.DataType%2A&gt;</ph> property that determines the kind of data the column holds (for example, the make of an automobile in a table describing cars).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can simple-bind a control (such as a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property) to a column within a data table.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is the representation of a table, with rows and columns, in <ph id="ph2">[!INCLUDE[vstecado](../../../includes/vstecado-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A data table contains two collections: <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>, representing the columns of data in a given table (which ultimately determine the kinds of data that can be entered into that table), and <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>, representing the rows of data in a given table.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can complex-bind a control to the information contained in a data table (such as binding the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to a data table).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>However, when you bind to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, you are a really binding to the table's default view.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> is a customized view of a single data table that may be filtered or sorted.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A data view is the data "snapshot" used by complex-bound controls.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can simple-bind or complex-bind to the data within a data view, but be aware that you are binding to a fixed "picture" of the data rather than a clean, updating data source.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is a collection of tables, relationships, and constraints of the data in a database.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can simple-bind or complex-bind to the data within a dataset, but be aware that you are binding to the default <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph> for the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> (see the next bullet point).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph> is a customized view of the entire <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, analogous to a <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>, but with relations included.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>With a <ph id="ph1">&lt;xref:System.Data.DataViewManager.DataViewSettings%2A&gt;</ph> collection, you can set default filters and sort options for any views that the <ph id="ph2">&lt;xref:System.Data.DataViewManager&gt;</ph> has for a given table.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Change Notification in Windows Forms Data Binding<ept id="p1">](../../../docs/framework/winforms/change-notification-in-windows-forms-data-binding.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Binding and Windows Forms<ept id="p1">](../../../docs/framework/winforms/data-binding-and-windows-forms.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms Data Binding<ept id="p1">](../../../docs/framework/winforms/windows-forms-data-binding.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>