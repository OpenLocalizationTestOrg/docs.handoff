<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="protecting-connection-information.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccb039a79c76c31b905783b81710571d8c5ab82b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\protecting-connection-information.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">474dd2d1499bd49eea3f780738b08fbd0f9292ec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a752167b6e574c28e8543ba071f1da66cae06021</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Protecting Connection Information</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Protecting Connection Information</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Protecting access to your data source is one of the most important goals when securing an application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A connection string presents a potential vulnerability if it is not secured.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Storing connection information in plain text or persisting it in memory risks compromising your entire system.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Connection strings embedded in your source code can be read using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](../../../../docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> to view Microsoft intermediate language (MSIL) in a compiled assembly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Security vulnerabilities involving connection strings can arise based on the type of authentication used, how connection strings are persisted in memory and on disk, and the techniques used to construct them at run time.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use Windows Authentication</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To help limit access to your data source, you must secure connection information such as user ID, password, and data source name.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In order to avoid exposing user information, we recommend using Windows authentication (sometimes referred to as <bpt id="p1">*</bpt>integrated security<ept id="p1">*</ept>) wherever possible.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows authentication is specified in a connection string by using the <ph id="ph1">`Integrated Security`</ph> or <ph id="ph2">`Trusted_Connection`</ph> keywords, eliminating the need to use a user ID and password.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When using Windows authentication, users are authenticated by Windows, and access to server and database resources is determined by granting permissions to Windows users and groups.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For situations where it is not possible to use Windows authentication, you must use extra care because user credentials are exposed in the connection string.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In an ASP.NET application, you can configure a Windows account as a fixed identity that is used to connect to databases and other network resources.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You enable impersonation in the identity element in the <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file and specify a user name and password.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The fixed identity account should be a low-privilege account that has been granted only necessary permissions in the database.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In addition, you should encrypt the configuration file so that the user name and password are not exposed in clear text.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Do Not Use Universal Data Link (UDL) files</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Avoid storing connection strings for an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> in a Universal Data Link (UDL) file.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>UDLs are stored in clear text and cannot be encrypted.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A UDL file is an external file-based resource to your application, and it cannot be secured or encrypted using the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Avoid Injection Attacks with Connection String Builders</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A connection string injection attack can occur when dynamic string concatenation is used to build connection strings based on user input.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the user input is not validated and malicious text or characters not escaped, an attacker can potentially access sensitive data or other resources on the server.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To address this problem, ADO.NET 2.0 introduced new connection string builder classes to validate connection string syntax and ensure that additional parameters are not introduced.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Connection String Builders<ept id="p1">](../../../../docs/framework/data/adonet/connection-string-builders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use Persist Security Info=False</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default value for <ph id="ph1">`Persist Security Info`</ph> is false; we recommend using this default in all connection strings.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Setting <ph id="ph1">`Persist Security Info`</ph> to <ph id="ph2">`true`</ph> or <ph id="ph3">`yes`</ph> allows security-sensitive information, including the user ID and password, to be obtained from a connection after it has been opened.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Persist Security Info`</ph> is set to <ph id="ph2">`false`</ph> or <ph id="ph3">`no`</ph>, security information is discarded after it is used to open the connection, ensuring that an untrusted source does not have access to security-sensitive information.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Encrypt Configuration Files</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can also store connection strings in configuration files, which eliminates the need to embed them in your application's code.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Configuration files are standard XML files for which the .NET Framework has defined a common set of elements.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Connection strings in configuration files are typically stored inside the <bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>connectionStrings&gt;<ept id="p1">**</ept> element in the <bpt id="p2">**</bpt>app.config<ept id="p2">**</ept> for a Windows application, or the <bpt id="p3">**</bpt>web.config<ept id="p3">**</ept> file for an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information on the basics of storing, retrieving and encrypting connection strings from configuration files, see <bpt id="p1">[</bpt>Connection Strings and Configuration Files<ept id="p1">](../../../../docs/framework/data/adonet/connection-strings-and-configuration-files.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Securing ADO.NET Applications<ept id="p1">](../../../../docs/framework/data/adonet/securing-ado-net-applications.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id="p1">](https://docs.microsoft.com/previous-versions/aspnet/53tyfkaw(v=vs.100))</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security in .NET<ept id="p1">](../../../standard/security/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>