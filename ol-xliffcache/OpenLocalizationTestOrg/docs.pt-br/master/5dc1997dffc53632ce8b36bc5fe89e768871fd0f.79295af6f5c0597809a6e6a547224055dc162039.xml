{"content":"---\ntitle: \"How to: Handle User Input Events in Windows Forms Controls\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"Windows Forms controls, user input\"\n  - \"user input [Windows Forms], Windows Forms controls\"\nms.assetid: 3de74dcf-fae3-42d0-92b5-bc04a61a6888\n---\n# How to: Handle User Input Events in Windows Forms Controls\nThis example demonstrates how to handle most keyboard, mouse, focus, and validation events that can occur in a Windows Forms control. The text box named `TextBoxInput` receives the events when it has focus, and information about each event is written in the text box named `TextBoxOutput` in the order in which the events are raised. The application also includes a set of check boxes that can be used to filter which events to report.  \n  \n## Example  \n [!code-cpp[System.Windows.Forms.UserInputWalkthrough#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.UserInputWalkthrough/cpp/form1.cpp#0)]\n [!code-csharp[System.Windows.Forms.UserInputWalkthrough#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.UserInputWalkthrough/CS/form1.cs#0)]\n [!code-vb[System.Windows.Forms.UserInputWalkthrough#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.UserInputWalkthrough/VB/form1.vb#0)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System, System.Drawing and System.Windows.Forms assemblies.  \n  \n For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in Visual Studio by pasting the code into a new project.  \n  \n## See also\n\n- [User Input in Windows Forms](user-input-in-windows-forms.md)\n","nodes":[{"pos":[4,306],"embed":true,"restype":"x-metadata","content":"title: \"How to: Handle User Input Events in Windows Forms Controls\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"Windows Forms controls, user input\"\n  - \"user input [Windows Forms], Windows Forms controls\"\nms.assetid: 3de74dcf-fae3-42d0-92b5-bc04a61a6888","nodes":[{"content":"How to: Handle User Input Events in Windows Forms Controls","nodes":[{"pos":[0,58],"content":"How to: Handle User Input Events in Windows Forms Controls","nodes":[{"content":"How to: Handle User Input Events in Windows Forms Controls","pos":[0,58]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[313,371],"content":"How to: Handle User Input Events in Windows Forms Controls","linkify":"How to: Handle User Input Events in Windows Forms Controls","nodes":[{"content":"How to: Handle User Input Events in Windows Forms Controls","pos":[0,58]}]},{"content":"This example demonstrates how to handle most keyboard, mouse, focus, and validation events that can occur in a Windows Forms control.","pos":[372,505]},{"content":"The text box named <ph id=\"ph1\">`TextBoxInput`</ph> receives the events when it has focus, and information about each event is written in the text box named <ph id=\"ph2\">`TextBoxOutput`</ph> in the order in which the events are raised.","pos":[506,705],"source":" The text box named `TextBoxInput` receives the events when it has focus, and information about each event is written in the text box named `TextBoxOutput` in the order in which the events are raised."},{"content":"The application also includes a set of check boxes that can be used to filter which events to report.","pos":[706,807]},{"pos":[816,823],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1326,1344],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[1348,1370]},{"content":"References to the System, System.Drawing and System.Windows.Forms assemblies.","pos":[1380,1457]},{"content":"For information about building this example from the command line for Visual Basic or Visual C#, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[1464,1812],"source":"For information about building this example from the command line for Visual Basic or Visual C#, see [Building from the Command Line](../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in Visual Studio by pasting the code into a new project.","pos":[1813,1901]},{"pos":[1910,1918],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1922,1983],"content":"<bpt id=\"p1\">[</bpt>User Input in Windows Forms<ept id=\"p1\">](user-input-in-windows-forms.md)</ept>","source":"[User Input in Windows Forms](user-input-in-windows-forms.md)"}]}