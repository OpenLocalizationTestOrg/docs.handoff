{"content":"---\ntitle: \"How to: Access services with a duplex contract\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"duplex contracts [WCF]\"\nms.assetid: 746a9d64-f21c-426c-b85d-972e916ec6c5\n---\n\n# How to: Access services with a duplex contract\n\nOne feature of Windows Communication Foundation (WCF) is the ability to create a service that uses a duplex messaging pattern. This pattern allows a service to communicate with the client through a callback. This topic shows the steps to create a WCF client in a client class that implements the callback interface.\n\nA dual binding exposes the IP address of the client to the service. The client should use security to ensure that it connects only to services it trusts.\n\nFor a tutorial on creating a basic WCF service and client, see [Getting Started Tutorial](../../../../docs/framework/wcf/getting-started-tutorial.md).\n\n## To access a duplex service\n\n1. Create a service that contains two interfaces. The first interface is for the service, the second is for the callback. For more information about creating a duplex service, see [How to: Create a Duplex Contract](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md).\n\n2. Run the service.\n\n3. Use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) to generate contracts (interfaces) for the client. For information about how to do this, see  [How to: Create a Client](../../../../docs/framework/wcf/how-to-create-a-wcf-client.md).\n\n4. Implement the callback interface in the client class, as shown in the following example.\n\n    ```csharp\n    public class CallbackHandler : ICalculatorDuplexCallback\n    {\n        public void Result(double result)\n        {\n            Console.WriteLine(\"Result ({0})\", result);\n        }\n        public void Equation(string equation)\n        {\n            Console.WriteLine(\"Equation({0})\", equation);\n        }\n    }\n    ```\n\n    ```vb\n    Public Class CallbackHandler\n    Implements ICalculatorDuplexCallback\n       Public Sub Result (ByVal result As Double)\n          Console.WriteLine(\"Result ({0})\", result)\n       End Sub\n        Public Sub Equation(ByVal equation As String)\n            Console.WriteLine(\"Equation({0})\", equation)\n        End Sub\n    End Class\n    ```\n\n5. Create an instance of the <xref:System.ServiceModel.InstanceContext> class. The constructor requires an instance of the client class.\n\n    ```csharp\n    InstanceContext site = new InstanceContext(new CallbackHandler());\n    ```\n\n    ```vb\n    Dim site As InstanceContext = New InstanceContext(new CallbackHandler())\n    ```\n\n6. Create an instance of the WCF client using the constructor that requires an <xref:System.ServiceModel.InstanceContext> object. The second parameter of the constructor is the name of an endpoint found in the configuration file.\n\n    ```csharp\n    CalculatorDuplexClient wcfClient = new CalculatorDuplexClient(site, \"default\");\n    ```\n\n    ```vb\n    Dim wcfClient As New CalculatorDuplexClient(site, \"default\")\n    ```\n\n7. Call the methods of the WCF client as required.\n\n## Example\n\nThe following code example demonstrates how to create a client class that accesses a duplex contract.\n\n[!code-csharp[S_DuplexClients#1](../../../../samples/snippets/csharp/VS_Snippets_CFX/s_duplexclients/cs/client.cs#1)]\n[!code-vb[S_DuplexClients#1](../../../../samples/snippets/visualbasic/VS_Snippets_CFX/s_duplexclients/vb/client.vb#1)]\n\n## See also\n\n- [Getting Started Tutorial](../../../../docs/framework/wcf/getting-started-tutorial.md)\n- [How to: Create a Duplex Contract](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)\n- [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)\n- [How to: Create a Client](../../../../docs/framework/wcf/how-to-create-a-wcf-client.md)\n- [How to: Use the ChannelFactory](../../../../docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)\n","nodes":[{"pos":[4,213],"embed":true,"restype":"x-metadata","content":"title: \"How to: Access services with a duplex contract\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords:\n  - \"duplex contracts [WCF]\"\nms.assetid: 746a9d64-f21c-426c-b85d-972e916ec6c5","nodes":[{"content":"How to: Access services with a duplex contract","nodes":[{"pos":[0,46],"content":"How to: Access services with a duplex contract","nodes":[{"content":"How to: Access services with a duplex contract","pos":[0,46]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[221,267],"content":"How to: Access services with a duplex contract","linkify":"How to: Access services with a duplex contract","nodes":[{"content":"How to: Access services with a duplex contract","pos":[0,46]}]},{"content":"One feature of Windows Communication Foundation (WCF) is the ability to create a service that uses a duplex messaging pattern.","pos":[269,395]},{"content":"This pattern allows a service to communicate with the client through a callback.","pos":[396,476]},{"content":"This topic shows the steps to create a WCF client in a client class that implements the callback interface.","pos":[477,584]},{"content":"A dual binding exposes the IP address of the client to the service.","pos":[586,653]},{"content":"The client should use security to ensure that it connects only to services it trusts.","pos":[654,739]},{"pos":[741,891],"content":"For a tutorial on creating a basic WCF service and client, see <bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](../../../../docs/framework/wcf/getting-started-tutorial.md)</ept>.","source":"For a tutorial on creating a basic WCF service and client, see [Getting Started Tutorial](../../../../docs/framework/wcf/getting-started-tutorial.md)."},{"pos":[896,922],"content":"To access a duplex service","linkify":"To access a duplex service","nodes":[{"content":"To access a duplex service","pos":[0,26]}]},{"content":"Create a service that contains two interfaces.","pos":[927,973]},{"content":"The first interface is for the service, the second is for the callback.","pos":[974,1045]},{"content":"For more information about creating a duplex service, see <bpt id=\"p1\">[</bpt>How to: Create a Duplex Contract<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)</ept>.","pos":[1046,1222],"source":" For more information about creating a duplex service, see [How to: Create a Duplex Contract](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)."},{"content":"Run the service.","pos":[1227,1243]},{"content":"Use the <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> to generate contracts (interfaces) for the client.","pos":[1248,1439],"source":"Use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) to generate contracts (interfaces) for the client."},{"content":"For information about how to do this, see  <bpt id=\"p1\">[</bpt>How to: Create a Client<ept id=\"p1\">](../../../../docs/framework/wcf/how-to-create-a-wcf-client.md)</ept>.","pos":[1440,1571],"source":" For information about how to do this, see  [How to: Create a Client](../../../../docs/framework/wcf/how-to-create-a-wcf-client.md)."},{"content":"Implement the callback interface in the client class, as shown in the following example.","pos":[1576,1664]},{"content":"Create an instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> class.","pos":[2357,2432],"source":"Create an instance of the <xref:System.ServiceModel.InstanceContext> class."},{"content":"The constructor requires an instance of the client class.","pos":[2433,2490]},{"content":"Create an instance of the WCF client using the constructor that requires an <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object.","pos":[2685,2811],"source":"Create an instance of the WCF client using the constructor that requires an <xref:System.ServiceModel.InstanceContext> object."},{"content":"The second parameter of the constructor is the name of an endpoint found in the configuration file.","pos":[2812,2911]},{"content":"Call the methods of the WCF client as required.","pos":[3107,3154]},{"pos":[3159,3166],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates how to create a client class that accesses a duplex contract.","pos":[3168,3269]},{"pos":[3512,3520],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3524,3610],"content":"<bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](../../../../docs/framework/wcf/getting-started-tutorial.md)</ept>","source":"[Getting Started Tutorial](../../../../docs/framework/wcf/getting-started-tutorial.md)"},{"pos":[3613,3730],"content":"<bpt id=\"p1\">[</bpt>How to: Create a Duplex Contract<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)</ept>","source":"[How to: Create a Duplex Contract](../../../../docs/framework/wcf/feature-details/how-to-create-a-duplex-contract.md)"},{"pos":[3733,3865],"content":"<bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>","source":"[ServiceModel Metadata Utility Tool (Svcutil.exe)](../../../../docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)"},{"pos":[3868,3955],"content":"<bpt id=\"p1\">[</bpt>How to: Create a Client<ept id=\"p1\">](../../../../docs/framework/wcf/how-to-create-a-wcf-client.md)</ept>","source":"[How to: Create a Client](../../../../docs/framework/wcf/how-to-create-a-wcf-client.md)"},{"pos":[3958,4071],"content":"<bpt id=\"p1\">[</bpt>How to: Use the ChannelFactory<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)</ept>","source":"[How to: Use the ChannelFactory](../../../../docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)"}]}