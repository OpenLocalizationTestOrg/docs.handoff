<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="calling-service-operations-wcf-data-services.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ef00861624531e68ad5b8a3b080810040ae3ff6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\wcf\calling-service-operations-wcf-data-services.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4d4f12492c3f8873f8e45030923812addaae7d3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2d34dec6d0e994d2cae9d134a5d94f7ca3faad5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Calling Service Operations (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Calling Service Operations (WCF Data Services)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[ssODataFull](../../../../includes/ssodatafull-md.md)]</ph> defines service operations for a data service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> enables you to define such operations as methods on the data service.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Like other data service resources, these service operations are addressed by using URIs.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A service operation can return collections of entity types, single entity type instances, and primitive types, such as integer and string.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A service operation can also return <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client library can be used to access service operations that support HTTP GET requests.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These kinds of service operations are defined as methods that have the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebGetAttribute&gt;</ph> applied.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Service Operations<ept id="p1">](../../../../docs/framework/data/wcf/service-operations-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Service operations are exposed in the metadata returned by a data service that implements the <ph id="ph1">[!INCLUDE[ssODataShort](../../../../includes/ssodatashort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the metadata, service operations are represented as <ph id="ph1">`FunctionImport`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When generating the strongly-typed <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>, the Add Service Reference and DataSvcUtil.exe tools ignore this element.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Because of this, you will not find a method on the context that can be used to call a service operation directly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, you can still use the <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client to call service operations in one of these two ways:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>By calling the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.Execute%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>, supplying the URI of the service operation, along with any parameters.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method is used to call any GET service operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By using the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> to create a <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When calling <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph>, the name of the service operation is supplied to the <ph id="ph2">`entitySetName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This method returns a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> object that calls the service operation when enumerated or when the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.Execute%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This method is used to call GET service operations that return a collection.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A single parameter can be supplied by using the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.AddQueryOption%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> object returned by this method can be further composed against like any query object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Querying the Data Service<ept id="p1">](../../../../docs/framework/data/wcf/querying-the-data-service-wcf-data-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Considerations for Calling Service Operations</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following considerations apply when using the <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client to call service operations.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When accessing the data service asynchronously, you must use the equivalent asynchronous <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.BeginExecute%2A&gt;</ph><ph id="ph2">/</ph><ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext.EndExecute%2A&gt;</ph> methods on <ph id="ph4">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> or the <ph id="ph5">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A&gt;</ph><ph id="ph6">/</ph><ph id="ph7">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A&gt;</ph> methods on <ph id="ph8">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client library cannot materialize the results from a service operation that returns a collection of primitive types.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client library does not support calling POST service operations.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Service operations that are called by an HTTP POST are defined by using the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebInvokeAttribute&gt;</ph> with the <ph id="ph2">`Method="POST"`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To call a service operation by using an HTTP POST request, you must instead use an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You cannot use <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph> to call a GET service operation that returns a single result, of either entity or primitive type, or that requires more than one input parameter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You must instead call the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Consider creating an extension method on the strongly-typed <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> partial class, which is generated by the tools, that uses either the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph> or the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext.Execute%2A&gt;</ph> method to call a service operation.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This enables you to call service operations directly from the context.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, see the blog post <bpt id="p1">[</bpt>Service Operations and the WCF Data Services Client<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=215668)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph> to call a service operation, the client library automatically escapes characters supplied to the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.AddQueryOption%2A&gt;</ph> by performing percent-encoding of reserved characters, such as ampersand (&amp;), and escaping of single-quotes in strings.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>However, when you call one of the <bpt id="p1">*</bpt>Execute<ept id="p1">*</ept> methods to call a service operation, you must remember to perform this escaping of any user-supplied string values.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Single-quotes in URIs are escaped as pairs of single-quotes.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Examples of Calling Service Operations</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This section contains the following examples of how to call service operations by using the <ph id="ph1">[!INCLUDE[ssAstoria](../../../../includes/ssastoria-md.md)]</ph> client library:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Calling Execute<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> to Return a Collection of Entities<ept id="p1">](../../../../docs/framework/data/wcf/calling-service-operations-wcf-data-services.md#ExecuteIQueryable)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using CreateQuery<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> to Return a Collection of Entities<ept id="p1">](../../../../docs/framework/data/wcf/calling-service-operations-wcf-data-services.md#CreateQueryIQueryable)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Calling Execute<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> to Return a Single Entity<ept id="p1">](../../../../docs/framework/data/wcf/calling-service-operations-wcf-data-services.md#ExecuteSingleEntity)</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Calling Execute<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> to Return a Collection of Primitive Values<ept id="p1">](../../../../docs/framework/data/wcf/calling-service-operations-wcf-data-services.md#ExecutePrimitiveCollection)</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Calling Execute<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph> to Return a Single Primitive Value<ept id="p1">](../../../../docs/framework/data/wcf/calling-service-operations-wcf-data-services.md#ExecutePrimitiveValue)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Calling a Service Operation that Returns No Data<ept id="p1">](../../../../docs/framework/data/wcf/calling-service-operations-wcf-data-services.md#ExecuteVoid)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Calling a Service Operation Asynchronously<ept id="p1">](../../../../docs/framework/data/wcf/calling-service-operations-wcf-data-services.md#ExecuteAsync)</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Calling Execute<ph id="ph1">\&lt;</ph>T&gt; to Return a Collection of Entities</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following example calls a service operation named GetOrdersByCity, which takes a string parameter of <ph id="ph1">`city`</ph> and returns an <ph id="ph2">&lt;xref:System.Linq.IQueryable%601&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In this example, the service operation returns a collection of <ph id="ph1">`Order`</ph> objects with related <ph id="ph2">`Order_Detail`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Using CreateQuery<ph id="ph1">\&lt;</ph>T&gt; to Return a Collection of Entities</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph> to return a <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> that is used to call the same GetOrdersByCity service operation:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.AddQueryOption%2A&gt;</ph> method is used to add the parameter to the query, and the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.Expand%2A&gt;</ph> method is used to include related Order_Details objects in the results.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Calling Execute<ph id="ph1">\&lt;</ph>T&gt; to Return a Single Entity</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example calls a service operation named GetNewestOrder that returns only a single Order entity:</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</ph> method is used to request only a single Order entity on execution.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Calling Execute<ph id="ph1">\&lt;</ph>T&gt; to Return a Collection of Primitive Values</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following example calls a service operation that returns a collection of string values:</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Calling Execute<ph id="ph1">\&lt;</ph>T&gt; to Return a Single Primitive Value</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following example calls a service operation that returns a single string value:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Again in this example, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</ph> method is used to request only a single integer value on execution.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Calling a Service Operation that Returns No Data</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following example calls a service operation that returns no data:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Because not data is returned, the value of the execution is not assigned.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The only indication that the request has succeeded is that no <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQueryException&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Calling a Service Operation Asynchronously</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example calls a service operation asynchronously by calling <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.BeginExecute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext.EndExecute%2A&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Because no data is returned, the value returned by the execution is not assigned.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The only indication that the request has succeeded is that no <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQueryException&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following example calls the same service operation asynchronously by using <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WCF Data Services Client Library<ept id="p1">](../../../../docs/framework/data/wcf/wcf-data-services-client-library.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>