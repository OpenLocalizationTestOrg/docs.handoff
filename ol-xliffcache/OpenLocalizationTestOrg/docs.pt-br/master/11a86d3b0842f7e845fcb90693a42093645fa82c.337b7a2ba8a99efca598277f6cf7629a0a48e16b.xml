{"content":"---\ntitle: \"How to: Authenticate with a User Name and Password | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"authentication [WCF], user name and password\"\nms.assetid: a5415be2-0ef3-464c-9f76-c255cb8165a4\ncaps.latest.revision: 18\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Authenticate with a User Name and Password\nThis topic demonstrates how to enable a [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] service to authenticate a client with a Windows domain username and password. It assumes you have a working, self-hosted WCF service. For an example of creating a basic self-hosted WCF service see, [Getting Started Tutorial](../../../../docs/framework/wcf/getting-started-tutorial.md). This topic assumes the service is configured in code. If you would like to see an example of configuring a similar service using a configuration file see [Message Security User Name](../../../../docs/framework/wcf/samples/message-security-user-name.md)  \n  \n To configure a service to authenticate its clients using Windows Domain username and passwords use the <<!--zz xref:System.ServiceModel.WsHttpBinding --> `xref:System.ServiceModel.WsHttpBinding`> and set its `Security.Mode` property to `Message`. In addition you must specify an X509 certificate that will be used to encrypt the username and password as they are sent from the client to the service.  \n  \n On the client, you must prompt the user for the username and password and specify the user’s credentials on the WCF client proxy.  \n  \n### To configure a WCF service to authenticate using Windows domain username and password.  \n  \n1.  Create an instance of the <<!--zz xref:System.ServiceModel.WsHttpBinding --> `xref:System.ServiceModel.WsHttpBinding`>, set the security mode of the binding to `SecurityMode.Message`, set the `ClientCredentialType` of the binding to `MessageCredentialType.UserName`, and add a service endpoint using the configured binding to the service host as shown in the following code:  \n  \n    ```  \n    // ...  \n    WSHttpBinding userNameBinding = new WSHttpBinding();  \n    userNameBinding.Security.Mode = SecurityMode.Message;  \n    userNameBinding.Security.Message.ClientCredentialType = MessageCredentialType.UserName;  \n    svcHost.AddServiceEndpoint(typeof(IService1), userNameBinding, \"\");  \n    // ...  \n    ```  \n  \n2.  Specify the server certificate used to encrypt the username and password information sent over the wire. This code should immediately follow the code above. The following example uses the certificate that is created by the setup.bat file from the [Message Security User Name](../../../../docs/framework/wcf/samples/message-security-user-name.md) sample:  \n  \n    ```  \n    // ...  \n    svcHost.Credentials.ServiceCertificate.SetCertificate(StoreLocation.LocalMachine, StoreName.My, X509FindType.FindBySubjectName, \"localhost\");  \n    // ...  \n    ```  \n  \n     You can use your own certificate, just modify the code to refer to your certificate. For more information about creating and using certificates see [Working with Certificates](../../../../docs/framework/wcf/feature-details/working-with-certificates.md). Make sure the certificate is in the Trusted People certificate store for the Local Machine. You can do this by running mmc.exe and selecting the **File**, **Add/Remove Snap-in...** menu item. In the **Add or Remove Snap-ins** dialog, select the **Certificates snap-in** and click **Add**. In the Certificates Snap-in dialog select **Computer account**. By default the certificate generated from the Message Security User name sample will be located in the Personal/Certificates folder.  It will be listed as \"localhost\" under the Issued to column in the MMC window. Drag and drop the certificate into the **Trusted People** folder. This will allow WCF to treat the certificate as a trusted certificate when performing authentication.  \n  \n### To call the service passing username and password  \n  \n1.  The client application must prompt the user for their username and password. The following code asks the user for username and password.  \n  \n    > [!WARNING]\n    >  This code should not be used in production as the password is displayed while being entered.  \n  \n    ```  \n    public static void GetPassword(out string username, out string password)  \n            {  \n                Console.WriteLine(\"Provide a valid machine or domain account. [domain\\\\user]\");  \n                Console.WriteLine(\"   Enter username:\");  \n                username = Console.ReadLine();  \n                Console.WriteLine(\"   Enter password:\");  \n                password = Console.ReadLine();             \n                return;  \n            }  \n  \n    ```  \n  \n2.  Create an instance of the client proxy specifying the client’s credentials as shown in the following code:  \n  \n    ```  \n    string username;  \n    string password;  \n  \n    // Instantiate the proxy  \n    Service1Client proxy = new Service1Client();  \n  \n    // Prompt the user for username & password  \n    GetPassword(out username, out password);  \n  \n    // Set the user’s credentials on the proxy  \n    proxy.ClientCredentials.UserName.UserName = username;  \n    proxy.ClientCredentials.UserName.Password = password;  \n  \n    // Treat the test certificate as trusted  \n    proxy.ClientCredentials.ServiceCertificate.Authentication.CertificateValidationMode = System.ServiceModel.Security.X509CertificateValidationMode.PeerOrChainTrust;  \n    // Call the service operation using the proxy  \n    ```  \n  \n## See Also  \n <<!--zz xref:System.ServiceModel.WsHttpBinding --> `xref:System.ServiceModel.WsHttpBinding`>   \n <xref:System.ServiceModel.WSHttpSecurity>   \n <xref:System.ServiceModel.SecurityMode>   \n <xref:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName%2A>   \n <xref:System.ServiceModel.Security.UserNamePasswordClientCredential.Password%2A>   \n <xref:System.ServiceModel.Security.UserNamePasswordClientCredential>   \n <xref:System.ServiceModel.WSHttpSecurity.Mode%2A>   \n <xref:System.ServiceModel.HttpTransportSecurity.ClientCredentialType%2A>   \n [Transport Security with Basic Authentication](../../../../docs/framework/wcf/feature-details/transport-security-with-basic-authentication.md)   \n [Distributed Application Security](../../../../docs/framework/wcf/feature-details/distributed-application-security.md)   \n [\\<wsHttpBinding>](../../../../docs/framework/configure-apps/file-schema/wcf/wshttpbinding.md)","nodes":[{"pos":[4,444],"embed":true,"restype":"x-metadata","content":"title: \"How to: Authenticate with a User Name and Password | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"authentication [WCF], user name and password\"\nms.assetid: a5415be2-0ef3-464c-9f76-c255cb8165a4\ncaps.latest.revision: 18\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","nodes":[{"content":"How to: Authenticate with a User Name and Password | Microsoft Docs","nodes":[{"pos":[0,67],"content":"How to: Authenticate with a User Name and Password | Microsoft Docs","nodes":[{"content":"How to: Authenticate with a User Name and Password | Microsoft Docs","pos":[0,67]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[451,501],"content":"How to: Authenticate with a User Name and Password","linkify":"How to: Authenticate with a User Name and Password","nodes":[{"content":"How to: Authenticate with a User Name and Password","pos":[0,50]}]},{"content":"This topic demonstrates how to enable a <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> service to authenticate a client with a Windows domain username and password.","pos":[502,675],"source":"This topic demonstrates how to enable a [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] service to authenticate a client with a Windows domain username and password."},{"content":"It assumes you have a working, self-hosted WCF service.","pos":[676,731]},{"content":"For an example of creating a basic self-hosted WCF service see, <bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](../../../../docs/framework/wcf/getting-started-tutorial.md)</ept>.","pos":[732,883],"source":" For an example of creating a basic self-hosted WCF service see, [Getting Started Tutorial](../../../../docs/framework/wcf/getting-started-tutorial.md)."},{"content":"This topic assumes the service is configured in code.","pos":[884,937]},{"content":"If you would like to see an example of configuring a similar service using a configuration file see <bpt id=\"p1\">[</bpt>Message Security User Name<ept id=\"p1\">](../../../../docs/framework/wcf/samples/message-security-user-name.md)</ept>","pos":[938,1136],"source":" If you would like to see an example of configuring a similar service using a configuration file see [Message Security User Name](../../../../docs/framework/wcf/samples/message-security-user-name.md)"},{"content":"To configure a service to authenticate its clients using Windows Domain username and passwords use the &lt;<ph id=\"ph1\">&lt;!--zz xref:System.ServiceModel.WsHttpBinding --&gt;</ph> <ph id=\"ph2\">`xref:System.ServiceModel.WsHttpBinding`</ph>&gt; and set its <ph id=\"ph3\">`Security.Mode`</ph> property to <ph id=\"ph4\">`Message`</ph>.","pos":[1143,1389],"source":"To configure a service to authenticate its clients using Windows Domain username and passwords use the <<!--zz xref:System.ServiceModel.WsHttpBinding --> `xref:System.ServiceModel.WsHttpBinding`> and set its `Security.Mode` property to `Message`."},{"content":"In addition you must specify an X509 certificate that will be used to encrypt the username and password as they are sent from the client to the service.","pos":[1390,1542]},{"content":"On the client, you must prompt the user for the username and password and specify the user’s credentials on the WCF client proxy.","pos":[1549,1678]},{"pos":[1688,1774],"content":"To configure a WCF service to authenticate using Windows domain username and password.","linkify":"To configure a WCF service to authenticate using Windows domain username and password.","nodes":[{"content":"To configure a WCF service to authenticate using Windows domain username and password.","pos":[0,86]}]},{"pos":[1784,2158],"content":"Create an instance of the &lt;<ph id=\"ph1\">&lt;!--zz xref:System.ServiceModel.WsHttpBinding --&gt;</ph> <ph id=\"ph2\">`xref:System.ServiceModel.WsHttpBinding`</ph>&gt;, set the security mode of the binding to <ph id=\"ph3\">`SecurityMode.Message`</ph>, set the <ph id=\"ph4\">`ClientCredentialType`</ph> of the binding to <ph id=\"ph5\">`MessageCredentialType.UserName`</ph>, and add a service endpoint using the configured binding to the service host as shown in the following code:","source":"Create an instance of the <<!--zz xref:System.ServiceModel.WsHttpBinding --> `xref:System.ServiceModel.WsHttpBinding`>, set the security mode of the binding to `SecurityMode.Message`, set the `ClientCredentialType` of the binding to `MessageCredentialType.UserName`, and add a service endpoint using the configured binding to the service host as shown in the following code:"},{"content":"Specify the server certificate used to encrypt the username and password information sent over the wire.","pos":[2504,2608]},{"content":"This code should immediately follow the code above.","pos":[2609,2660]},{"content":"The following example uses the certificate that is created by the setup.bat file from the <bpt id=\"p1\">[</bpt>Message Security User Name<ept id=\"p1\">](../../../../docs/framework/wcf/samples/message-security-user-name.md)</ept> sample:","pos":[2661,2857],"source":" The following example uses the certificate that is created by the setup.bat file from the [Message Security User Name](../../../../docs/framework/wcf/samples/message-security-user-name.md) sample:"},{"content":"You can use your own certificate, just modify the code to refer to your certificate.","pos":[3065,3149]},{"content":"For more information about creating and using certificates see <bpt id=\"p1\">[</bpt>Working with Certificates<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept>.","pos":[3150,3318],"source":" For more information about creating and using certificates see [Working with Certificates](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)."},{"content":"Make sure the certificate is in the Trusted People certificate store for the Local Machine.","pos":[3319,3410]},{"content":"You can do this by running mmc.exe and selecting the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Add/Remove Snap-in...<ept id=\"p2\">**</ept> menu item.","pos":[3411,3510],"source":" You can do this by running mmc.exe and selecting the **File**, **Add/Remove Snap-in...** menu item."},{"content":"In the <bpt id=\"p1\">**</bpt>Add or Remove Snap-ins<ept id=\"p1\">**</ept> dialog, select the <bpt id=\"p2\">**</bpt>Certificates snap-in<ept id=\"p2\">**</ept> and click <bpt id=\"p3\">**</bpt>Add<ept id=\"p3\">**</ept>.","pos":[3511,3607],"source":" In the **Add or Remove Snap-ins** dialog, select the **Certificates snap-in** and click **Add**."},{"content":"In the Certificates Snap-in dialog select <bpt id=\"p1\">**</bpt>Computer account<ept id=\"p1\">**</ept>.","pos":[3608,3671],"source":" In the Certificates Snap-in dialog select **Computer account**."},{"content":"By default the certificate generated from the Message Security User name sample will be located in the Personal/Certificates folder.","pos":[3672,3804]},{"content":"It will be listed as \"localhost\" under the Issued to column in the MMC window.","pos":[3806,3884]},{"content":"Drag and drop the certificate into the <bpt id=\"p1\">**</bpt>Trusted People<ept id=\"p1\">**</ept> folder.","pos":[3885,3950],"source":" Drag and drop the certificate into the **Trusted People** folder."},{"content":"This will allow WCF to treat the certificate as a trusted certificate when performing authentication.","pos":[3951,4052]},{"pos":[4062,4111],"content":"To call the service passing username and password","linkify":"To call the service passing username and password","nodes":[{"content":"To call the service passing username and password","pos":[0,49]}]},{"content":"The client application must prompt the user for their username and password.","pos":[4121,4197]},{"content":"The following code asks the user for username and password.","pos":[4198,4257]},{"pos":[4269,4379],"content":"[!WARNING]\nThis code should not be used in production as the password is displayed while being entered.","leadings":["","    >  "],"nodes":[{"content":"This code should not be used in production as the password is displayed while being entered.","pos":[11,103]}]},{"content":"Create an instance of the client proxy specifying the client’s credentials as shown in the following code:","pos":[4877,4983]},{"pos":[5688,5696],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;</ph><ph id=\"ph2\">&lt;!--zz xref:System.ServiceModel.WsHttpBinding --&gt;</ph> <ph id=\"ph3\">`xref:System.ServiceModel.WsHttpBinding`</ph><ph id=\"ph4\">&gt; </ph>","pos":[5700,5793],"source":"<<!--zz xref:System.ServiceModel.WsHttpBinding --> `xref:System.ServiceModel.WsHttpBinding`> "},{"content":"<bpt id=\"p1\">[</bpt>Transport Security with Basic Authentication<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/transport-security-with-basic-authentication.md)</ept><ph id=\"ph1\"> </ph>","pos":[6261,6404],"source":"[Transport Security with Basic Authentication](../../../../docs/framework/wcf/feature-details/transport-security-with-basic-authentication.md) "},{"content":"<bpt id=\"p1\">[</bpt>Distributed Application Security<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/distributed-application-security.md)</ept><ph id=\"ph1\"> </ph>","pos":[6408,6527],"source":"[Distributed Application Security](../../../../docs/framework/wcf/feature-details/distributed-application-security.md) "},{"content":"<bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&lt;</ph>wsHttpBinding&gt;<ept id=\"p1\">](../../../../docs/framework/configure-apps/file-schema/wcf/wshttpbinding.md)</ept>","pos":[6531,6625],"source":"[\\<wsHttpBinding>](../../../../docs/framework/configure-apps/file-schema/wcf/wshttpbinding.md)"}]}