{"content":"---\ntitle: \"How to: Apply Attributes in Windows Forms Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"controls [Windows Forms], applying attributes\"\n  - \"attributes [Windows Forms], applying\"\n  - \"Windows Forms controls, applying attributes\"\nms.assetid: af0a3f7f-155b-4ba1-83c4-9cf721331a06\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Apply Attributes in Windows Forms Controls\nTo develop components and controls that interact correctly with the design environment and execute correctly at run time, you need to apply attributes correctly to classes and members.  \n  \n## Example  \n The following code example demonstrates how to use several attributes on a custom control. The control demonstrates a simple logging capability. When the control is bound to a data source, it displays the values sent by the data source in a <xref:System.Windows.Forms.DataGridView> control. If a value exceeds the value specified by the `Threshold` property, a `ThresholdExceeded` event is raised.  \n  \n The `AttributesDemoControl` logs values with a `LogEntry` class. The `LogEntry` class is a template class, which means it is parameterized on the type that it logs. For example, if the `AttributesDemoControl` is logging values of type `float`, each `LogEntry` instance is declared and used as follows.  \n  \n [!code-csharp[System.ComponentModel.AttributesDemoControl#110](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/form1.cs#110)]\n [!code-vb[System.ComponentModel.AttributesDemoControl#110](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/form1.vb#110)]  \n  \n> [!NOTE]\n>  Because `LogEntry` is parameterized by an arbitrary type, it must use reflection to operate on the parameter type. For the threshold feature to work, the parameter type `T` must implement the <xref:System.IComparable> interface.  \n  \n The form that hosts the `AttributesDemoControl` queries a performance counter periodically. Each value is packaged in a `LogEntry` of the appropriate type and added to the form's <xref:System.Windows.Forms.BindingSource>. The `AttributesDemoControl` receives the value through its data binding and displays the value in a <xref:System.Windows.Forms.DataGridView> control.  \n  \n [!code-csharp[System.ComponentModel.AttributesDemoControl#1](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#1)]\n [!code-vb[System.ComponentModel.AttributesDemoControl#1](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#1)]  \n  \n [!code-csharp[System.ComponentModel.AttributesDemoControl#100](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/form1.cs#100)]\n [!code-vb[System.ComponentModel.AttributesDemoControl#100](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/form1.vb#100)]  \n  \n The first code example is the `AttributesDemoControl` implementation. The second code example demonstrates a form that uses the `AttributesDemoControl`.  \n  \n## Class-level Attributes  \n Some attributes are applied at the class level. The following code example shows the attributes that are commonly applied to a Windows Forms control.  \n  \n [!code-csharp[System.ComponentModel.AttributesDemoControl#20](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#20)]\n [!code-vb[System.ComponentModel.AttributesDemoControl#20](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#20)]  \n  \n### TypeConverter Attribute  \n <xref:System.ComponentModel.TypeConverterAttribute> is another commonly used class-level attribute. The following code example shows its use for the `LogEntry` class. This example also shows an implementation of a <xref:System.ComponentModel.TypeConverter> for the `LogEntry` type, called `LogEntryTypeConverter`.  \n  \n [!code-csharp[System.ComponentModel.AttributesDemoControl#5](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#5)]\n [!code-vb[System.ComponentModel.AttributesDemoControl#5](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#5)]  \n  \n## Member-level Attributes  \n Some attributes are applied at the member level. The following code examples show some attributes that are commonly applied to properties of Windows Forms controls.  \n  \n [!code-csharp[System.ComponentModel.AttributesDemoControl#21](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#21)]\n [!code-vb[System.ComponentModel.AttributesDemoControl#21](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#21)]  \n  \n### AmbientValue Attribute  \n The following example demonstrates the <xref:System.ComponentModel.AmbientValueAttribute> and shows code that supports its interaction with the design environment. This interaction is called *ambience*.  \n  \n [!code-csharp[System.ComponentModel.AttributesDemoControl#23](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#23)]\n [!code-vb[System.ComponentModel.AttributesDemoControl#23](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#23)]  \n  \n### Databinding Attributes  \n The following examples demonstrate an implementation of complex data binding. The class-level <xref:System.ComponentModel.ComplexBindingPropertiesAttribute>, shown previously, specifies the `DataSource` and `DataMember` properties to use for data binding. The <xref:System.ComponentModel.AttributeProviderAttribute> specifies the type to which the `DataSource` property will bind.  \n  \n [!code-csharp[System.ComponentModel.AttributesDemoControl#25](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#25)]\n [!code-vb[System.ComponentModel.AttributesDemoControl#25](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#25)]  \n  \n [!code-csharp[System.ComponentModel.AttributesDemoControl#26](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#26)]\n [!code-vb[System.ComponentModel.AttributesDemoControl#26](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#26)]  \n  \n## Compiling the Code  \n  \n-   The form that hosts the `AttributesDemoControl` requires a reference to the `AttributesDemoControl` assembly in order to build.  \n  \n## See Also  \n <xref:System.IComparable>   \n <xref:System.Windows.Forms.DataGridView>   \n [Developing Custom Windows Forms Controls with the .NET Framework](../../../../docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)   \n [Attributes in Windows Forms Controls](../../../../docs/framework/winforms/controls/attributes-in-windows-forms-controls.md)   \n [How to: Serialize Collections of Standard Types with the DesignerSerializationVisibilityAttribute](http://msdn.microsoft.com/library/7829fcdd-8205-405f-8231-a1282a9835c9)","nodes":[{"pos":[4,577],"embed":true,"restype":"x-metadata","content":"title: \"How to: Apply Attributes in Windows Forms Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"controls [Windows Forms], applying attributes\"\n  - \"attributes [Windows Forms], applying\"\n  - \"Windows Forms controls, applying attributes\"\nms.assetid: af0a3f7f-155b-4ba1-83c4-9cf721331a06\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Apply Attributes in Windows Forms Controls | Microsoft Docs","nodes":[{"pos":[0,67],"content":"How to: Apply Attributes in Windows Forms Controls | Microsoft Docs","nodes":[{"content":"How to: Apply Attributes in Windows Forms Controls | Microsoft Docs","pos":[0,67]}]}],"path":["title"]}],"yml":true},{"pos":[584,634],"content":"How to: Apply Attributes in Windows Forms Controls","linkify":"How to: Apply Attributes in Windows Forms Controls","nodes":[{"content":"How to: Apply Attributes in Windows Forms Controls","pos":[0,50]}]},{"content":"To develop components and controls that interact correctly with the design environment and execute correctly at run time, you need to apply attributes correctly to classes and members.","pos":[635,819]},{"pos":[828,835],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates how to use several attributes on a custom control.","pos":[839,929]},{"content":"The control demonstrates a simple logging capability.","pos":[930,983]},{"content":"When the control is bound to a data source, it displays the values sent by the data source in a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.","pos":[984,1129],"source":" When the control is bound to a data source, it displays the values sent by the data source in a <xref:System.Windows.Forms.DataGridView> control."},{"content":"If a value exceeds the value specified by the <ph id=\"ph1\">`Threshold`</ph> property, a <ph id=\"ph2\">`ThresholdExceeded`</ph> event is raised.","pos":[1130,1236],"source":" If a value exceeds the value specified by the `Threshold` property, a `ThresholdExceeded` event is raised."},{"content":"The <ph id=\"ph1\">`AttributesDemoControl`</ph> logs values with a <ph id=\"ph2\">`LogEntry`</ph> class.","pos":[1243,1307],"source":"The `AttributesDemoControl` logs values with a `LogEntry` class."},{"content":"The <ph id=\"ph1\">`LogEntry`</ph> class is a template class, which means it is parameterized on the type that it logs.","pos":[1308,1407],"source":" The `LogEntry` class is a template class, which means it is parameterized on the type that it logs."},{"content":"For example, if the <ph id=\"ph1\">`AttributesDemoControl`</ph> is logging values of type <ph id=\"ph2\">`float`</ph>, each <ph id=\"ph3\">`LogEntry`</ph> instance is declared and used as follows.","pos":[1408,1544],"source":" For example, if the `AttributesDemoControl` is logging values of type `float`, each `LogEntry` instance is declared and used as follows."},{"pos":[1924,2163],"content":"[!NOTE]\n Because `LogEntry` is parameterized by an arbitrary type, it must use reflection to operate on the parameter type. For the threshold feature to work, the parameter type `T` must implement the <xref:System.IComparable> interface.","leadings":["","> "],"nodes":[{"content":"Because `LogEntry` is parameterized by an arbitrary type, it must use reflection to operate on the parameter type. For the threshold feature to work, the parameter type `T` must implement the <xref:System.IComparable> interface.","pos":[9,237],"nodes":[{"content":"Because <ph id=\"ph1\">`LogEntry`</ph> is parameterized by an arbitrary type, it must use reflection to operate on the parameter type.","pos":[0,114],"source":"Because `LogEntry` is parameterized by an arbitrary type, it must use reflection to operate on the parameter type."},{"content":"For the threshold feature to work, the parameter type <ph id=\"ph1\">`T`</ph> must implement the <ph id=\"ph2\">&lt;xref:System.IComparable&gt;</ph> interface.","pos":[115,228],"source":" For the threshold feature to work, the parameter type `T` must implement the <xref:System.IComparable> interface."}]}]},{"content":"The form that hosts the <ph id=\"ph1\">`AttributesDemoControl`</ph> queries a performance counter periodically.","pos":[2170,2261],"source":"The form that hosts the `AttributesDemoControl` queries a performance counter periodically."},{"content":"Each value is packaged in a <ph id=\"ph1\">`LogEntry`</ph> of the appropriate type and added to the form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>.","pos":[2262,2391],"source":" Each value is packaged in a `LogEntry` of the appropriate type and added to the form's <xref:System.Windows.Forms.BindingSource>."},{"content":"The <ph id=\"ph1\">`AttributesDemoControl`</ph> receives the value through its data binding and displays the value in a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.","pos":[2392,2541],"source":" The `AttributesDemoControl` receives the value through its data binding and displays the value in a <xref:System.Windows.Forms.DataGridView> control."},{"content":"The first code example is the <ph id=\"ph1\">`AttributesDemoControl`</ph> implementation.","pos":[3316,3385],"source":"The first code example is the `AttributesDemoControl` implementation."},{"content":"The second code example demonstrates a form that uses the <ph id=\"ph1\">`AttributesDemoControl`</ph>.","pos":[3386,3468],"source":" The second code example demonstrates a form that uses the `AttributesDemoControl`."},{"pos":[3477,3499],"content":"Class-level Attributes","linkify":"Class-level Attributes","nodes":[{"content":"Class-level Attributes","pos":[0,22]}]},{"content":"Some attributes are applied at the class level.","pos":[3503,3550]},{"content":"The following code example shows the attributes that are commonly applied to a Windows Forms control.","pos":[3551,3652]},{"pos":[4062,4085],"content":"TypeConverter Attribute","linkify":"TypeConverter Attribute","nodes":[{"content":"TypeConverter Attribute","pos":[0,23]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> is another commonly used class-level attribute.","pos":[4089,4188],"source":"<xref:System.ComponentModel.TypeConverterAttribute> is another commonly used class-level attribute."},{"content":"The following code example shows its use for the <ph id=\"ph1\">`LogEntry`</ph> class.","pos":[4189,4255],"source":" The following code example shows its use for the `LogEntry` class."},{"content":"This example also shows an implementation of a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for the <ph id=\"ph2\">`LogEntry`</ph> type, called <ph id=\"ph3\">`LogEntryTypeConverter`</ph>.","pos":[4256,4402],"source":" This example also shows an implementation of a <xref:System.ComponentModel.TypeConverter> for the `LogEntry` type, called `LogEntryTypeConverter`."},{"pos":[4807,4830],"content":"Member-level Attributes","linkify":"Member-level Attributes","nodes":[{"content":"Member-level Attributes","pos":[0,23]}]},{"content":"Some attributes are applied at the member level.","pos":[4834,4882]},{"content":"The following code examples show some attributes that are commonly applied to properties of Windows Forms controls.","pos":[4883,4998]},{"pos":[5408,5430],"content":"AmbientValue Attribute","linkify":"AmbientValue Attribute","nodes":[{"content":"AmbientValue Attribute","pos":[0,22]}]},{"content":"The following example demonstrates the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AmbientValueAttribute&gt;</ph> and shows code that supports its interaction with the design environment.","pos":[5434,5597],"source":"The following example demonstrates the <xref:System.ComponentModel.AmbientValueAttribute> and shows code that supports its interaction with the design environment."},{"content":"This interaction is called <bpt id=\"p1\">*</bpt>ambience<ept id=\"p1\">*</ept>.","pos":[5598,5636],"source":" This interaction is called *ambience*."},{"pos":[6046,6068],"content":"Databinding Attributes","linkify":"Databinding Attributes","nodes":[{"content":"Databinding Attributes","pos":[0,22]}]},{"content":"The following examples demonstrate an implementation of complex data binding.","pos":[6072,6149]},{"content":"The class-level <ph id=\"ph1\">&lt;xref:System.ComponentModel.ComplexBindingPropertiesAttribute&gt;</ph>, shown previously, specifies the <ph id=\"ph2\">`DataSource`</ph> and <ph id=\"ph3\">`DataMember`</ph> properties to use for data binding.","pos":[6150,6327],"source":" The class-level <xref:System.ComponentModel.ComplexBindingPropertiesAttribute>, shown previously, specifies the `DataSource` and `DataMember` properties to use for data binding."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> specifies the type to which the <ph id=\"ph2\">`DataSource`</ph> property will bind.","pos":[6328,6452],"source":" The <xref:System.ComponentModel.AttributeProviderAttribute> specifies the type to which the `DataSource` property will bind."},{"pos":[7261,7279],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[7289,7416],"content":"The form that hosts the <ph id=\"ph1\">`AttributesDemoControl`</ph> requires a reference to the <ph id=\"ph2\">`AttributesDemoControl`</ph> assembly in order to build.","source":"The form that hosts the `AttributesDemoControl` requires a reference to the `AttributesDemoControl` assembly in order to build."},{"pos":[7425,7433],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.IComparable&gt;</ph>","pos":[7437,7462],"source":"<xref:System.IComparable> "},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>","pos":[7467,7507],"source":"<xref:System.Windows.Forms.DataGridView> "},{"content":"<bpt id=\"p1\">[</bpt>Developing Custom Windows Forms Controls with the .NET Framework<ept id=\"p1\">](../../../../docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)</ept><ph id=\"ph1\"> </ph>","pos":[7512,7669],"source":"[Developing Custom Windows Forms Controls with the .NET Framework](../../../../docs/framework/winforms/controls/developing-custom-windows-forms-controls.md) "},{"content":"<bpt id=\"p1\">[</bpt>Attributes in Windows Forms Controls<ept id=\"p1\">](../../../../docs/framework/winforms/controls/attributes-in-windows-forms-controls.md)</ept><ph id=\"ph1\"> </ph>","pos":[7673,7798],"source":"[Attributes in Windows Forms Controls](../../../../docs/framework/winforms/controls/attributes-in-windows-forms-controls.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Serialize Collections of Standard Types with the DesignerSerializationVisibilityAttribute<ept id=\"p1\">](http://msdn.microsoft.com/library/7829fcdd-8205-405f-8231-a1282a9835c9)</ept>","pos":[7802,7973],"source":"[How to: Serialize Collections of Standard Types with the DesignerSerializationVisibilityAttribute](http://msdn.microsoft.com/library/7829fcdd-8205-405f-8231-a1282a9835c9)"}]}