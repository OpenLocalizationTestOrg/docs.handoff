{"content":"---\ntitle: \"Nullable Structured Types (Entity SQL) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: ae006fa9-997e-45bb-8a04-a7f62026171e\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Nullable Structured Types (Entity SQL)\nA `null` instance of a structured type is an instance that does not exist. This is different from an existing instance in which all properties have `null` values.  \n  \n This topic describes the nullable structured types, including which types are nullable and which code patterns produce `null` instances of structured nullable types.  \n  \n## Kinds of Nullable Structured Types  \n There are three kinds of nullable structure types:  \n  \n-   Row types.  \n  \n-   Complex types.  \n  \n-   Entity types.  \n  \n## Code Patterns that Produce Null Instances of Structured Types  \n The following scenarios produce `null` instances:  \n  \n-   Shaping `null` as a structured type:  \n  \n    ```  \n    TREAT (NULL AS StructuredType)  \n    ```  \n  \n-   Upcasting of a base type to a derived type:  \n  \n    ```  \n    TREAT (BaseType AS DerivedType)  \n    ```  \n  \n-   Outer join on false condition:  \n  \n    ```  \n    Collection1 LEFT OUTER JOIN Collection2  \n    ON FalseCondition  \n    ```  \n  \n     --or  \n  \n    ```  \n    Collection1 RIGHT OUTER JOIN Collection2  \n    ON FalseCondition  \n    ```  \n  \n     --or  \n  \n    ```  \n    Collection1 FULL OUTER JOIN Collection2  \n    ON FalseCondition  \n    ```  \n  \n-   Dereferencing a `null` reference:  \n  \n    ```  \n    DEREF(NullRef)  \n    ```  \n  \n-   Obtaining ANYELEMENT from an empty collection:  \n  \n    ```  \n    ANYELEMENT(EmptyCollection)  \n    ```  \n  \n-   Checking for `null` instances of structured types:  \n  \n    ```csharp  \n    ...  \n    for (int i = 0; i < reader.FieldCount; i++)  \n    {  \n        if (reader.IsDBNull(i))  \n        {  \n            Console.WriteLine(\"[NULL]\");  \n        }  \n        else  \n        {  \n            Console.WriteLine(reader.GetValue(i).ToString());  \n        }  \n    }  \n    ```  \n  \n## See Also  \n [Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)","nodes":[{"pos":[12,67],"content":"Nullable Structured Types (Entity SQL) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Nullable Structured Types (Entity SQL) | Microsoft Docs","pos":[0,55]}]},{"pos":[420,458],"content":"Nullable Structured Types (Entity SQL)","linkify":"Nullable Structured Types (Entity SQL)","nodes":[{"content":"Nullable Structured Types (Entity SQL)","pos":[0,38]}]},{"content":"A <ph id=\"ph1\">`null`</ph> instance of a structured type is an instance that does not exist.","pos":[459,533],"source":"A `null` instance of a structured type is an instance that does not exist."},{"content":"This is different from an existing instance in which all properties have <ph id=\"ph1\">`null`</ph> values.","pos":[534,621],"source":" This is different from an existing instance in which all properties have `null` values."},{"pos":[628,793],"content":"This topic describes the nullable structured types, including which types are nullable and which code patterns produce <ph id=\"ph1\">`null`</ph> instances of structured nullable types.","source":"This topic describes the nullable structured types, including which types are nullable and which code patterns produce `null` instances of structured nullable types."},{"pos":[802,836],"content":"Kinds of Nullable Structured Types","linkify":"Kinds of Nullable Structured Types","nodes":[{"content":"Kinds of Nullable Structured Types","pos":[0,34]}]},{"content":"There are three kinds of nullable structure types:","pos":[840,890]},{"content":"Row types.","pos":[900,910]},{"content":"Complex types.","pos":[920,934]},{"content":"Entity types.","pos":[944,957]},{"pos":[966,1027],"content":"Code Patterns that Produce Null Instances of Structured Types","linkify":"Code Patterns that Produce Null Instances of Structured Types","nodes":[{"content":"Code Patterns that Produce Null Instances of Structured Types","pos":[0,61]}]},{"pos":[1031,1080],"content":"The following scenarios produce <ph id=\"ph1\">`null`</ph> instances:","source":"The following scenarios produce `null` instances:"},{"pos":[1090,1126],"content":"Shaping <ph id=\"ph1\">`null`</ph> as a structured type:","source":"Shaping `null` as a structured type:"},{"content":"Upcasting of a base type to a derived type:","pos":[1196,1239]},{"content":"Outer join on false condition:","pos":[1310,1340]},{"content":"--or","pos":[1444,1448]},{"content":"--or","pos":[1553,1557]},{"pos":[1660,1693],"content":"Dereferencing a <ph id=\"ph1\">`null`</ph> reference:","source":"Dereferencing a `null` reference:"},{"content":"Obtaining ANYELEMENT from an empty collection:","pos":[1747,1793]},{"pos":[1860,1910],"content":"Checking for <ph id=\"ph1\">`null`</ph> instances of structured types:","source":"Checking for `null` instances of structured types:"},{"pos":[2228,2236],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2240,2352],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Overview<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)</ept>","source":"[Entity SQL Overview](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)"}]}