{"content":"---\ntitle: \"Type arguments unexpected because attributes cannot be generics\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc32066\"\n  - \"vbc32066\"\nhelpviewer_keywords: \n  - \"BC32066\"\nms.assetid: cd43a92c-33fb-4def-bbf7-527d21bff93c\n---\n# Type arguments unexpected because attributes cannot be generics\nAn attribute is applied using a type argument list.  \n  \n Visual Basic and the .NET Framework do not currently support any combination of attributes and generic types. This means the following limitations apply:  \n  \n-   An attribute cannot be a generic type or be declared within a generic type.  \n  \n-   An attribute cannot inherit from a generic class, nor can a generic class inherit from an attribute.  \n  \n-   When you apply an attribute, you cannot supply an argument that is any of the following:  \n  \n    -   A generic type,  \n  \n    -   A type constructed from a generic type,  \n  \n    -   A type parameter of a containing type, or  \n  \n    -   A type constructed from a type parameter of a containing type.  \n  \n **Error ID:** BC32066  \n  \n## To correct this error  \n  \n-   If the type arguments are intended to be normal arguments, then remove the `Of` keyword. Doing so turns the type argument list into a normal argument list.  \n  \n-   If the type arguments are intended to be supplied to type parameters, then remove the `Of` keyword and all the type arguments. An attribute cannot accept type arguments.  \n  \n## See also\n\n- <xref:System.Attribute>\n\n- [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)\n- [Type List](../../visual-basic/language-reference/statements/type-list.md)\n","nodes":[{"pos":[4,224],"embed":true,"restype":"x-metadata","content":"title: \"Type arguments unexpected because attributes cannot be generics\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"bc32066\"\n  - \"vbc32066\"\nhelpviewer_keywords: \n  - \"BC32066\"\nms.assetid: cd43a92c-33fb-4def-bbf7-527d21bff93c","nodes":[{"content":"Type arguments unexpected because attributes cannot be generics","nodes":[{"pos":[0,63],"content":"Type arguments unexpected because attributes cannot be generics","nodes":[{"content":"Type arguments unexpected because attributes cannot be generics","pos":[0,63]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[231,294],"content":"Type arguments unexpected because attributes cannot be generics","linkify":"Type arguments unexpected because attributes cannot be generics","nodes":[{"content":"Type arguments unexpected because attributes cannot be generics","pos":[0,63]}]},{"content":"An attribute is applied using a type argument list.","pos":[295,346]},{"content":"Visual Basic and the .NET Framework do not currently support any combination of attributes and generic types.","pos":[353,462]},{"content":"This means the following limitations apply:","pos":[463,506]},{"content":"An attribute cannot be a generic type or be declared within a generic type.","pos":[516,591]},{"content":"An attribute cannot inherit from a generic class, nor can a generic class inherit from an attribute.","pos":[601,701]},{"content":"When you apply an attribute, you cannot supply an argument that is any of the following:","pos":[711,799]},{"content":"A generic type,","pos":[813,828]},{"content":"A type constructed from a generic type,","pos":[842,881]},{"content":"A type parameter of a containing type, or","pos":[895,936]},{"content":"A type constructed from a type parameter of a containing type.","pos":[950,1012]},{"pos":[1019,1040],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC32066","source":"**Error ID:** BC32066"},{"pos":[1049,1070],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"If the type arguments are intended to be normal arguments, then remove the <ph id=\"ph1\">`Of`</ph> keyword.","pos":[1080,1168],"source":"If the type arguments are intended to be normal arguments, then remove the `Of` keyword."},{"content":"Doing so turns the type argument list into a normal argument list.","pos":[1169,1235]},{"content":"If the type arguments are intended to be supplied to type parameters, then remove the <ph id=\"ph1\">`Of`</ph> keyword and all the type arguments.","pos":[1245,1371],"source":"If the type arguments are intended to be supplied to type parameters, then remove the `Of` keyword and all the type arguments."},{"content":"An attribute cannot accept type arguments.","pos":[1372,1414]},{"pos":[1423,1431],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1462,1577],"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept>","source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)"},{"pos":[1580,1654],"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../visual-basic/language-reference/statements/type-list.md)</ept>","source":"[Type List](../../visual-basic/language-reference/statements/type-list.md)"}]}