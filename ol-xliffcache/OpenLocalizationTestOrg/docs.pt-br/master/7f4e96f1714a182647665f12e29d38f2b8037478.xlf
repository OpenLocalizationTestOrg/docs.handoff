<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-open-files-using-the-openfiledialog-component.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f4e96f1714a182647665f12e29d38f2b8037478</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\controls\how-to-open-files-using-the-openfiledialog-component.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3dbad58fdecc00d65df781b144444eadd1a70af4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b92d8226048fd414648291afb119ba53beaf2804</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Open files with the OpenFileDialog component</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Open files with the OpenFileDialog</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog?displayProperty=nameWithType&gt;</ph> component opens the Windows dialog box for browsing and selecting files.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To open and read the selected files, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType&gt;</ph> method, or create an instance of the <ph id="ph2">&lt;xref:System.IO.StreamReader?displayProperty=nameWithType&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following examples show both approaches.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In .NET Framework, to get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.FileDialog.FileName%2A&gt;</ph> property requires a privilege level granted by the <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission?displayProperty=nameWithType&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The examples run a <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> permission check, and can throw an exception due to insufficient privileges if run in a partial-trust context.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Code access security basics<ept id="p1">](../../misc/code-access-security-basics.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can build and run these examples as .NET Framework apps from the C# or Visual Basic command line.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Command-line building with csc.exe<ept id="p1">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept> or <bpt id="p2">[</bpt>Build from the command line<ept id="p2">](../../../visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Starting with .NET Core 3.0, you can also build and run the examples as Windows .NET Core apps from a folder that has a .NET Core Windows Forms <bpt id="p1">*</bpt><ph id="ph1">\&lt;</ph>folder name&gt;.csproj<ept id="p1">*</ept> project file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example: Read a file as a stream with StreamReader</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example uses the Windows Forms <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler to open the <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> with the <ph id="ph4">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>After the user chooses a file and selects <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>, an instance of the <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> class reads the file and displays its contents in the form's text box.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about reading from file streams, see <ph id="ph1">&lt;xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileStream.Read%2A?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example: Open a file from a filtered selection with OpenFile</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler to open the <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> with a filter that shows only text files.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>After the user chooses a text file and selects <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>, the <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method is used to open the file in Notepad.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OpenFileDialog component<ept id="p1">](openfiledialog-component-windows-forms.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>