{"content":"---\ntitle: \"ICorProfilerCallback::JITInlining Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.JITInlining\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::JITInlining\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"JITInlining method [.NET Framework profiling]\"\n  - \"ICorProfilerCallback::JITInlining method [.NET Framework profiling]\"\nms.assetid: c2f45801-dd38-4b78-b6b7-64397dc73f83\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 12\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# ICorProfilerCallback::JITInlining Method\nNotifies the profiler that the just-in-time (JIT) compiler is about to insert a function in line with another function.  \n  \n## Syntax  \n  \n```  \nHRESULT JITInlining(  \n    [in]  FunctionID callerId,  \n    [in]  FunctionID calleeId,  \n    [out] BOOL      *pfShouldInline);  \n```  \n  \n#### Parameters  \n `callerId`  \n [in] The ID of the function into which the `calleeId` function will be inserted.  \n  \n `calleeId`  \n [in] The ID of the function to be inserted.  \n  \n `pfShouldInline`  \n [out] `true` to allow the insertion to occur; otherwise, `false`.  \n  \n## Remarks  \n The profiler can set `pfShouldInline` to `false` to prevent the `calleeId` function from being inserted into the `callerId` function. Also, the profiler can globally disable inline insertion by using the COR_PRF_DISABLE_INLINING value of the [COR_PRF_MONITOR](../../../../docs/framework/unmanaged-api/profiling/cor-prf-monitor-enumeration.md) enumeration.  \n  \n Functions inserted inline do not raise events for entering or leaving. Therefore, the profiler must set `pfShouldInline` to `false` in order to produce an accurate callgraph. Setting `pfShouldInline` to `false` will affect performance, because inline insertion typically increases speed and reduces the number of separate JIT compilation events for the inserted method.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorProf.idl, CorProf.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)","nodes":[{"pos":[4,720],"embed":true,"restype":"x-metadata","content":"title: \"ICorProfilerCallback::JITInlining Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorProfilerCallback.JITInlining\"\napi_location: \n  - \"mscorwks.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorProfilerCallback::JITInlining\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"JITInlining method [.NET Framework profiling]\"\n  - \"ICorProfilerCallback::JITInlining method [.NET Framework profiling]\"\nms.assetid: c2f45801-dd38-4b78-b6b7-64397dc73f83\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 12\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"ICorProfilerCallback::JITInlining Method | Microsoft Docs","nodes":[{"pos":[0,57],"content":"ICorProfilerCallback::JITInlining Method | Microsoft Docs","nodes":[{"content":"ICorProfilerCallback::JITInlining Method | Microsoft Docs","pos":[0,57]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[727,767],"content":"ICorProfilerCallback::JITInlining Method","linkify":"ICorProfilerCallback::JITInlining Method","nodes":[{"content":"ICorProfilerCallback::JITInlining Method","pos":[0,40]}]},{"content":"Notifies the profiler that the just-in-time (JIT) compiler is about to insert a function in line with another function.","pos":[768,887]},{"pos":[896,902],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1057,1067],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The ID of the function into which the <ph id=\"ph1\">`calleeId`</ph> function will be inserted.","pos":[1085,1165],"source":"[in] The ID of the function into which the `calleeId` function will be inserted."},{"content":"[in] The ID of the function to be inserted.","pos":[1186,1229]},{"content":"[out] <ph id=\"ph1\">`true`</ph> to allow the insertion to occur; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[1256,1321],"source":"[out] `true` to allow the insertion to occur; otherwise, `false`."},{"pos":[1330,1337],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The profiler can set <ph id=\"ph1\">`pfShouldInline`</ph> to <ph id=\"ph2\">`false`</ph> to prevent the <ph id=\"ph3\">`calleeId`</ph> function from being inserted into the <ph id=\"ph4\">`callerId`</ph> function.","pos":[1341,1474],"source":"The profiler can set `pfShouldInline` to `false` to prevent the `calleeId` function from being inserted into the `callerId` function."},{"content":"Also, the profiler can globally disable inline insertion by using the COR_PRF_DISABLE_INLINING value of the <bpt id=\"p1\">[</bpt>COR_PRF_MONITOR<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/cor-prf-monitor-enumeration.md)</ept> enumeration.","pos":[1475,1696],"source":" Also, the profiler can globally disable inline insertion by using the COR_PRF_DISABLE_INLINING value of the [COR_PRF_MONITOR](../../../../docs/framework/unmanaged-api/profiling/cor-prf-monitor-enumeration.md) enumeration."},{"content":"Functions inserted inline do not raise events for entering or leaving.","pos":[1703,1773]},{"content":"Therefore, the profiler must set <ph id=\"ph1\">`pfShouldInline`</ph> to <ph id=\"ph2\">`false`</ph> in order to produce an accurate callgraph.","pos":[1774,1877],"source":" Therefore, the profiler must set `pfShouldInline` to `false` in order to produce an accurate callgraph."},{"content":"Setting <ph id=\"ph1\">`pfShouldInline`</ph> to <ph id=\"ph2\">`false`</ph> will affect performance, because inline insertion typically increases speed and reduces the number of separate JIT compilation events for the inserted method.","pos":[1878,2072],"source":" Setting `pfShouldInline` to `false` will affect performance, because inline insertion typically increases speed and reduces the number of separate JIT compilation events for the inserted method."},{"pos":[2081,2093],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2097,2201],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2208,2242],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorProf.idl, CorProf.h","source":"**Header:** CorProf.idl, CorProf.h"},{"pos":[2249,2274],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2281,2389],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[2398,2406],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2410,2528],"content":"<bpt id=\"p1\">[</bpt>ICorProfilerCallback Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)</ept>","source":"[ICorProfilerCallback Interface](../../../../docs/framework/unmanaged-api/profiling/icorprofilercallback-interface.md)"}]}