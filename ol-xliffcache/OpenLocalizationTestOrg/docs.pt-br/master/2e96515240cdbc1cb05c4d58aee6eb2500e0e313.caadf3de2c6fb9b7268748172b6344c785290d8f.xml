{"content":"---\ntitle: \"XML Documents and Data\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\nms.assetid: e695047f-3c0f-4045-8708-5baea91cc380\nauthor: \"mairaw\"\nms.author: \"mairaw\"\n---\n# XML Documents and Data\nThe .NET Framework provides a comprehensive and integrated set of classes that enable you to build XML-aware apps easily. The classes in the following namespaces support parsing and writing XML, editing XML data in memory, data validation, and XSLT transformation.  \n  \n-   <xref:System.Xml>  \n  \n-   <xref:System.Xml.XPath>  \n  \n-   <xref:System.Xml.Xsl>  \n  \n-   <xref:System.Xml.Schema>  \n  \n-   <xref:System.Xml.Linq>  \n  \n For a full list, search for \"System.Xml\" on the [.NET API browser](https://docs.microsoft.com/dotnet/api/?term=system.xml).  \n  \n The classes in these namespaces support World Wide Web Consortium (W3C) recommendations. For example:  \n  \n-   The <xref:System.Xml.XmlDocument?displayProperty=nameWithType> class implements the [W3C Document Object Model (DOM) Level 1 Core](https://www.w3.org/TR/REC-DOM-Level-1/) and [DOM Level 2 Core](https://www.w3.org/TR/DOM-Level-2-Core/) recommendations.  \n  \n-   The <xref:System.Xml.XmlReader?displayProperty=nameWithType> and <xref:System.Xml.XmlWriter?displayProperty=nameWithType> classes support the [W3C XML 1.0](https://www.w3.org/TR/2006/REC-xml-20060816/) and the [Namespaces in XML](https://www.w3.org/TR/REC-xml-names/) recommendations.  \n  \n-   Schemas in the <xref:System.Xml.Schema.XmlSchemaSet?displayProperty=nameWithType> class support the [W3C XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/) and [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/) recommendations.  \n  \n-   Classes in the <xref:System.Xml.Xsl?displayProperty=nameWithType> namespace support XSLT transformations that conform to the [W3C XSLT 1.0](https://www.w3.org/TR/xslt) recommendation.  \n  \n The XML classes in the .NET Framework provide these benefits:  \n  \n-   **Productivity.** [LINQ to XML (C#)](../../../csharp/programming-guide/concepts/linq/linq-to-xml.md) and [LINQ to XML (Visual Basic)](../../../visual-basic/programming-guide/concepts/linq/linq-to-xml.md) makes it easier to program with XML and provides a query experience that is similar to SQL.  \n  \n-   **Extensibility.** The XML classes in the .NET Framework are extensible through the use of abstract base classes and virtual methods. For example, you can create a derived class of the <xref:System.Xml.XmlUrlResolver> class that stores the cache stream to the local disk.  \n  \n-   **Pluggable architecture.** The .NET Framework provides an architecture in which components can utilize one another, and data can be streamed between components. For example, a data store, such as an <xref:System.Xml.XPath.XPathDocument> or <xref:System.Xml.XmlDocument> object, can be transformed with the <xref:System.Xml.Xsl.XslCompiledTransform> class, and the output can then be streamed either into another store or returned as a stream from a web service.  \n  \n-   **Performance.** For better app performance, some of the XML classes in the .NET Framework support a streaming-based model with the following characteristics:  \n  \n    -   Minimal caching for forward-only, pull-model parsing (<xref:System.Xml.XmlReader>).  \n  \n    -   Forward-only validation (<xref:System.Xml.XmlReader>).  \n  \n    -   Cursor style navigation that minimizes node creation to a single virtual node while providing random access to the document (<xref:System.Xml.XPath.XPathNavigator>).  \n  \n     For better performance whenever XSLT processing is required, you can use the <xref:System.Xml.XPath.XPathDocument> class, which is an optimized, read-only store for XPath queries designed to work efficiently with the <xref:System.Xml.Xsl.XslCompiledTransform> class.  \n  \n-   **Integration with ADO.NET.** The XML classes and [ADO.NET](../../../../docs/framework/data/adonet/index.md) are tightly integrated to bring together relational data and XML. The <xref:System.Data.DataSet> class is an in-memory cache of data retrieved from a database. The <xref:System.Data.DataSet> class has the ability to read and write XML by using the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> classes, to persist its internal relational schema structure as XML schemas (XSD), and to infer the schema structure of an XML document.  \n  \n## In This Section  \n [XML Processing Options](../../../../docs/standard/data/xml/xml-processing-options.md)  \n Discusses options for processing XML data.  \n  \n [Processing XML Data In-Memory](../../../../docs/standard/data/xml/processing-xml-data-in-memory.md)  \n Discusses the three models for processing XML data in-memory: [LINQ to XML (C#)](../../../csharp/programming-guide/concepts/linq/linq-to-xml.md) and [LINQ to XML (Visual Basic)](../../../visual-basic/programming-guide/concepts/linq/linq-to-xml.md), the <xref:System.Xml.XmlDocument> class (based on the W3C Document Object Model), and the <xref:System.Xml.XPath.XPathDocument> class (based on the XPath data model).  \n  \n [XSLT Transformations](../../../../docs/standard/data/xml/xslt-transformations.md)  \n Describes how to use the XSLT processor.  \n  \n [XML Schema Object Model (SOM)](../../../../docs/standard/data/xml/xml-schema-object-model-som.md)  \n Describes the classes used for building and manipulating XML Schemas (XSD) by providing an <xref:System.Xml.Schema.XmlSchema> class to load and edit a schema.  \n  \n [XML Integration with Relational Data and ADO.NET](../../../../docs/standard/data/xml/xml-integration-with-relational-data-and-adonet.md)  \n Describes how the .NET Framework enables real-time, synchronous access to both the relational and hierarchical representations of data through the <xref:System.Data.DataSet> object and the <xref:System.Xml.XmlDataDocument> object.  \n  \n [Managing Namespaces in an XML Document](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)  \n Describes how the <xref:System.Xml.XmlNamespaceManager> class is used to store and maintain namespace information.  \n  \n [Type Support in the System.Xml Classes](../../../../docs/standard/data/xml/type-support-in-the-system-xml-classes.md)  \n Describes how XML data types map to CLR types, how to convert XML data types, and other type support features in the <xref:System.Xml> classes.  \n  \n## Related Sections  \n [ADO.NET](../../../../docs/framework/data/adonet/index.md)  \n Provides information on how to access data using ADO.NET.  \n  \n [Security](../../../../docs/standard/security/index.md)  \n Provides an overview of the .NET Framework security system.  \n","nodes":[{"pos":[4,174],"embed":true,"restype":"x-metadata","content":"title: \"XML Documents and Data\"\nms.date: \"03/30/2017\"\nms.technology: dotnet-standard\nms.assetid: e695047f-3c0f-4045-8708-5baea91cc380\nauthor: \"mairaw\"\nms.author: \"mairaw\"","nodes":[{"content":"XML Documents and Data","nodes":[{"pos":[0,22],"content":"XML Documents and Data","nodes":[{"content":"XML Documents and Data","pos":[0,22]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[181,203],"content":"XML Documents and Data","linkify":"XML Documents and Data","nodes":[{"content":"XML Documents and Data","pos":[0,22]}]},{"content":"The .NET Framework provides a comprehensive and integrated set of classes that enable you to build XML-aware apps easily.","pos":[204,325]},{"content":"The classes in the following namespaces support parsing and writing XML, editing XML data in memory, data validation, and XSLT transformation.","pos":[326,468]},{"pos":[632,755],"content":"For a full list, search for \"System.Xml\" on the <bpt id=\"p1\">[</bpt>.NET API browser<ept id=\"p1\">](https://docs.microsoft.com/dotnet/api/?term=system.xml)</ept>.","source":"For a full list, search for \"System.Xml\" on the [.NET API browser](https://docs.microsoft.com/dotnet/api/?term=system.xml)."},{"content":"The classes in these namespaces support World Wide Web Consortium (W3C) recommendations.","pos":[762,850]},{"content":"For example:","pos":[851,863]},{"pos":[873,1124],"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument?displayProperty=nameWithType&gt;</ph> class implements the <bpt id=\"p1\">[</bpt>W3C Document Object Model (DOM) Level 1 Core<ept id=\"p1\">](https://www.w3.org/TR/REC-DOM-Level-1/)</ept> and <bpt id=\"p2\">[</bpt>DOM Level 2 Core<ept id=\"p2\">](https://www.w3.org/TR/DOM-Level-2-Core/)</ept> recommendations.","source":"The <xref:System.Xml.XmlDocument?displayProperty=nameWithType> class implements the [W3C Document Object Model (DOM) Level 1 Core](https://www.w3.org/TR/REC-DOM-Level-1/) and [DOM Level 2 Core](https://www.w3.org/TR/DOM-Level-2-Core/) recommendations."},{"pos":[1134,1418],"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader?displayProperty=nameWithType&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter?displayProperty=nameWithType&gt;</ph> classes support the <bpt id=\"p1\">[</bpt>W3C XML 1.0<ept id=\"p1\">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> and the <bpt id=\"p2\">[</bpt>Namespaces in XML<ept id=\"p2\">](https://www.w3.org/TR/REC-xml-names/)</ept> recommendations.","source":"The <xref:System.Xml.XmlReader?displayProperty=nameWithType> and <xref:System.Xml.XmlWriter?displayProperty=nameWithType> classes support the [W3C XML 1.0](https://www.w3.org/TR/2006/REC-xml-20060816/) and the [Namespaces in XML](https://www.w3.org/TR/REC-xml-names/) recommendations."},{"pos":[1428,1687],"content":"Schemas in the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSet?displayProperty=nameWithType&gt;</ph> class support the <bpt id=\"p1\">[</bpt>W3C XML Schema Part 1: Structures<ept id=\"p1\">](https://www.w3.org/TR/xmlschema-1/)</ept> and <bpt id=\"p2\">[</bpt>XML Schema Part 2: Datatypes<ept id=\"p2\">](https://www.w3.org/TR/xmlschema-2/)</ept> recommendations.","source":"Schemas in the <xref:System.Xml.Schema.XmlSchemaSet?displayProperty=nameWithType> class support the [W3C XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/) and [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/) recommendations."},{"pos":[1697,1880],"content":"Classes in the <ph id=\"ph1\">&lt;xref:System.Xml.Xsl?displayProperty=nameWithType&gt;</ph> namespace support XSLT transformations that conform to the <bpt id=\"p1\">[</bpt>W3C XSLT 1.0<ept id=\"p1\">](https://www.w3.org/TR/xslt)</ept> recommendation.","source":"Classes in the <xref:System.Xml.Xsl?displayProperty=nameWithType> namespace support XSLT transformations that conform to the [W3C XSLT 1.0](https://www.w3.org/TR/xslt) recommendation."},{"content":"The XML classes in the .NET Framework provide these benefits:","pos":[1887,1948]},{"content":"<bpt id=\"p1\">**</bpt>Productivity.<ept id=\"p1\">**</ept>","pos":[1958,1975],"source":"**Productivity.**"},{"content":"<bpt id=\"p1\">[</bpt>LINQ to XML (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/linq/linq-to-xml.md)</ept> and <bpt id=\"p2\">[</bpt>LINQ to XML (Visual Basic)<ept id=\"p2\">](../../../visual-basic/programming-guide/concepts/linq/linq-to-xml.md)</ept> makes it easier to program with XML and provides a query experience that is similar to SQL.","pos":[1976,2253],"source":"[LINQ to XML (C#)](../../../csharp/programming-guide/concepts/linq/linq-to-xml.md) and [LINQ to XML (Visual Basic)](../../../visual-basic/programming-guide/concepts/linq/linq-to-xml.md) makes it easier to program with XML and provides a query experience that is similar to SQL."},{"content":"<bpt id=\"p1\">**</bpt>Extensibility.<ept id=\"p1\">**</ept>","pos":[2263,2281],"source":"**Extensibility.**"},{"content":"The XML classes in the .NET Framework are extensible through the use of abstract base classes and virtual methods.","pos":[2282,2396]},{"content":"For example, you can create a derived class of the <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class that stores the cache stream to the local disk.","pos":[2397,2534],"source":" For example, you can create a derived class of the <xref:System.Xml.XmlUrlResolver> class that stores the cache stream to the local disk."},{"content":"<bpt id=\"p1\">**</bpt>Pluggable architecture.<ept id=\"p1\">**</ept>","pos":[2544,2571],"source":"**Pluggable architecture.**"},{"content":"The .NET Framework provides an architecture in which components can utilize one another, and data can be streamed between components.","pos":[2572,2705]},{"content":"For example, a data store, such as an <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Xml.XmlDocument&gt;</ph> object, can be transformed with the <ph id=\"ph3\">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class, and the output can then be streamed either into another store or returned as a stream from a web service.","pos":[2706,3006],"source":" For example, a data store, such as an <xref:System.Xml.XPath.XPathDocument> or <xref:System.Xml.XmlDocument> object, can be transformed with the <xref:System.Xml.Xsl.XslCompiledTransform> class, and the output can then be streamed either into another store or returned as a stream from a web service."},{"content":"<bpt id=\"p1\">**</bpt>Performance.<ept id=\"p1\">**</ept>","pos":[3016,3032],"source":"**Performance.**"},{"content":"For better app performance, some of the XML classes in the .NET Framework support a streaming-based model with the following characteristics:","pos":[3033,3174]},{"pos":[3188,3271],"content":"Minimal caching for forward-only, pull-model parsing (<ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph>).","source":"Minimal caching for forward-only, pull-model parsing (<xref:System.Xml.XmlReader>)."},{"pos":[3285,3339],"content":"Forward-only validation (<ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph>).","source":"Forward-only validation (<xref:System.Xml.XmlReader>)."},{"pos":[3353,3518],"content":"Cursor style navigation that minimizes node creation to a single virtual node while providing random access to the document (<ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>).","source":"Cursor style navigation that minimizes node creation to a single virtual node while providing random access to the document (<xref:System.Xml.XPath.XPathNavigator>)."},{"pos":[3529,3795],"content":"For better performance whenever XSLT processing is required, you can use the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class, which is an optimized, read-only store for XPath queries designed to work efficiently with the <ph id=\"ph2\">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class.","source":"For better performance whenever XSLT processing is required, you can use the <xref:System.Xml.XPath.XPathDocument> class, which is an optimized, read-only store for XPath queries designed to work efficiently with the <xref:System.Xml.Xsl.XslCompiledTransform> class."},{"content":"<bpt id=\"p1\">**</bpt>Integration with ADO.NET.<ept id=\"p1\">**</ept>","pos":[3805,3834],"source":"**Integration with ADO.NET.**"},{"content":"The XML classes and <bpt id=\"p1\">[</bpt>ADO.NET<ept id=\"p1\">](../../../../docs/framework/data/adonet/index.md)</ept> are tightly integrated to bring together relational data and XML.","pos":[3835,3979],"source":" The XML classes and [ADO.NET](../../../../docs/framework/data/adonet/index.md) are tightly integrated to bring together relational data and XML."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> class is an in-memory cache of data retrieved from a database.","pos":[3980,4073],"source":" The <xref:System.Data.DataSet> class is an in-memory cache of data retrieved from a database."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> class has the ability to read and write XML by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph> classes, to persist its internal relational schema structure as XML schemas (XSD), and to infer the schema structure of an XML document.","pos":[4074,4358],"source":" The <xref:System.Data.DataSet> class has the ability to read and write XML by using the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> classes, to persist its internal relational schema structure as XML schemas (XSD), and to infer the schema structure of an XML document."},{"pos":[4367,4382],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>XML Processing Options<ept id=\"p1\">](../../../../docs/standard/data/xml/xml-processing-options.md)</ept>","pos":[4386,4472],"source":"[XML Processing Options](../../../../docs/standard/data/xml/xml-processing-options.md)"},{"content":"Discusses options for processing XML data.","pos":[4476,4518]},{"content":"<bpt id=\"p1\">[</bpt>Processing XML Data In-Memory<ept id=\"p1\">](../../../../docs/standard/data/xml/processing-xml-data-in-memory.md)</ept>","pos":[4525,4625],"source":"[Processing XML Data In-Memory](../../../../docs/standard/data/xml/processing-xml-data-in-memory.md)"},{"content":"Discusses the three models for processing XML data in-memory: <bpt id=\"p1\">[</bpt>LINQ to XML (C#)<ept id=\"p1\">](../../../csharp/programming-guide/concepts/linq/linq-to-xml.md)</ept> and <bpt id=\"p2\">[</bpt>LINQ to XML (Visual Basic)<ept id=\"p2\">](../../../visual-basic/programming-guide/concepts/linq/linq-to-xml.md)</ept>, the <ph id=\"ph1\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class (based on the W3C Document Object Model), and the <ph id=\"ph2\">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class (based on the XPath data model).","pos":[4629,5044],"source":"Discusses the three models for processing XML data in-memory: [LINQ to XML (C#)](../../../csharp/programming-guide/concepts/linq/linq-to-xml.md) and [LINQ to XML (Visual Basic)](../../../visual-basic/programming-guide/concepts/linq/linq-to-xml.md), the <xref:System.Xml.XmlDocument> class (based on the W3C Document Object Model), and the <xref:System.Xml.XPath.XPathDocument> class (based on the XPath data model)."},{"content":"<bpt id=\"p1\">[</bpt>XSLT Transformations<ept id=\"p1\">](../../../../docs/standard/data/xml/xslt-transformations.md)</ept>","pos":[5051,5133],"source":"[XSLT Transformations](../../../../docs/standard/data/xml/xslt-transformations.md)"},{"content":"Describes how to use the XSLT processor.","pos":[5137,5177]},{"content":"<bpt id=\"p1\">[</bpt>XML Schema Object Model (SOM)<ept id=\"p1\">](../../../../docs/standard/data/xml/xml-schema-object-model-som.md)</ept>","pos":[5184,5282],"source":"[XML Schema Object Model (SOM)](../../../../docs/standard/data/xml/xml-schema-object-model-som.md)"},{"content":"Describes the classes used for building and manipulating XML Schemas (XSD) by providing an <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> class to load and edit a schema.","pos":[5286,5444],"source":"Describes the classes used for building and manipulating XML Schemas (XSD) by providing an <xref:System.Xml.Schema.XmlSchema> class to load and edit a schema."},{"content":"<bpt id=\"p1\">[</bpt>XML Integration with Relational Data and ADO.NET<ept id=\"p1\">](../../../../docs/standard/data/xml/xml-integration-with-relational-data-and-adonet.md)</ept>","pos":[5451,5588],"source":"[XML Integration with Relational Data and ADO.NET](../../../../docs/standard/data/xml/xml-integration-with-relational-data-and-adonet.md)"},{"content":"Describes how the .NET Framework enables real-time, synchronous access to both the relational and hierarchical representations of data through the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> object and the <ph id=\"ph2\">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> object.","pos":[5592,5822],"source":"Describes how the .NET Framework enables real-time, synchronous access to both the relational and hierarchical representations of data through the <xref:System.Data.DataSet> object and the <xref:System.Xml.XmlDataDocument> object."},{"content":"<bpt id=\"p1\">[</bpt>Managing Namespaces in an XML Document<ept id=\"p1\">](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)</ept>","pos":[5829,5947],"source":"[Managing Namespaces in an XML Document](../../../../docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)"},{"content":"Describes how the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> class is used to store and maintain namespace information.","pos":[5951,6065],"source":"Describes how the <xref:System.Xml.XmlNamespaceManager> class is used to store and maintain namespace information."},{"content":"<bpt id=\"p1\">[</bpt>Type Support in the System.Xml Classes<ept id=\"p1\">](../../../../docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>","pos":[6072,6190],"source":"[Type Support in the System.Xml Classes](../../../../docs/standard/data/xml/type-support-in-the-system-xml-classes.md)"},{"content":"Describes how XML data types map to CLR types, how to convert XML data types, and other type support features in the <ph id=\"ph1\">&lt;xref:System.Xml&gt;</ph> classes.","pos":[6194,6337],"source":"Describes how XML data types map to CLR types, how to convert XML data types, and other type support features in the <xref:System.Xml> classes."},{"pos":[6346,6362],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>ADO.NET<ept id=\"p1\">](../../../../docs/framework/data/adonet/index.md)</ept>","pos":[6366,6424],"source":"[ADO.NET](../../../../docs/framework/data/adonet/index.md)"},{"content":"Provides information on how to access data using ADO.NET.","pos":[6428,6485]},{"content":"<bpt id=\"p1\">[</bpt>Security<ept id=\"p1\">](../../../../docs/standard/security/index.md)</ept>","pos":[6492,6547],"source":"[Security](../../../../docs/standard/security/index.md)"},{"content":"Provides an overview of the .NET Framework security system.","pos":[6551,6610]}]}