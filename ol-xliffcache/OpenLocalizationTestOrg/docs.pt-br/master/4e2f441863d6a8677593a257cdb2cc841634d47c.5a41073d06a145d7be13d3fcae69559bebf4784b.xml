{"content":"---\ntitle: \"<exception> (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"<exception> XML tag\"\n  - \"exception XML tag\"\nms.assetid: c0517549-171e-4dae-ab88-a9c1700b6eee\n---\n# \\<exception> (Visual Basic)\nSpecifies which exceptions can be thrown.  \n  \n## Syntax  \n  \n```xml  \n<exception cref=\"member\">description</exception>  \n```  \n  \n## Parameters  \n `member`  \n A reference to an exception that is available from the current compilation environment. The compiler checks that the given exception exists and translates `member` to the canonical element name in the output XML. `member` must appear within double quotation marks (\" \").  \n  \n `description`  \n A description.  \n  \n## Remarks  \n Use the `<exception>` tag to specify which exceptions can be thrown. This tag is applied to a method definition.  \n  \n Compile with [/doc](../../../visual-basic/reference/command-line-compiler/doc.md) to process documentation comments to a file.  \n  \n## Example  \n This example uses the `<exception>` tag to describe an exception that the `IntDivide` function can throw.  \n  \n [!code-vb[VbVbcnXmlDocComments#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnXmlDocComments/VB/Class1.vb#3)]  \n  \n## See also\n\n- [XML Comment Tags](../../../visual-basic/language-reference/xmldoc/index.md)\n","nodes":[{"pos":[4,180],"embed":true,"restype":"x-metadata","content":"title: \"<exception> (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"<exception> XML tag\"\n  - \"exception XML tag\"\nms.assetid: c0517549-171e-4dae-ab88-a9c1700b6eee","nodes":[{"content":"<exception> (Visual Basic)","nodes":[{"pos":[0,26],"content":"<ph id=\"ph1\">&lt;exception&gt;</ph> (Visual Basic)","source":"<exception> (Visual Basic)"}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[187,214],"content":"\\<exception> (Visual Basic)","linkify":"\\<exception> (Visual Basic)","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>exception&gt; (Visual Basic)","pos":[0,27],"source":"\\<exception> (Visual Basic)"}]},{"content":"Specifies which exceptions can be thrown.","pos":[215,256]},{"pos":[265,271],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[349,359],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"A reference to an exception that is available from the current compilation environment.","pos":[375,462]},{"content":"The compiler checks that the given exception exists and translates <ph id=\"ph1\">`member`</ph> to the canonical element name in the output XML.","pos":[463,587],"source":" The compiler checks that the given exception exists and translates `member` to the canonical element name in the output XML."},{"content":"<ph id=\"ph1\">`member`</ph> must appear within double quotation marks (\" \").","pos":[588,645],"source":"`member` must appear within double quotation marks (\" \")."},{"content":"A description.","pos":[669,683]},{"pos":[692,699],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Use the <ph id=\"ph1\">`&lt;exception&gt;`</ph> tag to specify which exceptions can be thrown.","pos":[703,771],"source":"Use the `<exception>` tag to specify which exceptions can be thrown."},{"content":"This tag is applied to a method definition.","pos":[772,815]},{"pos":[822,948],"content":"Compile with <bpt id=\"p1\">[</bpt>/doc<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/doc.md)</ept> to process documentation comments to a file.","source":"Compile with [/doc](../../../visual-basic/reference/command-line-compiler/doc.md) to process documentation comments to a file."},{"pos":[957,964],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[968,1073],"content":"This example uses the <ph id=\"ph1\">`&lt;exception&gt;`</ph> tag to describe an exception that the <ph id=\"ph2\">`IntDivide`</ph> function can throw.","source":"This example uses the `<exception>` tag to describe an exception that the `IntDivide` function can throw."},{"pos":[1212,1220],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1224,1300],"content":"<bpt id=\"p1\">[</bpt>XML Comment Tags<ept id=\"p1\">](../../../visual-basic/language-reference/xmldoc/index.md)</ept>","source":"[XML Comment Tags](../../../visual-basic/language-reference/xmldoc/index.md)"}]}