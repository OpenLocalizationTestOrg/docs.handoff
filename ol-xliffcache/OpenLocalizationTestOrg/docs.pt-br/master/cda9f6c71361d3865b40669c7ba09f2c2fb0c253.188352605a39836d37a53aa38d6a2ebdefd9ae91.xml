{"content":"---\ntitle: \"IDENTITY_ATTRIBUTE_BLOB Structure\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"cpp\"\napi_name: \n  - \"IDENTITY_ATTRIBUTE_BLOB\"\napi_location: \n  - \"fusion.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IDENTITY_ATTRIBUTE_BLOB\"\nhelpviewer_keywords: \n  - \"IDENTITY_ATTRIBUTE_BLOB structure [.NET Framework fusion]\"\nms.assetid: af14ae5f-d226-47dd-ba90-8fc6e6605d4d\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# IDENTITY_ATTRIBUTE_BLOB Structure\nContains information about a single attribute in an assembly, and consists of three `DWORD`s. Each `DWORD` is an offset into a character buffer produced by the `CurrentIntoBuffer` method of the [IEnumIDENTITY_ATTRIBUTE](../../../../docs/framework/unmanaged-api/fusion/ienumidentity-attribute-interface.md) interface  \n  \n## Syntax  \n  \n```  \ntypedef struct _IDENTITY_ATTRIBUTE_BLOB {  \n    DWORD  ofsNamespace;  \n    DWORD  ofsName;  \n    DWORD  ofsValue;  \n}   IDENTITY_ATTRIBUTE_BLOB;  \n```  \n  \n## Members  \n  \n|Member|Description|  \n|------------|-----------------|  \n|`ofsNamespace`|The first offset into the character buffer. This offset is not followed by the attribute's namespace, but by a series of null characters. Therefore, it is not used.|  \n|`ofsName`|The second offset into the character buffer. This location marks the start of the attribute's name.|  \n|`ofsValue`|The third offset into the character buffer. This location marks the start of the attribute's value.|  \n  \n## Sample  \n The following example illustrates several basic steps, which eventually result in a populated `IDENTITY_ATTRIBUTE_BLOB` structure:  \n  \n1.  Obtain an [IReferenceIdentity](../../../../docs/framework/unmanaged-api/fusion/ireferenceidentity-interface.md) for the assembly.  \n  \n2.  Call the `IReferenceIdentity::EnumAttributes` method, and obtain an [IEnumIDENTITY_ATTRIBUTE](../../../../docs/framework/unmanaged-api/fusion/ienumidentity-attribute-interface.md).  \n  \n3.  Create a character buffer, and cast it as an `IDENTITY_ATTRIBUTE_BLOB` structure.  \n  \n4.  Call the `CurrentIntoBuffer` method of the `IEnumIDENTITY_ATTRIBUTE` interface. This method copies the attributes `Namespace`, `Name`, and `Value` into the character buffer. The three offsets to those strings will become available in the `IDENTITY_ATTRIBUTE_BLOB` structure.  \n  \n```  \n// EnumAssemblyAttributes.cpp : main project file.  \n  \n#include \"stdafx.h\"  \n  \n#include \"fusion.h\"  \n#include \"windows.h\"  \n#include \"stdio.h\"  \n#include \"mscoree.h\"  \n#include \"isolation.h\"  \n  \ntypedef HRESULT (__stdcall *PFNGETREF)(LPCWSTR pwzFile, REFIID riid, IUnknown **ppUnk);  \ntypedef HRESULT (__stdcall *PFNGETAUTH)(IIdentityAuthority **ppIIdentityAuthority);  \n  \nPFNGETREF                   g_pfnGetAssemblyIdentityFromFile = NULL;  \nPFNGETAUTH                  g_pfnGetIdentityAuthority = NULL;  \nIUnknown                    *g_pUnk = NULL;  \n  \nbool Init()  \n{  \n    HRESULT     hr = S_OK;  \n    DWORD       dwSize = 0;  \n    bool        bRC = false;  \n  \n    hr = CorBindToRuntimeEx(NULL, L\"wks\", 0, CLSID_CorRuntimeHost,  \n                           IID_ICorRuntimeHost, (void **)&g_pUnk);  \n    if(FAILED(hr)) {  \n        printf(\"Error: Failed to initialize CLR runtime! hr = 0x%0x\\n\",  \n                hr);  \n        goto Exit;  \n    }  \n  \n    if (SUCCEEDED(hr)) {  \n        hr = GetRealProcAddress(\"GetAssemblyIdentityFromFile\",  \n                         (VOID **)&g_pfnGetAssemblyIdentityFromFile);  \n    }  \n  \n    if (SUCCEEDED(hr)) {  \n        hr = GetRealProcAddress(\"GetIdentityAuthority\",  \n                                (VOID **)&g_pfnGetIdentityAuthority);  \n    }  \n  \n    if (!g_pfnGetAssemblyIdentityFromFile ||   \n        !g_pfnGetIdentityAuthority)  \n    {  \n        printf(\"Error: Cannot get required APIs from fusion.dll!\\n\");  \n        goto Exit;  \n    }  \n  \n    bRC = true;  \n  \nExit:  \n    return bRC;  \n}  \n  \nvoid Shutdown()  \n{  \n    if(g_pUnk) {  \n        g_pUnk->Release();  \n        g_pUnk = NULL;  \n    }  \n}  \n  \nvoid Usage()  \n{  \n    printf(\"EnumAssemblyAttributes: A tool to enumerate the identity   \n            attributes of a given assembly.\\n\\n\");  \n    printf(\"Usage: EnumAssemblyAttributes AssemblyFilePath\\n\");  \n    printf(\"\\n\");  \n}  \n  \nint _cdecl wmain(int argc, LPCWSTR argv[])  \n{  \n    int     iResult = 1;  \n    IUnknown                    *pUnk  = NULL;  \n    IReferenceIdentity          *pRef  = NULL;  \n    HRESULT                     hr     = S_OK;     \n    IEnumIDENTITY_ATTRIBUTE     *pEnum = NULL;  \n    BYTE                        abData[1024];  \n    DWORD                       cbAvailable;  \n    DWORD                       cbUsed;  \n    IDENTITY_ATTRIBUTE_BLOB     *pBlob;  \n  \n    if(argc != 2) {  \n        Usage();  \n        goto Exit;  \n    }  \n  \n    if(!Init()) {  \n        printf(\"Failure initializing EnumIdAttr.\\n\");  \n        goto Exit;  \n    }  \n  \n    hr = g_pfnGetAssemblyIdentityFromFile(argv[1],   \n                            __uuidof(IReferenceIdentity), &pUnk);  \n  \n    if (FAILED(hr)) {  \n        printf(\"GetAssemblyIdentityFromFile failed with hr = 0x%x\",   \n                hr);  \n        goto Exit;  \n    }  \n  \n    hr = pUnk->QueryInterface(__uuidof(IReferenceIdentity),   \n                              (void**)&pRef);  \n    if (FAILED(hr)) {  \n        goto Exit;  \n    }  \n  \n    hr = pRef->EnumAttributes(&pEnum);  \n    if (FAILED(hr)) {  \n        printf(\"IReferenceIdentity::EnumAttributes failed with hr =   \n                0x%x\", hr);  \n        goto Exit;  \n    }  \n  \n    pBlob = (IDENTITY_ATTRIBUTE_BLOB *)(abData);  \n    while (1) {  \n        cbAvailable = sizeof(abData);  \n        hr = pEnum->CurrentIntoBuffer(cbAvailable, abData, &cbUsed);  \n        if (FAILED(hr)) {  \n            printf(\"IEnumIDENTITY_ATTRIBUTE::CurrentIntoBuffer failed   \n                    with hr = 0x%x\", hr);  \n            goto Exit;  \n        }  \n  \n        if (! cbUsed) {  \n            break;  \n        }  \n  \n        LPWSTR pwzNameSpace = (LPWSTR)(abData + pBlob->ofsNamespace);  \n        LPWSTR pwzName      = (LPWSTR)(abData + pBlob->ofsName);  \n        LPWSTR pwzValue     = (LPWSTR)(abData + pBlob->ofsValue);  \n        printf(\"%ws: %ws = %ws\\n\", pwzNameSpace, pwzName, pwzValue);  \n  \n        hr = pEnum->Skip(1);  \n        if (FAILED(hr)) {  \n            printf(\"IEnumIDENTITY_ATTRIBUTE::Skip failed with hr =   \n                    0x%x\", hr);  \n            goto Exit;  \n        }  \n    }  \n  \n    iResult = 0;  \n  \nExit:  \n  \n    Shutdown();  \n  \n    if (pUnk) {  \n        pUnk->Release();  \n    }  \n  \n    if (pRef) {  \n        pRef->Release();  \n    }  \n  \n    if (pEnum) {  \n        pEnum->Release();  \n    }  \n  \n    return iResult;  \n}  \n```  \n  \n### To run the sample  \n C:\\\\> EnumAssemblyAttributes.exe C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727\\System.dll  \n  \n### Sample output  \n Culture = neutral  \n  \n name = System  \n  \n processorArchitecture = MSIL  \n  \n PublicKeyToken = b77a5c561934e089  \n  \n Version = 2.0.0.0  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** Isolation.h  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [IReferenceIdentity Interface](../../../../docs/framework/unmanaged-api/fusion/ireferenceidentity-interface.md)\n- [IEnumIDENTITY_ATTRIBUTE Interface](../../../../docs/framework/unmanaged-api/fusion/ienumidentity-attribute-interface.md)\n- [IDENTITY_ATTRIBUTE Structure](../../../../docs/framework/unmanaged-api/fusion/identity-attribute-structure.md)\n- [Fusion Structures](../../../../docs/framework/unmanaged-api/fusion/fusion-structures.md)\n","nodes":[{"pos":[4,429],"embed":true,"restype":"x-metadata","content":"title: \"IDENTITY_ATTRIBUTE_BLOB Structure\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"cpp\"\napi_name: \n  - \"IDENTITY_ATTRIBUTE_BLOB\"\napi_location: \n  - \"fusion.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IDENTITY_ATTRIBUTE_BLOB\"\nhelpviewer_keywords: \n  - \"IDENTITY_ATTRIBUTE_BLOB structure [.NET Framework fusion]\"\nms.assetid: af14ae5f-d226-47dd-ba90-8fc6e6605d4d\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"IDENTITY_ATTRIBUTE_BLOB Structure","nodes":[{"pos":[0,33],"content":"IDENTITY_ATTRIBUTE_BLOB Structure","nodes":[{"content":"IDENTITY_ATTRIBUTE_BLOB Structure","pos":[0,33]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[436,469],"content":"IDENTITY_ATTRIBUTE_BLOB Structure","linkify":"IDENTITY_ATTRIBUTE_BLOB Structure","nodes":[{"content":"IDENTITY_ATTRIBUTE_BLOB Structure","pos":[0,33]}]},{"content":"Contains information about a single attribute in an assembly, and consists of three <ph id=\"ph1\">`DWORD`</ph>s.","pos":[470,563],"source":"Contains information about a single attribute in an assembly, and consists of three `DWORD`s."},{"content":"Each <ph id=\"ph1\">`DWORD`</ph> is an offset into a character buffer produced by the <ph id=\"ph2\">`CurrentIntoBuffer`</ph> method of the <bpt id=\"p1\">[</bpt>IEnumIDENTITY_ATTRIBUTE<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/fusion/ienumidentity-attribute-interface.md)</ept> interface","pos":[564,785],"source":" Each `DWORD` is an offset into a character buffer produced by the `CurrentIntoBuffer` method of the [IEnumIDENTITY_ATTRIBUTE](../../../../docs/framework/unmanaged-api/fusion/ienumidentity-attribute-interface.md) interface"},{"pos":[794,800],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[971,978],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Member","pos":[985,991]},{"content":"Description","pos":[992,1003]},{"content":"The first offset into the character buffer.","pos":[1058,1101]},{"content":"This offset is not followed by the attribute's namespace, but by a series of null characters.","pos":[1102,1195]},{"content":"Therefore, it is not used.","pos":[1196,1222]},{"content":"The second offset into the character buffer.","pos":[1237,1281]},{"content":"This location marks the start of the attribute's name.","pos":[1282,1336]},{"content":"The third offset into the character buffer.","pos":[1352,1395]},{"content":"This location marks the start of the attribute's value.","pos":[1396,1451]},{"pos":[1461,1467],"content":"Sample","linkify":"Sample","nodes":[{"content":"Sample","pos":[0,6]}]},{"pos":[1471,1601],"content":"The following example illustrates several basic steps, which eventually result in a populated <ph id=\"ph1\">`IDENTITY_ATTRIBUTE_BLOB`</ph> structure:","source":"The following example illustrates several basic steps, which eventually result in a populated `IDENTITY_ATTRIBUTE_BLOB` structure:"},{"pos":[1611,1740],"content":"Obtain an <bpt id=\"p1\">[</bpt>IReferenceIdentity<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/fusion/ireferenceidentity-interface.md)</ept> for the assembly.","source":"Obtain an [IReferenceIdentity](../../../../docs/framework/unmanaged-api/fusion/ireferenceidentity-interface.md) for the assembly."},{"pos":[1750,1930],"content":"Call the <ph id=\"ph1\">`IReferenceIdentity::EnumAttributes`</ph> method, and obtain an <bpt id=\"p1\">[</bpt>IEnumIDENTITY_ATTRIBUTE<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/fusion/ienumidentity-attribute-interface.md)</ept>.","source":"Call the `IReferenceIdentity::EnumAttributes` method, and obtain an [IEnumIDENTITY_ATTRIBUTE](../../../../docs/framework/unmanaged-api/fusion/ienumidentity-attribute-interface.md)."},{"pos":[1940,2021],"content":"Create a character buffer, and cast it as an <ph id=\"ph1\">`IDENTITY_ATTRIBUTE_BLOB`</ph> structure.","source":"Create a character buffer, and cast it as an `IDENTITY_ATTRIBUTE_BLOB` structure."},{"content":"Call the <ph id=\"ph1\">`CurrentIntoBuffer`</ph> method of the <ph id=\"ph2\">`IEnumIDENTITY_ATTRIBUTE`</ph> interface.","pos":[2031,2110],"source":"Call the `CurrentIntoBuffer` method of the `IEnumIDENTITY_ATTRIBUTE` interface."},{"content":"This method copies the attributes <ph id=\"ph1\">`Namespace`</ph>, <ph id=\"ph2\">`Name`</ph>, and <ph id=\"ph3\">`Value`</ph> into the character buffer.","pos":[2111,2204],"source":" This method copies the attributes `Namespace`, `Name`, and `Value` into the character buffer."},{"content":"The three offsets to those strings will become available in the <ph id=\"ph1\">`IDENTITY_ATTRIBUTE_BLOB`</ph> structure.","pos":[2205,2305],"source":" The three offsets to those strings will become available in the `IDENTITY_ATTRIBUTE_BLOB` structure."},{"pos":[6681,6698],"content":"To run the sample","linkify":"To run the sample","nodes":[{"content":"To run the sample","pos":[0,17]}]},{"content":"C:<ph id=\"ph1\">\\\\</ph>&gt; EnumAssemblyAttributes.exe C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727\\System.dll","pos":[6702,6791],"source":"C:\\\\> EnumAssemblyAttributes.exe C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727\\System.dll"},{"pos":[6801,6814],"content":"Sample output","linkify":"Sample output","nodes":[{"content":"Sample output","pos":[0,13]}]},{"content":"Culture = neutral","pos":[6818,6835]},{"content":"name = System","pos":[6842,6855]},{"content":"processorArchitecture = MSIL","pos":[6862,6890]},{"content":"PublicKeyToken = b77a5c561934e089","pos":[6897,6930]},{"content":"Version = 2.0.0.0","pos":[6937,6954]},{"pos":[6963,6975],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[6979,7083],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[7090,7113],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> Isolation.h","source":"**Header:** Isolation.h"},{"pos":[7120,7228],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[7237,7245],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[7249,7360],"content":"<bpt id=\"p1\">[</bpt>IReferenceIdentity Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/fusion/ireferenceidentity-interface.md)</ept>","source":"[IReferenceIdentity Interface](../../../../docs/framework/unmanaged-api/fusion/ireferenceidentity-interface.md)"},{"pos":[7363,7484],"content":"<bpt id=\"p1\">[</bpt>IEnumIDENTITY_ATTRIBUTE Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/fusion/ienumidentity-attribute-interface.md)</ept>","source":"[IEnumIDENTITY_ATTRIBUTE Interface](../../../../docs/framework/unmanaged-api/fusion/ienumidentity-attribute-interface.md)"},{"pos":[7487,7598],"content":"<bpt id=\"p1\">[</bpt>IDENTITY_ATTRIBUTE Structure<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/fusion/identity-attribute-structure.md)</ept>","source":"[IDENTITY_ATTRIBUTE Structure](../../../../docs/framework/unmanaged-api/fusion/identity-attribute-structure.md)"},{"pos":[7601,7690],"content":"<bpt id=\"p1\">[</bpt>Fusion Structures<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/fusion/fusion-structures.md)</ept>","source":"[Fusion Structures](../../../../docs/framework/unmanaged-api/fusion/fusion-structures.md)"}]}