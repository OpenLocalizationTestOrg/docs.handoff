{"content":"---\ntitle: \"Date and Time Canonical Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: 9628b74f-1585-436a-b385-8b02ed0cdd63\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Date and Time Canonical Functions\n[!INCLUDE[esql](../../../../../../includes/esql-md.md)] includes date and time canonical functions.  \n  \n## Remarks  \n The following table shows the date and time [!INCLUDE[esql](../../../../../../includes/esql-md.md)] canonical functions. `datetime` is a <xref:System.DateTime> value.  \n  \n|Function|Description|  \n|--------------|-----------------|  \n|`AddNanoseconds(` `expression`, `number``)`|Adds the specified `number` of nanoseconds to the `expression`.<br /><br /> **Arguments**<br /><br /> `expression`: `DateTime`, `DateTimeOffset`, or `Time`.<br /><br /> `number`: `Int32`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`AddMicroseconds(` `expression`, `number``)`|Adds the specified `number` of microseconds to the `expression`.<br /><br /> **Arguments**<br /><br /> `expression`: `DateTime`, `DateTimeOffset`, or `Time`.<br /><br /> `number`: `Int32`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`AddMilliseconds(` `expression`, `number``)`|Adds the specified `number` of milliseconds to the `expression`.<br /><br /> **Arguments**<br /><br /> `expression`: `DateTime`, `DateTimeOffset`, or `Time`.<br /><br /> `number`: `Int32`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`AddSeconds(` `expression`, `number``)`|Adds the specified `number` of seconds to the `expression`.<br /><br /> **Arguments**<br /><br /> `expression`: `DateTime`, `DateTimeOffset`, or `Time`.<br /><br /> `number`: `Int32`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`AddMinutes(` `expression`, `number``)`|Adds the specified `number` of minutes to the `expression`.<br /><br /> **Arguments**<br /><br /> `expression`: `DateTime`, `DateTimeOffset`, or `Time`.<br /><br /> `number`: `Int32`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`AddHours(` `expression`, `number``)`|Adds the specified `number` of hours to the `expression`.<br /><br /> **Arguments**<br /><br /> `expression`: `DateTime`, `DateTimeOffset`, or `Time`.<br /><br /> `number`: `Int32`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`AddDays(` `expression`, `number``)`|Adds the specified `number` of days to the `expression`.<br /><br /> **Arguments**<br /><br /> `expression`: `DateTime` or `DateTimeOffset`.<br /><br /> `number`: `Int32`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`AddMonths(` `expression`, `number``)`|Adds the specified `number` of months to the `expression`.<br /><br /> **Arguments**<br /><br /> `expression`: `DateTime` or `DateTimeOffset`.<br /><br /> `number`: `Int32`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`AddYears(` `expression`, `number``)`|Adds the specified `number` of years to the `expression`.<br /><br /> **Arguments**<br /><br /> `expression`: `DateTime` or `DateTimeOffset`.<br /><br /> `number`: `Int32`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`CreateDateTime(` `year`, `month`, `day`, `hour`, `minute`, `second``)`|Returns a new `DateTime` value as the current date and time of the server in the server's time zone.<br /><br /> **Arguments**<br /><br /> `year`, `month`, `day`, `hour`, `minute`: `Int16` and `Int32`.<br /><br /> `second`: `Double`.<br /><br /> **Return Value**<br /><br /> A `DateTime`.|  \n|`CreateDateTimeOffset(` `year`, `month`, `day`, `hour`, `minute`, `second`, `tzoffset``)`|Returns a new `DateTimeOffset` value as the current date and time of the server relative to the Coordinated Universal Time (UTC).<br /><br /> **Arguments**<br /><br /> `year`, `month`, `day`, `hour`, `minute`, `tzoffset`: `Int32`.<br /><br /> `second`: `Double`.<br /><br /> **Return Value**<br /><br /> A `DateTimeOffset`.|  \n|`CreateTime(` `hour`, `minute`, `second``)`|Returns a new `Time` value as the current time.<br /><br /> **Arguments**<br /><br /> `hour` and `minute`: `Int32`.<br /><br /> `second`: `Double`.<br /><br /> **Return Value**<br /><br /> A `Time`.|  \n|`CurrentDateTime()`|Returns a `DateTime` value as the current date and time of the server in the server's time zone.<br /><br /> **Return Value**<br /><br /> A `DateTime`.|  \n|`CurrentDateTimeOffset()`|Returns the current date, time and offset as a `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> A `DateTimeOffset`.|  \n|`CurrentUtcDateTime()`|Returns a <xref:System.DateTime>value as the current date and time of the server in the UTS time zone.<br /><br /> **Return Value**<br /><br /> A `DateTime`.|  \n|`Day(` `expression` `)`|Returns the day portion of `expression` as an `Int32` between 1 and 31.<br /><br /> **Arguments**<br /><br /> A `DateTime` and `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> An `Int32`.<br /><br /> **Example**<br /><br /> `-- The following example returns 12.`<br /><br /> `Day(cast('03/12/1998' as DateTime))`|  \n|`DayOfYear(` `expression` `)`|Returns the day portion of `expression` as an `Int32` between 1 and 366, where 366 is returned for the last day of a leap year.<br /><br /> **Arguments**<br /><br /> A `DateTime` or `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`DiffNanoseconds(` `startExpression`, `endExpression``)`|Returns the difference, in nanoseconds, between `startExpression` and `endExpression`.<br /><br /> **Arguments**<br /><br /> `startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`. **Note:**  `startExpression` and `endExpression` must be of the same type. <br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`DiffMilliseconds(` `startExpression`, `endExpression``)`|Returns the difference, in milliseconds, between `startExpression` and `endExpression`.<br /><br /> **Arguments**<br /><br /> `startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`. **Note:**  `startExpression` and `endExpression` must be of the same type. <br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`DiffMicroseconds(` `startExpression`, `endExpression``)`|Returns the difference, in microseconds, between `startExpression` and `endExpression`.<br /><br /> **Arguments**<br /><br /> `startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`. **Note:**  `startExpression` and `endExpression` must be of the same type. <br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`DiffSeconds(` `startExpression`, `endExpression``)`|Returns the difference, in seconds, between `startExpression` and `endExpression`.<br /><br /> **Arguments**<br /><br /> `startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`. **Note:**  `startExpression` and `endExpression` must be of the same type. <br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`DiffMinutes(` `startExpression`, `endExpression``)`|Returns the difference, in minutes, between `startExpression` and `endExpression`.<br /><br /> **Arguments**<br /><br /> `startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`. **Note:**  `startExpression` and `endExpression` must be of the same type. <br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`DiffHours(` `startExpression`, `endExpression``)`|Returns the difference, in hours, between `startExpression` and `endExpression`.<br /><br /> **Arguments**<br /><br /> `startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`. **Note:**  `startExpression` and `endExpression` must be of the same type. <br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`DiffDays(` `startExpression`, `endExpression``)`|Returns the difference, in days, between `startExpression` and `endExpression`.<br /><br /> **Arguments**<br /><br /> `startExpression`, `endExpression`: `DateTime` or `DateTimeOffset`. **Note:**  `startExpression` and `endExpression` must be of the same type. <br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`DiffMonths(` `startExpression`, `endExpression``)`|Returns the difference, in months, between `startExpression` and `endExpression`.<br /><br /> **Arguments**<br /><br /> `startExpression`, `endExpression`: `DateTime` or `DateTimeOffset`. **Note:**  `startExpression` and `endExpression` must be of the same type. <br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`DiffYears(` `startExpression`, `endExpression``)`|Returns the difference, in years, between `startExpression` and `endExpression`.<br /><br /> **Arguments**<br /><br /> `startExpression`, `endExpression`: `DateTime` or `DateTimeOffset`. **Note:**  `startExpression` and `endExpression` must be of the same type. <br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`GetTotalOffsetMinutes(` `datetimeoffset` `)`|Returns the number of minutes that the `datetimeoffset` is offset from GMT. This is generally between +780 and -780 (+ or - 13 hrs). **Note:**  This function is supported in SQL Server 2008 only. <br /><br /> **Arguments**<br /><br /> A `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`Hour (` `expression` `)`|Returns the hour portion of `expression` as an `Int32` between 0 and 23.<br /><br /> **Arguments**<br /><br /> A `DateTime, Time` and `DateTimeOffset`.<br /><br /> **Example**<br /><br /> `-- The following example returns 22.`<br /><br /> `Hour(cast('22:35:5' as DateTime))`|  \n|`Millisecond(` `expression` `)`|Returns the milliseconds portion of `expression` as an `Int32` between 0 and 999.<br /><br /> **Arguments**<br /><br /> A `DateTime, Time` and `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> An `Int32`.|  \n|`Minute(` `expression` `)`|Returns the minute portion of `expression` as an `Int32` between 0 and 59.<br /><br /> **Arguments**<br /><br /> A `DateTime, Time` or `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> An `Int32`.<br /><br /> **Example**<br /><br /> `-- The following example returns 35`<br /><br /> `Minute(cast('22:35:5' as DateTime))`|  \n|`Month` `(` `expression` `)`|Returns the month portion of `expression` as an `Int32` between 1 and 12.<br /><br /> **Arguments**<br /><br /> A `DateTime` or `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> An `Int32`.<br /><br /> **Example**<br /><br /> `-- The following example returns 3.`<br /><br /> `Month(cast('03/12/1998' as DateTime))`|  \n|`Second(` `expression` `)`|Returns the seconds portion of `expression` as an `Int32` between 0 and 59.<br /><br /> **Arguments**<br /><br /> A `DateTime, Time` and `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> An `Int32`.<br /><br /> **Example**<br /><br /> `-- The following example returns 5`<br /><br /> `Second(cast('22:35:5' as DateTime))`|  \n|`TruncateTime(` `expression` `)`|Returns the `expression`, with the time values truncated.<br /><br /> **Arguments**<br /><br /> A `DateTime` or `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> The type of `expression`.|  \n|`Year(` `expression` `)`|Returns the year portion of `expression` as an `Int32``YYYY`.<br /><br /> **Arguments**<br /><br /> A `DateTime` and `DateTimeOffset`.<br /><br /> **Return Value**<br /><br /> An `Int32`.<br /><br /> **Example**<br /><br /> `-- The following example returns 1998.`<br /><br /> `Year(cast('03/12/1998' as DateTime))`|  \n  \n These functions will return `null` if given `null` input.  \n  \n Equivalent functionality is available in the Microsoft SQL Client Managed Provider. For more information, see [SqlClient for Entity Framework Functions](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md).  \n  \n## See Also  \n [Canonical Functions](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md)","nodes":[{"pos":[4,408],"embed":true,"restype":"x-metadata","content":"title: \"Date and Time Canonical Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: 9628b74f-1585-436a-b385-8b02ed0cdd63\ncaps.latest.revision: 3\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"Date and Time Canonical Functions | Microsoft Docs","nodes":[{"pos":[0,50],"content":"Date and Time Canonical Functions | Microsoft Docs","nodes":[{"content":"Date and Time Canonical Functions | Microsoft Docs","pos":[0,50]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[415,448],"content":"Date and Time Canonical Functions","linkify":"Date and Time Canonical Functions","nodes":[{"content":"Date and Time Canonical Functions","pos":[0,33]}]},{"pos":[505,548],"content":"includes date and time canonical functions."},{"pos":[557,564],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The following table shows the date and time <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> canonical functions.","pos":[568,688],"source":"The following table shows the date and time [!INCLUDE[esql](../../../../../../includes/esql-md.md)] canonical functions."},{"content":"<ph id=\"ph1\">`datetime`</ph> is a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[689,734],"source":"`datetime` is a <xref:System.DateTime> value."},{"content":"Function","pos":[741,749]},{"content":"Description","pos":[750,761]},{"pos":[803,846],"content":"<ph id=\"ph1\">`AddNanoseconds(`</ph> <ph id=\"ph2\">`expression`</ph>, <ph id=\"ph3\">`number``)`</ph>","source":"`AddNanoseconds(` `expression`, `number``)`"},{"content":"Adds the specified <ph id=\"ph1\">`number`</ph> of nanoseconds to the <ph id=\"ph2\">`expression`</ph>.","pos":[847,910],"source":"Adds the specified `number` of nanoseconds to the `expression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[923,936],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: <ph id=\"ph2\">`DateTime`</ph>, <ph id=\"ph3\">`DateTimeOffset`</ph>, or <ph id=\"ph4\">`Time`</ph>.","pos":[949,1003],"source":"`expression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<ph id=\"ph1\">`number`</ph>: <ph id=\"ph2\">`Int32`</ph>.","pos":[1016,1034],"source":"`number`: `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1047,1063],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[1076,1101],"source":"The type of `expression`."},{"pos":[1106,1150],"content":"<ph id=\"ph1\">`AddMicroseconds(`</ph> <ph id=\"ph2\">`expression`</ph>, <ph id=\"ph3\">`number``)`</ph>","source":"`AddMicroseconds(` `expression`, `number``)`"},{"content":"Adds the specified <ph id=\"ph1\">`number`</ph> of microseconds to the <ph id=\"ph2\">`expression`</ph>.","pos":[1151,1215],"source":"Adds the specified `number` of microseconds to the `expression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[1228,1241],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: <ph id=\"ph2\">`DateTime`</ph>, <ph id=\"ph3\">`DateTimeOffset`</ph>, or <ph id=\"ph4\">`Time`</ph>.","pos":[1254,1308],"source":"`expression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<ph id=\"ph1\">`number`</ph>: <ph id=\"ph2\">`Int32`</ph>.","pos":[1321,1339],"source":"`number`: `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1352,1368],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[1381,1406],"source":"The type of `expression`."},{"pos":[1411,1455],"content":"<ph id=\"ph1\">`AddMilliseconds(`</ph> <ph id=\"ph2\">`expression`</ph>, <ph id=\"ph3\">`number``)`</ph>","source":"`AddMilliseconds(` `expression`, `number``)`"},{"content":"Adds the specified <ph id=\"ph1\">`number`</ph> of milliseconds to the <ph id=\"ph2\">`expression`</ph>.","pos":[1456,1520],"source":"Adds the specified `number` of milliseconds to the `expression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[1533,1546],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: <ph id=\"ph2\">`DateTime`</ph>, <ph id=\"ph3\">`DateTimeOffset`</ph>, or <ph id=\"ph4\">`Time`</ph>.","pos":[1559,1613],"source":"`expression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<ph id=\"ph1\">`number`</ph>: <ph id=\"ph2\">`Int32`</ph>.","pos":[1626,1644],"source":"`number`: `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1657,1673],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[1686,1711],"source":"The type of `expression`."},{"pos":[1716,1755],"content":"<ph id=\"ph1\">`AddSeconds(`</ph> <ph id=\"ph2\">`expression`</ph>, <ph id=\"ph3\">`number``)`</ph>","source":"`AddSeconds(` `expression`, `number``)`"},{"content":"Adds the specified <ph id=\"ph1\">`number`</ph> of seconds to the <ph id=\"ph2\">`expression`</ph>.","pos":[1756,1815],"source":"Adds the specified `number` of seconds to the `expression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[1828,1841],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: <ph id=\"ph2\">`DateTime`</ph>, <ph id=\"ph3\">`DateTimeOffset`</ph>, or <ph id=\"ph4\">`Time`</ph>.","pos":[1854,1908],"source":"`expression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<ph id=\"ph1\">`number`</ph>: <ph id=\"ph2\">`Int32`</ph>.","pos":[1921,1939],"source":"`number`: `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1952,1968],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[1981,2006],"source":"The type of `expression`."},{"pos":[2011,2050],"content":"<ph id=\"ph1\">`AddMinutes(`</ph> <ph id=\"ph2\">`expression`</ph>, <ph id=\"ph3\">`number``)`</ph>","source":"`AddMinutes(` `expression`, `number``)`"},{"content":"Adds the specified <ph id=\"ph1\">`number`</ph> of minutes to the <ph id=\"ph2\">`expression`</ph>.","pos":[2051,2110],"source":"Adds the specified `number` of minutes to the `expression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[2123,2136],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: <ph id=\"ph2\">`DateTime`</ph>, <ph id=\"ph3\">`DateTimeOffset`</ph>, or <ph id=\"ph4\">`Time`</ph>.","pos":[2149,2203],"source":"`expression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<ph id=\"ph1\">`number`</ph>: <ph id=\"ph2\">`Int32`</ph>.","pos":[2216,2234],"source":"`number`: `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[2247,2263],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[2276,2301],"source":"The type of `expression`."},{"pos":[2306,2343],"content":"<ph id=\"ph1\">`AddHours(`</ph> <ph id=\"ph2\">`expression`</ph>, <ph id=\"ph3\">`number``)`</ph>","source":"`AddHours(` `expression`, `number``)`"},{"content":"Adds the specified <ph id=\"ph1\">`number`</ph> of hours to the <ph id=\"ph2\">`expression`</ph>.","pos":[2344,2401],"source":"Adds the specified `number` of hours to the `expression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[2414,2427],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: <ph id=\"ph2\">`DateTime`</ph>, <ph id=\"ph3\">`DateTimeOffset`</ph>, or <ph id=\"ph4\">`Time`</ph>.","pos":[2440,2494],"source":"`expression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<ph id=\"ph1\">`number`</ph>: <ph id=\"ph2\">`Int32`</ph>.","pos":[2507,2525],"source":"`number`: `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[2538,2554],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[2567,2592],"source":"The type of `expression`."},{"pos":[2597,2633],"content":"<ph id=\"ph1\">`AddDays(`</ph> <ph id=\"ph2\">`expression`</ph>, <ph id=\"ph3\">`number``)`</ph>","source":"`AddDays(` `expression`, `number``)`"},{"content":"Adds the specified <ph id=\"ph1\">`number`</ph> of days to the <ph id=\"ph2\">`expression`</ph>.","pos":[2634,2690],"source":"Adds the specified `number` of days to the `expression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[2703,2716],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: <ph id=\"ph2\">`DateTime`</ph> or <ph id=\"ph3\">`DateTimeOffset`</ph>.","pos":[2729,2774],"source":"`expression`: `DateTime` or `DateTimeOffset`."},{"content":"<ph id=\"ph1\">`number`</ph>: <ph id=\"ph2\">`Int32`</ph>.","pos":[2787,2805],"source":"`number`: `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[2818,2834],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[2847,2872],"source":"The type of `expression`."},{"pos":[2877,2915],"content":"<ph id=\"ph1\">`AddMonths(`</ph> <ph id=\"ph2\">`expression`</ph>, <ph id=\"ph3\">`number``)`</ph>","source":"`AddMonths(` `expression`, `number``)`"},{"content":"Adds the specified <ph id=\"ph1\">`number`</ph> of months to the <ph id=\"ph2\">`expression`</ph>.","pos":[2916,2974],"source":"Adds the specified `number` of months to the `expression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[2987,3000],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: <ph id=\"ph2\">`DateTime`</ph> or <ph id=\"ph3\">`DateTimeOffset`</ph>.","pos":[3013,3058],"source":"`expression`: `DateTime` or `DateTimeOffset`."},{"content":"<ph id=\"ph1\">`number`</ph>: <ph id=\"ph2\">`Int32`</ph>.","pos":[3071,3089],"source":"`number`: `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[3102,3118],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[3131,3156],"source":"The type of `expression`."},{"pos":[3161,3198],"content":"<ph id=\"ph1\">`AddYears(`</ph> <ph id=\"ph2\">`expression`</ph>, <ph id=\"ph3\">`number``)`</ph>","source":"`AddYears(` `expression`, `number``)`"},{"content":"Adds the specified <ph id=\"ph1\">`number`</ph> of years to the <ph id=\"ph2\">`expression`</ph>.","pos":[3199,3256],"source":"Adds the specified `number` of years to the `expression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[3269,3282],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: <ph id=\"ph2\">`DateTime`</ph> or <ph id=\"ph3\">`DateTimeOffset`</ph>.","pos":[3295,3340],"source":"`expression`: `DateTime` or `DateTimeOffset`."},{"content":"<ph id=\"ph1\">`number`</ph>: <ph id=\"ph2\">`Int32`</ph>.","pos":[3353,3371],"source":"`number`: `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[3384,3400],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[3413,3438],"source":"The type of `expression`."},{"pos":[3443,3514],"content":"<ph id=\"ph1\">`CreateDateTime(`</ph> <ph id=\"ph2\">`year`</ph>, <ph id=\"ph3\">`month`</ph>, <ph id=\"ph4\">`day`</ph>, <ph id=\"ph5\">`hour`</ph>, <ph id=\"ph6\">`minute`</ph>, <ph id=\"ph7\">`second``)`</ph>","source":"`CreateDateTime(` `year`, `month`, `day`, `hour`, `minute`, `second``)`"},{"content":"Returns a new <ph id=\"ph1\">`DateTime`</ph> value as the current date and time of the server in the server's time zone.","pos":[3515,3615],"source":"Returns a new `DateTime` value as the current date and time of the server in the server's time zone."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[3628,3641],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, <ph id=\"ph3\">`day`</ph>, <ph id=\"ph4\">`hour`</ph>, <ph id=\"ph5\">`minute`</ph>: <ph id=\"ph6\">`Int16`</ph> and <ph id=\"ph7\">`Int32`</ph>.","pos":[3654,3716],"source":"`year`, `month`, `day`, `hour`, `minute`: `Int16` and `Int32`."},{"content":"<ph id=\"ph1\">`second`</ph>: <ph id=\"ph2\">`Double`</ph>.","pos":[3729,3748],"source":"`second`: `Double`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[3761,3777],"source":"**Return Value**"},{"content":"A <ph id=\"ph1\">`DateTime`</ph>.","pos":[3790,3803],"source":"A `DateTime`."},{"pos":[3808,3897],"content":"<ph id=\"ph1\">`CreateDateTimeOffset(`</ph> <ph id=\"ph2\">`year`</ph>, <ph id=\"ph3\">`month`</ph>, <ph id=\"ph4\">`day`</ph>, <ph id=\"ph5\">`hour`</ph>, <ph id=\"ph6\">`minute`</ph>, <ph id=\"ph7\">`second`</ph>, <ph id=\"ph8\">`tzoffset``)`</ph>","source":"`CreateDateTimeOffset(` `year`, `month`, `day`, `hour`, `minute`, `second`, `tzoffset``)`"},{"content":"Returns a new <ph id=\"ph1\">`DateTimeOffset`</ph> value as the current date and time of the server relative to the Coordinated Universal Time (UTC).","pos":[3898,4027],"source":"Returns a new `DateTimeOffset` value as the current date and time of the server relative to the Coordinated Universal Time (UTC)."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[4040,4053],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, <ph id=\"ph3\">`day`</ph>, <ph id=\"ph4\">`hour`</ph>, <ph id=\"ph5\">`minute`</ph>, <ph id=\"ph6\">`tzoffset`</ph>: <ph id=\"ph7\">`Int32`</ph>.","pos":[4066,4128],"source":"`year`, `month`, `day`, `hour`, `minute`, `tzoffset`: `Int32`."},{"content":"<ph id=\"ph1\">`second`</ph>: <ph id=\"ph2\">`Double`</ph>.","pos":[4141,4160],"source":"`second`: `Double`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[4173,4189],"source":"**Return Value**"},{"content":"A <ph id=\"ph1\">`DateTimeOffset`</ph>.","pos":[4202,4221],"source":"A `DateTimeOffset`."},{"pos":[4226,4269],"content":"<ph id=\"ph1\">`CreateTime(`</ph> <ph id=\"ph2\">`hour`</ph>, <ph id=\"ph3\">`minute`</ph>, <ph id=\"ph4\">`second``)`</ph>","source":"`CreateTime(` `hour`, `minute`, `second``)`"},{"content":"Returns a new <ph id=\"ph1\">`Time`</ph> value as the current time.","pos":[4270,4317],"source":"Returns a new `Time` value as the current time."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[4330,4343],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`hour`</ph> and <ph id=\"ph2\">`minute`</ph>: <ph id=\"ph3\">`Int32`</ph>.","pos":[4356,4385],"source":"`hour` and `minute`: `Int32`."},{"content":"<ph id=\"ph1\">`second`</ph>: <ph id=\"ph2\">`Double`</ph>.","pos":[4398,4417],"source":"`second`: `Double`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[4430,4446],"source":"**Return Value**"},{"content":"A <ph id=\"ph1\">`Time`</ph>.","pos":[4459,4468],"source":"A `Time`."},{"content":"Returns a <ph id=\"ph1\">`DateTime`</ph> value as the current date and time of the server in the server's time zone.","pos":[4493,4589],"source":"Returns a `DateTime` value as the current date and time of the server in the server's time zone."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[4602,4618],"source":"**Return Value**"},{"content":"A <ph id=\"ph1\">`DateTime`</ph>.","pos":[4631,4644],"source":"A `DateTime`."},{"content":"Returns the current date, time and offset as a <ph id=\"ph1\">`DateTimeOffset`</ph>.","pos":[4675,4739],"source":"Returns the current date, time and offset as a `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[4752,4768],"source":"**Return Value**"},{"content":"A <ph id=\"ph1\">`DateTimeOffset`</ph>.","pos":[4781,4800],"source":"A `DateTimeOffset`."},{"content":"Returns a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>value as the current date and time of the server in the UTS time zone.","pos":[4828,4930],"source":"Returns a <xref:System.DateTime>value as the current date and time of the server in the UTS time zone."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[4943,4959],"source":"**Return Value**"},{"content":"A <ph id=\"ph1\">`DateTime`</ph>.","pos":[4972,4985],"source":"A `DateTime`."},{"pos":[4990,5013],"content":"<ph id=\"ph1\">`Day(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`Day(` `expression` `)`"},{"content":"Returns the day portion of <ph id=\"ph1\">`expression`</ph> as an <ph id=\"ph2\">`Int32`</ph> between 1 and 31.","pos":[5014,5085],"source":"Returns the day portion of `expression` as an `Int32` between 1 and 31."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[5098,5111],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTime`</ph> and <ph id=\"ph2\">`DateTimeOffset`</ph>.","pos":[5124,5158],"source":"A `DateTime` and `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[5171,5187],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[5200,5211],"source":"An `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[5224,5235],"source":"**Example**"},{"pos":[5341,5370],"content":"<ph id=\"ph1\">`DayOfYear(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`DayOfYear(` `expression` `)`"},{"content":"Returns the day portion of <ph id=\"ph1\">`expression`</ph> as an <ph id=\"ph2\">`Int32`</ph> between 1 and 366, where 366 is returned for the last day of a leap year.","pos":[5371,5498],"source":"Returns the day portion of `expression` as an `Int32` between 1 and 366, where 366 is returned for the last day of a leap year."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[5511,5524],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTime`</ph> or <ph id=\"ph2\">`DateTimeOffset`</ph>.","pos":[5537,5570],"source":"A `DateTime` or `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[5583,5599],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[5612,5623],"source":"An `Int32`."},{"pos":[5628,5684],"content":"<ph id=\"ph1\">`DiffNanoseconds(`</ph> <ph id=\"ph2\">`startExpression`</ph>, <ph id=\"ph3\">`endExpression``)`</ph>","source":"`DiffNanoseconds(` `startExpression`, `endExpression``)`"},{"content":"Returns the difference, in nanoseconds, between <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph>.","pos":[5685,5771],"source":"Returns the difference, in nanoseconds, between `startExpression` and `endExpression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[5784,5797],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`startExpression`</ph>, <ph id=\"ph2\">`endExpression`</ph>: <ph id=\"ph3\">`DateTime`</ph>, <ph id=\"ph4\">`DateTimeOffset`</ph>, or <ph id=\"ph5\">`Time`</ph>.","pos":[5810,5886],"source":"`startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph> must be of the same type.","pos":[5887,5961],"source":"**Note:**  `startExpression` and `endExpression` must be of the same type."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[5975,5991],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[6004,6015],"source":"An `Int32`."},{"pos":[6020,6077],"content":"<ph id=\"ph1\">`DiffMilliseconds(`</ph> <ph id=\"ph2\">`startExpression`</ph>, <ph id=\"ph3\">`endExpression``)`</ph>","source":"`DiffMilliseconds(` `startExpression`, `endExpression``)`"},{"content":"Returns the difference, in milliseconds, between <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph>.","pos":[6078,6165],"source":"Returns the difference, in milliseconds, between `startExpression` and `endExpression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[6178,6191],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`startExpression`</ph>, <ph id=\"ph2\">`endExpression`</ph>: <ph id=\"ph3\">`DateTime`</ph>, <ph id=\"ph4\">`DateTimeOffset`</ph>, or <ph id=\"ph5\">`Time`</ph>.","pos":[6204,6280],"source":"`startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph> must be of the same type.","pos":[6281,6355],"source":"**Note:**  `startExpression` and `endExpression` must be of the same type."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[6369,6385],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[6398,6409],"source":"An `Int32`."},{"pos":[6414,6471],"content":"<ph id=\"ph1\">`DiffMicroseconds(`</ph> <ph id=\"ph2\">`startExpression`</ph>, <ph id=\"ph3\">`endExpression``)`</ph>","source":"`DiffMicroseconds(` `startExpression`, `endExpression``)`"},{"content":"Returns the difference, in microseconds, between <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph>.","pos":[6472,6559],"source":"Returns the difference, in microseconds, between `startExpression` and `endExpression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[6572,6585],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`startExpression`</ph>, <ph id=\"ph2\">`endExpression`</ph>: <ph id=\"ph3\">`DateTime`</ph>, <ph id=\"ph4\">`DateTimeOffset`</ph>, or <ph id=\"ph5\">`Time`</ph>.","pos":[6598,6674],"source":"`startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph> must be of the same type.","pos":[6675,6749],"source":"**Note:**  `startExpression` and `endExpression` must be of the same type."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[6763,6779],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[6792,6803],"source":"An `Int32`."},{"pos":[6808,6860],"content":"<ph id=\"ph1\">`DiffSeconds(`</ph> <ph id=\"ph2\">`startExpression`</ph>, <ph id=\"ph3\">`endExpression``)`</ph>","source":"`DiffSeconds(` `startExpression`, `endExpression``)`"},{"content":"Returns the difference, in seconds, between <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph>.","pos":[6861,6943],"source":"Returns the difference, in seconds, between `startExpression` and `endExpression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[6956,6969],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`startExpression`</ph>, <ph id=\"ph2\">`endExpression`</ph>: <ph id=\"ph3\">`DateTime`</ph>, <ph id=\"ph4\">`DateTimeOffset`</ph>, or <ph id=\"ph5\">`Time`</ph>.","pos":[6982,7058],"source":"`startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph> must be of the same type.","pos":[7059,7133],"source":"**Note:**  `startExpression` and `endExpression` must be of the same type."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[7147,7163],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[7176,7187],"source":"An `Int32`."},{"pos":[7192,7244],"content":"<ph id=\"ph1\">`DiffMinutes(`</ph> <ph id=\"ph2\">`startExpression`</ph>, <ph id=\"ph3\">`endExpression``)`</ph>","source":"`DiffMinutes(` `startExpression`, `endExpression``)`"},{"content":"Returns the difference, in minutes, between <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph>.","pos":[7245,7327],"source":"Returns the difference, in minutes, between `startExpression` and `endExpression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[7340,7353],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`startExpression`</ph>, <ph id=\"ph2\">`endExpression`</ph>: <ph id=\"ph3\">`DateTime`</ph>, <ph id=\"ph4\">`DateTimeOffset`</ph>, or <ph id=\"ph5\">`Time`</ph>.","pos":[7366,7442],"source":"`startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph> must be of the same type.","pos":[7443,7517],"source":"**Note:**  `startExpression` and `endExpression` must be of the same type."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[7531,7547],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[7560,7571],"source":"An `Int32`."},{"pos":[7576,7626],"content":"<ph id=\"ph1\">`DiffHours(`</ph> <ph id=\"ph2\">`startExpression`</ph>, <ph id=\"ph3\">`endExpression``)`</ph>","source":"`DiffHours(` `startExpression`, `endExpression``)`"},{"content":"Returns the difference, in hours, between <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph>.","pos":[7627,7707],"source":"Returns the difference, in hours, between `startExpression` and `endExpression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[7720,7733],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`startExpression`</ph>, <ph id=\"ph2\">`endExpression`</ph>: <ph id=\"ph3\">`DateTime`</ph>, <ph id=\"ph4\">`DateTimeOffset`</ph>, or <ph id=\"ph5\">`Time`</ph>.","pos":[7746,7822],"source":"`startExpression`, `endExpression`: `DateTime`, `DateTimeOffset`, or `Time`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph> must be of the same type.","pos":[7823,7897],"source":"**Note:**  `startExpression` and `endExpression` must be of the same type."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[7911,7927],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[7940,7951],"source":"An `Int32`."},{"pos":[7956,8005],"content":"<ph id=\"ph1\">`DiffDays(`</ph> <ph id=\"ph2\">`startExpression`</ph>, <ph id=\"ph3\">`endExpression``)`</ph>","source":"`DiffDays(` `startExpression`, `endExpression``)`"},{"content":"Returns the difference, in days, between <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph>.","pos":[8006,8085],"source":"Returns the difference, in days, between `startExpression` and `endExpression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[8098,8111],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`startExpression`</ph>, <ph id=\"ph2\">`endExpression`</ph>: <ph id=\"ph3\">`DateTime`</ph> or <ph id=\"ph4\">`DateTimeOffset`</ph>.","pos":[8124,8191],"source":"`startExpression`, `endExpression`: `DateTime` or `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph> must be of the same type.","pos":[8192,8266],"source":"**Note:**  `startExpression` and `endExpression` must be of the same type."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[8280,8296],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[8309,8320],"source":"An `Int32`."},{"pos":[8325,8376],"content":"<ph id=\"ph1\">`DiffMonths(`</ph> <ph id=\"ph2\">`startExpression`</ph>, <ph id=\"ph3\">`endExpression``)`</ph>","source":"`DiffMonths(` `startExpression`, `endExpression``)`"},{"content":"Returns the difference, in months, between <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph>.","pos":[8377,8458],"source":"Returns the difference, in months, between `startExpression` and `endExpression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[8471,8484],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`startExpression`</ph>, <ph id=\"ph2\">`endExpression`</ph>: <ph id=\"ph3\">`DateTime`</ph> or <ph id=\"ph4\">`DateTimeOffset`</ph>.","pos":[8497,8564],"source":"`startExpression`, `endExpression`: `DateTime` or `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph> must be of the same type.","pos":[8565,8639],"source":"**Note:**  `startExpression` and `endExpression` must be of the same type."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[8653,8669],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[8682,8693],"source":"An `Int32`."},{"pos":[8698,8748],"content":"<ph id=\"ph1\">`DiffYears(`</ph> <ph id=\"ph2\">`startExpression`</ph>, <ph id=\"ph3\">`endExpression``)`</ph>","source":"`DiffYears(` `startExpression`, `endExpression``)`"},{"content":"Returns the difference, in years, between <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph>.","pos":[8749,8829],"source":"Returns the difference, in years, between `startExpression` and `endExpression`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[8842,8855],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`startExpression`</ph>, <ph id=\"ph2\">`endExpression`</ph>: <ph id=\"ph3\">`DateTime`</ph> or <ph id=\"ph4\">`DateTimeOffset`</ph>.","pos":[8868,8935],"source":"`startExpression`, `endExpression`: `DateTime` or `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  <ph id=\"ph1\">`startExpression`</ph> and <ph id=\"ph2\">`endExpression`</ph> must be of the same type.","pos":[8936,9010],"source":"**Note:**  `startExpression` and `endExpression` must be of the same type."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[9024,9040],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[9053,9064],"source":"An `Int32`."},{"pos":[9069,9114],"content":"<ph id=\"ph1\">`GetTotalOffsetMinutes(`</ph> <ph id=\"ph2\">`datetimeoffset`</ph> <ph id=\"ph3\">`)`</ph>","source":"`GetTotalOffsetMinutes(` `datetimeoffset` `)`"},{"content":"Returns the number of minutes that the <ph id=\"ph1\">`datetimeoffset`</ph> is offset from GMT.","pos":[9115,9190],"source":"Returns the number of minutes that the `datetimeoffset` is offset from GMT."},{"content":"This is generally between +780 and -780 (+ or - 13 hrs).","pos":[9191,9247]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  This function is supported in SQL Server 2008 only.","pos":[9248,9310],"source":"**Note:**  This function is supported in SQL Server 2008 only."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[9324,9337],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTimeOffset`</ph>.","pos":[9350,9369],"source":"A `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[9382,9398],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[9411,9422],"source":"An `Int32`."},{"pos":[9427,9452],"content":"<ph id=\"ph1\">`Hour (`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`Hour (` `expression` `)`"},{"content":"Returns the hour portion of <ph id=\"ph1\">`expression`</ph> as an <ph id=\"ph2\">`Int32`</ph> between 0 and 23.","pos":[9453,9525],"source":"Returns the hour portion of `expression` as an `Int32` between 0 and 23."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[9538,9551],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTime, Time`</ph> and <ph id=\"ph2\">`DateTimeOffset`</ph>.","pos":[9564,9604],"source":"A `DateTime, Time` and `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[9617,9628],"source":"**Example**"},{"pos":[9732,9763],"content":"<ph id=\"ph1\">`Millisecond(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`Millisecond(` `expression` `)`"},{"content":"Returns the milliseconds portion of <ph id=\"ph1\">`expression`</ph> as an <ph id=\"ph2\">`Int32`</ph> between 0 and 999.","pos":[9764,9845],"source":"Returns the milliseconds portion of `expression` as an `Int32` between 0 and 999."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[9858,9871],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTime, Time`</ph> and <ph id=\"ph2\">`DateTimeOffset`</ph>.","pos":[9884,9924],"source":"A `DateTime, Time` and `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[9937,9953],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[9966,9977],"source":"An `Int32`."},{"pos":[9982,10008],"content":"<ph id=\"ph1\">`Minute(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`Minute(` `expression` `)`"},{"content":"Returns the minute portion of <ph id=\"ph1\">`expression`</ph> as an <ph id=\"ph2\">`Int32`</ph> between 0 and 59.","pos":[10009,10083],"source":"Returns the minute portion of `expression` as an `Int32` between 0 and 59."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[10096,10109],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTime, Time`</ph> or <ph id=\"ph2\">`DateTimeOffset`</ph>.","pos":[10122,10161],"source":"A `DateTime, Time` or `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[10174,10190],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[10203,10214],"source":"An `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[10227,10238],"source":"**Example**"},{"pos":[10343,10371],"content":"<ph id=\"ph1\">`Month`</ph> <ph id=\"ph2\">`(`</ph> <ph id=\"ph3\">`expression`</ph> <ph id=\"ph4\">`)`</ph>","source":"`Month` `(` `expression` `)`"},{"content":"Returns the month portion of <ph id=\"ph1\">`expression`</ph> as an <ph id=\"ph2\">`Int32`</ph> between 1 and 12.","pos":[10372,10445],"source":"Returns the month portion of `expression` as an `Int32` between 1 and 12."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[10458,10471],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTime`</ph> or <ph id=\"ph2\">`DateTimeOffset`</ph>.","pos":[10484,10517],"source":"A `DateTime` or `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[10530,10546],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[10559,10570],"source":"An `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[10583,10594],"source":"**Example**"},{"pos":[10701,10727],"content":"<ph id=\"ph1\">`Second(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`Second(` `expression` `)`"},{"content":"Returns the seconds portion of <ph id=\"ph1\">`expression`</ph> as an <ph id=\"ph2\">`Int32`</ph> between 0 and 59.","pos":[10728,10803],"source":"Returns the seconds portion of `expression` as an `Int32` between 0 and 59."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[10816,10829],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTime, Time`</ph> and <ph id=\"ph2\">`DateTimeOffset`</ph>.","pos":[10842,10882],"source":"A `DateTime, Time` and `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[10895,10911],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[10924,10935],"source":"An `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[10948,10959],"source":"**Example**"},{"pos":[11063,11095],"content":"<ph id=\"ph1\">`TruncateTime(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`TruncateTime(` `expression` `)`"},{"content":"Returns the <ph id=\"ph1\">`expression`</ph>, with the time values truncated.","pos":[11096,11153],"source":"Returns the `expression`, with the time values truncated."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[11166,11179],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTime`</ph> or <ph id=\"ph2\">`DateTimeOffset`</ph>.","pos":[11192,11225],"source":"A `DateTime` or `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[11238,11254],"source":"**Return Value**"},{"content":"The type of <ph id=\"ph1\">`expression`</ph>.","pos":[11267,11292],"source":"The type of `expression`."},{"pos":[11297,11321],"content":"<ph id=\"ph1\">`Year(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`Year(` `expression` `)`"},{"content":"Returns the year portion of <ph id=\"ph1\">`expression`</ph> as an <ph id=\"ph2\">`Int32``YYYY`</ph>.","pos":[11322,11383],"source":"Returns the year portion of `expression` as an `Int32``YYYY`."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[11396,11409],"source":"**Arguments**"},{"content":"A <ph id=\"ph1\">`DateTime`</ph> and <ph id=\"ph2\">`DateTimeOffset`</ph>.","pos":[11422,11456],"source":"A `DateTime` and `DateTimeOffset`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[11469,11485],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[11498,11509],"source":"An `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[11522,11533],"source":"**Example**"},{"pos":[11645,11702],"content":"These functions will return <ph id=\"ph1\">`null`</ph> if given <ph id=\"ph2\">`null`</ph> input.","source":"These functions will return `null` if given `null` input."},{"content":"Equivalent functionality is available in the Microsoft SQL Client Managed Provider.","pos":[11709,11792]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient for Entity Framework Functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)</ept>.","pos":[11793,11941],"source":" For more information, see [SqlClient for Entity Framework Functions](../../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)."},{"pos":[11950,11958],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[11962,12074],"content":"<bpt id=\"p1\">[</bpt>Canonical Functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md)</ept>","source":"[Canonical Functions](../../../../../../docs/framework/data/adonet/ef/language-reference/canonical-functions.md)"}]}