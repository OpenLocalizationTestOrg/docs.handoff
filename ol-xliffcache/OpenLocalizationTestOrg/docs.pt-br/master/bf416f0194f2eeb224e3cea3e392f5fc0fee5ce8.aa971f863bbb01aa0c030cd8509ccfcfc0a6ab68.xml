{"content":"---\ntitle: \"-= Operator (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.-=\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"-= operator [Visual Basic]\"\n  - \"assignment statements, compound\"\n  - \"statements [Visual Basic], compound assignment\"\n  - \"operator -=\"\n  - \"compound assignment statements\"\nms.assetid: 5ead0c37-ae50-48f7-8435-8e341d81cae1\ncaps.latest.revision: 19\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# -= Operator (Visual Basic)\nSubtracts the value of an expression from the value of a variable or property and assigns the result to the variable or property.  \n  \n## Syntax  \n  \n```  \n  \nvariableorproperty -= expression  \n```  \n  \n## Parts  \n `variableorproperty`  \n Required. Any numeric variable or property.  \n  \n `expression`  \n Required. Any numeric expression.  \n  \n## Remarks  \n The element on the left side of the `-=` operator can be a simple scalar variable, a property, or an element of an array. The variable or property cannot be [ReadOnly](../../../visual-basic/language-reference/modifiers/readonly.md).  \n  \n The `-=` operator first subtracts the value of the expression (on the right-hand side of the operator) from the value of the variable or property (on the left-hand side of the operator). The operator then assigns the result of that operation to the variable or property.  \n  \n## Overloading  \n The [- Operator (Visual Basic)](../../../visual-basic/language-reference/operators/subtraction-operator.md) can be *overloaded*, which means that a class or structure can redefine its behavior when an operand has the type of that class or structure. Overloading the `-` operator affects the behavior of the `-=` operator. If your code uses `-=` on a class or structure that overloads `-`, be sure you understand its redefined behavior. For more information, see [Operator Procedures](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md).  \n  \n## Example  \n The following example uses the `-=` operator to subtract one `Integer` variable from another and assign the result to the latter variable.  \n  \n [!code-vb[VbVbalrOperators#11](codesnippet/VisualBasic/subtraction-assignment-operator_1.vb)]  \n  \n## See Also  \n [- Operator (Visual Basic)](../../../visual-basic/language-reference/operators/subtraction-operator.md)   \n [Assignment Operators](../../../visual-basic/language-reference/operators/assignment-operators.md)   \n [Arithmetic Operators](../../../visual-basic/language-reference/operators/arithmetic-operators.md)   \n [Operator Precedence in Visual Basic](../../../visual-basic/language-reference/operators/operator-precedence.md)   \n [Operators Listed by Functionality](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)   \n [Statements](../../../visual-basic/programming-guide/language-features/statements.md)\n","nodes":[{"pos":[12,55],"content":"-= Operator (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"-= Operator (Visual Basic) | Microsoft Docs","pos":[0,43]}]},{"pos":[742,768],"content":"-= Operator (Visual Basic)","linkify":"-= Operator (Visual Basic)","nodes":[{"content":"-= Operator (Visual Basic)","pos":[0,26]}]},{"content":"Subtracts the value of an expression from the value of a variable or property and assigns the result to the variable or property.","pos":[769,898]},{"pos":[907,913],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[975,980],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Required.","pos":[1008,1017]},{"content":"Any numeric variable or property.","pos":[1018,1051]},{"content":"Required.","pos":[1074,1083]},{"content":"Any numeric expression.","pos":[1084,1107]},{"pos":[1116,1123],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The element on the left side of the <ph id=\"ph1\">`-=`</ph> operator can be a simple scalar variable, a property, or an element of an array.","pos":[1127,1248],"source":"The element on the left side of the `-=` operator can be a simple scalar variable, a property, or an element of an array."},{"content":"The variable or property cannot be <bpt id=\"p1\">[</bpt>ReadOnly<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/readonly.md)</ept>.","pos":[1249,1359],"source":" The variable or property cannot be [ReadOnly](../../../visual-basic/language-reference/modifiers/readonly.md)."},{"content":"The <ph id=\"ph1\">`-=`</ph> operator first subtracts the value of the expression (on the right-hand side of the operator) from the value of the variable or property (on the left-hand side of the operator).","pos":[1366,1552],"source":"The `-=` operator first subtracts the value of the expression (on the right-hand side of the operator) from the value of the variable or property (on the left-hand side of the operator)."},{"content":"The operator then assigns the result of that operation to the variable or property.","pos":[1553,1636]},{"pos":[1645,1656],"content":"Overloading","linkify":"Overloading","nodes":[{"content":"Overloading","pos":[0,11]}]},{"content":"The <bpt id=\"p1\">[</bpt>- Operator (Visual Basic)<ept id=\"p1\">](../../../visual-basic/language-reference/operators/subtraction-operator.md)</ept> can be <bpt id=\"p2\">*</bpt>overloaded<ept id=\"p2\">*</ept>, which means that a class or structure can redefine its behavior when an operand has the type of that class or structure.","pos":[1660,1909],"source":"The [- Operator (Visual Basic)](../../../visual-basic/language-reference/operators/subtraction-operator.md) can be *overloaded*, which means that a class or structure can redefine its behavior when an operand has the type of that class or structure."},{"content":"Overloading the <ph id=\"ph1\">`-`</ph> operator affects the behavior of the <ph id=\"ph2\">`-=`</ph> operator.","pos":[1910,1981],"source":" Overloading the `-` operator affects the behavior of the `-=` operator."},{"content":"If your code uses <ph id=\"ph1\">`-=`</ph> on a class or structure that overloads <ph id=\"ph2\">`-`</ph>, be sure you understand its redefined behavior.","pos":[1982,2095],"source":" If your code uses `-=` on a class or structure that overloads `-`, be sure you understand its redefined behavior."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Operator Procedures<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.","pos":[2096,2237],"source":" For more information, see [Operator Procedures](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)."},{"pos":[2246,2253],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2257,2395],"content":"The following example uses the <ph id=\"ph1\">`-=`</ph> operator to subtract one <ph id=\"ph2\">`Integer`</ph> variable from another and assign the result to the latter variable.","source":"The following example uses the `-=` operator to subtract one `Integer` variable from another and assign the result to the latter variable."},{"pos":[2402,2495],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrOperators#11<ept id=\"p2\">](codesnippet/VisualBasic/subtraction-assignment-operator_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrOperators#11](codesnippet/VisualBasic/subtraction-assignment-operator_1.vb)]"},{"pos":[2504,2512],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>- Operator (Visual Basic)<ept id=\"p1\">](../../../visual-basic/language-reference/operators/subtraction-operator.md)</ept><ph id=\"ph1\"> </ph>","pos":[2516,2620],"source":"[- Operator (Visual Basic)](../../../visual-basic/language-reference/operators/subtraction-operator.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Assignment Operators<ept id=\"p1\">](../../../visual-basic/language-reference/operators/assignment-operators.md)</ept><ph id=\"ph1\"> </ph>","pos":[2623,2723],"source":" [Assignment Operators](../../../visual-basic/language-reference/operators/assignment-operators.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Arithmetic Operators<ept id=\"p1\">](../../../visual-basic/language-reference/operators/arithmetic-operators.md)</ept><ph id=\"ph1\"> </ph>","pos":[2726,2826],"source":" [Arithmetic Operators](../../../visual-basic/language-reference/operators/arithmetic-operators.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Operator Precedence in Visual Basic<ept id=\"p1\">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept><ph id=\"ph1\"> </ph>","pos":[2829,2943],"source":" [Operator Precedence in Visual Basic](../../../visual-basic/language-reference/operators/operator-precedence.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Operators Listed by Functionality<ept id=\"p1\">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id=\"ph1\"> </ph>","pos":[2946,3072],"source":" [Operators Listed by Functionality](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Statements<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/statements.md)</ept>","pos":[3075,3161],"source":" [Statements](../../../visual-basic/programming-guide/language-features/statements.md)"}]}