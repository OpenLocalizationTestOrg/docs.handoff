<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="use-the-wcf-service-moniker-without-registration.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be4798663d0b39301ec496df45a4a7a5bf9c88e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\use-the-wcf-service-moniker-without-registration.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c028490f130ec0b4e2d0721126767d64b200850d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e4a2bcf973f7f7e0725d336a727adaf55252a6e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Use the Windows Communication Foundation Service Moniker without Registration</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use the Windows Communication Foundation Service Moniker without Registration</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To connect to and communicate with a Windows Communication Foundation (WCF) service, a WCF client application must have the details of the service address, the binding configuration, and the service contract.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The WCF service moniker typically obtains the required contract through prior registration of the required attribute types, but there might be cases where this is not feasible.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In place of registration, the moniker can obtain the definition of the contract in the form of a Web Services Definition Language (WSDL) document, through the use of the <ph id="ph1">`wsdl`</ph> parameter or through Metadata Exchange, through the use of the <ph id="ph2">`mexAddress`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This enables scenarios such as the distribution of an Excel spreadsheet where some of the cell values are calculated through Web service interactions.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this scenario, it might not be feasible to register the service contract assembly on all clients that might open the document.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`wsdl`</ph> parameter or the <ph id="ph2">`mexAddress`</ph> parameter enables a self-contained solution.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Mutual authentication must be used to protect against request and response tampering or spoofing.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Specifically, it is important for clients to be assured that the Metadata Exchange endpoint that is responding is the intended trusted party.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example shows the use of the service moniker with a MEX contract.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A service with the following contract is exposed with a wsHttpBinding.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To construct a WCF client for the remote service the following example moniker string can be used.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>During the execution of the client application, the client performs a <ph id="ph1">`WS-MetadataExchange`</ph> with the provided <ph id="ph2">`mexAddress`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This might return the address, binding and contract details for a number of services.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`address`</ph>, <ph id="ph2">`contract`</ph>, <ph id="ph3">`contractNamespace`</ph>, <ph id="ph4">`binding`</ph> and <ph id="ph5">`bindingNamespace`</ph> parameters are used to identify the intended service.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Once those parameters have been matched, the moniker constructs a WCF client with the appropriate contract definition and calls can then be made using the WCF client, as with the typed contract.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the moniker is malformed or if the service is unavailable, the call to <ph id="ph1">`GetObject`</ph> returns an error saying "Invalid Syntax".</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you receive this error, make sure the moniker you are using is correct and the service is available.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Register and Configure a Service Moniker<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-register-and-configure-a-service-moniker.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>