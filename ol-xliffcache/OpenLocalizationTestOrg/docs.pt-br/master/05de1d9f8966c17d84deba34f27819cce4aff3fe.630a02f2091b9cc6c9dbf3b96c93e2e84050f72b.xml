{"content":"---\ntitle: \"Implements Clause (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.ImplementsClause\"\nhelpviewer_keywords: \n  - \"interface implementation [Visual Basic], reimplementation\"\n  - \"interface members [Visual Basic], reimplementation\"\n  - \"interface members [Visual Basic], Implements keyword\"\n  - \"interface members\"\n  - \"members [Visual Basic], reimplementation\"\n  - \"interface implementation [Visual Basic], Implements keyword\"\n  - \"interface members [Visual Basic], implementing\"\n  - \"Implements keyword [Visual Basic]\"\n  - \"Implements statement [Visual Basic], about Implements\"\n  - \"members [Visual Basic], implementing\"\n  - \"members [Visual Basic], Implements keyword\"\n  - \"reimplementation\"\nms.assetid: 5252cdf9-964d-4fc6-af0f-0449b7126b5a\n---\n# Implements Clause (Visual Basic)\nIndicates that a class or structure member is providing the implementation for a member defined in an interface.  \n  \n## Remarks  \nThe `Implements` keyword is not the same as the [Implements Statement](../../../visual-basic/language-reference/statements/implements-statement.md). You use the `Implements` statement to specify that a class or structure implements one or more interfaces, and then for each member you use the `Implements` keyword to specify which interface and which member it implements.\n\nIf a class or structure implements an interface, it must include the `Implements` statement immediately after the [Class Statement](../../../visual-basic/language-reference/statements/class-statement.md) or [Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md), and it must implement all the members defined by the interface.\n\n## Reimplementation  \nIn a derived class, you can reimplement an interface member that the base class has already implemented. This is different from overriding the base class member in the following respects:\n\n- The base class member does not need to be [Overridable](../../../visual-basic/language-reference/modifiers/overridable.md) to be reimplemented.\n- You can reimplement the member with a different name.\n\nThe `Implements` keyword can be used in the following contexts:\n- [Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)\n- [Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)\n- [Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)\n- [Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)  \n  \n## See also\n\n- [Implements Statement](../../../visual-basic/language-reference/statements/implements-statement.md)\n- [Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md)\n- [Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)\n- [Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md)\n","nodes":[{"pos":[4,761],"embed":true,"restype":"x-metadata","content":"title: \"Implements Clause (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.ImplementsClause\"\nhelpviewer_keywords: \n  - \"interface implementation [Visual Basic], reimplementation\"\n  - \"interface members [Visual Basic], reimplementation\"\n  - \"interface members [Visual Basic], Implements keyword\"\n  - \"interface members\"\n  - \"members [Visual Basic], reimplementation\"\n  - \"interface implementation [Visual Basic], Implements keyword\"\n  - \"interface members [Visual Basic], implementing\"\n  - \"Implements keyword [Visual Basic]\"\n  - \"Implements statement [Visual Basic], about Implements\"\n  - \"members [Visual Basic], implementing\"\n  - \"members [Visual Basic], Implements keyword\"\n  - \"reimplementation\"\nms.assetid: 5252cdf9-964d-4fc6-af0f-0449b7126b5a","nodes":[{"content":"Implements Clause (Visual Basic)","nodes":[{"pos":[0,32],"content":"Implements Clause (Visual Basic)","nodes":[{"content":"Implements Clause (Visual Basic)","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[768,800],"content":"Implements Clause (Visual Basic)","linkify":"Implements Clause (Visual Basic)","nodes":[{"content":"Implements Clause (Visual Basic)","pos":[0,32]}]},{"content":"Indicates that a class or structure member is providing the implementation for a member defined in an interface.","pos":[801,913]},{"pos":[922,929],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`Implements`</ph> keyword is not the same as the <bpt id=\"p1\">[</bpt>Implements Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/implements-statement.md)</ept>.","pos":[932,1080],"source":"The `Implements` keyword is not the same as the [Implements Statement](../../../visual-basic/language-reference/statements/implements-statement.md)."},{"content":"You use the <ph id=\"ph1\">`Implements`</ph> statement to specify that a class or structure implements one or more interfaces, and then for each member you use the <ph id=\"ph2\">`Implements`</ph> keyword to specify which interface and which member it implements.","pos":[1081,1304],"source":" You use the `Implements` statement to specify that a class or structure implements one or more interfaces, and then for each member you use the `Implements` keyword to specify which interface and which member it implements."},{"pos":[1306,1675],"content":"If a class or structure implements an interface, it must include the <ph id=\"ph1\">`Implements`</ph> statement immediately after the <bpt id=\"p1\">[</bpt>Class Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/class-statement.md)</ept> or <bpt id=\"p2\">[</bpt>Structure Statement<ept id=\"p2\">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept>, and it must implement all the members defined by the interface.","source":"If a class or structure implements an interface, it must include the `Implements` statement immediately after the [Class Statement](../../../visual-basic/language-reference/statements/class-statement.md) or [Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md), and it must implement all the members defined by the interface."},{"pos":[1680,1696],"content":"Reimplementation","linkify":"Reimplementation","nodes":[{"content":"Reimplementation","pos":[0,16]}]},{"content":"In a derived class, you can reimplement an interface member that the base class has already implemented.","pos":[1699,1803]},{"content":"This is different from overriding the base class member in the following respects:","pos":[1804,1886]},{"pos":[1890,2033],"content":"The base class member does not need to be <bpt id=\"p1\">[</bpt>Overridable<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/overridable.md)</ept> to be reimplemented.","source":"The base class member does not need to be [Overridable](../../../visual-basic/language-reference/modifiers/overridable.md) to be reimplemented."},{"content":"You can reimplement the member with a different name.","pos":[2036,2089]},{"pos":[2091,2154],"content":"The <ph id=\"ph1\">`Implements`</ph> keyword can be used in the following contexts:","source":"The `Implements` keyword can be used in the following contexts:"},{"pos":[2157,2246],"content":"<bpt id=\"p1\">[</bpt>Event Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>","source":"[Event Statement](../../../visual-basic/language-reference/statements/event-statement.md)"},{"pos":[2249,2344],"content":"<bpt id=\"p1\">[</bpt>Function Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/function-statement.md)</ept>","source":"[Function Statement](../../../visual-basic/language-reference/statements/function-statement.md)"},{"pos":[2347,2442],"content":"<bpt id=\"p1\">[</bpt>Property Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/property-statement.md)</ept>","source":"[Property Statement](../../../visual-basic/language-reference/statements/property-statement.md)"},{"pos":[2445,2530],"content":"<bpt id=\"p1\">[</bpt>Sub Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept>","source":"[Sub Statement](../../../visual-basic/language-reference/statements/sub-statement.md)"},{"pos":[2539,2547],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2551,2650],"content":"<bpt id=\"p1\">[</bpt>Implements Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/implements-statement.md)</ept>","source":"[Implements Statement](../../../visual-basic/language-reference/statements/implements-statement.md)"},{"pos":[2653,2750],"content":"<bpt id=\"p1\">[</bpt>Interface Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/interface-statement.md)</ept>","source":"[Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md)"},{"pos":[2753,2842],"content":"<bpt id=\"p1\">[</bpt>Class Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/class-statement.md)</ept>","source":"[Class Statement](../../../visual-basic/language-reference/statements/class-statement.md)"},{"pos":[2845,2942],"content":"<bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept>","source":"[Structure Statement](../../../visual-basic/language-reference/statements/structure-statement.md)"}]}