<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1d65ab0e04342c5727bc1a301a945dbf3b90fbb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\operator-precedence-entity-sql.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91243ec6288bbfc9b628b617d4a11e731f128e40</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32764dbc958a6ca6d51bc43611a0009fb5f7488e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Operator Precedence (Entity SQL) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Operator Precedence (Entity SQL)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When an <ph id="ph1">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> query has multiple operators, operator precedence determines the sequence in which the operations are performed.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The order of execution can significantly affect the query result.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Operators have the precedence levels shown in the following table.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An operator with a higher level is evaluated before an operator with a lower level.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Level</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Operation type</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Operator</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Primary</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Unary</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Multiplicative</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>4</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Additive</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>5</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Ordering</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>6</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Equality</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>7</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Conditional AND</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>8</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Conditional OR</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When two operators in an expression have the same operator precedence level, they are evaluated left to right, based on their position in the query.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`x+y-z`</ph> is evaluated as <ph id="ph2">`(x+y)-z`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can use parentheses to override the defined precedence of the operators in a query.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Everything within parentheses is evaluated first to yield a single result before that result can be used by any operator outside the parentheses.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`x+y*z`</ph> multiplies <ph id="ph2">`y`</ph> by <ph id="ph3">`z`</ph> and then adds <ph id="ph4">`x`</ph>, but <ph id="ph5">`(x+y)*z`</ph> adds <ph id="ph6">`x`</ph> to <ph id="ph7">`y`</ph> and then multiplies the result by <ph id="ph8">`z`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Entity SQL Overview<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>