<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2edf6bbc02f1a8f9a189584a59631cf9bcd426a9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\adonet\ef\language-reference\query-results.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83e9192b3a2c059312b52bf3d07f956bba45b224</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64392d78166af7377a5ab822bbe6592a2dd9527c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Query Results | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Query Results</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>After a <ph id="ph1">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph> query is converted to command trees and executed, the query results are usually returned as one of the following:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A collection of zero or more typed entity objects or a projection of complex types in the conceptual model.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>CLR types supported by the conceptual model.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Inline collections.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Anonymous types.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When the query has executed against the data source, the results are materialized into CLR types and returned to the client.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>All object materialization is performed by the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Any errors that result from an inability to map between the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]</ph> and the CLR will cause exceptions to be thrown during object materialization.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If the query execution returns primitive conceptual model types, the results consist of CLR types that are stand-alone and disconnected from the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, if the query returns a collection of typed entity objects, represented by <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>, those types are tracked by the object context.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>All object behavior (such as child/parent collections, change tracking, polymorphism, and so on) are as defined in the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This functionality can be used in its capacity, as defined in the <ph id="ph1">[!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Objects<ept id="p1">](../../../../../../docs/framework/data/adonet/ef/working-with-objects.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Struct types returned from queries (such as anonymous types and nullable complex types) can be of <ph id="ph1">`null`</ph> value.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> property of a returned entity can also be of <ph id="ph2">`null`</ph> value.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This can result from projecting the collection property of an entity that is of <ph id="ph1">`null`</ph> value, such as calling <ph id="ph2">&lt;xref:System.Linq.Queryable.FirstOrDefault%2A&gt;</ph> on an <ph id="ph3">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> that has no elements.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In certain situations, a query might appear to generate a materialized result during its execution, but the query will be executed on the server and the entity object will never be materialized in the CLR.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This can cause problems if you are depending on side effects of object materialization.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example contains a custom class, <ph id="ph1">`MyContact`</ph>, with a <ph id="ph2">`LastName`</ph> property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`LastName`</ph> property is set, a <ph id="ph2">`count`</ph> variable is incremented.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you execute the two following queries, the first query will increment <ph id="ph1">`count`</ph> while the second query will not.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This is because in the second query the <ph id="ph1">`LastName`</ph> property is projected from the results and the <ph id="ph2">`MyContact`</ph> class is never created, because it is not required to execute the query on the store.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Materialization Example#MaterializationSideEffects<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DP L2E Materialization Example/CS/Program.cs#materializationsideeffects)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP L2E Materialization Example#MaterializationSideEffects<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Materialization Example/VB/Module1.vb#materializationsideeffects)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DP L2E Materialization Example#MyContactClass<ept id="p2">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DP L2E Materialization Example/CS/Program.cs#mycontactclass)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>DP L2E Materialization Example#MyContactClass<ept id="p4">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Materialization Example/VB/Module1.vb#mycontactclass)</ept><ept id="p3">]</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>