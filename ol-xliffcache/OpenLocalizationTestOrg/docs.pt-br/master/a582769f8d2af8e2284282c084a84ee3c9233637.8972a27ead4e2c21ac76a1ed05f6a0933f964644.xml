{"content":"---\ntitle: \"Supported and Unsupported LINQ Methods (LINQ to Entities) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: 7f3ffa5f-f819-4730-bcdb-09b23de3b6d0\ncaps.latest.revision: 4\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Supported and Unsupported LINQ Methods (LINQ to Entities)\nThis section provides information about the Language-Integrated Query (LINQ) standard query operators that are supported or unsupported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)] queries. Many of the LINQ standard query operators have an overloaded version that accepts an integer argument. The integer argument corresponds to a zero-based index in the sequence that is being operated on, an <xref:System.Collections.Generic.IEqualityComparer%601>, or <xref:System.Collections.Generic.IComparer%601>. Unless otherwise specified, these overloaded versions of the LINQ standard query operators are not supported, and attempting to use them will throw an exception.  \n  \n## Projection and Restriction Methods  \n Most of the LINQ projection and restriction methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)] queries, with the exception of those that accept a positional argument. For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md). The following table lists the supported and unsupported projection and restriction methods.  \n  \n|Method|Support|Visual Basic function signature|C# method signature|  \n|------------|-------------|-------------------------------------|--------------------------|  \n|<xref:System.Linq.Queryable.Select%2A>|Supported|`Function Select(Of TSource, TResult) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, TResult)) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> Select<TSource, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, TResult>> selector )`|  \n|<xref:System.Linq.Queryable.Select%2A>|Not supported|`Function Select(Of TSource, TResult) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Integer, TResult)) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> Select<TSource, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, int, TResult>> selector )`|  \n|<xref:System.Linq.Queryable.SelectMany%2A>|Supported|`Function SelectMany(Of TSource, TResult) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, IEnumerable(Of TResult))) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> SelectMany<TSource, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, IEnumerable<TResult>>> selector )`|  \n|<xref:System.Linq.Queryable.SelectMany%2A>|Not supported|`Function SelectMany(Of TSource, TResult) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TResult))) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> SelectMany<TSource, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, int, IEnumerable<TResult>>> selector )`|  \n|<xref:System.Linq.Queryable.SelectMany%2A>|Supported|`Function SelectMany(Of TSource, TCollection, TResult) ( _ source As IQueryable(Of TSource), _ collectionSelector As Expression(Of Func(Of TSource, IEnumerable(Of TCollection))), _ resultSelector As Expression(Of Func(Of TSource, TCollection, TResult)) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> SelectMany\\<TSource, TCollection, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, IEnumerable<TCollection>>> collectionSelector, Expression<Func\\<TSource, TCollection, TResult>> resultSelector )`|  \n|<xref:System.Linq.Queryable.SelectMany%2A>|Not supported|`Function SelectMany(Of TSource, TCollection, TResult) ( _ source As IQueryable(Of TSource), _ collectionSelector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TCollection))), _ resultSelector As Expression(Of Func(Of TSource, TCollection, TResult)) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> SelectMany\\<TSource, TCollection, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, int, IEnumerable<TCollection>>> collectionSelector, Expression<Func\\<TSource, TCollection, TResult>> resultSelector )`|  \n|<xref:System.Linq.Queryable.Where%2A>|Supported|`Function Where(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Where<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.Where%2A>|Not supported|`Function Where(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Integer, Boolean)) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Where<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, int, bool>> predicate )`|  \n  \n## Join Methods  \n The LINQ join methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)], with the exception of those that accept an `IEqualityComparer` because the comparer cannot be translated to the data source. For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md). The following table lists the supported and unsupported join methods.  \n  \n|Method|Support|Visual Basic function signature|C# method signature|  \n|------------|-------------|-------------------------------------|--------------------------|  \n|<xref:System.Linq.Queryable.GroupJoin%2A>|Supported|`Function GroupJoin(Of TOuter, TInner, TKey, TResult) ( _ outer As IQueryable(Of TOuter), _ inner As IEnumerable(Of TInner), _ outerKeySelector As Expression(Of Func(Of TOuter, TKey)), _ innerKeySelector As Expression(Of Func(Of TInner, TKey)), _ resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> GroupJoin<TOuter, TInner, TKey, TResult>( this IQueryable<TOuter> outer, IEnumerable<TInner> inner, Expression<Func<TOuter, TKey>> outerKeySelector, Expression<Func<TInner, TKey>> innerKeySelector, Expression<Func<TOuter, IEnumerable<TInner>, TResult>> resultSelector )`|  \n|<xref:System.Linq.Queryable.GroupJoin%2A>|Not Supported|`Function GroupJoin(Of TOuter, TInner, TKey, TResult) ( _ outer As IQueryable(Of TOuter), _ inner As IEnumerable(Of TInner), _ outerKeySelector As Expression(Of Func(Of TOuter, TKey)), _ innerKeySelector As Expression(Of Func(Of TInner, TKey)), _ resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)), _ comparer As IEqualityComparer(Of TKey) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> GroupJoin\\<TOuter, TInner, TKey, TResult>( this IQueryable<TOuter> outer, IEnumerable<TInner> inner, Expression<Func\\<TOuter, TKey>> outerKeySelector, Expression<Func\\<TInner, TKey>> innerKeySelector, Expression<Func<TOuter, IEnumerable<TInner>, TResult>> resultSelector, IEqualityComparer<TKey> comparer )`|  \n|<xref:System.Linq.Queryable.Join%2A>|Supported|`Function Join(Of TOuter, TInner, TKey, TResult) ( _ outer As IQueryable(Of TOuter), _ inner As IEnumerable(Of TInner), _ outerKeySelector As Expression(Of Func(Of TOuter, TKey)), _ innerKeySelector As Expression(Of Func(Of TInner, TKey)), _ resultSelector As Expression(Of Func(Of TOuter, TInner, TResult)) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> Join<TOuter, TInner, TKey, TResult>( this IQueryable<TOuter> outer, IEnumerable<TInner> inner, Expression<Func<TOuter, TKey>> outerKeySelector, Expression<Func<TInner, TKey>> innerKeySelector, Expression<Func<TOuter, TInner, TResult>> resultSelector )`|  \n|<xref:System.Linq.Queryable.Join%2A>|Not Supported|`Function Join(Of TOuter, TInner, TKey, TResult) ( _ outer As IQueryable(Of TOuter), _ inner As IEnumerable(Of TInner), _ outerKeySelector As Expression(Of Func(Of TOuter, TKey)), _ innerKeySelector As Expression(Of Func(Of TInner, TKey)), _ resultSelector As Expression(Of Func(Of TOuter, TInner, TResult)), _ comparer As IEqualityComparer(Of TKey) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> Join\\<TOuter, TInner, TKey, TResult>( this IQueryable<TOuter> outer, IEnumerable<TInner> inner, Expression<Func\\<TOuter, TKey>> outerKeySelector, Expression<Func\\<TInner, TKey>> innerKeySelector, Expression<Func\\<TOuter, TInner, TResult>> resultSelector, IEqualityComparer<TKey> comparer )`|  \n  \n## Set Methods  \n Most of the LINQ set methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)] queries, with the exception of those that use an <xref:System.Collections.Generic.EqualityComparer%601>. For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md). The following table lists the supported and unsupported set methods.  \n  \n|Method|Support|Visual Basic function signature|C# method signature|  \n|------------|-------------|-------------------------------------|--------------------------|  \n|<xref:System.Linq.Queryable.All%2A>|Supported|`Function All(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As Boolean`|`bool All<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.Any%2A>|Supported|`Function Any(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As Boolean`|`bool Any<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.Any%2A>|Supported|`Function Any(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As Boolean`|`bool Any<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.Contains%2A>|Supported|`Function Contains(Of TSource) ( _ source As IQueryable(Of TSource), _ item As TSource _ ) As Boolean`|`bool Contains<TSource>( this IQueryable<TSource> source, TSource item )`|  \n|<xref:System.Linq.Queryable.Contains%2A>|Not supported|`Function Contains(Of TSource) ( _ source As IQueryable(Of TSource), _ item As TSource, _ comparer As IEqualityComparer(Of TSource) _ ) As Boolean`|`bool Contains<TSource>( this IQueryable<TSource> source, TSource item, IEqualityComparer<TSource> comparer )`|  \n|<xref:System.Linq.Queryable.Concat%2A>|Supported, but there is no<br /><br /> guarantee of order being preserved|`Function Concat(Of TSource) ( _ source1 As IQueryable(Of TSource), _ source2 As IEnumerable(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Concat<TSource>( this IQueryable<TSource> source1, IEnumerable<TSource> source2 )`|  \n|<xref:System.Linq.Queryable.DefaultIfEmpty%2A>|Supported|`Function DefaultIfEmpty(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> DefaultIfEmpty<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.DefaultIfEmpty%2A>|Supported|`Function DefaultIfEmpty(Of TSource) ( _ source As IQueryable(Of TSource), _ defaultValue As TSource _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> DefaultIfEmpty<TSource>( this IQueryable<TSource> source, TSource defaultValue )`|  \n|<xref:System.Linq.Queryable.Distinct%2A>|Supported|`Function Distinct(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Distinct<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.Distinct%2A>|Not supported|`Function Distinct(Of TSource) ( _ source As IQueryable(Of TSource), _ comparer As IEqualityComparer(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Distinct<TSource>( this IQueryable<TSource> source, IEqualityComparer<TSource> comparer )`|  \n|<xref:System.Linq.Queryable.Except%2A>|Supported|`Function Except(Of TSource) ( _ source1 As IQueryable(Of TSource), _ source2 As IEnumerable(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Except<TSource>( this IQueryable<TSource> source1, IEnumerable<TSource> source2 )`|  \n|<xref:System.Linq.Queryable.Except%2A>|Not supported|`Function Except(Of TSource) ( _ source1 As IQueryable(Of TSource), _ source2 As IEnumerable(Of TSource), _ comparer As IEqualityComparer(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Except<TSource>( this IQueryable<TSource> source1, IEnumerable<TSource> source2, IEqualityComparer<TSource> comparer )`|  \n|<xref:System.Linq.Queryable.Intersect%2A>|Supported|`Function Intersect(Of TSource) ( _ source1 As IQueryable(Of TSource), _ source2 As IEnumerable(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Intersect<TSource>( this IQueryable<TSource> source1, IEnumerable<TSource> source2 )`|  \n|<xref:System.Linq.Queryable.Intersect%2A>|Not supported|`Function Intersect(Of TSource) ( _ source1 As IQueryable(Of TSource), _ source2 As IEnumerable(Of TSource), _ comparer As IEqualityComparer(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Intersect<TSource>( this IQueryable<TSource> source1, IEnumerable<TSource> source2, IEqualityComparer<TSource> comparer )`|  \n|<xref:System.Linq.Queryable.Union%2A>|Supported|`Function Union(Of TSource) ( _ source1 As IQueryable(Of TSource), _ source2 As IEnumerable(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Union<TSource>( this IQueryable<TSource> source1, IEnumerable<TSource> source2 )`|  \n|<xref:System.Linq.Queryable.Union%2A>|Not supported|`Function Union(Of TSource) ( _ source1 As IQueryable(Of TSource), _ source2 As IEnumerable(Of TSource), _ comparer As IEqualityComparer(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Union<TSource>( this IQueryable<TSource> source1, IEnumerable<TSource> source2, IEqualityComparer<TSource> comparer )`|  \n  \n## Ordering Methods  \n Most of the LINQ ordering methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)], with the exception of those that accept an <xref:System.Collections.Generic.IComparer%601>, because the comparer cannot be translated to the data source. For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md). The following table lists the supported and unsupported ordering methods.  \n  \n|Method|Support|Visual Basic function signature|C# method signature|  \n|------------|-------------|-------------------------------------|--------------------------|  \n|<xref:System.Linq.Queryable.OrderBy%2A>|Supported|`Function OrderBy(Of TSource, TKey) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)) _ ) As IOrderedQueryable(Of TSource)`|`IOrderedQueryable<TSource> OrderBy<TSource, TKey>( this IQueryable<TSource> source, Expression<Func<TSource, TKey>> keySelector )`|  \n|<xref:System.Linq.Queryable.OrderBy%2A>|Not supported|`Function OrderBy(Of TSource, TKey) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ comparer As IComparer(Of TKey) _ ) As IOrderedQueryable(Of TSource)`|`IOrderedQueryable<TSource> OrderBy\\<TSource, TKey>( this IQueryable<TSource> source, Expression<Func\\<TSource, TKey>> keySelector, IComparer<TKey> comparer )`|  \n|<xref:System.Linq.Queryable.OrderByDescending%2A>|Supported|`Function OrderByDescending(Of TSource, TKey) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)) _ ) As IOrderedQueryable(Of TSource)`|`IOrderedQueryable<TSource> OrderByDescending<TSource, TKey>( this IQueryable<TSource> source, Expression<Func<TSource, TKey>> keySelector )`|  \n|<xref:System.Linq.Queryable.OrderByDescending%2A>|Not supported|`Function OrderByDescending(Of TSource, TKey) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ comparer As IComparer(Of TKey) _ ) As IOrderedQueryable(Of TSource)`|`IOrderedQueryable<TSource> OrderByDescending\\<TSource, TKey>( this IQueryable<TSource> source, Expression<Func\\<TSource, TKey>> keySelector, IComparer<TKey> comparer )`|  \n|<xref:System.Linq.Queryable.ThenBy%2A>|Supported|`Function ThenBy(Of TSource, TKey) ( _ source As IOrderedQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)) _ ) As IOrderedQueryable(Of TSource)`|`IOrderedQueryable<TSource> ThenBy<TSource, TKey>( this IOrderedQueryable<TSource> source, Expression<Func<TSource, TKey>> keySelector )`|  \n|<xref:System.Linq.Queryable.ThenBy%2A>|Not supported|`Function ThenBy(Of TSource, TKey) ( _ source As IOrderedQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ comparer As IComparer(Of TKey) _ ) As IOrderedQueryable(Of TSource)`|`IOrderedQueryable<TSource> ThenBy\\<TSource, TKey>( this IOrderedQueryable<TSource> source, Expression<Func\\<TSource, TKey>> keySelector, IComparer<TKey> comparer )`|  \n|<xref:System.Linq.Queryable.ThenByDescending%2A>|Supported|`Function ThenByDescending(Of TSource, TKey) ( _ source As IOrderedQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)) _ ) As IOrderedQueryable(Of TSource)`|`IOrderedQueryable<TSource> ThenByDescending<TSource, TKey>( this IOrderedQueryable<TSource> source, Expression<Func<TSource, TKey>> keySelector )`|  \n|<xref:System.Linq.Queryable.ThenByDescending%2A>|Not supported|`Function ThenByDescending(Of TSource, TKey) ( _ source As IOrderedQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ comparer As IComparer(Of TKey) _ ) As IOrderedQueryable(Of TSource)`|`IOrderedQueryable<TSource> ThenByDescending\\<TSource, TKey>( this IOrderedQueryable<TSource> source, Expression<Func\\<TSource, TKey>> keySelector, IComparer<TKey> comparer )`|  \n|<xref:System.Linq.Queryable.Reverse%2A>|Not supported|`Function Reverse(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Reverse<TSource>( this IQueryable<TSource> source )`|  \n  \n## Grouping Methods  \n Most of the LINQ grouping methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)], with the exception of those that accept an <xref:System.Collections.Generic.IEqualityComparer%601>, because the comparer cannot be translated to the data source. For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md). The following table lists the supported and unsupported grouping methods.  \n  \n|Method|Support|Visual Basic function signature|C# method signature|  \n|------------|-------------|-------------------------------------|--------------------------|  \n|<xref:System.Linq.Queryable.GroupBy%2A>|Supported|`Function GroupBy(Of TSource, TKey) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)) _ ) As IQueryable(Of IGrouping(Of TKey, TSource))`|`IQueryable<IGrouping<TKey, TSource>> GroupBy<TSource, TKey>( this IQueryable<TSource> source, Expression<Func<TSource, TKey>> keySelector )`|  \n|<xref:System.Linq.Queryable.GroupBy%2A>|Not supported|`Function GroupBy(Of TSource, TKey) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ comparer As IEqualityComparer(Of TKey) _ ) As IQueryable(Of IGrouping(Of TKey, TSource))`|`IQueryable<IGrouping\\<TKey, TSource>> GroupBy\\<TSource, TKey>( this IQueryable<TSource> source, Expression<Func\\<TSource, TKey>> keySelector, IEqualityComparer<TKey> comparer )`|  \n|<xref:System.Linq.Queryable.GroupBy%2A>|Supported|`Function GroupBy(Of TSource, TKey, TElement) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ elementSelector As Expression(Of Func(Of TSource, TElement)) _ ) As IQueryable(Of IGrouping(Of TKey, TElement))`|`IQueryable<IGrouping<TKey, TElement>> GroupBy<TSource, TKey, TElement>( this IQueryable<TSource> source, Expression<Func<TSource, TKey>> keySelector, Expression<Func<TSource, TElement>> elementSelector )`|  \n|<xref:System.Linq.Queryable.GroupBy%2A>|Supported|`Function GroupBy(Of TSource, TKey, TResult) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> GroupBy\\<TSource, TKey, TResult>( this IQueryable<TSource> source, Expression<Func\\<TSource, TKey>> keySelector, Expression<Func<TKey, IEnumerable<TSource>, TResult>> resultSelector )`|  \n|<xref:System.Linq.Queryable.GroupBy%2A>|Not supported|`Function GroupBy(Of TSource, TKey, TElement) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ elementSelector As Expression(Of Func(Of TSource, TElement)), _ comparer As IEqualityComparer(Of TKey) _ ) As IQueryable(Of IGrouping(Of TKey, TElement))`|`IQueryable<IGrouping\\<TKey, TElement>> GroupBy\\<TSource, TKey, TElement>( this IQueryable<TSource> source, Expression<Func\\<TSource, TKey>> keySelector, Expression<Func\\<TSource, TElement>> elementSelector, IEqualityComparer<TKey> comparer`|  \n|<xref:System.Linq.Queryable.GroupBy%2A>|Supported|`Function GroupBy(Of TSource, TKey, TElement, TResult) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ elementSelector As Expression(Of Func(Of TSource, TElement)), _ resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult)) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> GroupBy<TSource, TKey, TElement, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, TKey>> keySelector, Expression<Func<TSource, TElement>> elementSelector, Expression<Func<TKey, IEnumerable<TElement>, TResult>> resultSelector )`|  \n|<xref:System.Linq.Queryable.GroupBy%2A>|Not supported|`Function GroupBy(Of TSource, TKey, TResult) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)), _ comparer As IEqualityComparer(Of TKey) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> GroupBy\\<TSource, TKey, TResult>( this IQueryable<TSource> source, Expression<Func\\<TSource, TKey>> keySelector, Expression<Func<TKey, IEnumerable<TSource>, TResult>> resultSelector, IEqualityComparer<TKey> comparer )`|  \n|<xref:System.Linq.Queryable.GroupBy%2A>|Not supported|`Function GroupBy(Of TSource, TKey, TElement, TResult) ( _ source As IQueryable(Of TSource), _ keySelector As Expression(Of Func(Of TSource, TKey)), _ elementSelector As Expression(Of Func(Of TSource, TElement)), _ resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult)), _ comparer As IEqualityComparer(Of TKey) _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> GroupBy<TSource, TKey, TElement, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, TKey>> keySelector, Expression<Func<TSource, TElement>> elementSelector, Expression<Func<TKey, IEnumerable<TElement>, TResult>> resultSelector, IEqualityComparer<TKey> comparer )`|  \n  \n## Aggregate Methods  \n Most of the aggregate methods that accept primitive data types are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]. For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md). The following table lists the supported and unsupported aggregate methods.  \n  \n|Method|Support|Visual Basic function signature|C# method signature|  \n|------------|-------------|-------------------------------------|--------------------------|  \n|<xref:System.Linq.Queryable.Aggregate%2A>|Not supported|`Function Aggregate(Of TSource) ( _ source As IQueryable(Of TSource), _ func As Expression(Of Func(Of TSource, TSource, TSource)) _ ) As TSource`|`TSource Aggregate<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, TSource, TSource>> func )`|  \n|<xref:System.Linq.Queryable.Aggregate%2A>|Not supported|`Function Aggregate(Of TSource, TAccumulate) ( _ source As IQueryable(Of TSource), _ seed As TAccumulate, _ func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate)) _ ) As TAccumulate`|`TAccumulate Aggregate<TSource, TAccumulate>( this IQueryable<TSource> source, TAccumulate seed, Expression<Func<TAccumulate, TSource, TAccumulate>> func )`|  \n|<xref:System.Linq.Queryable.Aggregate%2A>|Not supported|`Function Aggregate(Of TSource, TAccumulate, TResult) ( _ source As IQueryable(Of TSource), _ seed As TAccumulate, _ func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate)), _ selector As Expression(Of Func(Of TAccumulate, TResult)) _ ) As TResult`|`TResult Aggregate<TSource, TAccumulate, TResult>( this IQueryable<TSource> source, TAccumulate seed, Expression<Func<TAccumulate, TSource, TAccumulate>> func, Expression<Func<TAccumulate, TResult>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Decimal) _ ) As Decimal`|`decimal Average( this IQueryable<decimal> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Double) _ ) As Double`|`double Average( this IQueryable<double> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Integer) _ ) As Double`|`double Average( this IQueryable<int> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Long) _ ) As Double`|`double Average( this IQueryable<long> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Nullable(Of Decimal)) _ ) As Nullable(Of Decimal)`|`Nullable<decimal> Average( this IQueryable<Nullable<decimal>> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Nullable(Of Double)) _ ) As Nullable(Of Double)`|`Nullable<double> Average( this IQueryable<Nullable<double>> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Nullable(Of Integer)) _ ) As Nullable(Of Double)`|`Nullable<double> Average( this IQueryable<Nullable<int>> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Nullable(Of Long)) _ ) As Nullable(Of Double)`|`Nullable<double> Average( this IQueryable<Nullable<long>> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Nullable(Of Single)) _ ) As Nullable(Of Single)`|`Nullable<float> Average( this IQueryable<Nullable<float>> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Supported|`Function Average ( _ source As IQueryable(Of Single) _ ) As Single`|`float Average( this IQueryable<float> source )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Integer)) _ ) As Double`|`double Average<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, int>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Integer))) _ ) As Nullable(Of Double)`|`Nullable<double> Average<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<int>>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Long)) _ ) As Double`|`double Average<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, long>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Long))) _ ) As Nullable(Of Double)`|`Nullable<double> Average<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<long>>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Single)) _ ) As Single`|`float Average<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, float>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Single))) _ ) As Nullable(Of Single)`|`Nullable<float> Average<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<float>>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Double)) _ ) As Double`|`double Average<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, double>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Double))) _ ) As Nullable(Of Double)`|`Nullable<double> Average<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<double>>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Decimal)) _ ) As Decimal`|`decimal Average<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, decimal>> selector )`|  \n|<xref:System.Linq.Queryable.Average%2A>|Not supported|`Function Average(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Decimal))) _ ) As Nullable(Of Decimal)`|`Nullable<decimal> Average<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<decimal>>> selector )`|  \n|<xref:System.Linq.Queryable.Count%2A>|Supported|`Function Count(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As Integer`|`int Count<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.Count%2A>|Not supported|`Function Count(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As Integer`|`int Count<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.LongCount%2A>|Supported|`Function LongCount(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As Long`|`long LongCount<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.LongCount%2A>|Not supported|`Function LongCount(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As Long`|`long LongCount<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.Max%2A>|Supported|`Function Max(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As TSource`|`TSource Max<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.Max%2A>|Not supported|`Function Max(Of TSource, TResult) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, TResult)) _ ) As TResult`|`TResult Max<TSource, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, TResult>> selector )`|  \n|<xref:System.Linq.Queryable.Min%2A>|Supported|`Function Min(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As TSource`|`TSource Min<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.Min%2A>|Not supported|`Function Min(Of TSource, TResult) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, TResult)) _ ) As TResult`|`TResult Min<TSource, TResult>( this IQueryable<TSource> source, Expression<Func<TSource, TResult>> selector )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Decimal) _ ) As Decimal`|`decimal Sum( this IQueryable<decimal> source )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Double) _ ) As Double`|`double Sum( this IQueryable<double> source`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Integer) _ ) As Integer`|`int Sum( this IQueryable<int> source )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Long) _ ) As Long`|`long Sum( this IQueryable<long> source )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Nullable(Of Decimal)) _ ) As Nullable(Of Decimal)`|`Nullable<decimal> Sum( this IQueryable<Nullable<decimal>> source )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Nullable(Of Double)) _ ) As Nullable(Of Double)`|`Function Sum ( _ source As IQueryable(Of Nullable(Of Double)) _ ) As Nullable(Of Double)Nullable<double> Sum( this IQueryable<Nullable<double>> source )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Nullable(Of Integer)) _ ) As Nullable(Of Integer)`|`Nullable<int> Sum( this IQueryable<Nullable<int>> source )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Nullable(Of Long)) _ ) As Nullable(Of Long)`|`Nullable<long> Sum( this IQueryable<Nullable<long>> source )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Nullable(Of Single)) _ ) As Nullable(Of Single)`|`Nullable<float> Sum( this IQueryable<Nullable<float>> source )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Supported|`Function Sum ( _ source As IQueryable(Of Single) _ ) As Single`|`float Sum( this IQueryable<float> source )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Integer)) _ ) As Integer`|`int Sum<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, int>> selector )`|  \n<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Integer))) _ ) As Nullable(Of Integer)`|`Nullable<int> Sum<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<int>>> selector )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Long)) _ ) As Long`|`long Sum<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, long>> selector )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Long))) _ ) As Nullable(Of Long)`|`Nullable<long> Sum<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<long>>> selector )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Single))) _ ) As Nullable(Of Single)`|`Nullable<float> Sum<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<float>>> selector )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Single)) _ ) As Single`|`float Sum<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, float>> selector )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Double)) _ ) As Double`|`double Sum<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, double>> selector )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Double))) _ ) As Nullable(Of Double)`|`Nullable<double> Sum<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<double>>> selector )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Decimal)) _ ) As Decimal`|`decimal Sum<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, decimal>> selector )`|  \n|<xref:System.Linq.Queryable.Sum%2A>|Not supported|`Function Sum(Of TSource) ( _ source As IQueryable(Of TSource), _ selector As Expression(Of Func(Of TSource, Nullable(Of Decimal))) _ ) As Nullable(Of Decimal)`|`Nullable<decimal> Sum<TSource>( this IQueryable<TSource> source, Expression<Func<TSource, Nullable<decimal>>> selector )`|  \n  \n## Type Methods  \n The LINQ standard query operators that deal with CLR type conversion and testing are supported in the [!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]. Only CLR types that map to conceptual model types are supported in LINQ to Entities. For a list of conceptual model types, see [Conceptual Model Types (CSDL)](http://msdn.microsoft.com/en-us/987b995f-e429-4569-9559-b4146744def4). The following table lists the supported and unsupported type methods.  \n  \n|Method|Support|Visual Basic function signature|C# method signature|  \n|------------|-------------|-------------------------------------|--------------------------|  \n|<xref:System.Linq.Queryable.Cast%2A>|Supported for EDM primitive types|`Function Cast(Of TResult) ( _ source As IQueryable _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> Cast<TResult>( this IQueryable source )`|  \n|<xref:System.Linq.Queryable.OfType%2A>|Supported for <xref:System.Data.Metadata.Edm.EntityType>|`Function OfType(Of TResult) ( _ source As IQueryable _ ) As IQueryable(Of TResult)`|`IQueryable<TResult> OfType<TResult>( this IQueryable source )`|  \n  \n## Paging Methods  \n A number of the LINQ paging methods are not supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)] queries. For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md). The following table lists the supported and unsupported paging methods.  \n  \n|Method|Support|Visual Basic function signature|C# method signature|  \n|------------|-------------|-------------------------------------|--------------------------|  \n|<xref:System.Linq.Queryable.ElementAt%2A>|Not supported|`Function ElementAt(Of TSource) ( _ source As IQueryable(Of TSource), _ index As Integer _ ) As TSource`|`TSource ElementAt<TSource>( this IQueryable<TSource> source, int index )`|  \n|<xref:System.Linq.Queryable.ElementAtOrDefault%2A>|Not supported|`Function ElementAtOrDefault(Of TSource) ( _ source As IQueryable(Of TSource), _ index As Integer _ ) As TSource`|`TSource ElementAtOrDefault<TSource>( this IQueryable<TSource> source, int index )`|  \n|<xref:System.Linq.Queryable.First%2A>|Supported|`Function First(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As TSource`|`TSource First<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.First%2A>|Supported|`Function First(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As TSource`|`TSource First<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.FirstOrDefault%2A>|Supported|`Function FirstOrDefault(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As TSource`|`TSource FirstOrDefault<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.FirstOrDefault%2A>|Supported|`Function FirstOrDefault(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As TSource`|`TSource FirstOrDefault<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.Last%2A>|Not supported|`Function Last(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As TSource`|`TSource Last<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.Last%2A>|Not supported|`Function Last(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As TSource`|`TSource Last<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.LastOrDefault%2A>|Not supported|`Function LastOrDefault(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As TSource`|`TSource LastOrDefault<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.LastOrDefault%2A>|Not supported|`Function LastOrDefault(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As TSource`|`TSource LastOrDefault<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.Single%2A>|Supported|`Function Single(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As TSource`|`TSource Single<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.Single%2A>|Supported|`Function Single(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As TSource`|`TSource Single<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.SingleOrDefault%2A>|Supported|`Function SingleOrDefault(Of TSource) ( _ source As IQueryable(Of TSource) _ ) As TSource`|`TSource SingleOrDefault<TSource>( this IQueryable<TSource> source )`|  \n|<xref:System.Linq.Queryable.SingleOrDefault%2A>|Supported|`Function SingleOrDefault(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As TSource`|`TSource SingleOrDefault<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.Skip%2A>|Supported|`Function Skip(Of TSource) ( _ source As IQueryable(Of TSource), _ count As Integer _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Skip<TSource>( this IQueryable<TSource> source, int count )`|  \n|<xref:System.Linq.Queryable.SkipWhile%2A>|Not supported|`Function SkipWhile(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> SkipWhile<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.SkipWhile%2A>|Not supported|`Function SkipWhile(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Integer, Boolean)) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> SkipWhile<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, int, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.Take%2A>|Supported|`Function Take(Of TSource) ( _ source As IQueryable(Of TSource), _ count As Integer _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> Take<TSource>( this IQueryable<TSource> source, int count )`|  \n|<xref:System.Linq.Queryable.TakeWhile%2A>|Not supported|`Function TakeWhile(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Boolean)) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> TakeWhile<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, bool>> predicate )`|  \n|<xref:System.Linq.Queryable.TakeWhile%2A>|Not supported|`Function TakeWhile(Of TSource) ( _ source As IQueryable(Of TSource), _ predicate As Expression(Of Func(Of TSource, Integer, Boolean)) _ ) As IQueryable(Of TSource)`|`IQueryable<TSource> TakeWhile<TSource>( this IQueryable<TSource> source, Expression<Func\\<TSource, int, bool>> predicate )`|  \n  \n## See Also  \n [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)","nodes":[{"pos":[12,86],"content":"Supported and Unsupported LINQ Methods (LINQ to Entities) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Supported and Unsupported LINQ Methods (LINQ to Entities) | Microsoft Docs","pos":[0,74]}]},{"pos":[439,496],"content":"Supported and Unsupported LINQ Methods (LINQ to Entities)","linkify":"Supported and Unsupported LINQ Methods (LINQ to Entities)","nodes":[{"content":"Supported and Unsupported LINQ Methods (LINQ to Entities)","pos":[0,57]}]},{"content":"This section provides information about the Language-Integrated Query (LINQ) standard query operators that are supported or unsupported in <ph id=\"ph1\">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph> queries.","pos":[497,718],"source":"This section provides information about the Language-Integrated Query (LINQ) standard query operators that are supported or unsupported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)] queries."},{"content":"Many of the LINQ standard query operators have an overloaded version that accepts an integer argument.","pos":[719,821]},{"content":"The integer argument corresponds to a zero-based index in the sequence that is being operated on, an <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph>, or <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>.","pos":[822,1031],"source":" The integer argument corresponds to a zero-based index in the sequence that is being operated on, an <xref:System.Collections.Generic.IEqualityComparer%601>, or <xref:System.Collections.Generic.IComparer%601>."},{"content":"Unless otherwise specified, these overloaded versions of the LINQ standard query operators are not supported, and attempting to use them will throw an exception.","pos":[1032,1193]},{"pos":[1202,1236],"content":"Projection and Restriction Methods","linkify":"Projection and Restriction Methods","nodes":[{"content":"Projection and Restriction Methods","pos":[0,34]}]},{"content":"Most of the LINQ projection and restriction methods are supported in <ph id=\"ph1\">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph> queries, with the exception of those that accept a positional argument.","pos":[1240,1454],"source":"Most of the LINQ projection and restriction methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)] queries, with the exception of those that accept a positional argument."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept>.","pos":[1455,1660],"source":" For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)."},{"content":"The following table lists the supported and unsupported projection and restriction methods.","pos":[1661,1752]},{"content":"Method","pos":[1759,1765]},{"content":"Support","pos":[1766,1773]},{"content":"Visual Basic function signature","pos":[1774,1805]},{"content":"C# method signature","pos":[1806,1825]},{"content":"Supported","pos":[1965,1974]},{"content":"Not supported","pos":[2307,2320]},{"content":"Supported","pos":[2671,2680]},{"content":"Not supported","pos":[3054,3067]},{"content":"Supported","pos":[3455,3464]},{"content":"Not supported","pos":[4033,4046]},{"content":"Supported","pos":[4624,4633]},{"content":"Not supported","pos":[4945,4958]},{"pos":[5251,5263],"content":"Join Methods","linkify":"Join Methods","nodes":[{"content":"Join Methods","pos":[0,12]}]},{"content":"The LINQ join methods are supported in <ph id=\"ph1\">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph>, with the exception of those that accept an <ph id=\"ph2\">`IEqualityComparer`</ph> because the comparer cannot be translated to the data source.","pos":[5267,5505],"source":"The LINQ join methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)], with the exception of those that accept an `IEqualityComparer` because the comparer cannot be translated to the data source."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept>.","pos":[5506,5711],"source":" For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)."},{"content":"The following table lists the supported and unsupported join methods.","pos":[5712,5781]},{"content":"Method","pos":[5788,5794]},{"content":"Support","pos":[5795,5802]},{"content":"Visual Basic function signature","pos":[5803,5834]},{"content":"C# method signature","pos":[5835,5854]},{"content":"Supported","pos":[5997,6006]},{"content":"Not Supported","pos":[6705,6718]},{"content":"Supported","pos":[7491,7500]},{"content":"Not Supported","pos":[8155,8168]},{"pos":[8871,8882],"content":"Set Methods","linkify":"Set Methods","nodes":[{"content":"Set Methods","pos":[0,11]}]},{"content":"Most of the LINQ set methods are supported in <ph id=\"ph1\">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph> queries, with the exception of those that use an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>.","pos":[8886,9110],"source":"Most of the LINQ set methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)] queries, with the exception of those that use an <xref:System.Collections.Generic.EqualityComparer%601>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept>.","pos":[9111,9316],"source":" For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)."},{"content":"The following table lists the supported and unsupported set methods.","pos":[9317,9385]},{"content":"Method","pos":[9392,9398]},{"content":"Support","pos":[9399,9406]},{"content":"Visual Basic function signature","pos":[9407,9438]},{"content":"C# method signature","pos":[9439,9458]},{"content":"Supported","pos":[9595,9604]},{"content":"Supported","pos":[9880,9889]},{"content":"Supported","pos":[10064,10073]},{"content":"Supported","pos":[10354,10363]},{"content":"Not supported","pos":[10586,10599]},{"content":"Supported, but there is no","pos":[10902,10928]},{"content":"guarantee of order being preserved","pos":[10941,10975]},{"content":"Supported","pos":[11267,11276]},{"content":"Supported","pos":[11514,11523]},{"content":"Supported","pos":[11804,11813]},{"content":"Not supported","pos":[12033,12046]},{"content":"Supported","pos":[12346,12355]},{"content":"Not supported","pos":[12639,12652]},{"content":"Supported","pos":[13021,13030]},{"content":"Not supported","pos":[13323,13336]},{"content":"Supported","pos":[13707,13716]},{"content":"Not supported","pos":[13997,14010]},{"pos":[14340,14356],"content":"Ordering Methods","linkify":"Ordering Methods","nodes":[{"content":"Ordering Methods","pos":[0,16]}]},{"content":"Most of the LINQ ordering methods are supported in <ph id=\"ph1\">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph>, with the exception of those that accept an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>, because the comparer cannot be translated to the data source.","pos":[14360,14639],"source":"Most of the LINQ ordering methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)], with the exception of those that accept an <xref:System.Collections.Generic.IComparer%601>, because the comparer cannot be translated to the data source."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept>.","pos":[14640,14845],"source":" For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)."},{"content":"The following table lists the supported and unsupported ordering methods.","pos":[14846,14919]},{"content":"Method","pos":[14926,14932]},{"content":"Support","pos":[14933,14940]},{"content":"Visual Basic function signature","pos":[14941,14972]},{"content":"C# method signature","pos":[14973,14992]},{"content":"Supported","pos":[15133,15142]},{"content":"Not supported","pos":[15486,15499]},{"content":"Supported","pos":[15915,15924]},{"content":"Not supported","pos":[16298,16311]},{"content":"Supported","pos":[16736,16745]},{"content":"Not supported","pos":[17100,17113]},{"content":"Supported","pos":[17540,17549]},{"content":"Not supported","pos":[17934,17947]},{"content":"Not supported","pos":[18385,18398]},{"pos":[18580,18596],"content":"Grouping Methods","linkify":"Grouping Methods","nodes":[{"content":"Grouping Methods","pos":[0,16]}]},{"content":"Most of the LINQ grouping methods are supported in <ph id=\"ph1\">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph>, with the exception of those that accept an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph>, because the comparer cannot be translated to the data source.","pos":[18600,18887],"source":"Most of the LINQ grouping methods are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)], with the exception of those that accept an <xref:System.Collections.Generic.IEqualityComparer%601>, because the comparer cannot be translated to the data source."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept>.","pos":[18888,19093],"source":" For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)."},{"content":"The following table lists the supported and unsupported grouping methods.","pos":[19094,19167]},{"content":"Method","pos":[19174,19180]},{"content":"Support","pos":[19181,19188]},{"content":"Visual Basic function signature","pos":[19189,19220]},{"content":"C# method signature","pos":[19221,19240]},{"content":"Supported","pos":[19381,19390]},{"content":"Not supported","pos":[19757,19770]},{"content":"Supported","pos":[20216,20225]},{"content":"Supported","pos":[20731,20740]},{"content":"Not supported","pos":[21244,21257]},{"content":"Supported","pos":[21841,21850]},{"content":"Not supported","pos":[22491,22504]},{"content":"Not supported","pos":[23084,23097]},{"pos":[23779,23796],"content":"Aggregate Methods","linkify":"Aggregate Methods","nodes":[{"content":"Aggregate Methods","pos":[0,17]}]},{"content":"Most of the aggregate methods that accept primitive data types are supported in <ph id=\"ph1\">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph>.","pos":[23800,23954],"source":"Most of the aggregate methods that accept primitive data types are supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept>.","pos":[23955,24160],"source":" For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)."},{"content":"The following table lists the supported and unsupported aggregate methods.","pos":[24161,24235]},{"content":"Method","pos":[24242,24248]},{"content":"Support","pos":[24249,24256]},{"content":"Visual Basic function signature","pos":[24257,24288]},{"content":"C# method signature","pos":[24289,24308]},{"content":"Not supported","pos":[24451,24464]},{"content":"Not supported","pos":[24772,24785]},{"content":"Not supported","pos":[25183,25196]},{"content":"Supported","pos":[25711,25720]},{"content":"Supported","pos":[25889,25898]},{"content":"Supported","pos":[26063,26072]},{"content":"Supported","pos":[26235,26244]},{"content":"Supported","pos":[26405,26414]},{"content":"Supported","pos":[26629,26638]},{"content":"Supported","pos":[26849,26858]},{"content":"Supported","pos":[27067,27076]},{"content":"Supported","pos":[27283,27292]},{"content":"Supported","pos":[27501,27510]},{"content":"Not supported","pos":[27673,27686]},{"content":"Not supported","pos":[27972,27985]},{"content":"Not supported","pos":[28316,28329]},{"content":"Not supported","pos":[28613,28626]},{"content":"Not supported","pos":[28955,28968]},{"content":"Not supported","pos":[29254,29267]},{"content":"Not supported","pos":[29598,29611]},{"content":"Not supported","pos":[29899,29912]},{"content":"Not supported","pos":[30245,30258]},{"content":"Not supported","pos":[30550,30563]},{"content":"Supported","pos":[30898,30907]},{"content":"Not supported","pos":[31087,31100]},{"content":"Supported","pos":[31385,31394]},{"content":"Not supported","pos":[31584,31597]},{"content":"Supported","pos":[31882,31891]},{"content":"Not supported","pos":[32069,32082]},{"content":"Supported","pos":[32379,32388]},{"content":"Not supported","pos":[32566,32579]},{"content":"Supported","pos":[32876,32885]},{"content":"Supported","pos":[33042,33051]},{"content":"Supported","pos":[33202,33211]},{"content":"Supported","pos":[33360,33369]},{"content":"Supported","pos":[33514,33523]},{"content":"Supported","pos":[33726,33735]},{"content":"Supported","pos":[34022,34031]},{"content":"Supported","pos":[34226,34235]},{"content":"Supported","pos":[34426,34435]},{"content":"Supported","pos":[34632,34641]},{"content":"Not supported","pos":[34792,34805]},{"content":"Not supported","pos":[35076,35089]},{"content":"Not supported","pos":[35406,35419]},{"content":"Not supported","pos":[35687,35700]},{"content":"Not supported","pos":[36013,36026]},{"content":"Not supported","pos":[36345,36358]},{"content":"Not supported","pos":[36632,36645]},{"content":"Not supported","pos":[36921,36934]},{"content":"Not supported","pos":[37255,37268]},{"content":"Not supported","pos":[37548,37561]},{"pos":[37855,37867],"content":"Type Methods","linkify":"Type Methods","nodes":[{"content":"Type Methods","pos":[0,12]}]},{"content":"The LINQ standard query operators that deal with CLR type conversion and testing are supported in the <ph id=\"ph1\">[!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]</ph>.","pos":[37871,38039],"source":"The LINQ standard query operators that deal with CLR type conversion and testing are supported in the [!INCLUDE[adonet_ef](../../../../../../includes/adonet-ef-md.md)]."},{"content":"Only CLR types that map to conceptual model types are supported in LINQ to Entities.","pos":[38040,38124]},{"content":"For a list of conceptual model types, see <bpt id=\"p1\">[</bpt>Conceptual Model Types (CSDL)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/987b995f-e429-4569-9559-b4146744def4)</ept>.","pos":[38125,38269],"source":" For a list of conceptual model types, see [Conceptual Model Types (CSDL)](http://msdn.microsoft.com/en-us/987b995f-e429-4569-9559-b4146744def4)."},{"content":"The following table lists the supported and unsupported type methods.","pos":[38270,38339]},{"content":"Method","pos":[38346,38352]},{"content":"Support","pos":[38353,38360]},{"content":"Visual Basic function signature","pos":[38361,38392]},{"content":"C# method signature","pos":[38393,38412]},{"content":"Supported for EDM primitive types","pos":[38550,38583]},{"content":"Supported for <ph id=\"ph1\">&lt;xref:System.Data.Metadata.Edm.EntityType&gt;</ph>","pos":[38772,38828],"source":"Supported for <xref:System.Data.Metadata.Edm.EntityType>"},{"pos":[38987,39001],"content":"Paging Methods","linkify":"Paging Methods","nodes":[{"content":"Paging Methods","pos":[0,14]}]},{"content":"A number of the LINQ paging methods are not supported in <ph id=\"ph1\">[!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)]</ph> queries.","pos":[39005,39144],"source":"A number of the LINQ paging methods are not supported in [!INCLUDE[linq_entities](../../../../../../includes/linq-entities-md.md)] queries."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept>.","pos":[39145,39350],"source":" For more information, see [Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)."},{"content":"The following table lists the supported and unsupported paging methods.","pos":[39351,39422]},{"content":"Method","pos":[39429,39435]},{"content":"Support","pos":[39436,39443]},{"content":"Visual Basic function signature","pos":[39444,39475]},{"content":"C# method signature","pos":[39476,39495]},{"content":"Not supported","pos":[39638,39651]},{"content":"Not supported","pos":[39887,39900]},{"content":"Supported","pos":[40141,40150]},{"content":"Supported","pos":[40334,40343]},{"content":"Supported","pos":[40637,40646]},{"content":"Supported","pos":[40857,40866]},{"content":"Not supported","pos":[41168,41181]},{"content":"Not supported","pos":[41362,41375]},{"content":"Not supported","pos":[41666,41679]},{"content":"Not supported","pos":[41887,41900]},{"content":"Supported","pos":[42202,42211]},{"content":"Supported","pos":[42398,42407]},{"content":"Supported","pos":[42704,42713]},{"content":"Supported","pos":[42927,42936]},{"content":"Supported","pos":[43240,43249]},{"content":"Not supported","pos":[43493,43506]},{"content":"Not supported","pos":[43830,43843]},{"content":"Supported","pos":[44176,44185]},{"content":"Not supported","pos":[44429,44442]},{"content":"Not supported","pos":[44766,44779]},{"pos":[45080,45088],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[45092,45270],"content":"<bpt id=\"p1\">[</bpt>Standard Query Operators in LINQ to Entities Queries<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)</ept>","source":"[Standard Query Operators in LINQ to Entities Queries](../../../../../../docs/framework/data/adonet/ef/language-reference/standard-query-operators-in-linq-to-entities-queries.md)"}]}