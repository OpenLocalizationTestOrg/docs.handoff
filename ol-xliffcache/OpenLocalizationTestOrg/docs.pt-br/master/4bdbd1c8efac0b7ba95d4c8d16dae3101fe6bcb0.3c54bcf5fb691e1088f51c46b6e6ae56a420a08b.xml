{"content":"---\ntitle: \"do - C# Reference\"\nms.custom: seodec18\n\nms.date: 05/28/2018\nf1_keywords: \n  - \"do_CSharpKeyword\"\n  - \"do\"\nhelpviewer_keywords: \n  - \"do keyword [C#]\"\nms.assetid: 50725f79-9ba6-4898-aa78-6e331568a1bb\n---\n# do (C# Reference)\n\nThe `do` statement executes a statement or a block of statements while a specified Boolean expression evaluates to `true`. Because that expression is evaluated after each execution of the loop, a `do-while` loop executes one or more times. This differs from the [while](while.md) loop, which executes zero or more times.\n\nAt any point within the `do` statement block, you can break out of the loop by using the [break](break.md) statement.\n\nYou can step directly to the evaluation of the `while` expression by using the [continue](continue.md) statement. If the expression evaluates to `true`, execution continues at the first statement in the loop. Otherwise, execution continues at the first statement after the loop.\n\nYou also can exit a `do-while` loop by the [goto](goto.md), [return](return.md), or [throw](throw.md) statements.\n\n## Example\n\nThe following example shows the usage of the `do` statement. Select **Run** to run the example code. After that you can modify the code and run it again.\n\n[!code-csharp-interactive[do loop example](~/samples/snippets/csharp/keywords/IterationKeywordsExamples.cs#4)]\n\n## C# language specification\n\nFor more information, see [The do statement](~/_csharplang/spec/statements.md#the-do-statement) section of the [C# language specification](../language-specification/index.md).\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Iteration Statements](iteration-statements.md)\n- [while statement](while.md)\n","nodes":[{"pos":[4,210],"embed":true,"restype":"x-metadata","content":"title: \"do - C# Reference\"\nms.custom: seodec18\n\nms.date: 05/28/2018\nf1_keywords: \n  - \"do_CSharpKeyword\"\n  - \"do\"\nhelpviewer_keywords: \n  - \"do keyword [C#]\"\nms.assetid: 50725f79-9ba6-4898-aa78-6e331568a1bb","nodes":[{"content":"do - C# Reference","nodes":[{"pos":[0,17],"content":"do - C# Reference","nodes":[{"content":"do - C# Reference","pos":[0,17]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[217,234],"content":"do (C# Reference)","linkify":"do (C# Reference)","nodes":[{"content":"do (C# Reference)","pos":[0,17]}]},{"content":"The <ph id=\"ph1\">`do`</ph> statement executes a statement or a block of statements while a specified Boolean expression evaluates to <ph id=\"ph2\">`true`</ph>.","pos":[236,358],"source":"The `do` statement executes a statement or a block of statements while a specified Boolean expression evaluates to `true`."},{"content":"Because that expression is evaluated after each execution of the loop, a <ph id=\"ph1\">`do-while`</ph> loop executes one or more times.","pos":[359,475],"source":" Because that expression is evaluated after each execution of the loop, a `do-while` loop executes one or more times."},{"content":"This differs from the <bpt id=\"p1\">[</bpt>while<ept id=\"p1\">](while.md)</ept> loop, which executes zero or more times.","pos":[476,556],"source":" This differs from the [while](while.md) loop, which executes zero or more times."},{"pos":[558,675],"content":"At any point within the <ph id=\"ph1\">`do`</ph> statement block, you can break out of the loop by using the <bpt id=\"p1\">[</bpt>break<ept id=\"p1\">](break.md)</ept> statement.","source":"At any point within the `do` statement block, you can break out of the loop by using the [break](break.md) statement."},{"content":"You can step directly to the evaluation of the <ph id=\"ph1\">`while`</ph> expression by using the <bpt id=\"p1\">[</bpt>continue<ept id=\"p1\">](continue.md)</ept> statement.","pos":[677,790],"source":"You can step directly to the evaluation of the `while` expression by using the [continue](continue.md) statement."},{"content":"If the expression evaluates to <ph id=\"ph1\">`true`</ph>, execution continues at the first statement in the loop.","pos":[791,885],"source":" If the expression evaluates to `true`, execution continues at the first statement in the loop."},{"content":"Otherwise, execution continues at the first statement after the loop.","pos":[886,955]},{"pos":[957,1070],"content":"You also can exit a <ph id=\"ph1\">`do-while`</ph> loop by the <bpt id=\"p1\">[</bpt>goto<ept id=\"p1\">](goto.md)</ept>, <bpt id=\"p2\">[</bpt>return<ept id=\"p2\">](return.md)</ept>, or <bpt id=\"p3\">[</bpt>throw<ept id=\"p3\">](throw.md)</ept> statements.","source":"You also can exit a `do-while` loop by the [goto](goto.md), [return](return.md), or [throw](throw.md) statements."},{"pos":[1075,1082],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the usage of the <ph id=\"ph1\">`do`</ph> statement.","pos":[1084,1144],"source":"The following example shows the usage of the `do` statement."},{"content":"Select <bpt id=\"p1\">**</bpt>Run<ept id=\"p1\">**</ept> to run the example code.","pos":[1145,1184],"source":" Select **Run** to run the example code."},{"content":"After that you can modify the code and run it again.","pos":[1185,1237]},{"pos":[1354,1379],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[1381,1556],"content":"For more information, see <bpt id=\"p1\">[</bpt>The do statement<ept id=\"p1\">](~/_csharplang/spec/statements.md#the-do-statement)</ept> section of the <bpt id=\"p2\">[</bpt>C# language specification<ept id=\"p2\">](../language-specification/index.md)</ept>.","source":"For more information, see [The do statement](~/_csharplang/spec/statements.md#the-do-statement) section of the [C# language specification](../language-specification/index.md)."},{"pos":[1561,1569],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1573,1600],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1603,1659],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1662,1685],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[1688,1735],"content":"<bpt id=\"p1\">[</bpt>Iteration Statements<ept id=\"p1\">](iteration-statements.md)</ept>","source":"[Iteration Statements](iteration-statements.md)"},{"pos":[1738,1765],"content":"<bpt id=\"p1\">[</bpt>while statement<ept id=\"p1\">](while.md)</ept>","source":"[while statement](while.md)"}]}