{"content":"---\ntitle: \"static modifier - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"static\"\n  - \"static_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"static keyword [C#]\"\nms.assetid: 5509e215-2183-4da3-bab4-6b7e607a4fdf\n---\n# static (C# Reference)\n\nUse the `static` modifier to declare a static member, which belongs to the type itself rather than to a specific object. The `static` modifier can be used with classes, fields, methods, properties, operators, events, and constructors, but it cannot be used with indexers, finalizers, or types other than classes. For more information, see [Static Classes and Static Class Members](../../programming-guide/classes-and-structs/static-classes-and-static-class-members.md).\n\n## Example\n\nThe following class is declared as `static` and contains only `static` methods:\n\n[!code-csharp[csrefKeywordsModifiers#18](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsModifiers/CS/csrefKeywordsModifiers.cs#18)]\n\nA constant or type declaration is implicitly a static member.\n\nA static member cannot be referenced through an instance. Instead, it is referenced through the type name. For example, consider the following class:\n\n[!code-csharp[csrefKeywordsModifiers#19](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsModifiers/CS/csrefKeywordsModifiers.cs#19)]\n\nTo refer to the static member `x`, use the fully qualified name, `MyBaseC.MyStruct.x`, unless the member is accessible from the same scope:\n\n```csharp\nConsole.WriteLine(MyBaseC.MyStruct.x);\n```\n\nWhile an instance of a class contains a separate copy of all instance fields of the class, there is only one copy of each static field.\n\nIt is not possible to use [this](this.md) to reference static methods or property accessors.\n\nIf the `static` keyword is applied to a class, all the members of the class must be static.\n\nClasses and static classes may have static constructors. Static constructors are called at some point between when the program starts and the class is instantiated.\n\n> [!NOTE]\n> The `static` keyword has more limited uses than in C++. To compare with the C++ keyword, see [Storage classes (C++)](/cpp/cpp/storage-classes-cpp#static).\n\nTo demonstrate static members, consider a class that represents a company employee. Assume that the class contains a method to count employees and a field to store the number of employees. Both the method and the field do not belong to any instance employee. Instead they belong to the company class. Therefore, they should be declared as static members of the class.\n\n## Example\n\nThis example reads the name and ID of a new employee, increments the employee counter by one, and displays the information for the new employee and the new number of employees. For simplicity, this program reads the current number of employees from the keyboard. In a real application, this information should be read from a file.\n\n[!code-csharp[csrefKeywordsModifiers#20](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsModifiers/CS/csrefKeywordsModifiers.cs#20)]  \n\n## Example\n\nThis example shows that although you can initialize a static field by using another static field not yet declared, the results will be undefined until you explicitly assign a value to the static field.\n\n[!code-csharp[csrefKeywordsModifiers#21](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefKeywordsModifiers/CS/csrefKeywordsModifiers.cs#21)]  \n\n## C# language specification\n\n[!INCLUDE[CSharplangspec](~/includes/csharplangspec-md.md)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# Keywords](index.md)\n- [Modifiers](modifiers.md)\n- [Static Classes and Static Class Members](../../programming-guide/classes-and-structs/static-classes-and-static-class-members.md)","nodes":[{"pos":[4,235],"embed":true,"restype":"x-metadata","content":"title: \"static modifier - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"static\"\n  - \"static_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"static keyword [C#]\"\nms.assetid: 5509e215-2183-4da3-bab4-6b7e607a4fdf","nodes":[{"content":"static modifier - C# Reference","nodes":[{"pos":[0,30],"content":"static modifier - C# Reference","nodes":[{"content":"static modifier - C# Reference","pos":[0,30]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[242,263],"content":"static (C# Reference)","linkify":"static (C# Reference)","nodes":[{"content":"static (C# Reference)","pos":[0,21]}]},{"content":"Use the <ph id=\"ph1\">`static`</ph> modifier to declare a static member, which belongs to the type itself rather than to a specific object.","pos":[265,385],"source":"Use the `static` modifier to declare a static member, which belongs to the type itself rather than to a specific object."},{"content":"The <ph id=\"ph1\">`static`</ph> modifier can be used with classes, fields, methods, properties, operators, events, and constructors, but it cannot be used with indexers, finalizers, or types other than classes.","pos":[386,577],"source":" The `static` modifier can be used with classes, fields, methods, properties, operators, events, and constructors, but it cannot be used with indexers, finalizers, or types other than classes."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Static Classes and Static Class Members<ept id=\"p1\">](../../programming-guide/classes-and-structs/static-classes-and-static-class-members.md)</ept>.","pos":[578,734],"source":" For more information, see [Static Classes and Static Class Members](../../programming-guide/classes-and-structs/static-classes-and-static-class-members.md)."},{"pos":[739,746],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[748,827],"content":"The following class is declared as <ph id=\"ph1\">`static`</ph> and contains only <ph id=\"ph2\">`static`</ph> methods:","source":"The following class is declared as `static` and contains only `static` methods:"},{"content":"A constant or type declaration is implicitly a static member.","pos":[975,1036]},{"content":"A static member cannot be referenced through an instance.","pos":[1038,1095]},{"content":"Instead, it is referenced through the type name.","pos":[1096,1144]},{"content":"For example, consider the following class:","pos":[1145,1187]},{"pos":[1335,1474],"content":"To refer to the static member <ph id=\"ph1\">`x`</ph>, use the fully qualified name, <ph id=\"ph2\">`MyBaseC.MyStruct.x`</ph>, unless the member is accessible from the same scope:","source":"To refer to the static member `x`, use the fully qualified name, `MyBaseC.MyStruct.x`, unless the member is accessible from the same scope:"},{"content":"While an instance of a class contains a separate copy of all instance fields of the class, there is only one copy of each static field.","pos":[1530,1665]},{"pos":[1667,1759],"content":"It is not possible to use <bpt id=\"p1\">[</bpt>this<ept id=\"p1\">](this.md)</ept> to reference static methods or property accessors.","source":"It is not possible to use [this](this.md) to reference static methods or property accessors."},{"pos":[1761,1852],"content":"If the <ph id=\"ph1\">`static`</ph> keyword is applied to a class, all the members of the class must be static.","source":"If the `static` keyword is applied to a class, all the members of the class must be static."},{"content":"Classes and static classes may have static constructors.","pos":[1854,1910]},{"content":"Static constructors are called at some point between when the program starts and the class is instantiated.","pos":[1911,2018]},{"pos":[2022,2186],"content":"[!NOTE]\nThe `static` keyword has more limited uses than in C++. To compare with the C++ keyword, see [Storage classes (C++)](/cpp/cpp/storage-classes-cpp#static).","leadings":["","> "],"nodes":[{"content":"The `static` keyword has more limited uses than in C++. To compare with the C++ keyword, see [Storage classes (C++)](/cpp/cpp/storage-classes-cpp#static).","pos":[8,162],"nodes":[{"content":"The <ph id=\"ph1\">`static`</ph> keyword has more limited uses than in C++.","pos":[0,55],"source":"The `static` keyword has more limited uses than in C++."},{"content":"To compare with the C++ keyword, see <bpt id=\"p1\">[</bpt>Storage classes (C++)<ept id=\"p1\">](/cpp/cpp/storage-classes-cpp#static)</ept>.","pos":[56,154],"source":" To compare with the C++ keyword, see [Storage classes (C++)](/cpp/cpp/storage-classes-cpp#static)."}]}]},{"content":"To demonstrate static members, consider a class that represents a company employee.","pos":[2188,2271]},{"content":"Assume that the class contains a method to count employees and a field to store the number of employees.","pos":[2272,2376]},{"content":"Both the method and the field do not belong to any instance employee.","pos":[2377,2446]},{"content":"Instead they belong to the company class.","pos":[2447,2488]},{"content":"Therefore, they should be declared as static members of the class.","pos":[2489,2555]},{"pos":[2560,2567],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example reads the name and ID of a new employee, increments the employee counter by one, and displays the information for the new employee and the new number of employees.","pos":[2569,2745]},{"content":"For simplicity, this program reads the current number of employees from the keyboard.","pos":[2746,2831]},{"content":"In a real application, this information should be read from a file.","pos":[2832,2899]},{"pos":[3052,3059],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example shows that although you can initialize a static field by using another static field not yet declared, the results will be undefined until you explicitly assign a value to the static field.","pos":[3061,3262]},{"pos":[3415,3440],"content":"C# language specification","linkify":"C# language specification","nodes":[{"content":"C# language specification","pos":[0,25]}]},{"pos":[3506,3514],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3518,3545],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[3548,3604],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[3607,3630],"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](index.md)</ept>","source":"[C# Keywords](index.md)"},{"pos":[3633,3658],"content":"<bpt id=\"p1\">[</bpt>Modifiers<ept id=\"p1\">](modifiers.md)</ept>","source":"[Modifiers](modifiers.md)"},{"pos":[3661,3790],"content":"<bpt id=\"p1\">[</bpt>Static Classes and Static Class Members<ept id=\"p1\">](../../programming-guide/classes-and-structs/static-classes-and-static-class-members.md)</ept>","source":"[Static Classes and Static Class Members](../../programming-guide/classes-and-structs/static-classes-and-static-class-members.md)"}]}