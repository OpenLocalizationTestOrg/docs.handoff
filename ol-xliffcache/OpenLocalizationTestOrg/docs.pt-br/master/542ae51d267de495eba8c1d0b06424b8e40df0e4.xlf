<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">542ae51d267de495eba8c1d0b06424b8e40df0e4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\how-to-host-and-run-a-basic-wcf-service.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7317a65e2549bb260e54d08c6f5e6302478c71ce</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c74693b96cca33a175e0b5364b8d8febef11ed7b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Host and Run a Basic Windows Communication Foundation Service | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Host and Run a Basic Windows Communication Foundation Service</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This is the third of six tasks required to create a <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For an overview of all six of the tasks, see the <bpt id="p1">[</bpt>Getting Started Tutorial<ept id="p1">](../../../docs/framework/wcf/getting-started-tutorial.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic describes how to host a <ph id="ph1">[!INCLUDE[indigo1](../../../includes/indigo1-md.md)]</ph> service in a console application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This procedure consists of the following steps:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create a console application project to host the service.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Create a service host for the service.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Enable metadata exchange.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Open the service host.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A complete listing of the code written in this task is provided in the example following the procedure.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To create a new console application to host the service</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create a new Console Application project by right-clicking on the Getting Started solution, selecting, <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Project<ept id="p1">**</ept> dialog on the left hand side of the dialog select <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept> under <bpt id="p3">**</bpt>C#<ept id="p3">**</ept> or <bpt id="p4">**</bpt>VB<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the center section of the dialog select <bpt id="p1">**</bpt>Console Application<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Name the project GettingStartedHost.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Set the target framework of the GettingStartedHost project to .NET Framework 4.5 by right clicking on <bpt id="p1">**</bpt>GettingStartedHost<ept id="p1">**</ept> in the Solution Explorer and selecting <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the dropdown box labeled <bpt id="p1">**</bpt>Target Framework<ept id="p1">**</ept> select <bpt id="p2">**</bpt>.NET Framework 4.5<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Setting the target framework for a VB project is a little different, in the GettingStartedHost project properties dialog, click the <bpt id="p1">**</bpt>Compile<ept id="p1">**</ept> tab on the left-hand side of the screen, and then click the <bpt id="p2">**</bpt>Advanced Compile Options<ept id="p2">**</ept> button at the lower left-hand corner of the dialog.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Then select <bpt id="p1">**</bpt>.NET Framework 4.5<ept id="p1">**</ept> in the dropdown box labeled <bpt id="p2">**</bpt>Target Framework<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Setting the target framework will cause <ph id="ph1">[!INCLUDE[vs_current_long](../../../includes/vs-current-long-md.md)]</ph> to reload the solution, press <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> when prompted.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Add a reference to the GettingStartedLib project to the GettingStartedHost project by right clicking on the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> folder under the GettingStartedHost project in the solution explorer and select <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> dialog, select <bpt id="p2">**</bpt>Solution<ept id="p2">**</ept> on the left-hand side of the dialog and select GettingStartedLib in the center section of the dialog and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This makes the types defined in GettingStartedLib available to the GettingStartedHost project.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add a reference to System.ServiceModel to the GettingStartedHost project by right-clicking the <bpt id="p1">**</bpt>Reference<ept id="p1">**</ept> folder under the GettingStartedHost project in Solution Explorer and select <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> Reference.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> dialog select <bpt id="p2">**</bpt>Framework<ept id="p2">**</ept> on the left-hand side of the dialog.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the Search Assemblies textbox, type in <ph id="ph1">`System.ServiceModel`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the center section of the dialog select <bpt id="p1">**</bpt>System.ServiceModel<ept id="p1">**</ept>, click the <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> button, and click the <bpt id="p3">**</bpt>Close<ept id="p3">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Save the solution by clicking the Save All button below the main menu.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To host the service</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Open the Program.cs or Module.vb file and enter the following code:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Step 1 - Creates an instance of the Uri class to hold the base address of the service.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Services are identified by a URL which contains a base address and an optional URI.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The base address is formatted as follows:[transport]://[machine-name or domain][:optional port #]/[optional URI segment]The base address for the calculator service uses the HTTP transport, localhost, port 8000, and the URI segment "GettingStarted"</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Step 2 – Creates an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class to host the service.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The constructor takes two parameters, the type of the class that implements the service contract, and the base address of the service.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Step 3 – Creates a <ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.ServiceEndpoint&gt;--&gt;</ph> <ph id="ph2">` System.ServiceModel.ServiceEndpoint`</ph> instance.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A service endpoint is composed of an address, a binding, and a service contract.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;!--zz &lt;xref:System.ServiceModel.ServiceEndpoint&gt;--&gt;</ph> <ph id="ph2">` System.ServiceModel.ServiceEndpoint`</ph>  constructor therefore takes the service contract interface type, a binding, and an address.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The service contract is <ph id="ph1">`ICalculator`</ph>, which you defined and implement in the service type.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The binding used in this sample is <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> which is a built-in binding that is used for connecting to endpoints that conform to the WS-* specifications.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about WCF bindings, see <bpt id="p1">[</bpt>WCF Bindings Overview<ept id="p1">](../../../docs/framework/wcf/bindings-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The address is appended to the base address to identify the endpoint.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The address specified in this code is "Calculator" so the fully qualified address for the endpoint is <ph id="ph1">`"http://localhost:8000/GettingStartedService/Calculator"`</ph> Adding a service endpoint is optional when using .NET Framework 4.0 or later.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In these versions, if no endpoints are added in code or configuration, WCF adds one default endpoint for each combination of base address and contract implemented by the service.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about default endpoints see <bpt id="p1">[</bpt>Specifying an Endpoint Address<ept id="p1">](../../../docs/framework/wcf/specifying-an-endpoint-address.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> default endpoints, bindings, and behaviors, see <bpt id="p1">[</bpt>Simplified Configuration<ept id="p1">](../../../docs/framework/wcf/simplified-configuration.md)</ept> and <bpt id="p2">[</bpt>Simplified Configuration for WCF Services<ept id="p2">](../../../docs/framework/wcf/samples/simplified-configuration-for-wcf-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Adding a service endpoint is optional when using .NET Framework 4 or later.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In these versions, if no endpoints are added in code or configuration, WCF adds one default endpoint for each combination of base address and contract implemented by the service.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information about default endpoints see <bpt id="p1">[</bpt>Specifying an Endpoint Address<ept id="p1">](../../../docs/framework/wcf/specifying-an-endpoint-address.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> default endpoints, bindings, and behaviors, see <bpt id="p1">[</bpt>Simplified Configuration<ept id="p1">](../../../docs/framework/wcf/simplified-configuration.md)</ept> and <bpt id="p2">[</bpt>Simplified Configuration for WCF Services<ept id="p2">](../../../docs/framework/wcf/samples/simplified-configuration-for-wcf-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Step 4 – Enable metadata exchange.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Clients will use metadata exchange to generate proxies that will be used to call the service operations.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To enable metadata exchange create a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior&gt;</ph> instance, set it’s <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A&gt;</ph> property to <ph id="ph3">`true`</ph>, and add the behavior to the <ph id="ph4">&lt;!--zz &lt;xref:System.ServiceModel.ServiceHost.Behaviors%2A&gt;  --&gt;</ph><ph id="ph5">`System.ServiceModel.ServiceHost.Behaviors%2A`</ph> collection of the <ph id="ph6">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Step 5 – Open the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> to listen for incoming messages.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Notice the code waits for the user to hit enter.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If you do not do this, the app will close immediately and the service will shut down.Also notice a  try/catch block used.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>After the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> has been instantiated, all other code is placed in a try/catch block.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For more information about safely catching exceptions thrown by <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, see <bpt id="p1">[</bpt>Avoiding Problems with the Using Statement<ept id="p1">](../../../docs/framework/wcf/samples/avoiding-problems-with-the-using-statement.md)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To verify the service is working</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Run the GettingStartedHost console application from inside <ph id="ph1">[!INCLUDE[vs_current_long](../../../includes/vs-current-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When running on <ph id="ph1">[!INCLUDE[wv](../../../includes/wv-md.md)]</ph> and later operating systems, the service must be run with administrator privileges.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">[!INCLUDE[vs_current_short](../../../includes/vs-current-short-md.md)]</ph> was run with Administrator privileges, GettingStartedHost is also run with Administrator privileges.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can also start a new command prompt running it with Administrator privileges and run service.exe within it.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Open Internet Explorer and browse to the service's debug page at <ph id="ph1">`http://localhost:8000/GettingStarted/CalculatorService`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following example includes the service contract and implementation from previous steps in the tutorial and hosts the service in a console application.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To compile this with a command-line compiler, compile IService1.cs and Service2.cs into a class library referencing <ph id="ph1">`System.ServiceModel.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>And compile Program.cs to a console application.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Services such as this one require permission to register HTTP addresses on the machine for listening.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Administrator accounts have this permission, but non-administrator accounts must be granted permission for HTTP namespaces.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../includes/crabout-md.md)]</ph> how to configure namespace reservations, see <bpt id="p1">[</bpt>Configuring HTTP and HTTPS<ept id="p1">](../../../docs/framework/wcf/feature-details/configuring-http-and-https.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When running under <ph id="ph1">[!INCLUDE[vs_current_short](../../../includes/vs-current-short-md.md)]</ph>, the service.exe must be run with administrator privileges.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Now the service is running.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Proceed to <bpt id="p1">[</bpt>How to: Create a Client<ept id="p1">](../../../docs/framework/wcf/how-to-create-a-wcf-client.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For troubleshooting information, see <bpt id="p1">[</bpt>Troubleshooting the Getting Started Tutorial<ept id="p1">](../../../docs/framework/wcf/troubleshooting-the-getting-started-tutorial.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting Started<ept id="p1">](../../../docs/framework/wcf/samples/getting-started-sample.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Self-Host<ept id="p1">](../../../docs/framework/wcf/samples/self-host.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>