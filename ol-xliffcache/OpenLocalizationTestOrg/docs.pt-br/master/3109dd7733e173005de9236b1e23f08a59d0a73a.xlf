<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="bc32051.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3109dd7733e173005de9236b1e23f08a59d0a73a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\misc\bc32051.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfaf049b6f3ffb846d4ba6060221664c07a9ea69</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48bab103c18a6e133a7a5566680903c75c65d804</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Type argument inference failed for type parameter '<ph id="ph1">&lt;typeparametername&gt;</ph>' of '<ph id="ph2">&lt;genericproceduresignature&gt;</ph>'</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Type argument inference failed for type parameter '<ph id="ph1">\&lt;</ph>typeparametername&gt;' of '<ph id="ph2">\&lt;</ph>genericproceduresignature&gt;'</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Type argument inference failed for type parameter '<ph id="ph1">\&lt;</ph>typeparametername&gt;' of '<ph id="ph2">\&lt;</ph>genericproceduresignature&gt;'.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Type argument could not be inferred from the argument passed to parameter '<ph id="ph1">\&lt;</ph>parametername&gt;'.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A generic procedure is called without supplying any type arguments, and the compiler cannot infer the type to pass to one of the parameters.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Normally, when you call a generic procedure, you supply a type argument for each type parameter that the generic procedure defines.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you do not supply any type arguments, then the compiler attempts to infer the types to be passed to the type parameters.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If the context of the call provides conflicting data type information for a type parameter, then the type inference fails.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following code can generate this error.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the preceding example, the compiler infers type <ph id="ph1">`Integer`</ph> for <ph id="ph2">`t`</ph> based on the value of 42 passed to <ph id="ph3">`arg2`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, that inference would require <ph id="ph1">`arg1`</ph> to be of type <ph id="ph2">`Integer()`</ph>, that is, an array of <ph id="ph3">`Integer`</ph>, and the value 6 passed to <ph id="ph4">`arg1`</ph> does not match that type.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC32051</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Supply type arguments to the generic procedure, so that the compiler does not have to infer them.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Supply normal arguments with types that match those of the type arguments.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Types in Visual Basic<ept id="p1">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Procedures in Visual Basic<ept id="p1">](../../visual-basic/programming-guide/language-features/data-types/generic-procedures.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type List<ept id="p1">](../../visual-basic/language-reference/statements/type-list.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>