<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="query-expression-syntax-for-standard-query-operators.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">232793e63673ef51b650d8188fea5733d02fd1b7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\concepts\linq\query-expression-syntax-for-standard-query-operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9afa287db6c8f6c0a7b6065aee937b41aaf99b56</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d6c5759566c100e41d04ab41efb5fd528962d4d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Query Expression Syntax for Standard Query Operators (C#)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Query Expression Syntax for Standard Query Operators (C#)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Some of the more frequently used standard query operators have dedicated C# language keyword syntax that enables them to be called as part of a <bpt id="p1">*</bpt>query expression<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A query expression is a different, more readable form of expressing a query than its <bpt id="p1">*</bpt>method-based<ept id="p1">*</ept>  equivalent.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Query expression clauses are translated into calls to the query methods at compile time.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Query Expression Syntax Table</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following table lists the standard query operators that have equivalent query expression clauses.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>C# Query Expression Syntax</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use an explicitly typed range variable, for example:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>from clause<ept id="p1">](../../../../csharp/language-reference/keywords/from-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>group clause<ept id="p1">](../../../../csharp/language-reference/keywords/group-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>join clause<ept id="p1">](../../../../csharp/language-reference/keywords/join-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>join clause<ept id="p1">](../../../../csharp/language-reference/keywords/join-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>orderby clause<ept id="p1">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>orderby clause<ept id="p1">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>select clause<ept id="p1">](../../../../csharp/language-reference/keywords/select-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Multiple <ph id="ph1">`from`</ph> clauses.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>from clause<ept id="p1">](../../../../csharp/language-reference/keywords/from-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>orderby clause<ept id="p1">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>orderby clause<ept id="p1">](../../../../csharp/language-reference/keywords/orderby-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>where clause<ept id="p1">](../../../../csharp/language-reference/keywords/where-clause.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Query Operators Overview (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Classification of Standard Query Operators by Manner of Execution (C#)<ept id="p1">](../../../../csharp/programming-guide/concepts/linq/classification-of-standard-query-operators-by-manner-of-execution.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>