{"content":"---\ntitle: \"How To: Display Signed In Status Using WIF\"\nms.date: \"03/30/2017\"\nms.assetid: 4d1174e4-5397-4962-9a5f-3b1ad7b3fc14\nauthor: \"BrucePerlerMS\"\n---\n# How To: Display Signed In Status Using WIF\n## Applies To  \n  \n-   Microsoft® Windows® Identity Foundation (WIF) 4.5  \n  \n-   ASP.NET® Web Forms  \n  \n## Summary  \n This topic describes how to display the sign in status in a WIF-enabled ASP.NET application. WIF provides the mechanism for making your application claims-aware, and managing authentication and authorization for application resources.  \n  \n## Contents  \n  \n-   Overview  \n  \n-   Summary of Steps  \n  \n-   Step 1 – Install the Identity and Access Extension  \n  \n-   Step 2 – Create a Relying Party ASP.NET Application  \n  \n-   Step 3 – Enable Local Development STS to Authenticate Users  \n  \n-   Step 4 – Modify Your ASP.NET Application to Display Sign In Status  \n  \n-   Step 5 – Test the Integration Between WIF and Your ASP.NET Application  \n  \n## Overview  \n This topic demonstrates how to create a simple claims-aware application using WIF and how to easily display whether a user is signed in or not. The following steps use the Local Development STS that is included with the Identity and Access Visual Studio Extension. The Local Development STS is intended for a testing and development environment to provide a simple method of integrating claims into your application. It should never be used in a production environment, as it does not perform real authentication and credentials are not required. However, the imperative code in the following steps is the same for a production-ready application using real authentication.  \n  \n## Summary of Steps  \n  \n-   Step 1 – Install the Identity and Access Extension  \n  \n-   Step 2 – Create a Relying Party ASP.NET Application  \n  \n-   Step 3 – Enable Local Development STS to Authenticate Users  \n  \n-   Step 4 – Modify Your ASP.NET Application to Display Sign In Status  \n  \n-   Step 5 – Test the Integration Between WIF and Your ASP.NET Application  \n  \n## Step 1 – Install the Identity and Access Extension  \n This step describes how to configure the Identity and Access extension to Visual Studio 2012. This extension automates the process of configuring your application to communicate with STS endpoints.  \n  \n#### To install the Identity and Access extension  \n  \n1.  Start Visual Studio in elevated mode as administrator.  \n  \n2.  In Visual Studio, click **Tools** and click **Extension Manager**. The **Extension Manager** window appears.  \n  \n3.  In **Extension Manager**, click **Online Extensions** from the left menu, then select **Visual Studio Gallery**.  \n  \n4.  In the top right corner of **Extension Manager**, search for *Identity and Access*.  \n  \n5.  The **Identity and Access** item will appear in the search results. Click it, and then click **Download**.  \n  \n6.  The **Download and Install** dialog appears. If you agree with the license terms, click **Install**.  \n  \n7.  When the **Identity and Access** extension has finished installing, restart Visual Studio in administrator mode.  \n  \n## Step 2 – Create a Relying Party ASP.NET Application  \n This step describes how to create a relying party ASP.NET Web Forms application that will integrate with WIF.  \n  \n#### To create a simple ASP.NET application  \n  \n1.  Start Visual Studio and click **File**, **New**, and then **Project**.  \n  \n2.  In the **New Project** window, click **ASP.NET Web Forms Application**.  \n  \n3.  In **Name**, enter `TestApp` and press **OK**.  \n  \n## Step 3 – Enable Local Development STS to Authenticate Users  \n This step describes how to enable Local Development STS in your application. Local Development STS is enabled by using the Identity and Access extension for Visual Studio.  \n  \n#### To enable Local Development STS in your ASP.NET application  \n  \n1.  In Visual Studio, right-click the **TestApp** project under **Solution Explorer**, then select **Identity and Access**.  \n  \n2.  The **Identity and Access** window appears. Under **Providers**, select **Test your application with the Local Development STS**, then click **Apply**.  \n  \n## Step 4 – Modify Your ASP.NET Application to Display Sign In Status  \n This step describes how to modify your ASP.NET application to dynamically display whether the current user is signed in. Once your STS provider has been configured, WIF handles the incoming claims. Now you need to configure your application’s code to display the result of the authentication.  \n  \n#### To display sign in status  \n  \n1.  In Visual Studio, open the **Default.aspx** file under the **TestApp** project.  \n  \n2.  Replace the existing markup in the **Default.aspx** file with the following markup:  \n  \n    ```  \n    <%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"Default.aspx.cs\" Inherits=\"_Default\" %>  \n  \n    <!DOCTYPE html>  \n  \n    <html>  \n    <head runat=\"server\">  \n        <title>Logged In Status</title>  \n    </head>  \n    <body>  \n        <asp:label ID=\"myLabel\" runat=\"server\" />  \n    </body>  \n    </html>  \n    ```  \n  \n3.  Save **Default.aspx**, and then open its code behind file named **Default.aspx.cs**.  \n  \n    > [!NOTE]\n    >  **Default.aspx.cs** may be hidden beneath **Default.aspx** in Solution Explorer. If **Default.aspx.cs** is not visible, expand **Default.aspx** by clicking on the triangle next to it.  \n  \n4.  Replace the existing code in **Default.aspx.cs** with the following code:  \n  \n    ```csharp  \n    using System;  \n    using System.Web.UI;  \n    using System.Security.Claims;  \n  \n    namespace TestApp  \n    {  \n        protected void Page_Load(object sender, EventArgs e)  \n        {  \n            ClaimsPrincipal claimsPrincipal = Thread.CurrentPrincipal as ClaimsPrincipal;  \n  \n            if (claimsPrincipal != null)  \n            {  \n                myLabel.Text = \"You are signed in.\";  \n            }  \n            else  \n            {  \n                myLabel.Text = \"You are not signed in.\";  \n            }  \n        }  \n    }  \n    ```  \n  \n5.  Save **Default.aspx.cs**, and build the application.  \n  \n## Step 5 – Test the Integration Between WIF and Your ASP.NET Application  \n This step describes how you can test the integration between WIF and your ASP.NET application.  \n  \n#### To test the integration between WIF and ASP.NET  \n  \n1.  In Visual Studio, press **F5** to start debugging your application. If no errors are found, a new browser window will open.  \n  \n2.  You may notice that the browser silently redirects your request to the STS, and then opens the Default.aspx page. If WIF is properly configured, you should see the site display the following text: **\"You are signed in\"**.\n","nodes":[{"pos":[4,150],"embed":true,"restype":"x-metadata","content":"title: \"How To: Display Signed In Status Using WIF\"\nms.date: \"03/30/2017\"\nms.assetid: 4d1174e4-5397-4962-9a5f-3b1ad7b3fc14\nauthor: \"BrucePerlerMS\"","nodes":[{"content":"How To: Display Signed In Status Using WIF","nodes":[{"pos":[0,42],"content":"How To: Display Signed In Status Using WIF","nodes":[{"content":"How To: Display Signed In Status Using WIF","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[157,199],"content":"How To: Display Signed In Status Using WIF","linkify":"How To: Display Signed In Status Using WIF","nodes":[{"content":"How To: Display Signed In Status Using WIF","pos":[0,42]}]},{"pos":[203,213],"content":"Applies To","linkify":"Applies To","nodes":[{"content":"Applies To","pos":[0,10]}]},{"content":"Microsoft® Windows® Identity Foundation (WIF) 4.5","pos":[223,272]},{"content":"ASP.NET® Web Forms","pos":[282,300]},{"pos":[309,316],"content":"Summary","linkify":"Summary","nodes":[{"content":"Summary","pos":[0,7]}]},{"content":"This topic describes how to display the sign in status in a WIF-enabled ASP.NET application.","pos":[320,412]},{"content":"WIF provides the mechanism for making your application claims-aware, and managing authentication and authorization for application resources.","pos":[413,554]},{"pos":[563,571],"content":"Contents","linkify":"Contents","nodes":[{"content":"Contents","pos":[0,8]}]},{"content":"Overview","pos":[581,589]},{"content":"Summary of Steps","pos":[599,615]},{"content":"Step 1 – Install the Identity and Access Extension","pos":[625,675]},{"content":"Step 2 – Create a Relying Party ASP.NET Application","pos":[685,736]},{"content":"Step 3 – Enable Local Development STS to Authenticate Users","pos":[746,805]},{"content":"Step 4 – Modify Your ASP.NET Application to Display Sign In Status","pos":[815,881]},{"content":"Step 5 – Test the Integration Between WIF and Your ASP.NET Application","pos":[891,961]},{"pos":[970,978],"content":"Overview","linkify":"Overview","nodes":[{"content":"Overview","pos":[0,8]}]},{"content":"This topic demonstrates how to create a simple claims-aware application using WIF and how to easily display whether a user is signed in or not.","pos":[982,1125]},{"content":"The following steps use the Local Development STS that is included with the Identity and Access Visual Studio Extension.","pos":[1126,1246]},{"content":"The Local Development STS is intended for a testing and development environment to provide a simple method of integrating claims into your application.","pos":[1247,1398]},{"content":"It should never be used in a production environment, as it does not perform real authentication and credentials are not required.","pos":[1399,1528]},{"content":"However, the imperative code in the following steps is the same for a production-ready application using real authentication.","pos":[1529,1654]},{"pos":[1663,1679],"content":"Summary of Steps","linkify":"Summary of Steps","nodes":[{"content":"Summary of Steps","pos":[0,16]}]},{"content":"Step 1 – Install the Identity and Access Extension","pos":[1689,1739]},{"content":"Step 2 – Create a Relying Party ASP.NET Application","pos":[1749,1800]},{"content":"Step 3 – Enable Local Development STS to Authenticate Users","pos":[1810,1869]},{"content":"Step 4 – Modify Your ASP.NET Application to Display Sign In Status","pos":[1879,1945]},{"content":"Step 5 – Test the Integration Between WIF and Your ASP.NET Application","pos":[1955,2025]},{"pos":[2034,2084],"content":"Step 1 – Install the Identity and Access Extension","linkify":"Step 1 – Install the Identity and Access Extension","nodes":[{"content":"Step 1 – Install the Identity and Access Extension","pos":[0,50]}]},{"content":"This step describes how to configure the Identity and Access extension to Visual Studio 2012.","pos":[2088,2181]},{"content":"This extension automates the process of configuring your application to communicate with STS endpoints.","pos":[2182,2285]},{"pos":[2296,2340],"content":"To install the Identity and Access extension","linkify":"To install the Identity and Access extension","nodes":[{"content":"To install the Identity and Access extension","pos":[0,44]}]},{"content":"Start Visual Studio in elevated mode as administrator.","pos":[2350,2404]},{"content":"In Visual Studio, click <bpt id=\"p1\">**</bpt>Tools<ept id=\"p1\">**</ept> and click <bpt id=\"p2\">**</bpt>Extension Manager<ept id=\"p2\">**</ept>.","pos":[2414,2480],"source":"In Visual Studio, click **Tools** and click **Extension Manager**."},{"content":"The <bpt id=\"p1\">**</bpt>Extension Manager<ept id=\"p1\">**</ept> window appears.","pos":[2481,2522],"source":" The **Extension Manager** window appears."},{"pos":[2532,2644],"content":"In <bpt id=\"p1\">**</bpt>Extension Manager<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Online Extensions<ept id=\"p2\">**</ept> from the left menu, then select <bpt id=\"p3\">**</bpt>Visual Studio Gallery<ept id=\"p3\">**</ept>.","source":"In **Extension Manager**, click **Online Extensions** from the left menu, then select **Visual Studio Gallery**."},{"pos":[2654,2737],"content":"In the top right corner of <bpt id=\"p1\">**</bpt>Extension Manager<ept id=\"p1\">**</ept>, search for <bpt id=\"p2\">*</bpt>Identity and Access<ept id=\"p2\">*</ept>.","source":"In the top right corner of **Extension Manager**, search for *Identity and Access*."},{"content":"The <bpt id=\"p1\">**</bpt>Identity and Access<ept id=\"p1\">**</ept> item will appear in the search results.","pos":[2747,2814],"source":"The **Identity and Access** item will appear in the search results."},{"content":"Click it, and then click <bpt id=\"p1\">**</bpt>Download<ept id=\"p1\">**</ept>.","pos":[2815,2853],"source":" Click it, and then click **Download**."},{"content":"The <bpt id=\"p1\">**</bpt>Download and Install<ept id=\"p1\">**</ept> dialog appears.","pos":[2863,2907],"source":"The **Download and Install** dialog appears."},{"content":"If you agree with the license terms, click <bpt id=\"p1\">**</bpt>Install<ept id=\"p1\">**</ept>.","pos":[2908,2963],"source":" If you agree with the license terms, click **Install**."},{"pos":[2973,3085],"content":"When the <bpt id=\"p1\">**</bpt>Identity and Access<ept id=\"p1\">**</ept> extension has finished installing, restart Visual Studio in administrator mode.","source":"When the **Identity and Access** extension has finished installing, restart Visual Studio in administrator mode."},{"pos":[3094,3145],"content":"Step 2 – Create a Relying Party ASP.NET Application","linkify":"Step 2 – Create a Relying Party ASP.NET Application","nodes":[{"content":"Step 2 – Create a Relying Party ASP.NET Application","pos":[0,51]}]},{"content":"This step describes how to create a relying party ASP.NET Web Forms application that will integrate with WIF.","pos":[3149,3258]},{"pos":[3269,3307],"content":"To create a simple ASP.NET application","linkify":"To create a simple ASP.NET application","nodes":[{"content":"To create a simple ASP.NET application","pos":[0,38]}]},{"pos":[3317,3387],"content":"Start Visual Studio and click <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>New<ept id=\"p2\">**</ept>, and then <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept>.","source":"Start Visual Studio and click **File**, **New**, and then **Project**."},{"pos":[3397,3468],"content":"In the <bpt id=\"p1\">**</bpt>New Project<ept id=\"p1\">**</ept> window, click <bpt id=\"p2\">**</bpt>ASP.NET Web Forms Application<ept id=\"p2\">**</ept>.","source":"In the **New Project** window, click **ASP.NET Web Forms Application**."},{"pos":[3478,3524],"content":"In <bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>, enter <ph id=\"ph1\">`TestApp`</ph> and press <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","source":"In **Name**, enter `TestApp` and press **OK**."},{"pos":[3533,3592],"content":"Step 3 – Enable Local Development STS to Authenticate Users","linkify":"Step 3 – Enable Local Development STS to Authenticate Users","nodes":[{"content":"Step 3 – Enable Local Development STS to Authenticate Users","pos":[0,59]}]},{"content":"This step describes how to enable Local Development STS in your application.","pos":[3596,3672]},{"content":"Local Development STS is enabled by using the Identity and Access extension for Visual Studio.","pos":[3673,3767]},{"pos":[3778,3837],"content":"To enable Local Development STS in your ASP.NET application","linkify":"To enable Local Development STS in your ASP.NET application","nodes":[{"content":"To enable Local Development STS in your ASP.NET application","pos":[0,59]}]},{"pos":[3847,3966],"content":"In Visual Studio, right-click the <bpt id=\"p1\">**</bpt>TestApp<ept id=\"p1\">**</ept> project under <bpt id=\"p2\">**</bpt>Solution Explorer<ept id=\"p2\">**</ept>, then select <bpt id=\"p3\">**</bpt>Identity and Access<ept id=\"p3\">**</ept>.","source":"In Visual Studio, right-click the **TestApp** project under **Solution Explorer**, then select **Identity and Access**."},{"content":"The <bpt id=\"p1\">**</bpt>Identity and Access<ept id=\"p1\">**</ept> window appears.","pos":[3976,4019],"source":"The **Identity and Access** window appears."},{"content":"Under <bpt id=\"p1\">**</bpt>Providers<ept id=\"p1\">**</ept>, select <bpt id=\"p2\">**</bpt>Test your application with the Local Development STS<ept id=\"p2\">**</ept>, then click <bpt id=\"p3\">**</bpt>Apply<ept id=\"p3\">**</ept>.","pos":[4020,4127],"source":" Under **Providers**, select **Test your application with the Local Development STS**, then click **Apply**."},{"pos":[4136,4202],"content":"Step 4 – Modify Your ASP.NET Application to Display Sign In Status","linkify":"Step 4 – Modify Your ASP.NET Application to Display Sign In Status","nodes":[{"content":"Step 4 – Modify Your ASP.NET Application to Display Sign In Status","pos":[0,66]}]},{"content":"This step describes how to modify your ASP.NET application to dynamically display whether the current user is signed in.","pos":[4206,4326]},{"content":"Once your STS provider has been configured, WIF handles the incoming claims.","pos":[4327,4403]},{"content":"Now you need to configure your application’s code to display the result of the authentication.","pos":[4404,4498]},{"pos":[4509,4534],"content":"To display sign in status","linkify":"To display sign in status","nodes":[{"content":"To display sign in status","pos":[0,25]}]},{"pos":[4544,4623],"content":"In Visual Studio, open the <bpt id=\"p1\">**</bpt>Default.aspx<ept id=\"p1\">**</ept> file under the <bpt id=\"p2\">**</bpt>TestApp<ept id=\"p2\">**</ept> project.","source":"In Visual Studio, open the **Default.aspx** file under the **TestApp** project."},{"pos":[4633,4716],"content":"Replace the existing markup in the <bpt id=\"p1\">**</bpt>Default.aspx<ept id=\"p1\">**</ept> file with the following markup:","source":"Replace the existing markup in the **Default.aspx** file with the following markup:"},{"pos":[5069,5153],"content":"Save <bpt id=\"p1\">**</bpt>Default.aspx<ept id=\"p1\">**</ept>, and then open its code behind file named <bpt id=\"p2\">**</bpt>Default.aspx.cs<ept id=\"p2\">**</ept>.","source":"Save **Default.aspx**, and then open its code behind file named **Default.aspx.cs**."},{"pos":[5165,5363],"content":"[!NOTE]\n**Default.aspx.cs** may be hidden beneath **Default.aspx** in Solution Explorer. If **Default.aspx.cs** is not visible, expand **Default.aspx** by clicking on the triangle next to it.","leadings":["","    >  "],"nodes":[{"content":"**Default.aspx.cs** may be hidden beneath **Default.aspx** in Solution Explorer. If **Default.aspx.cs** is not visible, expand **Default.aspx** by clicking on the triangle next to it.","pos":[8,191],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Default.aspx.cs<ept id=\"p1\">**</ept> may be hidden beneath <bpt id=\"p2\">**</bpt>Default.aspx<ept id=\"p2\">**</ept> in Solution Explorer.","pos":[0,80],"source":"**Default.aspx.cs** may be hidden beneath **Default.aspx** in Solution Explorer."},{"content":"If <bpt id=\"p1\">**</bpt>Default.aspx.cs<ept id=\"p1\">**</ept> is not visible, expand <bpt id=\"p2\">**</bpt>Default.aspx<ept id=\"p2\">**</ept> by clicking on the triangle next to it.","pos":[81,183],"source":" If **Default.aspx.cs** is not visible, expand **Default.aspx** by clicking on the triangle next to it."}]}]},{"pos":[5373,5446],"content":"Replace the existing code in <bpt id=\"p1\">**</bpt>Default.aspx.cs<ept id=\"p1\">**</ept> with the following code:","source":"Replace the existing code in **Default.aspx.cs** with the following code:"},{"pos":[6033,6085],"content":"Save <bpt id=\"p1\">**</bpt>Default.aspx.cs<ept id=\"p1\">**</ept>, and build the application.","source":"Save **Default.aspx.cs**, and build the application."},{"pos":[6094,6164],"content":"Step 5 – Test the Integration Between WIF and Your ASP.NET Application","linkify":"Step 5 – Test the Integration Between WIF and Your ASP.NET Application","nodes":[{"content":"Step 5 – Test the Integration Between WIF and Your ASP.NET Application","pos":[0,70]}]},{"content":"This step describes how you can test the integration between WIF and your ASP.NET application.","pos":[6168,6262]},{"pos":[6273,6320],"content":"To test the integration between WIF and ASP.NET","linkify":"To test the integration between WIF and ASP.NET","nodes":[{"content":"To test the integration between WIF and ASP.NET","pos":[0,47]}]},{"content":"In Visual Studio, press <bpt id=\"p1\">**</bpt>F5<ept id=\"p1\">**</ept> to start debugging your application.","pos":[6330,6397],"source":"In Visual Studio, press **F5** to start debugging your application."},{"content":"If no errors are found, a new browser window will open.","pos":[6398,6453]},{"content":"You may notice that the browser silently redirects your request to the STS, and then opens the Default.aspx page.","pos":[6463,6576]},{"content":"If WIF is properly configured, you should see the site display the following text: <bpt id=\"p1\">**</bpt>\"You are signed in\"<ept id=\"p1\">**</ept>.","pos":[6577,6684],"source":" If WIF is properly configured, you should see the site display the following text: **\"You are signed in\"**."}]}