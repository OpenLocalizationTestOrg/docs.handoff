{"content":"---\ntitle: \"How to: Create Temporary Certificates for Use During Development | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"certificates [WCF], creating temporary certificates\"\n  - \"temporary certificates [WCF]\"\nms.assetid: bc5f6637-5513-4d27-99bb-51aad7741e4a\ncaps.latest.revision: 14\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# How to: Create Temporary Certificates for Use During Development\nWhen developing a secure service or client using [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)], it is often necessary to supply an X.509 certificate to be used as a credential. The certificate typically is part of a chain of certificates with a root authority found in the Trusted Root Certification Authorities store of the computer. Having a certificate chain enables you to scope a set of certificates where typically the root authority is from your organization or business unit. To emulate this at development time, you can create two certificates to satisfy the security requirements. The first is a self-signed certificate that is placed in the Trusted Root Certification Authorities store, and the second certificate is created from the first and is placed in either the Personal store of the Local Machine location, or the Personal store of the Current User location. This topic walks through the steps to create these two certificates using the [Certificate Creation Tool (MakeCert.exe)](http://go.microsoft.com/fwlink/?LinkId=248185), which is provided by the [!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)] SDK.  \n  \n> [!IMPORTANT]\n>  The certificates the Certification Creation tool generates are provided for testing purposes only. When deploying a service or client, be sure to use an appropriate certificate provided by a certification authority. This could either be from a [!INCLUDE[ws2003](../../../../includes/ws2003-md.md)] certificate server in your organization or a third party.  \n>   \n>  By default, the [Makecert.exe (Certificate Creation Tool)](http://msdn.microsoft.com/library/b0343f8e-9c41-4852-a85c-f8a0c408cf0d) creates certificates whose root authority is called \"Root Agency**.\"** Because the \"Root Agency\" is not in the Trusted Root Certification Authorities store, this makes these certificates insecure. Creating a self-signed certificate that is placed in the Trusted Root Certification Authorities store enables you to create a development environment that more closely simulates your deployment environment.  \n  \n [!INCLUDE[crabout](../../../../includes/crabout-md.md)] creating and using certificates, see [Working with Certificates](../../../../docs/framework/wcf/feature-details/working-with-certificates.md). [!INCLUDE[crabout](../../../../includes/crabout-md.md)] using a certificate as a credential, see [Securing Services and Clients](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md). For a tutorial about using Microsoft Authenticode technology, see [Authenticode Overviews and Tutorials](http://go.microsoft.com/fwlink/?LinkId=88919).  \n  \n### To create a self-signed root authority certificate and export the private key  \n  \n1.  Use the MakeCert.exe tool with the following switches:  \n  \n    1.  `-n` `subjectName`. Specifies the subject name. The convention is to prefix the subject name with \"CN = \" for \"Common Name\".  \n  \n    2.  `-r`. Specifies that the certificate will be self-signed.  \n  \n    3.  `-sv` `privateKeyFile`. Specifies the file that contains the private key container.  \n  \n     For example, the following command creates a self-signed certificate with a subject name of \"CN=TempCA.\"  \n  \n    ```  \n    makecert -n \"CN=TempCA\" -r -sv TempCA.pvk TempCA.cer  \n    ```  \n  \n     You will be prompted to provide a password to protect the private key. This password is required when creating a certificate signed by this root certificate.  \n  \n### To create a new certificate signed by a root authority certificate  \n  \n1.  Use the MakeCert.exe tool with the following switches:  \n  \n    1.  `-sk` `subjectKey`. The location of the subject's key container that holds the private key. If a key container does not exist, one is created. If neither of the -sk or -sv options is used, a key container called JoeSoft is created by default.  \n  \n    2.  `-n` `subjectName`. Specifies the subject name. The convention is to prefix the subject name with \"CN = \" for \"Common Name\".  \n  \n    3.  `-iv` `issuerKeyFile`. Specifies the issuer's private key file.  \n  \n    4.  `-ic` `issuerCertFile`. Specifies the location of the issuer's certificate.  \n  \n     For example, the following command creates a certificate signed by the `TempCA` root authority certificate with a subject name of `\"CN=SignedByCA\"` using the private key of the issuer.  \n  \n    ```  \n    makecert -sk SignedByCA -iv TempCA.pvk -n \"CN=SignedByCA\" -ic TempCA.cer SignedByCA.cer -sr currentuser -ss My  \n    ```  \n  \n## Installing a Certificate in the Trusted Root Certification Authorities Store  \n Once a self-signed certificate is created, you can install it in the Trusted Root Certification Authorities store. Any certificates that are signed with the certificate at this point are trusted by the computer. For this reason, delete the certificate from the store as soon as you no longer need it. When you delete this root authority certificate, all other certificates that signed with it become unauthorized. Root authority certificates are simply a mechanism whereby a group of certificates can be scoped as necessary. For example, in peer-to-peer applications, there is typically no need for a root authority because you simply trust the identity of an individual by its supplied certificate.  \n  \n#### To install a self-signed certificate in the Trusted Root Certification Authorities  \n  \n1.  Open the certificate snap-in. [!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][How to: View Certificates with the MMC Snap-in](../../../../docs/framework/wcf/feature-details/how-to-view-certificates-with-the-mmc-snap-in.md).  \n  \n2.  Open the folder to store the certificate, either the **Local Computer** or the **Current User**.  \n  \n3.  Open the **Trusted Root Certification Authorities** folder.  \n  \n4.  Right-click the **Certificates** folder and click **All Tasks**, then click **Import**.  \n  \n5.  Follow the on-screen wizard instructions to import the TempCa.cer into the store.  \n  \n## Using Certificates With WCF  \n Once you have set up the temporary certificates, you can use them to develop WCF solutions that specify certificates as a client credential type. For example, the following XML configuration specifies message security and a certificate as the client credential type.  \n  \n#### To specify a certificate as the client credential type  \n  \n-   In the configuration file for a service, use the following XML to set the security mode to message, and the client credential type to certificate.  \n  \n    ```xml  \n    <bindings>       \n      <wsHttpBinding>  \n        <binding name=\"CertificateForClient\">  \n          <security>  \n            <message clientCredentialType=\"Certificate\" />  \n          </security>  \n        </binding>  \n      </wsHttpBinding>  \n    </bindings>  \n  \n    ```  \n  \n In the configuration file for a client, use the following XML to specify that the certificate is found in the userâ€™s store, and can be found by searching the SubjectName field for the value \"CohoWinery.\"  \n  \n```xml  \n  \n<behaviors>  \n  <endpointBehaviors>  \n    <behavior name=\"CertForClient\">  \n      <clientCredentials>  \n        <clientCertificate findValue=\"CohoWinery\" x509FindType=\"FindBySubjectName\" />  \n       </clientCredentials>  \n     </behavior>  \n   </endpointBehaviors>  \n</behaviors>  \n```  \n  \n For more information about using certificates in WCF, see [Working with Certificates](../../../../docs/framework/wcf/feature-details/working-with-certificates.md).  \n  \n## .NET Framework Security  \n Be sure to delete any temporary root authority certificates from the **Trusted Root Certification Authorities** and **Personal** folders by right-clicking the certificate, then clicking **Delete**.  \n  \n## See Also  \n [Working with Certificates](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)   \n [How to: View Certificates with the MMC Snap-in](../../../../docs/framework/wcf/feature-details/how-to-view-certificates-with-the-mmc-snap-in.md)   \n [Securing Services and Clients](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)","nodes":[{"pos":[4,500],"embed":true,"restype":"x-metadata","content":"title: \"How to: Create Temporary Certificates for Use During Development | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"certificates [WCF], creating temporary certificates\"\n  - \"temporary certificates [WCF]\"\nms.assetid: bc5f6637-5513-4d27-99bb-51aad7741e4a\ncaps.latest.revision: 14\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"","nodes":[{"content":"How to: Create Temporary Certificates for Use During Development | Microsoft Docs","nodes":[{"pos":[0,81],"content":"How to: Create Temporary Certificates for Use During Development | Microsoft Docs","nodes":[{"content":"How to: Create Temporary Certificates for Use During Development | Microsoft Docs","pos":[0,81]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[507,571],"content":"How to: Create Temporary Certificates for Use During Development","linkify":"How to: Create Temporary Certificates for Use During Development","nodes":[{"content":"How to: Create Temporary Certificates for Use During Development","pos":[0,64]}]},{"content":"When developing a secure service or client using <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph>, it is often necessary to supply an X.509 certificate to be used as a credential.","pos":[572,758],"source":"When developing a secure service or client using [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)], it is often necessary to supply an X.509 certificate to be used as a credential."},{"content":"The certificate typically is part of a chain of certificates with a root authority found in the Trusted Root Certification Authorities store of the computer.","pos":[759,916]},{"content":"Having a certificate chain enables you to scope a set of certificates where typically the root authority is from your organization or business unit.","pos":[917,1065]},{"content":"To emulate this at development time, you can create two certificates to satisfy the security requirements.","pos":[1066,1172]},{"content":"The first is a self-signed certificate that is placed in the Trusted Root Certification Authorities store, and the second certificate is created from the first and is placed in either the Personal store of the Local Machine location, or the Personal store of the Current User location.","pos":[1173,1458]},{"content":"This topic walks through the steps to create these two certificates using the <bpt id=\"p1\">[</bpt>Certificate Creation Tool (MakeCert.exe)<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=248185)</ept>, which is provided by the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> SDK.","pos":[1459,1721],"source":" This topic walks through the steps to create these two certificates using the [Certificate Creation Tool (MakeCert.exe)](http://go.microsoft.com/fwlink/?LinkId=248185), which is provided by the [!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)] SDK."},{"pos":[1729,2100],"content":"[!IMPORTANT]\n The certificates the Certification Creation tool generates are provided for testing purposes only. When deploying a service or client, be sure to use an appropriate certificate provided by a certification authority. This could either be from a [!INCLUDE[ws2003](../../../../includes/ws2003-md.md)] certificate server in your organization or a third party.","leadings":["","> "],"nodes":[{"content":"The certificates the Certification Creation tool generates are provided for testing purposes only. When deploying a service or client, be sure to use an appropriate certificate provided by a certification authority. This could either be from a [!INCLUDE[ws2003](../../../../includes/ws2003-md.md)] certificate server in your organization or a third party.","pos":[14,369],"nodes":[{"content":"The certificates the Certification Creation tool generates are provided for testing purposes only.","pos":[0,98]},{"content":"When deploying a service or client, be sure to use an appropriate certificate provided by a certification authority.","pos":[99,215]},{"content":"This could either be from a <ph id=\"ph1\">[!INCLUDE[ws2003](../../../../includes/ws2003-md.md)]</ph> certificate server in your organization or a third party.","pos":[216,355],"source":" This could either be from a [!INCLUDE[ws2003](../../../../includes/ws2003-md.md)] certificate server in your organization or a third party."}]}]},{"content":"By default, the <bpt id=\"p1\">[</bpt>Makecert.exe (Certificate Creation Tool)<ept id=\"p1\">](http://msdn.microsoft.com/library/b0343f8e-9c41-4852-a85c-f8a0c408cf0d)</ept> creates certificates whose root authority is called \"Root Agency<bpt id=\"p2\">**</bpt>.\"<ept id=\"p2\">**</ept>","pos":[2111,2312],"source":"By default, the [Makecert.exe (Certificate Creation Tool)](http://msdn.microsoft.com/library/b0343f8e-9c41-4852-a85c-f8a0c408cf0d) creates certificates whose root authority is called \"Root Agency**.\"**"},{"content":"Because the \"Root Agency\" is not in the Trusted Root Certification Authorities store, this makes these certificates insecure.","pos":[2313,2438]},{"content":"Creating a self-signed certificate that is placed in the Trusted Root Certification Authorities store enables you to create a development environment that more closely simulates your deployment environment.","pos":[2439,2645]},{"content":"creating and using certificates, see <bpt id=\"p1\">[</bpt>Working with Certificates<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept>.","pos":[2708,2850],"source":" creating and using certificates, see [Working with Certificates](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> using a certificate as a credential, see <bpt id=\"p1\">[</bpt>Securing Services and Clients<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)</ept>.","pos":[2851,3061],"source":"[!INCLUDE[crabout](../../../../includes/crabout-md.md)] using a certificate as a credential, see [Securing Services and Clients](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)."},{"content":"For a tutorial about using Microsoft Authenticode technology, see <bpt id=\"p1\">[</bpt>Authenticode Overviews and Tutorials<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=88919)</ept>.","pos":[3062,3213],"source":" For a tutorial about using Microsoft Authenticode technology, see [Authenticode Overviews and Tutorials](http://go.microsoft.com/fwlink/?LinkId=88919)."},{"pos":[3223,3300],"content":"To create a self-signed root authority certificate and export the private key","linkify":"To create a self-signed root authority certificate and export the private key","nodes":[{"content":"To create a self-signed root authority certificate and export the private key","pos":[0,77]}]},{"content":"Use the MakeCert.exe tool with the following switches:","pos":[3310,3364]},{"content":"<ph id=\"ph1\">`-n`</ph> <ph id=\"ph2\">`subjectName`</ph>.","pos":[3378,3397],"source":"`-n` `subjectName`."},{"content":"Specifies the subject name.","pos":[3398,3425]},{"content":"The convention is to prefix the subject name with \"CN = \" for \"Common Name\".","pos":[3426,3502]},{"content":"<ph id=\"ph1\">`-r`</ph>.","pos":[3516,3521],"source":"`-r`."},{"content":"Specifies that the certificate will be self-signed.","pos":[3522,3573]},{"content":"<ph id=\"ph1\">`-sv`</ph> <ph id=\"ph2\">`privateKeyFile`</ph>.","pos":[3587,3610],"source":"`-sv` `privateKeyFile`."},{"content":"Specifies the file that contains the private key container.","pos":[3611,3670]},{"content":"For example, the following command creates a self-signed certificate with a subject name of \"CN=TempCA.\"","pos":[3681,3785]},{"content":"You will be prompted to provide a password to protect the private key.","pos":[3878,3948]},{"content":"This password is required when creating a certificate signed by this root certificate.","pos":[3949,4035]},{"pos":[4045,4111],"content":"To create a new certificate signed by a root authority certificate","linkify":"To create a new certificate signed by a root authority certificate","nodes":[{"content":"To create a new certificate signed by a root authority certificate","pos":[0,66]}]},{"content":"Use the MakeCert.exe tool with the following switches:","pos":[4121,4175]},{"content":"<ph id=\"ph1\">`-sk`</ph> <ph id=\"ph2\">`subjectKey`</ph>.","pos":[4189,4208],"source":"`-sk` `subjectKey`."},{"content":"The location of the subject's key container that holds the private key.","pos":[4209,4280]},{"content":"If a key container does not exist, one is created.","pos":[4281,4331]},{"content":"If neither of the -sk or -sv options is used, a key container called JoeSoft is created by default.","pos":[4332,4431]},{"content":"<ph id=\"ph1\">`-n`</ph> <ph id=\"ph2\">`subjectName`</ph>.","pos":[4445,4464],"source":"`-n` `subjectName`."},{"content":"Specifies the subject name.","pos":[4465,4492]},{"content":"The convention is to prefix the subject name with \"CN = \" for \"Common Name\".","pos":[4493,4569]},{"content":"<ph id=\"ph1\">`-iv`</ph> <ph id=\"ph2\">`issuerKeyFile`</ph>.","pos":[4583,4605],"source":"`-iv` `issuerKeyFile`."},{"content":"Specifies the issuer's private key file.","pos":[4606,4646]},{"content":"<ph id=\"ph1\">`-ic`</ph> <ph id=\"ph2\">`issuerCertFile`</ph>.","pos":[4660,4683],"source":"`-ic` `issuerCertFile`."},{"content":"Specifies the location of the issuer's certificate.","pos":[4684,4735]},{"pos":[4746,4930],"content":"For example, the following command creates a certificate signed by the <ph id=\"ph1\">`TempCA`</ph> root authority certificate with a subject name of <ph id=\"ph2\">`\"CN=SignedByCA\"`</ph> using the private key of the issuer.","source":"For example, the following command creates a certificate signed by the `TempCA` root authority certificate with a subject name of `\"CN=SignedByCA\"` using the private key of the issuer."},{"pos":[5079,5155],"content":"Installing a Certificate in the Trusted Root Certification Authorities Store","linkify":"Installing a Certificate in the Trusted Root Certification Authorities Store","nodes":[{"content":"Installing a Certificate in the Trusted Root Certification Authorities Store","pos":[0,76]}]},{"content":"Once a self-signed certificate is created, you can install it in the Trusted Root Certification Authorities store.","pos":[5159,5273]},{"content":"Any certificates that are signed with the certificate at this point are trusted by the computer.","pos":[5274,5370]},{"content":"For this reason, delete the certificate from the store as soon as you no longer need it.","pos":[5371,5459]},{"content":"When you delete this root authority certificate, all other certificates that signed with it become unauthorized.","pos":[5460,5572]},{"content":"Root authority certificates are simply a mechanism whereby a group of certificates can be scoped as necessary.","pos":[5573,5683]},{"content":"For example, in peer-to-peer applications, there is typically no need for a root authority because you simply trust the identity of an individual by its supplied certificate.","pos":[5684,5858]},{"pos":[5869,5951],"content":"To install a self-signed certificate in the Trusted Root Certification Authorities","linkify":"To install a self-signed certificate in the Trusted Root Certification Authorities","nodes":[{"content":"To install a self-signed certificate in the Trusted Root Certification Authorities","pos":[0,82]}]},{"content":"Open the certificate snap-in.","pos":[5961,5990]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>How to: View Certificates with the MMC Snap-in<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-view-certificates-with-the-mmc-snap-in.md)</ept>.","pos":[5991,6196],"source":"[!INCLUDE[crdefault](../../../../includes/crdefault-md.md)][How to: View Certificates with the MMC Snap-in](../../../../docs/framework/wcf/feature-details/how-to-view-certificates-with-the-mmc-snap-in.md)."},{"pos":[6206,6302],"content":"Open the folder to store the certificate, either the <bpt id=\"p1\">**</bpt>Local Computer<ept id=\"p1\">**</ept> or the <bpt id=\"p2\">**</bpt>Current User<ept id=\"p2\">**</ept>.","source":"Open the folder to store the certificate, either the **Local Computer** or the **Current User**."},{"pos":[6312,6371],"content":"Open the <bpt id=\"p1\">**</bpt>Trusted Root Certification Authorities<ept id=\"p1\">**</ept> folder.","source":"Open the **Trusted Root Certification Authorities** folder."},{"pos":[6381,6468],"content":"Right-click the <bpt id=\"p1\">**</bpt>Certificates<ept id=\"p1\">**</ept> folder and click <bpt id=\"p2\">**</bpt>All Tasks<ept id=\"p2\">**</ept>, then click <bpt id=\"p3\">**</bpt>Import<ept id=\"p3\">**</ept>.","source":"Right-click the **Certificates** folder and click **All Tasks**, then click **Import**."},{"content":"Follow the on-screen wizard instructions to import the TempCa.cer into the store.","pos":[6478,6559]},{"pos":[6568,6595],"content":"Using Certificates With WCF","linkify":"Using Certificates With WCF","nodes":[{"content":"Using Certificates With WCF","pos":[0,27]}]},{"content":"Once you have set up the temporary certificates, you can use them to develop WCF solutions that specify certificates as a client credential type.","pos":[6599,6744]},{"content":"For example, the following XML configuration specifies message security and a certificate as the client credential type.","pos":[6745,6865]},{"pos":[6876,6930],"content":"To specify a certificate as the client credential type","linkify":"To specify a certificate as the client credential type","nodes":[{"content":"To specify a certificate as the client credential type","pos":[0,54]}]},{"content":"In the configuration file for a service, use the following XML to set the security mode to message, and the client credential type to certificate.","pos":[6940,7086]},{"content":"In the configuration file for a client, use the following XML to specify that the certificate is found in the userâ€™s store, and can be found by searching the SubjectName field for the value \"CohoWinery.\"","pos":[7388,7591]},{"pos":[7901,8064],"content":"For more information about using certificates in WCF, see <bpt id=\"p1\">[</bpt>Working with Certificates<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept>.","source":"For more information about using certificates in WCF, see [Working with Certificates](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)."},{"pos":[8073,8096],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[8100,8297],"content":"Be sure to delete any temporary root authority certificates from the <bpt id=\"p1\">**</bpt>Trusted Root Certification Authorities<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Personal<ept id=\"p2\">**</ept> folders by right-clicking the certificate, then clicking <bpt id=\"p3\">**</bpt>Delete<ept id=\"p3\">**</ept>.","source":"Be sure to delete any temporary root authority certificates from the **Trusted Root Certification Authorities** and **Personal** folders by right-clicking the certificate, then clicking **Delete**."},{"pos":[8306,8314],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Working with Certificates<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/working-with-certificates.md)</ept><ph id=\"ph1\"> </ph>","pos":[8318,8423],"source":"[Working with Certificates](../../../../docs/framework/wcf/feature-details/working-with-certificates.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: View Certificates with the MMC Snap-in<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/how-to-view-certificates-with-the-mmc-snap-in.md)</ept><ph id=\"ph1\"> </ph>","pos":[8427,8573],"source":"[How to: View Certificates with the MMC Snap-in](../../../../docs/framework/wcf/feature-details/how-to-view-certificates-with-the-mmc-snap-in.md) "},{"content":"<bpt id=\"p1\">[</bpt>Securing Services and Clients<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)</ept>","pos":[8577,8689],"source":"[Securing Services and Clients](../../../../docs/framework/wcf/feature-details/securing-services-and-clients.md)"}]}