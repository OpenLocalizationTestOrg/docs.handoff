{"content":"---\ntitle: \"! Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"!_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"! operator [C#]\"\n  - \"logical negation operator (!) [C#]\"\n  - \"NOT operator [C#]\"\nms.assetid: f5ae133f-8f64-4560-b34f-cd9cd5eed4ad\ncaps.latest.revision: 13\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# ! Operator (C# Reference)\nThe logical negation operator (`!`) is a unary operator that negates its operand. It is defined for `bool` and returns `true` if and only if its operand is `false`.  \n  \n## Remarks  \n User-defined types can overload the `!` operator (see [operator](../../../csharp/language-reference/keywords/operator.md)).  \n  \n## Example  \n [!code-cs[csRefOperators#7](../../../csharp/language-reference/operators/codesnippet/CSharp/logical-negation-operator_1.cs)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Operators](../../../csharp/language-reference/operators/index.md)","nodes":[{"pos":[4,615],"nodes":[{"content":"! Operator (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,42],"content":"! Operator (C# Reference) | Microsoft Docs","nodes":[{"content":"! Operator (C# Reference) | Microsoft Docs","pos":[0,42],"nodes":[{"content":"!","pos":[0,1]},{"content":"Operator (C# Reference) | Microsoft Docs","pos":[2,42]}]}]}],"pos":[6,51],"yaml":true}],"content":"title: \"! Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"!_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"! operator [C#]\"\n  - \"logical negation operator (!) [C#]\"\n  - \"NOT operator [C#]\"\nms.assetid: f5ae133f-8f64-4560-b34f-cd9cd5eed4ad\ncaps.latest.revision: 13\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[622,647],"content":"! Operator (C# Reference)","linkify":"! Operator (C# Reference)","nodes":[{"content":"! Operator (C# Reference)","pos":[0,25],"nodes":[{"content":"!","pos":[0,1]},{"content":"Operator (C# Reference)","pos":[2,25]}]}]},{"content":"The logical negation operator (<ph id=\"ph1\">`!`</ph>) is a unary operator that negates its operand.","pos":[648,729],"source":"The logical negation operator (`!`) is a unary operator that negates its operand."},{"content":"It is defined for <ph id=\"ph1\">`bool`</ph> and returns <ph id=\"ph2\">`true`</ph> if and only if its operand is <ph id=\"ph3\">`false`</ph>.","pos":[730,812],"source":" It is defined for `bool` and returns `true` if and only if its operand is `false`."},{"pos":[821,828],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[832,955],"content":"User-defined types can overload the <ph id=\"ph1\">`!`</ph> operator (see <bpt id=\"p1\">[</bpt>operator<ept id=\"p1\">](../../../csharp/language-reference/keywords/operator.md)</ept>).","source":"User-defined types can overload the `!` operator (see [operator](../../../csharp/language-reference/keywords/operator.md))."},{"pos":[964,971],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[975,1099],"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>csRefOperators#7<ept id=\"p2\">](../../../csharp/language-reference/operators/codesnippet/CSharp/logical-negation-operator_1.cs)</ept><ept id=\"p1\">]</ept>","source":"[!code-cs[csRefOperators#7](../../../csharp/language-reference/operators/codesnippet/CSharp/logical-negation-operator_1.cs)]"},{"pos":[1108,1116],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1120,1180],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1184,1251],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](../../../csharp/language-reference/operators/index.md)</ept>","pos":[1255,1324],"source":"[C# Operators](../../../csharp/language-reference/operators/index.md)"}]}