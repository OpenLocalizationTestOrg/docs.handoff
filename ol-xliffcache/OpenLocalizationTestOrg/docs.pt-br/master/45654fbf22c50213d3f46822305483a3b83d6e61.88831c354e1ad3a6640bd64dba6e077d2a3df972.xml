{"content":"---\ntitle: \"Creating a BindingElement | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 01a35307-a41f-4ef6-a3db-322af40afc99\ncaps.latest.revision: 12\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Creating a BindingElement\nBindings and binding elements (objects that extend <xref:System.ServiceModel.Channels.Binding?displayProperty=fullName> and <xref:System.ServiceModel.Channels.BindingElement?displayProperty=fullName>, respectively) are the place where the [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] application model is associated with channel factories and channel listeners. Without bindings, using custom channels requires programming at the channel level as described in [Service Channel-Level Programming](../../../../docs/framework/wcf/extending/service-channel-level-programming.md) and [Client Channel-Level Programming](../../../../docs/framework/wcf/extending/client-channel-level-programming.md). This topic discusses the minimum requirement to enable using your channel in [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], the development of a <xref:System.ServiceModel.Channels.BindingElement> for your channel, and enable use from the application as described in step 4 of [Developing Channels](../../../../docs/framework/wcf/extending/developing-channels.md).  \n  \n## Overview  \n Creating a <xref:System.ServiceModel.Channels.BindingElement> for your channel enables developers to use it in an [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] application. <xref:System.ServiceModel.Channels.BindingElement> objects can be used from the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> class to connect an [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] application to your channel without having to the precise type information of your channel.  \n  \n Once a <xref:System.ServiceModel.Channels.BindingElement> has been created, you can enable more functionality depending upon your requirements by following the remaining channel development steps described in [Developing Channels](../../../../docs/framework/wcf/extending/developing-channels.md).  \n  \n## Adding a Binding Element  \n To implement a custom <xref:System.ServiceModel.Channels.BindingElement>, write a class that inherits from <xref:System.ServiceModel.Channels.BindingElement>. For example, if you have developed a `ChunkingChannel` that can break up large messages into chunks and reassemble them on the other end, you can use this channel in any binding by implementing a <xref:System.ServiceModel.Channels.BindingElement> and configuring the binding to use it. The remainder of this topic uses the `ChunkingChannel` as an example to demonstrate the requirements of implementing a binding element.  \n  \n A `ChunkingBindingElement` is responsible for creating the `ChunkingChannelFactory` and `ChunkingChannelListener`. It overrides <xref:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory%2A> and <xref:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener%2A> implementations, and checks that the type parameter is <xref:System.ServiceModel.Channels.IDuplexSessionChannel> (in our example this is the only channel shape supported by the `ChunkingChannel`) and that the other binding elements in the binding support this channel shape.  \n  \n <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> first checks that the requested channel shape can be built and then gets a list of message actions to be chunked. It then creates a new `ChunkingChannelFactory`, passing it the inner channel factory. (If you are creating a transport binding element, that element is the last one in the binding stack and therefore must create a channel listener or channel factory.)  \n  \n <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> has a similar implementation for creating `ChunkingChannelListener` and passing it the inner channel listener.  \n  \n As another example using a transport channel, the [Transport: UDP](../../../../docs/framework/wcf/samples/transport-udp.md) sample provides the following override.  \n  \n In the sample, the binding element is `UdpTransportBindingElement`, which derives from <xref:System.ServiceModel.Channels.TransportBindingElement>. It overrides the following methods to build the factories associated with the channel.  \n  \n```  \npublic IChannelFactory<TChannel> BuildChannelFactory<TChannel>(BindingContext context)  \n{  \n            return (IChannelFactory<TChannel>)(object)new UdpChannelFactory(this, context);  \n}  \n  \npublic IChannelListener<TChannel> BuildChannelListener<TChannel>(BindingContext context)  \n{  \n            return (IChannelListener<TChannel>)(object)new UdpChannelListener(this, context);  \n}  \n```  \n  \n It also contains members for cloning the `BindingElement` and returning our scheme (soap.udp).  \n  \n#### Protocol Binding Elements  \n New binding elements can replace or augment any of the included binding elements, adding new transports, encodings, or higher-level protocols. To create a new Protocol Binding Element, start by extending the <xref:System.ServiceModel.Channels.BindingElement> class. At a minimum, you must then implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A?displayProperty=fullName> and implement the `ChannelProtectionRequirements` using <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>. This returns the <xref:System.ServiceModel.Security.ChannelProtectionRequirements> for this binding element.  For more information, see <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.  \n  \n <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> should return a fresh copy of this binding element. As a best practice, we recommend that binding element authors implement <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> by using a copy constructor that calls the base copy constructor, then clones any additional fields in this class.  \n  \n#### Transport Binding Elements  \n To create a new Transport Binding Element, extend the <xref:System.ServiceModel.Channels.TransportBindingElement> interface. At a minimum, you must then implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method and the <xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A?displayProperty=fullName> property.  \n  \n <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> – Should return a fresh copy of this Binding Element.  As a best practice, we recommend that Binding Element authors implement Clone by way of a copy constructor that calls the base copy constructor, then clones any additional fields in this class.  \n  \n <xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A> – The <xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A> get property returns the URI scheme for the transport protocol represented by the binding element. For example, the <xref:System.ServiceModel.Channels.HttpTransportBindingElement?displayProperty=fullName> and the <xref:System.ServiceModel.Channels.TcpTransportBindingElement?displayProperty=fullName> return \"http\" and \"net.tcp\" from their respective <xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A> properties.  \n  \n#### Encoding Binding Elements  \n To create new Encoding Binding Elements, start by extending the <xref:System.ServiceModel.Channels.BindingElement> class and implementing the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement?displayProperty=fullName> class. At a minimum, you must then implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A>, <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A?displayProperty=fullName> methods and the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A?displayProperty=fullName> property.  \n  \n-   <xref:System.ServiceModel.Channels.BindingElement.Clone%2A>. Returns a fresh copy of this binding element. As a best practice, we recommend that binding element authors implement <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> by using a copy constructor that calls the base copy constructor, then clones any additional fields in this class.  \n  \n-   <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A>. Returns a <xref:System.ServiceModel.Channels.MessageEncoderFactory>, which provides a handle to the actual class that implements your new encoder and which should extend <xref:System.ServiceModel.Channels.MessageEncoder>. For more information, see <xref:System.ServiceModel.Channels.MessageEncoderFactory> and <xref:System.ServiceModel.Channels.MessageEncoder>.  \n  \n-   <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A>. Returns the <xref:System.ServiceModel.Channels.MessageVersion> used in this encoding, which represents the versions of SOAP and WS-Addressing in use.  \n  \n For a complete listing of optional methods and properties for user-defined encoding binding elements, see <xref:System.ServiceModel.Channels.MessageEncodingBindingElement>.  \n  \n For more information on creating a new binding element, see [Creating User-Defined Bindings](../../../../docs/framework/wcf/extending/creating-user-defined-bindings.md).  \n  \n Once you have created a binding element for your channel, return to the [Developing Channels](../../../../docs/framework/wcf/extending/developing-channels.md) topic to see whether you want to add configuration file support to your binding element, if and how to add metadata publication support, and whether and how to construct a user-defined binding that uses your binding element.  \n  \n## See Also  \n <xref:System.ServiceModel.Channels.BindingElement>   \n [Developing Channels](../../../../docs/framework/wcf/extending/developing-channels.md)   \n [Transport: UDP](../../../../docs/framework/wcf/samples/transport-udp.md)","nodes":[{"pos":[12,54],"content":"Creating a BindingElement | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Creating a BindingElement | Microsoft Docs","pos":[0,42]}]},{"pos":[353,378],"content":"Creating a BindingElement","linkify":"Creating a BindingElement","nodes":[{"content":"Creating a BindingElement","pos":[0,25]}]},{"content":"Bindings and binding elements (objects that extend <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.BindingElement?displayProperty=fullName&gt;</ph>, respectively) are the place where the <ph id=\"ph3\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> application model is associated with channel factories and channel listeners.","pos":[379,751],"source":"Bindings and binding elements (objects that extend <xref:System.ServiceModel.Channels.Binding?displayProperty=fullName> and <xref:System.ServiceModel.Channels.BindingElement?displayProperty=fullName>, respectively) are the place where the [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] application model is associated with channel factories and channel listeners."},{"content":"Without bindings, using custom channels requires programming at the channel level as described in <bpt id=\"p1\">[</bpt>Service Channel-Level Programming<ept id=\"p1\">](../../../../docs/framework/wcf/extending/service-channel-level-programming.md)</ept> and <bpt id=\"p2\">[</bpt>Client Channel-Level Programming<ept id=\"p2\">](../../../../docs/framework/wcf/extending/client-channel-level-programming.md)</ept>.","pos":[752,1082],"source":" Without bindings, using custom channels requires programming at the channel level as described in [Service Channel-Level Programming](../../../../docs/framework/wcf/extending/service-channel-level-programming.md) and [Client Channel-Level Programming](../../../../docs/framework/wcf/extending/client-channel-level-programming.md)."},{"content":"This topic discusses the minimum requirement to enable using your channel in <ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph>, the development of a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> for your channel, and enable use from the application as described in step 4 of <bpt id=\"p1\">[</bpt>Developing Channels<ept id=\"p1\">](../../../../docs/framework/wcf/extending/developing-channels.md)</ept>.","pos":[1083,1456],"source":" This topic discusses the minimum requirement to enable using your channel in [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)], the development of a <xref:System.ServiceModel.Channels.BindingElement> for your channel, and enable use from the application as described in step 4 of [Developing Channels](../../../../docs/framework/wcf/extending/developing-channels.md)."},{"pos":[1465,1473],"content":"Overview","linkify":"Overview","nodes":[{"content":"Overview","pos":[0,8]}]},{"content":"Creating a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> for your channel enables developers to use it in an <ph id=\"ph2\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> application.","pos":[1477,1659],"source":"Creating a <xref:System.ServiceModel.Channels.BindingElement> for your channel enables developers to use it in an [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] application."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> objects can be used from the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=fullName&gt;</ph> class to connect an <ph id=\"ph3\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> application to your channel without having to the precise type information of your channel.","pos":[1660,1971],"source":" <xref:System.ServiceModel.Channels.BindingElement> objects can be used from the <xref:System.ServiceModel.ServiceHost?displayProperty=fullName> class to connect an [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] application to your channel without having to the precise type information of your channel."},{"pos":[1978,2274],"content":"Once a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> has been created, you can enable more functionality depending upon your requirements by following the remaining channel development steps described in <bpt id=\"p1\">[</bpt>Developing Channels<ept id=\"p1\">](../../../../docs/framework/wcf/extending/developing-channels.md)</ept>.","source":"Once a <xref:System.ServiceModel.Channels.BindingElement> has been created, you can enable more functionality depending upon your requirements by following the remaining channel development steps described in [Developing Channels](../../../../docs/framework/wcf/extending/developing-channels.md)."},{"pos":[2283,2307],"content":"Adding a Binding Element","linkify":"Adding a Binding Element","nodes":[{"content":"Adding a Binding Element","pos":[0,24]}]},{"content":"To implement a custom <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>, write a class that inherits from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>.","pos":[2311,2469],"source":"To implement a custom <xref:System.ServiceModel.Channels.BindingElement>, write a class that inherits from <xref:System.ServiceModel.Channels.BindingElement>."},{"content":"For example, if you have developed a <ph id=\"ph1\">`ChunkingChannel`</ph> that can break up large messages into chunks and reassemble them on the other end, you can use this channel in any binding by implementing a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> and configuring the binding to use it.","pos":[2470,2755],"source":" For example, if you have developed a `ChunkingChannel` that can break up large messages into chunks and reassemble them on the other end, you can use this channel in any binding by implementing a <xref:System.ServiceModel.Channels.BindingElement> and configuring the binding to use it."},{"content":"The remainder of this topic uses the <ph id=\"ph1\">`ChunkingChannel`</ph> as an example to demonstrate the requirements of implementing a binding element.","pos":[2756,2891],"source":" The remainder of this topic uses the `ChunkingChannel` as an example to demonstrate the requirements of implementing a binding element."},{"content":"A <ph id=\"ph1\">`ChunkingBindingElement`</ph> is responsible for creating the <ph id=\"ph2\">`ChunkingChannelFactory`</ph> and <ph id=\"ph3\">`ChunkingChannelListener`</ph>.","pos":[2898,3012],"source":"A `ChunkingBindingElement` is responsible for creating the `ChunkingChannelFactory` and `ChunkingChannelListener`."},{"content":"It overrides <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener%2A&gt;</ph> implementations, and checks that the type parameter is <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> (in our example this is the only channel shape supported by the <ph id=\"ph4\">`ChunkingChannel`</ph>) and that the other binding elements in the binding support this channel shape.","pos":[3013,3459],"source":" It overrides <xref:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory%2A> and <xref:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener%2A> implementations, and checks that the type parameter is <xref:System.ServiceModel.Channels.IDuplexSessionChannel> (in our example this is the only channel shape supported by the `ChunkingChannel`) and that the other binding elements in the binding support this channel shape."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> first checks that the requested channel shape can be built and then gets a list of message actions to be chunked.","pos":[3466,3653],"source":"<xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> first checks that the requested channel shape can be built and then gets a list of message actions to be chunked."},{"content":"It then creates a new <ph id=\"ph1\">`ChunkingChannelFactory`</ph>, passing it the inner channel factory.","pos":[3654,3739],"source":" It then creates a new `ChunkingChannelFactory`, passing it the inner channel factory."},{"content":"(If you are creating a transport binding element, that element is the last one in the binding stack and therefore must create a channel listener or channel factory.)","pos":[3740,3905]},{"pos":[3912,4097],"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> has a similar implementation for creating <ph id=\"ph2\">`ChunkingChannelListener`</ph> and passing it the inner channel listener.","source":"<xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> has a similar implementation for creating `ChunkingChannelListener` and passing it the inner channel listener."},{"pos":[4104,4267],"content":"As another example using a transport channel, the <bpt id=\"p1\">[</bpt>Transport: UDP<ept id=\"p1\">](../../../../docs/framework/wcf/samples/transport-udp.md)</ept> sample provides the following override.","source":"As another example using a transport channel, the [Transport: UDP](../../../../docs/framework/wcf/samples/transport-udp.md) sample provides the following override."},{"content":"In the sample, the binding element is <ph id=\"ph1\">`UdpTransportBindingElement`</ph>, which derives from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph>.","pos":[4274,4421],"source":"In the sample, the binding element is `UdpTransportBindingElement`, which derives from <xref:System.ServiceModel.Channels.TransportBindingElement>."},{"content":"It overrides the following methods to build the factories associated with the channel.","pos":[4422,4508]},{"pos":[4919,5013],"content":"It also contains members for cloning the <ph id=\"ph1\">`BindingElement`</ph> and returning our scheme (soap.udp).","source":"It also contains members for cloning the `BindingElement` and returning our scheme (soap.udp)."},{"pos":[5024,5049],"content":"Protocol Binding Elements","linkify":"Protocol Binding Elements","nodes":[{"content":"Protocol Binding Elements","pos":[0,25]}]},{"content":"New binding elements can replace or augment any of the included binding elements, adding new transports, encodings, or higher-level protocols.","pos":[5053,5195]},{"content":"To create a new Protocol Binding Element, start by extending the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> class.","pos":[5196,5318],"source":" To create a new Protocol Binding Element, start by extending the <xref:System.ServiceModel.Channels.BindingElement> class."},{"content":"At a minimum, you must then implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A?displayProperty=fullName&gt;</ph> and implement the <ph id=\"ph2\">`ChannelProtectionRequirements`</ph> using <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName&gt;</ph>.","pos":[5319,5587],"source":" At a minimum, you must then implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A?displayProperty=fullName> and implement the `ChannelProtectionRequirements` using <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>."},{"content":"This returns the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> for this binding element.","pos":[5588,5696],"source":" This returns the <xref:System.ServiceModel.Security.ChannelProtectionRequirements> for this binding element."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.","pos":[5698,5790],"source":"  For more information, see <xref:System.ServiceModel.Security.ChannelProtectionRequirements>."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> should return a fresh copy of this binding element.","pos":[5797,5908],"source":"<xref:System.ServiceModel.Channels.BindingElement.Clone%2A> should return a fresh copy of this binding element."},{"content":"As a best practice, we recommend that binding element authors implement <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> by using a copy constructor that calls the base copy constructor, then clones any additional fields in this class.","pos":[5909,6155],"source":" As a best practice, we recommend that binding element authors implement <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> by using a copy constructor that calls the base copy constructor, then clones any additional fields in this class."},{"pos":[6166,6192],"content":"Transport Binding Elements","linkify":"Transport Binding Elements","nodes":[{"content":"Transport Binding Elements","pos":[0,26]}]},{"content":"To create a new Transport Binding Element, extend the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph> interface.","pos":[6196,6320],"source":"To create a new Transport Binding Element, extend the <xref:System.ServiceModel.Channels.TransportBindingElement> interface."},{"content":"At a minimum, you must then implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A?displayProperty=fullName&gt;</ph> property.","pos":[6321,6542],"source":" At a minimum, you must then implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method and the <xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A?displayProperty=fullName> property."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> – Should return a fresh copy of this Binding Element.","pos":[6549,6662],"source":"<xref:System.ServiceModel.Channels.BindingElement.Clone%2A> – Should return a fresh copy of this Binding Element."},{"content":"As a best practice, we recommend that Binding Element authors implement Clone by way of a copy constructor that calls the base copy constructor, then clones any additional fields in this class.","pos":[6664,6857]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A&gt;</ph> – The <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A&gt;</ph> get property returns the URI scheme for the transport protocol represented by the binding element.","pos":[6864,7108],"source":"<xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A> – The <xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A> get property returns the URI scheme for the transport protocol represented by the binding element."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.HttpTransportBindingElement?displayProperty=fullName&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.TcpTransportBindingElement?displayProperty=fullName&gt;</ph> return \"http\" and \"net.tcp\" from their respective <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A&gt;</ph> properties.","pos":[7109,7442],"source":" For example, the <xref:System.ServiceModel.Channels.HttpTransportBindingElement?displayProperty=fullName> and the <xref:System.ServiceModel.Channels.TcpTransportBindingElement?displayProperty=fullName> return \"http\" and \"net.tcp\" from their respective <xref:System.ServiceModel.Channels.TransportBindingElement.Scheme%2A> properties."},{"pos":[7453,7478],"content":"Encoding Binding Elements","linkify":"Encoding Binding Elements","nodes":[{"content":"Encoding Binding Elements","pos":[0,25]}]},{"content":"To create new Encoding Binding Elements, start by extending the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> class and implementing the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement?displayProperty=fullName&gt;</ph> class.","pos":[7482,7721],"source":"To create new Encoding Binding Elements, start by extending the <xref:System.ServiceModel.Channels.BindingElement> class and implementing the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement?displayProperty=fullName> class."},{"content":"At a minimum, you must then implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A?displayProperty=fullName&gt;</ph> methods and the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A?displayProperty=fullName&gt;</ph> property.","pos":[7722,8081],"source":" At a minimum, you must then implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A>, <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A?displayProperty=fullName> methods and the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A?displayProperty=fullName> property."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph>.","pos":[8091,8151],"source":"<xref:System.ServiceModel.Channels.BindingElement.Clone%2A>."},{"content":"Returns a fresh copy of this binding element.","pos":[8152,8197]},{"content":"As a best practice, we recommend that binding element authors implement <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> by using a copy constructor that calls the base copy constructor, then clones any additional fields in this class.","pos":[8198,8444],"source":" As a best practice, we recommend that binding element authors implement <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> by using a copy constructor that calls the base copy constructor, then clones any additional fields in this class."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph>.","pos":[8454,8551],"source":"<xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A>."},{"content":"Returns a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory&gt;</ph>, which provides a handle to the actual class that implements your new encoder and which should extend <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph>.","pos":[8552,8773],"source":" Returns a <xref:System.ServiceModel.Channels.MessageEncoderFactory>, which provides a handle to the actual class that implements your new encoder and which should extend <xref:System.ServiceModel.Channels.MessageEncoder>."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph>.","pos":[8774,8913],"source":" For more information, see <xref:System.ServiceModel.Channels.MessageEncoderFactory> and <xref:System.ServiceModel.Channels.MessageEncoder>."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A&gt;</ph>.","pos":[8923,9007],"source":"<xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A>."},{"content":"Returns the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph> used in this encoding, which represents the versions of SOAP and WS-Addressing in use.","pos":[9008,9157],"source":" Returns the <xref:System.ServiceModel.Channels.MessageVersion> used in this encoding, which represents the versions of SOAP and WS-Addressing in use."},{"content":"For a complete listing of optional methods and properties for user-defined encoding binding elements, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph>.","pos":[9164,9336],"source":"For a complete listing of optional methods and properties for user-defined encoding binding elements, see <xref:System.ServiceModel.Channels.MessageEncodingBindingElement>."},{"pos":[9343,9512],"content":"For more information on creating a new binding element, see <bpt id=\"p1\">[</bpt>Creating User-Defined Bindings<ept id=\"p1\">](../../../../docs/framework/wcf/extending/creating-user-defined-bindings.md)</ept>.","source":"For more information on creating a new binding element, see [Creating User-Defined Bindings](../../../../docs/framework/wcf/extending/creating-user-defined-bindings.md)."},{"pos":[9519,9902],"content":"Once you have created a binding element for your channel, return to the <bpt id=\"p1\">[</bpt>Developing Channels<ept id=\"p1\">](../../../../docs/framework/wcf/extending/developing-channels.md)</ept> topic to see whether you want to add configuration file support to your binding element, if and how to add metadata publication support, and whether and how to construct a user-defined binding that uses your binding element.","source":"Once you have created a binding element for your channel, return to the [Developing Channels](../../../../docs/framework/wcf/extending/developing-channels.md) topic to see whether you want to add configuration file support to your binding element, if and how to add metadata publication support, and whether and how to construct a user-defined binding that uses your binding element."},{"pos":[9911,9919],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>","pos":[9923,9973],"source":"<xref:System.ServiceModel.Channels.BindingElement> "},{"content":"<bpt id=\"p1\"> [</bpt>Developing Channels<ept id=\"p1\">](../../../../docs/framework/wcf/extending/developing-channels.md)</ept><ph id=\"ph1\"> </ph>","pos":[9977,10065],"source":" [Developing Channels](../../../../docs/framework/wcf/extending/developing-channels.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Transport: UDP<ept id=\"p1\">](../../../../docs/framework/wcf/samples/transport-udp.md)</ept>","pos":[10068,10142],"source":" [Transport: UDP](../../../../docs/framework/wcf/samples/transport-udp.md)"}]}