{"content":"---\ntitle: \"- operator - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"-_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"- operator [C#]\"\n  - \"subtraction operator (-) [C#]\"\nms.assetid: 4de7a4fa-c69d-48e6-aff1-3130af970b2d\n---\n# - operator (C# Reference)\n\nThe `-` operator can function as either a unary or a binary operator.\n\n## Remarks\n\nUnary `-` operators are predefined for all numeric types. The result of a unary `-` operation on a numeric type is the numeric negation of the operand.\n\nBinary `-` operators are predefined for all numeric and enumeration types to subtract the second operand from the first.\n\nDelegate types also provide a binary `-` operator, which performs delegate removal.\n\nUser-defined types can overload the unary `-` and binary `-` operators. For more information, see [operator keyword](../keywords/operator.md).\n\n## Example\n\n[!code-csharp[csRefOperators#40](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csrefOperators/CS/csrefOperators.cs#40)]\n\n## See also\n\n- [C# Reference](../index.md)\n- [C# Programming Guide](../../programming-guide/index.md)\n- [C# operators](index.md)","nodes":[{"pos":[4,244],"embed":true,"restype":"x-metadata","content":"title: \"- operator - C# Reference\"\nms.custom: seodec18\n\nms.date: 07/20/2015\nf1_keywords: \n  - \"-_CSharpKeyword\"\nhelpviewer_keywords: \n  - \"- operator [C#]\"\n  - \"subtraction operator (-) [C#]\"\nms.assetid: 4de7a4fa-c69d-48e6-aff1-3130af970b2d","nodes":[{"content":"- operator - C# Reference","nodes":[{"pos":[2,25],"content":"operator - C# Reference","nodes":[{"content":"operator - C# Reference","pos":[0,23]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[251,276],"content":"- operator (C# Reference)","linkify":"- operator (C# Reference)","nodes":[{"content":"- operator (C# Reference)","pos":[0,25]}]},{"pos":[278,347],"content":"The <ph id=\"ph1\">`-`</ph> operator can function as either a unary or a binary operator.","source":"The `-` operator can function as either a unary or a binary operator."},{"pos":[352,359],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Unary <ph id=\"ph1\">`-`</ph> operators are predefined for all numeric types.","pos":[361,418],"source":"Unary `-` operators are predefined for all numeric types."},{"content":"The result of a unary <ph id=\"ph1\">`-`</ph> operation on a numeric type is the numeric negation of the operand.","pos":[419,512],"source":" The result of a unary `-` operation on a numeric type is the numeric negation of the operand."},{"pos":[514,634],"content":"Binary <ph id=\"ph1\">`-`</ph> operators are predefined for all numeric and enumeration types to subtract the second operand from the first.","source":"Binary `-` operators are predefined for all numeric and enumeration types to subtract the second operand from the first."},{"pos":[636,719],"content":"Delegate types also provide a binary <ph id=\"ph1\">`-`</ph> operator, which performs delegate removal.","source":"Delegate types also provide a binary `-` operator, which performs delegate removal."},{"content":"User-defined types can overload the unary <ph id=\"ph1\">`-`</ph> and binary <ph id=\"ph2\">`-`</ph> operators.","pos":[721,792],"source":"User-defined types can overload the unary `-` and binary `-` operators."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>operator keyword<ept id=\"p1\">](../keywords/operator.md)</ept>.","pos":[793,863],"source":" For more information, see [operator keyword](../keywords/operator.md)."},{"pos":[868,875],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1002,1010],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1014,1041],"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../index.md)</ept>","source":"[C# Reference](../index.md)"},{"pos":[1044,1100],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../programming-guide/index.md)"},{"pos":[1103,1127],"content":"<bpt id=\"p1\">[</bpt>C# operators<ept id=\"p1\">](index.md)</ept>","source":"[C# operators](index.md)"}]}