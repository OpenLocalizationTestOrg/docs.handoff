<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="workflow-service-host-extensibility.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e03fe98ba39fd02720674decb04e46cf2f8bda1e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\workflow-service-host-extensibility.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74fb51e1d1492d4d12a75cf5ab18ea09bf86bcc7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6aab2a8c844055926ffb7de3f8023af119a5e164</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Workflow Service Host Extensibility | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Workflow Service Host Extensibility</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>provides the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> class for hosting workflow services.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class is used when you are self-hosting a workflow service in a managed application or a Windows service.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This class is also used when hosting a workflow service with Internet Information Services (IIS) or Windows Process Activation Service (WAS).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> class provides extension points that allow you to add custom extensions, change the idle behavior, and host non-service workflows (workflows that do not use messaging activities).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Workflow Service Host Extensions</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> contains a <ph id="ph2">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions%2A&gt;</ph> property of type <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager&gt;</ph> that provides methods to add extensions to the <ph id="ph4">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> method to add an extension for each workflow service instance.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The delegate specified is called to create a new extension when a workflow service instance is created or loaded from a persistence store.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> method to add an extension for each workflow service host, one instance of the extension is shared for all workflow service instances.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>React to Unhandled Exceptions</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> enables you to specify the action to take if an unhandled exception occurs within a workflow service.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior.Action%2A&gt;</ph> property specifies one of the <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction&gt;</ph> values:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction&gt;</ph> – Aborts the workflow service instance.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction&gt;</ph> – Rolls back to the last persisted state and suspends the workflow service instance.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This only occurs if the workflow has already been persisted at least once.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If not the workflow instance is aborted.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction&gt;</ph> – Cancels the instance.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction&gt;</ph> – Terminates the instance.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This behavior can be configured in code as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It can also be configured in a configuration file as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Hosting Non-Service Workflows</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> can be used to host non-service workflows, or workflows that either do not begin with a <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activity or workflows that do not use the messaging activities.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Workflow services normally begin with a <ph id="ph1">&lt;xref:System.ServiceModel.Activities.Receive&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost&gt;</ph> receives a message for a workflow service, if it is not already running (or persisted) a new workflow service instance is created.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If a workflow does not begin with a Receive activity, it cannot be started by sending a message because there is no activity to receive the message.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To host a non-service workflow, derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowHostingEndpoint&gt;</ph> and override <ph id="ph2">&lt;xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId%2A&gt;</ph> if you want to provide a preferred instance ID.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext%2A&gt;</ph> to create a custom workflow creation context or populate an instance of the existing <ph id="ph2">&lt;xref:System.ServiceModel.Activities.WorkflowCreationContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark%2A&gt;</ph> to manually extract the bookmark from the incoming message.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you override this method, you must invoke <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowHostingResponseContext.SendResponse%2A&gt;</ph> in its body so as to respond to the message sent to the WorkflowHostingEndpoint.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you do not do so, a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A&gt;</ph> limit may be eventually exceeded.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In two-way contracts, you may be able to detect your   failure to invoke <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowHostingResponseContext.SendResponse%2A&gt;</ph> because of the client’s failure to receive a response.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In one-way contracts, you may not recognize the mistake of failing to call <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowHostingResponseContext.SendResponse%2A&gt;</ph> until it’s too late, after the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A&gt;</ph> throttle limit is exceeded.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, please see the <bpt id="p1">[</bpt>WorkflowHostingEndpoint Resume Bookmark<ept id="p1">](../../../../docs/framework/windows-workflow-foundation/samples/workflowhostingendpoint-resume-bookmark.md)</ept>To create a new instance of a non-service workflow, declare a service contract that defines an operation that creates a new instance.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The creation operation should take an IDictionary<ph id="ph1">\&lt;</ph>string, object&gt; to pass any required workflow parameters.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This contract is implicitly implemented by the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowHostingEndpoint&gt;</ph>-derived class.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When hosting the workflow, add an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Activities.WorkflowHostingEndpoint&gt;</ph>-derived class to the host by calling <ph id="ph2">&lt;xref:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint%2A&gt;</ph> and call <ph id="ph3">&lt;!--zz xref:System.ServiceModel.Activities.WorkflowServiceHost.Open%2A--&gt;</ph> <ph id="ph4">`System.ServiceModel.Activities.WorkflowServiceHost.Open`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To create an instance of the workflow, create a <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> of your service contract type and call <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can then call the create operation defined in your service contract.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Workflow Services<ept id="p1">](../../../../docs/framework/wcf/feature-details/workflow-services.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Messaging Activities<ept id="p1">](../../../../docs/framework/wcf/feature-details/messaging-activities.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>