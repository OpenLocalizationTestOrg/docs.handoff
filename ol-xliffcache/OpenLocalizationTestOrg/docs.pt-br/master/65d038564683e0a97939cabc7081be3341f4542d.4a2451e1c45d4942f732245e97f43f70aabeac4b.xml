{"content":"---\ntitle: \"CASE (Entity SQL)\"\nms.date: \"03/30/2017\"\nms.assetid: 26a47873-e87d-4ba2-9e2c-3787c21efe89\n---\n# CASE (Entity SQL)\nEvaluates a set of `Boolean` expressions to determine the result.  \n  \n## Syntax  \n  \n```  \nCASE  \n     WHEN Boolean_expression THEN result_expression   \n    [ ...n ]   \n     [   \n    ELSE else_result_expression   \n     ]   \nEND  \n```  \n  \n## Arguments  \n `n`  \n Is a placeholder that indicates that multiple WHEN `Boolean_expression` THEN `result_expression` clauses can be used.  \n  \n THEN `result_expression`  \n Is the expression returned when `Boolean_expression` evaluates to `true`. `result expression` is any valid expression.  \n  \n ELSE `else_result_expression`  \n Is the expression returned if no comparison operation evaluates to `true`. If this argument is omitted and no comparison operation evaluates to `true`, CASE returns null. `else_result_expression` is any valid expression. The data types of `else_result_expression` and any `result_expression` must be the same or must be an implicit conversion.  \n  \n WHEN `Boolean_expression`  \n Is the `Boolean` expression evaluated when the searched CASE format is used. `Boolean_expression` is any valid `Boolean` expression.  \n  \n## Return Value  \n Returns the highest precedence type from the set of types in the `result_expression` and the optional `else_result_expression`.  \n  \n## Remarks  \n The [!INCLUDE[esql](../../../../../../includes/esql-md.md)] case expression resembles the [!INCLUDE[tsql](../../../../../../includes/tsql-md.md)] case expression. You use the case expression to make a series of conditional tests to determine which expression will yield the appropriate result. This form of the case expression applies to a series of one or more `Boolean` expressions to determine the correct resulting expression.  \n  \n The CASE function evaluates `Boolean_expression` for each WHEN clause in the order specified, and returns `result_expression` of the first `Boolean_expression` that evaluates to `true`. The remaining expressions are not evaluated. If no `Boolean_expression` evaluates to `true`, the Database Engine returns the `else_result_expression` if an ELSE clause is specified, or a null value if no ELSE clause is specified.  \n  \n A CASE statement cannot return a multiset.  \n  \n## Example  \n The following Entity SQL query uses the CASE expression to evaluate a set of `Boolean` expressions in order to determine the result. The query is based on the AdventureWorks Sales Model. To compile and run this query, follow these steps:  \n  \n1.  Follow the procedure in [How to: Execute a Query that Returns PrimitiveType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-primitivetype-results.md).  \n  \n2.  Pass the following query as an argument to the `ExecutePrimitiveTypeQuery` method:  \n  \n [!code-csharp[DP EntityServices Concepts 2#CASE_WHEN_THEN_ELSE](../../../../../../samples/snippets/csharp/VS_Snippets_Data/dp entityservices concepts 2/cs/entitysql.cs#case_when_then_else)]  \n  \n## See also\n\n- [THEN](../../../../../../docs/framework/data/adonet/ef/language-reference/then-entity-sql.md)\n- [SELECT](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)\n- [Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)\n","nodes":[{"pos":[4,101],"embed":true,"restype":"x-metadata","content":"title: \"CASE (Entity SQL)\"\nms.date: \"03/30/2017\"\nms.assetid: 26a47873-e87d-4ba2-9e2c-3787c21efe89","nodes":[{"content":"CASE (Entity SQL)","nodes":[{"pos":[0,17],"content":"CASE (Entity SQL)","nodes":[{"content":"CASE (Entity SQL)","pos":[0,17]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[108,125],"content":"CASE (Entity SQL)","linkify":"CASE (Entity SQL)","nodes":[{"content":"CASE (Entity SQL)","pos":[0,17]}]},{"pos":[126,191],"content":"Evaluates a set of <ph id=\"ph1\">`Boolean`</ph> expressions to determine the result.","source":"Evaluates a set of `Boolean` expressions to determine the result."},{"pos":[200,206],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[369,378],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"Is a placeholder that indicates that multiple WHEN <ph id=\"ph1\">`Boolean_expression`</ph> THEN <ph id=\"ph2\">`result_expression`</ph> clauses can be used.","pos":[389,506],"source":"Is a placeholder that indicates that multiple WHEN `Boolean_expression` THEN `result_expression` clauses can be used."},{"content":"THEN <ph id=\"ph1\">`result_expression`</ph>","pos":[513,537],"source":"THEN `result_expression`"},{"content":"Is the expression returned when <ph id=\"ph1\">`Boolean_expression`</ph> evaluates to <ph id=\"ph2\">`true`</ph>.","pos":[541,614],"source":"Is the expression returned when `Boolean_expression` evaluates to `true`."},{"content":"<ph id=\"ph1\">`result expression`</ph> is any valid expression.","pos":[615,659],"source":"`result expression` is any valid expression."},{"content":"ELSE <ph id=\"ph1\">`else_result_expression`</ph>","pos":[666,695],"source":"ELSE `else_result_expression`"},{"content":"Is the expression returned if no comparison operation evaluates to <ph id=\"ph1\">`true`</ph>.","pos":[699,773],"source":"Is the expression returned if no comparison operation evaluates to `true`."},{"content":"If this argument is omitted and no comparison operation evaluates to <ph id=\"ph1\">`true`</ph>, CASE returns null.","pos":[774,869],"source":" If this argument is omitted and no comparison operation evaluates to `true`, CASE returns null."},{"content":"<ph id=\"ph1\">`else_result_expression`</ph> is any valid expression.","pos":[870,919],"source":"`else_result_expression` is any valid expression."},{"content":"The data types of <ph id=\"ph1\">`else_result_expression`</ph> and any <ph id=\"ph2\">`result_expression`</ph> must be the same or must be an implicit conversion.","pos":[920,1042],"source":" The data types of `else_result_expression` and any `result_expression` must be the same or must be an implicit conversion."},{"content":"WHEN <ph id=\"ph1\">`Boolean_expression`</ph>","pos":[1049,1074],"source":"WHEN `Boolean_expression`"},{"content":"Is the <ph id=\"ph1\">`Boolean`</ph> expression evaluated when the searched CASE format is used.","pos":[1078,1154],"source":"Is the `Boolean` expression evaluated when the searched CASE format is used."},{"content":"<ph id=\"ph1\">`Boolean_expression`</ph> is any valid <ph id=\"ph2\">`Boolean`</ph> expression.","pos":[1155,1210],"source":"`Boolean_expression` is any valid `Boolean` expression."},{"pos":[1219,1231],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1235,1362],"content":"Returns the highest precedence type from the set of types in the <ph id=\"ph1\">`result_expression`</ph> and the optional <ph id=\"ph2\">`else_result_expression`</ph>.","source":"Returns the highest precedence type from the set of types in the `result_expression` and the optional `else_result_expression`."},{"pos":[1371,1378],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">[!INCLUDE[esql](../../../../../../includes/esql-md.md)]</ph> case expression resembles the <ph id=\"ph2\">[!INCLUDE[tsql](../../../../../../includes/tsql-md.md)]</ph> case expression.","pos":[1382,1544],"source":"The [!INCLUDE[esql](../../../../../../includes/esql-md.md)] case expression resembles the [!INCLUDE[tsql](../../../../../../includes/tsql-md.md)] case expression."},{"content":"You use the case expression to make a series of conditional tests to determine which expression will yield the appropriate result.","pos":[1545,1675]},{"content":"This form of the case expression applies to a series of one or more <ph id=\"ph1\">`Boolean`</ph> expressions to determine the correct resulting expression.","pos":[1676,1812],"source":" This form of the case expression applies to a series of one or more `Boolean` expressions to determine the correct resulting expression."},{"content":"The CASE function evaluates <ph id=\"ph1\">`Boolean_expression`</ph> for each WHEN clause in the order specified, and returns <ph id=\"ph2\">`result_expression`</ph> of the first <ph id=\"ph3\">`Boolean_expression`</ph> that evaluates to <ph id=\"ph4\">`true`</ph>.","pos":[1819,2004],"source":"The CASE function evaluates `Boolean_expression` for each WHEN clause in the order specified, and returns `result_expression` of the first `Boolean_expression` that evaluates to `true`."},{"content":"The remaining expressions are not evaluated.","pos":[2005,2049]},{"content":"If no <ph id=\"ph1\">`Boolean_expression`</ph> evaluates to <ph id=\"ph2\">`true`</ph>, the Database Engine returns the <ph id=\"ph3\">`else_result_expression`</ph> if an ELSE clause is specified, or a null value if no ELSE clause is specified.","pos":[2050,2234],"source":" If no `Boolean_expression` evaluates to `true`, the Database Engine returns the `else_result_expression` if an ELSE clause is specified, or a null value if no ELSE clause is specified."},{"content":"A CASE statement cannot return a multiset.","pos":[2241,2283]},{"pos":[2292,2299],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following Entity SQL query uses the CASE expression to evaluate a set of <ph id=\"ph1\">`Boolean`</ph> expressions in order to determine the result.","pos":[2303,2435],"source":"The following Entity SQL query uses the CASE expression to evaluate a set of `Boolean` expressions in order to determine the result."},{"content":"The query is based on the AdventureWorks Sales Model.","pos":[2436,2489]},{"content":"To compile and run this query, follow these steps:","pos":[2490,2540]},{"pos":[2550,2745],"content":"Follow the procedure in <bpt id=\"p1\">[</bpt>How to: Execute a Query that Returns PrimitiveType Results<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-primitivetype-results.md)</ept>.","source":"Follow the procedure in [How to: Execute a Query that Returns PrimitiveType Results](../../../../../../docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-primitivetype-results.md)."},{"pos":[2755,2837],"content":"Pass the following query as an argument to the <ph id=\"ph1\">`ExecutePrimitiveTypeQuery`</ph> method:","source":"Pass the following query as an argument to the `ExecutePrimitiveTypeQuery` method:"},{"pos":[3042,3050],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3054,3147],"content":"<bpt id=\"p1\">[</bpt>THEN<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/then-entity-sql.md)</ept>","source":"[THEN](../../../../../../docs/framework/data/adonet/ef/language-reference/then-entity-sql.md)"},{"pos":[3150,3247],"content":"<bpt id=\"p1\">[</bpt>SELECT<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept>","source":"[SELECT](../../../../../../docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)"},{"pos":[3250,3364],"content":"<bpt id=\"p1\">[</bpt>Entity SQL Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)</ept>","source":"[Entity SQL Reference](../../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-reference.md)"}]}