{"content":"---\ntitle: \"Contextual Keywords (C# Reference) | Microsoft Docs\"\nms.date: \"2017-03-07\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"contextual keywords [C#]\"\nms.assetid: 7c76bc29-a754-4389-b0ab-f6b441018298\ncaps.latest.revision: 19\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Contextual Keywords (C# Reference)\nA contextual keyword is used to provide a specific meaning in the code, but it is not a reserved word in C#. The following contextual keywords are introduced in this section:  \n  \n|Keyword|Description|  \n|-------------|-----------------|  \n|[add](../../../csharp/language-reference/keywords/add.md)|Defines a custom event accessor that is invoked when client code subscribes to the event.|  \n|[async](../../../csharp/language-reference/keywords/async.md)|Indicates that the modified method, lambda expression, or anonymous method is asynchronous.|  \n|[await](../../../csharp/language-reference/keywords/await.md)|Suspends an async method until an awaited task is completed.|  \n|[dynamic](../../../csharp/language-reference/keywords/dynamic.md)|Defines a reference type that enables operations in which it occurs to bypass compile-time type checking.|  \n|[get](../../../csharp/language-reference/keywords/get.md)|Defines an accessor method for a property or an indexer.|  \n|[global](../../../csharp/language-reference/keywords/global.md)|Specifies the default global namespace, which is otherwise unnamed.|  \n|[partial](../../../csharp/language-reference/keywords/partial-type.md)|Defines partial classes, structs, and interfaces throughout the same compilation unit.|  \n|[remove](../../../csharp/language-reference/keywords/remove.md)|Defines a custom event accessor that is invoked when client code unsubscribes from the event.|  \n|[set](../../../csharp/language-reference/keywords/set.md)|Defines an accessor method for a property or an indexer.|  \n|[value](../../../csharp/language-reference/keywords/value.md)|Used to set accessors and to add or remove event handlers.|  \n|[var](../../../csharp/language-reference/keywords/var.md)|Enables the type of a variable declared at method scope to be determined by the compiler.|  \n|[when](when.md)|Specifies a filter condition for a `catch` block or the `case` label of a `switch` statement.|\n|[where](../../../csharp/language-reference/keywords/where-generic-type-constraint.md)|Adds constraints to a generic declaration. (See also [where](../../../csharp/language-reference/keywords/where-clause.md)).|  \n|[yield](../../../csharp/language-reference/keywords/yield.md)|Used in an iterator block to return a value to the enumerator object or to signal the end of iteration.|  \n  \n All query keywords introduced in C# 3.0 are also contextual. For more information, see [Query Keywords (LINQ)](../../../csharp/language-reference/keywords/query-keywords.md).  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Keywords](../../../csharp/language-reference/keywords/index.md)","nodes":[{"pos":[4,532],"nodes":[{"content":"Contextual Keywords (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,51],"content":"Contextual Keywords (C# Reference) | Microsoft Docs","nodes":[{"content":"Contextual Keywords (C# Reference) | Microsoft Docs","pos":[0,51]}]}],"pos":[6,60],"yaml":true}],"content":"title: \"Contextual Keywords (C# Reference) | Microsoft Docs\"\nms.date: \"2017-03-07\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"contextual keywords [C#]\"\nms.assetid: 7c76bc29-a754-4389-b0ab-f6b441018298\ncaps.latest.revision: 19\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[539,573],"content":"Contextual Keywords (C# Reference)","linkify":"Contextual Keywords (C# Reference)","nodes":[{"content":"Contextual Keywords (C# Reference)","pos":[0,34]}]},{"content":"A contextual keyword is used to provide a specific meaning in the code, but it is not a reserved word in C#.","pos":[574,682]},{"content":"The following contextual keywords are introduced in this section:","pos":[683,748]},{"content":"Keyword","pos":[755,762]},{"content":"Description","pos":[763,774]},{"pos":[815,872],"content":"<bpt id=\"p1\">[</bpt>add<ept id=\"p1\">](../../../csharp/language-reference/keywords/add.md)</ept>","source":"[add](../../../csharp/language-reference/keywords/add.md)"},{"content":"Defines a custom event accessor that is invoked when client code subscribes to the event.","pos":[873,962]},{"pos":[967,1028],"content":"<bpt id=\"p1\">[</bpt>async<ept id=\"p1\">](../../../csharp/language-reference/keywords/async.md)</ept>","source":"[async](../../../csharp/language-reference/keywords/async.md)"},{"content":"Indicates that the modified method, lambda expression, or anonymous method is asynchronous.","pos":[1029,1120]},{"pos":[1125,1186],"content":"<bpt id=\"p1\">[</bpt>await<ept id=\"p1\">](../../../csharp/language-reference/keywords/await.md)</ept>","source":"[await](../../../csharp/language-reference/keywords/await.md)"},{"content":"Suspends an async method until an awaited task is completed.","pos":[1187,1247]},{"pos":[1252,1317],"content":"<bpt id=\"p1\">[</bpt>dynamic<ept id=\"p1\">](../../../csharp/language-reference/keywords/dynamic.md)</ept>","source":"[dynamic](../../../csharp/language-reference/keywords/dynamic.md)"},{"content":"Defines a reference type that enables operations in which it occurs to bypass compile-time type checking.","pos":[1318,1423]},{"pos":[1428,1485],"content":"<bpt id=\"p1\">[</bpt>get<ept id=\"p1\">](../../../csharp/language-reference/keywords/get.md)</ept>","source":"[get](../../../csharp/language-reference/keywords/get.md)"},{"content":"Defines an accessor method for a property or an indexer.","pos":[1486,1542]},{"pos":[1547,1610],"content":"<bpt id=\"p1\">[</bpt>global<ept id=\"p1\">](../../../csharp/language-reference/keywords/global.md)</ept>","source":"[global](../../../csharp/language-reference/keywords/global.md)"},{"content":"Specifies the default global namespace, which is otherwise unnamed.","pos":[1611,1678]},{"pos":[1683,1753],"content":"<bpt id=\"p1\">[</bpt>partial<ept id=\"p1\">](../../../csharp/language-reference/keywords/partial-type.md)</ept>","source":"[partial](../../../csharp/language-reference/keywords/partial-type.md)"},{"content":"Defines partial classes, structs, and interfaces throughout the same compilation unit.","pos":[1754,1840]},{"pos":[1845,1908],"content":"<bpt id=\"p1\">[</bpt>remove<ept id=\"p1\">](../../../csharp/language-reference/keywords/remove.md)</ept>","source":"[remove](../../../csharp/language-reference/keywords/remove.md)"},{"content":"Defines a custom event accessor that is invoked when client code unsubscribes from the event.","pos":[1909,2002]},{"pos":[2007,2064],"content":"<bpt id=\"p1\">[</bpt>set<ept id=\"p1\">](../../../csharp/language-reference/keywords/set.md)</ept>","source":"[set](../../../csharp/language-reference/keywords/set.md)"},{"content":"Defines an accessor method for a property or an indexer.","pos":[2065,2121]},{"pos":[2126,2187],"content":"<bpt id=\"p1\">[</bpt>value<ept id=\"p1\">](../../../csharp/language-reference/keywords/value.md)</ept>","source":"[value](../../../csharp/language-reference/keywords/value.md)"},{"content":"Used to set accessors and to add or remove event handlers.","pos":[2188,2246]},{"pos":[2251,2308],"content":"<bpt id=\"p1\">[</bpt>var<ept id=\"p1\">](../../../csharp/language-reference/keywords/var.md)</ept>","source":"[var](../../../csharp/language-reference/keywords/var.md)"},{"content":"Enables the type of a variable declared at method scope to be determined by the compiler.","pos":[2309,2398]},{"pos":[2403,2418],"content":"<bpt id=\"p1\">[</bpt>when<ept id=\"p1\">](when.md)</ept>","source":"[when](when.md)"},{"pos":[2419,2512],"content":"Specifies a filter condition for a <ph id=\"ph1\">`catch`</ph> block or the <ph id=\"ph2\">`case`</ph> label of a <ph id=\"ph3\">`switch`</ph> statement.","source":"Specifies a filter condition for a `catch` block or the `case` label of a `switch` statement."},{"pos":[2515,2600],"content":"<bpt id=\"p1\">[</bpt>where<ept id=\"p1\">](../../../csharp/language-reference/keywords/where-generic-type-constraint.md)</ept>","source":"[where](../../../csharp/language-reference/keywords/where-generic-type-constraint.md)"},{"content":"Adds constraints to a generic declaration.","pos":[2601,2643]},{"content":"(See also <bpt id=\"p1\">[</bpt>where<ept id=\"p1\">](../../../csharp/language-reference/keywords/where-clause.md)</ept>).","pos":[2644,2724],"source":" (See also [where](../../../csharp/language-reference/keywords/where-clause.md))."},{"pos":[2729,2790],"content":"<bpt id=\"p1\">[</bpt>yield<ept id=\"p1\">](../../../csharp/language-reference/keywords/yield.md)</ept>","source":"[yield](../../../csharp/language-reference/keywords/yield.md)"},{"content":"Used in an iterator block to return a value to the enumerator object or to signal the end of iteration.","pos":[2791,2894]},{"content":"All query keywords introduced in C# 3.0 are also contextual.","pos":[2902,2962]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Query Keywords (LINQ)<ept id=\"p1\">](../../../csharp/language-reference/keywords/query-keywords.md)</ept>.","pos":[2963,3076],"source":" For more information, see [Query Keywords (LINQ)](../../../csharp/language-reference/keywords/query-keywords.md)."},{"pos":[3085,3093],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3097,3157],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3161,3228],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept>","pos":[3232,3299],"source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md)"}]}