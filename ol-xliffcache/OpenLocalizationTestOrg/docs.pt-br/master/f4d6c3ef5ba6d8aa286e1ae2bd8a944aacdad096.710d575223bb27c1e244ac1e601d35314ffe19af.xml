{"content":"---\ntitle: \"How to: Write Text to Files in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"files [Visual Basic], writing to\"\n  - \"text, writing to files\"\n  - \"writing to files [Visual Basic]\"\n  - \"examples [Visual Basic], text files\"\nms.assetid: 304956eb-530d-4df7-b48f-9b4d1f2581a0\n---\n# How to: Write Text to Files in Visual Basic\nThe <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> method can be used to write text to files. If the specified file does not exist, it is created.  \n  \n## Procedure  \n  \n#### To write text to a file  \n  \n-   Use the `WriteAllText` method to write text to a file, specifying the file and text to be written. This example writes the line `\"This is new text.\"` to the file named `test.txt`, appending the text to any existing text in the file.  \n  \n     [!code-vb[VbFileIOWrite#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbFileIOWrite/VB/Class1.vb#3)]  \n  \n#### To write a series of strings to a file  \n  \n-   Loop through the string collection. Use the `WriteAllText` method to write text to a file, specifying the target file and string to be added and setting `append` to `True`.  \n  \n     This example writes the names of the files in the `Documents and Settings` directory to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n     [!code-vb[VbFileIOWrite#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbFileIOWrite/VB/Class1.vb#4)]  \n  \n## Robust Programming  \n The following conditions may cause an exception:  \n  \n-   The path is not valid for one of the following reasons: it is a zero-length string, it contains only white space, it contains invalid characters, or it is a device path (starts with \\\\\\\\.\\\\) (<xref:System.ArgumentException>).  \n  \n-   The path is not valid because it is `Nothing` (<xref:System.ArgumentNullException>).  \n  \n-   `File` points to a path that does not exist (<xref:System.IO.FileNotFoundException> or <xref:System.IO.DirectoryNotFoundException>).  \n  \n-   The file is in use by another process, or an I/O error occurs (<xref:System.IO.IOException>).  \n  \n-   The path exceeds the system-defined maximum length (<xref:System.IO.PathTooLongException>).  \n  \n-   A file or directory name in the path contains a colon (:) or is in an invalid format (<xref:System.NotSupportedException>).  \n  \n-   The user lacks necessary permissions to view the path (<xref:System.Security.SecurityException>).  \n  \n-   The disk is full, and the call to `WriteAllText` fails (<xref:System.IO.IOException>).  \n  \n If you are running in a partial-trust context, the code might throw an exception due to insufficient privileges. For more information, see [Code Access Security Basics](../../../../framework/misc/code-access-security-basics.md).  \n  \n## See also\n\n- <xref:Microsoft.VisualBasic.FileIO.FileSystem>\n- <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>\n- [How to: Read from Text Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)\n","nodes":[{"pos":[4,295],"embed":true,"restype":"x-metadata","content":"title: \"How to: Write Text to Files in Visual Basic\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"files [Visual Basic], writing to\"\n  - \"text, writing to files\"\n  - \"writing to files [Visual Basic]\"\n  - \"examples [Visual Basic], text files\"\nms.assetid: 304956eb-530d-4df7-b48f-9b4d1f2581a0","nodes":[{"content":"How to: Write Text to Files in Visual Basic","nodes":[{"pos":[0,43],"content":"How to: Write Text to Files in Visual Basic","nodes":[{"content":"How to: Write Text to Files in Visual Basic","pos":[0,43]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[302,345],"content":"How to: Write Text to Files in Visual Basic","linkify":"How to: Write Text to Files in Visual Basic","nodes":[{"content":"How to: Write Text to Files in Visual Basic","pos":[0,43]}]},{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A&gt;</ph> method can be used to write text to files.","pos":[346,455],"source":"The <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> method can be used to write text to files."},{"content":"If the specified file does not exist, it is created.","pos":[456,508]},{"pos":[517,526],"content":"Procedure","linkify":"Procedure","nodes":[{"content":"Procedure","pos":[0,9]}]},{"pos":[537,560],"content":"To write text to a file","linkify":"To write text to a file","nodes":[{"content":"To write text to a file","pos":[0,23]}]},{"content":"Use the <ph id=\"ph1\">`WriteAllText`</ph> method to write text to a file, specifying the file and text to be written.","pos":[570,668],"source":"Use the `WriteAllText` method to write text to a file, specifying the file and text to be written."},{"content":"This example writes the line <ph id=\"ph1\">`\"This is new text.\"`</ph> to the file named <ph id=\"ph2\">`test.txt`</ph>, appending the text to any existing text in the file.","pos":[669,802],"source":" This example writes the line `\"This is new text.\"` to the file named `test.txt`, appending the text to any existing text in the file."},{"pos":[933,971],"content":"To write a series of strings to a file","linkify":"To write a series of strings to a file","nodes":[{"content":"To write a series of strings to a file","pos":[0,38]}]},{"content":"Loop through the string collection.","pos":[981,1016]},{"content":"Use the <ph id=\"ph1\">`WriteAllText`</ph> method to write text to a file, specifying the target file and string to be added and setting <ph id=\"ph2\">`append`</ph> to <ph id=\"ph3\">`True`</ph>.","pos":[1017,1153],"source":" Use the `WriteAllText` method to write text to a file, specifying the target file and string to be added and setting `append` to `True`."},{"pos":[1164,1332],"content":"This example writes the names of the files in the <ph id=\"ph1\">`Documents and Settings`</ph> directory to <ph id=\"ph2\">`FileList.txt`</ph>, inserting a carriage return between each for better readability.","source":"This example writes the names of the files in the `Documents and Settings` directory to `FileList.txt`, inserting a carriage return between each for better readability."},{"pos":[1461,1479],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"The following conditions may cause an exception:","pos":[1483,1531]},{"pos":[1541,1766],"content":"The path is not valid for one of the following reasons: it is a zero-length string, it contains only white space, it contains invalid characters, or it is a device path (starts with <ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\\\</ph>.<ph id=\"ph3\">\\\\</ph>) (<ph id=\"ph4\">&lt;xref:System.ArgumentException&gt;</ph>).","source":"The path is not valid for one of the following reasons: it is a zero-length string, it contains only white space, it contains invalid characters, or it is a device path (starts with \\\\\\\\.\\\\) (<xref:System.ArgumentException>)."},{"pos":[1776,1860],"content":"The path is not valid because it is <ph id=\"ph1\">`Nothing`</ph> (<ph id=\"ph2\">&lt;xref:System.ArgumentNullException&gt;</ph>).","source":"The path is not valid because it is `Nothing` (<xref:System.ArgumentNullException>)."},{"pos":[1870,2002],"content":"<ph id=\"ph1\">`File`</ph> points to a path that does not exist (<ph id=\"ph2\">&lt;xref:System.IO.FileNotFoundException&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph>).","source":"`File` points to a path that does not exist (<xref:System.IO.FileNotFoundException> or <xref:System.IO.DirectoryNotFoundException>)."},{"pos":[2012,2105],"content":"The file is in use by another process, or an I/O error occurs (<ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>).","source":"The file is in use by another process, or an I/O error occurs (<xref:System.IO.IOException>)."},{"pos":[2115,2206],"content":"The path exceeds the system-defined maximum length (<ph id=\"ph1\">&lt;xref:System.IO.PathTooLongException&gt;</ph>).","source":"The path exceeds the system-defined maximum length (<xref:System.IO.PathTooLongException>)."},{"pos":[2216,2339],"content":"A file or directory name in the path contains a colon (:) or is in an invalid format (<ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph>).","source":"A file or directory name in the path contains a colon (:) or is in an invalid format (<xref:System.NotSupportedException>)."},{"pos":[2349,2446],"content":"The user lacks necessary permissions to view the path (<ph id=\"ph1\">&lt;xref:System.Security.SecurityException&gt;</ph>).","source":"The user lacks necessary permissions to view the path (<xref:System.Security.SecurityException>)."},{"pos":[2456,2542],"content":"The disk is full, and the call to <ph id=\"ph1\">`WriteAllText`</ph> fails (<ph id=\"ph2\">&lt;xref:System.IO.IOException&gt;</ph>).","source":"The disk is full, and the call to `WriteAllText` fails (<xref:System.IO.IOException>)."},{"content":"If you are running in a partial-trust context, the code might throw an exception due to insufficient privileges.","pos":[2549,2661]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Code Access Security Basics<ept id=\"p1\">](../../../../framework/misc/code-access-security-basics.md)</ept>.","pos":[2662,2777],"source":" For more information, see [Code Access Security Basics](../../../../framework/misc/code-access-security-basics.md)."},{"pos":[2786,2794],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2912,3052],"content":"<bpt id=\"p1\">[</bpt>How to: Read from Text Files<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)</ept>","source":"[How to: Read from Text Files](../../../../visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)"}]}