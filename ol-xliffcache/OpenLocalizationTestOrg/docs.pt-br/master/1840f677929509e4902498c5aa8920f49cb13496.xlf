<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="flowchart-workflows.md" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1840f677929509e4902498c5aa8920f49cb13496</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\flowchart-workflows.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3be9b54c2af4c84657c5ae1e6bdd16df780644a9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0181f0d82fe8aa648c644bd331884d534b4b3384</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Flowchart Workflows</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Flowchart Workflows</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A flowchart is a well-known paradigm for designing programs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Flowchart activity is typically used to implement non-sequential workflows, but can be used for sequential workflows if no <ph id="ph1">`FlowDecision`</ph> nodes are used.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Flowchart workflow structure</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A Flowchart activity is an activity that contains a collection of activities to be executed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Flowcharts also contain flow control elements such as <ph id="ph1">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph> that direct execution between contained activities based on the values of variables.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Types of flow nodes</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Different types of elements are used depending on the type of flow control required when the element executes.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Types of flowchart elements include:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FlowStep`</ph> - Models one step of execution in the flowchart.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FlowDecision`</ph> - Branches execution based on a Boolean condition, similar to <ph id="ph2">&lt;xref:System.Activities.Statements.If&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`FlowSwitch`</ph> â€“ Branches execution based on an exclusive switch, similar to <ph id="ph2">&lt;xref:System.Activities.Statements.Switch%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Each link has an <ph id="ph1">`Action`</ph> property that defines a <ph id="ph2">&lt;xref:System.Activities.ActivityAction&gt;</ph> that can be used to execute child activities, and one or more <ph id="ph3">`Next`</ph> properties that define which element or elements to execute when the current element finishes execution.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creating a basic activity sequence with a FlowStep node</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To model a basic sequence in which two activities execute in turn, the <ph id="ph1">`FlowStep`</ph> element is used.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the following example, two <ph id="ph1">`FlowStep`</ph> elements are used to execute two activities in sequence.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creating a conditional flowchart with a FlowDecision node</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To model a conditional flow node in a flowchart workflow (that is, to create a link that functions as a traditional flowchart's decision symbol), a <ph id="ph1">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> node is used.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.FlowDecision.Condition%2A&gt;</ph> property of the node is set to an expression that defines the condition, and the <ph id="ph2">&lt;xref:System.Activities.Statements.FlowDecision.True%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Activities.Statements.FlowDecision.False%2A&gt;</ph> properties are set to <ph id="ph4">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> instances to be executed if the expression evaluates to <ph id="ph5">`true`</ph> or <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example shows how to define a workflow that uses a <ph id="ph1">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> node.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Creating an exclusive switch with a FlowSwitch node</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To model a flowchart in which one exclusive path is selected based on a matching value, the <ph id="ph1">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph> node is used.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.FlowSwitch%601.Expression%2A&gt;</ph> property is set to a <ph id="ph2">&lt;xref:System.Activities.Activity%601&gt;</ph> with a type parameter of <ph id="ph3">&lt;xref:System.Object&gt;</ph> that defines the value to match choices against.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.FlowSwitch%601.Cases%2A&gt;</ph> property defines a dictionary of keys and <ph id="ph2">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> objects to match against the conditional expression, and a set of <ph id="ph3">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> objects that define how execution should flow if the given case matches the conditional expression.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph> also defines a <ph id="ph2">&lt;xref:System.Activities.Statements.FlowSwitch%601.Default%2A&gt;</ph> property that defines how execution should flow if no cases match the condition expression.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to define a workflow that uses a <ph id="ph1">&lt;xref:System.Activities.Statements.FlowSwitch%601&gt;</ph> element.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>