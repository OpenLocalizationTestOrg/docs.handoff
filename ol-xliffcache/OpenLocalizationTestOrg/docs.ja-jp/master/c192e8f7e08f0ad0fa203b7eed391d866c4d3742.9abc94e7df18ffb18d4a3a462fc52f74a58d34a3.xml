{"content":"---\ntitle: \"WebContentTypeMapper Sample | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: a4fe59e7-44d8-43c6-a1f8-40c45223adca\ncaps.latest.revision: 15\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# WebContentTypeMapper Sample\nThis sample demonstrates how to map new content types to [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] message body formats.  \n  \n The <xref:System.ServiceModel.Description.WebHttpEndpoint> element plugs in the Web message encoder, which allows [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] to receive JSON, XML, or raw binary messages at the same endpoint. The encoder determines the body format of the message by looking at the HTTP content-type of the request. This sample introduces the <xref:System.ServiceModel.Channels.WebContentTypeMapper> class, which allows the user to control the mapping between content type and body format.  \n  \n [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] provides a set of default mappings for content types. For example, `application/json` maps to JSON and `text/xml` maps to XML. Any content type that is not mapped to JSON or XML is mapped to raw binary format.  \n  \n In some scenarios (for example, push-style APIs), the service developer does not control the content type returned by the client. For example, clients might return JSON as `text/javascript` instead of `application/json`. In this case, the service developer must provide a type that derives from <xref:System.ServiceModel.Channels.WebContentTypeMapper> to handle the given content type correctly, as shown in the following sample code.  \n  \n```  \npublic class JsonContentTypeMapper : WebContentTypeMapper  \n{  \n    public override WebContentFormat  \n               GetMessageFormatForContentType(string contentType)  \n    {  \n        if (contentType == \"text/javascript\")  \n        {  \n            return WebContentFormat.Json;  \n        }  \n        else  \n        {  \n            return WebContentFormat.Default;  \n        }  \n    }  \n}  \n  \n```  \n  \n The type must override the <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29> method. The method must evaluate the `contentType` argument and return one of the following values: <xref:System.ServiceModel.Channels.WebContentFormat>, <xref:System.ServiceModel.Channels.WebContentFormat>, <xref:System.ServiceModel.Channels.WebContentFormat>, or <xref:System.ServiceModel.Channels.WebContentFormat>. Returning <xref:System.ServiceModel.Channels.WebContentFormat> defers to the default Web message encoder mappings. In the previous sample code, the `text/javascript` content type is mapped to JSON, and all other mappings remain unchanged.  \n  \n To use the `JsonContentTypeMapper` class, use the following in your Web.config:  \n  \n```  \n<system.serviceModel>  \n  <standardEndpoints>  \n    <webHttpEndpoint>  \n      <standardEndpoint name=\"\" contentTypeMapper=\"Microsoft.Samples.WebContentTypeMapper.JsonContentTypeMapper, JsonContentTypeMapper, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </webHttpEndpoint>  \n  </standardEndpoints>  \n</system.serviceModel>  \n```  \n  \n To verify the requirement for using the JsonContentTypeMapper, remove the contentTypeMapper attribute from the above configuration file. The client page fails to load when attempting to use `text/javascript` to send JSON content.  \n  \n### To set up, build, and run the sample  \n  \n1.  Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md).  \n  \n2.  Build the solution WebContentTypeMapperSample.sln as described in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md).  \n  \n3.  Navigate to http://localhost/ServiceModelSamples/JCTMClientPage.htm (do not open JCTMClientPage.htm in the browser from within the project directory).  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WCF\\Extensibility\\Ajax\\WebContentTypeMapper`  \n  \n## See Also","nodes":[{"pos":[12,56],"content":"WebContentTypeMapper Sample | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"WebContentTypeMapper Sample | Microsoft Docs","pos":[0,44]}]},{"pos":[355,382],"content":"WebContentTypeMapper Sample","linkify":"WebContentTypeMapper Sample","nodes":[{"content":"WebContentTypeMapper Sample","pos":[0,27]}]},{"pos":[383,517],"content":"This sample demonstrates how to map new content types to <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> message body formats.","source":"This sample demonstrates how to map new content types to [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] message body formats."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.WebHttpEndpoint&gt;</ph> element plugs in the Web message encoder, which allows <ph id=\"ph2\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> to receive JSON, XML, or raw binary messages at the same endpoint.","pos":[524,760],"source":"The <xref:System.ServiceModel.Description.WebHttpEndpoint> element plugs in the Web message encoder, which allows [!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] to receive JSON, XML, or raw binary messages at the same endpoint."},{"content":"The encoder determines the body format of the message by looking at the HTTP content-type of the request.","pos":[761,866]},{"content":"This sample introduces the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebContentTypeMapper&gt;</ph> class, which allows the user to control the mapping between content type and body format.","pos":[867,1040],"source":" This sample introduces the <xref:System.ServiceModel.Channels.WebContentTypeMapper> class, which allows the user to control the mapping between content type and body format."},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> provides a set of default mappings for content types.","pos":[1047,1156],"source":"[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)] provides a set of default mappings for content types."},{"content":"For example, <ph id=\"ph1\">`application/json`</ph> maps to JSON and <ph id=\"ph2\">`text/xml`</ph> maps to XML.","pos":[1157,1229],"source":" For example, `application/json` maps to JSON and `text/xml` maps to XML."},{"content":"Any content type that is not mapped to JSON or XML is mapped to raw binary format.","pos":[1230,1312]},{"content":"In some scenarios (for example, push-style APIs), the service developer does not control the content type returned by the client.","pos":[1319,1448]},{"content":"For example, clients might return JSON as <ph id=\"ph1\">`text/javascript`</ph> instead of <ph id=\"ph2\">`application/json`</ph>.","pos":[1449,1539],"source":" For example, clients might return JSON as `text/javascript` instead of `application/json`."},{"content":"In this case, the service developer must provide a type that derives from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebContentTypeMapper&gt;</ph> to handle the given content type correctly, as shown in the following sample code.","pos":[1540,1753],"source":" In this case, the service developer must provide a type that derives from <xref:System.ServiceModel.Channels.WebContentTypeMapper> to handle the given content type correctly, as shown in the following sample code."},{"content":"The type must override the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29&gt;</ph> method.","pos":[2171,2312],"source":"The type must override the <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29> method."},{"content":"The method must evaluate the <ph id=\"ph1\">`contentType`</ph> argument and return one of the following values: <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.WebContentFormat&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.WebContentFormat&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.WebContentFormat&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.ServiceModel.Channels.WebContentFormat&gt;</ph>.","pos":[2313,2623],"source":" The method must evaluate the `contentType` argument and return one of the following values: <xref:System.ServiceModel.Channels.WebContentFormat>, <xref:System.ServiceModel.Channels.WebContentFormat>, <xref:System.ServiceModel.Channels.WebContentFormat>, or <xref:System.ServiceModel.Channels.WebContentFormat>."},{"content":"Returning <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebContentFormat&gt;</ph> defers to the default Web message encoder mappings.","pos":[2624,2738],"source":" Returning <xref:System.ServiceModel.Channels.WebContentFormat> defers to the default Web message encoder mappings."},{"content":"In the previous sample code, the <ph id=\"ph1\">`text/javascript`</ph> content type is mapped to JSON, and all other mappings remain unchanged.","pos":[2739,2862],"source":" In the previous sample code, the `text/javascript` content type is mapped to JSON, and all other mappings remain unchanged."},{"pos":[2869,2948],"content":"To use the <ph id=\"ph1\">`JsonContentTypeMapper`</ph> class, use the following in your Web.config:","source":"To use the `JsonContentTypeMapper` class, use the following in your Web.config:"},{"content":"To verify the requirement for using the JsonContentTypeMapper, remove the contentTypeMapper attribute from the above configuration file.","pos":[3313,3449]},{"content":"The client page fails to load when attempting to use <ph id=\"ph1\">`text/javascript`</ph> to send JSON content.","pos":[3450,3542],"source":" The client page fails to load when attempting to use `text/javascript` to send JSON content."},{"pos":[3552,3588],"content":"To set up, build, and run the sample","linkify":"To set up, build, and run the sample","nodes":[{"content":"To set up, build, and run the sample","pos":[0,36]}]},{"pos":[3598,3797],"content":"Ensure that you have performed the <bpt id=\"p1\">[</bpt>One-Time Setup Procedure for the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)</ept>.","source":"Ensure that you have performed the [One-Time Setup Procedure for the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/one-time-setup-procedure-for-the-wcf-samples.md)."},{"pos":[3807,3993],"content":"Build the solution WebContentTypeMapperSample.sln as described in <bpt id=\"p1\">[</bpt>Building the Windows Communication Foundation Samples<ept id=\"p1\">](../../../../docs/framework/wcf/samples/building-the-samples.md)</ept>.","source":"Build the solution WebContentTypeMapperSample.sln as described in [Building the Windows Communication Foundation Samples](../../../../docs/framework/wcf/samples/building-the-samples.md)."},{"content":"Navigate to http://localhost/ServiceModelSamples/JCTMClientPage.htm (do not open JCTMClientPage.htm in the browser from within the project directory).","pos":[4003,4153]},{"pos":[4161,4293],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[4347,4673],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[4674,4724]},{"pos":[4820,4828],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}