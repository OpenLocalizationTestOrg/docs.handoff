{"content":"---\ntitle: \"-define (Visual Basic)\"\nms.date: 03/10/2018\nhelpviewer_keywords: \n  - \"-d compiler option [Visual Basic]\"\n  - \"/d compiler option [Visual Basic]\"\n  - \"-define compiler option [Visual Basic]\"\n  - \"d compiler option [Visual Basic]\"\n  - \"/define compiler option [Visual Basic]\"\n  - \"define compiler option [Visual Basic]\"\nms.assetid: f735c57d-1cf9-4f2f-a26f-0de630fd4077\n---\n# -define (Visual Basic)\nDefines conditional compiler constants.  \n  \n## Syntax  \n  \n```  \n-define:[\"]symbol[=value][,symbol[=value]][\"]  \n' -or-  \n-d:[\"]symbol[=value][,symbol[=value]][\"]  \n```  \n  \n## Arguments  \n  \n|Term|Definition|  \n|---|---|  \n|`symbol`|Required. The symbol to define.|  \n|`value`|Optional. The value to assign `symbol`. If `value` is a string, it must be surrounded by backslash/quotation-mark sequences (\\\\\") instead of quotation marks. If no value is specified, then it is taken to be True.|  \n  \n## Remarks  \n The `-define` option has an effect similar to using a `#Const` preprocessor directive in your source file, except that constants defined with `-define` are public and apply to all files in the project.  \n  \n You can use symbols created by this option with the `#If`...`Then`...`#Else` directive to compile source files conditionally.  \n  \n `-d` is the short form of `-define`.  \n  \n You can define multiple symbols with `-define` by using a comma to separate symbol definitions.  \n  \n|To set /define in the Visual Studio integrated development environment|  \n|---|  \n|1.  Have a project selected in **Solution Explorer**. On the **Project** menu, click **Properties**. <br />2.  Click the **Compile** tab.<br />3.  Click **Advanced**.<br />4.  Modify the value in the **Custom Constants** box.|  \n  \n## Example  \n The following code defines and then uses two conditional compiler constants.  \n  \n [!code-vb[VbVbalrCompiler#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCompiler/VB/Class1.vb#45)]  \n  \n## See also\n\n- [Visual Basic Command-Line Compiler](../../../visual-basic/reference/command-line-compiler/index.md)\n- [#If...Then...#Else Directives](../../../visual-basic/language-reference/directives/if-then-else-directives.md)\n- [#Const Directive](../../../visual-basic/language-reference/directives/const-directive.md)\n- [Sample Compilation Command Lines](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)\n","nodes":[{"pos":[4,379],"embed":true,"restype":"x-metadata","content":"title: \"-define (Visual Basic)\"\nms.date: 03/10/2018\nhelpviewer_keywords: \n  - \"-d compiler option [Visual Basic]\"\n  - \"/d compiler option [Visual Basic]\"\n  - \"-define compiler option [Visual Basic]\"\n  - \"d compiler option [Visual Basic]\"\n  - \"/define compiler option [Visual Basic]\"\n  - \"define compiler option [Visual Basic]\"\nms.assetid: f735c57d-1cf9-4f2f-a26f-0de630fd4077","nodes":[{"content":"-define (Visual Basic)","nodes":[{"pos":[0,22],"content":"-define (Visual Basic)","nodes":[{"content":"-define (Visual Basic)","pos":[0,22]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[386,408],"content":"-define (Visual Basic)","linkify":"-define (Visual Basic)","nodes":[{"content":"-define (Visual Basic)","pos":[0,22]}]},{"content":"Defines conditional compiler constants.","pos":[409,448]},{"pos":[457,463],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[587,596],"content":"Arguments","linkify":"Arguments","nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"Term","pos":[603,607]},{"content":"Definition","pos":[608,618]},{"content":"Required.","pos":[644,653]},{"content":"The symbol to define.","pos":[654,675]},{"content":"Optional.","pos":[688,697]},{"content":"The value to assign <ph id=\"ph1\">`symbol`</ph>.","pos":[698,727],"source":" The value to assign `symbol`."},{"content":"If <ph id=\"ph1\">`value`</ph> is a string, it must be surrounded by backslash/quotation-mark sequences (<ph id=\"ph2\">\\\\</ph>\") instead of quotation marks.","pos":[728,845],"source":" If `value` is a string, it must be surrounded by backslash/quotation-mark sequences (\\\\\") instead of quotation marks."},{"content":"If no value is specified, then it is taken to be True.","pos":[846,900]},{"pos":[910,917],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[921,1122],"content":"The <ph id=\"ph1\">`-define`</ph> option has an effect similar to using a <ph id=\"ph2\">`#Const`</ph> preprocessor directive in your source file, except that constants defined with <ph id=\"ph3\">`-define`</ph> are public and apply to all files in the project.","source":"The `-define` option has an effect similar to using a `#Const` preprocessor directive in your source file, except that constants defined with `-define` are public and apply to all files in the project."},{"pos":[1129,1254],"content":"You can use symbols created by this option with the <ph id=\"ph1\">`#If`</ph>...<ph id=\"ph2\">`Then`</ph>...<ph id=\"ph3\">`#Else`</ph> directive to compile source files conditionally.","source":"You can use symbols created by this option with the `#If`...`Then`...`#Else` directive to compile source files conditionally."},{"pos":[1261,1297],"content":"<ph id=\"ph1\">`-d`</ph> is the short form of <ph id=\"ph2\">`-define`</ph>.","source":"`-d` is the short form of `-define`."},{"pos":[1304,1399],"content":"You can define multiple symbols with <ph id=\"ph1\">`-define`</ph> by using a comma to separate symbol definitions.","source":"You can define multiple symbols with `-define` by using a comma to separate symbol definitions."},{"content":"To set /define in the Visual Studio integrated development environment","pos":[1406,1476]},{"content":"1.  Have a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>.","pos":[1489,1542],"source":"1.  Have a project selected in **Solution Explorer**."},{"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept>.","pos":[1543,1589],"source":" On the **Project** menu, click **Properties**."},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Compile<ept id=\"p1\">**</ept> tab.","pos":[1596,1626],"source":"2.  Click the **Compile** tab."},{"content":"3.  Click <bpt id=\"p1\">**</bpt>Advanced<ept id=\"p1\">**</ept>.","pos":[1632,1655],"source":"3.  Click **Advanced**."},{"content":"4.  Modify the value in the <bpt id=\"p1\">**</bpt>Custom Constants<ept id=\"p1\">**</ept> box.","pos":[1661,1714],"source":"4.  Modify the value in the **Custom Constants** box."},{"pos":[1724,1731],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code defines and then uses two conditional compiler constants.","pos":[1735,1811]},{"pos":[1942,1950],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1954,2054],"content":"<bpt id=\"p1\">[</bpt>Visual Basic Command-Line Compiler<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/index.md)</ept>","source":"[Visual Basic Command-Line Compiler](../../../visual-basic/reference/command-line-compiler/index.md)"},{"pos":[2057,2168],"content":"<bpt id=\"p1\">[</bpt>#If...Then...#Else Directives<ept id=\"p1\">](../../../visual-basic/language-reference/directives/if-then-else-directives.md)</ept>","source":"[#If...Then...#Else Directives](../../../visual-basic/language-reference/directives/if-then-else-directives.md)"},{"pos":[2171,2261],"content":"<bpt id=\"p1\">[</bpt>#Const Directive<ept id=\"p1\">](../../../visual-basic/language-reference/directives/const-directive.md)</ept>","source":"[#Const Directive](../../../visual-basic/language-reference/directives/const-directive.md)"},{"pos":[2264,2389],"content":"<bpt id=\"p1\">[</bpt>Sample Compilation Command Lines<ept id=\"p1\">](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)</ept>","source":"[Sample Compilation Command Lines](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)"}]}