<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-group-sort-and-filter-data-in-the-datagrid-control.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81fdb0a6d5602f612c55d7e790ca9a0fe56c144e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\controls\how-to-group-sort-and-filter-data-in-the-datagrid-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edbca02e6714a8edd889861e70df7f263db0c7a4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c73724702da3313dc514308cddd34d6fb414df6b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Group, sort, and filter Data in the DataGrid control</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Group, sort, and filter data in the DataGrid control</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It is often useful to view data in a <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> in different ways by grouping, sorting, and filtering the data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To group, sort, and filter the data in a <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, you bind it to a <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> that supports these functions.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can then work with the data in the <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> without affecting the underlying source data.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The changes in the collection view are reflected in the <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> user interface (UI).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> class provides grouping and sorting functionality for a data source that implements the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph> class enables you to set the properties of a <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> from XAML.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this example, a collection of <ph id="ph1">`Task`</ph> objects is bound to a <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph> is used as the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Grouping, sorting, and filtering are performed on the <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph> and are displayed in the <ph id="ph2">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> UI.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Grouped data in a DataGrid<ept id="p1">]</ept><bpt id="p2">(././media/wpf-datagridgroups.png "</bpt>WPF_DataGridGroups<ept id="p2">")</ept> Grouped data in a DataGrid</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Using a CollectionViewSource as an ItemsSource</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To group, sort, and filter data in a <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> control, you bind the <ph id="ph2">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> to a <ph id="ph3">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> that supports these functions.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> is bound to a <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph> that provides these functions for a <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of <ph id="ph4">`Task`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To bind a DataGrid to a CollectionViewSource</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create a data collection that implements the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> to create your collection, you should create a new class that inherits from <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> instead of instantiating an instance of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This enables you to data bind to the collection in XAML.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The objects in the collection must implement the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> changed interface and the <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface in order for the <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> to respond correctly to property changes and edits.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Implement Property Change Notification<ept id="p1">](../data/how-to-implement-property-change-notification.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In XAML, create an instance of the collection class and set the <bpt id="p1">[</bpt>x:Key Directive<ept id="p1">](../../xaml-services/x-key-directive.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In XAML, create an instance of the <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph> class, set the <bpt id="p1">[</bpt>x:Key Directive<ept id="p1">](../../xaml-services/x-key-directive.md)</ept>, and set the instance of your collection class as the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource.Source%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> class, and set the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To access the <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph> from your code, use the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A&gt;</ph> method to get a reference to the <ph id="ph3">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Grouping items in a DataGrid</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To specify how items are grouped in a <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, you use the <ph id="ph2">&lt;xref:System.Windows.Data.PropertyGroupDescription&gt;</ph> type to group the items in the source view.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To group items in a DataGrid using XAML</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Data.PropertyGroupDescription&gt;</ph> that specifies the property to group by.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can specify the property in XAML or in code.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In XAML, set the <ph id="ph1">&lt;xref:System.Windows.Data.PropertyGroupDescription.PropertyName%2A&gt;</ph> to the name of the property to group by.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In code, pass the name of the property to group by to the constructor.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add the <ph id="ph1">&lt;xref:System.Windows.Data.PropertyGroupDescription&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource.GroupDescriptions%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Add additional instances of <ph id="ph1">&lt;xref:System.Windows.Data.PropertyGroupDescription&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource.GroupDescriptions%2A&gt;</ph> collection to add more levels of grouping.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To remove a group, remove the <ph id="ph1">&lt;xref:System.Windows.Data.PropertyGroupDescription&gt;</ph> from the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource.GroupDescriptions%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To remove all groups, call the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource.GroupDescriptions%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When items are grouped in the <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, you can define a <ph id="ph2">&lt;xref:System.Windows.Controls.GroupStyle&gt;</ph> that specifies the appearance of each group.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You apply the <ph id="ph1">&lt;xref:System.Windows.Controls.GroupStyle&gt;</ph> by adding it to the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.GroupStyle%2A&gt;</ph> collection of the DataGrid.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you have multiple levels of grouping, you can apply different styles to each group level.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Styles are applied in the order in which they are defined.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, if you define two styles, the first will be applied to top level row groups.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The second style will be applied to all row groups at the second level and lower.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Controls.GroupStyle&gt;</ph> is the <ph id="ph3">&lt;xref:System.Windows.Data.CollectionViewGroup&gt;</ph> that the group represents.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To change the appearance of row group headers</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Controls.GroupStyle&gt;</ph> that defines the appearance of the row group.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Put the <ph id="ph1">&lt;xref:System.Windows.Controls.GroupStyle&gt;</ph> inside the <ph id="ph2">`&lt;DataGrid.GroupStyle&gt;`</ph> tags.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Sorting items in a DataGrid</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To specify how items are sorted in a <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, you use the <ph id="ph2">&lt;xref:System.ComponentModel.SortDescription&gt;</ph> type to sort the items in the source view.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To sort items in a DataGrid</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.ComponentModel.SortDescription&gt;</ph> that specifies the property to sort by.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can specify the property in XAML or in code.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In XAML, set the <ph id="ph1">&lt;xref:System.ComponentModel.SortDescription.PropertyName%2A&gt;</ph> to the name of the property to sort by.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In code, pass the name of the property to sort by and the <ph id="ph1">&lt;xref:System.ComponentModel.ListSortDirection&gt;</ph> to the constructor.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Add the <ph id="ph1">&lt;xref:System.ComponentModel.SortDescription&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource.SortDescriptions%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Add additional instances of <ph id="ph1">&lt;xref:System.ComponentModel.SortDescription&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource.SortDescriptions%2A&gt;</ph> collection to sort by additional properties.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Filtering items in a DataGrid</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To filter items in a <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> using a <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph>, you provide the filtering logic in the handler for the <ph id="ph3">&lt;xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To filter items in a DataGrid</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Add a handler for the <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource.Filter&gt;</ph> event handler, define the filtering logic.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The filter will be applied every time the view is refreshed.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Alternatively, you can filter items in a <ph id="ph1">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> by creating a method that provides the filtering logic and setting the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView.Filter%2A?displayProperty=nameWithType&gt;</ph> property to apply the filter.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To see an example of this method, see <bpt id="p1">[</bpt>Filter Data in a View<ept id="p1">](../data/how-to-filter-data-in-a-view.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following example demonstrates grouping, sorting, and filtering <ph id="ph1">`Task`</ph> data in a <ph id="ph2">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph> and displaying the grouped, sorted, and filtered <ph id="ph3">`Task`</ph> data in a <ph id="ph4">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph> is used as the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.ItemsSource%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Grouping, sorting, and filtering are performed on the <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph> and are displayed in the <ph id="ph2">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph> UI.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To test this example, you will need to adjust the DGGroupSortFilterExample name to match your project name.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you are using Visual Basic, you will need to change the class name for <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> to the following.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../data/data-binding-overview.md)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Create and Bind to an ObservableCollection<ept id="p1">](../data/how-to-create-and-bind-to-an-observablecollection.md)</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Filter Data in a View<ept id="p1">](../data/how-to-filter-data-in-a-view.md)</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sort Data in a View<ept id="p1">](../data/how-to-sort-data-in-a-view.md)</ept></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sort and Group Data Using a View in XAML<ept id="p1">](../data/how-to-sort-and-group-data-using-a-view-in-xaml.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>