{"content":"---\ntitle: \"ICorDebugExceptionDebugEvent::GetNativeIP Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: 12e6a262-d9ac-49b8-9b80-1e653a2a3819\ncaps.latest.revision: 4\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugExceptionDebugEvent::GetNativeIP Method\nGets the native instruction pointer for this exception debug event.  \n  \n## Syntax  \n  \n```  \n  \nHRESULT GetNativeIP(  \n   [out]CORDB_ADDRESS *pIP  \n);  \n```  \n  \n#### Parameters  \n `pIP`  \n [out] A pointer to the instruction pointer for this exception debug event. See the Remarks section for more information.  \n  \n## Remarks  \n The meaning of this instruction pointer depends on the event type, as shown in the following table.  \n  \n|Event type|Meaning of `pStackPointer` value|  \n|----------------|--------------------------------------|  \n|[MANAGED_EXCEPTION_FIRST_CHANCE](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)|The address of the faulting instruction.|  \n|[MANAGED_EXCEPTION_USER_FIRST_CHANCE](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)|The code address in the frame indicated by the [GetStackPointer](../../../../docs/framework/unmanaged-api/debugging/icordebugexceptiondebugevent-getstackpointer-method.md) method where execution would resume if no exception had been raised. The exception may or may not cause different code, such as the catch block of a `try/catch/finally` clause, to be executed in this frame.|  \n|[MANAGED_EXCEPTION_CATCH_HANDLER_FOUND](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)|The code address where `catch` handler execution will start in the frame indicated by the [GetStackPointer](../../../../docs/framework/unmanaged-api/debugging/icordebugexceptiondebugevent-getstackpointer-method.md) method.|  \n|[MANAGED_EXCEPTION_UNHANDLED](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)|`pIP` is 0.|  \n  \n The event type is available from the [ICorDebugDebugEvent::GetEventKind](../../../../docs/framework/unmanaged-api/debugging/icordebugdebugevent-geteventkind-method.md) method.  \n  \n> [!NOTE]\n>  This method is available with .NET Native only.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]  \n  \n## See Also  \n [ICorDebugExceptionDebugEvent Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugexceptiondebugevent-interface.md)   \n [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)","nodes":[{"pos":[4,397],"nodes":[{"content":"ICorDebugExceptionDebugEvent::GetNativeIP Method | Microsoft Docs","nodes":[{"pos":[0,65],"content":"ICorDebugExceptionDebugEvent::GetNativeIP Method | Microsoft Docs","nodes":[{"content":"ICorDebugExceptionDebugEvent::GetNativeIP Method | Microsoft Docs","pos":[0,65]}]}],"pos":[6,74],"yaml":true}],"content":"title: \"ICorDebugExceptionDebugEvent::GetNativeIP Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: 12e6a262-d9ac-49b8-9b80-1e653a2a3819\ncaps.latest.revision: 4\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[404,452],"content":"ICorDebugExceptionDebugEvent::GetNativeIP Method","linkify":"ICorDebugExceptionDebugEvent::GetNativeIP Method","nodes":[{"content":"ICorDebugExceptionDebugEvent::GetNativeIP Method","pos":[0,48]}]},{"content":"Gets the native instruction pointer for this exception debug event.","pos":[453,520]},{"pos":[529,535],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[621,631],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[out] A pointer to the instruction pointer for this exception debug event.","pos":[644,718]},{"content":"See the Remarks section for more information.","pos":[719,764]},{"pos":[773,780],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The meaning of this instruction pointer depends on the event type, as shown in the following table.","pos":[784,883]},{"content":"Event type","pos":[890,900]},{"pos":[901,933],"content":"Meaning of <ph id=\"ph1\">`pStackPointer`</ph> value","source":"Meaning of `pStackPointer` value"},{"pos":[998,1118],"content":"<bpt id=\"p1\">[</bpt>MANAGED_EXCEPTION_FIRST_CHANCE<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)</ept>","source":"[MANAGED_EXCEPTION_FIRST_CHANCE](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)"},{"content":"The address of the faulting instruction.","pos":[1119,1159]},{"pos":[1164,1289],"content":"<bpt id=\"p1\">[</bpt>MANAGED_EXCEPTION_USER_FIRST_CHANCE<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)</ept>","source":"[MANAGED_EXCEPTION_USER_FIRST_CHANCE](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)"},{"content":"The code address in the frame indicated by the <bpt id=\"p1\">[</bpt>GetStackPointer<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugexceptiondebugevent-getstackpointer-method.md)</ept> method where execution would resume if no exception had been raised.","pos":[1290,1530],"source":"The code address in the frame indicated by the [GetStackPointer](../../../../docs/framework/unmanaged-api/debugging/icordebugexceptiondebugevent-getstackpointer-method.md) method where execution would resume if no exception had been raised."},{"content":"The exception may or may not cause different code, such as the catch block of a <ph id=\"ph1\">`try/catch/finally`</ph> clause, to be executed in this frame.","pos":[1531,1668],"source":" The exception may or may not cause different code, such as the catch block of a `try/catch/finally` clause, to be executed in this frame."},{"pos":[1673,1800],"content":"<bpt id=\"p1\">[</bpt>MANAGED_EXCEPTION_CATCH_HANDLER_FOUND<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)</ept>","source":"[MANAGED_EXCEPTION_CATCH_HANDLER_FOUND](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)"},{"pos":[1801,2023],"content":"The code address where <ph id=\"ph1\">`catch`</ph> handler execution will start in the frame indicated by the <bpt id=\"p1\">[</bpt>GetStackPointer<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugexceptiondebugevent-getstackpointer-method.md)</ept> method.","source":"The code address where `catch` handler execution will start in the frame indicated by the [GetStackPointer](../../../../docs/framework/unmanaged-api/debugging/icordebugexceptiondebugevent-getstackpointer-method.md) method."},{"pos":[2028,2145],"content":"<bpt id=\"p1\">[</bpt>MANAGED_EXCEPTION_UNHANDLED<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)</ept>","source":"[MANAGED_EXCEPTION_UNHANDLED](../../../../docs/framework/unmanaged-api/debugging/cordebugrecordformat-enumeration.md)"},{"pos":[2146,2157],"content":"<ph id=\"ph1\">`pIP`</ph> is 0.","source":"`pIP` is 0."},{"pos":[2165,2340],"content":"The event type is available from the <bpt id=\"p1\">[</bpt>ICorDebugDebugEvent::GetEventKind<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugdebugevent-geteventkind-method.md)</ept> method.","source":"The event type is available from the [ICorDebugDebugEvent::GetEventKind](../../../../docs/framework/unmanaged-api/debugging/icordebugdebugevent-geteventkind-method.md) method."},{"pos":[2348,2406],"content":"[!NOTE]\n This method is available with .NET Native only.","leadings":["","> "],"nodes":[{"content":"This method is available with .NET Native only.","pos":[9,56]}]},{"pos":[2415,2427],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2431,2535],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2542,2578],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2585,2610],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2617,2713],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]"},{"pos":[2722,2730],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugExceptionDebugEvent Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugexceptiondebugevent-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2734,2869],"source":"[ICorDebugExceptionDebugEvent Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugexceptiondebugevent-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept>","pos":[2873,2971],"source":"[Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)"}]}