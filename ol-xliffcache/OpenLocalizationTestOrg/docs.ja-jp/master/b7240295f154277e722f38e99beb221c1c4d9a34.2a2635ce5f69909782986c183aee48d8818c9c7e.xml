{"content":"---\ntitle: \"C# Walkthroughs\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"walkthroughs [C#]\"\n  - \"walkthroughs [Visual Studio], Visual C#\"\n  - \"Visual C#, walkthroughs\"\nms.assetid: 2d07b972-ef69-4676-9aef-e1784728e1ff\n---\n# C# Walkthroughs\nWalkthroughs give step-by-step instructions for common scenarios, which makes them a good place to start learning about the product or a particular feature area.  \n  \n This section contains links to C# programming walkthroughs.  \n  \n## In This Section  \n\n [Accessing the Web by Using Async and Await](./programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)  \n Shows how to create an asynchronous solution by using [async](../csharp/language-reference/keywords/async.md) and [await](../csharp/language-reference/keywords/await.md).  \n  \n [Creating a Windows Runtime Component in C# or Visual Basic and Calling it from JavaScript](/windows/uwp/winrt-components/walkthrough-creating-a-simple-windows-runtime-component-and-calling-it-from-javascript)  \n Shows how to create a [!INCLUDE[wrt](~/includes/wrt-md.md)] type, package it in a [!INCLUDE[wrt](~/includes/wrt-md.md)] component, and then call the component from a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app that's built for Windows by using JavaScript.  \n  \n [Office Programming (C# and Visual Basic)](../csharp/programming-guide/interop/walkthrough-office-programming.md)  \n Shows how to create an Excel workbook and a Word document by using C# and Visual Basic.  \n  \n [Creating and Using Dynamic Objects (C# and Visual Basic)](../csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md)  \n Shows how to create a custom object that dynamically exposes the contents of a text file, and how to create a project that uses the `IronPython` library.  \n   \n [Authoring a Composite Control with Visual C#](../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-csharp.md)  \n Demonstrates creating a simple composite control and extending its functionality through inheritance.  \n  \n [Creating a Windows Forms Control that Takes Advantage of Visual Studio Design-Time Features](../../docs/framework/winforms/controls/creating-a-wf-control-design-time-features.md)  \n Illustrates how to create a custom designer for a custom control.  \n  \n [Inheriting from a Windows Forms Control with Visual C#](../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-csharp.md)  \n Demonstrates creating a simple inherited button control. This button inherits functionality from the standard Windows Forms button and exposes a custom member.  \n  \n [Debugging Custom Windows Forms Controls at Design Time](../../docs/framework/winforms/controls/walkthrough-debugging-custom-windows-forms-controls-at-design-time.md)  \n Describes how to debug the design-time behavior of your custom control.\n\n [Performing Common Tasks Using Smart Tags on Windows Forms Controls](../../docs/framework/winforms/controls/performing-common-tasks-using-smart-tags-on-wf-controls.md)  \n Demonstrates some of the commonly performed tasks such as adding or removing a tab on a `TabControl`, docking a control to its parent, and changing the orientation of a `SplitContainer` control.  \n  \n [Writing Queries in C# (LINQ)](../csharp/programming-guide/concepts/linq/walkthrough-writing-queries-linq.md)  \n Demonstrates the C# language features that are used to write [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query expressions.  \n  \n [Manipulating Data (C#) (LINQ to SQL)](../framework/data/adonet/sql/linq/walkthrough-manipulating-data-csharp.md)  \n Describes a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] scenario for adding, modifying, and deleting data in a database.  \n  \n [Simple Object Model and Query (C#) (LINQ to SQL)](../framework/data/adonet/sql/linq/walkthrough-simple-object-model-and-query-csharp.md)  \n Demonstrates how to create an entity class and a simple query to filter the entity class.  \n  \n [Using Only Stored Procedures (C#) (LINQ to SQL)](../framework/data/adonet/sql/linq/walkthrough-using-only-stored-procedures-csharp.md)  \n Demonstrates how to use LINQ to SQL to access data by executing only stored procedures.  \n  \n [Querying Across Relationships (C#) (LINQ to SQL)](../framework/data/adonet/sql/linq/walkthrough-querying-across-relationships-csharp.md)  \n Demonstrates the use of [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] associations to represent foreign-key relationships in a database.  \n\n [Writing a Visualizer in C#](/visualstudio/debugger/walkthrough-writing-a-visualizer-in-csharp)  \n Shows how to write a simple visualizer by using C#.  \n  \n## Related Sections  \n [Deployment Samples and Walkthroughs](/visualstudio/deployment/clickonce-deployment-samples-and-walkthroughs)  \n Provides step-by-step examples of common deployment scenarios.  \n  \n## See also\n\n- [C# Programming Guide](../csharp/programming-guide/index.md)\n- [Visual Studio Samples](/visualstudio/ide/visual-studio-samples)\n","nodes":[{"pos":[4,219],"embed":true,"restype":"x-metadata","content":"title: \"C# Walkthroughs\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"walkthroughs [C#]\"\n  - \"walkthroughs [Visual Studio], Visual C#\"\n  - \"Visual C#, walkthroughs\"\nms.assetid: 2d07b972-ef69-4676-9aef-e1784728e1ff","nodes":[{"content":"C# Walkthroughs","nodes":[{"pos":[0,15],"content":"C# Walkthroughs","nodes":[{"content":"C# Walkthroughs","pos":[0,15]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[226,241],"content":"C# Walkthroughs","linkify":"C# Walkthroughs","nodes":[{"content":"C# Walkthroughs","pos":[0,15]}]},{"content":"Walkthroughs give step-by-step instructions for common scenarios, which makes them a good place to start learning about the product or a particular feature area.","pos":[242,403]},{"content":"This section contains links to C# programming walkthroughs.","pos":[410,469]},{"pos":[478,493],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Accessing the Web by Using Async and Await<ept id=\"p1\">](./programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>","pos":[498,636],"source":"[Accessing the Web by Using Async and Await](./programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)"},{"content":"Shows how to create an asynchronous solution by using <bpt id=\"p1\">[</bpt>async<ept id=\"p1\">](../csharp/language-reference/keywords/async.md)</ept> and <bpt id=\"p2\">[</bpt>await<ept id=\"p2\">](../csharp/language-reference/keywords/await.md)</ept>.","pos":[640,810],"source":"Shows how to create an asynchronous solution by using [async](../csharp/language-reference/keywords/async.md) and [await](../csharp/language-reference/keywords/await.md)."},{"content":"<bpt id=\"p1\">[</bpt>Creating a Windows Runtime Component in C# or Visual Basic and Calling it from JavaScript<ept id=\"p1\">](/windows/uwp/winrt-components/walkthrough-creating-a-simple-windows-runtime-component-and-calling-it-from-javascript)</ept>","pos":[817,1026],"source":"[Creating a Windows Runtime Component in C# or Visual Basic and Calling it from JavaScript](/windows/uwp/winrt-components/walkthrough-creating-a-simple-windows-runtime-component-and-calling-it-from-javascript)"},{"content":"Shows how to create a <ph id=\"ph1\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> type, package it in a <ph id=\"ph2\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> component, and then call the component from a <ph id=\"ph3\">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> app that's built for Windows by using JavaScript.","pos":[1030,1311],"source":"Shows how to create a [!INCLUDE[wrt](~/includes/wrt-md.md)] type, package it in a [!INCLUDE[wrt](~/includes/wrt-md.md)] component, and then call the component from a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app that's built for Windows by using JavaScript."},{"content":"<bpt id=\"p1\">[</bpt>Office Programming (C# and Visual Basic)<ept id=\"p1\">](../csharp/programming-guide/interop/walkthrough-office-programming.md)</ept>","pos":[1318,1431],"source":"[Office Programming (C# and Visual Basic)](../csharp/programming-guide/interop/walkthrough-office-programming.md)"},{"content":"Shows how to create an Excel workbook and a Word document by using C# and Visual Basic.","pos":[1435,1522]},{"content":"<bpt id=\"p1\">[</bpt>Creating and Using Dynamic Objects (C# and Visual Basic)<ept id=\"p1\">](../csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md)</ept>","pos":[1529,1672],"source":"[Creating and Using Dynamic Objects (C# and Visual Basic)](../csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md)"},{"content":"Shows how to create a custom object that dynamically exposes the contents of a text file, and how to create a project that uses the <ph id=\"ph1\">`IronPython`</ph> library.","pos":[1676,1829],"source":"Shows how to create a custom object that dynamically exposes the contents of a text file, and how to create a project that uses the `IronPython` library."},{"content":"<bpt id=\"p1\">[</bpt>Authoring a Composite Control with Visual C#<ept id=\"p1\">](../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-csharp.md)</ept>","pos":[1837,1987],"source":"[Authoring a Composite Control with Visual C#](../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-csharp.md)"},{"content":"Demonstrates creating a simple composite control and extending its functionality through inheritance.","pos":[1991,2092]},{"content":"<bpt id=\"p1\">[</bpt>Creating a Windows Forms Control that Takes Advantage of Visual Studio Design-Time Features<ept id=\"p1\">](../../docs/framework/winforms/controls/creating-a-wf-control-design-time-features.md)</ept>","pos":[2099,2278],"source":"[Creating a Windows Forms Control that Takes Advantage of Visual Studio Design-Time Features](../../docs/framework/winforms/controls/creating-a-wf-control-design-time-features.md)"},{"content":"Illustrates how to create a custom designer for a custom control.","pos":[2282,2347]},{"content":"<bpt id=\"p1\">[</bpt>Inheriting from a Windows Forms Control with Visual C#<ept id=\"p1\">](../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-csharp.md)</ept>","pos":[2354,2524],"source":"[Inheriting from a Windows Forms Control with Visual C#](../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-csharp.md)"},{"content":"Demonstrates creating a simple inherited button control.","pos":[2528,2584]},{"content":"This button inherits functionality from the standard Windows Forms button and exposes a custom member.","pos":[2585,2687]},{"content":"<bpt id=\"p1\">[</bpt>Debugging Custom Windows Forms Controls at Design Time<ept id=\"p1\">](../../docs/framework/winforms/controls/walkthrough-debugging-custom-windows-forms-controls-at-design-time.md)</ept>","pos":[2694,2860],"source":"[Debugging Custom Windows Forms Controls at Design Time](../../docs/framework/winforms/controls/walkthrough-debugging-custom-windows-forms-controls-at-design-time.md)"},{"content":"Describes how to debug the design-time behavior of your custom control.","pos":[2864,2935]},{"content":"<bpt id=\"p1\">[</bpt>Performing Common Tasks Using Smart Tags on Windows Forms Controls<ept id=\"p1\">](../../docs/framework/winforms/controls/performing-common-tasks-using-smart-tags-on-wf-controls.md)</ept>","pos":[2938,3105],"source":"[Performing Common Tasks Using Smart Tags on Windows Forms Controls](../../docs/framework/winforms/controls/performing-common-tasks-using-smart-tags-on-wf-controls.md)"},{"content":"Demonstrates some of the commonly performed tasks such as adding or removing a tab on a <ph id=\"ph1\">`TabControl`</ph>, docking a control to its parent, and changing the orientation of a <ph id=\"ph2\">`SplitContainer`</ph> control.","pos":[3109,3303],"source":"Demonstrates some of the commonly performed tasks such as adding or removing a tab on a `TabControl`, docking a control to its parent, and changing the orientation of a `SplitContainer` control."},{"content":"<bpt id=\"p1\">[</bpt>Writing Queries in C# (LINQ)<ept id=\"p1\">](../csharp/programming-guide/concepts/linq/walkthrough-writing-queries-linq.md)</ept>","pos":[3310,3419],"source":"[Writing Queries in C# (LINQ)](../csharp/programming-guide/concepts/linq/walkthrough-writing-queries-linq.md)"},{"content":"Demonstrates the C# language features that are used to write <ph id=\"ph1\">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query expressions.","pos":[3423,3552],"source":"Demonstrates the C# language features that are used to write [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query expressions."},{"content":"<bpt id=\"p1\">[</bpt>Manipulating Data (C#) (LINQ to SQL)<ept id=\"p1\">](../framework/data/adonet/sql/linq/walkthrough-manipulating-data-csharp.md)</ept>","pos":[3559,3672],"source":"[Manipulating Data (C#) (LINQ to SQL)](../framework/data/adonet/sql/linq/walkthrough-manipulating-data-csharp.md)"},{"content":"Describes a <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> scenario for adding, modifying, and deleting data in a database.","pos":[3676,3804],"source":"Describes a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] scenario for adding, modifying, and deleting data in a database."},{"content":"<bpt id=\"p1\">[</bpt>Simple Object Model and Query (C#) (LINQ to SQL)<ept id=\"p1\">](../framework/data/adonet/sql/linq/walkthrough-simple-object-model-and-query-csharp.md)</ept>","pos":[3811,3948],"source":"[Simple Object Model and Query (C#) (LINQ to SQL)](../framework/data/adonet/sql/linq/walkthrough-simple-object-model-and-query-csharp.md)"},{"content":"Demonstrates how to create an entity class and a simple query to filter the entity class.","pos":[3952,4041]},{"content":"<bpt id=\"p1\">[</bpt>Using Only Stored Procedures (C#) (LINQ to SQL)<ept id=\"p1\">](../framework/data/adonet/sql/linq/walkthrough-using-only-stored-procedures-csharp.md)</ept>","pos":[4048,4183],"source":"[Using Only Stored Procedures (C#) (LINQ to SQL)](../framework/data/adonet/sql/linq/walkthrough-using-only-stored-procedures-csharp.md)"},{"content":"Demonstrates how to use LINQ to SQL to access data by executing only stored procedures.","pos":[4187,4274]},{"content":"<bpt id=\"p1\">[</bpt>Querying Across Relationships (C#) (LINQ to SQL)<ept id=\"p1\">](../framework/data/adonet/sql/linq/walkthrough-querying-across-relationships-csharp.md)</ept>","pos":[4281,4418],"source":"[Querying Across Relationships (C#) (LINQ to SQL)](../framework/data/adonet/sql/linq/walkthrough-querying-across-relationships-csharp.md)"},{"content":"Demonstrates the use of <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> associations to represent foreign-key relationships in a database.","pos":[4422,4564],"source":"Demonstrates the use of [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] associations to represent foreign-key relationships in a database."},{"content":"<bpt id=\"p1\">[</bpt>Writing a Visualizer in C#<ept id=\"p1\">](/visualstudio/debugger/walkthrough-writing-a-visualizer-in-csharp)</ept>","pos":[4569,4664],"source":"[Writing a Visualizer in C#](/visualstudio/debugger/walkthrough-writing-a-visualizer-in-csharp)"},{"content":"Shows how to write a simple visualizer by using C#.","pos":[4668,4719]},{"pos":[4728,4744],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Deployment Samples and Walkthroughs<ept id=\"p1\">](/visualstudio/deployment/clickonce-deployment-samples-and-walkthroughs)</ept>","pos":[4748,4857],"source":"[Deployment Samples and Walkthroughs](/visualstudio/deployment/clickonce-deployment-samples-and-walkthroughs)"},{"content":"Provides step-by-step examples of common deployment scenarios.","pos":[4861,4923]},{"pos":[4932,4940],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4944,5004],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../csharp/programming-guide/index.md)"},{"pos":[5007,5071],"content":"<bpt id=\"p1\">[</bpt>Visual Studio Samples<ept id=\"p1\">](/visualstudio/ide/visual-studio-samples)</ept>","source":"[Visual Studio Samples](/visualstudio/ide/visual-studio-samples)"}]}