{"content":"---\ntitle: \"How to: Download a File in the Background | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"BackgroundWorker component\"\n  - \"background tasks\"\n  - \"Asynchronous Pattern\"\n  - \"forms, multithreading\"\n  - \"components [Windows Forms], asynchronous\"\n  - \"forms, background operations\"\n  - \"threading [Windows Forms], background operations\"\n  - \"background operations\"\nms.assetid: 9b7bc5ae-051c-4904-9720-18f6667388bd\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Download a File in the Background\nDownloading a file is a common task, and it is often useful to run this potentially time-consuming operation on a separate thread. Use the <xref:System.ComponentModel.BackgroundWorker> component to accomplish this task with very little code.  \n  \n## Example  \n The following code example demonstrates how to use a <xref:System.ComponentModel.BackgroundWorker> component to load an XML file from a URL. When the user clicks the **Download** button, the <xref:System.Windows.Forms.Control.Click> event handler calls the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method of a <xref:System.ComponentModel.BackgroundWorker> component to start the download operation. The button is disabled for the duration of the download, and then enabled when the download is complete. A <xref:System.Windows.Forms.MessageBox> displays the contents of the file.  \n  \n [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#1](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#1)]\n [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#1](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#1)]  \n  \n **Downloading the file**  \n  \n The file is downloaded on the <xref:System.ComponentModel.BackgroundWorker> component's worker thread, which runs the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler. This thread starts when your code calls the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method.  \n  \n [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#3](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#3)]\n [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#3](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#3)]  \n  \n **Waiting for a BackgroundWorker to finish**  \n  \n The `downloadButton_Click` event handler demonstrates how to wait for a <xref:System.ComponentModel.BackgroundWorker> component to finish its asynchronous task.  \n  \n If you only want the application to respond to events and do not want to do any work in the main thread while you wait for the background thread to complete, just exit the handler.  \n  \n If you want to continue doing work in the main thread, use the <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> property to determine whether the <xref:System.ComponentModel.BackgroundWorker> thread is still running. In the example, a progress bar is updated while the download is processing. Be sure to call the <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method to keep the UI responsive.  \n  \n [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#2](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#2)]\n [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#2](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#2)]  \n  \n **Displaying the result**  \n  \n The `backgroundWorker1_RunWorkerCompleted` method handles the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event and is called when the background operation is completed. This method first checks the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=fullName> property. If <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=fullName> is `null`, then this method displays the contents of the file. It then enables the download button, which was disabled when the download began, and it resets the progress bar.  \n  \n [!code-csharp[System.ComponentModel.BackgroundWorker.IsBusy#4](../../../../samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/CS/Form1.cs#4)]\n [!code-vb[System.ComponentModel.BackgroundWorker.IsBusy#4](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.IsBusy/VB/Form1.vb#4)]  \n  \n## Compiling the Code  \n This example requires:  \n  \n-   References to the System.Drawing, System.Windows.Forms, and System.Xml assemblies.  \n  \n For information about building this example from the command line for [!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)] or [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)], see [Building from the Command Line](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md). You can also build this example in [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)] by pasting the code into a new project.  Also see [How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio](http://msdn.microsoft.com/library/Bb129228\\(v=vs.110\\)).  \n  \n## Robust Programming  \n Always check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=fullName> property in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler before attempting to access the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=fullName> property or any other object that may have been affected by the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler.  \n  \n## See Also  \n <xref:System.ComponentModel.BackgroundWorker>   \n [How to: Run an Operation in the Background](../../../../docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)   \n [How to: Implement a Form That Uses a Background Operation](../../../../docs/framework/winforms/controls/how-to-implement-a-form-that-uses-a-background-operation.md)","nodes":[{"pos":[4,699],"embed":true,"restype":"x-metadata","content":"title: \"How to: Download a File in the Background | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"BackgroundWorker component\"\n  - \"background tasks\"\n  - \"Asynchronous Pattern\"\n  - \"forms, multithreading\"\n  - \"components [Windows Forms], asynchronous\"\n  - \"forms, background operations\"\n  - \"threading [Windows Forms], background operations\"\n  - \"background operations\"\nms.assetid: 9b7bc5ae-051c-4904-9720-18f6667388bd\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Download a File in the Background | Microsoft Docs","nodes":[{"pos":[0,58],"content":"How to: Download a File in the Background | Microsoft Docs","nodes":[{"content":"How to: Download a File in the Background | Microsoft Docs","pos":[0,58]}]}],"path":["title"]}],"yml":true},{"pos":[706,747],"content":"How to: Download a File in the Background","linkify":"How to: Download a File in the Background","nodes":[{"content":"How to: Download a File in the Background","pos":[0,41]}]},{"content":"Downloading a file is a common task, and it is often useful to run this potentially time-consuming operation on a separate thread.","pos":[748,878]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component to accomplish this task with very little code.","pos":[879,989],"source":" Use the <xref:System.ComponentModel.BackgroundWorker> component to accomplish this task with very little code."},{"pos":[998,1005],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example demonstrates how to use a <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component to load an XML file from a URL.","pos":[1009,1149],"source":"The following code example demonstrates how to use a <xref:System.ComponentModel.BackgroundWorker> component to load an XML file from a URL."},{"content":"When the user clicks the <bpt id=\"p1\">**</bpt>Download<ept id=\"p1\">**</ept> button, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler calls the <ph id=\"ph2\">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A&gt;</ph> method of a <ph id=\"ph3\">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component to start the download operation.","pos":[1150,1430],"source":" When the user clicks the **Download** button, the <xref:System.Windows.Forms.Control.Click> event handler calls the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method of a <xref:System.ComponentModel.BackgroundWorker> component to start the download operation."},{"content":"The button is disabled for the duration of the download, and then enabled when the download is complete.","pos":[1431,1535]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays the contents of the file.","pos":[1536,1611],"source":" A <xref:System.Windows.Forms.MessageBox> displays the contents of the file."},{"pos":[1990,2014],"content":"<bpt id=\"p1\">**</bpt>Downloading the file<ept id=\"p1\">**</ept>","source":"**Downloading the file**"},{"content":"The file is downloaded on the <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component's worker thread, which runs the <ph id=\"ph2\">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> event handler.","pos":[2021,2206],"source":"The file is downloaded on the <xref:System.ComponentModel.BackgroundWorker> component's worker thread, which runs the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler."},{"content":"This thread starts when your code calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A&gt;</ph> method.","pos":[2207,2322],"source":" This thread starts when your code calls the <xref:System.ComponentModel.BackgroundWorker.RunWorkerAsync%2A> method."},{"pos":[2701,2745],"content":"<bpt id=\"p1\">**</bpt>Waiting for a BackgroundWorker to finish<ept id=\"p1\">**</ept>","source":"**Waiting for a BackgroundWorker to finish**"},{"pos":[2752,2912],"content":"The <ph id=\"ph1\">`downloadButton_Click`</ph> event handler demonstrates how to wait for a <ph id=\"ph2\">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> component to finish its asynchronous task.","source":"The `downloadButton_Click` event handler demonstrates how to wait for a <xref:System.ComponentModel.BackgroundWorker> component to finish its asynchronous task."},{"content":"If you only want the application to respond to events and do not want to do any work in the main thread while you wait for the background thread to complete, just exit the handler.","pos":[2919,3099]},{"content":"If you want to continue doing work in the main thread, use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker.IsBusy%2A&gt;</ph> property to determine whether the <ph id=\"ph2\">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph> thread is still running.","pos":[3106,3329],"source":"If you want to continue doing work in the main thread, use the <xref:System.ComponentModel.BackgroundWorker.IsBusy%2A> property to determine whether the <xref:System.ComponentModel.BackgroundWorker> thread is still running."},{"content":"In the example, a progress bar is updated while the download is processing.","pos":[3330,3405]},{"content":"Be sure to call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName&gt;</ph> method to keep the UI responsive.","pos":[3406,3536],"source":" Be sure to call the <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method to keep the UI responsive."},{"pos":[3915,3940],"content":"<bpt id=\"p1\">**</bpt>Displaying the result<ept id=\"p1\">**</ept>","source":"**Displaying the result**"},{"content":"The <ph id=\"ph1\">`backgroundWorker1_RunWorkerCompleted`</ph> method handles the <ph id=\"ph2\">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&gt;</ph> event and is called when the background operation is completed.","pos":[3947,4137],"source":"The `backgroundWorker1_RunWorkerCompleted` method handles the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event and is called when the background operation is completed."},{"content":"This method first checks the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=fullName&gt;</ph> property.","pos":[4138,4263],"source":" This method first checks the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=fullName> property."},{"content":"If <ph id=\"ph1\">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=fullName&gt;</ph> is <ph id=\"ph2\">`null`</ph>, then this method displays the contents of the file.","pos":[4264,4416],"source":" If <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=fullName> is `null`, then this method displays the contents of the file."},{"content":"It then enables the download button, which was disabled when the download began, and it resets the progress bar.","pos":[4417,4529]},{"pos":[4910,4928],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"This example requires:","pos":[4932,4954]},{"content":"References to the System.Drawing, System.Windows.Forms, and System.Xml assemblies.","pos":[4964,5046]},{"content":"For information about building this example from the command line for <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)]</ph> or <ph id=\"ph2\">[!INCLUDE[csprcs](../../../../includes/csprcs-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Building from the Command Line<ept id=\"p1\">](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md)</ept> or <bpt id=\"p2\">[</bpt>Command-line Building With csc.exe<ept id=\"p2\">](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept>.","pos":[5053,5488],"source":"For information about building this example from the command line for [!INCLUDE[vbprvb](../../../../includes/vbprvb-md.md)] or [!INCLUDE[csprcs](../../../../includes/csprcs-md.md)], see [Building from the Command Line](~/docs/visual-basic/reference/command-line-compiler/building-from-the-command-line.md) or [Command-line Building With csc.exe](~/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)."},{"content":"You can also build this example in <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)]</ph> by pasting the code into a new project.","pos":[5489,5617],"source":" You can also build this example in [!INCLUDE[vsprvs](../../../../includes/vsprvs-md.md)] by pasting the code into a new project."},{"content":"Also see <bpt id=\"p1\">[</bpt>How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio<ept id=\"p1\">](http://msdn.microsoft.com/library/Bb129228\\(v=vs.110\\))</ept>.","pos":[5619,5768],"source":"  Also see [How to: Compile and Run a Complete Windows Forms Code Example Using Visual Studio](http://msdn.microsoft.com/library/Bb129228\\(v=vs.110\\))."},{"pos":[5777,5795],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"Always check the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=fullName&gt;</ph> property in your <ph id=\"ph2\">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&gt;</ph> event handler before attempting to access the <ph id=\"ph3\">&lt;xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=fullName&gt;</ph> property or any other object that may have been affected by the <ph id=\"ph4\">&lt;xref:System.ComponentModel.BackgroundWorker.DoWork&gt;</ph> event handler.","pos":[5799,6254],"source":"Always check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A?displayProperty=fullName> property in your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler before attempting to access the <xref:System.ComponentModel.RunWorkerCompletedEventArgs.Result%2A?displayProperty=fullName> property or any other object that may have been affected by the <xref:System.ComponentModel.BackgroundWorker.DoWork> event handler."},{"pos":[6263,6271],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph>","pos":[6275,6320],"source":"<xref:System.ComponentModel.BackgroundWorker> "},{"content":"<bpt id=\"p1\">[</bpt>How to: Run an Operation in the Background<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept><ph id=\"ph1\"> </ph>","pos":[6325,6461],"source":"[How to: Run an Operation in the Background](../../../../docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Implement a Form That Uses a Background Operation<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-implement-a-form-that-uses-a-background-operation.md)</ept>","pos":[6465,6630],"source":"[How to: Implement a Form That Uses a Background Operation](../../../../docs/framework/winforms/controls/how-to-implement-a-form-that-uses-a-background-operation.md)"}]}