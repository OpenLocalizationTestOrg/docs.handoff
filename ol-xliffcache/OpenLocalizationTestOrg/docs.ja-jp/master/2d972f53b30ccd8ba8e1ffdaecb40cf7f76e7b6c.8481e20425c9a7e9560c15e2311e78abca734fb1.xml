{"content":"---\ntitle: \"Tutorial: Manipulating Content in a WordprocessingML Document (C#)\"\nms.date: 07/20/2015\nms.assetid: bc9815f8-13d2-4f50-a4d1-b1c0d50d37b3\n---\n# Tutorial: Manipulating Content in a WordprocessingML Document (C#)\nThis tutorial shows how to apply the functional transformational approach and LINQ to XML to manipulate XML documents. The C# examples query and manipulate information in Office Open XML WordprocessingML documents that are saved by Microsoft Word.  \n  \n For more information, see [Introduction to WordprocessingML](https://ericwhite.com/blog/introduction-to-wordprocessingml-series/).  \n  \n## In This Section  \n  \n|Topic|Description|  \n|-----------|-----------------|  \n|[Shape of WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/shape-of-wordprocessingml-documents.md)|Provides a quick explanation of details of a WordprocessingML document.|  \n|[Creating the Source Office Open XML Document (C#)](../../../../csharp/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)|Provides step-by-step instructions to create the source document for queries in this tutorial.|  \n|[Finding the Default Paragraph Style (C#)](../../../../csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md)|Shows a query to find the name of the default style for a document.|  \n|[Retrieving the Paragraphs and Their Styles (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)|Shows a query that retrieves a collection of the paragraphs of a document.|  \n|[Retrieving the Text of the Paragraphs (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-text-of-the-paragraphs.md)|Augments the previous query to retrieve the text of each paragraph.|  \n|[Refactoring Using an Extension Method (C#)](../../../../csharp/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)|Simplifies the code by refactoring using an extension method.|  \n|[Refactoring Using a Pure Function (C#)](../../../../csharp/programming-guide/concepts/linq/refactoring-using-a-pure-function.md)|Further simplifies the code by refactoring using a pure function.|  \n|[Projecting XML in a Different Shape (C#)](../../../../csharp/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md)|Completes an XML transformation by projecting XML in a different shape than the original document.|  \n|[Finding Text in Word Documents (C#)](../../../../csharp/programming-guide/concepts/linq/finding-text-in-word-documents.md)|Uses the previous queries to find a specified text string in a document.|  \n|[Details of Office Open XML WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)|Provides some details of Office Open XML WordprocessingML documents.|  \n  \n## See also\n\n- [Pure Functional Transformations of XML (C#)](../../../../csharp/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md)\n- [Introduction to Pure Functional Transformations (C#)](../../../../csharp/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)\n","nodes":[{"pos":[4,148],"embed":true,"restype":"x-metadata","content":"title: \"Tutorial: Manipulating Content in a WordprocessingML Document (C#)\"\nms.date: 07/20/2015\nms.assetid: bc9815f8-13d2-4f50-a4d1-b1c0d50d37b3","nodes":[{"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#)","nodes":[{"pos":[0,66],"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#)","nodes":[{"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#)","pos":[0,66]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[155,221],"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#)","linkify":"Tutorial: Manipulating Content in a WordprocessingML Document (C#)","nodes":[{"content":"Tutorial: Manipulating Content in a WordprocessingML Document (C#)","pos":[0,66]}]},{"content":"This tutorial shows how to apply the functional transformational approach and LINQ to XML to manipulate XML documents.","pos":[222,340]},{"content":"The C# examples query and manipulate information in Office Open XML WordprocessingML documents that are saved by Microsoft Word.","pos":[341,469]},{"pos":[476,606],"content":"For more information, see <bpt id=\"p1\">[</bpt>Introduction to WordprocessingML<ept id=\"p1\">](https://ericwhite.com/blog/introduction-to-wordprocessingml-series/)</ept>.","source":"For more information, see [Introduction to WordprocessingML](https://ericwhite.com/blog/introduction-to-wordprocessingml-series/)."},{"pos":[615,630],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"Topic","pos":[637,642]},{"content":"Description","pos":[643,654]},{"pos":[693,826],"content":"<bpt id=\"p1\">[</bpt>Shape of WordprocessingML Documents (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/shape-of-wordprocessingml-documents.md)</ept>","source":"[Shape of WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/shape-of-wordprocessingml-documents.md)"},{"content":"Provides a quick explanation of details of a WordprocessingML document.","pos":[827,898]},{"pos":[903,1054],"content":"<bpt id=\"p1\">[</bpt>Creating the Source Office Open XML Document (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)</ept>","source":"[Creating the Source Office Open XML Document (C#)](../../../../csharp/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)"},{"content":"Provides step-by-step instructions to create the source document for queries in this tutorial.","pos":[1055,1149]},{"pos":[1154,1287],"content":"<bpt id=\"p1\">[</bpt>Finding the Default Paragraph Style (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md)</ept>","source":"[Finding the Default Paragraph Style (C#)](../../../../csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md)"},{"content":"Shows a query to find the name of the default style for a document.","pos":[1288,1355]},{"pos":[1360,1507],"content":"<bpt id=\"p1\">[</bpt>Retrieving the Paragraphs and Their Styles (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)</ept>","source":"[Retrieving the Paragraphs and Their Styles (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)"},{"content":"Shows a query that retrieves a collection of the paragraphs of a document.","pos":[1508,1582]},{"pos":[1587,1724],"content":"<bpt id=\"p1\">[</bpt>Retrieving the Text of the Paragraphs (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/retrieving-the-text-of-the-paragraphs.md)</ept>","source":"[Retrieving the Text of the Paragraphs (C#)](../../../../csharp/programming-guide/concepts/linq/retrieving-the-text-of-the-paragraphs.md)"},{"content":"Augments the previous query to retrieve the text of each paragraph.","pos":[1725,1792]},{"pos":[1797,1934],"content":"<bpt id=\"p1\">[</bpt>Refactoring Using an Extension Method (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)</ept>","source":"[Refactoring Using an Extension Method (C#)](../../../../csharp/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)"},{"content":"Simplifies the code by refactoring using an extension method.","pos":[1935,1996]},{"pos":[2001,2130],"content":"<bpt id=\"p1\">[</bpt>Refactoring Using a Pure Function (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/refactoring-using-a-pure-function.md)</ept>","source":"[Refactoring Using a Pure Function (C#)](../../../../csharp/programming-guide/concepts/linq/refactoring-using-a-pure-function.md)"},{"content":"Further simplifies the code by refactoring using a pure function.","pos":[2131,2196]},{"pos":[2201,2334],"content":"<bpt id=\"p1\">[</bpt>Projecting XML in a Different Shape (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md)</ept>","source":"[Projecting XML in a Different Shape (C#)](../../../../csharp/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md)"},{"content":"Completes an XML transformation by projecting XML in a different shape than the original document.","pos":[2335,2433]},{"pos":[2438,2561],"content":"<bpt id=\"p1\">[</bpt>Finding Text in Word Documents (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/finding-text-in-word-documents.md)</ept>","source":"[Finding Text in Word Documents (C#)](../../../../csharp/programming-guide/concepts/linq/finding-text-in-word-documents.md)"},{"content":"Uses the previous queries to find a specified text string in a document.","pos":[2562,2634]},{"pos":[2639,2808],"content":"<bpt id=\"p1\">[</bpt>Details of Office Open XML WordprocessingML Documents (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)</ept>","source":"[Details of Office Open XML WordprocessingML Documents (C#)](../../../../csharp/programming-guide/concepts/linq/details-of-office-open-xml-wordprocessingml-documents.md)"},{"content":"Provides some details of Office Open XML WordprocessingML documents.","pos":[2809,2877]},{"pos":[2887,2895],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2899,3038],"content":"<bpt id=\"p1\">[</bpt>Pure Functional Transformations of XML (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md)</ept>","source":"[Pure Functional Transformations of XML (C#)](../../../../csharp/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md)"},{"pos":[3041,3198],"content":"<bpt id=\"p1\">[</bpt>Introduction to Pure Functional Transformations (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)</ept>","source":"[Introduction to Pure Functional Transformations (C#)](../../../../csharp/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)"}]}