<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-declare-a-constant.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b7d726c" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19c0d9c2692be442a94bd1f790c4ee0d701f4ca0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\constants-enums\how-to-declare-a-constant.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfc902844267efcc0ca79c61bbe581591bb8e4ff</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d523c6095ff02561cc35692edb57dd414e2033c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Declare A Constant (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Declare A Constant (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You use the <ph id="ph1">`Const`</ph> statement to declare a constant and set its value.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>By declaring a constant, you assign a meaningful name to a value.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Once a constant is declared, it cannot be modified or assigned a new value.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You declare a constant within a procedure or in the declarations section of a module, class, or structure.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Class or structure-level constants are <ph id="ph1">`Private`</ph> by default, but may also be declared as <ph id="ph2">`Public`</ph>, <ph id="ph3">`Friend`</ph>, <ph id="ph4">`Protected`</ph>, or <ph id="ph5">`Protected Friend`</ph> for the appropriate level of code access.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The constant must have a valid symbolic name (the rules are the same as those for creating variable names) and an expression composed of numeric or string constants and operators (but no function calls).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To declare a constant</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Write a declaration that includes an access specifier, the <ph id="ph1">`Const`</ph> keyword, and an expression, as in the following examples:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">[</bpt>Option Infer<ept id="p1">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept> is <ph id="ph1">`Off`</ph> and <bpt id="p2">[</bpt>Option Strict<ept id="p2">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> is <ph id="ph2">`On`</ph>, you must declare a constant explicitly by specifying a data type (<ph id="ph3">`Boolean`</ph>, <ph id="ph4">`Byte`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`DateTime`</ph>, <ph id="ph7">`Decimal`</ph>, <ph id="ph8">`Double`</ph>, <ph id="ph9">`Integer`</ph>, <ph id="ph10">`Long`</ph>, <ph id="ph11">`Short`</ph>, <ph id="ph12">`Single`</ph>, or <ph id="ph13">`String`</ph>).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Option Infer`</ph> is <ph id="ph2">`On`</ph> or <ph id="ph3">`Option Strict`</ph> is <ph id="ph4">`Off`</ph>, you can declare a constant without specifying a data type with an <ph id="ph5">`As`</ph> clause.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The compiler determines the type of the constant from the type of the expression.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Constant and Literal Data Types<ept id="p1">](constant-and-literal-data-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To declare a constant that has an explicitly stated data type</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Write a declaration that includes the <ph id="ph1">`As`</ph> keyword and an explicit data type, as in the following examples:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can declare multiple constants on a single line, although your code is more readable if you declare only a single constant per line.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you declare multiple constants on a single line, they must all have the same access level (<ph id="ph1">`Public`</ph>, <ph id="ph2">`Private`</ph>, <ph id="ph3">`Friend`</ph>, <ph id="ph4">`Protected`</ph>, or <ph id="ph5">`Protected Friend`</ph>).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To declare multiple constants on a single line</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Separate the declarations with a comma and a space, as in the following example:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Const Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Constant and Literal Data Types<ept id="p1">](constant-and-literal-data-types.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Constants Overview<ept id="p1">](constants-overview.md)</ept> <bpt id="p2">[</bpt>How to: Declare A Constant<ept id="p2">](how-to-declare-a-constant.md)</ept> <bpt id="p3">[</bpt>User-Defined Constants<ept id="p3">](user-defined-constants.md)</ept> <bpt id="p4">[</bpt>Constant and Literal Data Types<ept id="p4">](constant-and-literal-data-types.md)</ept> <bpt id="p5">[</bpt>How to: Group Related Constant Values Together<ept id="p5">](how-to-group-related-constant-values-together.md)</ept> <bpt id="p6">[</bpt>Enumerations Overview<ept id="p6">](enumerations-overview.md)</ept> <bpt id="p7">[</bpt>How to: Declare Enumerations<ept id="p7">](how-to-declare-enumerations.md)</ept> <bpt id="p8">[</bpt>How to: Refer to an Enumeration Member<ept id="p8">](how-to-refer-to-an-enumeration-member.md)</ept> <bpt id="p9">[</bpt>Enumerations and Name Qualification<ept id="p9">](enumerations-and-name-qualification.md)</ept> <bpt id="p10">[</bpt>How to: Iterate Through An Enumeration<ept id="p10">](how-to-iterate-through-an-enumeration.md)</ept> <bpt id="p11">[</bpt>How to: Determine the String Associated with an Enumeration Value<ept id="p11">](how-to-determine-the-string-associated-with-an-enumeration-value.md)</ept> <bpt id="p12">[</bpt>When to Use an Enumeration<ept id="p12">](when-to-use-an-enumeration.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumerations Overview<ept id="p1">](enumerations-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Constants Overview<ept id="p1">](constants-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Declare an Enumeration<ept id="p1">](how-to-declare-enumerations.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumerations and Name Qualification<ept id="p1">](enumerations-and-name-qualification.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Constants and Enumerations<ept id="p1">](../../../../visual-basic/language-reference/constants-and-enumerations.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>