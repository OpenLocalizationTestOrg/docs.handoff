{"content":"---\ntitle: \"Constraint Types | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: b6b246e6-1130-4698-9625-c5c42abcbfed\ncaps.latest.revision: 9\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Constraint Types\nThis sample shows two different ways to apply constraints to a workflow, one is from inside the activity (build) and one is from outside of it (policy). In this scenario, an activity author (from a 3rth-party software company) wants to validate the relationship between two arguments. In this case, the cost should be smaller than or equal to the price. This is a general validation build constraint.  \n  \n Then a shop owner wants to add some validation to this generic activity. In his case, he wants the majority of its products to be $9.99 or less. So, he uses a policy constraint that is on top of the `CreateProduct` activity.  \n  \n In the sample:  \n  \n The activity author (build) must:  \n  \n-   Create a constraint (`PriceGreaterThanCost`). This is where all the validation logic resides.  \n  \n-   Override `System.Activities.CodeActivity.OnGetConstraints()` and add the constraint (`PriceGreaterThanCost`) to the constraints <xref:System.Collections.IList>.  \n  \n The workflow author (policy) must:  \n  \n-   Create a workflow with an instance of the activity to validate (`CreateProduct`).  \n  \n-   Create a constraint (`MaxPrice`).  \n  \n-   Create a <xref:System.Activities.Validation.ValidationSettings> instance (`validationSettings`) and add the constraint (`MaxPrice`) to the collection `AdditionalConstraints`. Here the workflow author can add policy constraints to any activity, such as a sequence or parallel.  \n  \n-   Call <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A>, which returns a <xref:System.Activities.Validation.ValidationResults> collection of <xref:System.Activities.Validation.ValidationError> objects.  \n  \n-   (Optional) Print the <xref:System.Activities.Validation.ValidationError> objects.  \n  \n### To set up, build, and run the sample  \n  \n1.  Open the ConstraintTypes.sln sample solution in [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)].  \n  \n2.  Build and run the solution.  \n  \n> [!IMPORTANT]\n>  The samples may already be installed on your machine. Check for the following (default) directory before continuing.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples`  \n>   \n>  If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples. This sample is located in the following directory.  \n>   \n>  `<InstallDrive>:\\WF_WCF_Samples\\WF\\Scenario\\Validation\\ConstraintLibrary`  \n  \n## See Also","nodes":[{"pos":[12,45],"content":"Constraint Types | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Constraint Types | Microsoft Docs","pos":[0,33]}]},{"pos":[310,326],"content":"Constraint Types","linkify":"Constraint Types","nodes":[{"content":"Constraint Types","pos":[0,16]}]},{"content":"This sample shows two different ways to apply constraints to a workflow, one is from inside the activity (build) and one is from outside of it (policy).","pos":[327,479]},{"content":"In this scenario, an activity author (from a 3rth-party software company) wants to validate the relationship between two arguments.","pos":[480,611]},{"content":"In this case, the cost should be smaller than or equal to the price.","pos":[612,680]},{"content":"This is a general validation build constraint.","pos":[681,727]},{"content":"Then a shop owner wants to add some validation to this generic activity.","pos":[734,806]},{"content":"In his case, he wants the majority of its products to be $9.99 or less.","pos":[807,878]},{"content":"So, he uses a policy constraint that is on top of the <ph id=\"ph1\">`CreateProduct`</ph> activity.","pos":[879,958],"source":" So, he uses a policy constraint that is on top of the `CreateProduct` activity."},{"content":"In the sample:","pos":[965,979]},{"content":"The activity author (build) must:","pos":[986,1019]},{"content":"Create a constraint (<ph id=\"ph1\">`PriceGreaterThanCost`</ph>).","pos":[1029,1074],"source":"Create a constraint (`PriceGreaterThanCost`)."},{"content":"This is where all the validation logic resides.","pos":[1075,1122]},{"pos":[1132,1292],"content":"Override <ph id=\"ph1\">`System.Activities.CodeActivity.OnGetConstraints()`</ph> and add the constraint (<ph id=\"ph2\">`PriceGreaterThanCost`</ph>) to the constraints <ph id=\"ph3\">&lt;xref:System.Collections.IList&gt;</ph>.","source":"Override `System.Activities.CodeActivity.OnGetConstraints()` and add the constraint (`PriceGreaterThanCost`) to the constraints <xref:System.Collections.IList>."},{"content":"The workflow author (policy) must:","pos":[1299,1333]},{"pos":[1343,1424],"content":"Create a workflow with an instance of the activity to validate (<ph id=\"ph1\">`CreateProduct`</ph>).","source":"Create a workflow with an instance of the activity to validate (`CreateProduct`)."},{"pos":[1434,1467],"content":"Create a constraint (<ph id=\"ph1\">`MaxPrice`</ph>).","source":"Create a constraint (`MaxPrice`)."},{"content":"Create a <ph id=\"ph1\">&lt;xref:System.Activities.Validation.ValidationSettings&gt;</ph> instance (<ph id=\"ph2\">`validationSettings`</ph>) and add the constraint (<ph id=\"ph3\">`MaxPrice`</ph>) to the collection <ph id=\"ph4\">`AdditionalConstraints`</ph>.","pos":[1477,1651],"source":"Create a <xref:System.Activities.Validation.ValidationSettings> instance (`validationSettings`) and add the constraint (`MaxPrice`) to the collection `AdditionalConstraints`."},{"content":"Here the workflow author can add policy constraints to any activity, such as a sequence or parallel.","pos":[1652,1752]},{"content":"Call <ph id=\"ph1\">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph>, which returns a <ph id=\"ph2\">&lt;xref:System.Activities.Validation.ValidationResults&gt;</ph> collection of <ph id=\"ph3\">&lt;xref:System.Activities.Validation.ValidationError&gt;</ph> objects.","pos":[1762,1987],"source":"Call <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A>, which returns a <xref:System.Activities.Validation.ValidationResults> collection of <xref:System.Activities.Validation.ValidationError> objects."},{"content":"(Optional) Print the <ph id=\"ph1\">&lt;xref:System.Activities.Validation.ValidationError&gt;</ph> objects.","pos":[1997,2078],"source":"(Optional) Print the <xref:System.Activities.Validation.ValidationError> objects."},{"pos":[2088,2124],"content":"To set up, build, and run the sample","linkify":"To set up, build, and run the sample","nodes":[{"content":"To set up, build, and run the sample","pos":[0,36]}]},{"pos":[2134,2236],"content":"Open the ConstraintTypes.sln sample solution in <ph id=\"ph1\">[!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]</ph>.","source":"Open the ConstraintTypes.sln sample solution in [!INCLUDE[vs2010](../../../../includes/vs2010-md.md)]."},{"content":"Build and run the solution.","pos":[2246,2273]},{"pos":[2281,2413],"content":"[!IMPORTANT]\n The samples may already be installed on your machine. Check for the following (default) directory before continuing.","leadings":["","> "],"nodes":[{"content":" The samples may already be installed on your machine. Check for the following (default) directory before continuing.","pos":[13,130],"nodes":[{"content":"The samples may already be installed on your machine.","pos":[1,54]},{"content":"Check for the following (default) directory before continuing.","pos":[55,117]}]}]},{"content":"If this directory does not exist, go to <bpt id=\"p1\">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.","pos":[2467,2793],"source":"If this directory does not exist, go to [Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4](http://go.microsoft.com/fwlink/?LinkId=150780) to download all [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] and [!INCLUDE[wf1](../../../../includes/wf1-md.md)] samples."},{"content":"This sample is located in the following directory.","pos":[2794,2844]},{"pos":[2937,2945],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]}]}