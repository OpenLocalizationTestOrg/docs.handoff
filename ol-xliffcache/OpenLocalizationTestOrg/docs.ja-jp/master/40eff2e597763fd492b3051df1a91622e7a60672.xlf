<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="nativeactivity-base-class.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40eff2e597763fd492b3051df1a91622e7a60672</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\windows-workflow-foundation\nativeactivity-base-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af475d29a521be86ea3ce8a12b39696f97132a15</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa337db546383e7e6ae6f03a4426d1d850945486</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>NativeActivity Base Class</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>NativeActivity Base Class</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Activities.NativeActivity&gt;</ph> is an abstract class with a protected constructor.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Like <ph id="ph1">&lt;xref:System.Activities.CodeActivity&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.NativeActivity&gt;</ph> is used for writing imperative behavior by implementing an <ph id="ph3">&lt;xref:System.Activities.NativeActivity.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Unlike <ph id="ph1">&lt;xref:System.Activities.CodeActivity&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.NativeActivity&gt;</ph> has access to all of the exposed features of the workflow runtime through the <ph id="ph3">&lt;xref:System.Activities.NativeActivityContext&gt;</ph> object passed to the <ph id="ph4">&lt;xref:System.Activities.NativeActivity.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using NativeActivityContext</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Features of the workflow runtime can be accessed from within the <ph id="ph1">&lt;xref:System.Activities.NativeActivity.Execute%2A&gt;</ph> method by using members of the <ph id="ph2">`context`</ph> parameter, of type <ph id="ph3">&lt;xref:System.Activities.NativeActivityContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The features available through <ph id="ph1">&lt;xref:System.Activities.NativeActivityContext&gt;</ph> include the following:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Getting and setting of arguments and variables.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Scheduling child activities with <ph id="ph1">&lt;xref:System.Activities.NativeActivityContext.ScheduleActivity%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Aborting activity execution using <ph id="ph1">&lt;xref:System.Activities.NativeActivityContext.Abort%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Canceling child execution using <ph id="ph1">&lt;xref:System.Activities.NativeActivityContext.CancelChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.NativeActivityContext.CancelChildren%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Access to activity bookmarks using such methods as <ph id="ph1">&lt;xref:System.Activities.NativeActivityContext.CreateBookmark%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Activities.NativeActivityContext.RemoveBookmark%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Activities.NativeActivityContext.ResumeBookmark%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Custom tracking features using <ph id="ph1">&lt;xref:System.Activities.CodeActivityContext.Track%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Access to the activity’s execution properties and value properties using <ph id="ph1">&lt;xref:System.Activities.CodeActivityContext.GetProperty%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.NativeActivityContext.GetValue%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Scheduling activity actions and functions using <ph id="ph1">&lt;xref:System.Activities.NativeActivityContext.ScheduleAction%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.NativeActivityContext.ScheduleFunc%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To create a custom activity that inherits from NativeActivity</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>OpenVisual Studio 2010.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Workflow 4.0<ept id="p1">**</ept> under <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Project Types<ept id="p3">**</ept> window, and select the <bpt id="p4">**</bpt>v2010<ept id="p4">**</ept> node.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Activity Library<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>Templates<ept id="p2">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Name the new project HelloActivity.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Right-click Activity1.xaml in the HelloActivity project and select <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Right-click the HelloActivity project and select <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then <bpt id="p2">**</bpt>Class<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Name the new class HelloActivity.cs.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the HelloActivity.cs file, add the following <ph id="ph1">`using`</ph> directives.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Make the new class inherit from <ph id="ph1">&lt;xref:System.Activities.NativeActivity&gt;</ph> by adding a base class to the class declaration.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add functionality to the class by adding an <ph id="ph1">&lt;xref:System.Activities.NativeActivity.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Override the <ph id="ph1">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> method and call the appropriate Add method to let the workflow runtime know about the custom activity’s variables, arguments, children, and delegates.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information see the <ph id="ph1">&lt;xref:System.Activities.NativeActivityMetadata&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Activities.NativeActivityContext&gt;</ph> object to schedule a bookmark.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationIdleEventArgs.Bookmarks%2A&gt;</ph> for details on how to create, schedule, and resume a bookmark.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>