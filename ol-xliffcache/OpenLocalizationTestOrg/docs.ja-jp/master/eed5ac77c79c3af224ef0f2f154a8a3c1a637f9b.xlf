<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eed5ac77c79c3af224ef0f2f154a8a3c1a637f9b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\deployment\side-by-side-execution.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52187f3e083358e0b39602091a9a1978039861e7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90d6dcdc113c596b1c4d516495a8472f9f858d0a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Side-by-Side Execution in the .NET Framework | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Side-by-Side Execution in the .NET Framework</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Side-by-side execution is the ability to run multiple versions of an application or component on the same computer.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can have multiple versions of the common language runtime, and multiple versions of applications and components that use a version of the runtime, on the same computer at the same time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following illustration shows several applications using two different versions of the runtime on the same computer.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Applications A, B, and C use runtime version 1.0, while application D uses runtime version 1.1.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Side&amp;#45;by&amp;#45;side execution<ept id="p1">](../../../docs/framework/deployment/media/simplesbs.gif "simplesbs")</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Side-by-side execution of two versions of the runtime</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The .NET Framework consists of the common language runtime and a collection of assemblies that contain the API types.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The runtime and the .NET Framework assemblies are versioned separately.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, version 4.0 of the runtime is actually version 4.0.319, while version 1.0 of the .NET Framework assemblies is version 1.0.3300.0.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following illustration shows several applications using two different versions of a component on the same computer.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Application A and B use version 1.0 of the component while Application C uses version 2.0 of the same component.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Side&amp;#45;by&amp;#45;side execution<ept id="p1">](../../../docs/framework/deployment/media/compsbs.gif "compsbs")</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Side-by-side execution of two versions of a component</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Side-by-side execution gives you more control over which versions of a component an application binds to, and more control over which version of the runtime an application uses.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Benefits of Side-by-Side Execution</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Prior to Windows XP and the .NET Framework, DLL conflicts occurred because applications were unable to distinguish between incompatible versions of the same code.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Type information contained in a DLL was bound only to a file name.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An application had no way of knowing if the types contained in a DLL were the same types that the application was built with.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>As a result, a new version of a component could overwrite an older version and break applications.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Side-by-side execution and the .NET Framework provide the following features to eliminate DLL conflicts:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Strong-named assemblies.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Side-by-side execution uses strong-named assemblies to bind type information to a specific version of an assembly.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This prevents an application or component from binding to an invalid version of an assembly.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Strong-named assemblies also allow multiple versions of a file to exist on the same computer and to be used by applications.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Strong-Named Assemblies<ept id="p1">](../../../docs/framework/app-domains/strong-named-assemblies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Version-aware code storage.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides version-aware code storage in the global assembly cache.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The global assembly cache is a computer-wide code cache present on all computers with the .NET Framework installed.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It stores assemblies based on version, culture, and publisher information, and supports multiple versions of components and applications.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Global Assembly Cache<ept id="p1">](../../../docs/framework/app-domains/gac.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Isolation.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Using the .NET Framework, you can create applications and components that execute in isolation.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Isolation is an essential component of side-by-side execution.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It involves being aware of the resources you are using and sharing resources with confidence among multiple versions of an application or component.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Isolation also includes storing files in a version-specific way.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about isolation, see <bpt id="p1">[</bpt>Guidelines for Creating Components for Side-by-Side Execution<ept id="p1">](../../../docs/framework/deployment/guidelines-for-creating-components-for-side-by-side-execution.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Version Compatibility</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Versions 1.0 and 1.1 of the .NET Framework are designed to be compatible with one another.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An application built with the .NET Framework version 1.0 should run on version 1.1, and an application built with the .NET Framework version 1.1 should run on version 1.0.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Note, however, that API features added in version 1.1 of the .NET Framework will not work with version 1.0 of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Applications created with version 2.0 will run on version 2.0 only.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Version 2.0 applications will not run on version 1.1 or earlier.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Versions of the .NET Framework are treated as a single unit consisting of the runtime and its associated .NET Framework assemblies (a concept referred to as assembly unification).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can redirect assembly binding to include other versions of the .NET Framework assemblies, but overriding the default assembly binding can be risky and must be rigorously tested before deployment.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Locating Runtime Version Information</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Information on which runtime version an application or component was compiled with and which versions of the runtime the application requires to run are stored in two locations.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When an application or component is compiled, information on the runtime version used to compile it is stored in the managed executable.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Information on the runtime versions the application or component requires is stored in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Runtime Version Information in the Managed Executable</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The portable executable (PE) file header of each managed application and component contains information about the runtime version it was built with.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The common language runtime uses this information to determine the most likely version of the runtime the application needs to run.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Runtime Version Information in the Application Configuration File</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In addition to the information in the PE file header, an application can be deployed with an application configuration file that provides runtime version information.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The application configuration file is an XML-based file that is created by the application developer and that ships with an application.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>requiredRuntime&gt; Element<ept id="p1">](../../../docs/framework/configure-apps/file-schema/startup/requiredruntime-element.md)</ept> of the <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>startup&gt; section<ept id="p2">](../../../docs/framework/configure-apps/file-schema/startup/startup-element.md)</ept>, if it is present in this file, specifies which versions of the runtime and which versions of a component the application supports.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can also use this file in testing to test an application's compatibility with different versions of the runtime.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Unmanaged code, including COM and COM+ applications, can have application configuration files that the runtime uses for interacting with managed code.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The application configuration file affects any managed code that you activate through COM.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The file can specify which runtime versions it supports, as well as assembly redirects.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>By default, COM interop applications calling to managed code use the latest version of the runtime installed on the computer.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information about the application configuration files, see <bpt id="p1">[</bpt>Configuring Apps<ept id="p1">](../../../docs/framework/configure-apps/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Determining Which Version of the Runtime to Load</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The common language runtime uses the following information to determine which version of the runtime to load for an application:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The runtime versions that are available.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The runtime versions that an application supports.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Supported Runtime Versions</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The runtime uses the application configuration file and the portable executable (PE) file header to determine which version of the runtime an application supports.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If no application configuration file is present, the runtime loads the runtime version specified in the application's PE file header, if that version is available.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If an application configuration file is present, the runtime determines the appropriate runtime version to load based on the results of the following process:</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The runtime examines the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>supportedRuntime&gt; Element<ept id="p1">](../../../docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md)</ept> element in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If one or more of the supported runtime versions specified in the <bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>supportedRuntime&gt;<ept id="p1">**</ept> element are present, the runtime loads the runtime version specified by the first <bpt id="p2">**</bpt><ph id="ph2">\&lt;</ph>supportedRuntime&gt;<ept id="p2">**</ept> element.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If this version is not available, the runtime examines the next <bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>supportedRuntime&gt;<ept id="p1">**</ept> element and attempts to load the runtime version specified.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If this runtime version is not available, subsequent <bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>supportedRuntime&gt;<ept id="p1">**</ept> elements are examined.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If none of the supported runtime versions are available, the runtime fails to load a runtime version and displays a message to the user (see step 3).</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The runtime reads the PE file header of the application's executable file.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If the runtime version specified by the PE file header is available, the runtime loads that version.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If the runtime version specified is not available, the runtime searches for a runtime version determined by Microsoft to be compatible with the runtime version in the PE header.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If that version is not found, the process continues to step 3.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The runtime displays a message stating that the runtime version supported by the application is unavailable.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The runtime is not loaded.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can suppress the display of this message by using the NoGuiFromShim value under the registry key HKLM\Software\Microsoft<ph id="ph1">\\</ph>.NETFramework or using the environment variable COMPLUS_NoGuiFromShim.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For example, you can suppress the message for applications that do not typically interact with the user, such as unattended installations or Windows services.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When this message display is suppressed, the runtime writes a message to the event log.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Set the registry value NoGuiFromShim to 1 to suppress this message for all applications on a computer.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Alternately, set the COMPLUS_NoGuiFromShim environment variable to 1 to suppress the message for applications running in a particular user context.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>After a runtime version is loaded, assembly binding redirects can specify that a different version of an individual .NET Framework assembly be loaded.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>These binding redirects affect only the specific assembly that is redirected.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Partially Qualified Assembly Names and Side-by-Side Execution</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Because they are a potential source of side-by-side problems, partially qualified assembly references can be used only to bind to assemblies within an application directory.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Avoid partially qualified assembly references in your code.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To mitigate partially qualified assembly references in code, you can use the <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>qualifyAssembly&gt;<ept id="p1">](../../../docs/framework/configure-apps/file-schema/runtime/qualifyassembly-element.md)</ept> element in an application configuration file to fully qualify partially qualified assembly references that occur in code.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt><ph id="ph1">\&lt;</ph>qualifyAssembly&gt;<ept id="p1">**</ept> element to specify only fields that were not set in the partial reference.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The assembly identity listed in the <bpt id="p1">**</bpt>fullName<ept id="p1">**</ept> attribute must contain all the information needed to fully qualify the assembly name: assembly name, public key, culture, and version.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following example shows the application configuration file entry to fully qualify an assembly called <ph id="ph1">`myAssembly`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Whenever an assembly load statement references <ph id="ph1">`myAssembly`</ph>, these configuration file settings cause the runtime to automatically translate the partially qualified <ph id="ph2">`myAssembly`</ph> reference to a fully qualified reference.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For example, Assembly.Load("myAssembly") becomes Assembly.Load("myAssembly, version=1.0.0.0, publicKeyToken=..., culture=neutral").</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>LoadWithPartialName<ept id="p1">**</ept> method to bypass the common language runtime restriction that prohibits partially referenced assemblies from being loaded from the global assembly cache.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This method should be used only in remoting scenarios as it can easily cause problems in side-by-side execution.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Title</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Enable and Disable Automatic Binding Redirection<ept id="p1">](../../../docs/framework/configure-apps/how-to-enable-and-disable-automatic-binding-redirection.md)</ept></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Describes how to bind an application to a specific version of an assembly.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configuring Assembly Binding Redirection<ept id="p1">](../../../docs/framework/deployment/configuring-assembly-binding-redirection.md)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Explains how to redirect assembly binding references to a specific version of the .NET Framework assemblies.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>In-Process Side-by-Side Execution<ept id="p1">](../../../docs/framework/deployment/in-process-side-by-side-execution.md)</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Discusses how you can use in-process side-by-side runtime host activation to run multiple versions of the CLR in a single process.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Assemblies in the Common Language Runtime<ept id="p1">](../../../docs/framework/app-domains/assemblies-in-the-common-language-runtime.md)</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Provides a conceptual overview of assemblies.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Application Domains<ept id="p1">](../../../docs/framework/app-domains/application-domains.md)</ept></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Provides a conceptual overview of application domains.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Reference</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>supportedRuntime&gt; Element<ept id="p1">](../../../docs/framework/configure-apps/file-schema/startup/supportedruntime-element.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>