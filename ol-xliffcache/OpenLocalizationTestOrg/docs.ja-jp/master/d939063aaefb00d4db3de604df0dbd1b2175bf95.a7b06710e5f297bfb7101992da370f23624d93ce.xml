{"content":"---\ntitle: \"Debugging Interfaces\"\nms.date: \"02/07/2019\"\nhelpviewer_keywords: \n  - \"unmanaged interfaces [.NET Framework], debugging\"\n  - \"debugging interfaces [.NET Framework]\"\n  - \"interfaces [.NET Framework debugging]\"\nms.assetid: b6297c26-7624-4431-8af4-14112d07bcd5\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# Debugging Interfaces\nThis section describes the unmanaged interfaces that handle the debugging of a program that is executing in the common language runtime (CLR).  \n  \n## In This Section  \n [ICLRDataEnumMemoryRegions Interface](iclrdataenummemoryregions-interface.md)\\\n Provides a method to enumerate regions of memory that are specified by callers.  \n  \n [ICLRDataEnumMemoryRegionsCallback Interface](iclrdataenummemoryregionscallback-interface.md)\\\n Provides a callback method for `EnumMemoryRegions` to report to the debugger, the result of an attempt to enumerate a specified region of memory.  \n  \n [ICLRDataTarget Interface](iclrdatatarget-interface.md)\\\n Provides methods for interaction with a target CLR process.  \n  \n [ICLRDataTarget2 Interface](iclrdatatarget2-interface.md)\\\n A subclass of `ICLRDataTarget` that is used by the data access services layer to manipulate virtual memory regions in the target process.  \n  \n [ICLRDataTarget3 Interface](iclrdatatarget3-interface.md)\\\n A subclass of [ICLRDataTarget2](iclrdatatarget2-interface.md) that provides access to exception information.  \n  \n [ICLRDebugging Interface](iclrdebugging-interface.md)\\\n Provides methods that handle loading and unloading modules for debugging.  \n  \n [ICLRDebuggingLibraryProvider Interface](iclrdebugginglibraryprovider-interface.md)\\\n Includes the [ProvideLibrary Method](iclrdebugginglibraryprovider-providelibrary-method.md) method, which gets a library provider callback interface that allows common language runtime version-specific debugging libraries to be located and loaded on demand.  \n  \n [ICLRMetadataLocator Interface](iclrmetadatalocator-interface.md)\\\n Interface used by the data access services layer to locate metadata of assemblies in a target process.  \n  \n [ICorDebug Interface](icordebug-interface.md)\\\n Provides methods that allow developers to debug applications in the CLR environment.  \n  \n [ICorDebugAppDomain Interface](icordebugappdomain-interface.md)\\\n Provides methods for debugging application domains.  \n  \n [ICorDebugAppDomain2 Interface](icordebugappdomain2-interface.md)\\\n Provides methods to work with arrays, pointers, function pointers, and ByRef types. This interface is an extension of the `ICorDebugAppDomain` interface.  \n  \n [ICorDebugAppDomain3 Interface](icordebugappdomain3-interface.md)\\\n Provides methods to work with the [!INCLUDE[wrt](../../../../includes/wrt-md.md)] types in an application domain. This interface is an extension of the `ICorDebugAppDomain` and `ICorDebugAppDomain2` interfaces.  \n  \n [ICorDebugAppDomain4 Interface](icordebugappdomain4-interface.md)\\\n Logically extends the [ICorDebugAppDomain](icordebugappdomain-interface.md) interface to get a managed object from a COM callable wrapper.  \n  \n [ICorDebugAppDomainEnum Interface](icordebugappdomainenum-interface.md)\\\n Provides a method that returns a specified number of `ICorDebugAppDomain` values starting at the next location in the enumeration.  \n  \n [ICorDebugArrayValue Interface](icordebugarrayvalue-interface.md)\\\n A subclass of `ICorDebugHeapValue` that represents a single-dimensional or multi-dimensional array.  \n  \n [ICorDebugAssembly Interface](icordebugassembly-interface.md)\\\n Represents an assembly.  \n  \n [ICorDebugAssembly2 Interface](icordebugassembly2-interface.md)\\\n Represents an assembly. This interface is an extension of the `ICorDebugAssembly` interface.  \n  \n [ICorDebugAssembly3 Interface](icordebugassembly3-interface.md)\\\n Logically extends the [ICorDebugAssembly](icordebugassembly-interface.md) interface to provide support for container assemblies and their contained assemblies. **Available on .NET Native only.**  \n  \n [ICorDebugAssemblyEnum Interface](icordebugassemblyenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugAssembly` arrays.  \n  \n [ICorDebugBlockingObjectEnum Interface](icordebugblockingobjectenum-interface.md)\\\n Provides an enumerator for a list of [CorDebugBlockingObject](cordebugblockingobject-structure.md) structures.  \n  \n [ICorDebugBoxValue Interface](icordebugboxvalue-interface.md)\\\n A subclass of `ICorDebugHeapValue` that represents a boxed value class object.  \n  \n [ICorDebugBreakpoint Interface](icordebugbreakpoint-interface.md)\\\n Represents a breakpoint in a function or a watch point on a value.  \n  \n [ICorDebugBreakpointEnum Interface](icordebugbreakpointenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugBreakpoint` arrays.  \n  \n [ICorDebugChain Interface](icordebugchain-interface.md)\\\n Represents a segment of a physical or logical call stack.  \n  \n [ICorDebugChainEnum Interface](icordebugchainenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugChain` arrays.  \n  \n [ICorDebugClass Interface](icordebugclass-interface.md)\\\n Represents a type, which can be either basic or complex (that is, user-defined). If the type is generic, `ICorDebugClass` represents the uninstantiated generic type.  \n  \n [ICorDebugClass2 Interface](icordebugclass2-interface.md)\\\n Represents a generic class or a class with a method parameter of type <xref:System.Type>. This interface extends `ICorDebugClass`.  \n  \n [ICorDebugCode Interface](icordebugcode-interface1.md)\\\n Represents a segment of either Microsoft intermediate language (MSIL) code or native code.  \n  \n [ICorDebugCode2 Interface](icordebugcode2-interface.md)\\\n Provides methods that extend the capabilities of `ICorDebugCode`.  \n  \n [ICorDebugCode3 Interface](icordebugcode3-interface.md)\\\n Provides a method that extends [ICorDebugCode](icordebugcode-interface1.md) and [ICorDebugCode2](icordebugcode2-interface.md) to provide information about a managed return value.  \n  \n [ICorDebugCode4 Interface](icordebugcode4-interface.md)\\\n Provides a method that enables a debugger to enumerate the local variables and arguments in a function.  \n  \n [ICorDebugCodeEnum Interface](icordebugcodeenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugCode` arrays.  \n  \n [ICorDebugComObjectValue Interface](icordebugcomobjectvalue-interface.md)\\\n Provides methods to retrieve cached interface objects.  \n  \n [ICorDebugContext Interface](icordebugcontext-interface.md)\\\n Represents a context object. This interface has not been implemented yet.  \n  \n [ICorDebugController Interface](icordebugcontroller-interface.md)\\\n Represents a scope, either a <xref:System.Diagnostics.Process> or an <xref:System.AppDomain>, in which code execution context can be controlled.  \n  \n [ICorDebugDataTarget Interface](icordebugdatatarget-interface.md)\\\n Provides a callback interface that provides access to a particular target process.  \n  \n [ICorDebugDataTarget2 Interface](icordebugdatatarget2-interface.md)\\\n Logically extends the [ICorDebugDataTarget](icordebugdatatarget-interface.md) interface. **Available on .NET Native only.**  \n  \n [ICorDebugDataTarget3 Interface](icordebugdatatarget3-interface.md)\\\n Logically extends the [ICorDebugDataTarget](icordebugdatatarget-interface.md) interface to provide information about loaded modules. **Available on .NET Native only.**  \n  \n [ICorDebugDebugEvent Interface](icordebugdebugevent-interface.md)\\\n Defines the base interface from which all `ICorDebug` debug events derive. **Available on .NET Native only.**  \n  \n [ICorDebugEditAndContinueErrorInfo Interface](icordebugeditandcontinueerrorinfo-interface.md)\\\n Obsolete. Do not use this interface.  \n  \n [ICorDebugEditAndContinueSnapshot Interface](icordebugeditandcontinuesnapshot-interface.md)\\\n Obsolete. Do not use this interface.  \n  \n [ICorDebugEnum Interface](icordebugenum-interface1.md)\\\n Serves as the abstract base interface for debugging enumerators.  \n  \n [ICorDebugErrorInfoEnum Interface](icordebugerrorinfoenum-interface.md)\\\n Obsolete. Do not use this interface.  \n  \n [ICorDebugEval Interface](icordebugeval-interface.md)\\\n Provides methods to enable the debugger to execute code within the context of the code being debugged.  \n  \n [ICorDebugEval2 Interface](icordebugeval2-interface.md)\\\n Extends `ICorDebugEval` to provide support for generic types.  \n  \n [ICorDebugExceptionDebugEvent Interface](icordebugexceptiondebugevent-interface.md)\\\n Extends the [ICorDebugDebugEvent](icordebugdebugevent-interface.md) interface to support exception events. **Available on .NET Native only.**  \n  \n [ICorDebugExceptionObjectCallStackEnum Interface](icordebugexceptionobjectcallstackenum-interface.md)\\\n Provides an enumerator for call stack information that is embedded in an exception object.  \n  \n [ICorDebugExceptionObjectValue Interface](icordebugexceptionobjectvalue-interface.md)\\\n Extends the [ICorDebugObjectValue](icordebugobjectvalue-interface.md) interface to provide stack trace information from a managed exception object.  \n  \n [ICorDebugFrame Interface](icordebugframe-interface.md)\\\n Represents a frame on the current stack.  \n  \n [ICorDebugFrameEnum Interface](icordebugframeenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugFrame` arrays.  \n  \n [ICorDebugFunction Interface](icordebugfunction-interface1.md)\\\n Represents a managed function or method.  \n  \n [ICorDebugFunction2 Interface](icordebugfunction2-interface.md)\\\n Logically extends `ICorDebugFunction` to provide support for Just My Code step-through debugging.  \n  \n [ICorDebugFunction3 Interface](icordebugfunction3-interface.md)\\\n Logically extends the [ICorDebugFunction](icordebugfunction-interface1.md) interface to provide access to code from a ReJIT request.  \n  \n [ICorDebugFunctionBreakpoint Interface](icordebugfunctionbreakpoint-interface.md)\\\n Extends `ICorDebugBreakpoint` to support breakpoints within functions.  \n  \n [ICorDebugGCReferenceEnum Interface](icordebuggcreferenceenum-interface.md)\\\n Provides an enumerator for objects that will be garbage-collected.  \n  \n [ICorDebugGenericValue Interface](icordebuggenericvalue-interface.md)\\\n A subclass of `ICorDebugValue` that applies to all values. This interface provides Get and Set methods for the value.  \n  \n [ICorDebugGuidToTypeEnum Interface](icordebugguidtotypeenum-interface.md)\\\n Provides an enumerator for an object that maps GUIDs and their corresponding `ICorDebugType` objects.  \n  \n [ICorDebugHandleValue Interface](icordebughandlevalue-interface.md)\\\n A subclass of `ICorDebugReferenceValue` that represents a reference value to which the debugger has created a handle for garbage collection.  \n  \n [ICorDebugHeapEnum Interface](icordebugheapenum-interface.md)\\\n Provides an enumerator for objects on the managed heap.  \n  \n [ICorDebugHeapSegmentEnum Interface](icordebugheapsegmentenum-interface.md)\\\n Provides an enumerator for the memory regions of the managed heap.  \n  \n [ICorDebugHeapValue Interface](icordebugheapvalue-interface.md)\\\n A subclass of `ICorDebugValue` that represents an object that has been collected by the CLR garbage collector.  \n  \n [ICorDebugHeapValue2 Interface](icordebugheapvalue2-interface1.md)\\\n An extension of `ICorDebugHeapValue` that provides support for runtime handles.  \n  \n [ICorDebugHeapValue3 Interface](icordebugheapvalue3-interface.md)\\\n Exposes the monitor lock properties of objects.  \n  \n [ICorDebugILCode Interface](icordebugilcode-interface.md)\\\n Represents a segment of intermediate language (IL) code.  \n  \n [ICorDebugILCode2 Interface](icordebugilcode2-interface.md)\\\n Logically extends the [ICorDebugILCode](icordebugilcode-interface.md) interface to provide methods that return the token for a function's local variable signature, and that map a profiler's instrumented intermediate language (IL) offsets to original method IL offsets.  \n  \n [ICorDebugILFrame Interface](icordebugilframe-interface.md)\\\n Represents a stack frame of MSIL code.  \n  \n [ICorDebugILFrame2 Interface](icordebugilframe2-interface.md)\\\n A logical extension of `ICorDebugILFrame`.  \n  \n [ICorDebugILFrame3 Interface](icordebugilframe3-interface.md)\\\n Provides a method that encapsulates the return value of a function.  \n  \n [ICorDebugILFrame4 Interface](icordebugilframe4-interface.md)\\\n Provides methods that allow you to access the local variables and code in a stack frame of intermediate language (IL) code. A parameter specifies whether the debugger has access to variables and code added in profiler ReJIT instrumentation.  \n  \n [ICorDebugInstanceFieldSymbol Interface](icordebuginstancefieldsymbol-interface.md)\\\n Represents the debug symbol information for an instance field. **Available on .NET Native only.**  \n  \n [ICorDebugInternalFrame Interface](icordebuginternalframe-interface.md)\\\n Identifies frame types for the debugger.  \n  \n [ICorDebugInternalFrame2 Interface](icordebuginternalframe2-interface.md)\\\n Provides information about internal frames, including stack address and position in relation to [ICorDebugFrame](icordebugframe-interface.md) objects.  \n  \n [ICorDebugLoadedModule Interface](icordebugloadedmodule-interface.md)\\\n Provides information about a loaded module. **Available on .NET Native only.**  \n  \n [ICorDebugManagedCallback Interface](icordebugmanagedcallback-interface.md)\\\n Provides methods to process debugger callbacks.  \n  \n [ICorDebugManagedCallback2 Interface](icordebugmanagedcallback2-interface.md)\\\n Provides methods to support debugger exception handling and managed debugging assistants (MDAs). `ICorDebugManagedCallback2` is a logical extension of `ICorDebugManagedCallback`.  \n  \n [ICorDebugManagedCallback3 Interface](icordebugmanagedcallback3-interface.md)\\\n Provides a callback method that indicates that an enabled custom debugger notification has been raised.  \n  \n [ICorDebugMDA Interface](icordebugmda-interface.md)\\\n Represents a managed debugging assistant (MDA) message.  \n  \n [ICorDebugMemoryBuffer Interface](icordebugmemorybuffer-interface.md)\\\n Represents an in-memory buffer. **Available on .NET Native only.**  \n  \n [ICorDebugMergedAssemblyRecord Interface](icordebugmergedassemblyrecord-interface.md)\\\n Provides information about a merged assembly. **Available on .NET Native only.**  \n  \n [ICorDebugMetaDataLocator Interface](icordebugmetadatalocator-interface.md)\\\n Provides metadata information to the debugger.  \n  \n [ICorDebugModule Interface](icordebugmodule-interface.md)\\\n Represents a CLR module, which is either an executable or a dynamic-link library (DLL).  \n  \n [ICorDebugModule2 Interface](icordebugmodule2-interface.md)\\\n Serves as a logical extension to `ICorDebugModule`.  \n  \n [ICorDebugModule3 Interface](icordebugmodule3-interface.md)\\\n Creates a symbol reader for a dynamic module.  \n  \n [ICorDebugModuleBreakpoint Interface](icordebugmodulebreakpoint-interface.md)\\\n Extends `ICorDebugBreakpoint` to provide access to specific modules.  \n  \n [ICorDebugModuleDebugEvent Interface](icordebugmoduledebugevent-interface.md)\\\n Extends the [ICorDebugDebugEvent](icordebugdebugevent-interface.md) interface to support module-level events. **Available on .NET Native only.**  \n  \n [ICorDebugModuleEnum Interface](icordebugmoduleenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugModule` arrays.  \n  \n [ICorDebugMutableDataTarget Interface](icordebugmutabledatatarget-interface.md)\\\n Extends the [ICorDebugDataTarget](icordebugdatatarget-interface.md) interface to support mutable data targets.  \n  \n [ICorDebugNativeFrame Interface](icordebugnativeframe-interface.md)\\\n A specialized implementation of `ICorDebugFrame` used for native frames.  \n  \n [ICorDebugNativeFrame2 Interface](icordebugnativeframe2-interface.md)\\\n Provides methods that test for child and parent frame relationships.  \n  \n [ICorDebugObjectEnum Interface](icordebugobjectenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates arrays of objects by their relative virtual addresses (RVAs).  \n  \n [ICorDebugObjectValue Interface](icordebugobjectvalue-interface.md)\\\n A subclass of `ICorDebugValue` that represents a value that contains an object.  \n  \n [ICorDebugObjectValue2 Interface](icordebugobjectvalue2-interface.md)\\\n Extends `ICorDebugObjectValue` to support inheritance and overrides.  \n  \n [ICorDebugProcess Interface](icordebugprocess-interface.md)\\\n Represents a process that is executing managed code.  \n  \n [ICorDebugProcess2 Interface](icordebugprocess2-interface1.md)\\\n A logical extension of `ICorDebugProcess`.  \n  \n [ICorDebugProcess3 Interface](icordebugprocess3-interface.md)\\\n Controls custom debugger notifications.\n\n [ICorDebugProcess4 Interface](icordebugprocess4-interface.md)\\\n Provides support for out of process execution control.\n  \n [ICorDebugProcess5 Interface](icordebugprocess5-interface.md)\\\n Extends the [ICorDebugProcess](icordebugprocess-interface.md) interface to support access to the managed heap, to provide information about garbage collection of managed objects, and to determine whether a debugger loads images from the application's local native image cache.  \n  \n [ICorDebugProcess6 Interface](icordebugprocess6-interface.md)\\\n Logically extends the [ICorDebugProcess](icordebugprocess-interface.md) interface to enable features such as decoding managed debug events that are encoded in native exception debug events and virtual module splitting. **Available on .NET Native only.**  \n  \n [ICorDebugProcess7 Interface](icordebugprocess7-interface.md)\\\n Provides a method that configures the debugger to handle in-memory metadata updates in the target process.  \n  \n [ICorDebugProcess8 Interface](icordebugprocess8-interface.md)\\\n Logically extends the [ICorDebugProcess](icordebugprocess-interface.md) interface to enable or disable certain types of [ICorDebugManagedCallback2](icordebugmanagedcallback2-interface.md) exception callbacks.  \n  \n [ICorDebugProcessEnum Interface](icordebugprocessenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugProcess` arrays.  \n  \n [ICorDebugReferenceValue Interface](icordebugreferencevalue-interface.md)\\\n A subclass of `ICorDebugValue` that supports reference types.  \n  \n [ICorDebugRegisterSet Interface](icordebugregisterset-interface.md)\\\n Represents the set of registers available on the machine that is currently executing code.  \n  \n [ICorDebugRegisterSet2 Interface](icordebugregisterset2-interface.md)\\\n Extends the capabilities of `ICorDebugRegisterSet` for hardware platforms that have more than 64 registers.  \n  \n [ICorDebugRemote Interface](icordebugremote-interface.md)\\\n Provides the ability to launch or attach a managed debugger to a remote target process.  \n  \n [ICorDebugRemoteTarget Interface](icordebugremotetarget-interface.md)\\\n Provides methods that enable you to debug Silverlight-based applications in the CLR environment.  \n  \n [ICorDebugRuntimeUnwindableFrame Interface](icordebugruntimeunwindableframe-interface.md)\\\n Provides support for unmanaged methods that require the common language runtime (CLR) to unwind a frame.  \n  \n [ICorDebugStackWalk Interface](icordebugstackwalk-interface.md)\\\n Provides methods for getting the managed methods, or frames, on a thread’s stack.  \n  \n [ICorDebugStaticFieldSymbol Interface](icordebugstaticfieldsymbol-interface.md)\\\n Represents the debug symbol information for a static field. **Available on .NET Native only.**  \n  \n [ICorDebugStepper Interface](icordebugstepper-interface.md)\\\n Represents a step in code execution that is performed by a debugger, serves as an identifier between the issuance and completion of a command, and provides a way to cancel a step.  \n  \n [ICorDebugStepper2 Interface](icordebugstepper2-interface1.md)\\\n Provides support for Just My Code (JMC) debugging.  \n  \n [ICorDebugStepperEnum Interface](icordebugstepperenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugStepper` arrays.  \n  \n [ICorDebugStringValue Interface](icordebugstringvalue-interface.md)\\\n A subclass of `ICorDebugHeapValue` that applies to string values.  \n  \n [ICorDebugSymbolProvider Interface](icordebugsymbolprovider-interface.md)\\\n Provides methods that can be used to retrieve debug symbol information. **Available on .NET Native only.**  \n  \n [ICorDebugSymbolProvider2 Interface](icordebugsymbolprovider2-interface.md)\\\n Logically extends the [ICorDebugSymbolProvider](icordebugsymbolprovider-interface.md) interface to retrieve additional debug symbol information. **Available on .NET Native only.**  \n  \n [ICorDebugThread Interface](icordebugthread-interface.md)\\\n Represents a thread in a process. The lifetime of an `ICorDebugThread` instance is the same as the lifetime of the thread it represents.  \n  \n [ICorDebugThread2 Interface](icordebugthread2-interface.md)\\\n Serves as a logical extension to `ICorDebugThread`.  \n  \n [ICorDebugThread3 Interface](icordebugthread3-interface.md)\\\n Provides the entry point to the [ICorDebugStackWalk](icordebugstackwalk-interface.md) and corresponding interfaces.  \n  \n [ICorDebugThread4 Interface](icordebugthread4-interface.md)\\\n Provides thread blocking information.  \n  \n [ICorDebugThreadEnum Interface](icordebugthreadenum-interface1.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugThread` arrays.  \n  \n [ICorDebugType Interface](icordebugtype-interface.md)\\\n Represents a type, which can be either basic or complex (that is, user-defined). If the type is generic, `ICorDebugType` represents the instantiated generic type.  \n  \n [ICorDebugType2 Interface](icordebugtype2-interface.md)\\\n Extends the [ICorDebugType](icordebugtype-interface.md) interface to retrieve the type identifier  of a base type or complex (user-defined) type.  \n  \n [ICorDebugTypeEnum Interface](icordebugtypeenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugType` arrays.  \n  \n [ICorDebugUnmanagedCallback Interface](icordebugunmanagedcallback-interface.md)\\\n Provides notification of native events that are not directly related to the CLR.  \n  \n [ICorDebugValue](icordebugvalue-interface.md)\\\n Represents a read or write value in the process being debugged.  \n  \n [ICorDebugValue2](icordebugvalue2-interface.md)\\\n Extends `ICorDebugValue` to provide support for `ICorDebugType`.  \n  \n [ICorDebugValue3 Interface](icordebugvalue3-interface.md)\\\n Extends the \"ICorDebugValue\" and \"ICorDebugValue2\" interfaces to provide support for arrays that are larger than 2 GB.  \n  \n [ICorDebugValueBreakpoint](icordebugvaluebreakpoint-interface.md)\\\n Extends `ICorDebugBreakpoint` to provide access to specific values.  \n  \n [ICorDebugValueEnum](icordebugvalueenum-interface.md)\\\n Implements `ICorDebugEnum` methods, and enumerates `ICorDebugValue` arrays.  \n  \n [ICorDebugVariableHome Interface](icordebugvariablehome-interface.md)\\\n Represents a local variable or argument of a function.  \n  \n [ICorDebugVariableHomeEnum Interface](icordebugvariablehomeenum-interface.md)\\\n Provides an enumerator to the local variables and arguments in a function.  \n  \n [ICorDebugVariableSymbol Interface](icordebugvariablesymbol-interface.md)\\\n Retrieves the debug symbol information for a variable. **Available on .NET Native only.**  \n  \n [ICorDebugVirtualUnwinder Interface](icordebugvirtualunwinder-interface.md)\\\n Provides methods to help in stack unwinding. **Available on .NET Native only.**  \n  \n [ICorPublish Interface](icorpublish-interface.md)\\\n Serves as the general interface for the publishing processes.  \n  \n [ICorPublishAppDomain Interface](icorpublishappdomain-interface.md)\\\n Represents and provides information about an application domain.  \n  \n [ICorPublishAppDomainEnum Interface](icorpublishappdomainenum-interface.md)\\\n Provides methods that traverse a collection of `ICorPublishAppDomain` objects that currently exist within a process.  \n  \n [ICorPublishEnum Interface](icorpublishenum-interface.md)\\\n Serves as the abstract base for publishing enumerators.  \n  \n [ICorPublishProcess Interface](icorpublishprocess-interface.md)\\\n Provides methods that access information about a process.  \n  \n [ICorPublishProcessEnum Interface](icorpublishprocessenum-interface.md)\\\n Provides methods that traverse a collection of `ICorPublishProcess` objects.  \n\n [ISOSDacInterface Interface](isosdacinterface-interface.md)\\\n Provides helper methods to access data from `SOS`.\n\n [IXCLRDataMethodDefinition Interface](ixclrdatamethoddefinition-interface.md)\\\n Provides methods for querying information about a method definition.\n \n [IXCLRDataMethodInstance Interface](ixclrdatamethodinstance-interface.md)\\\n Provides methods for querying information about a method instance.\n \n [IXCLRDataModule Interface](ixclrdatamodule-interface.md)\\\n Provides methods for querying information about a loaded module.\n \n [IXCLRDataProcess Interface](ixclrdataprocess-interface.md)\\\n Provides methods for querying information about a process.\n  \n## Related Sections  \n [Debugging Coclasses](debugging-coclasses.md)\\\n [Debugging Global Static Functions](debugging-global-static-functions.md)\\\n [Debugging Enumerations](debugging-enumerations.md)\\\n [Debugging Structures](debugging-structures.md)\\\n","nodes":[{"pos":[4,309],"embed":true,"restype":"x-metadata","content":"title: \"Debugging Interfaces\"\nms.date: \"02/07/2019\"\nhelpviewer_keywords: \n  - \"unmanaged interfaces [.NET Framework], debugging\"\n  - \"debugging interfaces [.NET Framework]\"\n  - \"interfaces [.NET Framework debugging]\"\nms.assetid: b6297c26-7624-4431-8af4-14112d07bcd5\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"Debugging Interfaces","nodes":[{"pos":[0,20],"content":"Debugging Interfaces","nodes":[{"content":"Debugging Interfaces","pos":[0,20]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[316,336],"content":"Debugging Interfaces","linkify":"Debugging Interfaces","nodes":[{"content":"Debugging Interfaces","pos":[0,20]}]},{"content":"This section describes the unmanaged interfaces that handle the debugging of a program that is executing in the common language runtime (CLR).","pos":[337,479]},{"pos":[488,503],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>ICLRDataEnumMemoryRegions Interface<ept id=\"p1\">](iclrdataenummemoryregions-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[507,585],"source":"[ICLRDataEnumMemoryRegions Interface](iclrdataenummemoryregions-interface.md)\\"},{"content":"Provides a method to enumerate regions of memory that are specified by callers.","pos":[587,666]},{"content":"<bpt id=\"p1\">[</bpt>ICLRDataEnumMemoryRegionsCallback Interface<ept id=\"p1\">](iclrdataenummemoryregionscallback-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[673,767],"source":"[ICLRDataEnumMemoryRegionsCallback Interface](iclrdataenummemoryregionscallback-interface.md)\\"},{"content":"Provides a callback method for <ph id=\"ph1\">`EnumMemoryRegions`</ph> to report to the debugger, the result of an attempt to enumerate a specified region of memory.","pos":[769,914],"source":"Provides a callback method for `EnumMemoryRegions` to report to the debugger, the result of an attempt to enumerate a specified region of memory."},{"content":"<bpt id=\"p1\">[</bpt>ICLRDataTarget Interface<ept id=\"p1\">](iclrdatatarget-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[921,977],"source":"[ICLRDataTarget Interface](iclrdatatarget-interface.md)\\"},{"content":"Provides methods for interaction with a target CLR process.","pos":[979,1038]},{"content":"<bpt id=\"p1\">[</bpt>ICLRDataTarget2 Interface<ept id=\"p1\">](iclrdatatarget2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[1045,1103],"source":"[ICLRDataTarget2 Interface](iclrdatatarget2-interface.md)\\"},{"content":"A subclass of <ph id=\"ph1\">`ICLRDataTarget`</ph> that is used by the data access services layer to manipulate virtual memory regions in the target process.","pos":[1105,1242],"source":"A subclass of `ICLRDataTarget` that is used by the data access services layer to manipulate virtual memory regions in the target process."},{"content":"<bpt id=\"p1\">[</bpt>ICLRDataTarget3 Interface<ept id=\"p1\">](iclrdatatarget3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[1249,1307],"source":"[ICLRDataTarget3 Interface](iclrdatatarget3-interface.md)\\"},{"content":"A subclass of <bpt id=\"p1\">[</bpt>ICLRDataTarget2<ept id=\"p1\">](iclrdatatarget2-interface.md)</ept> that provides access to exception information.","pos":[1309,1417],"source":"A subclass of [ICLRDataTarget2](iclrdatatarget2-interface.md) that provides access to exception information."},{"content":"<bpt id=\"p1\">[</bpt>ICLRDebugging Interface<ept id=\"p1\">](iclrdebugging-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[1424,1478],"source":"[ICLRDebugging Interface](iclrdebugging-interface.md)\\"},{"content":"Provides methods that handle loading and unloading modules for debugging.","pos":[1480,1553]},{"content":"<bpt id=\"p1\">[</bpt>ICLRDebuggingLibraryProvider Interface<ept id=\"p1\">](iclrdebugginglibraryprovider-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[1560,1644],"source":"[ICLRDebuggingLibraryProvider Interface](iclrdebugginglibraryprovider-interface.md)\\"},{"content":"Includes the <bpt id=\"p1\">[</bpt>ProvideLibrary Method<ept id=\"p1\">](iclrdebugginglibraryprovider-providelibrary-method.md)</ept> method, which gets a library provider callback interface that allows common language runtime version-specific debugging libraries to be located and loaded on demand.","pos":[1646,1903],"source":"Includes the [ProvideLibrary Method](iclrdebugginglibraryprovider-providelibrary-method.md) method, which gets a library provider callback interface that allows common language runtime version-specific debugging libraries to be located and loaded on demand."},{"content":"<bpt id=\"p1\">[</bpt>ICLRMetadataLocator Interface<ept id=\"p1\">](iclrmetadatalocator-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[1910,1976],"source":"[ICLRMetadataLocator Interface](iclrmetadatalocator-interface.md)\\"},{"content":"Interface used by the data access services layer to locate metadata of assemblies in a target process.","pos":[1978,2080]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebug Interface<ept id=\"p1\">](icordebug-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[2087,2133],"source":"[ICorDebug Interface](icordebug-interface.md)\\"},{"content":"Provides methods that allow developers to debug applications in the CLR environment.","pos":[2135,2219]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugAppDomain Interface<ept id=\"p1\">](icordebugappdomain-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[2226,2290],"source":"[ICorDebugAppDomain Interface](icordebugappdomain-interface.md)\\"},{"content":"Provides methods for debugging application domains.","pos":[2292,2343]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugAppDomain2 Interface<ept id=\"p1\">](icordebugappdomain2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[2350,2416],"source":"[ICorDebugAppDomain2 Interface](icordebugappdomain2-interface.md)\\"},{"content":"Provides methods to work with arrays, pointers, function pointers, and ByRef types.","pos":[2418,2501]},{"content":"This interface is an extension of the <ph id=\"ph1\">`ICorDebugAppDomain`</ph> interface.","pos":[2502,2571],"source":" This interface is an extension of the `ICorDebugAppDomain` interface."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugAppDomain3 Interface<ept id=\"p1\">](icordebugappdomain3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[2578,2644],"source":"[ICorDebugAppDomain3 Interface](icordebugappdomain3-interface.md)\\"},{"content":"Provides methods to work with the <ph id=\"ph1\">[!INCLUDE[wrt](../../../../includes/wrt-md.md)]</ph> types in an application domain.","pos":[2646,2759],"source":"Provides methods to work with the [!INCLUDE[wrt](../../../../includes/wrt-md.md)] types in an application domain."},{"content":"This interface is an extension of the <ph id=\"ph1\">`ICorDebugAppDomain`</ph> and <ph id=\"ph2\">`ICorDebugAppDomain2`</ph> interfaces.","pos":[2760,2856],"source":" This interface is an extension of the `ICorDebugAppDomain` and `ICorDebugAppDomain2` interfaces."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugAppDomain4 Interface<ept id=\"p1\">](icordebugappdomain4-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[2863,2929],"source":"[ICorDebugAppDomain4 Interface](icordebugappdomain4-interface.md)\\"},{"content":"Logically extends the <bpt id=\"p1\">[</bpt>ICorDebugAppDomain<ept id=\"p1\">](icordebugappdomain-interface.md)</ept> interface to get a managed object from a COM callable wrapper.","pos":[2931,3069],"source":"Logically extends the [ICorDebugAppDomain](icordebugappdomain-interface.md) interface to get a managed object from a COM callable wrapper."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugAppDomainEnum Interface<ept id=\"p1\">](icordebugappdomainenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[3076,3148],"source":"[ICorDebugAppDomainEnum Interface](icordebugappdomainenum-interface.md)\\"},{"content":"Provides a method that returns a specified number of <ph id=\"ph1\">`ICorDebugAppDomain`</ph> values starting at the next location in the enumeration.","pos":[3150,3280],"source":"Provides a method that returns a specified number of `ICorDebugAppDomain` values starting at the next location in the enumeration."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugArrayValue Interface<ept id=\"p1\">](icordebugarrayvalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[3287,3353],"source":"[ICorDebugArrayValue Interface](icordebugarrayvalue-interface.md)\\"},{"content":"A subclass of <ph id=\"ph1\">`ICorDebugHeapValue`</ph> that represents a single-dimensional or multi-dimensional array.","pos":[3355,3454],"source":"A subclass of `ICorDebugHeapValue` that represents a single-dimensional or multi-dimensional array."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugAssembly Interface<ept id=\"p1\">](icordebugassembly-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[3461,3523],"source":"[ICorDebugAssembly Interface](icordebugassembly-interface.md)\\"},{"content":"Represents an assembly.","pos":[3525,3548]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugAssembly2 Interface<ept id=\"p1\">](icordebugassembly2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[3555,3619],"source":"[ICorDebugAssembly2 Interface](icordebugassembly2-interface.md)\\"},{"content":"Represents an assembly.","pos":[3621,3644]},{"content":"This interface is an extension of the <ph id=\"ph1\">`ICorDebugAssembly`</ph> interface.","pos":[3645,3713],"source":" This interface is an extension of the `ICorDebugAssembly` interface."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugAssembly3 Interface<ept id=\"p1\">](icordebugassembly3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[3720,3784],"source":"[ICorDebugAssembly3 Interface](icordebugassembly3-interface.md)\\"},{"content":"Logically extends the <bpt id=\"p1\">[</bpt>ICorDebugAssembly<ept id=\"p1\">](icordebugassembly-interface.md)</ept> interface to provide support for container assemblies and their contained assemblies.","pos":[3786,3945],"source":"Logically extends the [ICorDebugAssembly](icordebugassembly-interface.md) interface to provide support for container assemblies and their contained assemblies."},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[3946,3980],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugAssemblyEnum Interface<ept id=\"p1\">](icordebugassemblyenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[3987,4057],"source":"[ICorDebugAssemblyEnum Interface](icordebugassemblyenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugAssembly`</ph> arrays.","pos":[4059,4137],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugAssembly` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugBlockingObjectEnum Interface<ept id=\"p1\">](icordebugblockingobjectenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[4144,4226],"source":"[ICorDebugBlockingObjectEnum Interface](icordebugblockingobjectenum-interface.md)\\"},{"content":"Provides an enumerator for a list of <bpt id=\"p1\">[</bpt>CorDebugBlockingObject<ept id=\"p1\">](cordebugblockingobject-structure.md)</ept> structures.","pos":[4228,4338],"source":"Provides an enumerator for a list of [CorDebugBlockingObject](cordebugblockingobject-structure.md) structures."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugBoxValue Interface<ept id=\"p1\">](icordebugboxvalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[4345,4407],"source":"[ICorDebugBoxValue Interface](icordebugboxvalue-interface.md)\\"},{"content":"A subclass of <ph id=\"ph1\">`ICorDebugHeapValue`</ph> that represents a boxed value class object.","pos":[4409,4487],"source":"A subclass of `ICorDebugHeapValue` that represents a boxed value class object."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugBreakpoint Interface<ept id=\"p1\">](icordebugbreakpoint-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[4494,4560],"source":"[ICorDebugBreakpoint Interface](icordebugbreakpoint-interface.md)\\"},{"content":"Represents a breakpoint in a function or a watch point on a value.","pos":[4562,4628]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugBreakpointEnum Interface<ept id=\"p1\">](icordebugbreakpointenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[4635,4709],"source":"[ICorDebugBreakpointEnum Interface](icordebugbreakpointenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugBreakpoint`</ph> arrays.","pos":[4711,4791],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugBreakpoint` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugChain Interface<ept id=\"p1\">](icordebugchain-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[4798,4854],"source":"[ICorDebugChain Interface](icordebugchain-interface.md)\\"},{"content":"Represents a segment of a physical or logical call stack.","pos":[4856,4913]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugChainEnum Interface<ept id=\"p1\">](icordebugchainenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[4920,4984],"source":"[ICorDebugChainEnum Interface](icordebugchainenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugChain`</ph> arrays.","pos":[4986,5061],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugChain` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugClass Interface<ept id=\"p1\">](icordebugclass-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[5068,5124],"source":"[ICorDebugClass Interface](icordebugclass-interface.md)\\"},{"content":"Represents a type, which can be either basic or complex (that is, user-defined).","pos":[5126,5206]},{"content":"If the type is generic, <ph id=\"ph1\">`ICorDebugClass`</ph> represents the uninstantiated generic type.","pos":[5207,5291],"source":" If the type is generic, `ICorDebugClass` represents the uninstantiated generic type."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugClass2 Interface<ept id=\"p1\">](icordebugclass2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[5298,5356],"source":"[ICorDebugClass2 Interface](icordebugclass2-interface.md)\\"},{"content":"Represents a generic class or a class with a method parameter of type <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph>.","pos":[5358,5447],"source":"Represents a generic class or a class with a method parameter of type <xref:System.Type>."},{"content":"This interface extends <ph id=\"ph1\">`ICorDebugClass`</ph>.","pos":[5448,5488],"source":" This interface extends `ICorDebugClass`."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugCode Interface<ept id=\"p1\">](icordebugcode-interface1.md)</ept><ph id=\"ph1\">\\</ph>","pos":[5495,5550],"source":"[ICorDebugCode Interface](icordebugcode-interface1.md)\\"},{"content":"Represents a segment of either Microsoft intermediate language (MSIL) code or native code.","pos":[5552,5642]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugCode2 Interface<ept id=\"p1\">](icordebugcode2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[5649,5705],"source":"[ICorDebugCode2 Interface](icordebugcode2-interface.md)\\"},{"content":"Provides methods that extend the capabilities of <ph id=\"ph1\">`ICorDebugCode`</ph>.","pos":[5707,5772],"source":"Provides methods that extend the capabilities of `ICorDebugCode`."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugCode3 Interface<ept id=\"p1\">](icordebugcode3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[5779,5835],"source":"[ICorDebugCode3 Interface](icordebugcode3-interface.md)\\"},{"content":"Provides a method that extends <bpt id=\"p1\">[</bpt>ICorDebugCode<ept id=\"p1\">](icordebugcode-interface1.md)</ept> and <bpt id=\"p2\">[</bpt>ICorDebugCode2<ept id=\"p2\">](icordebugcode2-interface.md)</ept> to provide information about a managed return value.","pos":[5837,6015],"source":"Provides a method that extends [ICorDebugCode](icordebugcode-interface1.md) and [ICorDebugCode2](icordebugcode2-interface.md) to provide information about a managed return value."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugCode4 Interface<ept id=\"p1\">](icordebugcode4-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[6022,6078],"source":"[ICorDebugCode4 Interface](icordebugcode4-interface.md)\\"},{"content":"Provides a method that enables a debugger to enumerate the local variables and arguments in a function.","pos":[6080,6183]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugCodeEnum Interface<ept id=\"p1\">](icordebugcodeenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[6190,6252],"source":"[ICorDebugCodeEnum Interface](icordebugcodeenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugCode`</ph> arrays.","pos":[6254,6328],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugCode` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugComObjectValue Interface<ept id=\"p1\">](icordebugcomobjectvalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[6335,6409],"source":"[ICorDebugComObjectValue Interface](icordebugcomobjectvalue-interface.md)\\"},{"content":"Provides methods to retrieve cached interface objects.","pos":[6411,6465]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugContext Interface<ept id=\"p1\">](icordebugcontext-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[6472,6532],"source":"[ICorDebugContext Interface](icordebugcontext-interface.md)\\"},{"content":"Represents a context object.","pos":[6534,6562]},{"content":"This interface has not been implemented yet.","pos":[6563,6607]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugController Interface<ept id=\"p1\">](icordebugcontroller-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[6614,6680],"source":"[ICorDebugController Interface](icordebugcontroller-interface.md)\\"},{"content":"Represents a scope, either a <ph id=\"ph1\">&lt;xref:System.Diagnostics.Process&gt;</ph> or an <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph>, in which code execution context can be controlled.","pos":[6682,6826],"source":"Represents a scope, either a <xref:System.Diagnostics.Process> or an <xref:System.AppDomain>, in which code execution context can be controlled."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugDataTarget Interface<ept id=\"p1\">](icordebugdatatarget-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[6833,6899],"source":"[ICorDebugDataTarget Interface](icordebugdatatarget-interface.md)\\"},{"content":"Provides a callback interface that provides access to a particular target process.","pos":[6901,6983]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugDataTarget2 Interface<ept id=\"p1\">](icordebugdatatarget2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[6990,7058],"source":"[ICorDebugDataTarget2 Interface](icordebugdatatarget2-interface.md)\\"},{"content":"Logically extends the <bpt id=\"p1\">[</bpt>ICorDebugDataTarget<ept id=\"p1\">](icordebugdatatarget-interface.md)</ept> interface.","pos":[7060,7148],"source":"Logically extends the [ICorDebugDataTarget](icordebugdatatarget-interface.md) interface."},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[7149,7183],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugDataTarget3 Interface<ept id=\"p1\">](icordebugdatatarget3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[7190,7258],"source":"[ICorDebugDataTarget3 Interface](icordebugdatatarget3-interface.md)\\"},{"content":"Logically extends the <bpt id=\"p1\">[</bpt>ICorDebugDataTarget<ept id=\"p1\">](icordebugdatatarget-interface.md)</ept> interface to provide information about loaded modules.","pos":[7260,7392],"source":"Logically extends the [ICorDebugDataTarget](icordebugdatatarget-interface.md) interface to provide information about loaded modules."},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[7393,7427],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugDebugEvent Interface<ept id=\"p1\">](icordebugdebugevent-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[7434,7500],"source":"[ICorDebugDebugEvent Interface](icordebugdebugevent-interface.md)\\"},{"content":"Defines the base interface from which all <ph id=\"ph1\">`ICorDebug`</ph> debug events derive.","pos":[7502,7576],"source":"Defines the base interface from which all `ICorDebug` debug events derive."},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[7577,7611],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugEditAndContinueErrorInfo Interface<ept id=\"p1\">](icordebugeditandcontinueerrorinfo-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[7618,7712],"source":"[ICorDebugEditAndContinueErrorInfo Interface](icordebugeditandcontinueerrorinfo-interface.md)\\"},{"content":"Obsolete.","pos":[7714,7723]},{"content":"Do not use this interface.","pos":[7724,7750]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugEditAndContinueSnapshot Interface<ept id=\"p1\">](icordebugeditandcontinuesnapshot-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[7757,7849],"source":"[ICorDebugEditAndContinueSnapshot Interface](icordebugeditandcontinuesnapshot-interface.md)\\"},{"content":"Obsolete.","pos":[7851,7860]},{"content":"Do not use this interface.","pos":[7861,7887]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugEnum Interface<ept id=\"p1\">](icordebugenum-interface1.md)</ept><ph id=\"ph1\">\\</ph>","pos":[7894,7949],"source":"[ICorDebugEnum Interface](icordebugenum-interface1.md)\\"},{"content":"Serves as the abstract base interface for debugging enumerators.","pos":[7951,8015]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugErrorInfoEnum Interface<ept id=\"p1\">](icordebugerrorinfoenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[8022,8094],"source":"[ICorDebugErrorInfoEnum Interface](icordebugerrorinfoenum-interface.md)\\"},{"content":"Obsolete.","pos":[8096,8105]},{"content":"Do not use this interface.","pos":[8106,8132]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugEval Interface<ept id=\"p1\">](icordebugeval-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[8139,8193],"source":"[ICorDebugEval Interface](icordebugeval-interface.md)\\"},{"content":"Provides methods to enable the debugger to execute code within the context of the code being debugged.","pos":[8195,8297]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugEval2 Interface<ept id=\"p1\">](icordebugeval2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[8304,8360],"source":"[ICorDebugEval2 Interface](icordebugeval2-interface.md)\\"},{"content":"Extends <ph id=\"ph1\">`ICorDebugEval`</ph> to provide support for generic types.","pos":[8362,8423],"source":"Extends `ICorDebugEval` to provide support for generic types."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugExceptionDebugEvent Interface<ept id=\"p1\">](icordebugexceptiondebugevent-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[8430,8514],"source":"[ICorDebugExceptionDebugEvent Interface](icordebugexceptiondebugevent-interface.md)\\"},{"content":"Extends the <bpt id=\"p1\">[</bpt>ICorDebugDebugEvent<ept id=\"p1\">](icordebugdebugevent-interface.md)</ept> interface to support exception events.","pos":[8516,8622],"source":"Extends the [ICorDebugDebugEvent](icordebugdebugevent-interface.md) interface to support exception events."},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[8623,8657],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugExceptionObjectCallStackEnum Interface<ept id=\"p1\">](icordebugexceptionobjectcallstackenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[8664,8766],"source":"[ICorDebugExceptionObjectCallStackEnum Interface](icordebugexceptionobjectcallstackenum-interface.md)\\"},{"content":"Provides an enumerator for call stack information that is embedded in an exception object.","pos":[8768,8858]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugExceptionObjectValue Interface<ept id=\"p1\">](icordebugexceptionobjectvalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[8865,8951],"source":"[ICorDebugExceptionObjectValue Interface](icordebugexceptionobjectvalue-interface.md)\\"},{"content":"Extends the <bpt id=\"p1\">[</bpt>ICorDebugObjectValue<ept id=\"p1\">](icordebugobjectvalue-interface.md)</ept> interface to provide stack trace information from a managed exception object.","pos":[8953,9100],"source":"Extends the [ICorDebugObjectValue](icordebugobjectvalue-interface.md) interface to provide stack trace information from a managed exception object."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugFrame Interface<ept id=\"p1\">](icordebugframe-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[9107,9163],"source":"[ICorDebugFrame Interface](icordebugframe-interface.md)\\"},{"content":"Represents a frame on the current stack.","pos":[9165,9205]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugFrameEnum Interface<ept id=\"p1\">](icordebugframeenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[9212,9276],"source":"[ICorDebugFrameEnum Interface](icordebugframeenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugFrame`</ph> arrays.","pos":[9278,9353],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugFrame` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugFunction Interface<ept id=\"p1\">](icordebugfunction-interface1.md)</ept><ph id=\"ph1\">\\</ph>","pos":[9360,9423],"source":"[ICorDebugFunction Interface](icordebugfunction-interface1.md)\\"},{"content":"Represents a managed function or method.","pos":[9425,9465]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugFunction2 Interface<ept id=\"p1\">](icordebugfunction2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[9472,9536],"source":"[ICorDebugFunction2 Interface](icordebugfunction2-interface.md)\\"},{"content":"Logically extends <ph id=\"ph1\">`ICorDebugFunction`</ph> to provide support for Just My Code step-through debugging.","pos":[9538,9635],"source":"Logically extends `ICorDebugFunction` to provide support for Just My Code step-through debugging."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugFunction3 Interface<ept id=\"p1\">](icordebugfunction3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[9642,9706],"source":"[ICorDebugFunction3 Interface](icordebugfunction3-interface.md)\\"},{"content":"Logically extends the <bpt id=\"p1\">[</bpt>ICorDebugFunction<ept id=\"p1\">](icordebugfunction-interface1.md)</ept> interface to provide access to code from a ReJIT request.","pos":[9708,9840],"source":"Logically extends the [ICorDebugFunction](icordebugfunction-interface1.md) interface to provide access to code from a ReJIT request."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugFunctionBreakpoint Interface<ept id=\"p1\">](icordebugfunctionbreakpoint-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[9847,9929],"source":"[ICorDebugFunctionBreakpoint Interface](icordebugfunctionbreakpoint-interface.md)\\"},{"content":"Extends <ph id=\"ph1\">`ICorDebugBreakpoint`</ph> to support breakpoints within functions.","pos":[9931,10001],"source":"Extends `ICorDebugBreakpoint` to support breakpoints within functions."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugGCReferenceEnum Interface<ept id=\"p1\">](icordebuggcreferenceenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[10008,10084],"source":"[ICorDebugGCReferenceEnum Interface](icordebuggcreferenceenum-interface.md)\\"},{"content":"Provides an enumerator for objects that will be garbage-collected.","pos":[10086,10152]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugGenericValue Interface<ept id=\"p1\">](icordebuggenericvalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[10159,10229],"source":"[ICorDebugGenericValue Interface](icordebuggenericvalue-interface.md)\\"},{"content":"A subclass of <ph id=\"ph1\">`ICorDebugValue`</ph> that applies to all values.","pos":[10231,10289],"source":"A subclass of `ICorDebugValue` that applies to all values."},{"content":"This interface provides Get and Set methods for the value.","pos":[10290,10348]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugGuidToTypeEnum Interface<ept id=\"p1\">](icordebugguidtotypeenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[10355,10429],"source":"[ICorDebugGuidToTypeEnum Interface](icordebugguidtotypeenum-interface.md)\\"},{"content":"Provides an enumerator for an object that maps GUIDs and their corresponding <ph id=\"ph1\">`ICorDebugType`</ph> objects.","pos":[10431,10532],"source":"Provides an enumerator for an object that maps GUIDs and their corresponding `ICorDebugType` objects."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugHandleValue Interface<ept id=\"p1\">](icordebughandlevalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[10539,10607],"source":"[ICorDebugHandleValue Interface](icordebughandlevalue-interface.md)\\"},{"content":"A subclass of <ph id=\"ph1\">`ICorDebugReferenceValue`</ph> that represents a reference value to which the debugger has created a handle for garbage collection.","pos":[10609,10749],"source":"A subclass of `ICorDebugReferenceValue` that represents a reference value to which the debugger has created a handle for garbage collection."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugHeapEnum Interface<ept id=\"p1\">](icordebugheapenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[10756,10818],"source":"[ICorDebugHeapEnum Interface](icordebugheapenum-interface.md)\\"},{"content":"Provides an enumerator for objects on the managed heap.","pos":[10820,10875]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugHeapSegmentEnum Interface<ept id=\"p1\">](icordebugheapsegmentenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[10882,10958],"source":"[ICorDebugHeapSegmentEnum Interface](icordebugheapsegmentenum-interface.md)\\"},{"content":"Provides an enumerator for the memory regions of the managed heap.","pos":[10960,11026]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugHeapValue Interface<ept id=\"p1\">](icordebugheapvalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[11033,11097],"source":"[ICorDebugHeapValue Interface](icordebugheapvalue-interface.md)\\"},{"content":"A subclass of <ph id=\"ph1\">`ICorDebugValue`</ph> that represents an object that has been collected by the CLR garbage collector.","pos":[11099,11209],"source":"A subclass of `ICorDebugValue` that represents an object that has been collected by the CLR garbage collector."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugHeapValue2 Interface<ept id=\"p1\">](icordebugheapvalue2-interface1.md)</ept><ph id=\"ph1\">\\</ph>","pos":[11216,11283],"source":"[ICorDebugHeapValue2 Interface](icordebugheapvalue2-interface1.md)\\"},{"content":"An extension of <ph id=\"ph1\">`ICorDebugHeapValue`</ph> that provides support for runtime handles.","pos":[11285,11364],"source":"An extension of `ICorDebugHeapValue` that provides support for runtime handles."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugHeapValue3 Interface<ept id=\"p1\">](icordebugheapvalue3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[11371,11437],"source":"[ICorDebugHeapValue3 Interface](icordebugheapvalue3-interface.md)\\"},{"content":"Exposes the monitor lock properties of objects.","pos":[11439,11486]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugILCode Interface<ept id=\"p1\">](icordebugilcode-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[11493,11551],"source":"[ICorDebugILCode Interface](icordebugilcode-interface.md)\\"},{"content":"Represents a segment of intermediate language (IL) code.","pos":[11553,11609]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugILCode2 Interface<ept id=\"p1\">](icordebugilcode2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[11616,11676],"source":"[ICorDebugILCode2 Interface](icordebugilcode2-interface.md)\\"},{"content":"Logically extends the <bpt id=\"p1\">[</bpt>ICorDebugILCode<ept id=\"p1\">](icordebugilcode-interface.md)</ept> interface to provide methods that return the token for a function's local variable signature, and that map a profiler's instrumented intermediate language (IL) offsets to original method IL offsets.","pos":[11678,11946],"source":"Logically extends the [ICorDebugILCode](icordebugilcode-interface.md) interface to provide methods that return the token for a function's local variable signature, and that map a profiler's instrumented intermediate language (IL) offsets to original method IL offsets."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugILFrame Interface<ept id=\"p1\">](icordebugilframe-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[11953,12013],"source":"[ICorDebugILFrame Interface](icordebugilframe-interface.md)\\"},{"content":"Represents a stack frame of MSIL code.","pos":[12015,12053]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugILFrame2 Interface<ept id=\"p1\">](icordebugilframe2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[12060,12122],"source":"[ICorDebugILFrame2 Interface](icordebugilframe2-interface.md)\\"},{"content":"A logical extension of <ph id=\"ph1\">`ICorDebugILFrame`</ph>.","pos":[12124,12166],"source":"A logical extension of `ICorDebugILFrame`."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugILFrame3 Interface<ept id=\"p1\">](icordebugilframe3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[12173,12235],"source":"[ICorDebugILFrame3 Interface](icordebugilframe3-interface.md)\\"},{"content":"Provides a method that encapsulates the return value of a function.","pos":[12237,12304]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugILFrame4 Interface<ept id=\"p1\">](icordebugilframe4-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[12311,12373],"source":"[ICorDebugILFrame4 Interface](icordebugilframe4-interface.md)\\"},{"content":"Provides methods that allow you to access the local variables and code in a stack frame of intermediate language (IL) code.","pos":[12375,12498]},{"content":"A parameter specifies whether the debugger has access to variables and code added in profiler ReJIT instrumentation.","pos":[12499,12615]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugInstanceFieldSymbol Interface<ept id=\"p1\">](icordebuginstancefieldsymbol-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[12622,12706],"source":"[ICorDebugInstanceFieldSymbol Interface](icordebuginstancefieldsymbol-interface.md)\\"},{"content":"Represents the debug symbol information for an instance field.","pos":[12708,12770]},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[12771,12805],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugInternalFrame Interface<ept id=\"p1\">](icordebuginternalframe-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[12812,12884],"source":"[ICorDebugInternalFrame Interface](icordebuginternalframe-interface.md)\\"},{"content":"Identifies frame types for the debugger.","pos":[12886,12926]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugInternalFrame2 Interface<ept id=\"p1\">](icordebuginternalframe2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[12933,13007],"source":"[ICorDebugInternalFrame2 Interface](icordebuginternalframe2-interface.md)\\"},{"content":"Provides information about internal frames, including stack address and position in relation to <bpt id=\"p1\">[</bpt>ICorDebugFrame<ept id=\"p1\">](icordebugframe-interface.md)</ept> objects.","pos":[13009,13159],"source":"Provides information about internal frames, including stack address and position in relation to [ICorDebugFrame](icordebugframe-interface.md) objects."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugLoadedModule Interface<ept id=\"p1\">](icordebugloadedmodule-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[13166,13236],"source":"[ICorDebugLoadedModule Interface](icordebugloadedmodule-interface.md)\\"},{"content":"Provides information about a loaded module.","pos":[13238,13281]},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[13282,13316],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugManagedCallback Interface<ept id=\"p1\">](icordebugmanagedcallback-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[13323,13399],"source":"[ICorDebugManagedCallback Interface](icordebugmanagedcallback-interface.md)\\"},{"content":"Provides methods to process debugger callbacks.","pos":[13401,13448]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugManagedCallback2 Interface<ept id=\"p1\">](icordebugmanagedcallback2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[13455,13533],"source":"[ICorDebugManagedCallback2 Interface](icordebugmanagedcallback2-interface.md)\\"},{"content":"Provides methods to support debugger exception handling and managed debugging assistants (MDAs).","pos":[13535,13631]},{"content":"<ph id=\"ph1\">`ICorDebugManagedCallback2`</ph> is a logical extension of <ph id=\"ph2\">`ICorDebugManagedCallback`</ph>.","pos":[13632,13713],"source":"`ICorDebugManagedCallback2` is a logical extension of `ICorDebugManagedCallback`."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugManagedCallback3 Interface<ept id=\"p1\">](icordebugmanagedcallback3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[13720,13798],"source":"[ICorDebugManagedCallback3 Interface](icordebugmanagedcallback3-interface.md)\\"},{"content":"Provides a callback method that indicates that an enabled custom debugger notification has been raised.","pos":[13800,13903]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugMDA Interface<ept id=\"p1\">](icordebugmda-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[13910,13962],"source":"[ICorDebugMDA Interface](icordebugmda-interface.md)\\"},{"content":"Represents a managed debugging assistant (MDA) message.","pos":[13964,14019]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugMemoryBuffer Interface<ept id=\"p1\">](icordebugmemorybuffer-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[14026,14096],"source":"[ICorDebugMemoryBuffer Interface](icordebugmemorybuffer-interface.md)\\"},{"content":"Represents an in-memory buffer.","pos":[14098,14129]},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[14130,14164],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugMergedAssemblyRecord Interface<ept id=\"p1\">](icordebugmergedassemblyrecord-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[14171,14257],"source":"[ICorDebugMergedAssemblyRecord Interface](icordebugmergedassemblyrecord-interface.md)\\"},{"content":"Provides information about a merged assembly.","pos":[14259,14304]},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[14305,14339],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugMetaDataLocator Interface<ept id=\"p1\">](icordebugmetadatalocator-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[14346,14422],"source":"[ICorDebugMetaDataLocator Interface](icordebugmetadatalocator-interface.md)\\"},{"content":"Provides metadata information to the debugger.","pos":[14424,14470]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugModule Interface<ept id=\"p1\">](icordebugmodule-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[14477,14535],"source":"[ICorDebugModule Interface](icordebugmodule-interface.md)\\"},{"content":"Represents a CLR module, which is either an executable or a dynamic-link library (DLL).","pos":[14537,14624]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugModule2 Interface<ept id=\"p1\">](icordebugmodule2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[14631,14691],"source":"[ICorDebugModule2 Interface](icordebugmodule2-interface.md)\\"},{"content":"Serves as a logical extension to <ph id=\"ph1\">`ICorDebugModule`</ph>.","pos":[14693,14744],"source":"Serves as a logical extension to `ICorDebugModule`."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugModule3 Interface<ept id=\"p1\">](icordebugmodule3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[14751,14811],"source":"[ICorDebugModule3 Interface](icordebugmodule3-interface.md)\\"},{"content":"Creates a symbol reader for a dynamic module.","pos":[14813,14858]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugModuleBreakpoint Interface<ept id=\"p1\">](icordebugmodulebreakpoint-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[14865,14943],"source":"[ICorDebugModuleBreakpoint Interface](icordebugmodulebreakpoint-interface.md)\\"},{"content":"Extends <ph id=\"ph1\">`ICorDebugBreakpoint`</ph> to provide access to specific modules.","pos":[14945,15013],"source":"Extends `ICorDebugBreakpoint` to provide access to specific modules."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugModuleDebugEvent Interface<ept id=\"p1\">](icordebugmoduledebugevent-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[15020,15098],"source":"[ICorDebugModuleDebugEvent Interface](icordebugmoduledebugevent-interface.md)\\"},{"content":"Extends the <bpt id=\"p1\">[</bpt>ICorDebugDebugEvent<ept id=\"p1\">](icordebugdebugevent-interface.md)</ept> interface to support module-level events.","pos":[15100,15209],"source":"Extends the [ICorDebugDebugEvent](icordebugdebugevent-interface.md) interface to support module-level events."},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[15210,15244],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugModuleEnum Interface<ept id=\"p1\">](icordebugmoduleenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[15251,15317],"source":"[ICorDebugModuleEnum Interface](icordebugmoduleenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugModule`</ph> arrays.","pos":[15319,15395],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugModule` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugMutableDataTarget Interface<ept id=\"p1\">](icordebugmutabledatatarget-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[15402,15482],"source":"[ICorDebugMutableDataTarget Interface](icordebugmutabledatatarget-interface.md)\\"},{"content":"Extends the <bpt id=\"p1\">[</bpt>ICorDebugDataTarget<ept id=\"p1\">](icordebugdatatarget-interface.md)</ept> interface to support mutable data targets.","pos":[15484,15594],"source":"Extends the [ICorDebugDataTarget](icordebugdatatarget-interface.md) interface to support mutable data targets."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugNativeFrame Interface<ept id=\"p1\">](icordebugnativeframe-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[15601,15669],"source":"[ICorDebugNativeFrame Interface](icordebugnativeframe-interface.md)\\"},{"content":"A specialized implementation of <ph id=\"ph1\">`ICorDebugFrame`</ph> used for native frames.","pos":[15671,15743],"source":"A specialized implementation of `ICorDebugFrame` used for native frames."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugNativeFrame2 Interface<ept id=\"p1\">](icordebugnativeframe2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[15750,15820],"source":"[ICorDebugNativeFrame2 Interface](icordebugnativeframe2-interface.md)\\"},{"content":"Provides methods that test for child and parent frame relationships.","pos":[15822,15890]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugObjectEnum Interface<ept id=\"p1\">](icordebugobjectenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[15897,15963],"source":"[ICorDebugObjectEnum Interface](icordebugobjectenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates arrays of objects by their relative virtual addresses (RVAs).","pos":[15965,16077],"source":"Implements `ICorDebugEnum` methods, and enumerates arrays of objects by their relative virtual addresses (RVAs)."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugObjectValue Interface<ept id=\"p1\">](icordebugobjectvalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[16084,16152],"source":"[ICorDebugObjectValue Interface](icordebugobjectvalue-interface.md)\\"},{"content":"A subclass of <ph id=\"ph1\">`ICorDebugValue`</ph> that represents a value that contains an object.","pos":[16154,16233],"source":"A subclass of `ICorDebugValue` that represents a value that contains an object."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugObjectValue2 Interface<ept id=\"p1\">](icordebugobjectvalue2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[16240,16310],"source":"[ICorDebugObjectValue2 Interface](icordebugobjectvalue2-interface.md)\\"},{"content":"Extends <ph id=\"ph1\">`ICorDebugObjectValue`</ph> to support inheritance and overrides.","pos":[16312,16380],"source":"Extends `ICorDebugObjectValue` to support inheritance and overrides."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcess Interface<ept id=\"p1\">](icordebugprocess-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[16387,16447],"source":"[ICorDebugProcess Interface](icordebugprocess-interface.md)\\"},{"content":"Represents a process that is executing managed code.","pos":[16449,16501]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcess2 Interface<ept id=\"p1\">](icordebugprocess2-interface1.md)</ept><ph id=\"ph1\">\\</ph>","pos":[16508,16571],"source":"[ICorDebugProcess2 Interface](icordebugprocess2-interface1.md)\\"},{"content":"A logical extension of <ph id=\"ph1\">`ICorDebugProcess`</ph>.","pos":[16573,16615],"source":"A logical extension of `ICorDebugProcess`."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcess3 Interface<ept id=\"p1\">](icordebugprocess3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[16622,16684],"source":"[ICorDebugProcess3 Interface](icordebugprocess3-interface.md)\\"},{"content":"Controls custom debugger notifications.","pos":[16686,16725]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcess4 Interface<ept id=\"p1\">](icordebugprocess4-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[16728,16790],"source":"[ICorDebugProcess4 Interface](icordebugprocess4-interface.md)\\"},{"content":"Provides support for out of process execution control.","pos":[16792,16846]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcess5 Interface<ept id=\"p1\">](icordebugprocess5-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[16851,16913],"source":"[ICorDebugProcess5 Interface](icordebugprocess5-interface.md)\\"},{"content":"Extends the <bpt id=\"p1\">[</bpt>ICorDebugProcess<ept id=\"p1\">](icordebugprocess-interface.md)</ept> interface to support access to the managed heap, to provide information about garbage collection of managed objects, and to determine whether a debugger loads images from the application's local native image cache.","pos":[16915,17191],"source":"Extends the [ICorDebugProcess](icordebugprocess-interface.md) interface to support access to the managed heap, to provide information about garbage collection of managed objects, and to determine whether a debugger loads images from the application's local native image cache."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcess6 Interface<ept id=\"p1\">](icordebugprocess6-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[17198,17260],"source":"[ICorDebugProcess6 Interface](icordebugprocess6-interface.md)\\"},{"content":"Logically extends the <bpt id=\"p1\">[</bpt>ICorDebugProcess<ept id=\"p1\">](icordebugprocess-interface.md)</ept> interface to enable features such as decoding managed debug events that are encoded in native exception debug events and virtual module splitting.","pos":[17262,17480],"source":"Logically extends the [ICorDebugProcess](icordebugprocess-interface.md) interface to enable features such as decoding managed debug events that are encoded in native exception debug events and virtual module splitting."},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[17481,17515],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcess7 Interface<ept id=\"p1\">](icordebugprocess7-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[17522,17584],"source":"[ICorDebugProcess7 Interface](icordebugprocess7-interface.md)\\"},{"content":"Provides a method that configures the debugger to handle in-memory metadata updates in the target process.","pos":[17586,17692]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcess8 Interface<ept id=\"p1\">](icordebugprocess8-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[17699,17761],"source":"[ICorDebugProcess8 Interface](icordebugprocess8-interface.md)\\"},{"content":"Logically extends the <bpt id=\"p1\">[</bpt>ICorDebugProcess<ept id=\"p1\">](icordebugprocess-interface.md)</ept> interface to enable or disable certain types of <bpt id=\"p2\">[</bpt>ICorDebugManagedCallback2<ept id=\"p2\">](icordebugmanagedcallback2-interface.md)</ept> exception callbacks.","pos":[17763,17971],"source":"Logically extends the [ICorDebugProcess](icordebugprocess-interface.md) interface to enable or disable certain types of [ICorDebugManagedCallback2](icordebugmanagedcallback2-interface.md) exception callbacks."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcessEnum Interface<ept id=\"p1\">](icordebugprocessenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[17978,18046],"source":"[ICorDebugProcessEnum Interface](icordebugprocessenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugProcess`</ph> arrays.","pos":[18048,18125],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugProcess` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugReferenceValue Interface<ept id=\"p1\">](icordebugreferencevalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[18132,18206],"source":"[ICorDebugReferenceValue Interface](icordebugreferencevalue-interface.md)\\"},{"content":"A subclass of <ph id=\"ph1\">`ICorDebugValue`</ph> that supports reference types.","pos":[18208,18269],"source":"A subclass of `ICorDebugValue` that supports reference types."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugRegisterSet Interface<ept id=\"p1\">](icordebugregisterset-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[18276,18344],"source":"[ICorDebugRegisterSet Interface](icordebugregisterset-interface.md)\\"},{"content":"Represents the set of registers available on the machine that is currently executing code.","pos":[18346,18436]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugRegisterSet2 Interface<ept id=\"p1\">](icordebugregisterset2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[18443,18513],"source":"[ICorDebugRegisterSet2 Interface](icordebugregisterset2-interface.md)\\"},{"content":"Extends the capabilities of <ph id=\"ph1\">`ICorDebugRegisterSet`</ph> for hardware platforms that have more than 64 registers.","pos":[18515,18622],"source":"Extends the capabilities of `ICorDebugRegisterSet` for hardware platforms that have more than 64 registers."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugRemote Interface<ept id=\"p1\">](icordebugremote-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[18629,18687],"source":"[ICorDebugRemote Interface](icordebugremote-interface.md)\\"},{"content":"Provides the ability to launch or attach a managed debugger to a remote target process.","pos":[18689,18776]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugRemoteTarget Interface<ept id=\"p1\">](icordebugremotetarget-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[18783,18853],"source":"[ICorDebugRemoteTarget Interface](icordebugremotetarget-interface.md)\\"},{"content":"Provides methods that enable you to debug Silverlight-based applications in the CLR environment.","pos":[18855,18951]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugRuntimeUnwindableFrame Interface<ept id=\"p1\">](icordebugruntimeunwindableframe-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[18958,19048],"source":"[ICorDebugRuntimeUnwindableFrame Interface](icordebugruntimeunwindableframe-interface.md)\\"},{"content":"Provides support for unmanaged methods that require the common language runtime (CLR) to unwind a frame.","pos":[19050,19154]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugStackWalk Interface<ept id=\"p1\">](icordebugstackwalk-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[19161,19225],"source":"[ICorDebugStackWalk Interface](icordebugstackwalk-interface.md)\\"},{"content":"Provides methods for getting the managed methods, or frames, on a thread’s stack.","pos":[19227,19308]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugStaticFieldSymbol Interface<ept id=\"p1\">](icordebugstaticfieldsymbol-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[19315,19395],"source":"[ICorDebugStaticFieldSymbol Interface](icordebugstaticfieldsymbol-interface.md)\\"},{"content":"Represents the debug symbol information for a static field.","pos":[19397,19456]},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[19457,19491],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugStepper Interface<ept id=\"p1\">](icordebugstepper-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[19498,19558],"source":"[ICorDebugStepper Interface](icordebugstepper-interface.md)\\"},{"content":"Represents a step in code execution that is performed by a debugger, serves as an identifier between the issuance and completion of a command, and provides a way to cancel a step.","pos":[19560,19739]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugStepper2 Interface<ept id=\"p1\">](icordebugstepper2-interface1.md)</ept><ph id=\"ph1\">\\</ph>","pos":[19746,19809],"source":"[ICorDebugStepper2 Interface](icordebugstepper2-interface1.md)\\"},{"content":"Provides support for Just My Code (JMC) debugging.","pos":[19811,19861]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugStepperEnum Interface<ept id=\"p1\">](icordebugstepperenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[19868,19936],"source":"[ICorDebugStepperEnum Interface](icordebugstepperenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugStepper`</ph> arrays.","pos":[19938,20015],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugStepper` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugStringValue Interface<ept id=\"p1\">](icordebugstringvalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[20022,20090],"source":"[ICorDebugStringValue Interface](icordebugstringvalue-interface.md)\\"},{"content":"A subclass of <ph id=\"ph1\">`ICorDebugHeapValue`</ph> that applies to string values.","pos":[20092,20157],"source":"A subclass of `ICorDebugHeapValue` that applies to string values."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugSymbolProvider Interface<ept id=\"p1\">](icordebugsymbolprovider-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[20164,20238],"source":"[ICorDebugSymbolProvider Interface](icordebugsymbolprovider-interface.md)\\"},{"content":"Provides methods that can be used to retrieve debug symbol information.","pos":[20240,20311]},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[20312,20346],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugSymbolProvider2 Interface<ept id=\"p1\">](icordebugsymbolprovider2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[20353,20429],"source":"[ICorDebugSymbolProvider2 Interface](icordebugsymbolprovider2-interface.md)\\"},{"content":"Logically extends the <bpt id=\"p1\">[</bpt>ICorDebugSymbolProvider<ept id=\"p1\">](icordebugsymbolprovider-interface.md)</ept> interface to retrieve additional debug symbol information.","pos":[20431,20575],"source":"Logically extends the [ICorDebugSymbolProvider](icordebugsymbolprovider-interface.md) interface to retrieve additional debug symbol information."},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[20576,20610],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugThread Interface<ept id=\"p1\">](icordebugthread-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[20617,20675],"source":"[ICorDebugThread Interface](icordebugthread-interface.md)\\"},{"content":"Represents a thread in a process.","pos":[20677,20710]},{"content":"The lifetime of an <ph id=\"ph1\">`ICorDebugThread`</ph> instance is the same as the lifetime of the thread it represents.","pos":[20711,20813],"source":" The lifetime of an `ICorDebugThread` instance is the same as the lifetime of the thread it represents."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugThread2 Interface<ept id=\"p1\">](icordebugthread2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[20820,20880],"source":"[ICorDebugThread2 Interface](icordebugthread2-interface.md)\\"},{"content":"Serves as a logical extension to <ph id=\"ph1\">`ICorDebugThread`</ph>.","pos":[20882,20933],"source":"Serves as a logical extension to `ICorDebugThread`."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugThread3 Interface<ept id=\"p1\">](icordebugthread3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[20940,21000],"source":"[ICorDebugThread3 Interface](icordebugthread3-interface.md)\\"},{"content":"Provides the entry point to the <bpt id=\"p1\">[</bpt>ICorDebugStackWalk<ept id=\"p1\">](icordebugstackwalk-interface.md)</ept> and corresponding interfaces.","pos":[21002,21117],"source":"Provides the entry point to the [ICorDebugStackWalk](icordebugstackwalk-interface.md) and corresponding interfaces."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugThread4 Interface<ept id=\"p1\">](icordebugthread4-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[21124,21184],"source":"[ICorDebugThread4 Interface](icordebugthread4-interface.md)\\"},{"content":"Provides thread blocking information.","pos":[21186,21223]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugThreadEnum Interface<ept id=\"p1\">](icordebugthreadenum-interface1.md)</ept><ph id=\"ph1\">\\</ph>","pos":[21230,21297],"source":"[ICorDebugThreadEnum Interface](icordebugthreadenum-interface1.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugThread`</ph> arrays.","pos":[21299,21375],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugThread` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugType Interface<ept id=\"p1\">](icordebugtype-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[21382,21436],"source":"[ICorDebugType Interface](icordebugtype-interface.md)\\"},{"content":"Represents a type, which can be either basic or complex (that is, user-defined).","pos":[21438,21518]},{"content":"If the type is generic, <ph id=\"ph1\">`ICorDebugType`</ph> represents the instantiated generic type.","pos":[21519,21600],"source":" If the type is generic, `ICorDebugType` represents the instantiated generic type."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugType2 Interface<ept id=\"p1\">](icordebugtype2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[21607,21663],"source":"[ICorDebugType2 Interface](icordebugtype2-interface.md)\\"},{"content":"Extends the <bpt id=\"p1\">[</bpt>ICorDebugType<ept id=\"p1\">](icordebugtype-interface.md)</ept> interface to retrieve the type identifier  of a base type or complex (user-defined) type.","pos":[21665,21810],"source":"Extends the [ICorDebugType](icordebugtype-interface.md) interface to retrieve the type identifier  of a base type or complex (user-defined) type."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugTypeEnum Interface<ept id=\"p1\">](icordebugtypeenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[21817,21879],"source":"[ICorDebugTypeEnum Interface](icordebugtypeenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugType`</ph> arrays.","pos":[21881,21955],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugType` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugUnmanagedCallback Interface<ept id=\"p1\">](icordebugunmanagedcallback-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[21962,22042],"source":"[ICorDebugUnmanagedCallback Interface](icordebugunmanagedcallback-interface.md)\\"},{"content":"Provides notification of native events that are not directly related to the CLR.","pos":[22044,22124]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugValue<ept id=\"p1\">](icordebugvalue-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[22131,22177],"source":"[ICorDebugValue](icordebugvalue-interface.md)\\"},{"content":"Represents a read or write value in the process being debugged.","pos":[22179,22242]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugValue2<ept id=\"p1\">](icordebugvalue2-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[22249,22297],"source":"[ICorDebugValue2](icordebugvalue2-interface.md)\\"},{"content":"Extends <ph id=\"ph1\">`ICorDebugValue`</ph> to provide support for <ph id=\"ph2\">`ICorDebugType`</ph>.","pos":[22299,22363],"source":"Extends `ICorDebugValue` to provide support for `ICorDebugType`."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugValue3 Interface<ept id=\"p1\">](icordebugvalue3-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[22370,22428],"source":"[ICorDebugValue3 Interface](icordebugvalue3-interface.md)\\"},{"content":"Extends the \"ICorDebugValue\" and \"ICorDebugValue2\" interfaces to provide support for arrays that are larger than 2 GB.","pos":[22430,22548]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugValueBreakpoint<ept id=\"p1\">](icordebugvaluebreakpoint-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[22555,22621],"source":"[ICorDebugValueBreakpoint](icordebugvaluebreakpoint-interface.md)\\"},{"content":"Extends <ph id=\"ph1\">`ICorDebugBreakpoint`</ph> to provide access to specific values.","pos":[22623,22690],"source":"Extends `ICorDebugBreakpoint` to provide access to specific values."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugValueEnum<ept id=\"p1\">](icordebugvalueenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[22697,22751],"source":"[ICorDebugValueEnum](icordebugvalueenum-interface.md)\\"},{"content":"Implements <ph id=\"ph1\">`ICorDebugEnum`</ph> methods, and enumerates <ph id=\"ph2\">`ICorDebugValue`</ph> arrays.","pos":[22753,22828],"source":"Implements `ICorDebugEnum` methods, and enumerates `ICorDebugValue` arrays."},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugVariableHome Interface<ept id=\"p1\">](icordebugvariablehome-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[22835,22905],"source":"[ICorDebugVariableHome Interface](icordebugvariablehome-interface.md)\\"},{"content":"Represents a local variable or argument of a function.","pos":[22907,22961]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugVariableHomeEnum Interface<ept id=\"p1\">](icordebugvariablehomeenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[22968,23046],"source":"[ICorDebugVariableHomeEnum Interface](icordebugvariablehomeenum-interface.md)\\"},{"content":"Provides an enumerator to the local variables and arguments in a function.","pos":[23048,23122]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugVariableSymbol Interface<ept id=\"p1\">](icordebugvariablesymbol-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[23129,23203],"source":"[ICorDebugVariableSymbol Interface](icordebugvariablesymbol-interface.md)\\"},{"content":"Retrieves the debug symbol information for a variable.","pos":[23205,23259]},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[23260,23294],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugVirtualUnwinder Interface<ept id=\"p1\">](icordebugvirtualunwinder-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[23301,23377],"source":"[ICorDebugVirtualUnwinder Interface](icordebugvirtualunwinder-interface.md)\\"},{"content":"Provides methods to help in stack unwinding.","pos":[23379,23423]},{"content":"<bpt id=\"p1\">**</bpt>Available on .NET Native only.<ept id=\"p1\">**</ept>","pos":[23424,23458],"source":"**Available on .NET Native only.**"},{"content":"<bpt id=\"p1\">[</bpt>ICorPublish Interface<ept id=\"p1\">](icorpublish-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[23465,23515],"source":"[ICorPublish Interface](icorpublish-interface.md)\\"},{"content":"Serves as the general interface for the publishing processes.","pos":[23517,23578]},{"content":"<bpt id=\"p1\">[</bpt>ICorPublishAppDomain Interface<ept id=\"p1\">](icorpublishappdomain-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[23585,23653],"source":"[ICorPublishAppDomain Interface](icorpublishappdomain-interface.md)\\"},{"content":"Represents and provides information about an application domain.","pos":[23655,23719]},{"content":"<bpt id=\"p1\">[</bpt>ICorPublishAppDomainEnum Interface<ept id=\"p1\">](icorpublishappdomainenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[23726,23802],"source":"[ICorPublishAppDomainEnum Interface](icorpublishappdomainenum-interface.md)\\"},{"content":"Provides methods that traverse a collection of <ph id=\"ph1\">`ICorPublishAppDomain`</ph> objects that currently exist within a process.","pos":[23804,23920],"source":"Provides methods that traverse a collection of `ICorPublishAppDomain` objects that currently exist within a process."},{"content":"<bpt id=\"p1\">[</bpt>ICorPublishEnum Interface<ept id=\"p1\">](icorpublishenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[23927,23985],"source":"[ICorPublishEnum Interface](icorpublishenum-interface.md)\\"},{"content":"Serves as the abstract base for publishing enumerators.","pos":[23987,24042]},{"content":"<bpt id=\"p1\">[</bpt>ICorPublishProcess Interface<ept id=\"p1\">](icorpublishprocess-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[24049,24113],"source":"[ICorPublishProcess Interface](icorpublishprocess-interface.md)\\"},{"content":"Provides methods that access information about a process.","pos":[24115,24172]},{"content":"<bpt id=\"p1\">[</bpt>ICorPublishProcessEnum Interface<ept id=\"p1\">](icorpublishprocessenum-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[24179,24251],"source":"[ICorPublishProcessEnum Interface](icorpublishprocessenum-interface.md)\\"},{"content":"Provides methods that traverse a collection of <ph id=\"ph1\">`ICorPublishProcess`</ph> objects.","pos":[24253,24329],"source":"Provides methods that traverse a collection of `ICorPublishProcess` objects."},{"content":"<bpt id=\"p1\">[</bpt>ISOSDacInterface Interface<ept id=\"p1\">](isosdacinterface-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[24334,24394],"source":"[ISOSDacInterface Interface](isosdacinterface-interface.md)\\"},{"content":"Provides helper methods to access data from <ph id=\"ph1\">`SOS`</ph>.","pos":[24396,24446],"source":"Provides helper methods to access data from `SOS`."},{"content":"<bpt id=\"p1\">[</bpt>IXCLRDataMethodDefinition Interface<ept id=\"p1\">](ixclrdatamethoddefinition-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[24449,24527],"source":"[IXCLRDataMethodDefinition Interface](ixclrdatamethoddefinition-interface.md)\\"},{"content":"Provides methods for querying information about a method definition.","pos":[24529,24597]},{"content":"<bpt id=\"p1\">[</bpt>IXCLRDataMethodInstance Interface<ept id=\"p1\">](ixclrdatamethodinstance-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[24601,24675],"source":"[IXCLRDataMethodInstance Interface](ixclrdatamethodinstance-interface.md)\\"},{"content":"Provides methods for querying information about a method instance.","pos":[24677,24743]},{"content":"<bpt id=\"p1\">[</bpt>IXCLRDataModule Interface<ept id=\"p1\">](ixclrdatamodule-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[24747,24805],"source":"[IXCLRDataModule Interface](ixclrdatamodule-interface.md)\\"},{"content":"Provides methods for querying information about a loaded module.","pos":[24807,24871]},{"content":"<bpt id=\"p1\">[</bpt>IXCLRDataProcess Interface<ept id=\"p1\">](ixclrdataprocess-interface.md)</ept><ph id=\"ph1\">\\</ph>","pos":[24875,24935],"source":"[IXCLRDataProcess Interface](ixclrdataprocess-interface.md)\\"},{"content":"Provides methods for querying information about a process.","pos":[24937,24995]},{"pos":[25002,25018],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Debugging Coclasses<ept id=\"p1\">](debugging-coclasses.md)</ept><ph id=\"ph1\">\\</ph>","pos":[25022,25068],"source":"[Debugging Coclasses](debugging-coclasses.md)\\"},{"content":"<bpt id=\"p1\">[</bpt>Debugging Global Static Functions<ept id=\"p1\">](debugging-global-static-functions.md)</ept><ph id=\"ph1\">\\</ph>","pos":[25070,25144],"source":"[Debugging Global Static Functions](debugging-global-static-functions.md)\\"},{"content":"<bpt id=\"p1\">[</bpt>Debugging Enumerations<ept id=\"p1\">](debugging-enumerations.md)</ept><ph id=\"ph1\">\\</ph>","pos":[25146,25198],"source":"[Debugging Enumerations](debugging-enumerations.md)\\"},{"content":"<bpt id=\"p1\">[</bpt>Debugging Structures<ept id=\"p1\">](debugging-structures.md)</ept><ph id=\"ph1\">\\</ph>","pos":[25200,25248],"source":"[Debugging Structures](debugging-structures.md)\\"}]}