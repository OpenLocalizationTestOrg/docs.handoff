{"content":"---\ntitle: \"Nested Types - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/10/2017\nhelpviewer_keywords: \n  - \"nested types [C#]\"\nms.assetid: f2e1b315-e3d1-48ce-977f-7bae0960ba99\n---\n# Nested Types (C# Programming Guide)\nA type defined within a [class](../../../csharp/language-reference/keywords/class.md) or [struct](../../../csharp/language-reference/keywords/struct.md) is called a nested type. For example:  \n  \n [!code-csharp[csProgGuideObjects#68](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideObjects/CS/Objects.cs#68)]  \n  \nRegardless of whether the outer type is a class or a struct, nested types default to [private](../../../csharp/language-reference/keywords/private.md); they are accessible only from their containing type. In the previous example, the `Nested` class is inaccessible to external types. \n\nYou can also specify an [access modifier](../../language-reference/keywords/access-modifiers.md) to define the accessibility of a nested type, as follows:\n\n- Nested types of a **class** can be [public](../../../csharp/language-reference/keywords/public.md), [protected](../../../csharp/language-reference/keywords/protected.md), [internal](../../../csharp/language-reference/keywords/internal.md), [protected internal](../../../csharp/language-reference/keywords/protected-internal.md), [private](../../../csharp/language-reference/keywords/private.md) or [private protected](../../../csharp/language-reference/keywords/private-protected.md). \n\n   However, defining a `protected`, `protected internal` or `private protected` nested class inside a [sealed class](../../language-reference/keywords/sealed.md) generates compiler warning [CS0628](../../misc/cs0628.md), \"new protected member declared in sealed class.\"\n  \n- Nested types of a **struct** can be [public](../../../csharp/language-reference/keywords/public.md), [internal](../../../csharp/language-reference/keywords/internal.md), or [private](../../../csharp/language-reference/keywords/private.md).\n  \nThe following example makes the `Nested` class public:\n  \n [!code-csharp[csProgGuideObjects#69](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideObjects/CS/Objects.cs#69)]  \n  \n The nested, or inner, type can access the containing, or outer, type. To access the containing type, pass it as an argument to the constructor of the nested type. For example:  \n  \n [!code-csharp[csProgGuideObjects#70](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideObjects/CS/Objects.cs#70)]  \n  \n A nested type has access to all of the members that are accessible to its containing type. It can access private and protected members of the containing type, including any inherited protected members.  \n  \n In the previous declaration, the full name of class `Nested` is `Container.Nested`. This is the name used to create a new instance of the nested class, as follows:  \n  \n [!code-csharp[csProgGuideObjects#71](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuideObjects/CS/Objects.cs#71)]  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Classes and Structs](../../../csharp/programming-guide/classes-and-structs/index.md)\n- [Access Modifiers](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md)\n- [Constructors](../../../csharp/programming-guide/classes-and-structs/constructors.md)\n","nodes":[{"pos":[4,183],"embed":true,"restype":"x-metadata","content":"title: \"Nested Types - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/10/2017\nhelpviewer_keywords: \n  - \"nested types [C#]\"\nms.assetid: f2e1b315-e3d1-48ce-977f-7bae0960ba99","nodes":[{"content":"Nested Types - C# Programming Guide","nodes":[{"pos":[0,35],"content":"Nested Types - C# Programming Guide","nodes":[{"content":"Nested Types - C# Programming Guide","pos":[0,35]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[190,225],"content":"Nested Types (C# Programming Guide)","linkify":"Nested Types (C# Programming Guide)","nodes":[{"content":"Nested Types (C# Programming Guide)","pos":[0,35]}]},{"content":"A type defined within a <bpt id=\"p1\">[</bpt>class<ept id=\"p1\">](../../../csharp/language-reference/keywords/class.md)</ept> or <bpt id=\"p2\">[</bpt>struct<ept id=\"p2\">](../../../csharp/language-reference/keywords/struct.md)</ept> is called a nested type.","pos":[226,403],"source":"A type defined within a [class](../../../csharp/language-reference/keywords/class.md) or [struct](../../../csharp/language-reference/keywords/struct.md) is called a nested type."},{"content":"For example:","pos":[404,416]},{"content":"Regardless of whether the outer type is a class or a struct, nested types default to <bpt id=\"p1\">[</bpt>private<ept id=\"p1\">](../../../csharp/language-reference/keywords/private.md)</ept>; they are accessible only from their containing type.","pos":[550,754],"source":"Regardless of whether the outer type is a class or a struct, nested types default to [private](../../../csharp/language-reference/keywords/private.md); they are accessible only from their containing type."},{"content":"In the previous example, the <ph id=\"ph1\">`Nested`</ph> class is inaccessible to external types.","pos":[755,833],"source":" In the previous example, the `Nested` class is inaccessible to external types."},{"pos":[836,990],"content":"You can also specify an <bpt id=\"p1\">[</bpt>access modifier<ept id=\"p1\">](../../language-reference/keywords/access-modifiers.md)</ept> to define the accessibility of a nested type, as follows:","source":"You can also specify an [access modifier](../../language-reference/keywords/access-modifiers.md) to define the accessibility of a nested type, as follows:"},{"pos":[994,1478],"content":"Nested types of a <bpt id=\"p1\">**</bpt>class<ept id=\"p1\">**</ept> can be <bpt id=\"p2\">[</bpt>public<ept id=\"p2\">](../../../csharp/language-reference/keywords/public.md)</ept>, <bpt id=\"p3\">[</bpt>protected<ept id=\"p3\">](../../../csharp/language-reference/keywords/protected.md)</ept>, <bpt id=\"p4\">[</bpt>internal<ept id=\"p4\">](../../../csharp/language-reference/keywords/internal.md)</ept>, <bpt id=\"p5\">[</bpt>protected internal<ept id=\"p5\">](../../../csharp/language-reference/keywords/protected-internal.md)</ept>, <bpt id=\"p6\">[</bpt>private<ept id=\"p6\">](../../../csharp/language-reference/keywords/private.md)</ept> or <bpt id=\"p7\">[</bpt>private protected<ept id=\"p7\">](../../../csharp/language-reference/keywords/private-protected.md)</ept>.","source":"Nested types of a **class** can be [public](../../../csharp/language-reference/keywords/public.md), [protected](../../../csharp/language-reference/keywords/protected.md), [internal](../../../csharp/language-reference/keywords/internal.md), [protected internal](../../../csharp/language-reference/keywords/protected-internal.md), [private](../../../csharp/language-reference/keywords/private.md) or [private protected](../../../csharp/language-reference/keywords/private-protected.md)."},{"pos":[1484,1750],"content":"However, defining a <ph id=\"ph1\">`protected`</ph>, <ph id=\"ph2\">`protected internal`</ph> or <ph id=\"ph3\">`private protected`</ph> nested class inside a <bpt id=\"p1\">[</bpt>sealed class<ept id=\"p1\">](../../language-reference/keywords/sealed.md)</ept> generates compiler warning <bpt id=\"p2\">[</bpt>CS0628<ept id=\"p2\">](../../misc/cs0628.md)</ept>, \"new protected member declared in sealed class.\"","source":"However, defining a `protected`, `protected internal` or `private protected` nested class inside a [sealed class](../../language-reference/keywords/sealed.md) generates compiler warning [CS0628](../../misc/cs0628.md), \"new protected member declared in sealed class.\""},{"pos":[1756,1995],"content":"Nested types of a <bpt id=\"p1\">**</bpt>struct<ept id=\"p1\">**</ept> can be <bpt id=\"p2\">[</bpt>public<ept id=\"p2\">](../../../csharp/language-reference/keywords/public.md)</ept>, <bpt id=\"p3\">[</bpt>internal<ept id=\"p3\">](../../../csharp/language-reference/keywords/internal.md)</ept>, or <bpt id=\"p4\">[</bpt>private<ept id=\"p4\">](../../../csharp/language-reference/keywords/private.md)</ept>.","source":"Nested types of a **struct** can be [public](../../../csharp/language-reference/keywords/public.md), [internal](../../../csharp/language-reference/keywords/internal.md), or [private](../../../csharp/language-reference/keywords/private.md)."},{"pos":[1999,2053],"content":"The following example makes the <ph id=\"ph1\">`Nested`</ph> class public:","source":"The following example makes the `Nested` class public:"},{"content":"The nested, or inner, type can access the containing, or outer, type.","pos":[2186,2255]},{"content":"To access the containing type, pass it as an argument to the constructor of the nested type.","pos":[2256,2348]},{"content":"For example:","pos":[2349,2361]},{"content":"A nested type has access to all of the members that are accessible to its containing type.","pos":[2496,2586]},{"content":"It can access private and protected members of the containing type, including any inherited protected members.","pos":[2587,2697]},{"content":"In the previous declaration, the full name of class <ph id=\"ph1\">`Nested`</ph> is <ph id=\"ph2\">`Container.Nested`</ph>.","pos":[2704,2787],"source":"In the previous declaration, the full name of class `Nested` is `Container.Nested`."},{"content":"This is the name used to create a new instance of the nested class, as follows:","pos":[2788,2867]},{"pos":[3004,3012],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3016,3082],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[3085,3170],"content":"<bpt id=\"p1\">[</bpt>Classes and Structs<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/index.md)</ept>","source":"[Classes and Structs](../../../csharp/programming-guide/classes-and-structs/index.md)"},{"pos":[3173,3266],"content":"<bpt id=\"p1\">[</bpt>Access Modifiers<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md)</ept>","source":"[Access Modifiers](../../../csharp/programming-guide/classes-and-structs/access-modifiers.md)"},{"pos":[3269,3354],"content":"<bpt id=\"p1\">[</bpt>Constructors<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/constructors.md)</ept>","source":"[Constructors](../../../csharp/programming-guide/classes-and-structs/constructors.md)"}]}