{"content":"---\ntitle: \"Filtering Data (C#) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nms.assetid: fbaece0d-0f23-47f7-89c5-f3ea8db692b6\ncaps.latest.revision: 4\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# Filtering Data (C#)\nFiltering refers to the operation of restricting the result set to contain only those elements that satisfy a specified condition. It is also known as selection.  \n  \n The following illustration shows the results of filtering a sequence of characters. The predicate for the filtering operation specifies that the character must be 'A'.  \n  \n ![LINQ Filtering Operation](../../../../csharp/programming-guide/concepts/linq/media/linq_filter.png \"LINQ_Filter\")  \n  \n The standard query operator methods that perform selection are listed in the following section.  \n  \n## Methods  \n  \n|Method Name|Description|C# Query Expression Syntax|More Information|  \n|-----------------|-----------------|---------------------------------|----------------------|  \n|OfType|Selects values, depending on their ability to be cast to a specified type.|Not applicable.|<xref:System.Linq.Enumerable.OfType%2A?displayProperty=fullName><br /><br /> <xref:System.Linq.Queryable.OfType%2A?displayProperty=fullName>|  \n|Where|Selects values that are based on a predicate function.|`where`|<xref:System.Linq.Enumerable.Where%2A?displayProperty=fullName><br /><br /> <xref:System.Linq.Queryable.Where%2A?displayProperty=fullName>|  \n  \n## Query Expression Syntax Example  \n The following example uses the `where` clause to filter from an array those strings that have a specific length.  \n  \n```csharp  \nstring[] words = { \"the\", \"quick\", \"brown\", \"fox\", \"jumps\" };  \n  \nIEnumerable<string> query = from word in words  \n                            where word.Length == 3  \n                            select word;  \n  \nforeach (string str in query)  \n    Console.WriteLine(str);  \n  \n/* This code produces the following output:  \n  \n    the  \n    fox  \n*/  \n```  \n  \n## See Also  \n <xref:System.Linq>   \n [Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)   \n [where clause](../../../../csharp/language-reference/keywords/where-clause.md)   \n [How to: Dynamically Specify Predicate Filters at Runtime](../../../../csharp/programming-guide/linq-query-expressions/how-to-dynamically-specify-predicate-filters-at-runtime.md)   \n [How to: Query An Assembly's Metadata with Reflection (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md)   \n [How to: Query for Files with a Specified Attribute or Name (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-files-with-a-specified-attribute-or-name.md)   \n [How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)","nodes":[{"pos":[12,48],"content":"Filtering Data (C#) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Filtering Data (C#) | Microsoft Docs","pos":[0,36]}]},{"pos":[407,426],"content":"Filtering Data (C#)","linkify":"Filtering Data (C#)","nodes":[{"content":"Filtering Data (C#)","pos":[0,19]}]},{"content":"Filtering refers to the operation of restricting the result set to contain only those elements that satisfy a specified condition.","pos":[427,557]},{"content":"It is also known as selection.","pos":[558,588]},{"content":"The following illustration shows the results of filtering a sequence of characters.","pos":[595,678]},{"content":"The predicate for the filtering operation specifies that the character must be 'A'.","pos":[679,762]},{"pos":[769,884],"content":"<bpt id=\"p1\">![</bpt>LINQ Filtering Operation<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../csharp/programming-guide/concepts/linq/media/linq_filter.png \"</bpt>LINQ_Filter<ept id=\"p2\">\")</ept>","source":"![LINQ Filtering Operation](../../../../csharp/programming-guide/concepts/linq/media/linq_filter.png \"LINQ_Filter\")"},{"content":"The standard query operator methods that perform selection are listed in the following section.","pos":[891,986]},{"pos":[995,1002],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method Name","pos":[1009,1020]},{"content":"Description","pos":[1021,1032]},{"content":"C# Query Expression Syntax","pos":[1033,1059]},{"content":"More Information","pos":[1060,1076]},{"content":"OfType","pos":[1178,1184]},{"content":"Selects values, depending on their ability to be cast to a specified type.","pos":[1185,1259]},{"content":"Not applicable.","pos":[1260,1275]},{"content":"Where","pos":[1421,1426]},{"content":"Selects values that are based on a predicate function.","pos":[1427,1481]},{"pos":[1638,1669],"content":"Query Expression Syntax Example","linkify":"Query Expression Syntax Example","nodes":[{"content":"Query Expression Syntax Example","pos":[0,31]}]},{"pos":[1673,1785],"content":"The following example uses the <ph id=\"ph1\">`where`</ph> clause to filter from an array those strings that have a specific length.","source":"The following example uses the `where` clause to filter from an array those strings that have a specific length."},{"pos":[2169,2177],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Linq&gt;</ph>","pos":[2181,2199],"source":"<xref:System.Linq> "},{"content":"<bpt id=\"p1\"> [</bpt>Standard Query Operators Overview (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[2203,2334],"source":" [Standard Query Operators Overview (C#)](../../../../csharp/programming-guide/concepts/linq/standard-query-operators-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>where clause<ept id=\"p1\">](../../../../csharp/language-reference/keywords/where-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[2337,2417],"source":" [where clause](../../../../csharp/language-reference/keywords/where-clause.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Dynamically Specify Predicate Filters at Runtime<ept id=\"p1\">](../../../../csharp/programming-guide/linq-query-expressions/how-to-dynamically-specify-predicate-filters-at-runtime.md)</ept><ph id=\"ph1\"> </ph>","pos":[2420,2600],"source":" [How to: Dynamically Specify Predicate Filters at Runtime](../../../../csharp/programming-guide/linq-query-expressions/how-to-dynamically-specify-predicate-filters-at-runtime.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Query An Assembly's Metadata with Reflection (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md)</ept><ph id=\"ph1\"> </ph>","pos":[2603,2783],"source":" [How to: Query An Assembly's Metadata with Reflection (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Query for Files with a Specified Attribute or Name (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-files-with-a-specified-attribute-or-name.md)</ept><ph id=\"ph1\"> </ph>","pos":[2786,2966],"source":" [How to: Query for Files with a Specified Attribute or Name (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-query-for-files-with-a-specified-attribute-or-name.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)</ept>","pos":[2969,3150],"source":" [How to: Sort or Filter Text Data by Any Word or Field (LINQ) (C#)](../../../../csharp/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)"}]}