<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="parsing-datetime.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">413a04d6ccdfff4b9cbf937821683ab7f7b37361</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\parsing-datetime.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3982d8a83ae8cf8d32a2158fdd27ec28138fca5b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93d787c89078a01cd8299794c429f9601342bc24</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: convert strings to DateTime</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Learn techniques to parse strings that represent dates and times to create a DateTime from the date and time string.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Parsing Date and Time Strings in .NET</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Parsing strings to convert them to <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects requires you to specify information about how the dates and times are represented as text.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Different cultures use different orders for day, month, and year.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Some time representations use a 24-hour clock, others specify "AM" and "PM."</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Some applications need only the date.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Others need only the time.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Still others need to specify both the date and the time.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The methods that convert strings to <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects enable you to provide detailed information about the formats you expect and the elements of a date and time your application needs.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There are three subtasks to correctly converting text into a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You must specify the expected format of the text representing a date and time.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You may specify the culture for the format of a date time.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You may specify how missing components in the text representation are set in the date and time.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> methods convert many common representations of a date and time.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods convert a string representation that conforms to the pattern specified by a date and time format string.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(See the articles on <bpt id="p1">[</bpt>standard date and time format strings<ept id="p1">](standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>custom date and time format strings<ept id="p2">](custom-date-and-time-format-strings.md)</ept> for details.)</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object provides more control over how text should be interpreted as a date and time.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Properties of a <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> describe the date and time separators, and the names of months, days, and eras, and the format for the "AM" and "PM" designations.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The current thread culture provides a <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> that represents the current culture.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you want a specific culture or custom settings, you specify the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> parameter of a parsing method.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> parameter, specify a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object, which represents a culture, or a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The text representing a date or time may be missing some information.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, most people would assume the date "March 12" represents the current year.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Similarly, "March 2018" represents the month of March in the year 2018.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Text representing time often does only includes hours, minutes, and an AM/PM designation.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Parsing methods handle this missing information by using reasonable defaults:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When only the time is present, the date portion uses the current date.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When only the date is present, the time portion is midnight.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When the year isn't specified in a date, the current year is used.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When the day of the month isn't specified, the first of the month is used.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the date is present in the string, it must include the month and one of the day or year.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the time is present, it must include the hour, and either the minutes or the AM/PM designator.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can specify the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault&gt;</ph> constant to override these defaults.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you use that constant, any missing year, month, or day properties are set to the value <ph id="ph1">`1`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>last example<ept id="p1">](#styles-example)</ept> using <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph> demonstrates this behavior.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In addition to a date and a time component, the string representation of a date and time can include an offset that indicates how much the time differs from Coordinated Universal Time (UTC).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the string "2/14/2007 5:32:00 -7:00" defines a time that is seven hours earlier than UTC.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If an offset is omitted from the string representation of a time, parsing returns a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object with its <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If an offset is specified, parsing returns a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object with its <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph> and its value adjusted to the local time zone of your machine.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can modify this behavior by using a <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> value with the parsing method.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The format provider is also used to interpret an ambiguous numeric date.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>It is not clear which components of the date represented by the string "02/03/04" are the month, day, and year.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The components are interpreted according to the order of similar date formats in the format provider.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Parse</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph> method to convert a <ph id="ph2">`string`</ph> into a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example uses the culture associated with the current thread.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> associated with the current culture cannot parse the input string, a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>All the C# samples in this article run in your browser.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Press the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> button to see the output.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also edit them to experiment yourself.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>These examples are available in the GitHub docs repo for both <bpt id="p1">[</bpt>C#<ept id="p1">](https://github.com/dotnet/samples/tree/master/snippets/csharp/how-to/conversions)</ept> and <bpt id="p2">[</bpt>VB<ept id="p2">](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/how-to/conversions)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Or you can download the project as a zipfile for <bpt id="p1">[</bpt>C#<ept id="p1">](https://github.com/dotnet/samples/raw/master/snippets/csharp/how-to/conversions.zip)</ept> or <bpt id="p2">[</bpt>VB<ept id="p2">](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/how-to/conversions.zip)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can also explicitly define the culture whose formatting conventions are used when you parse a string.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You specify one of the standard <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> objects returned by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example uses a format provider to parse a German string into a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It creates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> representing the <ph id="ph2">`de-DE`</ph> culture.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>That <ph id="ph1">`CultureInfo`</ph> object ensures successful parsing of this particular string.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This precludes whatever setting is in the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture&gt;</ph> of the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentThread&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>However, although you can use overloads of the <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph> method to specify custom format providers, the method does not support parsing non-standard formats.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To parse a date and time expressed in a non-standard format, use the <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> method instead.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="styles-example"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration to specify that the current date and time information should not be added to the <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> for unspecified fields.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>ParseExact</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType&gt;</ph> method converts a string to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object if it conforms to one of the specified string patterns.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When a string that is not one of the forms specified is passed to this method, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can specify one of the standard date and time format specifiers or a combination of the custom format specifiers.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Using the custom format specifiers, it is possible for you to construct a custom recognition string.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For an explanation of the specifiers, see the topics on <bpt id="p1">[</bpt>standard date and time format strings<ept id="p1">](standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>custom date and time format strings<ept id="p2">](custom-date-and-time-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType&gt;</ph> method is passed a string object to parse, followed by a format specifier, followed by a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> method can only parse strings that follow the long date pattern in the <ph id="ph2">`en-US`</ph> culture.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Each overload of the <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> methods also has an <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> parameter that provides culture-specific information about the formatting of the string.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object is a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents a standard culture or a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that is returned by the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> also uses an additional string or string array argument that defines one or more custom date and time formats.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parsing Strings<ept id="p1">](parsing-strings.md)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting Types<ept id="p1">](formatting-types.md)</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Conversion in .NET<ept id="p1">](type-conversion.md)</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard date and time formats<ept id="p1">](standard-date-and-time-format-strings.md)</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom date and time format strings<ept id="p1">](custom-date-and-time-format-strings.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>