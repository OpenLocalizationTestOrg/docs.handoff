{"content":"---\ntitle: \"How to: Call an Operator Procedure (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"operator procedures, calling\"\n  - \"procedures, operator\"\n  - \"procedure calls, operator overloading\"\n  - \"syntax, Operator procedures\"\n  - \"operators [Visual Basic], overloading\"\n  - \"return values, Operator procedures\"\n  - \"overloaded operators, calling\"\n  - \"operator overloading\"\nms.assetid: 0dce42cc-f0b0-4c14-9f62-018b21f33497\ncaps.latest.revision: 16\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Call an Operator Procedure (Visual Basic)\nYou call an operator procedure by using the operator symbol in an expression. In the case of a conversion operator, you call the [CType Function](../../../../visual-basic/language-reference/functions/ctype-function.md) to convert a value from one data type to another.  \n  \n You do not call operator procedures explicitly. You just use the operator, or the `CType` function, in an assignment statement or an expression, the same way you ordinarily use an operator. [!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] makes the call to the operator procedure.  \n  \n Defining an operator on a class or structure is also called *overloading* the operator.  \n  \n### To call an operator procedure  \n  \n1.  Use the operator symbol in an expression in the ordinary way.  \n  \n2.  Be sure the data types of the operands are appropriate for the operator, and in the correct order.  \n  \n3.  The operator contributes to the value of the expression as expected.  \n  \n### To call a conversion operator procedure  \n  \n1.  Use `CType` inside an expression.  \n  \n2.  Be sure the data types of the operands are appropriate for the conversion, and in the correct order.  \n  \n3.  `CType` calls the conversion operator procedure and returns the converted value.  \n  \n## Example  \n The following example creates two <xref:System.TimeSpan> structures, adds them together, and stores the result in a third <xref:System.TimeSpan> structure. The <xref:System.TimeSpan> structure defines operator procedures to overload several standard operators.  \n  \n [!code-vb[VbVbcnProcedures#29](./codesnippet/VisualBasic/how-to-call-an-operator-procedure_1.vb)]  \n  \n Because <xref:System.TimeSpan> overloads the standard `+` operator, the previous example calls an operator procedure when it calculates the value of `combinedSpan`.  \n  \n For an example of calling a conversation operator procedure, see [How to: Use a Class that Defines Operators](./how-to-use-a-class-that-defines-operators.md).  \n  \n## Compiling the Code  \n Be sure the class or structure you are using defines the operator you want to use.  \n  \n## See Also  \n [Operator Procedures](./operator-procedures.md)   \n [How to: Define an Operator](./how-to-define-an-operator.md)   \n [How to: Define a Conversion Operator](./how-to-define-a-conversion-operator.md)   \n [Operator Statement](../../../../visual-basic/language-reference/statements/operator-statement.md)   \n [Widening](../../../../visual-basic/language-reference/modifiers/widening.md)   \n [Narrowing](../../../../visual-basic/language-reference/modifiers/narrowing.md)   \n [Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md)   \n [How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)   \n [Implicit and Explicit Conversions](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)   \n [Widening and Narrowing Conversions](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)","nodes":[{"pos":[4,854],"embed":true,"restype":"x-metadata","content":"title: \"How to: Call an Operator Procedure (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"operator procedures, calling\"\n  - \"procedures, operator\"\n  - \"procedure calls, operator overloading\"\n  - \"syntax, Operator procedures\"\n  - \"operators [Visual Basic], overloading\"\n  - \"return values, Operator procedures\"\n  - \"overloaded operators, calling\"\n  - \"operator overloading\"\nms.assetid: 0dce42cc-f0b0-4c14-9f62-018b21f33497\ncaps.latest.revision: 16\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"How to: Call an Operator Procedure (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,66],"content":"How to: Call an Operator Procedure (Visual Basic) | Microsoft Docs","nodes":[{"content":"How to: Call an Operator Procedure (Visual Basic) | Microsoft Docs","pos":[0,66]}]}],"path":["title"]}],"yml":true},{"pos":[861,910],"content":"How to: Call an Operator Procedure (Visual Basic)","linkify":"How to: Call an Operator Procedure (Visual Basic)","nodes":[{"content":"How to: Call an Operator Procedure (Visual Basic)","pos":[0,49]}]},{"content":"You call an operator procedure by using the operator symbol in an expression.","pos":[911,988]},{"content":"In the case of a conversion operator, you call the <bpt id=\"p1\">[</bpt>CType Function<ept id=\"p1\">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> to convert a value from one data type to another.","pos":[989,1179],"source":" In the case of a conversion operator, you call the [CType Function](../../../../visual-basic/language-reference/functions/ctype-function.md) to convert a value from one data type to another."},{"content":"You do not call operator procedures explicitly.","pos":[1186,1233]},{"content":"You just use the operator, or the <ph id=\"ph1\">`CType`</ph> function, in an assignment statement or an expression, the same way you ordinarily use an operator.","pos":[1234,1375],"source":" You just use the operator, or the `CType` function, in an assignment statement or an expression, the same way you ordinarily use an operator."},{"content":"<ph id=\"ph1\">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> makes the call to the operator procedure.","pos":[1376,1510],"source":"[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] makes the call to the operator procedure."},{"pos":[1517,1604],"content":"Defining an operator on a class or structure is also called <bpt id=\"p1\">*</bpt>overloading<ept id=\"p1\">*</ept> the operator.","source":"Defining an operator on a class or structure is also called *overloading* the operator."},{"pos":[1614,1643],"content":"To call an operator procedure","linkify":"To call an operator procedure","nodes":[{"content":"To call an operator procedure","pos":[0,29]}]},{"content":"Use the operator symbol in an expression in the ordinary way.","pos":[1653,1714]},{"content":"Be sure the data types of the operands are appropriate for the operator, and in the correct order.","pos":[1724,1822]},{"content":"The operator contributes to the value of the expression as expected.","pos":[1832,1900]},{"pos":[1910,1949],"content":"To call a conversion operator procedure","linkify":"To call a conversion operator procedure","nodes":[{"content":"To call a conversion operator procedure","pos":[0,39]}]},{"pos":[1959,1992],"content":"Use <ph id=\"ph1\">`CType`</ph> inside an expression.","source":"Use `CType` inside an expression."},{"content":"Be sure the data types of the operands are appropriate for the conversion, and in the correct order.","pos":[2002,2102]},{"pos":[2112,2192],"content":"<ph id=\"ph1\">`CType`</ph> calls the conversion operator procedure and returns the converted value.","source":"`CType` calls the conversion operator procedure and returns the converted value."},{"pos":[2201,2208],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example creates two <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> structures, adds them together, and stores the result in a third <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph> structure.","pos":[2212,2367],"source":"The following example creates two <xref:System.TimeSpan> structures, adds them together, and stores the result in a third <xref:System.TimeSpan> structure."},{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> structure defines operator procedures to overload several standard operators.","pos":[2368,2472],"source":" The <xref:System.TimeSpan> structure defines operator procedures to overload several standard operators."},{"pos":[2583,2747],"content":"Because <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> overloads the standard <ph id=\"ph2\">`+`</ph> operator, the previous example calls an operator procedure when it calculates the value of <ph id=\"ph3\">`combinedSpan`</ph>.","source":"Because <xref:System.TimeSpan> overloads the standard `+` operator, the previous example calls an operator procedure when it calculates the value of `combinedSpan`."},{"pos":[2754,2912],"content":"For an example of calling a conversation operator procedure, see <bpt id=\"p1\">[</bpt>How to: Use a Class that Defines Operators<ept id=\"p1\">](./how-to-use-a-class-that-defines-operators.md)</ept>.","source":"For an example of calling a conversation operator procedure, see [How to: Use a Class that Defines Operators](./how-to-use-a-class-that-defines-operators.md)."},{"pos":[2921,2939],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"content":"Be sure the class or structure you are using defines the operator you want to use.","pos":[2943,3025]},{"pos":[3034,3042],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Operator Procedures<ept id=\"p1\">](./operator-procedures.md)</ept><ph id=\"ph1\"> </ph>","pos":[3046,3094],"source":"[Operator Procedures](./operator-procedures.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Define an Operator<ept id=\"p1\">](./how-to-define-an-operator.md)</ept><ph id=\"ph1\"> </ph>","pos":[3098,3159],"source":"[How to: Define an Operator](./how-to-define-an-operator.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Define a Conversion Operator<ept id=\"p1\">](./how-to-define-a-conversion-operator.md)</ept><ph id=\"ph1\"> </ph>","pos":[3163,3244],"source":"[How to: Define a Conversion Operator](./how-to-define-a-conversion-operator.md) "},{"content":"<bpt id=\"p1\">[</bpt>Operator Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/operator-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[3248,3347],"source":"[Operator Statement](../../../../visual-basic/language-reference/statements/operator-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Widening<ept id=\"p1\">](../../../../visual-basic/language-reference/modifiers/widening.md)</ept><ph id=\"ph1\"> </ph>","pos":[3351,3429],"source":"[Widening](../../../../visual-basic/language-reference/modifiers/widening.md) "},{"content":"<bpt id=\"p1\">[</bpt>Narrowing<ept id=\"p1\">](../../../../visual-basic/language-reference/modifiers/narrowing.md)</ept><ph id=\"ph1\"> </ph>","pos":[3433,3513],"source":"[Narrowing](../../../../visual-basic/language-reference/modifiers/narrowing.md) "},{"content":"<bpt id=\"p1\">[</bpt>Structure Statement<ept id=\"p1\">](../../../../visual-basic/language-reference/statements/structure-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[3517,3618],"source":"[Structure Statement](../../../../visual-basic/language-reference/statements/structure-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Declare a Structure<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md)</ept><ph id=\"ph1\"> </ph>","pos":[3622,3755],"source":"[How to: Declare a Structure](../../../../visual-basic/programming-guide/language-features/data-types/how-to-declare-a-structure.md) "},{"content":"<bpt id=\"p1\">[</bpt>Implicit and Explicit Conversions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept><ph id=\"ph1\"> </ph>","pos":[3759,3905],"source":"[Implicit and Explicit Conversions](../../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md) "},{"content":"<bpt id=\"p1\">[</bpt>Widening and Narrowing Conversions<ept id=\"p1\">](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)</ept>","pos":[3909,4056],"source":"[Widening and Narrowing Conversions](../../../../visual-basic/programming-guide/language-features/data-types/widening-and-narrowing-conversions.md)"}]}