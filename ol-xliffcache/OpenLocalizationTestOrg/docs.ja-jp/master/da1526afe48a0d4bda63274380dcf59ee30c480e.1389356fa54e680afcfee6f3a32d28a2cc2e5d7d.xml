{"content":"---\ntitle: \"How to: Write to a Text File - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"TextWriter.WriteLine\"\n  - \"StreamWriter.Close\"\nhelpviewer_keywords: \n  - \"files [C#], text files\"\n  - \"text, writing to files [C#]\"\nms.assetid: 2e99f184-d88b-4719-a7f1-d9ec482aa809\n---\n# How to: Write to a Text File (C# Programming Guide)\nThese examples show various ways to write text to a file. The first two examples use static convenience methods on the <xref:System.IO.File?displayProperty=nameWithType> class to write each element of any `IEnumerable<string>` and a string to a text file. Example 3 shows how to add text to a file when you have to process each line individually as you write to the file. Examples 1-3 overwrite all existing content in the file, but example 4 shows you how to append text to an existing file.  \n  \n These examples all write string literals to files. If you want to format text written to a file, use the <xref:System.String.Format%2A> method or C# [string interpolation](../../../csharp/language-reference/tokens/interpolated.md) feature.  \n  \n## Example  \n [!code-csharp[csFilesandFolders#3](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csFilesAndFolders/CS/FileIteration.cs#3)]  \n  \n## Robust Programming  \n The following conditions may cause an exception:  \n  \n-   The file exists and is read-only.  \n  \n-   The path name may be too long.  \n  \n-   The disk may be full.  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [File System and the Registry (C# Programming Guide)](../../../csharp/programming-guide/file-system/index.md)\n- [Sample: Save a collection to Application Storage](https://code.msdn.microsoft.com/CSWinStoreAppSaveCollection-bed5d6e6)\n","nodes":[{"pos":[4,304],"embed":true,"restype":"x-metadata","content":"title: \"How to: Write to a Text File - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nf1_keywords: \n  - \"TextWriter.WriteLine\"\n  - \"StreamWriter.Close\"\nhelpviewer_keywords: \n  - \"files [C#], text files\"\n  - \"text, writing to files [C#]\"\nms.assetid: 2e99f184-d88b-4719-a7f1-d9ec482aa809","nodes":[{"content":"How to: Write to a Text File - C# Programming Guide","nodes":[{"pos":[0,51],"content":"How to: Write to a Text File - C# Programming Guide","nodes":[{"content":"How to: Write to a Text File - C# Programming Guide","pos":[0,51]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[311,362],"content":"How to: Write to a Text File (C# Programming Guide)","linkify":"How to: Write to a Text File (C# Programming Guide)","nodes":[{"content":"How to: Write to a Text File (C# Programming Guide)","pos":[0,51]}]},{"content":"These examples show various ways to write text to a file.","pos":[363,420]},{"content":"The first two examples use static convenience methods on the <ph id=\"ph1\">&lt;xref:System.IO.File?displayProperty=nameWithType&gt;</ph> class to write each element of any <ph id=\"ph2\">`IEnumerable&lt;string&gt;`</ph> and a string to a text file.","pos":[421,618],"source":" The first two examples use static convenience methods on the <xref:System.IO.File?displayProperty=nameWithType> class to write each element of any `IEnumerable<string>` and a string to a text file."},{"content":"Example 3 shows how to add text to a file when you have to process each line individually as you write to the file.","pos":[619,734]},{"content":"Examples 1-3 overwrite all existing content in the file, but example 4 shows you how to append text to an existing file.","pos":[735,855]},{"content":"These examples all write string literals to files.","pos":[862,912]},{"content":"If you want to format text written to a file, use the <ph id=\"ph1\">&lt;xref:System.String.Format%2A&gt;</ph> method or C# <bpt id=\"p1\">[</bpt>string interpolation<ept id=\"p1\">](../../../csharp/language-reference/tokens/interpolated.md)</ept> feature.","pos":[913,1101],"source":" If you want to format text written to a file, use the <xref:System.String.Format%2A> method or C# [string interpolation](../../../csharp/language-reference/tokens/interpolated.md) feature."},{"pos":[1110,1117],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1253,1271],"content":"Robust Programming","linkify":"Robust Programming","nodes":[{"content":"Robust Programming","pos":[0,18]}]},{"content":"The following conditions may cause an exception:","pos":[1275,1323]},{"content":"The file exists and is read-only.","pos":[1333,1366]},{"content":"The path name may be too long.","pos":[1376,1406]},{"content":"The disk may be full.","pos":[1416,1437]},{"pos":[1446,1454],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1458,1524],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[1527,1636],"content":"<bpt id=\"p1\">[</bpt>File System and the Registry (C# Programming Guide)<ept id=\"p1\">](../../../csharp/programming-guide/file-system/index.md)</ept>","source":"[File System and the Registry (C# Programming Guide)](../../../csharp/programming-guide/file-system/index.md)"},{"pos":[1639,1759],"content":"<bpt id=\"p1\">[</bpt>Sample: Save a collection to Application Storage<ept id=\"p1\">](https://code.msdn.microsoft.com/CSWinStoreAppSaveCollection-bed5d6e6)</ept>","source":"[Sample: Save a collection to Application Storage](https://code.msdn.microsoft.com/CSWinStoreAppSaveCollection-bed5d6e6)"}]}