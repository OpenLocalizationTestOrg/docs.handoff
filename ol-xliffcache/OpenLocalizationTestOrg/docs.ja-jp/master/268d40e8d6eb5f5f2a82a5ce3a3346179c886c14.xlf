<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-use-the-global-namespace-alias.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">268d40e8d6eb5f5f2a82a5ce3a3346179c886c14</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\namespaces\how-to-use-the-global-namespace-alias.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6ca3b0965bdcb433bacd6b099a9458fab5791c6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a2aea1013c7a91a423a93abae492395291fe91b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Use the Global Namespace Alias - C# Programming Guide</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use the Global Namespace Alias (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The ability to access a member in the global <bpt id="p1">[</bpt>namespace<ept id="p1">](../../../csharp/language-reference/keywords/namespace.md)</ept> is useful when the member might be hidden by another entity of the same name.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, in the following code, <ph id="ph1">`Console`</ph> resolves to <ph id="ph2">`TestApp.Console`</ph> instead of to the <ph id="ph3">`Console`</ph> type in the <ph id="ph4">&lt;xref:System&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`System.Console`</ph> still results in an error because the <ph id="ph2">`System`</ph> namespace is hidden by the class <ph id="ph3">`TestApp.System`</ph>:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, you can work around this error by using <ph id="ph1">`global::System.Console`</ph>, like this:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When the left identifier is <ph id="ph1">`global`</ph>, the search for the right identifier starts at the global namespace.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, the following declaration is referencing <ph id="ph1">`TestApp`</ph> as a member of the global space.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Obviously, creating your own namespaces called <ph id="ph1">`System`</ph> is not recommended, and it is unlikely you will encounter any code in which this has happened.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, in larger projects, it is a very real possibility that namespace duplication may occur in one form or another.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In these situations, the global namespace qualifier is your guarantee that you can specify the root namespace.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this example, the namespace <ph id="ph1">`System`</ph> is used to include the class <ph id="ph2">`TestClass`</ph> therefore, <ph id="ph3">`global::System.Console`</ph> must be used to reference the <ph id="ph4">`System.Console`</ph> class, which is hidden by the <ph id="ph5">`System`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Also, the alias <ph id="ph1">`colAlias`</ph> is used to refer to the namespace <ph id="ph2">`System.Collections`</ph>; therefore, the instance of a <ph id="ph3">&lt;xref:System.Collections.Hashtable?displayProperty=nameWithType&gt;</ph> was created using this alias instead of the namespace.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>A 1<ept id="p1">**</ept><ph id="ph1">
</ph><bpt id="p2">**</bpt>B 2<ept id="p2">**</ept><ph id="ph2">
</ph><bpt id="p3">**</bpt>C 3<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Namespaces<ept id="p1">](../../../csharp/programming-guide/namespaces/index.md)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>. Operator<ept id="p1">](../../../csharp/language-reference/operators/member-access-operator.md)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>:: Operator<ept id="p1">](../../../csharp/language-reference/operators/namespace-alias-qualifer.md)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>extern<ept id="p1">](../../../csharp/language-reference/keywords/extern.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>