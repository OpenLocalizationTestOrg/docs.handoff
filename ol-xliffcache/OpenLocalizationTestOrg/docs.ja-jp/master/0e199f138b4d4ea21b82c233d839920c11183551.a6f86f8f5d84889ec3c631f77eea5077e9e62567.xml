{"content":"---\ntitle: \"Compiler Error CS0473\"\nms.date: 08/14/2018\nf1_keywords:\n  - \"CS0473\"\nhelpviewer_keywords:\n  - \"CS0473\"\nms.assetid: 58eb141e-7da0-41c8-b868-7cd2a15f07f9\n---\n# Compiler Error CS0473\n\nExplicit interface implementation 'method name' matches more than one interface member. Which interface member is actually chosen is implementation-dependent. Consider using a non-explicit implementation instead.\n\nIn some cases a generic method might acquire the same signature as a non-generic method. The problem is that there is no way in the common language infrastructure (CLI) metadata system to unambiguously state which method binds to which slot. It is up to the CLI to make that determination.\n\n## To correct this error\n\nTo correct the error, eliminate the explicit implementation and implement both of the interface methods in the implicit implementation `public int TestMethod(int)`.\n\n## Example\n\nThe following code generates CS0473:\n\n```csharp\npublic interface ITest<T>\n{\n    int TestMethod(int i);\n    int TestMethod(T i);\n}\n\npublic class ImplementingClass : ITest<int>\n{\n    int ITest<int>.TestMethod(int i) // CS0473\n    {\n        return i + 1;\n    }\n\n    public int TestMethod(int i)\n    {\n        return i - 1;\n    }\n}\n\nclass T\n{\n    static int Main()\n    {\n        ImplementingClass a = new ImplementingClass();\n        if (a.TestMethod(0) != -1)\n            return -1;\n\n        ITest<int> i_a = a;\n        System.Console.WriteLine(i_a.TestMethod(0).ToString());\n        if (i_a.TestMethod(0) != 1)\n            return -1;\n\n        return 0;\n    }\n}\n```\n\n## See also\n\n- [Fabulous Adventures in Coding](https://blogs.msdn.com/ericlippert/archive/2006/04/06/570126.aspx)\n","nodes":[{"pos":[4,163],"embed":true,"restype":"x-metadata","content":"title: \"Compiler Error CS0473\"\nms.date: 08/14/2018\nf1_keywords:\n  - \"CS0473\"\nhelpviewer_keywords:\n  - \"CS0473\"\nms.assetid: 58eb141e-7da0-41c8-b868-7cd2a15f07f9","nodes":[{"content":"Compiler Error CS0473","nodes":[{"pos":[0,21],"content":"Compiler Error CS0473","nodes":[{"content":"Compiler Error CS0473","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[170,191],"content":"Compiler Error CS0473","linkify":"Compiler Error CS0473","nodes":[{"content":"Compiler Error CS0473","pos":[0,21]}]},{"content":"Explicit interface implementation 'method name' matches more than one interface member.","pos":[193,280]},{"content":"Which interface member is actually chosen is implementation-dependent.","pos":[281,351]},{"content":"Consider using a non-explicit implementation instead.","pos":[352,405]},{"content":"In some cases a generic method might acquire the same signature as a non-generic method.","pos":[407,495]},{"content":"The problem is that there is no way in the common language infrastructure (CLI) metadata system to unambiguously state which method binds to which slot.","pos":[496,648]},{"content":"It is up to the CLI to make that determination.","pos":[649,696]},{"pos":[701,722],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[724,888],"content":"To correct the error, eliminate the explicit implementation and implement both of the interface methods in the implicit implementation <ph id=\"ph1\">`public int TestMethod(int)`</ph>.","source":"To correct the error, eliminate the explicit implementation and implement both of the interface methods in the implicit implementation `public int TestMethod(int)`."},{"pos":[893,900],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code generates CS0473:","pos":[902,938]},{"pos":[1569,1577],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1581,1679],"content":"<bpt id=\"p1\">[</bpt>Fabulous Adventures in Coding<ept id=\"p1\">](https://blogs.msdn.com/ericlippert/archive/2006/04/06/570126.aspx)</ept>","source":"[Fabulous Adventures in Coding](https://blogs.msdn.com/ericlippert/archive/2006/04/06/570126.aspx)"}]}