{"content":"---\ntitle: \"Deriving DataSet Relational Structure from XML Schema (XSD)\"\nms.date: \"03/30/2017\"\nms.assetid: 8f6cd04d-6197-4bc4-9096-8c51c7e4acae\n---\n# Deriving DataSet Relational Structure from XML Schema (XSD)\nThis section provides an overview of how the relational schema of a `DataSet` is built from an XML Schema definition language (XSD) schema document. In general, for each `complexType` child element of a schema element, a table is generated in the `DataSet`. The table structure is determined by the definition of the complex type. Tables are created in the `DataSet` for top-level elements in the schema. However, a table is only created for a top-level `complexType` element when the `complexType` element is nested inside another `complexType` element, in which case the nested `complexType` element is mapped to a `DataTable` within the `DataSet`.  \n  \n For more information about the XSD, see the World Wide Web Consortium (W3C) [XML Schema Part 0: Primer Recommendation](https://www.w3.org/TR/xmlschema-0/), the [XML Schema Part 1: Structures Recommendation](https://www.w3.org/TR/xmlschema-1/), and the [XML Schema Part 2: Datatypes Recommendation](https://www.w3.org/TR/xmlschema-2/).  \n  \n The following example demonstrates an XML Schema where `customers` is the child element of the `MyDataSet` element, which is a **DataSet** element.  \n  \n```xml  \n<xs:schema id=\"SomeID\"   \n            xmlns=\"\"   \n            xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"   \n            xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n   <xs:element name=\"MyDataSet\" msdata:IsDataSet=\"true\">  \n     <xs:complexType>  \n       <xs:choice maxOccurs=\"unbounded\">  \n         <xs:element name=\"customers\" >   \n           <xs:complexType >  \n             <xs:sequence>  \n               <xs:element name=\"CustomerID\" type=\"xs:integer\"   \n                            minOccurs=\"0\" />  \n               <xs:element name=\"CompanyName\" type=\"xs:string\"   \n                            minOccurs=\"0\" />  \n               <xs:element name=\"Phone\" type=\"xs:string\" />  \n             </xs:sequence>  \n           </xs:complexType>  \n          </xs:element>  \n       </xs:choice>  \n     </xs:complexType>  \n   </xs:element>  \n </xs:schema>  \n```  \n  \n In the preceding example, the element `customers` is a complex type element. Therefore, the complex type definition is parsed, and the mapping process creates the following table.  \n  \n```  \nCustomers (CustomerID , CompanyName, Phone)  \n```  \n  \n The data type of each column in the table is derived from the XML Schema type of the corresponding element or attribute specified.  \n  \n> [!NOTE]\n>  If the element `customers` is of a simple XML Schema data type such as **integer**, no table is generated. Tables are only created for the top-level elements that are complex types.  \n  \n In the following XML Schema, the **Schema** element has two element children, `InStateCustomers` and `OutOfStateCustomers`.  \n  \n```xml  \n<xs:schema id=\"SomeID\"   \n            xmlns=\"\"   \n            xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"   \n            xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\">  \n   <xs:element name=\"InStateCustomers\" type=\"customerType\" />  \n   <xs:element name=\"OutOfStateCustomers\" type=\"customerType\" />  \n    <xs:complexType name=\"customerType\" >  \n  \n     </xs:complexType>  \n  \n   <xs:element name=\"MyDataSet\" msdata:IsDataSet=\"true\">  \n     <xs:complexType>  \n       <xs:choice maxOccurs=\"unbounded\">  \n         <xs:element ref=\"customers\" />  \n       </xs:choice>  \n     </xs:complexType>  \n   </xs:element>  \n </xs:schema>  \n```  \n  \n Both the `InStateCustomers` and the `OutOfStateCustomers` child elements are complex type elements (`customerType`). Therefore, the mapping process generates the following two identical tables in the `DataSet`.  \n  \n```  \nInStateCustomers (CustomerID , CompanyName, Phone)  \nOutOfStateCustomers (CustomerID , CompanyName, Phone)  \n```  \n  \n## In This Section  \n [Mapping XML Schema (XSD) Constraints to DataSet Constraints](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/mapping-xml-schema-xsd-constraints-to-dataset-constraints.md)  \n Describes the XML Schema elements used to create unique and foreign key constraints in a `DataSet`.  \n  \n [Generating DataSet Relations from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/generating-dataset-relations-from-xml-schema-xsd.md)  \n Describes the XML Schema elements used to create relations between table columns in a `DataSet`.  \n  \n [XML Schema Constraints and Relationships](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/xml-schema-constraints-and-relationships.md)  \n Describes how relations are created implicitly when using XML Schema elements to create constraints in a `DataSet`.  \n  \n## Related Sections  \n [Using XML in a DataSet](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)  \n Describes how to load and persist the relational structure and data in a `DataSet` as XML data.  \n  \n## See also\n\n- [ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)\n","nodes":[{"pos":[4,143],"embed":true,"restype":"x-metadata","content":"title: \"Deriving DataSet Relational Structure from XML Schema (XSD)\"\nms.date: \"03/30/2017\"\nms.assetid: 8f6cd04d-6197-4bc4-9096-8c51c7e4acae","nodes":[{"content":"Deriving DataSet Relational Structure from XML Schema (XSD)","nodes":[{"pos":[0,59],"content":"Deriving DataSet Relational Structure from XML Schema (XSD)","nodes":[{"content":"Deriving DataSet Relational Structure from XML Schema (XSD)","pos":[0,59]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[150,209],"content":"Deriving DataSet Relational Structure from XML Schema (XSD)","linkify":"Deriving DataSet Relational Structure from XML Schema (XSD)","nodes":[{"content":"Deriving DataSet Relational Structure from XML Schema (XSD)","pos":[0,59]}]},{"content":"This section provides an overview of how the relational schema of a <ph id=\"ph1\">`DataSet`</ph> is built from an XML Schema definition language (XSD) schema document.","pos":[210,358],"source":"This section provides an overview of how the relational schema of a `DataSet` is built from an XML Schema definition language (XSD) schema document."},{"content":"In general, for each <ph id=\"ph1\">`complexType`</ph> child element of a schema element, a table is generated in the <ph id=\"ph2\">`DataSet`</ph>.","pos":[359,467],"source":" In general, for each `complexType` child element of a schema element, a table is generated in the `DataSet`."},{"content":"The table structure is determined by the definition of the complex type.","pos":[468,540]},{"content":"Tables are created in the <ph id=\"ph1\">`DataSet`</ph> for top-level elements in the schema.","pos":[541,614],"source":" Tables are created in the `DataSet` for top-level elements in the schema."},{"content":"However, a table is only created for a top-level <ph id=\"ph1\">`complexType`</ph> element when the <ph id=\"ph2\">`complexType`</ph> element is nested inside another <ph id=\"ph3\">`complexType`</ph> element, in which case the nested <ph id=\"ph4\">`complexType`</ph> element is mapped to a <ph id=\"ph5\">`DataTable`</ph> within the <ph id=\"ph6\">`DataSet`</ph>.","pos":[615,860],"source":" However, a table is only created for a top-level `complexType` element when the `complexType` element is nested inside another `complexType` element, in which case the nested `complexType` element is mapped to a `DataTable` within the `DataSet`."},{"pos":[867,1201],"content":"For more information about the XSD, see the World Wide Web Consortium (W3C) <bpt id=\"p1\">[</bpt>XML Schema Part 0: Primer Recommendation<ept id=\"p1\">](https://www.w3.org/TR/xmlschema-0/)</ept>, the <bpt id=\"p2\">[</bpt>XML Schema Part 1: Structures Recommendation<ept id=\"p2\">](https://www.w3.org/TR/xmlschema-1/)</ept>, and the <bpt id=\"p3\">[</bpt>XML Schema Part 2: Datatypes Recommendation<ept id=\"p3\">](https://www.w3.org/TR/xmlschema-2/)</ept>.","source":"For more information about the XSD, see the World Wide Web Consortium (W3C) [XML Schema Part 0: Primer Recommendation](https://www.w3.org/TR/xmlschema-0/), the [XML Schema Part 1: Structures Recommendation](https://www.w3.org/TR/xmlschema-1/), and the [XML Schema Part 2: Datatypes Recommendation](https://www.w3.org/TR/xmlschema-2/)."},{"pos":[1208,1355],"content":"The following example demonstrates an XML Schema where <ph id=\"ph1\">`customers`</ph> is the child element of the <ph id=\"ph2\">`MyDataSet`</ph> element, which is a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> element.","source":"The following example demonstrates an XML Schema where `customers` is the child element of the `MyDataSet` element, which is a **DataSet** element."},{"content":"In the preceding example, the element <ph id=\"ph1\">`customers`</ph> is a complex type element.","pos":[2242,2318],"source":"In the preceding example, the element `customers` is a complex type element."},{"content":"Therefore, the complex type definition is parsed, and the mapping process creates the following table.","pos":[2319,2421]},{"content":"The data type of each column in the table is derived from the XML Schema type of the corresponding element or attribute specified.","pos":[2489,2619]},{"pos":[2627,2819],"content":"[!NOTE]\n If the element `customers` is of a simple XML Schema data type such as **integer**, no table is generated. Tables are only created for the top-level elements that are complex types.","leadings":["","> "],"nodes":[{"content":"If the element `customers` is of a simple XML Schema data type such as **integer**, no table is generated. Tables are only created for the top-level elements that are complex types.","pos":[9,190],"nodes":[{"content":"If the element <ph id=\"ph1\">`customers`</ph> is of a simple XML Schema data type such as <bpt id=\"p1\">**</bpt>integer<ept id=\"p1\">**</ept>, no table is generated.","pos":[0,106],"source":"If the element `customers` is of a simple XML Schema data type such as **integer**, no table is generated."},{"content":"Tables are only created for the top-level elements that are complex types.","pos":[107,181]}]}]},{"pos":[2826,2949],"content":"In the following XML Schema, the <bpt id=\"p1\">**</bpt>Schema<ept id=\"p1\">**</ept> element has two element children, <ph id=\"ph1\">`InStateCustomers`</ph> and <ph id=\"ph2\">`OutOfStateCustomers`</ph>.","source":"In the following XML Schema, the **Schema** element has two element children, `InStateCustomers` and `OutOfStateCustomers`."},{"content":"Both the <ph id=\"ph1\">`InStateCustomers`</ph> and the <ph id=\"ph2\">`OutOfStateCustomers`</ph> child elements are complex type elements (<ph id=\"ph3\">`customerType`</ph>).","pos":[3606,3722],"source":"Both the `InStateCustomers` and the `OutOfStateCustomers` child elements are complex type elements (`customerType`)."},{"content":"Therefore, the mapping process generates the following two identical tables in the <ph id=\"ph1\">`DataSet`</ph>.","pos":[3723,3816],"source":" Therefore, the mapping process generates the following two identical tables in the `DataSet`."},{"pos":[3949,3964],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Mapping XML Schema (XSD) Constraints to DataSet Constraints<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/mapping-xml-schema-xsd-constraints-to-dataset-constraints.md)</ept>","pos":[3968,4160],"source":"[Mapping XML Schema (XSD) Constraints to DataSet Constraints](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/mapping-xml-schema-xsd-constraints-to-dataset-constraints.md)"},{"content":"Describes the XML Schema elements used to create unique and foreign key constraints in a <ph id=\"ph1\">`DataSet`</ph>.","pos":[4164,4263],"source":"Describes the XML Schema elements used to create unique and foreign key constraints in a `DataSet`."},{"content":"<bpt id=\"p1\">[</bpt>Generating DataSet Relations from XML Schema (XSD)<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/generating-dataset-relations-from-xml-schema-xsd.md)</ept>","pos":[4270,4444],"source":"[Generating DataSet Relations from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/generating-dataset-relations-from-xml-schema-xsd.md)"},{"content":"Describes the XML Schema elements used to create relations between table columns in a <ph id=\"ph1\">`DataSet`</ph>.","pos":[4448,4544],"source":"Describes the XML Schema elements used to create relations between table columns in a `DataSet`."},{"content":"<bpt id=\"p1\">[</bpt>XML Schema Constraints and Relationships<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/xml-schema-constraints-and-relationships.md)</ept>","pos":[4551,4707],"source":"[XML Schema Constraints and Relationships](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/xml-schema-constraints-and-relationships.md)"},{"content":"Describes how relations are created implicitly when using XML Schema elements to create constraints in a <ph id=\"ph1\">`DataSet`</ph>.","pos":[4711,4826],"source":"Describes how relations are created implicitly when using XML Schema elements to create constraints in a `DataSet`."},{"pos":[4835,4851],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Using XML in a DataSet<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)</ept>","pos":[4855,4975],"source":"[Using XML in a DataSet](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)"},{"content":"Describes how to load and persist the relational structure and data in a <ph id=\"ph1\">`DataSet`</ph> as XML data.","pos":[4979,5074],"source":"Describes how to load and persist the relational structure and data in a `DataSet` as XML data."},{"pos":[5083,5091],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5095,5199],"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept>","source":"[ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)"}]}