{"content":"---\ntitle: \"How to: Use Table-Valued User-Defined Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 5a4ae2b4-3290-4aa1-bc95-fc70c51b54cf\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# How to: Use Table-Valued User-Defined Functions\nA table-valued function returns a single rowset (unlike stored procedures, which can return multiple result shapes). Because the return type of a table-valued function is `Table`, you can use a table-valued function anywhere in SQL that you can use a table. You can also treat the table-valued function just as you would a table.  \n  \n## Example  \n The following SQL function explicitly states that it returns a `TABLE`. Therefore, the returned rowset structure is implicitly defined.  \n  \n```  \nCREATE FUNCTION ProductsCostingMoreThan(@cost money)  \nRETURNS TABLE  \nAS  \nRETURN  \n    SELECT ProductID, UnitPrice  \n    FROM Products  \n    WHERE UnitPrice > @cost  \n```  \n  \n [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] maps the function as follows:  \n  \n [!code-csharp[DLinqUDFS#1](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqUDFS/cs/northwind-tfunc.cs#1)]\n [!code-vb[DLinqUDFS#1](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqUDFS/vb/northwind-tfunc.vb#1)]  \n  \n## Example  \n The following SQL code shows that you can join to the table that the function returns and otherwise treat it as you would any other table:  \n  \n```  \nSELECT p2.ProductName, p1.UnitPrice  \nFROM dbo.ProductsCostingMoreThan(80.50)  \nAS p1 INNER JOIN Products AS p2 ON p1.ProductID = p2.ProductID  \n```  \n  \n In [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)], the query would be rendered as follows:  \n  \n [!code-csharp[DLinqUDFS#2](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqUDFS/cs/Program.cs#2)]\n [!code-vb[DLinqUDFS#2](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqUDFS/vb/Module1.vb#2)]  \n  \n## See Also  \n [User-Defined Functions](../../../../../../docs/framework/data/adonet/sql/linq/user-defined-functions.md)","nodes":[{"pos":[4,378],"embed":true,"restype":"x-metadata","content":"title: \"How to: Use Table-Valued User-Defined Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 5a4ae2b4-3290-4aa1-bc95-fc70c51b54cf\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","nodes":[{"content":"How to: Use Table-Valued User-Defined Functions | Microsoft Docs","nodes":[{"pos":[0,64],"content":"How to: Use Table-Valued User-Defined Functions | Microsoft Docs","nodes":[{"content":"How to: Use Table-Valued User-Defined Functions | Microsoft Docs","pos":[0,64]}]}],"path":["title"]}],"yml":true},{"pos":[385,432],"content":"How to: Use Table-Valued User-Defined Functions","linkify":"How to: Use Table-Valued User-Defined Functions","nodes":[{"content":"How to: Use Table-Valued User-Defined Functions","pos":[0,47]}]},{"content":"A table-valued function returns a single rowset (unlike stored procedures, which can return multiple result shapes).","pos":[433,549]},{"content":"Because the return type of a table-valued function is <ph id=\"ph1\">`Table`</ph>, you can use a table-valued function anywhere in SQL that you can use a table.","pos":[550,690],"source":" Because the return type of a table-valued function is `Table`, you can use a table-valued function anywhere in SQL that you can use a table."},{"content":"You can also treat the table-valued function just as you would a table.","pos":[691,762]},{"pos":[771,778],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following SQL function explicitly states that it returns a <ph id=\"ph1\">`TABLE`</ph>.","pos":[782,853],"source":"The following SQL function explicitly states that it returns a `TABLE`."},{"content":"Therefore, the returned rowset structure is implicitly defined.","pos":[854,917]},{"pos":[1108,1205],"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> maps the function as follows:","source":"[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] maps the function as follows:"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqUDFS#1<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqUDFS/cs/northwind-tfunc.cs#1)</ept><ept id=\"p1\">]</ept>","pos":[1212,1333],"source":"[!code-csharp[DLinqUDFS#1](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqUDFS/cs/northwind-tfunc.cs#1)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqUDFS#1<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqUDFS/vb/northwind-tfunc.vb#1)</ept><ept id=\"p1\">]</ept>","pos":[1335,1457],"source":"[!code-vb[DLinqUDFS#1](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqUDFS/vb/northwind-tfunc.vb#1)]"},{"pos":[1466,1473],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following SQL code shows that you can join to the table that the function returns and otherwise treat it as you would any other table:","pos":[1477,1615]},{"pos":[1782,1893],"content":"In <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph>, the query would be rendered as follows:","source":"In [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)], the query would be rendered as follows:"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DLinqUDFS#2<ept id=\"p2\">](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqUDFS/cs/Program.cs#2)</ept><ept id=\"p1\">]</ept>","pos":[1900,2013],"source":"[!code-csharp[DLinqUDFS#2](../../../../../../samples/snippets/csharp/VS_Snippets_Data/DLinqUDFS/cs/Program.cs#2)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DLinqUDFS#2<ept id=\"p2\">](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqUDFS/vb/Module1.vb#2)</ept><ept id=\"p1\">]</ept>","pos":[2015,2129],"source":"[!code-vb[DLinqUDFS#2](../../../../../../samples/snippets/visualbasic/VS_Snippets_Data/DLinqUDFS/vb/Module1.vb#2)]"},{"pos":[2138,2146],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2150,2255],"content":"<bpt id=\"p1\">[</bpt>User-Defined Functions<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/user-defined-functions.md)</ept>","source":"[User-Defined Functions](../../../../../../docs/framework/data/adonet/sql/linq/user-defined-functions.md)"}]}