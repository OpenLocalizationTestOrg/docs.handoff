{"content":"---\ntitle: \"CorDebugIntercept Enumeration\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"CorDebugIntercept\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"CorDebugIntercept\"\nhelpviewer_keywords: \n  - \"CorDebugIntercept enumeration [.NET Framework debugging]\"\nms.assetid: 3d5b642e-7ef2-428b-a5ae-509c35ed461a\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# CorDebugIntercept Enumeration\nIndicates the types of code that can be intercepted (that is, stepped into).  \n  \n## Syntax  \n  \n```  \ntypedef enum CorDebugIntercept {  \n    INTERCEPT_NONE                = 0x0,  \n    INTERCEPT_CLASS_INIT          = 0x01,  \n    INTERCEPT_EXCEPTION_FILTER    = 0x02,  \n    INTERCEPT_SECURITY            = 0x04,  \n    INTERCEPT_CONTEXT_POLICY      = 0x08,  \n    INTERCEPT_INTERCEPTION        = 0x10,  \n    INTERCEPT_ALL                 = 0xffff  \n} CorDebugIntercept;  \n```  \n  \n## Members  \n  \n|Member|Description|  \n|------------|-----------------|  \n|`INTERCEPT_NONE`|No code can be intercepted.|  \n|`INTERCEPT_CLASS_INIT`|A constructor can be intercepted.|  \n|`INTERCEPT_EXCEPTION_FILTER`|An exception filter can be intercepted.|  \n|`INTERCEPT_SECURITY`|Code that enforces security can be intercepted.|  \n|`INTERCEPT_CONTEXT_POLICY`|A context policy can be intercepted.|  \n|`INTERCEPT_INTERCEPTION`|Not used.|  \n|`INTERCEPT_ALL`|All code can be intercepted.|  \n  \n## Remarks  \n Use the [ICorDebugStepper::SetInterceptMask](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setinterceptmask-method.md) method to establish the types of code that can be intercepted.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]  \n  \n## See also\n\n- [Debugging Enumerations](../../../../docs/framework/unmanaged-api/debugging/debugging-enumerations.md)\n","nodes":[{"pos":[4,392],"embed":true,"restype":"x-metadata","content":"title: \"CorDebugIntercept Enumeration\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"CorDebugIntercept\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"CorDebugIntercept\"\nhelpviewer_keywords: \n  - \"CorDebugIntercept enumeration [.NET Framework debugging]\"\nms.assetid: 3d5b642e-7ef2-428b-a5ae-509c35ed461a\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"CorDebugIntercept Enumeration","nodes":[{"pos":[0,29],"content":"CorDebugIntercept Enumeration","nodes":[{"content":"CorDebugIntercept Enumeration","pos":[0,29]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[399,428],"content":"CorDebugIntercept Enumeration","linkify":"CorDebugIntercept Enumeration","nodes":[{"content":"CorDebugIntercept Enumeration","pos":[0,29]}]},{"content":"Indicates the types of code that can be intercepted (that is, stepped into).","pos":[429,505]},{"pos":[514,520],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[910,917],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Member","pos":[924,930]},{"content":"Description","pos":[931,942]},{"content":"No code can be intercepted.","pos":[999,1026]},{"content":"A constructor can be intercepted.","pos":[1054,1087]},{"content":"An exception filter can be intercepted.","pos":[1121,1160]},{"content":"Code that enforces security can be intercepted.","pos":[1186,1233]},{"content":"A context policy can be intercepted.","pos":[1265,1301]},{"content":"Not used.","pos":[1331,1340]},{"content":"All code can be intercepted.","pos":[1361,1389]},{"pos":[1399,1406],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1410,1613],"content":"Use the <bpt id=\"p1\">[</bpt>ICorDebugStepper::SetInterceptMask<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setinterceptmask-method.md)</ept> method to establish the types of code that can be intercepted.","source":"Use the [ICorDebugStepper::SetInterceptMask](../../../../docs/framework/unmanaged-api/debugging/icordebugstepper-setinterceptmask-method.md) method to establish the types of code that can be intercepted."},{"pos":[1622,1634],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[1638,1742],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[1749,1785],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[1792,1817],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[1824,1932],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v10plus](../../../../includes/net-current-v10plus-md.md)]"},{"pos":[1941,1949],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1953,2055],"content":"<bpt id=\"p1\">[</bpt>Debugging Enumerations<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-enumerations.md)</ept>","source":"[Debugging Enumerations](../../../../docs/framework/unmanaged-api/debugging/debugging-enumerations.md)"}]}