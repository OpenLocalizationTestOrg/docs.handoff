{"content":"---\ntitle: \"Adding Data to a DataTable\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: d6aa8474-7bde-48f7-949d-20dc38a1625b\n---\n# Adding Data to a DataTable\nAfter you create a <xref:System.Data.DataTable> and define its structure using columns and constraints, you can add new rows of data to the table. To add a new row, declare a new variable as type <xref:System.Data.DataRow>. A new **DataRow** object is returned when you call the <xref:System.Data.DataTable.NewRow%2A> method. The **DataTable** then creates the **DataRow** object based on the structure of the table, as defined by the <xref:System.Data.DataColumnCollection>.  \n  \n The following example demonstrates how to create a new row by calling the **NewRow** method.  \n  \n```vb  \nDim workRow As DataRow = workTable.NewRow()  \n```  \n  \n```csharp  \nDataRow workRow = workTable.NewRow();  \n```  \n  \n You then can manipulate the newly added row using an index or the column name, as shown in the following example.  \n  \n```vb  \nworkRow(\"CustLName\") = \"Smith\"  \nworkRow(1) = \"Smith\"  \n```  \n  \n```csharp  \nworkRow[\"CustLName\"] = \"Smith\";  \nworkRow[1] = \"Smith\";  \n```  \n  \n After data is inserted into the new row, the **Add** method is used to add the row to the <xref:System.Data.DataRowCollection>, shown in the following code.  \n  \n```vb  \nworkTable.Rows.Add(workRow)  \n```  \n  \n```csharp  \nworkTable.Rows.Add(workRow);  \n```  \n  \n You can also call the **Add** method to add a new row by passing in an array of values, typed as <xref:System.Object>, as shown in the following example.  \n  \n```vb  \nworkTable.Rows.Add(new Object() {1, \"Smith\"})  \n```  \n  \n```csharp  \nworkTable.Rows.Add(new Object[] {1, \"Smith\"});  \n```  \n  \n Passing an array of values, typed as **Object**, to the **Add** method creates a new row inside the table and sets its column values to the values in the object array. Note that values in the array are matched sequentially to the columns, based on the order in which they appear in the table.  \n  \n The following example adds 10 rows to the newly created **Customers** table.  \n  \n```vb  \nDim workRow As DataRow  \nDim i As Integer  \n  \nFor i = 0 To 9  \n  workRow = workTable.NewRow()  \n  workRow(0) = i  \n  workRow(1) = \"CustName\" & I.ToString()  \n  workTable.Rows.Add(workRow)  \nNext  \n```  \n  \n```csharp  \nDataRow workRow;  \n  \nfor (int i = 0; i <= 9; i++)   \n{  \n  workRow = workTable.NewRow();  \n  workRow[0] = i;  \n  workRow[1] = \"CustName\" + i.ToString();  \n  workTable.Rows.Add(workRow);  \n}  \n```  \n  \n## See also\n\n- <xref:System.Data.DataColumnCollection>\n- <xref:System.Data.DataRow>\n- <xref:System.Data.DataRowCollection>\n- <xref:System.Data.DataTable>\n- [Manipulating Data in a DataTable](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/manipulating-data-in-a-datatable.md)\n- [ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)\n","nodes":[{"pos":[4,144],"embed":true,"restype":"x-metadata","content":"title: \"Adding Data to a DataTable\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nms.assetid: d6aa8474-7bde-48f7-949d-20dc38a1625b","nodes":[{"content":"Adding Data to a DataTable","nodes":[{"pos":[0,26],"content":"Adding Data to a DataTable","nodes":[{"content":"Adding Data to a DataTable","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[151,177],"content":"Adding Data to a DataTable","linkify":"Adding Data to a DataTable","nodes":[{"content":"Adding Data to a DataTable","pos":[0,26]}]},{"content":"After you create a <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> and define its structure using columns and constraints, you can add new rows of data to the table.","pos":[178,324],"source":"After you create a <xref:System.Data.DataTable> and define its structure using columns and constraints, you can add new rows of data to the table."},{"content":"To add a new row, declare a new variable as type <ph id=\"ph1\">&lt;xref:System.Data.DataRow&gt;</ph>.","pos":[325,401],"source":" To add a new row, declare a new variable as type <xref:System.Data.DataRow>."},{"content":"A new <bpt id=\"p1\">**</bpt>DataRow<ept id=\"p1\">**</ept> object is returned when you call the <ph id=\"ph1\">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method.","pos":[402,503],"source":" A new **DataRow** object is returned when you call the <xref:System.Data.DataTable.NewRow%2A> method."},{"content":"The <bpt id=\"p1\">**</bpt>DataTable<ept id=\"p1\">**</ept> then creates the <bpt id=\"p2\">**</bpt>DataRow<ept id=\"p2\">**</ept> object based on the structure of the table, as defined by the <ph id=\"ph1\">&lt;xref:System.Data.DataColumnCollection&gt;</ph>.","pos":[504,653],"source":" The **DataTable** then creates the **DataRow** object based on the structure of the table, as defined by the <xref:System.Data.DataColumnCollection>."},{"pos":[660,752],"content":"The following example demonstrates how to create a new row by calling the <bpt id=\"p1\">**</bpt>NewRow<ept id=\"p1\">**</ept> method.","source":"The following example demonstrates how to create a new row by calling the **NewRow** method."},{"content":"You then can manipulate the newly added row using an index or the column name, as shown in the following example.","pos":[883,996]},{"pos":[1155,1311],"content":"After data is inserted into the new row, the <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> method is used to add the row to the <ph id=\"ph1\">&lt;xref:System.Data.DataRowCollection&gt;</ph>, shown in the following code.","source":"After data is inserted into the new row, the **Add** method is used to add the row to the <xref:System.Data.DataRowCollection>, shown in the following code."},{"pos":[1417,1570],"content":"You can also call the <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> method to add a new row by passing in an array of values, typed as <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>, as shown in the following example.","source":"You can also call the **Add** method to add a new row by passing in an array of values, typed as <xref:System.Object>, as shown in the following example."},{"content":"Passing an array of values, typed as <bpt id=\"p1\">**</bpt>Object<ept id=\"p1\">**</ept>, to the <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept> method creates a new row inside the table and sets its column values to the values in the object array.","pos":[1712,1879],"source":"Passing an array of values, typed as **Object**, to the **Add** method creates a new row inside the table and sets its column values to the values in the object array."},{"content":"Note that values in the array are matched sequentially to the columns, based on the order in which they appear in the table.","pos":[1880,2004]},{"pos":[2011,2087],"content":"The following example adds 10 rows to the newly created <bpt id=\"p1\">**</bpt>Customers<ept id=\"p1\">**</ept> table.","source":"The following example adds 10 rows to the newly created **Customers** table."},{"pos":[2525,2533],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2678,2818],"content":"<bpt id=\"p1\">[</bpt>Manipulating Data in a DataTable<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/manipulating-data-in-a-datatable.md)</ept>","source":"[Manipulating Data in a DataTable](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/manipulating-data-in-a-datatable.md)"},{"pos":[2821,2925],"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept>","source":"[ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)"}]}