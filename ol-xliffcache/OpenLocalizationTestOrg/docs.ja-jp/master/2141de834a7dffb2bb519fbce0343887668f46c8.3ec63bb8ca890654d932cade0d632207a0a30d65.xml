{"content":"---\ntitle: \"Compiler Error CS1612\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS1612\"\nhelpviewer_keywords: \n  - \"CS1612\"\nms.assetid: ef5db985-030a-4f15-b53f-e92c9297c6a3\n---\n# Compiler Error CS1612\nCannot modify the return value of 'expression' because it is not a variable  \n  \n An attempt was made to modify a value type that is produced as the result of an intermediate expression but is not stored in a variable. This error can occur when you attempt to directly modify a struct in a generic collection, as shown in the following example:  \n  \n```csharp  \nList<myStruct> list = {…};  \nlist[0].Name = \"MyStruct42\"; //CS1612  \n```  \n  \n To modify the struct, first assign it to a local variable, modify the variable, then assign the variable back to the item in the collection.  \n  \n```csharp  \nList<myStruct> list = {…};  \nMyStruct ms = list[0];  \nms.Name = \"MyStruct42\";  \nlist[0] = ms;  \n```  \n  \n This error occurs because value types are copied on assignment. When you retrieve a value type from a property or indexer, you are getting a copy of the object, not a reference to the object itself. The copy that is returned is not stored by the property or indexer because they are actually methods, not storage locations (variables). You must store the copy into a variable that you declare before you can modify it.  \n  \n The error does not occur with reference types because a property or indexer in that case returns a reference to an existing object, which is a storage location.  \n  \n If you are defining the class or struct, you can resolve this error by modifying your property declaration to provide access to the members of a struct. If you are writing client code, you can resolve the error by creating your own instance of the struct, modifying its fields, and then assigning the entire struct back to the property. As a third alternative, you can change your struct to a class.  \n  \n## Example  \n CS1612 also occurs when you attempt to access the member of a struct through a property on an enclosing class that is returning the entire struct, as shown in the following example:  \n  \n```csharp  \n// CS1612.cs  \nusing System;  \n  \npublic struct MyStruct  \n{  \n    public int Width;  \n}  \n  \npublic class ListView  \n{  \n    MyStruct ms;  \n    public MyStruct Size  \n    {  \n        get { return ms; }  \n        set { ms = value; }  \n    }  \n}  \n  \npublic class MyClass  \n{  \n    public MyClass()  \n    {  \n        ListView lvi;  \n        lvi = new ListView();  \n        lvi.Size.Width = 5; // CS1612  \n  \n        // You can use the following lines instead.  \n        // MyStruct ms;  \n        // ms.Width = 5;  \n        // lvi.Size = ms;  // CS1612  \n    }  \n  \n    public static void Main()   \n    {  \n        MyClass mc = new MyClass();  \n        // Keep the console open in debug mode.  \n        Console.WriteLine(\"Press any key to exit.\");  \n        Console.ReadKey();     \n    }  \n}  \n```  \n  \n## See also\n\n- [Structs](../../../csharp/programming-guide/classes-and-structs/structs.md)\n- [Value Types](../../../csharp/language-reference/keywords/value-types.md)\n- [Reference Types](../../../csharp/language-reference/keywords/reference-types.md)\n","nodes":[{"pos":[4,165],"embed":true,"restype":"x-metadata","content":"title: \"Compiler Error CS1612\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"CS1612\"\nhelpviewer_keywords: \n  - \"CS1612\"\nms.assetid: ef5db985-030a-4f15-b53f-e92c9297c6a3","nodes":[{"content":"Compiler Error CS1612","nodes":[{"pos":[0,21],"content":"Compiler Error CS1612","nodes":[{"content":"Compiler Error CS1612","pos":[0,21]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[172,193],"content":"Compiler Error CS1612","linkify":"Compiler Error CS1612","nodes":[{"content":"Compiler Error CS1612","pos":[0,21]}]},{"content":"Cannot modify the return value of 'expression' because it is not a variable","pos":[194,269]},{"content":"An attempt was made to modify a value type that is produced as the result of an intermediate expression but is not stored in a variable.","pos":[276,412]},{"content":"This error can occur when you attempt to directly modify a struct in a generic collection, as shown in the following example:","pos":[413,538]},{"content":"To modify the struct, first assign it to a local variable, modify the variable, then assign the variable back to the item in the collection.","pos":[635,775]},{"content":"This error occurs because value types are copied on assignment.","pos":[899,962]},{"content":"When you retrieve a value type from a property or indexer, you are getting a copy of the object, not a reference to the object itself.","pos":[963,1097]},{"content":"The copy that is returned is not stored by the property or indexer because they are actually methods, not storage locations (variables).","pos":[1098,1234]},{"content":"You must store the copy into a variable that you declare before you can modify it.","pos":[1235,1317]},{"content":"The error does not occur with reference types because a property or indexer in that case returns a reference to an existing object, which is a storage location.","pos":[1324,1484]},{"content":"If you are defining the class or struct, you can resolve this error by modifying your property declaration to provide access to the members of a struct.","pos":[1491,1643]},{"content":"If you are writing client code, you can resolve the error by creating your own instance of the struct, modifying its fields, and then assigning the entire struct back to the property.","pos":[1644,1827]},{"content":"As a third alternative, you can change your struct to a class.","pos":[1828,1890]},{"pos":[1899,1906],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"CS1612 also occurs when you attempt to access the member of a struct through a property on an enclosing class that is returning the entire struct, as shown in the following example:","pos":[1910,2091]},{"pos":[2913,2921],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2925,3000],"content":"<bpt id=\"p1\">[</bpt>Structs<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/structs.md)</ept>","source":"[Structs](../../../csharp/programming-guide/classes-and-structs/structs.md)"},{"pos":[3003,3076],"content":"<bpt id=\"p1\">[</bpt>Value Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/value-types.md)</ept>","source":"[Value Types](../../../csharp/language-reference/keywords/value-types.md)"},{"pos":[3079,3160],"content":"<bpt id=\"p1\">[</bpt>Reference Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/reference-types.md)</ept>","source":"[Reference Types](../../../csharp/language-reference/keywords/reference-types.md)"}]}