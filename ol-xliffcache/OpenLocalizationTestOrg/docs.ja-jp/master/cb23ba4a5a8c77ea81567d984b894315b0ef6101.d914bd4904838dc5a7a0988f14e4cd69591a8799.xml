{"content":"---\ntitle: \"How to: Add an Owner Type for a Dependency Property | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"classes, adding as owners of dependency properties\"\n  - \"dependency properties, adding classes as owners of\"\nms.assetid: edcce050-0576-4edb-a31a-3f909637b452\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Add an Owner Type for a Dependency Property\nThis example shows how to add a class as an owner of a dependency property registered for a different type. By doing this, the [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] reader and property system are both able to recognize the class as an additional owner of the property. Adding as owner optionally allows the adding class to provide type-specific metadata.  \n  \n In the following example, `StateProperty` is a property registered by the `MyStateControl` class. The class `UnrelatedStateControl` adds itself as an owner of the `StateProperty` using the <xref:System.Windows.DependencyProperty.AddOwner%2A> method, specifically using the signature that allows for new metadata for the dependency property as it exists on the adding type. Notice that you should provide [!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)] accessors for the property similar to the example shown in the [Implement a Dependency Property](../../../../docs/framework/wpf/advanced/how-to-implement-a-dependency-property.md) example, as well as re-expose the dependency property identifier on the class being added as owner.  \n  \n Without wrappers, the dependency property would still work from the perspective of programmatic access using <xref:System.Windows.DependencyObject.GetValue%2A> or <xref:System.Windows.DependencyObject.SetValue%2A>. But you typically want to parallel this property-system behavior with the [!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)] property wrappers. The wrappers make it easier to set the dependency property programmatically, and make it possible to set the properties as [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] attributes.  \n  \n To find out how to override default metadata, see [Override Metadata for a Dependency Property](../../../../docs/framework/wpf/advanced/how-to-override-metadata-for-a-dependency-property.md).  \n  \n## Example  \n [!code-csharp[PropertySystemEsoterics#MyStateControl](../../../../samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/SDKSampleLibrary/class1.cs#mystatecontrol)]\n [!code-vb[PropertySystemEsoterics#MyStateControl](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/sdksamplelibrary/class1.vb#mystatecontrol)]  \n[!code-csharp[PropertySystemEsoterics#UnrelatedStateControl](../../../../samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/SDKSampleLibrary/class1.cs#unrelatedstatecontrol)]\n[!code-vb[PropertySystemEsoterics#UnrelatedStateControl](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/sdksamplelibrary/class1.vb#unrelatedstatecontrol)]  \n  \n## See Also  \n [Custom Dependency Properties](../../../../docs/framework/wpf/advanced/custom-dependency-properties.md)   \n [Dependency Properties Overview](../../../../docs/framework/wpf/advanced/dependency-properties-overview.md)","nodes":[{"pos":[12,80],"content":"How to: Add an Owner Type for a Dependency Property | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Add an Owner Type for a Dependency Property | Microsoft Docs","pos":[0,68]}]},{"pos":[524,575],"content":"How to: Add an Owner Type for a Dependency Property","linkify":"How to: Add an Owner Type for a Dependency Property","nodes":[{"content":"How to: Add an Owner Type for a Dependency Property","pos":[0,51]}]},{"content":"This example shows how to add a class as an owner of a dependency property registered for a different type.","pos":[576,683]},{"content":"By doing this, the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> reader and property system are both able to recognize the class as an additional owner of the property.","pos":[684,960],"source":" By doing this, the [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] reader and property system are both able to recognize the class as an additional owner of the property."},{"content":"Adding as owner optionally allows the adding class to provide type-specific metadata.","pos":[961,1046]},{"content":"In the following example, <ph id=\"ph1\">`StateProperty`</ph> is a property registered by the <ph id=\"ph2\">`MyStateControl`</ph> class.","pos":[1053,1150],"source":"In the following example, `StateProperty` is a property registered by the `MyStateControl` class."},{"content":"The class <ph id=\"ph1\">`UnrelatedStateControl`</ph> adds itself as an owner of the <ph id=\"ph2\">`StateProperty`</ph> using the <ph id=\"ph3\">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph> method, specifically using the signature that allows for new metadata for the dependency property as it exists on the adding type.","pos":[1151,1425],"source":" The class `UnrelatedStateControl` adds itself as an owner of the `StateProperty` using the <xref:System.Windows.DependencyProperty.AddOwner%2A> method, specifically using the signature that allows for new metadata for the dependency property as it exists on the adding type."},{"content":"Notice that you should provide <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)]</ph> accessors for the property similar to the example shown in the <bpt id=\"p1\">[</bpt>Implement a Dependency Property<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/how-to-implement-a-dependency-property.md)</ept> example, as well as re-expose the dependency property identifier on the class being added as owner.","pos":[1426,1804],"source":" Notice that you should provide [!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)] accessors for the property similar to the example shown in the [Implement a Dependency Property](../../../../docs/framework/wpf/advanced/how-to-implement-a-dependency-property.md) example, as well as re-expose the dependency property identifier on the class being added as owner."},{"content":"Without wrappers, the dependency property would still work from the perspective of programmatic access using <ph id=\"ph1\">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph>.","pos":[1811,2025],"source":"Without wrappers, the dependency property would still work from the perspective of programmatic access using <xref:System.Windows.DependencyObject.GetValue%2A> or <xref:System.Windows.DependencyObject.SetValue%2A>."},{"content":"But you typically want to parallel this property-system behavior with the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)]</ph> property wrappers.","pos":[2026,2188],"source":" But you typically want to parallel this property-system behavior with the [!INCLUDE[TLA2#tla_clr](../../../../includes/tla2sharptla-clr-md.md)] property wrappers."},{"content":"The wrappers make it easier to set the dependency property programmatically, and make it possible to set the properties as <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)]</ph> attributes.","pos":[2189,2395],"source":" The wrappers make it easier to set the dependency property programmatically, and make it possible to set the properties as [!INCLUDE[TLA2#tla_xaml](../../../../includes/tla2sharptla-xaml-md.md)] attributes."},{"pos":[2402,2593],"content":"To find out how to override default metadata, see <bpt id=\"p1\">[</bpt>Override Metadata for a Dependency Property<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/how-to-override-metadata-for-a-dependency-property.md)</ept>.","source":"To find out how to override default metadata, see [Override Metadata for a Dependency Property](../../../../docs/framework/wpf/advanced/how-to-override-metadata-for-a-dependency-property.md)."},{"pos":[2602,2609],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>PropertySystemEsoterics#MyStateControl<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/SDKSampleLibrary/class1.cs#mystatecontrol)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>PropertySystemEsoterics#MyStateControl<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/sdksamplelibrary/class1.vb#mystatecontrol)</ept><ept id=\"p3\">]</ept>","pos":[2613,2981],"source":"[!code-csharp[PropertySystemEsoterics#MyStateControl](../../../../samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/SDKSampleLibrary/class1.cs#mystatecontrol)]\n [!code-vb[PropertySystemEsoterics#MyStateControl](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/sdksamplelibrary/class1.vb#mystatecontrol)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>PropertySystemEsoterics#UnrelatedStateControl<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/SDKSampleLibrary/class1.cs#unrelatedstatecontrol)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>PropertySystemEsoterics#UnrelatedStateControl<ept id=\"p4\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/sdksamplelibrary/class1.vb#unrelatedstatecontrol)</ept><ept id=\"p3\">]</ept>","pos":[2984,3379],"source":"[!code-csharp[PropertySystemEsoterics#UnrelatedStateControl](../../../../samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/SDKSampleLibrary/class1.cs#unrelatedstatecontrol)]\n[!code-vb[PropertySystemEsoterics#UnrelatedStateControl](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/sdksamplelibrary/class1.vb#unrelatedstatecontrol)]"},{"pos":[3388,3396],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Custom Dependency Properties<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/custom-dependency-properties.md)</ept><ph id=\"ph1\"> </ph>","pos":[3400,3504],"source":"[Custom Dependency Properties](../../../../docs/framework/wpf/advanced/custom-dependency-properties.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Dependency Properties Overview<ept id=\"p1\">](../../../../docs/framework/wpf/advanced/dependency-properties-overview.md)</ept>","pos":[3507,3615],"source":" [Dependency Properties Overview](../../../../docs/framework/wpf/advanced/dependency-properties-overview.md)"}]}