<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="index.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-7148b53" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">255658ab80f53193eb3f52cc72f740240a847571</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\diagnostics\wmi\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd0da0be2469bac1ae8a0c1b2e0702ecc02ff26b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f203b262e5c850d21f89325a24a2d3410aa413aa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Using Windows Management Instrumentation for Diagnostics | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using Windows Management Instrumentation for Diagnostics</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>exposes inspection data of a service at runtime through a <ph id="ph1">[!INCLUDE[indigo2](../../../../../includes/indigo2-md.md)]</ph> Windows Management Instrumentation (WMI) provider.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Enabling WMI</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>WMI is Microsoft's implementation of the Web-Based Enterprise Management (WBEM) standard.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../../includes/crabout-md.md)]</ph> the WMI SDK, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>(http://msdn.microsoft.com/library/default.asp?url=/library/wmisdk/wmi/wmi_start_page.asp).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>WBEM is an industry standard for how applications expose management instrumentation to external management tools.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A WMI provider is a component that exposes instrumentation at runtime through a WBEM-compatible interface.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It consists of a set of WMI objects that have attribute/value pairs.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Pairs can be of a number of simple types.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Management tools can connect to the services through the interface at runtime.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../../includes/indigo2-md.md)]</ph> exposes attributes of services such as addresses, bindings, behaviors, and listeners.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The built-in WMI provider can be activated in the configuration file of the application.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This is done through the <ph id="ph1">`wmiProviderEnabled`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>diagnostics&gt;<ept id="p1">](../../../../../docs/framework/configure-apps/file-schema/wcf/diagnostics.md)</ept> in the <bpt id="p2">[</bpt><ph id="ph3">\&lt;</ph>system.serviceModel&gt;<ept id="p2">](../../../../../docs/framework/configure-apps/file-schema/wcf/system-servicemodel.md)</ept> section, as shown in the following sample configuration.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This configuration entry exposes a WMI interface.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Management applications can now connect through this interface and access the management instrumentation of the application.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Accessing WMI Data</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>WMI data can be accessed in many different ways.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Microsoft provides WMI APIs for scripts, <ph id="ph1">[!INCLUDE[vbprvb](../../../../../includes/vbprvb-md.md)]</ph> applications, C++ applications, and the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../../../includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using WMI<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95183)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you use the .NET Framework provided methods to programmatically access WMI data, you should be aware that such methods may throw exceptions when the connection is established.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The connection is not established during the construction of the <ph id="ph1">&lt;xref:System.Management.ManagementObject&gt;</ph> instance, but on the first request involving actual data exchange.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Therefore, you should use a <ph id="ph1">`try..catch`</ph> block to catch the possible exceptions.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can change the trace and message logging level, as well as message logging options for the <ph id="ph1">`System.ServiceModel`</ph> trace source in WMI.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This can be done by accessing the <bpt id="p1">[</bpt>AppDomainInfo<ept id="p1">](../../../../../docs/framework/wcf/diagnostics/wmi/appdomaininfo.md)</ept> instance, which exposes these Boolean properties: <ph id="ph1">`LogMessagesAtServiceLevel`</ph>, <ph id="ph2">`LogMessagesAtTransportLevel`</ph>, <ph id="ph3">`LogMalformedMessages`</ph>, and <ph id="ph4">`TraceLevel`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Therefore, if you configure a trace listener for message logging, but set these options to <ph id="ph1">`false`</ph> in configuration, you can later change them to <ph id="ph2">`true`</ph> when the application is running.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This will effectively enable message logging at runtime.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Similarly, if you enable message logging in your configuration file, you can disable it at runtime using WMI.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You should be aware that if no message logging trace listeners for message logging, or no <ph id="ph1">`System.ServiceModel`</ph> trace listeners for tracing are specified in the configuration file, none of your changes are taken into effect, even though the changes are accepted by WMI.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information on properly setting up the respective listeners, see <bpt id="p1">[</bpt>Configuring Message Logging<ept id="p1">](../../../../../docs/framework/wcf/diagnostics/configuring-message-logging.md)</ept> and <bpt id="p2">[</bpt>Configuring Tracing<ept id="p2">](../../../../../docs/framework/wcf/diagnostics/tracing/configuring-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The trace level of all other trace sources specified by configuration is effective when the application starts, and cannot be changed.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>exposes a <ph id="ph1">`GetOperationCounterInstanceName`</ph> method for scripting.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This method returns a performance counter instance name if you provide it with an operation name.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>However, it does not validate your input.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Therefore, if you provide an incorrect operation name, an incorrect counter name is returned.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OutgoingChannel`</ph> property of the <ph id="ph2">`Service`</ph> instance does not count channels opened by a service to connect to another service, if the <ph id="ph3">[!INCLUDE[indigo2](../../../../../includes/indigo2-md.md)]</ph> client to the destination service is not created within the <ph id="ph4">`Service`</ph> method.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept> WMI only supports a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value up to 3 decimal points.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, if your service sets one of its properties to <ph id="ph1">&lt;xref:System.TimeSpan.MaxValue&gt;</ph>, its value is truncated after 3 decimal points when viewed through WMI.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Security</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">[!INCLUDE[indigo2](../../../../../includes/indigo2-md.md)]</ph> WMI provider allows the discovery of services in an environment, you should exercise extreme caution for granting access to it.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you relax the default administrator-only access, you may allow less-trusted parties access to sensitive data in your environment.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifically, if you loosen permissions on remote WMI access, flooding attacks can occur.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If a process is flooded by excessive WMI requests, its performance can be degraded.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In addition, if you relax access permissions for the MOF file, less-trusted parties can manipulate the behavior of WMI and alter the objects that are loaded in the WMI schema.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, fields can be removed such that critical data is concealed from the administrator or that fields that do not populate or cause exceptions are added to the file.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">[!INCLUDE[indigo2](../../../../../includes/indigo2-md.md)]</ph> WMI provider grants "execute method", "provider write", and "enable account" permission for Administrator, and "enable account" permission for ASP.NET, Local Service and Network Service.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In particular, on non-<ph id="ph1">[!INCLUDE[wv](../../../../../includes/wv-md.md)]</ph> platforms, the ASP.NET account has read access to the WMI ServiceModel namespace.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you do not want to grant these privileges to a particular user group, you should either deactivate the WMI provider (it is disabled by default), or disable access for the specific user group.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In addition, when you attempt to enable WMI through configuration, WMI may not be enabled due to insufficient user privilege.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>However, no event is written to the event log to record this failure.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To modify user privilege levels, use the following steps.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Click Start and then Run and type <bpt id="p1">**</bpt>compmgmt.msc<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Services and Application/WMI Controls<ept id="p1">**</ept> to select <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Security<ept id="p1">**</ept> Tab, and navigate to the <bpt id="p2">**</bpt>Root/ServiceModel<ept id="p2">**</ept> namespace.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Security<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Select the specific group or user that you want to control access and use the <bpt id="p1">**</bpt>Allow<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Deny<ept id="p2">**</ept> checkbox to configure permissions.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Granting WCF WMI Registration Permissions to Additional Users</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>WCF exposes management data to WMI.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It does so by hosting an in-process WMI provider, sometimes called a "decoupled provider".</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For the management data to be exposed, the account that registers this provider must have the appropriate permissions.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In Windows, only a small set of privileged accounts can register decoupled providers by default.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This is a problem because users commonly want to expose WMI data from a WCF service running under an account that is not in the default set.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To provide this access, an administrator must grant the following permissions to the additional account in the following order:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Permission to access to the WCF WMI Namespace.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Permission to register the WCF Decoupled WMI Provider.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To grant WMI namespace access permission</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Run the following PowerShell script.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This PowerShell script uses Security Descriptor Definition Language (SDDL) to grant the Built-In Users group access to the "root/servicemodel" WMI namespace.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>It specifies the following ACLs:</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Built-In Administrator (BA) - Already Had Access.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Network Service (NS) - Already Had Access.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Local System (LS) - Already Had Access.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Built-In Users - The group to grant access to.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To grant provider registration access</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Run the following PowerShell script.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Granting Access to Arbitrary Users or Groups</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The example in this section grants WMI Provider registration privileges to all local users.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If you want to grant access to a user or group that is not built in, then you must obtain that user or group’s Security Identifier (SID).</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>There is no simple way to get the SID for an arbitrary user.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>One method is to log on as the desired user and then issue the following shell command.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This provides the SID of the current user, but this method cannot be used to get the SID on any arbitrary user.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Another method to get the SID is to use the <bpt id="p1">[</bpt>getsid.exe<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=186467)</ept> tool from the <bpt id="p2">[</bpt>Windows 2000 Resource Kit Tools for administrative tasks<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=178660)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This tool compares the SID of two users (local or domain), and as a side effect prints the two SIDs to the command line.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](../../../../../includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Well Known SIDs<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=186468)</ept>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Accessing Remote WMI Object Instances</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If you need to access <ph id="ph1">[!INCLUDE[indigo2](../../../../../includes/indigo2-md.md)]</ph> WMI instances on a remote machine, you must enable packet privacy on the tools that you use for access.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The following section describes how to achieve these using the WMI CIM Studio, Windows Management Instrumentation Tester, as well as .NET SDK 2.0.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>WMI CIM Studio</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If you have installed <bpt id="p1">[</bpt>WMI Administrative Tools<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95185)</ept>, you can use the WMI CIM Studio to access WMI instances.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The tools are in the following folder</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>%windir%\Program Files\WMI Tools<ph id="ph1">\\</ph><ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Connect to namespace:<ept id="p1">**</ept> window, type <bpt id="p2">**</bpt>root\ServiceModel<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>OK.<ept id="p3">**</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>WMI CIM Studio Login<ept id="p1">**</ept> window, click the <bpt id="p2">**</bpt>Options &gt;&gt;<ept id="p2">**</ept> button to expand the window.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Packet privacy<ept id="p1">**</ept> for <bpt id="p2">**</bpt>Authentication level<ept id="p2">**</ept>, and click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Windows Management Instrumentation Tester</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This tool is installed by Windows.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To run it, launch a command console by typing <bpt id="p1">**</bpt>cmd.exe<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>Start/Run<ept id="p2">**</ept> dialog box and click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Then, type <bpt id="p1">**</bpt>wbemtest.exe<ept id="p1">**</ept> in the command window.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The Windows Management Instrumentation Tester tool is then launched.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Connect<ept id="p1">**</ept> button on the top right corner of the window.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In the new window, enter <bpt id="p1">**</bpt>root\ServiceModel<ept id="p1">**</ept> for the <bpt id="p2">**</bpt>Namespace<ept id="p2">**</ept> field, and select <bpt id="p3">**</bpt>Packet privacy<ept id="p3">**</ept> for <bpt id="p4">**</bpt>Authentication level<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Connect<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Using Managed Code</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also access remote WMI instances programmatically by using classes provided by the <ph id="ph1">&lt;xref:System.Management&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The following code sample demonstrates how to do this.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>