{"content":"---\ntitle: \"Code Generation in LINQ to SQL | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: ddcbdaa1-e7fa-4d85-a379-313b49965c07\ncaps.latest.revision: 4\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Code Generation in LINQ to SQL\nYou can generate code to represent a database by using either the [!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)] or the SQLMetal command-line tool. In either case, end-to-end code generation occurs in three stages:  \n  \n1.  The *DBML Extractor* extracts schema information from the database and reassembles the information into an XML-formatted DBML file.  \n  \n2.  The DBML file is scanned by the *DBML Validator* for errors.  \n  \n3.  If no validation errors appear, the file is passed to the Code Generator.  \n  \n For more information, see [SqlMetal.exe (Code Generation Tool)](../../../../../../docs/framework/tools/sqlmetal-exe-code-generation-tool.md). Developers using [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] can also use the [!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)] to generate code. See [LINQ to SQL Tools in Visual Studio](/visualstudio/data-tools/linq-to-sql-tools-in-visual-studio2).  \n  \n## DBML Extractor  \n The DBML Extractor is a [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] component that takes database metadata as input and produces a DBML file as output.  \n  \n## Code Generator  \n The Code Generator is a [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] component that translates DBML files to [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)], C#, or XML mapping files.  \n  \n## XML Schema Definition File  \n The DBML file must be valid against the following schema definition as an XSD file.  \n  \n Distinguish this schema definition file from the schema definition file that is used to validate an external mapping file. For more information, see [External Mapping](../../../../../../docs/framework/data/adonet/sql/linq/external-mapping.md)).  \n  \n> [!NOTE]\n>  [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] users will also find this XSD file in the XML Schemas dialog box as \"DbmlSchema.xsd\". To use the XSD file correctly for validating a DBML file, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md).  \n  \n```  \n?<?xml version=\"1.0\" encoding=\"utf-16\"?>  \n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"http://schemas.microsoft.com/linqtosql/dbml/2007\" xmlns=\"http://schemas.microsoft.com/linqtosql/dbml/2007\"  \nelementFormDefault=\"qualified\" >  \n  <xs:element name=\"Database\" type=\"Database\" />  \n  <xs:complexType name=\"Database\">  \n    <xs:sequence>  \n      <xs:element name=\"Connection\" type=\"Connection\" minOccurs=\"0\" maxOccurs=\"1\" />  \n      <xs:element name=\"Table\" type=\"Table\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n      <xs:element name=\"Function\" type=\"Function\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n    </xs:sequence>  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"EntityNamespace\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"ContextNamespace\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Class\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"AccessModifier\" type=\"AccessModifier\" use=\"optional\" />  \n    <xs:attribute name=\"Modifier\" type=\"ClassModifier\" use=\"optional\" />  \n    <xs:attribute name=\"BaseType\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Provider\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"ExternalMapping\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"Serialization\" type=\"SerializationMode\" use=\"optional\" />  \n    <xs:attribute name=\"EntityBase\" type=\"xs:string\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Table\">  \n    <xs:all>  \n      <xs:element name=\"Type\" type=\"Type\" minOccurs=\"1\" maxOccurs=\"1\" />  \n      <xs:element name=\"InsertFunction\" type=\"TableFunction\" minOccurs=\"0\" maxOccurs=\"1\" />  \n      <xs:element name=\"UpdateFunction\" type=\"TableFunction\" minOccurs=\"0\" maxOccurs=\"1\" />  \n      <xs:element name=\"DeleteFunction\" type=\"TableFunction\" minOccurs=\"0\" maxOccurs=\"1\" />  \n    </xs:all>  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Member\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"AccessModifier\" type=\"AccessModifier\" use=\"optional\" />  \n    <xs:attribute name=\"Modifier\" type=\"MemberModifier\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Type\">  \n    <xs:sequence>  \n      <xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">  \n        <xs:element name=\"Column\" type=\"Column\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n        <xs:element name=\"Association\" type=\"Association\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n      </xs:choice>  \n      <xs:element name=\"Type\" type=\"Type\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n    </xs:sequence>  \n    <xs:attribute name=\"IdRef\" type=\"xs:IDREF\" use=\"optional\" />  \n    <xs:attribute name=\"Id\" type=\"xs:ID\" use=\"optional\" />  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"InheritanceCode\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"IsInheritanceDefault\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"AccessModifier\" type=\"AccessModifier\" use=\"optional\" />  \n    <xs:attribute name=\"Modifier\" type=\"ClassModifier\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Column\">  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Member\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Storage\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"AccessModifier\" type=\"AccessModifier\" use=\"optional\" />  \n    <xs:attribute name=\"Modifier\" type=\"MemberModifier\" use=\"optional\" />  \n    <xs:attribute name=\"Type\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"DbType\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"IsReadOnly\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"IsPrimaryKey\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"IsDbGenerated\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"CanBeNull\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"UpdateCheck\" type=\"UpdateCheck\" use=\"optional\" />  \n    <xs:attribute name=\"IsDiscriminator\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"Expression\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"IsVersion\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"IsDelayLoaded\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"AutoSync\" type=\"AutoSync\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Association\">  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Member\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Storage\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"AccessModifier\" type=\"AccessModifier\" use=\"optional\" />  \n    <xs:attribute name=\"Modifier\" type=\"MemberModifier\" use=\"optional\" />  \n    <xs:attribute name=\"Type\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"ThisKey\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"OtherKey\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"IsForeignKey\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"Cardinality\" type=\"Cardinality\" use=\"optional\" />  \n    <xs:attribute name=\"DeleteRule\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"DeleteOnNull\" type=\"xs:boolean\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Function\">  \n    <xs:sequence>  \n      <xs:element name=\"Parameter\" type=\"Parameter\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n      <xs:choice>  \n        <xs:element name=\"ElementType\" type=\"Type\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n        <xs:element name=\"Return\" type=\"Return\" minOccurs=\"0\" maxOccurs=\"1\" />  \n      </xs:choice>  \n    </xs:sequence>  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Id\" type=\"xs:ID\" use=\"optional\" />  \n    <xs:attribute name=\"Method\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"AccessModifier\" type=\"AccessModifier\" use=\"optional\" />  \n    <xs:attribute name=\"Modifier\" type=\"MemberModifier\" use=\"optional\" />  \n    <xs:attribute name=\"HasMultipleResults\" type=\"xs:boolean\" use=\"optional\" />  \n    <xs:attribute name=\"IsComposable\" type=\"xs:boolean\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"TableFunction\">  \n    <xs:sequence>  \n      <xs:element name=\"Argument\" type=\"TableFunctionParameter\" minOccurs=\"0\" maxOccurs=\"unbounded\" />  \n      <xs:element name=\"Return\" type=\"TableFunctionReturn\" minOccurs=\"0\" maxOccurs=\"1\" />  \n    </xs:sequence>  \n    <xs:attribute name=\"FunctionId\" type=\"xs:IDREF\" use=\"required\" />  \n    <xs:attribute name=\"AccessModifier\" type=\"AccessModifier\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Parameter\">  \n    <xs:attribute name=\"Name\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Parameter\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Type\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"DbType\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"Direction\" type=\"ParameterDirection\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Return\">  \n    <xs:attribute name=\"Type\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"DbType\" type=\"xs:string\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"TableFunctionParameter\">  \n    <xs:attribute name=\"Parameter\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Member\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Version\" type=\"Version\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"TableFunctionReturn\">  \n    <xs:attribute name=\"Member\" type=\"xs:string\" use=\"required\" />  \n  </xs:complexType>  \n  <xs:complexType name=\"Connection\">  \n    <xs:attribute name=\"Provider\" type=\"xs:string\" use=\"required\" />  \n    <xs:attribute name=\"Mode\" type=\"ConnectionMode\" use=\"optional\" />  \n    <xs:attribute name=\"ConnectionString\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"SettingsObjectName\" type=\"xs:string\" use=\"optional\" />  \n    <xs:attribute name=\"SettingsPropertyName\" type=\"xs:string\" use=\"optional\" />  \n  </xs:complexType>  \n  <xs:simpleType name=\"ConnectionMode\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"ConnectionString\" />  \n      <xs:enumeration value=\"AppSettings\" />  \n      <xs:enumeration value=\"WebSettings\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"AccessModifier\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"Public\" />  \n      <xs:enumeration value=\"Internal\" />  \n      <xs:enumeration value=\"Protected\" />  \n      <xs:enumeration value=\"ProtectedInternal\" />  \n      <xs:enumeration value=\"Private\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"UpdateCheck\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"Always\" />  \n      <xs:enumeration value=\"Never\" />  \n      <xs:enumeration value=\"WhenChanged\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"SerializationMode\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"None\" />  \n      <xs:enumeration value=\"Unidirectional\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"ParameterDirection\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"In\" />  \n      <xs:enumeration value=\"Out\" />  \n      <xs:enumeration value=\"InOut\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"Version\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"Current\" />  \n      <xs:enumeration value=\"Original\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"AutoSync\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"Never\" />  \n      <xs:enumeration value=\"OnInsert\" />  \n      <xs:enumeration value=\"OnUpdate\" />  \n      <xs:enumeration value=\"Always\" />  \n      <xs:enumeration value=\"Default\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"ClassModifier\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"Sealed\" />  \n      <xs:enumeration value=\"Abstract\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"MemberModifier\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"Virtual\" />  \n      <xs:enumeration value=\"Override\" />  \n      <xs:enumeration value=\"New\" />  \n      <xs:enumeration value=\"NewVirtual\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n  <xs:simpleType name=\"Cardinality\">  \n    <xs:restriction base=\"xs:string\">  \n      <xs:enumeration value=\"One\" />  \n      <xs:enumeration value=\"Many\" />  \n    </xs:restriction>  \n  </xs:simpleType>  \n</xs:schema>  \n```  \n  \n## Sample DBML File  \n The following code is an excerpt from the DBML file created from the Northwind sample database. You can generate the whole file by using SQLMetal with the **/xml** option. For more information, see [SqlMetal.exe (Code Generation Tool)](../../../../../../docs/framework/tools/sqlmetal-exe-code-generation-tool.md).  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-16\"?>  \n<Database Name=\"northwnd\" Class=\"Northwnd\" xmlns=\"http://schemas.microsoft.com/dsltools/DLinqML\">  \n  \n  <Table Name=\"Customers\">  \n    <Type Name=\"Customer\">  \n      <Column Name=\"CustomerID\" Type=\"System.String\" DbType=\"NChar(5) NOT NULL\" IsPrimaryKey=\"True\" CanBeNull=\"False\" />  \n      <Column Name=\"CompanyName\" Type=\"System.String\" DbType=\"NVarChar(40) NOT NULL\" CanBeNull=\"False\" />  \n      <Column Name=\"ContactName\" Type=\"System.String\" DbType=\"NVarChar(30)\" CanBeNull=\"True\" />  \n      <Column Name=\"ContactTitle\" Type=\"System.String\" DbType=\"NVarChar(30)\" CanBeNull=\"True\" />  \n      <Column Name=\"Address\" Type=\"System.String\" DbType=\"NVarChar(60)\" CanBeNull=\"True\" />  \n      <Column Name=\"City\" Type=\"System.String\" DbType=\"NVarChar(15)\" CanBeNull=\"True\" />  \n      <Column Name=\"Region\" Type=\"System.String\" DbType=\"NVarChar(15)\" CanBeNull=\"True\" />  \n      <Column Name=\"PostalCode\" Type=\"System.String\" DbType=\"NVarChar(10)\" CanBeNull=\"True\" />  \n      <Column Name=\"Country\" Type=\"System.String\" DbType=\"NVarChar(15)\" CanBeNull=\"True\" />  \n      <Column Name=\"Phone\" Type=\"System.String\" DbType=\"NVarChar(24)\" CanBeNull=\"True\" />  \n      <Column Name=\"Fax\" Type=\"System.String\" DbType=\"NVarChar(24)\" CanBeNull=\"True\" />  \n      <Association Name=\"FK_CustomerCustomerDemo_Customers\" Member=\"CustomerCustomerDemos\" ThisKey=\"CustomerID\" OtherKey=\"CustomerID\" OtherTable=\"CustomerCustomerDemo\" DeleteRule=\"NO ACTION\" />  \n      <Association Name=\"FK_Orders_Customers\" Member=\"Orders\" ThisKey=\"CustomerID\" OtherKey=\"CustomerID\" OtherTable=\"Orders\" DeleteRule=\"NO ACTION\" />  \n    </Type>  \n  </Table>  \n</Database>  \n```  \n  \n## See Also  \n [Background Information](../../../../../../docs/framework/data/adonet/sql/linq/background-information.md)   \n [External Mapping](../../../../../../docs/framework/data/adonet/sql/linq/external-mapping.md)   \n [How to: Generate the Object Model as an External File](../../../../../../docs/framework/data/adonet/sql/linq/how-to-generate-the-object-model-as-an-external-file.md)   \n [Downloading Sample Databases](../../../../../../docs/framework/data/adonet/sql/linq/downloading-sample-databases.md)   \n [Reference](../../../../../../docs/framework/data/adonet/sql/linq/reference.md)","nodes":[{"pos":[12,59],"content":"Code Generation in LINQ to SQL | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Code Generation in LINQ to SQL | Microsoft Docs","pos":[0,47]}]},{"pos":[368,398],"content":"Code Generation in LINQ to SQL","linkify":"Code Generation in LINQ to SQL","nodes":[{"content":"Code Generation in LINQ to SQL","pos":[0,30]}]},{"content":"You can generate code to represent a database by using either the <ph id=\"ph1\">[!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)]</ph> or the SQLMetal command-line tool.","pos":[399,583],"source":"You can generate code to represent a database by using either the [!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)] or the SQLMetal command-line tool."},{"content":"In either case, end-to-end code generation occurs in three stages:","pos":[584,650]},{"pos":[660,791],"content":"The <bpt id=\"p1\">*</bpt>DBML Extractor<ept id=\"p1\">*</ept> extracts schema information from the database and reassembles the information into an XML-formatted DBML file.","source":"The *DBML Extractor* extracts schema information from the database and reassembles the information into an XML-formatted DBML file."},{"pos":[801,861],"content":"The DBML file is scanned by the <bpt id=\"p1\">*</bpt>DBML Validator<ept id=\"p1\">*</ept> for errors.","source":"The DBML file is scanned by the *DBML Validator* for errors."},{"content":"If no validation errors appear, the file is passed to the Code Generator.","pos":[871,944]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlMetal.exe (Code Generation Tool)<ept id=\"p1\">](../../../../../../docs/framework/tools/sqlmetal-exe-code-generation-tool.md)</ept>.","pos":[951,1092],"source":"For more information, see [SqlMetal.exe (Code Generation Tool)](../../../../../../docs/framework/tools/sqlmetal-exe-code-generation-tool.md)."},{"content":"Developers using <ph id=\"ph1\">[!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)]</ph> can also use the <ph id=\"ph2\">[!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)]</ph> to generate code.","pos":[1093,1308],"source":" Developers using [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] can also use the [!INCLUDE[vs_ordesigner_long](../../../../../../includes/vs-ordesigner-long-md.md)] to generate code."},{"content":"See <bpt id=\"p1\">[</bpt>LINQ to SQL Tools in Visual Studio<ept id=\"p1\">](/visualstudio/data-tools/linq-to-sql-tools-in-visual-studio2)</ept>.","pos":[1309,1412],"source":" See [LINQ to SQL Tools in Visual Studio](/visualstudio/data-tools/linq-to-sql-tools-in-visual-studio2)."},{"pos":[1421,1435],"content":"DBML Extractor","linkify":"DBML Extractor","nodes":[{"content":"DBML Extractor","pos":[0,14]}]},{"pos":[1439,1614],"content":"The DBML Extractor is a <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> component that takes database metadata as input and produces a DBML file as output.","source":"The DBML Extractor is a [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] component that takes database metadata as input and produces a DBML file as output."},{"pos":[1623,1637],"content":"Code Generator","linkify":"Code Generator","nodes":[{"content":"Code Generator","pos":[0,14]}]},{"pos":[1641,1859],"content":"The Code Generator is a <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)]</ph> component that translates DBML files to <ph id=\"ph2\">[!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)]</ph>, C#, or XML mapping files.","source":"The Code Generator is a [!INCLUDE[vbtecdlinq](../../../../../../includes/vbtecdlinq-md.md)] component that translates DBML files to [!INCLUDE[vbprvb](../../../../../../includes/vbprvb-md.md)], C#, or XML mapping files."},{"pos":[1868,1894],"content":"XML Schema Definition File","linkify":"XML Schema Definition File","nodes":[{"content":"XML Schema Definition File","pos":[0,26]}]},{"content":"The DBML file must be valid against the following schema definition as an XSD file.","pos":[1898,1981]},{"content":"Distinguish this schema definition file from the schema definition file that is used to validate an external mapping file.","pos":[1988,2110]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>External Mapping<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/external-mapping.md)</ept>).","pos":[2111,2232],"source":" For more information, see [External Mapping](../../../../../../docs/framework/data/adonet/sql/linq/external-mapping.md))."},{"pos":[2240,2636],"content":"[!NOTE]\n [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] users will also find this XSD file in the XML Schemas dialog box as \"DbmlSchema.xsd\". To use the XSD file correctly for validating a DBML file, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md).","leadings":["","> "],"nodes":[{"content":" [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] users will also find this XSD file in the XML Schemas dialog box as \"DbmlSchema.xsd\". To use the XSD file correctly for validating a DBML file, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md).","pos":[8,394],"nodes":[{"content":"<ph id=\"ph1\"> [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)]</ph> users will also find this XSD file in the XML Schemas dialog box as \"DbmlSchema.xsd\".","pos":[0,166],"source":" [!INCLUDE[vs_current_short](../../../../../../includes/vs-current-short-md.md)] users will also find this XSD file in the XML Schemas dialog box as \"DbmlSchema.xsd\"."},{"content":"To use the XSD file correctly for validating a DBML file, see <bpt id=\"p1\">[</bpt>How to: Validate DBML and External Mapping Files<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md)</ept>.","pos":[167,386],"source":" To use the XSD file correctly for validating a DBML file, see [How to: Validate DBML and External Mapping Files](../../../../../../docs/framework/data/adonet/sql/linq/how-to-validate-dbml-and-external-mapping-files.md)."}]}]},{"pos":[13570,13586],"content":"Sample DBML File","linkify":"Sample DBML File","nodes":[{"content":"Sample DBML File","pos":[0,16]}]},{"content":"The following code is an excerpt from the DBML file created from the Northwind sample database.","pos":[13590,13685]},{"content":"You can generate the whole file by using SQLMetal with the <bpt id=\"p1\">**</bpt>/xml<ept id=\"p1\">**</ept> option.","pos":[13686,13761],"source":" You can generate the whole file by using SQLMetal with the **/xml** option."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlMetal.exe (Code Generation Tool)<ept id=\"p1\">](../../../../../../docs/framework/tools/sqlmetal-exe-code-generation-tool.md)</ept>.","pos":[13762,13903],"source":" For more information, see [SqlMetal.exe (Code Generation Tool)](../../../../../../docs/framework/tools/sqlmetal-exe-code-generation-tool.md)."},{"pos":[15599,15607],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Background Information<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/background-information.md)</ept><ph id=\"ph1\"> </ph>","pos":[15611,15717],"source":"[Background Information](../../../../../../docs/framework/data/adonet/sql/linq/background-information.md) "},{"content":"<bpt id=\"p1\"> [</bpt>External Mapping<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/external-mapping.md)</ept><ph id=\"ph1\"> </ph>","pos":[15720,15815],"source":" [External Mapping](../../../../../../docs/framework/data/adonet/sql/linq/external-mapping.md) "},{"content":"<bpt id=\"p1\"> [</bpt>How to: Generate the Object Model as an External File<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/how-to-generate-the-object-model-as-an-external-file.md)</ept><ph id=\"ph1\"> </ph>","pos":[15818,15986],"source":" [How to: Generate the Object Model as an External File](../../../../../../docs/framework/data/adonet/sql/linq/how-to-generate-the-object-model-as-an-external-file.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Downloading Sample Databases<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/downloading-sample-databases.md)</ept><ph id=\"ph1\"> </ph>","pos":[15989,16108],"source":" [Downloading Sample Databases](../../../../../../docs/framework/data/adonet/sql/linq/downloading-sample-databases.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Reference<ept id=\"p1\">](../../../../../../docs/framework/data/adonet/sql/linq/reference.md)</ept>","pos":[16111,16191],"source":" [Reference](../../../../../../docs/framework/data/adonet/sql/linq/reference.md)"}]}