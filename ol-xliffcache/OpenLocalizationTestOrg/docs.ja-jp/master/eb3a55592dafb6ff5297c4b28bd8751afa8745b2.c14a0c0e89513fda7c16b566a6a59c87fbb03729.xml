{"content":"---\ntitle: \"Store Extensibility | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 7c3f4a46-4bac-4138-ae6a-a7c7ee0d28f5\ncaps.latest.revision: 15\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Store Extensibility\n<xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> allows users to promote custom, application-specific properties that can be used to query for instances in the persistence database. The act of promoting a property causes the value to be available within a special view in the database. These promoted properties (properties that can be used in user queries) can be of simple types such as Int64, Guid, String, and DateTime or of a serialized binary type (byte[]).  \n  \n The <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> class has the <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.Promote%2A> method that you can use to promote a property as a property that can be used in queries. The following example is an end-to-end example of store extensibility.  \n  \n1.  In this example scenario, a document processing (DP) application has workflows, each of which uses custom activities for document processing. These workflows have a set of state variables that need to be made visible to the end user. To achieve this, the DP application provides an instance extension of type <xref:System.Activities.Persistence.PersistenceParticipant>, which is used by activities to supply the state variables.  \n  \n    ```  \n  \n    class DocumentStatusExtension : PersistenceParticipant  \n    {  \n        public string DocumentId;  \n        public string ApprovalStatus;  \n        public string UserName;  \n        public DateTime LastUpdateTime;  \n    }  \n  \n    ```  \n  \n2.  The new extension is then added to the host.  \n  \n    ```  \n    static Activity workflow = CreateWorkflow();  \n    WorkflowApplication application = new WorkflowApplication(workflow);  \n    DocumentStatusExtension documentStatusExtension = new DocumentStatusExtension ();  \n    application.Extensions.Add(documentStatusExtension);  \n    ```  \n  \n     For more details about adding a custom persistence participant, see the [Persistence Participants](../../../docs/framework/windows-workflow-foundation/persistence-participants.md) sample.  \n  \n3.  The custom activities in the DP application populate various status fields in the **Execute** method.  \n  \n    ```  \n  \n    public override void Execute(CodeActivityContext context)  \n    {  \n        // ...  \n        context.GetExtension<DocumentStatusExtension>().DocumentId = Guid.NewGuid();  \n        context.GetExtension<DocumentStatusExtension>().UserName = \"John Smith\";  \n        context.GetExtension<DocumentStatusExtension>().ApprovalStatus = \"Approved\";  \n        context.GetExtension<DocumentStatusExtension>().LastUpdateTime = DateTime.Now();  \n        // ...  \n    }  \n  \n    ```  \n  \n4.  When a workflow instance reaches a persistence point, the **CollectValues** method of the **DocumentStatusExtension** persistence participant saves these properties into the persistence data collection.  \n  \n    ```  \n  \n    class DocumentStatusExtension : PersistenceParticipant  \n    {  \n        const XNamespace xNS = XNamespace.Get(\"http://contoso.com/DocumentStatus\");  \n  \n        protected override void CollectValues(out IDictionary<XName, object> readWriteValues, out IDictionary<XName, object> writeOnlyValues)  \n        {  \n            readWriteValues = new Dictionary<XName, object>();  \n            readWriteValues.Add(xNS.GetName(\"UserName\"), this.UserName);  \n            readWriteValues.Add(xNS.GetName(\"ApprovalStatus\"), this.ApprovalStatus);  \n            readWriteValues.Add(xNS.GetName(\"DocumentId\"), this.DocumentId);  \n            readWriteValues.Add(xNS.GetName(\"LastModifiedTime\"), this.LastUpdateTime);  \n  \n            writeOnlyValues = null;  \n        }  \n        // ...  \n    }  \n  \n    ```  \n  \n    > [!NOTE]\n    >  All these properties are passed to **SqlWorkflowInstanceStore** by the persistence framework through the **SaveWorkflowCommand.InstanceData** collection.  \n  \n5.  The DP application initializes the SQL Workflow Instance Store and invokes the **Promote** method to promote this data.  \n  \n    ```  \n    SqlWorkflowInstanceStore store = new SqlWorkflowInstanceStore(connectionString);  \n  \n    List<XName> variantProperties = new List<XName>()   \n    {   \n        xNS.GetName(\"UserName\"),   \n        xNS.GetName(\"ApprovalStatus\"),   \n        xNS.GetName(\"DocumentId\"),   \n        xNS.GetName(\"LastModifiedTime\")   \n    };  \n  \n    store.Promote(\"DocumentStatus\", variantProperties, null);  \n    ```  \n  \n     Based on this promotion information, **SqlWorkflowInstanceStore** places the data properties in the columns of the [InstancePromotedProperties](#InstancePromotedProperties) view.\n  \n6.  To query a subset of the data from the promotion table, the DP application adds a customized view on top of the promotion view.  \n  \n    ```  \n  \n    create view [dbo].[DocumentStatus] with schemabinding  \n    as  \n        select  P.[InstanceId] as [InstanceId],  \n            P.Value1 as [UserName],  \n            P.Value2 as [ApprovalStatus],  \n            P.Value3 as [DocumentId],  \n            P.Value4 as [LastUpdatedTime]  \n    from [System.Activities.DurableInstancing].[InstancePromotedProperties] as P  \n    where P.PromotionName = N'DocumentStatus'  \n    go  \n  \n    ```  \n  \n##  <a name=\"InstancePromotedProperties\"></a> [System.Activities.DurableInstancing.InstancePromotedProperties] view  \n  \n|Column Name|Column Type|Description|  \n|-----------------|-----------------|-----------------|  \n|InstanceId|GUID|The workflow instance that this promotion belongs to.|  \n|PromotionName|nvarchar(400)|The name of the promotion itself.|  \n|Value1, Value2, Value3,..,Value32|sql_variant|The value of the promoted property itself. Most SQL primitive data types except binary blobs and strings over 8000 bytes in length can fit in sql_variant.|  \n|Value33, Value34, Value35, â€¦, Value64|varbinary(max)|The value of promoted properties that are explicitly declared as varbinary(max).|\n","nodes":[{"pos":[12,48],"content":"Store Extensibility | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Store Extensibility | Microsoft Docs","pos":[0,36]}]},{"pos":[314,333],"content":"Store Extensibility","linkify":"Store Extensibility","nodes":[{"content":"Store Extensibility","pos":[0,19]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph> allows users to promote custom, application-specific properties that can be used to query for instances in the persistence database.","pos":[334,534],"source":"<xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> allows users to promote custom, application-specific properties that can be used to query for instances in the persistence database."},{"content":"The act of promoting a property causes the value to be available within a special view in the database.","pos":[535,638]},{"content":"These promoted properties (properties that can be used in user queries) can be of simple types such as Int64, Guid, String, and DateTime or of a serialized binary type (byte[]).","pos":[639,816]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph> class has the <ph id=\"ph2\">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.Promote%2A&gt;</ph> method that you can use to promote a property as a property that can be used in queries.","pos":[823,1076],"source":"The <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> class has the <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.Promote%2A> method that you can use to promote a property as a property that can be used in queries."},{"content":"The following example is an end-to-end example of store extensibility.","pos":[1077,1147]},{"content":"In this example scenario, a document processing (DP) application has workflows, each of which uses custom activities for document processing.","pos":[1157,1298]},{"content":"These workflows have a set of state variables that need to be made visible to the end user.","pos":[1299,1390]},{"content":"To achieve this, the DP application provides an instance extension of type <ph id=\"ph1\">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph>, which is used by activities to supply the state variables.","pos":[1391,1585],"source":" To achieve this, the DP application provides an instance extension of type <xref:System.Activities.Persistence.PersistenceParticipant>, which is used by activities to supply the state variables."},{"content":"The new extension is then added to the host.","pos":[1853,1897]},{"pos":[2204,2391],"content":"For more details about adding a custom persistence participant, see the <bpt id=\"p1\">[</bpt>Persistence Participants<ept id=\"p1\">](../../../docs/framework/windows-workflow-foundation/persistence-participants.md)</ept> sample.","source":"For more details about adding a custom persistence participant, see the [Persistence Participants](../../../docs/framework/windows-workflow-foundation/persistence-participants.md) sample."},{"pos":[2401,2502],"content":"The custom activities in the DP application populate various status fields in the <bpt id=\"p1\">**</bpt>Execute<ept id=\"p1\">**</ept> method.","source":"The custom activities in the DP application populate various status fields in the **Execute** method."},{"pos":[3003,3205],"content":"When a workflow instance reaches a persistence point, the <bpt id=\"p1\">**</bpt>CollectValues<ept id=\"p1\">**</ept> method of the <bpt id=\"p2\">**</bpt>DocumentStatusExtension<ept id=\"p2\">**</ept> persistence participant saves these properties into the persistence data collection.","source":"When a workflow instance reaches a persistence point, the **CollectValues** method of the **DocumentStatusExtension** persistence participant saves these properties into the persistence data collection."},{"pos":[4033,4201],"content":"[!NOTE]\nAll these properties are passed to **SqlWorkflowInstanceStore** by the persistence framework through the **SaveWorkflowCommand.InstanceData** collection.","leadings":["","    >  "],"nodes":[{"content":"All these properties are passed to <bpt id=\"p1\">**</bpt>SqlWorkflowInstanceStore<ept id=\"p1\">**</ept> by the persistence framework through the <bpt id=\"p2\">**</bpt>SaveWorkflowCommand.InstanceData<ept id=\"p2\">**</ept> collection.","pos":[8,161],"source":"All these properties are passed to **SqlWorkflowInstanceStore** by the persistence framework through the **SaveWorkflowCommand.InstanceData** collection."}]},{"pos":[4211,4330],"content":"The DP application initializes the SQL Workflow Instance Store and invokes the <bpt id=\"p1\">**</bpt>Promote<ept id=\"p1\">**</ept> method to promote this data.","source":"The DP application initializes the SQL Workflow Instance Store and invokes the **Promote** method to promote this data."},{"pos":[4755,4933],"content":"Based on this promotion information, <bpt id=\"p1\">**</bpt>SqlWorkflowInstanceStore<ept id=\"p1\">**</ept> places the data properties in the columns of the <bpt id=\"p2\">[</bpt>InstancePromotedProperties<ept id=\"p2\">](#InstancePromotedProperties)</ept> view.","source":"Based on this promotion information, **SqlWorkflowInstanceStore** places the data properties in the columns of the [InstancePromotedProperties](#InstancePromotedProperties) view."},{"content":"To query a subset of the data from the promotion table, the DP application adds a customized view on top of the promotion view.","pos":[4941,5068]},{"pos":[5532,5643],"content":"<bpt id=\"p1\">&lt;a name=\"InstancePromotedProperties\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept> [System.Activities.DurableInstancing.InstancePromotedProperties] view","linkify":"<a name=\"InstancePromotedProperties\"></a> [System.Activities.DurableInstancing.InstancePromotedProperties] view","source":"<a name=\"InstancePromotedProperties\"></a> [System.Activities.DurableInstancing.InstancePromotedProperties] view"},{"content":"Column Name","pos":[5650,5661]},{"content":"Column Type","pos":[5662,5673]},{"content":"Description","pos":[5674,5685]},{"content":"InstanceId","pos":[5748,5758]},{"content":"GUID","pos":[5759,5763]},{"content":"The workflow instance that this promotion belongs to.","pos":[5764,5817]},{"content":"PromotionName","pos":[5822,5835]},{"content":"nvarchar(400)","pos":[5836,5849]},{"content":"The name of the promotion itself.","pos":[5850,5883]},{"content":"Value1, Value2, Value3,..,Value32","pos":[5888,5921]},{"content":"sql_variant","pos":[5922,5933]},{"content":"The value of the promoted property itself.","pos":[5934,5976]},{"content":"Most SQL primitive data types except binary blobs and strings over 8000 bytes in length can fit in sql_variant.","pos":[5977,6088]},{"content":"Value33, Value34, Value35, â€¦, Value64","pos":[6093,6130]},{"content":"varbinary(max)","pos":[6131,6145]},{"content":"The value of promoted properties that are explicitly declared as varbinary(max).","pos":[6146,6226]}]}