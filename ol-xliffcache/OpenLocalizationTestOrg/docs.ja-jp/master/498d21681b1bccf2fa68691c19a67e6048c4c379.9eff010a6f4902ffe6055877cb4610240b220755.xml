{"content":"---\ntitle: \"How to: Call a Web Service Asynchronously (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"asynchronous calls\"\n  - \"Web services, accessing\"\nms.assetid: ff8046f4-f1f2-4d8b-90b7-95e3f7415418\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Call a Web Service Asynchronously (Visual Basic)\nThis example attaches a handler to a Web service's asynchronous handler event, so that it can retrieve the result of an asynchronous method call. This example used the DemoTemperatureService Web service at http://www.xmethods.net.  \n  \n When you reference a Web service in your project in the [!INCLUDE[vsprvs](../../../csharp/includes/vsprvs_md.md)] Integrated Development Environment (IDE), it is added to the `My.WebServices` object, and the IDE generates a client proxy class to access a specified Web service  \n  \n The proxy class allows you to call the Web service methods synchronously, where your application waits for the function to complete. In addition, the proxy creates additional members to help call the method asynchronously. For each Web service function, *NameOfWebServiceFunction*, the proxy creates a *NameOfWebServiceFunction*`Async` subroutine, a *NameOfWebServiceFunction*`Completed` event, and a *NameOfWebServiceFunction*`CompletedEventArgs` class. This example demonstrates how to use the asynchronous members to access the `getTemp` function of the DemoTemperatureService Web service.  \n  \n> [!NOTE]\n>  This code does not work in Web applications, because ASP.NET does not support the `My.WebServices` object.  \n  \n### To call a Web service asynchronously  \n  \n1.  Reference the DemoTemperatureService Web service at http://www.xmethods.net. The address is  \n  \n    ```  \n    http://www.xmethods.net/sd/2001/DemoTemperatureService.wsdl  \n    ```  \n  \n2.  Add an event handler for the `getTempCompleted` event:  \n  \n    ```  \n    Private Sub getTempCompletedHandler(ByVal sender As Object,   \n        ByVal e As net.xmethods.www.getTempCompletedEventArgs)  \n  \n        MsgBox(\"Temperature: \" & e.Result)  \n    End Sub  \n    ```  \n  \n    > [!NOTE]\n    >  You cannot use the `Handles` statement to associate an event handler with the `My.WebServices` object's events.  \n  \n3.  Add a field to track if the event handler has been added to the `getTempCompleted` event:  \n  \n    ```  \n    Private handlerAttached As Boolean = False  \n    ```  \n  \n4.  Add a method to add the event handler to the `getTempCompleted` event, if necessary, and to call the `getTempAsynch` method:  \n  \n    ```  \n    Sub CallGetTempAsync(ByVal zipCode As Integer)  \n        If Not handlerAttached Then  \n            AddHandler My.WebServices.  \n                TemperatureService.getTempCompleted,   \n                AddressOf Me.TS_getTempCompleted  \n            handlerAttached = True  \n        End If  \n        My.WebServices.TemperatureService.getTempAsync(zipCode)  \n    End Sub  \n    ```  \n  \n     To call the `getTemp` Web method asynchronously, call the `CallGetTempAsync` method. When the Web method finishes, its return value is passed to the `getTempCompletedHandler` event handler.  \n  \n## See Also  \n [Accessing Application Web Services](../../../visual-basic/developing-apps/programming/accessing-application-web-services.md)   \n [My.WebServices Object](../../../visual-basic/language-reference/objects/my-webservices-object.md)","nodes":[{"pos":[12,85],"content":"How to: Call a Web Service Asynchronously (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Call a Web Service Asynchronously (Visual Basic) | Microsoft Docs","pos":[0,73]}]},{"pos":[607,663],"content":"How to: Call a Web Service Asynchronously (Visual Basic)","linkify":"How to: Call a Web Service Asynchronously (Visual Basic)","nodes":[{"content":"How to: Call a Web Service Asynchronously (Visual Basic)","pos":[0,56]}]},{"content":"This example attaches a handler to a Web service's asynchronous handler event, so that it can retrieve the result of an asynchronous method call.","pos":[664,809]},{"content":"This example used the DemoTemperatureService Web service at http://www.xmethods.net.","pos":[810,894]},{"pos":[901,1177],"content":"When you reference a Web service in your project in the <ph id=\"ph1\">[!INCLUDE[vsprvs](../../../csharp/includes/vsprvs_md.md)]</ph> Integrated Development Environment (IDE), it is added to the <ph id=\"ph2\">`My.WebServices`</ph> object, and the IDE generates a client proxy class to access a specified Web service","source":"When you reference a Web service in your project in the [!INCLUDE[vsprvs](../../../csharp/includes/vsprvs_md.md)] Integrated Development Environment (IDE), it is added to the `My.WebServices` object, and the IDE generates a client proxy class to access a specified Web service"},{"content":"The proxy class allows you to call the Web service methods synchronously, where your application waits for the function to complete.","pos":[1184,1316]},{"content":"In addition, the proxy creates additional members to help call the method asynchronously.","pos":[1317,1406]},{"content":"For each Web service function, <bpt id=\"p1\">*</bpt>NameOfWebServiceFunction<ept id=\"p1\">*</ept>, the proxy creates a <bpt id=\"p2\">*</bpt>NameOfWebServiceFunction<ept id=\"p2\">*</ept><ph id=\"ph1\">`Async`</ph> subroutine, a <bpt id=\"p3\">*</bpt>NameOfWebServiceFunction<ept id=\"p3\">*</ept><ph id=\"ph2\">`Completed`</ph> event, and a <bpt id=\"p4\">*</bpt>NameOfWebServiceFunction<ept id=\"p4\">*</ept><ph id=\"ph3\">`CompletedEventArgs`</ph> class.","pos":[1407,1638],"source":" For each Web service function, *NameOfWebServiceFunction*, the proxy creates a *NameOfWebServiceFunction*`Async` subroutine, a *NameOfWebServiceFunction*`Completed` event, and a *NameOfWebServiceFunction*`CompletedEventArgs` class."},{"content":"This example demonstrates how to use the asynchronous members to access the <ph id=\"ph1\">`getTemp`</ph> function of the DemoTemperatureService Web service.","pos":[1639,1776],"source":" This example demonstrates how to use the asynchronous members to access the `getTemp` function of the DemoTemperatureService Web service."},{"pos":[1784,1901],"content":"[!NOTE]\n This code does not work in Web applications, because ASP.NET does not support the `My.WebServices` object.","leadings":["","> "],"nodes":[{"content":"This code does not work in Web applications, because ASP.NET does not support the <ph id=\"ph1\">`My.WebServices`</ph> object.","pos":[9,115],"source":" This code does not work in Web applications, because ASP.NET does not support the `My.WebServices` object."}]},{"pos":[1911,1947],"content":"To call a Web service asynchronously","linkify":"To call a Web service asynchronously","nodes":[{"content":"To call a Web service asynchronously","pos":[0,36]}]},{"content":"Reference the DemoTemperatureService Web service at http://www.xmethods.net.","pos":[1957,2033]},{"content":"The address is","pos":[2034,2048]},{"pos":[2147,2201],"content":"Add an event handler for the <ph id=\"ph1\">`getTempCompleted`</ph> event:","source":"Add an event handler for the `getTempCompleted` event:"},{"pos":[2430,2556],"content":"[!NOTE]\nYou cannot use the `Handles` statement to associate an event handler with the `My.WebServices` object's events.","leadings":["","    >  "],"nodes":[{"content":"You cannot use the <ph id=\"ph1\">`Handles`</ph> statement to associate an event handler with the <ph id=\"ph2\">`My.WebServices`</ph> object's events.","pos":[8,119],"source":"You cannot use the `Handles` statement to associate an event handler with the `My.WebServices` object's events."}]},{"pos":[2566,2655],"content":"Add a field to track if the event handler has been added to the <ph id=\"ph1\">`getTempCompleted`</ph> event:","source":"Add a field to track if the event handler has been added to the `getTempCompleted` event:"},{"pos":[2737,2861],"content":"Add a method to add the event handler to the <ph id=\"ph1\">`getTempCompleted`</ph> event, if necessary, and to call the <ph id=\"ph2\">`getTempAsynch`</ph> method:","source":"Add a method to add the event handler to the `getTempCompleted` event, if necessary, and to call the `getTempAsynch` method:"},{"content":"To call the <ph id=\"ph1\">`getTemp`</ph> Web method asynchronously, call the <ph id=\"ph2\">`CallGetTempAsync`</ph> method.","pos":[3268,3352],"source":"To call the `getTemp` Web method asynchronously, call the `CallGetTempAsync` method."},{"content":"When the Web method finishes, its return value is passed to the <ph id=\"ph1\">`getTempCompletedHandler`</ph> event handler.","pos":[3353,3457],"source":" When the Web method finishes, its return value is passed to the `getTempCompletedHandler` event handler."},{"pos":[3466,3474],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Accessing Application Web Services<ept id=\"p1\">](../../../visual-basic/developing-apps/programming/accessing-application-web-services.md)</ept><ph id=\"ph1\"> </ph>","pos":[3478,3604],"source":"[Accessing Application Web Services](../../../visual-basic/developing-apps/programming/accessing-application-web-services.md) "},{"content":"<bpt id=\"p1\"> [</bpt>My.WebServices Object<ept id=\"p1\">](../../../visual-basic/language-reference/objects/my-webservices-object.md)</ept>","pos":[3607,3706],"source":" [My.WebServices Object](../../../visual-basic/language-reference/objects/my-webservices-object.md)"}]}