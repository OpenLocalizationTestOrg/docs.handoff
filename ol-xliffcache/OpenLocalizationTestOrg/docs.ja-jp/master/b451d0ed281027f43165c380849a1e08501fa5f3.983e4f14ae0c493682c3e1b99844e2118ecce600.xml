{"content":"---\ntitle: \"Building My First Claims-Aware WCF Service | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: e0e6d091-9a97-4888-8f2c-cbcee42d90ee\ncaps.latest.revision: 7\nauthor: \"BrucePerlerMS\"\nms.author: \"bruceper\"\nmanager: \"mbaldwin\"\n---\n# Building My First Claims-Aware WCF Service\n## Applies To  \n  \n-   Windows Identity Foundation (WIF)  \n  \n-   Windows Communication Foundation (WCF)  \n  \n## Overview  \n This topic outlines the scenario of building claims-aware WCF services using WIF. There are usually three participants in a claims-aware web service scenario: the web service itself, the end user, and the Security Token Service (STS). The following figure describes this scenario:  \n  \n ![WIF Basic Claims Aware WCF Service](../../../docs/framework/security/media/wifbasicclaimsawarewcfservice.gif \"WIFBasicClaimsAwareWCFService\")  \n  \n1.  The WCF service client (sometimes called agent) uses WIF to send credentials to the STS and upon successful authentication, the agent is issued a token by the STS.  \n  \n2.  The agent sends this STS-issued token to the WCF service.  \n  \n3.  The claims-aware WCF service is configured to trust the STS and the tokens it issues. The claims-aware WCF service uses WIF to validate the token and to parse it. Developers use the appropriate WIF API and types, for example, **ClaimsPrincipal** for the application’s needs, such as implementing authorization for it.  \n  \n Starting from .NET 4.5, WIF is part of the .NET framework package. Having the WIF classes directly available in the framework itself allows a much deeper integration of claims-based identity in the .NET platform, making it easier to use claims. With WIF 4.5, you do not need to install any out-of-band components in order to start developing claims-aware web applications. WIF classes are now spread across various assemblies, the main ones being System.Security.Claims, System.IdentityModel and System.IdentityModel.Services.  \n  \n STS is a service that issues tokens upon successful authentication. Microsoft offers two industry standard STS’s:  \n  \n-   [Active Directory Federation Services (AD FS) 2.0](http://go.microsoft.com/fwlink/?LinkID=247516) (http://go.microsoft.com/fwlink/?LinkID=247516)  \n  \n-   [Windows Azure Access Control Service (ACS)](http://go.microsoft.com/fwlink/?LinkID=247517) (http://go.microsoft.com/fwlink/?LinkID=247517).  \n  \n AD FS 2.0 is part of the Windows Server R2 and can be used as an STS for on-premise scenarios. Azure Active Directory Access Control (also known as Access Control Service or ACS) is a cloud service, offered as part of Microsoft Azure. For testing or educational purposes, you can also use other STS’s in order to build your claims-aware applications. For example, you can use the Local Development STS that is part of the [Identity and Access Tool for Visual Studio](http://go.microsoft.com/fwlink/?LinkID=245849) (http://go.microsoft.com/fwlink/?LinkID=245849) which is freely available online.  \n  \n To build your first claims-aware WCF service using WIF, see [How To: Build Claims-Aware WCF Service Using WIF](http://msdn.microsoft.com/en-us/431e6415-62ed-4a9f-af03-f14d2b4dfe6d).  \n  \n## See Also  \n [Getting Started With WIF](../../../docs/framework/security/getting-started-with-wif.md)","nodes":[{"pos":[12,71],"content":"Building My First Claims-Aware WCF Service | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Building My First Claims-Aware WCF Service | Microsoft Docs","pos":[0,59]}]},{"pos":[380,422],"content":"Building My First Claims-Aware WCF Service","linkify":"Building My First Claims-Aware WCF Service","nodes":[{"content":"Building My First Claims-Aware WCF Service","pos":[0,42]}]},{"pos":[426,436],"content":"Applies To","linkify":"Applies To","nodes":[{"content":"Applies To","pos":[0,10]}]},{"content":"Windows Identity Foundation (WIF)","pos":[446,479]},{"content":"Windows Communication Foundation (WCF)","pos":[489,527]},{"pos":[536,544],"content":"Overview","linkify":"Overview","nodes":[{"content":"Overview","pos":[0,8]}]},{"content":"This topic outlines the scenario of building claims-aware WCF services using WIF.","pos":[548,629]},{"content":"There are usually three participants in a claims-aware web service scenario: the web service itself, the end user, and the Security Token Service (STS).","pos":[630,782]},{"content":"The following figure describes this scenario:","pos":[783,828]},{"pos":[835,978],"content":"<bpt id=\"p1\">![</bpt>WIF Basic Claims Aware WCF Service<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../docs/framework/security/media/wifbasicclaimsawarewcfservice.gif \"</bpt>WIFBasicClaimsAwareWCFService<ept id=\"p2\">\")</ept>","source":"![WIF Basic Claims Aware WCF Service](../../../docs/framework/security/media/wifbasicclaimsawarewcfservice.gif \"WIFBasicClaimsAwareWCFService\")"},{"content":"The WCF service client (sometimes called agent) uses WIF to send credentials to the STS and upon successful authentication, the agent is issued a token by the STS.","pos":[988,1151]},{"content":"The agent sends this STS-issued token to the WCF service.","pos":[1161,1218]},{"content":"The claims-aware WCF service is configured to trust the STS and the tokens it issues.","pos":[1228,1313]},{"content":"The claims-aware WCF service uses WIF to validate the token and to parse it.","pos":[1314,1390]},{"content":"Developers use the appropriate WIF API and types, for example, <bpt id=\"p1\">**</bpt>ClaimsPrincipal<ept id=\"p1\">**</ept> for the application’s needs, such as implementing authorization for it.","pos":[1391,1545],"source":" Developers use the appropriate WIF API and types, for example, **ClaimsPrincipal** for the application’s needs, such as implementing authorization for it."},{"content":"Starting from .NET 4.5, WIF is part of the .NET framework package.","pos":[1552,1618]},{"content":"Having the WIF classes directly available in the framework itself allows a much deeper integration of claims-based identity in the .NET platform, making it easier to use claims.","pos":[1619,1796]},{"content":"With WIF 4.5, you do not need to install any out-of-band components in order to start developing claims-aware web applications.","pos":[1797,1924]},{"content":"WIF classes are now spread across various assemblies, the main ones being System.Security.Claims, System.IdentityModel and System.IdentityModel.Services.","pos":[1925,2078]},{"content":"STS is a service that issues tokens upon successful authentication.","pos":[2085,2152]},{"content":"Microsoft offers two industry standard STS’s:","pos":[2153,2198]},{"pos":[2208,2353],"content":"<bpt id=\"p1\">[</bpt>Active Directory Federation Services (AD FS) 2.0<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=247516)</ept> (http://go.microsoft.com/fwlink/?LinkID=247516)","source":"[Active Directory Federation Services (AD FS) 2.0](http://go.microsoft.com/fwlink/?LinkID=247516) (http://go.microsoft.com/fwlink/?LinkID=247516)"},{"pos":[2363,2503],"content":"<bpt id=\"p1\">[</bpt>Windows Azure Access Control Service (ACS)<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=247517)</ept> (http://go.microsoft.com/fwlink/?LinkID=247517).","source":"[Windows Azure Access Control Service (ACS)](http://go.microsoft.com/fwlink/?LinkID=247517) (http://go.microsoft.com/fwlink/?LinkID=247517)."},{"content":"AD FS 2.0 is part of the Windows Server R2 and can be used as an STS for on-premise scenarios.","pos":[2510,2604]},{"content":"Azure Active Directory Access Control (also known as Access Control Service or ACS) is a cloud service, offered as part of Microsoft Azure.","pos":[2605,2744]},{"content":"For testing or educational purposes, you can also use other STS’s in order to build your claims-aware applications.","pos":[2745,2860]},{"content":"For example, you can use the Local Development STS that is part of the <bpt id=\"p1\">[</bpt>Identity and Access Tool for Visual Studio<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=245849)</ept> (http://go.microsoft.com/fwlink/?LinkID=245849) which is freely available online.","pos":[2861,3105],"source":" For example, you can use the Local Development STS that is part of the [Identity and Access Tool for Visual Studio](http://go.microsoft.com/fwlink/?LinkID=245849) (http://go.microsoft.com/fwlink/?LinkID=245849) which is freely available online."},{"pos":[3112,3293],"content":"To build your first claims-aware WCF service using WIF, see <bpt id=\"p1\">[</bpt>How To: Build Claims-Aware WCF Service Using WIF<ept id=\"p1\">](http://msdn.microsoft.com/en-us/431e6415-62ed-4a9f-af03-f14d2b4dfe6d)</ept>.","source":"To build your first claims-aware WCF service using WIF, see [How To: Build Claims-Aware WCF Service Using WIF](http://msdn.microsoft.com/en-us/431e6415-62ed-4a9f-af03-f14d2b4dfe6d)."},{"pos":[3302,3310],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3314,3402],"content":"<bpt id=\"p1\">[</bpt>Getting Started With WIF<ept id=\"p1\">](../../../docs/framework/security/getting-started-with-wif.md)</ept>","source":"[Getting Started With WIF](../../../docs/framework/security/getting-started-with-wif.md)"}]}