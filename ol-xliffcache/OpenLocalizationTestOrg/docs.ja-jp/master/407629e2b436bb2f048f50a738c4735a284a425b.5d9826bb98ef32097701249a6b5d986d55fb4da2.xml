{"content":"---\ntitle: \"BackgroundWorker Component | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"BackgroundWorker component\"\n  - \"background tasks\"\n  - \"Asynchronous Pattern\"\n  - \"forms, multithreading\"\n  - \"components [Windows Forms], asynchronous\"\n  - \"forms, background operations\"\n  - \"threading [Windows Forms], background operations\"\n  - \"background operations\"\nms.assetid: bef7b0ab-ce57-475a-a2d6-fb8a702a9417\ncaps.latest.revision: 18\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# BackgroundWorker Component\nThe `BackgroundWorker` component enables your form or control to run an operation asynchronously.  \n  \n## In This Section  \n [BackgroundWorker Component Overview](../../../../docs/framework/winforms/controls/backgroundworker-component-overview.md)  \n Describes the `BackgroundWorker` component, which gives you the ability to execute time-consuming operations asynchronously (\"in the background\"), on a thread different from your application's main UI thread.  \n  \n [Walkthrough: Running an Operation in the Background](../../../../docs/framework/winforms/controls/walkthrough-running-an-operation-in-the-background.md)  \n Demonstrates how to use the `BackgroundWorker` component in the designer to run a time-consuming operation on a separate thread.  \n  \n [How to: Run an Operation in the Background](../../../../docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)  \n Demonstrates how to use the `BackgroundWorker` component to run a time-consuming operation on a separate thread.  \n  \n [Walkthrough: Implementing a Form That Uses a Background Operation](../../../../docs/framework/winforms/controls/walkthrough-implementing-a-form-that-uses-a-background-operation.md)  \n Creates an application using the designer that does mathematical computations asynchronously.  \n  \n [How to: Implement a Form That Uses a Background Operation](../../../../docs/framework/winforms/controls/how-to-implement-a-form-that-uses-a-background-operation.md)  \n Creates an application that does mathematical computations asynchronously.  \n  \n [How to: Download a File in the Background](../../../../docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md)  \n Demonstrates how to use the `BackgroundWorker` component to download a file on a separate thread.  \n  \n## Reference  \n <xref:System.ComponentModel.BackgroundWorker>  \n Describes this class and has links to all its members.  \n  \n <xref:System.ComponentModel.RunWorkerCompletedEventArgs>  \n Describes the type that holds data for the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event.  \n  \n <xref:System.ComponentModel.ProgressChangedEventArgs>  \n Describes the type that holds data for the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event.  \n  \n## Related Sections  \n [Event-based Asynchronous Pattern Overview](../../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)  \n Describes how the asynchronous pattern makes available the advantages of multithreaded applications while hiding many of the complex issues inherent in multithreaded design.","nodes":[{"pos":[12,55],"content":"BackgroundWorker Component | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"BackgroundWorker Component | Microsoft Docs","pos":[0,43]}]},{"pos":[691,717],"content":"BackgroundWorker Component","linkify":"BackgroundWorker Component","nodes":[{"content":"BackgroundWorker Component","pos":[0,26]}]},{"pos":[718,815],"content":"The <ph id=\"ph1\">`BackgroundWorker`</ph> component enables your form or control to run an operation asynchronously.","source":"The `BackgroundWorker` component enables your form or control to run an operation asynchronously."},{"pos":[824,839],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>BackgroundWorker Component Overview<ept id=\"p1\">](../../../../docs/framework/winforms/controls/backgroundworker-component-overview.md)</ept>","pos":[843,965],"source":"[BackgroundWorker Component Overview](../../../../docs/framework/winforms/controls/backgroundworker-component-overview.md)"},{"content":"Describes the <ph id=\"ph1\">`BackgroundWorker`</ph> component, which gives you the ability to execute time-consuming operations asynchronously (\"in the background\"), on a thread different from your application's main UI thread.","pos":[969,1177],"source":" Describes the `BackgroundWorker` component, which gives you the ability to execute time-consuming operations asynchronously (\"in the background\"), on a thread different from your application's main UI thread."},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Running an Operation in the Background<ept id=\"p1\">](../../../../docs/framework/winforms/controls/walkthrough-running-an-operation-in-the-background.md)</ept>","pos":[1184,1337],"source":"[Walkthrough: Running an Operation in the Background](../../../../docs/framework/winforms/controls/walkthrough-running-an-operation-in-the-background.md)"},{"content":"Demonstrates how to use the <ph id=\"ph1\">`BackgroundWorker`</ph> component in the designer to run a time-consuming operation on a separate thread.","pos":[1341,1469],"source":" Demonstrates how to use the `BackgroundWorker` component in the designer to run a time-consuming operation on a separate thread."},{"content":"<bpt id=\"p1\">[</bpt>How to: Run an Operation in the Background<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>","pos":[1476,1611],"source":"[How to: Run an Operation in the Background](../../../../docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)"},{"content":"Demonstrates how to use the <ph id=\"ph1\">`BackgroundWorker`</ph> component to run a time-consuming operation on a separate thread.","pos":[1615,1727],"source":" Demonstrates how to use the `BackgroundWorker` component to run a time-consuming operation on a separate thread."},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Implementing a Form That Uses a Background Operation<ept id=\"p1\">](../../../../docs/framework/winforms/controls/walkthrough-implementing-a-form-that-uses-a-background-operation.md)</ept>","pos":[1734,1915],"source":"[Walkthrough: Implementing a Form That Uses a Background Operation](../../../../docs/framework/winforms/controls/walkthrough-implementing-a-form-that-uses-a-background-operation.md)"},{"content":"Creates an application using the designer that does mathematical computations asynchronously.","pos":[1919,2012]},{"content":"<bpt id=\"p1\">[</bpt>How to: Implement a Form That Uses a Background Operation<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-implement-a-form-that-uses-a-background-operation.md)</ept>","pos":[2019,2184],"source":"[How to: Implement a Form That Uses a Background Operation](../../../../docs/framework/winforms/controls/how-to-implement-a-form-that-uses-a-background-operation.md)"},{"content":"Creates an application that does mathematical computations asynchronously.","pos":[2188,2262]},{"content":"<bpt id=\"p1\">[</bpt>How to: Download a File in the Background<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md)</ept>","pos":[2269,2402],"source":"[How to: Download a File in the Background](../../../../docs/framework/winforms/controls/how-to-download-a-file-in-the-background.md)"},{"content":"Demonstrates how to use the <ph id=\"ph1\">`BackgroundWorker`</ph> component to download a file on a separate thread.","pos":[2406,2503],"source":" Demonstrates how to use the `BackgroundWorker` component to download a file on a separate thread."},{"pos":[2512,2521],"content":"Reference","linkify":"Reference","nodes":[{"content":"Reference","pos":[0,9]}]},{"content":"Describes this class and has links to all its members.","pos":[2574,2628]},{"content":"Describes the type that holds data for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&gt;</ph> event.","pos":[2695,2809],"source":"Describes the type that holds data for the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event."},{"content":"Describes the type that holds data for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.BackgroundWorker.ProgressChanged&gt;</ph> event.","pos":[2873,2984],"source":"Describes the type that holds data for the <xref:System.ComponentModel.BackgroundWorker.ProgressChanged> event."},{"pos":[2993,3009],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Event-based Asynchronous Pattern Overview<ept id=\"p1\">](../../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept>","pos":[3013,3162],"source":"[Event-based Asynchronous Pattern Overview](../../../../docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)"},{"content":"Describes how the asynchronous pattern makes available the advantages of multithreaded applications while hiding many of the complex issues inherent in multithreaded design.","pos":[3166,3339]}]}