{"content":"---\ntitle: \"Syndication Extensibility | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 4d941175-74a2-4b15-81b3-086e8a95d25f\ncaps.latest.revision: 10\nauthor: \"Erikre\"\nms.author: \"erikre\"\nmanager: \"erikre\"\n---\n# Syndication Extensibility\nThe Syndication API is designed to provide a format-neutral programming model that allows syndicated content to be written to the wire in a variety of formats. The abstract data model consists of the following classes:  \n  \n-   <xref:System.ServiceModel.Syndication.SyndicationCategory>  \n  \n-   <xref:System.ServiceModel.Syndication.SyndicationFeed>  \n  \n-   <xref:System.ServiceModel.Syndication.SyndicationItem>  \n  \n-   <xref:System.ServiceModel.Syndication.SyndicationLink>  \n  \n-   <xref:System.ServiceModel.Syndication.SyndicationPerson>  \n  \n These classes map closely to the constructs defined in the Atom 1.0 specification, although some of the names are different.  \n  \n A key feature of syndication protocols is extensibility. Both Atom 1.0 and RSS 2.0, add attributes and elements to syndication feeds that are not defined in the specifications. The [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] syndication programming model provides the following ways of working with custom attributes and extensions, loosely-typed access and deriving a new class.  \n  \n## Loosely Typed Access  \n Adding extensions by deriving a new class requires writing additional code. Another option is accessing extensions in a loosely-typed way. All of the types defined in the syndication abstract data model contain properties named `AttributeExtensions` and `ElementExtensions` (with one exception, <xref:System.ServiceModel.Syndication.SyndicationContent> has an `AttributeExtensions` property but no `ElementExtensions` property). These properties are collections of extensions not processed by the `TryParseAttribute` and `TryParseElement` methods respectively. You can access these unprocessed extensions by calling <xref:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions%2A?displayProperty=fullName> on the `ElementExtensions` property of <xref:System.ServiceModel.Syndication.SyndicationFeed>, <xref:System.ServiceModel.Syndication.SyndicationItem>, <xref:System.ServiceModel.Syndication.SyndicationLink>, <xref:System.ServiceModel.Syndication.SyndicationPerson>, and <xref:System.ServiceModel.Syndication.SyndicationCategory>. This set of methods finds all extensions with the specified name and namespace, deserializes them individually into instances of `TExtension` and returns them as a collection of `TExtension` objects.  \n  \n## Deriving a New Class  \n You can derive a new class from any of the existing abstract data model classes. Do this when implementing an application in which most of the feeds you are working with have a particular extension. In this topic, most of the feeds that the program works with contain a `MyExtension` extension. To provide an improved programming experience, do the following steps:  \n  \n-   Create a class to hold the extension data. In this case, create a class called MyExtension.  \n  \n-   Derive a class called MyExtensionItem from <xref:System.ServiceModel.Syndication.SyndicationItem> to expose a property of type MyExtension for programmability purposes.  \n  \n-   Override <xref:System.ServiceModel.Syndication.SyndicationItem.TryParseElement%28System.Xml.XmlReader%2CSystem.String%29> in the MyExtensionItem class to instantiate a new MyExtension instance when a MyExtension is read in.  \n  \n-   Override <xref:System.ServiceModel.Syndication.SyndicationItem.WriteElementExtensions%28System.Xml.XmlWriter%2CSystem.String%29> in the MyExtensionItem class to write the contents of the MyExtension property to an XML writer.  \n  \n-   Derive a class called MyExtensionFeed from <xref:System.ServiceModel.Syndication.SyndicationFeed>.  \n  \n-   Override <xref:System.ServiceModel.Syndication.SyndicationFeed.CreateItem> in the MyExtensionFeed class to instantiate a MyExtensionItem instead of the default <xref:System.ServiceModel.Syndication.SyndicationItem>. A series of methods are defined in <xref:System.ServiceModel.Syndication.SyndicationFeed> and <xref:System.ServiceModel.Syndication.SyndicationItem> that can create <xref:System.ServiceModel.Syndication.SyndicationLink>, <xref:System.ServiceModel.Syndication.SyndicationCategory>, and <xref:System.ServiceModel.Syndication.SyndicationPerson> objects (for example, <xref:System.ServiceModel.Syndication.SyndicationFeed.CreateLink>, <xref:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory>, and <xref:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson>). All of which can be overridden to create a custom derived class.  \n  \n## See Also  \n [WCF Syndication Overview](../../../../docs/framework/wcf/feature-details/wcf-syndication-overview.md)   \n [Architecture of Syndication](../../../../docs/framework/wcf/feature-details/architecture-of-syndication.md)","nodes":[{"pos":[12,54],"content":"Syndication Extensibility | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Syndication Extensibility | Microsoft Docs","pos":[0,42]}]},{"pos":[353,378],"content":"Syndication Extensibility","linkify":"Syndication Extensibility","nodes":[{"content":"Syndication Extensibility","pos":[0,25]}]},{"content":"The Syndication API is designed to provide a format-neutral programming model that allows syndicated content to be written to the wire in a variety of formats.","pos":[379,538]},{"content":"The abstract data model consists of the following classes:","pos":[539,597]},{"content":"These classes map closely to the constructs defined in the Atom 1.0 specification, although some of the names are different.","pos":[930,1054]},{"content":"A key feature of syndication protocols is extensibility.","pos":[1061,1117]},{"content":"Both Atom 1.0 and RSS 2.0, add attributes and elements to syndication feeds that are not defined in the specifications.","pos":[1118,1237]},{"content":"The <ph id=\"ph1\">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> syndication programming model provides the following ways of working with custom attributes and extensions, loosely-typed access and deriving a new class.","pos":[1238,1452],"source":" The [!INCLUDE[indigo1](../../../../includes/indigo1-md.md)] syndication programming model provides the following ways of working with custom attributes and extensions, loosely-typed access and deriving a new class."},{"pos":[1461,1481],"content":"Loosely Typed Access","linkify":"Loosely Typed Access","nodes":[{"content":"Loosely Typed Access","pos":[0,20]}]},{"content":"Adding extensions by deriving a new class requires writing additional code.","pos":[1485,1560]},{"content":"Another option is accessing extensions in a loosely-typed way.","pos":[1561,1623]},{"content":"All of the types defined in the syndication abstract data model contain properties named <ph id=\"ph1\">`AttributeExtensions`</ph> and <ph id=\"ph2\">`ElementExtensions`</ph> (with one exception, <ph id=\"ph3\">&lt;xref:System.ServiceModel.Syndication.SyndicationContent&gt;</ph> has an <ph id=\"ph4\">`AttributeExtensions`</ph> property but no <ph id=\"ph5\">`ElementExtensions`</ph> property).","pos":[1624,1913],"source":" All of the types defined in the syndication abstract data model contain properties named `AttributeExtensions` and `ElementExtensions` (with one exception, <xref:System.ServiceModel.Syndication.SyndicationContent> has an `AttributeExtensions` property but no `ElementExtensions` property)."},{"content":"These properties are collections of extensions not processed by the <ph id=\"ph1\">`TryParseAttribute`</ph> and <ph id=\"ph2\">`TryParseElement`</ph> methods respectively.","pos":[1914,2045],"source":" These properties are collections of extensions not processed by the `TryParseAttribute` and `TryParseElement` methods respectively."},{"content":"You can access these unprocessed extensions by calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions%2A?displayProperty=fullName&gt;</ph> on the <ph id=\"ph2\">`ElementExtensions`</ph> property of <ph id=\"ph3\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph>, and <ph id=\"ph7\">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>.","pos":[2046,2556],"source":" You can access these unprocessed extensions by calling <xref:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions%2A?displayProperty=fullName> on the `ElementExtensions` property of <xref:System.ServiceModel.Syndication.SyndicationFeed>, <xref:System.ServiceModel.Syndication.SyndicationItem>, <xref:System.ServiceModel.Syndication.SyndicationLink>, <xref:System.ServiceModel.Syndication.SyndicationPerson>, and <xref:System.ServiceModel.Syndication.SyndicationCategory>."},{"content":"This set of methods finds all extensions with the specified name and namespace, deserializes them individually into instances of <ph id=\"ph1\">`TExtension`</ph> and returns them as a collection of <ph id=\"ph2\">`TExtension`</ph> objects.","pos":[2557,2756],"source":" This set of methods finds all extensions with the specified name and namespace, deserializes them individually into instances of `TExtension` and returns them as a collection of `TExtension` objects."},{"pos":[2765,2785],"content":"Deriving a New Class","linkify":"Deriving a New Class","nodes":[{"content":"Deriving a New Class","pos":[0,20]}]},{"content":"You can derive a new class from any of the existing abstract data model classes.","pos":[2789,2869]},{"content":"Do this when implementing an application in which most of the feeds you are working with have a particular extension.","pos":[2870,2987]},{"content":"In this topic, most of the feeds that the program works with contain a <ph id=\"ph1\">`MyExtension`</ph> extension.","pos":[2988,3083],"source":" In this topic, most of the feeds that the program works with contain a `MyExtension` extension."},{"content":"To provide an improved programming experience, do the following steps:","pos":[3084,3154]},{"content":"Create a class to hold the extension data.","pos":[3164,3206]},{"content":"In this case, create a class called MyExtension.","pos":[3207,3255]},{"content":"Derive a class called MyExtensionItem from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> to expose a property of type MyExtension for programmability purposes.","pos":[3265,3433],"source":"Derive a class called MyExtensionItem from <xref:System.ServiceModel.Syndication.SyndicationItem> to expose a property of type MyExtension for programmability purposes."},{"content":"Override <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationItem.TryParseElement%28System.Xml.XmlReader%2CSystem.String%29&gt;</ph> in the MyExtensionItem class to instantiate a new MyExtension instance when a MyExtension is read in.","pos":[3443,3666],"source":"Override <xref:System.ServiceModel.Syndication.SyndicationItem.TryParseElement%28System.Xml.XmlReader%2CSystem.String%29> in the MyExtensionItem class to instantiate a new MyExtension instance when a MyExtension is read in."},{"content":"Override <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationItem.WriteElementExtensions%28System.Xml.XmlWriter%2CSystem.String%29&gt;</ph> in the MyExtensionItem class to write the contents of the MyExtension property to an XML writer.","pos":[3676,3901],"source":"Override <xref:System.ServiceModel.Syndication.SyndicationItem.WriteElementExtensions%28System.Xml.XmlWriter%2CSystem.String%29> in the MyExtensionItem class to write the contents of the MyExtension property to an XML writer."},{"content":"Derive a class called MyExtensionFeed from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.","pos":[3911,4009],"source":"Derive a class called MyExtensionFeed from <xref:System.ServiceModel.Syndication.SyndicationFeed>."},{"content":"Override <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.CreateItem&gt;</ph> in the MyExtensionFeed class to instantiate a MyExtensionItem instead of the default <ph id=\"ph2\">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>.","pos":[4019,4234],"source":"Override <xref:System.ServiceModel.Syndication.SyndicationFeed.CreateItem> in the MyExtensionFeed class to instantiate a MyExtensionItem instead of the default <xref:System.ServiceModel.Syndication.SyndicationItem>."},{"content":"A series of methods are defined in <ph id=\"ph1\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> that can create <ph id=\"ph3\">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> objects (for example, <ph id=\"ph6\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.CreateLink&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson&gt;</ph>).","pos":[4235,4810],"source":" A series of methods are defined in <xref:System.ServiceModel.Syndication.SyndicationFeed> and <xref:System.ServiceModel.Syndication.SyndicationItem> that can create <xref:System.ServiceModel.Syndication.SyndicationLink>, <xref:System.ServiceModel.Syndication.SyndicationCategory>, and <xref:System.ServiceModel.Syndication.SyndicationPerson> objects (for example, <xref:System.ServiceModel.Syndication.SyndicationFeed.CreateLink>, <xref:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory>, and <xref:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson>)."},{"content":"All of which can be overridden to create a custom derived class.","pos":[4811,4875]},{"pos":[4884,4892],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>WCF Syndication Overview<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/wcf-syndication-overview.md)</ept><ph id=\"ph1\"> </ph>","pos":[4896,4999],"source":"[WCF Syndication Overview](../../../../docs/framework/wcf/feature-details/wcf-syndication-overview.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Architecture of Syndication<ept id=\"p1\">](../../../../docs/framework/wcf/feature-details/architecture-of-syndication.md)</ept>","pos":[5002,5111],"source":" [Architecture of Syndication](../../../../docs/framework/wcf/feature-details/architecture-of-syndication.md)"}]}