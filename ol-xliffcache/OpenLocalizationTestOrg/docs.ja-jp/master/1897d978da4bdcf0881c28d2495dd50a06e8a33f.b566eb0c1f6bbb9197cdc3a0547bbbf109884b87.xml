{"content":"---\ntitle: \"How to: Open a File That is Dropped on a RichTextBox Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"drag-and-drop [WPF], RichTextBox\"\n  - \"RichTextBox [WPF], drag-and-drop\"\n  - \"drag-and-drop [WPF], open a dropped file\"\nms.assetid: 6bb8bb54-f576-41db-a9a7-24102ddeb490\ncaps.latest.revision: 5\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Open a File That is Dropped on a RichTextBox Control\nIn [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)], the <xref:System.Windows.Controls.TextBox>, <xref:System.Windows.Controls.RichTextBox>, and <xref:System.Windows.Documents.FlowDocument> controls all have built-in drag-and-drop functionality. The built-in functionality enables drag-and-drop of text within and between the controls. However, it does not enable opening a file by dropping the file on the control. These controls also mark the drag-and-drop events as handled. As a result, by default, you cannot add your own event handlers to provide functionality to open dropped files.  \n  \n To add additional handling for drag-and-drop events in these controls, use the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> method to add your event handlers for the drag-and-drop events. Set the `handledEventsToo` parameter to `true` to have the specified handler be invoked for a routed event that has already been marked as handled by another element along the event route.  \n  \n> [!TIP]\n>  You can replace the built-in drag-and-drop functionality of <xref:System.Windows.Controls.TextBox>, <xref:System.Windows.Controls.RichTextBox>, and <xref:System.Windows.Documents.FlowDocument> by handling the preview versions of the drag-and-drop events and marking the preview events as handled. However, this will disable the built-in drag-and-drop functionality, and is not recommended.  \n  \n## Example  \n The following example demonstrates how to add handlers for the <xref:System.Windows.DragDrop.DragOver> and <xref:System.Windows.DragDrop.Drop> events on a <xref:System.Windows.Controls.RichTextBox>. This example uses the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> method and sets the `handledEventsToo` parameter to `true` so that the events handlers will be invoked even though the <xref:System.Windows.Controls.RichTextBox> marks these events as handled. The code in the event handlers adds functionality to open a text file that is dropped on the <xref:System.Windows.Controls.RichTextBox>.  \n  \n To test this example, drag a text file or a rich text format (RTF) file from Windows Explorer to the <xref:System.Windows.Controls.RichTextBox>. The file will be opened in the <xref:System.Windows.Controls.RichTextBox>. If you press the SHIFT key before the dropping the file, the file will be opened as plain text.  \n  \n [!code-xml[DragDropSnippets#RtbXAML](../../../../samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml#rtbxaml)]  \n  \n [!code-csharp[DragDropSnippets#RtbHandlers](../../../../samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml.cs#rtbhandlers)]\n [!code-vb[DragDropSnippets#RtbHandlers](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/dragdropsnippets/vb/mainwindow.xaml.vb#rtbhandlers)]","nodes":[{"pos":[4,536],"embed":true,"restype":"x-metadata","content":"title: \"How to: Open a File That is Dropped on a RichTextBox Control | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-wpf\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"drag-and-drop [WPF], RichTextBox\"\n  - \"RichTextBox [WPF], drag-and-drop\"\n  - \"drag-and-drop [WPF], open a dropped file\"\nms.assetid: 6bb8bb54-f576-41db-a9a7-24102ddeb490\ncaps.latest.revision: 5\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"How to: Open a File That is Dropped on a RichTextBox Control | Microsoft Docs","nodes":[{"pos":[0,77],"content":"How to: Open a File That is Dropped on a RichTextBox Control | Microsoft Docs","nodes":[{"content":"How to: Open a File That is Dropped on a RichTextBox Control | Microsoft Docs","pos":[0,77]}]}],"path":["title"]}],"yml":true},{"pos":[543,603],"content":"How to: Open a File That is Dropped on a RichTextBox Control","linkify":"How to: Open a File That is Dropped on a RichTextBox Control","nodes":[{"content":"How to: Open a File That is Dropped on a RichTextBox Control","pos":[0,60]}]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph>, the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> controls all have built-in drag-and-drop functionality.","pos":[604,880],"source":"In [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)], the <xref:System.Windows.Controls.TextBox>, <xref:System.Windows.Controls.RichTextBox>, and <xref:System.Windows.Documents.FlowDocument> controls all have built-in drag-and-drop functionality."},{"content":"The built-in functionality enables drag-and-drop of text within and between the controls.","pos":[881,970]},{"content":"However, it does not enable opening a file by dropping the file on the control.","pos":[971,1050]},{"content":"These controls also mark the drag-and-drop events as handled.","pos":[1051,1112]},{"content":"As a result, by default, you cannot add your own event handlers to provide functionality to open dropped files.","pos":[1113,1224]},{"content":"To add additional handling for drag-and-drop events in these controls, use the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> method to add your event handlers for the drag-and-drop events.","pos":[1231,1483],"source":"To add additional handling for drag-and-drop events in these controls, use the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> method to add your event handlers for the drag-and-drop events."},{"content":"Set the <ph id=\"ph1\">`handledEventsToo`</ph> parameter to <ph id=\"ph2\">`true`</ph> to have the specified handler be invoked for a routed event that has already been marked as handled by another element along the event route.","pos":[1484,1672],"source":" Set the `handledEventsToo` parameter to `true` to have the specified handler be invoked for a routed event that has already been marked as handled by another element along the event route."},{"pos":[1680,2079],"content":"[!TIP]\n You can replace the built-in drag-and-drop functionality of <xref:System.Windows.Controls.TextBox>, <xref:System.Windows.Controls.RichTextBox>, and <xref:System.Windows.Documents.FlowDocument> by handling the preview versions of the drag-and-drop events and marking the preview events as handled. However, this will disable the built-in drag-and-drop functionality, and is not recommended.","leadings":["","> "],"nodes":[{"content":"You can replace the built-in drag-and-drop functionality of <xref:System.Windows.Controls.TextBox>, <xref:System.Windows.Controls.RichTextBox>, and <xref:System.Windows.Documents.FlowDocument> by handling the preview versions of the drag-and-drop events and marking the preview events as handled. However, this will disable the built-in drag-and-drop functionality, and is not recommended.","pos":[8,397],"nodes":[{"content":"You can replace the built-in drag-and-drop functionality of <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> by handling the preview versions of the drag-and-drop events and marking the preview events as handled.","pos":[0,296],"source":"You can replace the built-in drag-and-drop functionality of <xref:System.Windows.Controls.TextBox>, <xref:System.Windows.Controls.RichTextBox>, and <xref:System.Windows.Documents.FlowDocument> by handling the preview versions of the drag-and-drop events and marking the preview events as handled."},{"content":"However, this will disable the built-in drag-and-drop functionality, and is not recommended.","pos":[297,389]}]}]},{"pos":[2088,2095],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example demonstrates how to add handlers for the <ph id=\"ph1\">&lt;xref:System.Windows.DragDrop.DragOver&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.DragDrop.Drop&gt;</ph> events on a <ph id=\"ph3\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[2099,2297],"source":"The following example demonstrates how to add handlers for the <xref:System.Windows.DragDrop.DragOver> and <xref:System.Windows.DragDrop.Drop> events on a <xref:System.Windows.Controls.RichTextBox>."},{"content":"This example uses the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> method and sets the <ph id=\"ph2\">`handledEventsToo`</ph> parameter to <ph id=\"ph3\">`true`</ph> so that the events handlers will be invoked even though the <ph id=\"ph4\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> marks these events as handled.","pos":[2298,2622],"source":" This example uses the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> method and sets the `handledEventsToo` parameter to `true` so that the events handlers will be invoked even though the <xref:System.Windows.Controls.RichTextBox> marks these events as handled."},{"content":"The code in the event handlers adds functionality to open a text file that is dropped on the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[2623,2759],"source":" The code in the event handlers adds functionality to open a text file that is dropped on the <xref:System.Windows.Controls.RichTextBox>."},{"content":"To test this example, drag a text file or a rich text format (RTF) file from Windows Explorer to the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[2766,2910],"source":"To test this example, drag a text file or a rich text format (RTF) file from Windows Explorer to the <xref:System.Windows.Controls.RichTextBox>."},{"content":"The file will be opened in the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[2911,2985],"source":" The file will be opened in the <xref:System.Windows.Controls.RichTextBox>."},{"content":"If you press the SHIFT key before the dropping the file, the file will be opened as plain text.","pos":[2986,3081]},{"pos":[3088,3222],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>DragDropSnippets#RtbXAML<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml#rtbxaml)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[DragDropSnippets#RtbXAML](../../../../samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml#rtbxaml)]"},{"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DragDropSnippets#RtbHandlers<ept id=\"p2\">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml.cs#rtbhandlers)</ept><ept id=\"p1\">]</ept>","pos":[3229,3377],"source":"[!code-csharp[DragDropSnippets#RtbHandlers](../../../../samples/snippets/csharp/VS_Snippets_Wpf/dragdropsnippets/cs/mainwindow.xaml.cs#rtbhandlers)]"},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>DragDropSnippets#RtbHandlers<ept id=\"p2\">](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/dragdropsnippets/vb/mainwindow.xaml.vb#rtbhandlers)</ept><ept id=\"p1\">]</ept>","pos":[3379,3528],"source":"[!code-vb[DragDropSnippets#RtbHandlers](../../../../samples/snippets/visualbasic/VS_Snippets_Wpf/dragdropsnippets/vb/mainwindow.xaml.vb#rtbhandlers)]"}]}