{"content":"---\ntitle: \"Installutil.exe (Installer Tool)\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords:\n  - \"uninstalling server resources\"\n  - \"removing server resources\"\n  - \"status information for installation\"\n  - \"installation progress reports\"\n  - \"installing server resources\"\n  - \"Installer tool\"\n  - \"Installutil.exe\"\n  - \"files, Installer tool\"\n  - \"progress information for installation\"\n  - \"reporting installation progress\"\nms.assetid: 3f9d0533-f895-4897-b4ea-528284e0241d\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n\n# Installutil.exe (Installer Tool)\n\nThe Installer tool is a command-line utility that allows you to install and uninstall server resources by executing the installer components in specified assemblies. This tool works in conjunction with classes in the <xref:System.Configuration.Install> namespace.\n\nThis tool is automatically installed with Visual Studio. To run the tool, use the Developer Command Prompt for Visual Studio (or the Visual Studio Command Prompt in Windows 7). For more information, see [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md).\n\nAt the command prompt, type the following:\n\n## Syntax\n\n```console\ninstallutil [/u[ninstall]] [options] assembly [[options] assembly] ...\n```\n\n## Parameters\n\n|Argument|Description|\n|--------------|-----------------|\n|`assembly`|The file name of the assembly in which to execute the installer components. Omit this parameter if you want to specify the assembly's strong name by using the `/AssemblyName` option.|\n\n<a name=\"options\"></a>\n\n## Options\n\n|Option|Description|\n|------------|-----------------|\n|`/h[elp]`<br /><br /> -or-<br /><br /> `/?`|Displays command syntax and options for the tool.|\n|`/help` *assembly*<br /><br /> -or-<br /><br /> `/?` *assembly*|Displays additional options recognized by individual installers within the specified assembly, along with command syntax and options for InstallUtil.exe. This option adds the text returned by each installer component's <xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType> property to the help text of InstallUtil.exe.|\n|`/AssemblyName` \"*assemblyName*<br /><br /> ,Version=*major.minor.build.revision*<br /><br /> ,Culture=*locale*<br /><br /> ,PublicKeyToken=*publicKeyToken*\"|Specifies the strong name of an assembly, which must be registered in the global assembly cache. The assembly name must be fully qualified with the version, culture, and public key token of the assembly. The fully qualified name must be surrounded by quotes.<br /><br /> For example, \"myAssembly, Culture=neutral, PublicKeyToken=0038abc9deabfle5, Version=4.0.0.0\" is a fully qualified assembly name.|\n|`/InstallStateDir=[` *directoryName* `]`|Specifies the directory of the .InstallState file that contains the data used to uninstall the assembly. The default is the directory that contains the assembly.|\n|`/LogFile=`[*filename*]|Specifies the name of the log file where installation progress is recorded. By default, if the `/LogFile` option is omitted, a log file named *assemblyname*.InstallLog is created. If *filename* is omitted, no log file is generated.|\n|`/LogToConsole`={`true`&#124;`false`}|If `true`, displays output to the console. If `false` (the default), suppresses output to the console.|\n|`/ShowCallStack`|Outputs the call stack to the log file if an exception occurs at any point during installation.|\n|`/u`[`ninstall`]|Uninstalls the specified assemblies. Unlike the other options, `/u` applies to all assemblies regardless of where the option appears on the command line.|\n\n<a name=\"cmdline\"></a>\n\n## Additional Installer Options\n\nIndividual installers used within an assembly may recognize options in addition to those listed in the [Options](#options) section. To learn about these options, run InstallUtil.exe with the paths of the assemblies on the command line along with the `/?` or `/help` option. To specify these options, you include them on the command line along with the options recognized by InstallUtil.exe.\n\n> [!NOTE]\n> Help text on the options supported by individual installer components is returned by the <xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType> property. The individual options that have been entered on the command line are accessible programmatically from the <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property.\n\nAll options and command-line parameters are written to the installation log file. However, if you use the `/Password` parameter, which is recognized by some installer components, the password information will be replaced by eight asterisks (*) and will not appear in the log file.\n\n> [!IMPORTANT]\n> In some cases, parameters passed to the installer may include sensitive or personally identifiable information, which, by default, is written to a plain text log file. To prevent this behavior, you can suppress the log file by specifying `/LogFile=` (with no *filename* argument) after Installutil.exe on the command line.\n\n## Remarks\n\n.NET Framework applications consist of traditional program files and associated resources, such as message queues, event logs, and performance counters that must be created when the application is deployed. You can use an assembly's installer components to create these resources when your application is installed and to remove them when your application is uninstalled. Installutil.exe detects and executes these installer components.\n\nYou can specify multiple assemblies on the same command line. Any option that occurs before an assembly name applies to that assembly's installation. Except for `/u` and `/AssemblyName`, options are cumulative but overridable. That is, options specified for one assembly apply to all subsequent assemblies unless the option is specified with a new value.\n\nIf you run Installutil.exe against an assembly without specifying any options, it places the following three files into the assembly's directory:\n\n- InstallUtil.InstallLog - Contains a general description of the installation progress.\n\n- *assemblyname*.InstallLog - Contains information specific to the commit phase of the installation process. For more information about the commit phase, see the <xref:System.Configuration.Install.Installer.Commit%2A> method.\n\n- *assemblyname*.InstallState - Contains data used to uninstall the assembly.\n\nInstallutil.exe uses reflection to inspect the specified assemblies and to find all <xref:System.Configuration.Install.Installer> types that have the <xref:System.ComponentModel.RunInstallerAttribute?displayProperty=nameWithType> attribute set to `true`. The tool then executes either the <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> or the <xref:System.Configuration.Install.Installer.Uninstall%2A?displayProperty=nameWithType> method on each instance of the <xref:System.Configuration.Install.Installer> type. Installutil.exe performs installation in a transactional manner; that is, if one of the assemblies fails to install, it rolls back the installations of all other assemblies. Uninstall is not transactional.\n\nInstallutil.exe cannot install or uninstall delay-signed assemblies, but it can install or uninstall strong-named assemblies.\n\nStarting with the .NET Framework version 2.0, the 32-bit version of the common language runtime (CLR) ships with only the 32-bit version of the Installer tool, but the 64-bit version of the CLR ships with both 32-bit and 64-bit versions of the Installer tool. When using the 64-bit CLR, use the 32-bit Installer tool to install 32-bit assemblies, and the 64-bit Installer tool to install 64-bit and Microsoft intermediate language (MSIL) assemblies. Both versions of the Installer tool behave the same.\n\nYou cannot use Installutil.exe to deploy a Windows service that was created by using C++, because Installutil.exe cannot recognize the embedded native code that is produced by the C++ compiler. If you try to deploy a C++ Windows service with Installutil.exe, an exception such as <xref:System.BadImageFormatException> will be thrown. To work with this scenario, move the service code to a C++ module, and then write the installer object in C# or Visual Basic.\n\n## Examples\n\nThe following command displays a description of the command syntax and options for InstallUtil.exe.\n\n```console\ninstallutil /?\n```\n\nThe following command displays a description of the command syntax and options for InstallUtil.exe. It also displays a description and list of options supported by the installer components in `myAssembly.exe` if help text has been assigned to the installer's <xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType> property.\n\n```console\ninstallutil /? myAssembly.exe\n```\n\nThe following command executes the installer components in the assembly `myAssembly.exe`.\n\n```console\ninstallutil myAssembly.exe\n```\n\nThe following command executes the installer components in an assembly by using the `/AssemblyName` switch and a fully qualified name.\n\n```console\ninstallutil /AssemblyName \"myAssembly, Culture=neutral, PublicKeyToken=0038abc9deabfle5, Version=4.0.0.0\"\n```\n\nThe following command executes the installer components in an assembly specified by file name and in an assembly specified by strong name. Note that all assemblies specified by file name must precede assemblies specified by strong name on the command line, because the `/AssemblyName` option cannot be overridden.\n\n```console\ninstallutil myAssembly.exe /AssemblyName \"myAssembly, Culture=neutral, PublicKeyToken=0038abc9deabfle5, Version=4.0.0.0\"\n```\n\nThe following command executes the uninstaller components in the assembly `myAssembly.exe`.\n\n```console\ninstallutil /u myAssembly.exe\n```\n\nThe following command executes the uninstaller components in the assemblies `myAssembly1.exe` and `myAssembly2.exe`.\n\n```console\ninstallutil myAssembly1.exe /u myAssembly2.exe\n```\n\nBecause the position of the `/u` option on the command line is not important, this is equivalent to the following command.\n\n```console\ninstallutil /u myAssembly1.exe myAssembly2.exe\n```\n\nThe following command executes the installers in the assembly `myAssembly.exe` and specifies that progress information will be written to `myLog.InstallLog`.\n\n```console\ninstallutil /LogFile=myLog.InstallLog myAssembly.exe\n```\n\nThe following command executes the installers in the assembly `myAssembly.exe`, specifies that progress information should be written to `myLog.InstallLog`, and uses the installers' custom `/reg` option to specify that updates should be made to the system registry.\n\n```console\ninstallutil /LogFile=myLog.InstallLog /reg=true myAssembly.exe\n```\n\nThe following command executes the installers in the assembly `myAssembly.exe`, uses the installer's custom `/email` option to specify the user's email address, and suppresses output to the log file.\n\n```console\ninstallutil /LogFile= /email=admin@mycompany.com myAssembly.exe\n```\n\nThe following command writes the installation progress for `myAssembly.exe` to `myLog.InstallLog` and writes the progress for `myTestAssembly.exe` to `myTestLog.InstallLog`.\n\n```console\ninstallutil /LogFile=myLog.InstallLog myAssembly.exe /LogFile=myTestLog.InstallLog myTestAssembly.exe\n```\n\n## See also\n\n- <xref:System.Configuration.Install>\n- [Tools](../../../docs/framework/tools/index.md)\n- [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md)\n","nodes":[{"pos":[4,510],"embed":true,"restype":"x-metadata","content":"title: \"Installutil.exe (Installer Tool)\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords:\n  - \"uninstalling server resources\"\n  - \"removing server resources\"\n  - \"status information for installation\"\n  - \"installation progress reports\"\n  - \"installing server resources\"\n  - \"Installer tool\"\n  - \"Installutil.exe\"\n  - \"files, Installer tool\"\n  - \"progress information for installation\"\n  - \"reporting installation progress\"\nms.assetid: 3f9d0533-f895-4897-b4ea-528284e0241d\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"Installutil.exe (Installer Tool)","nodes":[{"pos":[0,32],"content":"Installutil.exe (Installer Tool)","nodes":[{"content":"Installutil.exe (Installer Tool)","pos":[0,32]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[518,550],"content":"Installutil.exe (Installer Tool)","linkify":"Installutil.exe (Installer Tool)","nodes":[{"content":"Installutil.exe (Installer Tool)","pos":[0,32]}]},{"content":"The Installer tool is a command-line utility that allows you to install and uninstall server resources by executing the installer components in specified assemblies.","pos":[552,717]},{"content":"This tool works in conjunction with classes in the <ph id=\"ph1\">&lt;xref:System.Configuration.Install&gt;</ph> namespace.","pos":[718,815],"source":" This tool works in conjunction with classes in the <xref:System.Configuration.Install> namespace."},{"content":"This tool is automatically installed with Visual Studio.","pos":[817,873]},{"content":"To run the tool, use the Developer Command Prompt for Visual Studio (or the Visual Studio Command Prompt in Windows 7).","pos":[874,993]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Command Prompts<ept id=\"p1\">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>.","pos":[994,1104],"source":" For more information, see [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md)."},{"content":"At the command prompt, type the following:","pos":[1106,1148]},{"pos":[1153,1159],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1251,1261],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Argument","pos":[1264,1272]},{"content":"Description","pos":[1273,1284]},{"content":"The file name of the assembly in which to execute the installer components.","pos":[1333,1408]},{"content":"Omit this parameter if you want to specify the assembly's strong name by using the <ph id=\"ph1\">`/AssemblyName`</ph> option.","pos":[1409,1515],"source":" Omit this parameter if you want to specify the assembly's strong name by using the `/AssemblyName` option."},{"pos":[1545,1552],"content":"Options","linkify":"Options","nodes":[{"content":"Options","pos":[0,7]}]},{"content":"Option","pos":[1555,1561]},{"content":"Description","pos":[1562,1573]},{"content":"-or-","pos":[1631,1635]},{"content":"Displays command syntax and options for the tool.","pos":[1653,1702]},{"content":"<ph id=\"ph1\">`/help`</ph> <bpt id=\"p1\">*</bpt>assembly<ept id=\"p1\">*</ept>","pos":[1705,1723],"source":"`/help` *assembly*"},{"content":"-or-","pos":[1736,1740]},{"content":"<ph id=\"ph1\">`/?`</ph> <bpt id=\"p1\">*</bpt>assembly<ept id=\"p1\">*</ept>","pos":[1753,1768],"source":"`/?` *assembly*"},{"content":"Displays additional options recognized by individual installers within the specified assembly, along with command syntax and options for InstallUtil.exe.","pos":[1769,1922]},{"content":"This option adds the text returned by each installer component's <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType&gt;</ph> property to the help text of InstallUtil.exe.","pos":[1923,2120],"source":" This option adds the text returned by each installer component's <xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType> property to the help text of InstallUtil.exe."},{"content":"<ph id=\"ph1\">`/AssemblyName`</ph> \"<bpt id=\"p1\">*</bpt>assemblyName<ept id=\"p1\">*</ept>","pos":[2123,2154],"source":"`/AssemblyName` \"*assemblyName*"},{"content":",Version=<bpt id=\"p1\">*</bpt>major.minor.build.revision<ept id=\"p1\">*</ept>","pos":[2167,2204],"source":",Version=*major.minor.build.revision*"},{"content":",Culture=<bpt id=\"p1\">*</bpt>locale<ept id=\"p1\">*</ept>","pos":[2217,2234],"source":",Culture=*locale*"},{"content":",PublicKeyToken=<bpt id=\"p1\">*</bpt>publicKeyToken<ept id=\"p1\">*</ept>\"","pos":[2247,2280],"source":",PublicKeyToken=*publicKeyToken*\""},{"content":"Specifies the strong name of an assembly, which must be registered in the global assembly cache.","pos":[2281,2377]},{"content":"The assembly name must be fully qualified with the version, culture, and public key token of the assembly.","pos":[2378,2484]},{"content":"The fully qualified name must be surrounded by quotes.","pos":[2485,2539]},{"content":"For example, \"myAssembly, Culture=neutral, PublicKeyToken=0038abc9deabfle5, Version=4.0.0.0\" is a fully qualified assembly name.","pos":[2552,2680]},{"pos":[2683,2723],"content":"<ph id=\"ph1\">`/InstallStateDir=[`</ph> <bpt id=\"p1\">*</bpt>directoryName<ept id=\"p1\">*</ept> <ph id=\"ph2\">`]`</ph>","source":"`/InstallStateDir=[` *directoryName* `]`"},{"content":"Specifies the directory of the .InstallState file that contains the data used to uninstall the assembly.","pos":[2724,2828]},{"content":"The default is the directory that contains the assembly.","pos":[2829,2885]},{"pos":[2888,2911],"content":"<ph id=\"ph1\">`/LogFile=`</ph>[<bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept>]","source":"`/LogFile=`[*filename*]"},{"content":"Specifies the name of the log file where installation progress is recorded.","pos":[2912,2987]},{"content":"By default, if the <ph id=\"ph1\">`/LogFile`</ph> option is omitted, a log file named <bpt id=\"p1\">*</bpt>assemblyname<ept id=\"p1\">*</ept>.InstallLog is created.","pos":[2988,3091],"source":" By default, if the `/LogFile` option is omitted, a log file named *assemblyname*.InstallLog is created."},{"content":"If <bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept> is omitted, no log file is generated.","pos":[3092,3143],"source":" If *filename* is omitted, no log file is generated."},{"pos":[3146,3183],"content":"<ph id=\"ph1\">`/LogToConsole`</ph>={<ph id=\"ph2\">`true`</ph>&amp;#124;<ph id=\"ph3\">`false`</ph>}","source":"`/LogToConsole`={`true`&#124;`false`}"},{"content":"If <ph id=\"ph1\">`true`</ph>, displays output to the console.","pos":[3184,3226],"source":"If `true`, displays output to the console."},{"content":"If <ph id=\"ph1\">`false`</ph> (the default), suppresses output to the console.","pos":[3227,3286],"source":" If `false` (the default), suppresses output to the console."},{"content":"Outputs the call stack to the log file if an exception occurs at any point during installation.","pos":[3306,3401]},{"pos":[3404,3420],"content":"<ph id=\"ph1\">`/u`</ph>[<ph id=\"ph2\">`ninstall`</ph>]","source":"`/u`[`ninstall`]"},{"content":"Uninstalls the specified assemblies.","pos":[3421,3457]},{"content":"Unlike the other options, <ph id=\"ph1\">`/u`</ph> applies to all assemblies regardless of where the option appears on the command line.","pos":[3458,3574],"source":" Unlike the other options, `/u` applies to all assemblies regardless of where the option appears on the command line."},{"pos":[3604,3632],"content":"Additional Installer Options","linkify":"Additional Installer Options","nodes":[{"content":"Additional Installer Options","pos":[0,28]}]},{"content":"Individual installers used within an assembly may recognize options in addition to those listed in the <bpt id=\"p1\">[</bpt>Options<ept id=\"p1\">](#options)</ept> section.","pos":[3634,3765],"source":"Individual installers used within an assembly may recognize options in addition to those listed in the [Options](#options) section."},{"content":"To learn about these options, run InstallUtil.exe with the paths of the assemblies on the command line along with the <ph id=\"ph1\">`/?`</ph> or <ph id=\"ph2\">`/help`</ph> option.","pos":[3766,3907],"source":" To learn about these options, run InstallUtil.exe with the paths of the assemblies on the command line along with the `/?` or `/help` option."},{"content":"To specify these options, you include them on the command line along with the options recognized by InstallUtil.exe.","pos":[3908,4024]},{"pos":[4028,4426],"content":"[!NOTE]\nHelp text on the options supported by individual installer components is returned by the <xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType> property. The individual options that have been entered on the command line are accessible programmatically from the <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property.","leadings":["","> "],"nodes":[{"content":"Help text on the options supported by individual installer components is returned by the <xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType> property. The individual options that have been entered on the command line are accessible programmatically from the <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property.","pos":[8,396],"nodes":[{"content":"Help text on the options supported by individual installer components is returned by the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType&gt;</ph> property.","pos":[0,185],"source":"Help text on the options supported by individual installer components is returned by the <xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType> property."},{"content":"The individual options that have been entered on the command line are accessible programmatically from the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph> property.","pos":[186,388],"source":" The individual options that have been entered on the command line are accessible programmatically from the <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property."}]}]},{"content":"All options and command-line parameters are written to the installation log file.","pos":[4428,4509]},{"content":"However, if you use the <ph id=\"ph1\">`/Password`</ph> parameter, which is recognized by some installer components, the password information will be replaced by eight asterisks (*) and will not appear in the log file.","pos":[4510,4708],"source":" However, if you use the `/Password` parameter, which is recognized by some installer components, the password information will be replaced by eight asterisks (*) and will not appear in the log file."},{"pos":[4712,5049],"content":"[!IMPORTANT]\nIn some cases, parameters passed to the installer may include sensitive or personally identifiable information, which, by default, is written to a plain text log file. To prevent this behavior, you can suppress the log file by specifying `/LogFile=` (with no *filename* argument) after Installutil.exe on the command line.","leadings":["","> "],"nodes":[{"content":"In some cases, parameters passed to the installer may include sensitive or personally identifiable information, which, by default, is written to a plain text log file. To prevent this behavior, you can suppress the log file by specifying `/LogFile=` (with no *filename* argument) after Installutil.exe on the command line.","pos":[13,335],"nodes":[{"content":"In some cases, parameters passed to the installer may include sensitive or personally identifiable information, which, by default, is written to a plain text log file.","pos":[0,167]},{"content":"To prevent this behavior, you can suppress the log file by specifying <ph id=\"ph1\">`/LogFile=`</ph> (with no <bpt id=\"p1\">*</bpt>filename<ept id=\"p1\">*</ept> argument) after Installutil.exe on the command line.","pos":[168,322],"source":" To prevent this behavior, you can suppress the log file by specifying `/LogFile=` (with no *filename* argument) after Installutil.exe on the command line."}]}]},{"pos":[5054,5061],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":".NET Framework applications consist of traditional program files and associated resources, such as message queues, event logs, and performance counters that must be created when the application is deployed.","pos":[5063,5269]},{"content":"You can use an assembly's installer components to create these resources when your application is installed and to remove them when your application is uninstalled.","pos":[5270,5434]},{"content":"Installutil.exe detects and executes these installer components.","pos":[5435,5499]},{"content":"You can specify multiple assemblies on the same command line.","pos":[5501,5562]},{"content":"Any option that occurs before an assembly name applies to that assembly's installation.","pos":[5563,5650]},{"content":"Except for <ph id=\"ph1\">`/u`</ph> and <ph id=\"ph2\">`/AssemblyName`</ph>, options are cumulative but overridable.","pos":[5651,5727],"source":" Except for `/u` and `/AssemblyName`, options are cumulative but overridable."},{"content":"That is, options specified for one assembly apply to all subsequent assemblies unless the option is specified with a new value.","pos":[5728,5855]},{"content":"If you run Installutil.exe against an assembly without specifying any options, it places the following three files into the assembly's directory:","pos":[5857,6002]},{"content":"InstallUtil.InstallLog - Contains a general description of the installation progress.","pos":[6006,6091]},{"content":"<bpt id=\"p1\">*</bpt>assemblyname<ept id=\"p1\">*</ept>.InstallLog - Contains information specific to the commit phase of the installation process.","pos":[6095,6201],"source":"*assemblyname*.InstallLog - Contains information specific to the commit phase of the installation process."},{"content":"For more information about the commit phase, see the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Commit%2A&gt;</ph> method.","pos":[6202,6318],"source":" For more information about the commit phase, see the <xref:System.Configuration.Install.Installer.Commit%2A> method."},{"pos":[6322,6397],"content":"<bpt id=\"p1\">*</bpt>assemblyname<ept id=\"p1\">*</ept>.InstallState - Contains data used to uninstall the assembly.","source":"*assemblyname*.InstallState - Contains data used to uninstall the assembly."},{"content":"Installutil.exe uses reflection to inspect the specified assemblies and to find all <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer&gt;</ph> types that have the <ph id=\"ph2\">&lt;xref:System.ComponentModel.RunInstallerAttribute?displayProperty=nameWithType&gt;</ph> attribute set to <ph id=\"ph3\">`true`</ph>.","pos":[6399,6653],"source":"Installutil.exe uses reflection to inspect the specified assemblies and to find all <xref:System.Configuration.Install.Installer> types that have the <xref:System.ComponentModel.RunInstallerAttribute?displayProperty=nameWithType> attribute set to `true`."},{"content":"The tool then executes either the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.Uninstall%2A?displayProperty=nameWithType&gt;</ph> method on each instance of the <ph id=\"ph3\">&lt;xref:System.Configuration.Install.Installer&gt;</ph> type.","pos":[6654,6951],"source":" The tool then executes either the <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> or the <xref:System.Configuration.Install.Installer.Uninstall%2A?displayProperty=nameWithType> method on each instance of the <xref:System.Configuration.Install.Installer> type."},{"content":"Installutil.exe performs installation in a transactional manner; that is, if one of the assemblies fails to install, it rolls back the installations of all other assemblies.","pos":[6952,7125]},{"content":"Uninstall is not transactional.","pos":[7126,7157]},{"content":"Installutil.exe cannot install or uninstall delay-signed assemblies, but it can install or uninstall strong-named assemblies.","pos":[7159,7284]},{"content":"Starting with the .NET Framework version 2.0, the 32-bit version of the common language runtime (CLR) ships with only the 32-bit version of the Installer tool, but the 64-bit version of the CLR ships with both 32-bit and 64-bit versions of the Installer tool.","pos":[7286,7545]},{"content":"When using the 64-bit CLR, use the 32-bit Installer tool to install 32-bit assemblies, and the 64-bit Installer tool to install 64-bit and Microsoft intermediate language (MSIL) assemblies.","pos":[7546,7735]},{"content":"Both versions of the Installer tool behave the same.","pos":[7736,7788]},{"content":"You cannot use Installutil.exe to deploy a Windows service that was created by using C++, because Installutil.exe cannot recognize the embedded native code that is produced by the C++ compiler.","pos":[7790,7983]},{"content":"If you try to deploy a C++ Windows service with Installutil.exe, an exception such as <ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph> will be thrown.","pos":[7984,8123],"source":" If you try to deploy a C++ Windows service with Installutil.exe, an exception such as <xref:System.BadImageFormatException> will be thrown."},{"content":"To work with this scenario, move the service code to a C++ module, and then write the installer object in C# or Visual Basic.","pos":[8124,8249]},{"pos":[8254,8262],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following command displays a description of the command syntax and options for InstallUtil.exe.","pos":[8264,8363]},{"content":"The following command displays a description of the command syntax and options for InstallUtil.exe.","pos":[8396,8495]},{"content":"It also displays a description and list of options supported by the installer components in <ph id=\"ph1\">`myAssembly.exe`</ph> if help text has been assigned to the installer's <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType&gt;</ph> property.","pos":[8496,8751],"source":" It also displays a description and list of options supported by the installer components in `myAssembly.exe` if help text has been assigned to the installer's <xref:System.Configuration.Install.Installer.HelpText%2A?displayProperty=nameWithType> property."},{"pos":[8799,8888],"content":"The following command executes the installer components in the assembly <ph id=\"ph1\">`myAssembly.exe`</ph>.","source":"The following command executes the installer components in the assembly `myAssembly.exe`."},{"pos":[8933,9067],"content":"The following command executes the installer components in an assembly by using the <ph id=\"ph1\">`/AssemblyName`</ph> switch and a fully qualified name.","source":"The following command executes the installer components in an assembly by using the `/AssemblyName` switch and a fully qualified name."},{"content":"The following command executes the installer components in an assembly specified by file name and in an assembly specified by strong name.","pos":[9191,9329]},{"content":"Note that all assemblies specified by file name must precede assemblies specified by strong name on the command line, because the <ph id=\"ph1\">`/AssemblyName`</ph> option cannot be overridden.","pos":[9330,9504],"source":" Note that all assemblies specified by file name must precede assemblies specified by strong name on the command line, because the `/AssemblyName` option cannot be overridden."},{"pos":[9643,9734],"content":"The following command executes the uninstaller components in the assembly <ph id=\"ph1\">`myAssembly.exe`</ph>.","source":"The following command executes the uninstaller components in the assembly `myAssembly.exe`."},{"pos":[9782,9898],"content":"The following command executes the uninstaller components in the assemblies <ph id=\"ph1\">`myAssembly1.exe`</ph> and <ph id=\"ph2\">`myAssembly2.exe`</ph>.","source":"The following command executes the uninstaller components in the assemblies `myAssembly1.exe` and `myAssembly2.exe`."},{"pos":[9963,10085],"content":"Because the position of the <ph id=\"ph1\">`/u`</ph> option on the command line is not important, this is equivalent to the following command.","source":"Because the position of the `/u` option on the command line is not important, this is equivalent to the following command."},{"pos":[10150,10307],"content":"The following command executes the installers in the assembly <ph id=\"ph1\">`myAssembly.exe`</ph> and specifies that progress information will be written to <ph id=\"ph2\">`myLog.InstallLog`</ph>.","source":"The following command executes the installers in the assembly `myAssembly.exe` and specifies that progress information will be written to `myLog.InstallLog`."},{"pos":[10378,10643],"content":"The following command executes the installers in the assembly <ph id=\"ph1\">`myAssembly.exe`</ph>, specifies that progress information should be written to <ph id=\"ph2\">`myLog.InstallLog`</ph>, and uses the installers' custom <ph id=\"ph3\">`/reg`</ph> option to specify that updates should be made to the system registry.","source":"The following command executes the installers in the assembly `myAssembly.exe`, specifies that progress information should be written to `myLog.InstallLog`, and uses the installers' custom `/reg` option to specify that updates should be made to the system registry."},{"pos":[10724,10923],"content":"The following command executes the installers in the assembly <ph id=\"ph1\">`myAssembly.exe`</ph>, uses the installer's custom <ph id=\"ph2\">`/email`</ph> option to specify the user's email address, and suppresses output to the log file.","source":"The following command executes the installers in the assembly `myAssembly.exe`, uses the installer's custom `/email` option to specify the user's email address, and suppresses output to the log file."},{"pos":[11005,11178],"content":"The following command writes the installation progress for <ph id=\"ph1\">`myAssembly.exe`</ph> to <ph id=\"ph2\">`myLog.InstallLog`</ph> and writes the progress for <ph id=\"ph3\">`myTestAssembly.exe`</ph> to <ph id=\"ph4\">`myTestLog.InstallLog`</ph>.","source":"The following command writes the installation progress for `myAssembly.exe` to `myLog.InstallLog` and writes the progress for `myTestAssembly.exe` to `myTestLog.InstallLog`."},{"pos":[11301,11309],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[11351,11398],"content":"<bpt id=\"p1\">[</bpt>Tools<ept id=\"p1\">](../../../docs/framework/tools/index.md)</ept>","source":"[Tools](../../../docs/framework/tools/index.md)"},{"pos":[11401,11484],"content":"<bpt id=\"p1\">[</bpt>Command Prompts<ept id=\"p1\">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>","source":"[Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md)"}]}