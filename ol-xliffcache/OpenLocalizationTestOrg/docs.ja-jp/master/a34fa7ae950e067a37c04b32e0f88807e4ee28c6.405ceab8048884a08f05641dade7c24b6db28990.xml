{"content":"---\ntitle: \"Writing DataSet Contents as XML Data | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: fd15f8a5-3b4c-46d0-a561-4559ab2a4705\ncaps.latest.revision: 5\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Writing DataSet Contents as XML Data\nIn ADO.NET you can write an XML representation of a <xref:System.Data.DataSet>, with or without its schema. If schema information is included inline with the XML, it is written using the XML Schema definition language (XSD). The schema contains the table definitions of the <xref:System.Data.DataSet> as well as the relation and constraint definitions.  \n  \n When a <xref:System.Data.DataSet> is written as XML data, the rows in the <xref:System.Data.DataSet> are written in their current versions. However, the <xref:System.Data.DataSet> can also be written as a DiffGram so that both the current and the original values of the rows will be included.  \n  \n The XML representation of the <xref:System.Data.DataSet> can be written to a file, a stream, an **XmlWriter**, or a string. These choices provide great flexibility for how you transport the XML representation of the <xref:System.Data.DataSet>. To obtain the XML representation of the <xref:System.Data.DataSet> as a string, use the **GetXml** method as shown in the following example.  \n  \n```vb  \nDim xmlDS As String = custDS.GetXml()  \n```  \n  \n```csharp  \nstring xmlDS = custDS.GetXml();  \n```  \n  \n **GetXml** returns the XML representation of the <xref:System.Data.DataSet> without schema information. To write the schema information from the <xref:System.Data.DataSet> (as XML Schema) to a string, use **GetXmlSchema**.  \n  \n To write a <xref:System.Data.DataSet> to a file, stream, or **XmlWriter**, use the **WriteXml** method. The first parameter you pass to **WriteXml** is the destination of the XML output. For example, pass a string containing a file name, a **System.IO.TextWriter** object, and so on. You can pass an optional second parameter of an **XmlWriteMode** to specify how the XML output is to be written.  \n  \n The following table shows the options for **XmlWriteMode**.  \n  \n|XmlWriteMode option|Description|  \n|-------------------------|-----------------|  \n|**IgnoreSchema**|Writes the current contents of the <xref:System.Data.DataSet> as XML data, without an XML Schema. This is the default.|  \n|**WriteSchema**|Writes the current contents of the <xref:System.Data.DataSet> as XML data with the relational structure as inline XML Schema.|  \n|**DiffGram**|Writes the entire <xref:System.Data.DataSet> as a DiffGram, including original and current values. For more information, see [DiffGrams](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md).|  \n  \n When writing an XML representation of a <xref:System.Data.DataSet> that contains **DataRelation** objects, you will most likely want the resulting XML to have the child rows of each relation nested within their related parent elements. To accomplish this, set the **Nested** property of the **DataRelation** to **true** when you add the **DataRelation** to the <xref:System.Data.DataSet>. For more information, see [Nesting DataRelations](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md).  \n  \n Following are two examples of how to write the XML representation of a <xref:System.Data.DataSet> to a file. The first example passes the file name for the resulting XML as a string to **WriteXml**. The second example passes a **System.IO.StreamWriter** object.  \n  \n```vb  \ncustDS.WriteXml(\"Customers.xml\", XmlWriteMode.WriteSchema)  \n  \n```  \n  \n```csharp  \ncustDS.WriteXml(\"Customers.xml\", XmlWriteMode.WriteSchema);  \n  \n```  \n  \n```vb  \nDim xmlSW As System.IO.StreamWriter = New System.IO.StreamWriter(\"Customers.xml\")  \ncustDS.WriteXml(xmlSW, XmlWriteMode.WriteSchema)  \nxmlSW.Close()  \n  \n```  \n  \n```csharp  \nSystem.IO.StreamWriter xmlSW = new System.IO.StreamWriter(\"Customers.xml\");  \ncustDS.WriteXml(xmlSW, XmlWriteMode.WriteSchema);  \nxmlSW.Close();  \n```  \n  \n## Mapping Columns to XML Elements, Attributes, and Text  \n You can specify how a column of a table is represented in XML using the **ColumnMapping** property of the **DataColumn** object. The following table shows the different **MappingType** values for the **ColumnMapping** property of a table column, and the resulting XML.  \n  \n|MappingType value|Description|  \n|-----------------------|-----------------|  \n|**Element**|This is the default. The column is written as an XML element where the ColumnName is the name of the element and the contents of the column are written as the text of the element. For example:<br /><br /> `<ColumnName>Column Contents</ColumnName>`|  \n|**Attribute**|The column is written as an XML attribute of the XML element for the current row where the ColumnName is the name of the attribute and the contents of the column are written as the value of the attribute. For example:<br /><br /> `<RowElement ColumnName=\"Column Contents\" />`|  \n|**SimpleContent**|The contents of the column are written as text in the XML element for the current row. For example:<br /><br /> `<RowElement>Column Contents</RowElement>`<br /><br /> Note that **SimpleContent** cannot be set for a column of a table that has **Element** columns or nested relations.|  \n|**Hidden**|The column is not written in the XML output.|  \n  \n## See Also  \n [Using XML in a DataSet](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)   \n [DiffGrams](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)   \n [Nesting DataRelations](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md)   \n [Writing DataSet Schema Information as XSD](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/writing-dataset-schema-information-as-xsd.md)   \n [DataSets, DataTables, and DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)   \n [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)","nodes":[{"pos":[12,65],"content":"Writing DataSet Contents as XML Data | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Writing DataSet Contents as XML Data | Microsoft Docs","pos":[0,53]}]},{"pos":[374,410],"content":"Writing DataSet Contents as XML Data","linkify":"Writing DataSet Contents as XML Data","nodes":[{"content":"Writing DataSet Contents as XML Data","pos":[0,36]}]},{"content":"In ADO.NET you can write an XML representation of a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>, with or without its schema.","pos":[411,518],"source":"In ADO.NET you can write an XML representation of a <xref:System.Data.DataSet>, with or without its schema."},{"content":"If schema information is included inline with the XML, it is written using the XML Schema definition language (XSD).","pos":[519,635]},{"content":"The schema contains the table definitions of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> as well as the relation and constraint definitions.","pos":[636,763],"source":" The schema contains the table definitions of the <xref:System.Data.DataSet> as well as the relation and constraint definitions."},{"content":"When a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> is written as XML data, the rows in the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph> are written in their current versions.","pos":[770,909],"source":"When a <xref:System.Data.DataSet> is written as XML data, the rows in the <xref:System.Data.DataSet> are written in their current versions."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> can also be written as a DiffGram so that both the current and the original values of the rows will be included.","pos":[910,1062],"source":" However, the <xref:System.Data.DataSet> can also be written as a DiffGram so that both the current and the original values of the rows will be included."},{"content":"The XML representation of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> can be written to a file, a stream, an <bpt id=\"p1\">**</bpt>XmlWriter<ept id=\"p1\">**</ept>, or a string.","pos":[1069,1192],"source":"The XML representation of the <xref:System.Data.DataSet> can be written to a file, a stream, an **XmlWriter**, or a string."},{"content":"These choices provide great flexibility for how you transport the XML representation of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[1193,1312],"source":" These choices provide great flexibility for how you transport the XML representation of the <xref:System.Data.DataSet>."},{"content":"To obtain the XML representation of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> as a string, use the <bpt id=\"p1\">**</bpt>GetXml<ept id=\"p1\">**</ept> method as shown in the following example.","pos":[1313,1453],"source":" To obtain the XML representation of the <xref:System.Data.DataSet> as a string, use the **GetXml** method as shown in the following example."},{"content":"<bpt id=\"p1\">**</bpt>GetXml<ept id=\"p1\">**</ept> returns the XML representation of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> without schema information.","pos":[1572,1675],"source":"**GetXml** returns the XML representation of the <xref:System.Data.DataSet> without schema information."},{"content":"To write the schema information from the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> (as XML Schema) to a string, use <bpt id=\"p1\">**</bpt>GetXmlSchema<ept id=\"p1\">**</ept>.","pos":[1676,1794],"source":" To write the schema information from the <xref:System.Data.DataSet> (as XML Schema) to a string, use **GetXmlSchema**."},{"content":"To write a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> to a file, stream, or <bpt id=\"p1\">**</bpt>XmlWriter<ept id=\"p1\">**</ept>, use the <bpt id=\"p2\">**</bpt>WriteXml<ept id=\"p2\">**</ept> method.","pos":[1801,1904],"source":"To write a <xref:System.Data.DataSet> to a file, stream, or **XmlWriter**, use the **WriteXml** method."},{"content":"The first parameter you pass to <bpt id=\"p1\">**</bpt>WriteXml<ept id=\"p1\">**</ept> is the destination of the XML output.","pos":[1905,1987],"source":" The first parameter you pass to **WriteXml** is the destination of the XML output."},{"content":"For example, pass a string containing a file name, a <bpt id=\"p1\">**</bpt>System.IO.TextWriter<ept id=\"p1\">**</ept> object, and so on.","pos":[1988,2084],"source":" For example, pass a string containing a file name, a **System.IO.TextWriter** object, and so on."},{"content":"You can pass an optional second parameter of an <bpt id=\"p1\">**</bpt>XmlWriteMode<ept id=\"p1\">**</ept> to specify how the XML output is to be written.","pos":[2085,2197],"source":" You can pass an optional second parameter of an **XmlWriteMode** to specify how the XML output is to be written."},{"pos":[2204,2263],"content":"The following table shows the options for <bpt id=\"p1\">**</bpt>XmlWriteMode<ept id=\"p1\">**</ept>.","source":"The following table shows the options for **XmlWriteMode**."},{"content":"XmlWriteMode option","pos":[2270,2289]},{"content":"Description","pos":[2290,2301]},{"pos":[2354,2370],"content":"<bpt id=\"p1\">**</bpt>IgnoreSchema<ept id=\"p1\">**</ept>","source":"**IgnoreSchema**"},{"content":"Writes the current contents of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> as XML data, without an XML Schema.","pos":[2371,2468],"source":"Writes the current contents of the <xref:System.Data.DataSet> as XML data, without an XML Schema."},{"content":"This is the default.","pos":[2469,2489]},{"pos":[2494,2509],"content":"<bpt id=\"p1\">**</bpt>WriteSchema<ept id=\"p1\">**</ept>","source":"**WriteSchema**"},{"content":"Writes the current contents of the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> as XML data with the relational structure as inline XML Schema.","pos":[2510,2635],"source":"Writes the current contents of the <xref:System.Data.DataSet> as XML data with the relational structure as inline XML Schema."},{"pos":[2640,2652],"content":"<bpt id=\"p1\">**</bpt>DiffGram<ept id=\"p1\">**</ept>","source":"**DiffGram**"},{"content":"Writes the entire <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> as a DiffGram, including original and current values.","pos":[2653,2751],"source":"Writes the entire <xref:System.Data.DataSet> as a DiffGram, including original and current values."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>DiffGrams<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept>.","pos":[2752,2873],"source":" For more information, see [DiffGrams](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)."},{"content":"When writing an XML representation of a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> that contains <bpt id=\"p1\">**</bpt>DataRelation<ept id=\"p1\">**</ept> objects, you will most likely want the resulting XML to have the child rows of each relation nested within their related parent elements.","pos":[2881,3116],"source":"When writing an XML representation of a <xref:System.Data.DataSet> that contains **DataRelation** objects, you will most likely want the resulting XML to have the child rows of each relation nested within their related parent elements."},{"content":"To accomplish this, set the <bpt id=\"p1\">**</bpt>Nested<ept id=\"p1\">**</ept> property of the <bpt id=\"p2\">**</bpt>DataRelation<ept id=\"p2\">**</ept> to <bpt id=\"p3\">**</bpt>true<ept id=\"p3\">**</ept> when you add the <bpt id=\"p4\">**</bpt>DataRelation<ept id=\"p4\">**</ept> to the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[3117,3269],"source":" To accomplish this, set the **Nested** property of the **DataRelation** to **true** when you add the **DataRelation** to the <xref:System.Data.DataSet>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Nesting DataRelations<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md)</ept>.","pos":[3270,3415],"source":" For more information, see [Nesting DataRelations](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md)."},{"content":"Following are two examples of how to write the XML representation of a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> to a file.","pos":[3422,3530],"source":"Following are two examples of how to write the XML representation of a <xref:System.Data.DataSet> to a file."},{"content":"The first example passes the file name for the resulting XML as a string to <bpt id=\"p1\">**</bpt>WriteXml<ept id=\"p1\">**</ept>.","pos":[3531,3620],"source":" The first example passes the file name for the resulting XML as a string to **WriteXml**."},{"content":"The second example passes a <bpt id=\"p1\">**</bpt>System.IO.StreamWriter<ept id=\"p1\">**</ept> object.","pos":[3621,3683],"source":" The second example passes a **System.IO.StreamWriter** object."},{"pos":[4198,4251],"content":"Mapping Columns to XML Elements, Attributes, and Text","linkify":"Mapping Columns to XML Elements, Attributes, and Text","nodes":[{"content":"Mapping Columns to XML Elements, Attributes, and Text","pos":[0,53]}]},{"content":"You can specify how a column of a table is represented in XML using the <bpt id=\"p1\">**</bpt>ColumnMapping<ept id=\"p1\">**</ept> property of the <bpt id=\"p2\">**</bpt>DataColumn<ept id=\"p2\">**</ept> object.","pos":[4255,4383],"source":"You can specify how a column of a table is represented in XML using the **ColumnMapping** property of the **DataColumn** object."},{"content":"The following table shows the different <bpt id=\"p1\">**</bpt>MappingType<ept id=\"p1\">**</ept> values for the <bpt id=\"p2\">**</bpt>ColumnMapping<ept id=\"p2\">**</ept> property of a table column, and the resulting XML.","pos":[4384,4523],"source":" The following table shows the different **MappingType** values for the **ColumnMapping** property of a table column, and the resulting XML."},{"content":"MappingType value","pos":[4530,4547]},{"content":"Description","pos":[4548,4559]},{"pos":[4610,4621],"content":"<bpt id=\"p1\">**</bpt>Element<ept id=\"p1\">**</ept>","source":"**Element**"},{"content":"This is the default.","pos":[4622,4642]},{"content":"The column is written as an XML element where the ColumnName is the name of the element and the contents of the column are written as the text of the element.","pos":[4643,4801]},{"content":"For example:","pos":[4802,4814]},{"pos":[4874,4887],"content":"<bpt id=\"p1\">**</bpt>Attribute<ept id=\"p1\">**</ept>","source":"**Attribute**"},{"content":"The column is written as an XML attribute of the XML element for the current row where the ColumnName is the name of the attribute and the contents of the column are written as the value of the attribute.","pos":[4888,5092]},{"content":"For example:","pos":[5093,5105]},{"pos":[5168,5185],"content":"<bpt id=\"p1\">**</bpt>SimpleContent<ept id=\"p1\">**</ept>","source":"**SimpleContent**"},{"content":"The contents of the column are written as text in the XML element for the current row.","pos":[5186,5272]},{"content":"For example:","pos":[5273,5285]},{"content":"Note that <bpt id=\"p1\">**</bpt>SimpleContent<ept id=\"p1\">**</ept> cannot be set for a column of a table that has <bpt id=\"p2\">**</bpt>Element<ept id=\"p2\">**</ept> columns or nested relations.","pos":[5353,5468],"source":" Note that **SimpleContent** cannot be set for a column of a table that has **Element** columns or nested relations."},{"pos":[5473,5483],"content":"<bpt id=\"p1\">**</bpt>Hidden<ept id=\"p1\">**</ept>","source":"**Hidden**"},{"content":"The column is not written in the XML output.","pos":[5484,5528]},{"pos":[5538,5546],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Using XML in a DataSet<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)</ept><ph id=\"ph1\"> </ph>","pos":[5550,5671],"source":"[Using XML in a DataSet](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md) "},{"content":"<bpt id=\"p1\"> [</bpt>DiffGrams<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept><ph id=\"ph1\"> </ph>","pos":[5674,5770],"source":" [DiffGrams](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Nesting DataRelations<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md)</ept><ph id=\"ph1\"> </ph>","pos":[5773,5893],"source":" [Nesting DataRelations](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Writing DataSet Schema Information as XSD<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/writing-dataset-schema-information-as-xsd.md)</ept><ph id=\"ph1\"> </ph>","pos":[5896,6056],"source":" [Writing DataSet Schema Information as XSD](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/writing-dataset-schema-information-as-xsd.md) "},{"content":"<bpt id=\"p1\"> [</bpt>DataSets, DataTables, and DataViews<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[6059,6177],"source":" [DataSets, DataTables, and DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept>","pos":[6180,6284],"source":" [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)"}]}