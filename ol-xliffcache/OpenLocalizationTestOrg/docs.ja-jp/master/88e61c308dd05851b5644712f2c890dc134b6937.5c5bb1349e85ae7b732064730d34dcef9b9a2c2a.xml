{"content":"---\ntitle: \"Node Sets in Transformations | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nms.assetid: ad034f0e-ff8b-4a71-9a4c-528c754263c4\ncaps.latest.revision: 4\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Node Sets in Transformations\nNode sets are one of four basic data types that are returned from XML Path Language (XPath) expressions. A node set, which is an unordered collection of nodes without duplicates, created in document order, can be assigned to a variable in a style sheet.  \n  \n> [!NOTE]\n>  The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the [!INCLUDE[dnprdnext](../../../../includes/dnprdnext-md.md)]. You can perform Extensible Stylesheet Language for Transformations (XSLT) transformations using the <xref:System.Xml.Xsl.XslCompiledTransform> class. See [Using the XslCompiledTransform Class](../../../../docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](../../../../docs/standard/data/xml/migrating-from-the-xsltransform-class.md) for more information.  \n  \n Node sets are one of four basic data types that are returned from XPath expressions. A node set, which is an unordered collection of nodes without duplicates, created in document order, can be assigned to a variable in a style sheet. This node set, which is a result of an XPath expression used in a `select` attribute in a transformation, has the same behavior as a node set from the XML Document Object Model (DOM). You can navigate a node set using a set of methods shown in [Node Set Navigation Using XPathNavigator](../../../../docs/standard/data/xml/node-set-navigation-using-xpathnavigator.md), unlike a result tree fragment or result tree fragment, which uses the <xref:System.Xml.XPath.XPathNodeIterator> for navigation.  \n  \n The following code sample shows how to iterate over a node set when a `variable` or `parameter` element in a style sheet evaluates to a node set.  \n  \n## Style Sheet  \n  \n```  \n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">  \n  \n    <xsl:variable name=\"x\" select=\"bookstore/book/title\"></xsl:variable>  \n  \n    <xsl:template match=\"/\">  \n        <xsl:for-each select=\"$x\">  \n            ******  \n            <xsl:value-of select=\".\"></xsl:value-of>  \n            ******  \n        </xsl:for-each>  \n    </xsl:template>  \n  \n</xsl:stylesheet>  \n```  \n  \n## Input  \n  \n```  \n<bookstore>  \n   <book style=\"autobiography\">  \n      <title>Seven Years in Trenton</title>  \n   </book>  \n  \n   <book style=\"autobiography\">  \n      <title>Seven Years in Trenton2</title>  \n   </book>  \n  \n   <book style=\"textbook\">  \n      <title>History of Trenton Vol 3</title>  \n   </book>  \n</bookstore>  \n```  \n  \n## Output  \n  \n```  \n******  \nSeven Years in Trenton  \n******  \n  \n******  \nSeven Years in Trenton2  \n******  \n  \n******  \nHistory of Trenton Vol 3  \n******  \n```  \n  \n## See Also  \n <xref:System.Xml.XPath.XPathNodeIterator>   \n [XSLT Transformations with the XslTransform Class](../../../../docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)   \n [XslTransform Class Implements the XSLT Processor](../../../../docs/standard/data/xml/xsltransform-class-implements-the-xslt-processor.md)","nodes":[{"pos":[12,57],"content":"Node Sets in Transformations | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Node Sets in Transformations | Microsoft Docs","pos":[0,45]}]},{"pos":[402,430],"content":"Node Sets in Transformations","linkify":"Node Sets in Transformations","nodes":[{"content":"Node Sets in Transformations","pos":[0,28]}]},{"content":"Node sets are one of four basic data types that are returned from XML Path Language (XPath) expressions.","pos":[431,535]},{"content":"A node set, which is an unordered collection of nodes without duplicates, created in document order, can be assigned to a variable in a style sheet.","pos":[536,684]},{"pos":[692,1239],"content":"[!NOTE]\n The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the [!INCLUDE[dnprdnext](../../../../includes/dnprdnext-md.md)]. You can perform Extensible Stylesheet Language for Transformations (XSLT) transformations using the <xref:System.Xml.Xsl.XslCompiledTransform> class. See [Using the XslCompiledTransform Class](../../../../docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](../../../../docs/standard/data/xml/migrating-from-the-xsltransform-class.md) for more information.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the [!INCLUDE[dnprdnext](../../../../includes/dnprdnext-md.md)]. You can perform Extensible Stylesheet Language for Transformations (XSLT) transformations using the <xref:System.Xml.Xsl.XslCompiledTransform> class. See [Using the XslCompiledTransform Class](../../../../docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](../../../../docs/standard/data/xml/migrating-from-the-xsltransform-class.md) for more information.","pos":[8,545],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class is obsolete in the <ph id=\"ph2\">[!INCLUDE[dnprdnext](../../../../includes/dnprdnext-md.md)]</ph>.","pos":[1,125],"source":" The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the [!INCLUDE[dnprdnext](../../../../includes/dnprdnext-md.md)]."},{"content":"You can perform Extensible Stylesheet Language for Transformations (XSLT) transformations using the <ph id=\"ph1\">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class.","pos":[126,275],"source":" You can perform Extensible Stylesheet Language for Transformations (XSLT) transformations using the <xref:System.Xml.Xsl.XslCompiledTransform> class."},{"content":"See <bpt id=\"p1\">[</bpt>Using the XslCompiledTransform Class<ept id=\"p1\">](../../../../docs/standard/data/xml/using-the-xslcompiledtransform-class.md)</ept> and <bpt id=\"p2\">[</bpt>Migrating From the XslTransform Class<ept id=\"p2\">](../../../../docs/standard/data/xml/migrating-from-the-xsltransform-class.md)</ept> for more information.","pos":[276,537],"source":" See [Using the XslCompiledTransform Class](../../../../docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](../../../../docs/standard/data/xml/migrating-from-the-xsltransform-class.md) for more information."}]}]},{"content":"Node sets are one of four basic data types that are returned from XPath expressions.","pos":[1246,1330]},{"content":"A node set, which is an unordered collection of nodes without duplicates, created in document order, can be assigned to a variable in a style sheet.","pos":[1331,1479]},{"content":"This node set, which is a result of an XPath expression used in a <ph id=\"ph1\">`select`</ph> attribute in a transformation, has the same behavior as a node set from the XML Document Object Model (DOM).","pos":[1480,1663],"source":" This node set, which is a result of an XPath expression used in a `select` attribute in a transformation, has the same behavior as a node set from the XML Document Object Model (DOM)."},{"content":"You can navigate a node set using a set of methods shown in <bpt id=\"p1\">[</bpt>Node Set Navigation Using XPathNavigator<ept id=\"p1\">](../../../../docs/standard/data/xml/node-set-navigation-using-xpathnavigator.md)</ept>, unlike a result tree fragment or result tree fragment, which uses the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> for navigation.","pos":[1664,1975],"source":" You can navigate a node set using a set of methods shown in [Node Set Navigation Using XPathNavigator](../../../../docs/standard/data/xml/node-set-navigation-using-xpathnavigator.md), unlike a result tree fragment or result tree fragment, which uses the <xref:System.Xml.XPath.XPathNodeIterator> for navigation."},{"pos":[1982,2127],"content":"The following code sample shows how to iterate over a node set when a <ph id=\"ph1\">`variable`</ph> or <ph id=\"ph2\">`parameter`</ph> element in a style sheet evaluates to a node set.","source":"The following code sample shows how to iterate over a node set when a `variable` or `parameter` element in a style sheet evaluates to a node set."},{"pos":[2136,2147],"content":"Style Sheet","linkify":"Style Sheet","nodes":[{"content":"Style Sheet","pos":[0,11]}]},{"pos":[2570,2575],"content":"Input","linkify":"Input","nodes":[{"content":"Input","pos":[0,5]}]},{"pos":[2911,2917],"content":"Output","linkify":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[3079,3087],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\"> [</bpt>XSLT Transformations with the XslTransform Class<ept id=\"p1\">](../../../../docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)</ept><ph id=\"ph1\"> </ph>","pos":[3136,3276],"source":" [XSLT Transformations with the XslTransform Class](../../../../docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md) "},{"content":"<bpt id=\"p1\"> [</bpt>XslTransform Class Implements the XSLT Processor<ept id=\"p1\">](../../../../docs/standard/data/xml/xsltransform-class-implements-the-xslt-processor.md)</ept>","pos":[3279,3418],"source":" [XslTransform Class Implements the XSLT Processor](../../../../docs/standard/data/xml/xsltransform-class-implements-the-xslt-processor.md)"}]}