<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7215cb4c5159c923d65b68735493af1658a03b2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\parsing-numeric.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebe36b62a1a288382ad0fbb23b80eabb3442b8ad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68f244a1541b0f028936f1df36ac9f1080b7f0c2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Parsing Numeric Strings in .NET | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Parsing Numeric Strings in NET</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>All numeric types have two static parsing methods, <ph id="ph1">`Parse`</ph> and <ph id="ph2">`TryParse`</ph>, that you can use to convert the string representation of a number into a numeric type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These methods enable you to parse strings that were produced by using the format strings documented in <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](../../../docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](../../../docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">`Parse`</ph> and <ph id="ph2">`TryParse`</ph> methods can successfully convert strings that contain integral decimal digits only to integer values.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>They can successfully convert strings that contain integral and fractional decimal digits, group separators, and a decimal separator to floating-point values.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Parse`</ph> method throws an exception if the operation fails, whereas the <ph id="ph2">`TryParse`</ph> method returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Parsing and Format Providers</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Typically, the string representations of numeric values differ by culture.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Elements of numeric strings such as currency symbols, group (or thousands) separators, and decimal separators all vary by culture.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Parsing methods either implicitly or explicitly use a format provider that recognizes these culture-specific variations.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If no format provider is specified in a call to the <ph id="ph1">`Parse`</ph> or <ph id="ph2">`TryParse`</ph> method, the format provider associated with the current thread culture (the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=fullName&gt;</ph> property) is used.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A format provider is represented by an <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This interface has a single member, the <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method, whose single parameter is a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the type to be formatted.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This method returns the object that provides formatting information.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>.NET supports the following two <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations for parsing numeric strings:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object whose <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=fullName&gt;</ph> method returns a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object whose <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=fullName&gt;</ph> method returns itself.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following example tries to convert each string in an array to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It first tries to parse the string by using a format provider that reflects the conventions of the English (United States) culture.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If this operation throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>, it tries to parse the string by using a format provider that reflects the conventions of the French (France) culture.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Parsing.Numbers#1<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/parsing.numbers/cs/formatproviders1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Parsing.Numbers#1<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/parsing.numbers/vb/formatproviders1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Parsing and NumberStyles Values</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The style elements (such as white space, group separators, and decimal separator) that the parse operation can handle are defined by a <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>By default, strings that represent integer values are parsed by using the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> value, which permits only numeric digits, leading and trailing white space, and a leading sign.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Strings that represent floating-point values are parsed using a combination of the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> values; this composite style permits decimal digits along with leading and trailing white space, a leading sign, a decimal separator, a group separator, and an exponent.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>By calling an overload of the <ph id="ph1">`Parse`</ph> or <ph id="ph2">`TryParse`</ph> method that includes a parameter of type <ph id="ph3">&lt;xref:System.Globalization.NumberStyles&gt;</ph> and setting one or more <ph id="ph4">&lt;xref:System.Globalization.NumberStyles&gt;</ph> flags, you can control the style elements that can be present in the string for the parse operation to succeed.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, a string that contains a group separator cannot be converted to an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Int32.Parse%28System.String%29?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>However, the conversion succeeds if you use the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag, as the following example illustrates.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Parsing.Numbers#2<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/parsing.numbers/cs/styles1.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Parsing.Numbers#2<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/parsing.numbers/vb/styles1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The parse operation always uses the formatting conventions of a particular culture.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you do not specify a culture by passing a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, the culture associated with the current thread is used.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following table lists the members of the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration and describes the effect that they have on the parsing operation.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>NumberStyles value</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Effect on the string to be parsed</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Only numeric digits are permitted.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The decimal separator and fractional digits are permitted.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For integer values, only zero is permitted as a fractional digit.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Valid decimal separators are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The "e" or "E" character can be used to indicate exponential notation.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> for additional information.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Leading white space is permitted.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Trailing white space is permitted.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A positive or negative sign can precede numeric digits.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A positive or negative sign can follow numeric digits.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Parentheses can be used to indicate negative values.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The group separator is permitted.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The group separator character is determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The currency symbol is permitted.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The currency symbol is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The string to be parsed is interpreted as a hexadecimal number.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It can include the hexadecimal digits 0-9, A-F, and a-f.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This flag can be used only to parse integer values.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration provides the following composite styles, which include multiple <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> flags.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Composite NumberStyles value</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Includes members</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Includes the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> styles.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This is the default style used to parse integer values.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Includes the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, <ph id="ph5">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, and <ph id="ph6">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> styles.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Includes the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, and <ph id="ph5">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> styles.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Includes all styles except <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Includes all styles except <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Includes the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> styles.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Parsing and Unicode Digits</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The Unicode standard defines code points for digits in various writing systems.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, code points from U+0030 to U+0039 represent the basic Latin digits 0 through 9, code points from U+09E6 to U+09EF represent the Bangla digits 0 through 9, and code points from U+FF10 to U+FF19 represent the Fullwidth digits 0 through 9.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, the only numeric digits recognized by parsing methods are the basic Latin digits 0-9 with code points from U+0030 to U+0039.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If a numeric parsing method is passed a string that contains any other digits, the method throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Int32.Parse%2A?displayProperty=fullName&gt;</ph> method to parse strings that consist of digits in different writing systems.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>As the output from the example shows, the attempt to parse the basic Latin digits succeeds, but the attempt to parse the Fullwidth, Arabic-Indic, and Bangla digits fails.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Parsing.Numbers#3<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_CLR/parsing.numbers/cs/unicode1.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Parsing.Numbers#3<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_CLR/parsing.numbers/vb/unicode1.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Parsing Strings<ept id="p1">](../../../docs/standard/base-types/parsing-strings.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Formatting Types<ept id="p1">](../../../docs/standard/base-types/formatting-types.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>