<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="servicehost.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3102ae8d8c28be43883eeaff6c4f829b355384a7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\configure-apps\file-schema\wcf-directive\servicehost.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb2c45031fbeaccab4ca7da1ffa64f1b666e353a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3275b8b2078a0f043ea0be61abc6e6f9c4e7c5d8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\@</ph>ServiceHost</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Associates the factory used to produce the service host with the service to be hosted and other programming aspects required to access or compile the hosting code provided in the .svc file.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Attributes</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Service</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The CLR type name of the service hosted.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This should be a qualified name of a type that implements one or more of the service contacts.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Factory</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The CLR type name of the service host factory used to instantiate the service host.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This attribute is optional.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If unspecified, the default <ph id="ph1">&lt;xref:System.ServiceModel.Activation.ServiceHostFactory&gt;</ph> is used, which returns an instance of <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Debug</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Indicates whether the Windows Communication Foundation (WCF) service should be compiled with debug symbols.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the WCF service should be compiled with debug symbols; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Language</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specifies the language used when compiling all the inline code within file (.svc).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The values can represent any .NET-supported language, including C#, VB, and JS, which refer to C#, Visual Basic .NET, and JScript .NET, respectively.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This attribute is optional.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CodeBehind</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Specifies the source file that implements the XML Web service, when the class that implements the XML Web service does not reside in the same file and has not been compiled into an assembly and placed in the \Bin directory.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> used to host the service is a point of extensibility within the Windows Communication Foundation (WCF) programming model.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A factory pattern is used to instantiate the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> because it is, potentially, a polymorphic type that the hosting environment should not instantiate directly.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The default implementation uses <ph id="ph1">&lt;xref:System.ServiceModel.Activation.ServiceHostFactory&gt;</ph> to create an instance of <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>But you can provide your own factory (one that returns your derived host) by specifying the CLR type name of your factory implementation in the <bpt id="p1">[</bpt><ph id="ph1">\@</ph>ServiceHost<ept id="p1">](../../../../../docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md)</ept> directive.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To use you own custom service host factory instead of the default factory, just provide the type name in the <bpt id="p1">[</bpt><ph id="ph1">@ServiceHost</ph><ept id="p1">](../../../../../docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md)</ept> directive as follows:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Keep the factory implementations as light as possible.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you have lots of custom logic, your code is more reusable if you put that logic inside your host instead of inside the factory.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, to enable an AJAX-enabled endpoint for <ph id="ph1">`MyService`</ph>, specify the <ph id="ph2">&lt;xref:System.ServiceModel.Activation.WebScriptServiceHostFactory&gt;</ph> for the value of the <ph id="ph3">`Factory`</ph> attribute, instead of the default <ph id="ph4">&lt;xref:System.ServiceModel.Activation.ServiceHostFactory&gt;</ph>, in the <bpt id="p1">[</bpt><ph id="ph5">@ServiceHost</ph><ept id="p1">](../../../../../docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md)</ept> directive as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom Service Host<ept id="p1">](../../../../../docs/framework/wcf/samples/custom-service-host.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>