{"content":"---\ntitle: \"COR_GC_REFERENCE Structure\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"COR_GC_REFERENCE\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_GC_REFERENCE\"\nhelpviewer_keywords: \n  - \"COR_GC_REFERENCE structure [.NET Framework debugging]\"\nms.assetid: 162e8179-0cd4-4110-8f06-5f387698bd62\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# COR_GC_REFERENCE Structure\nContains information about an object that is to be garbage-collected.  \n  \n## Syntax  \n  \n```  \ntypedef struct _COR_GC_REFERENCE {  \n    ICorDebugAppDomain *domain;   \n    ICorDebugValue *location;  \n    CorGCReferenceType type;  \n    UINT64 extraData;  \n} COR_GC_REFERENCE;  \n```  \n  \n## Members  \n  \n|Member|Description|  \n|------------|-----------------|  \n|`domain`|A pointer to the application domain to which the handle or object belongs. Its value may be `null`.|  \n|`location`|Either an ICorDebugValue or an ICorDebugReferenceValue interface that corresponds to the object to be garbage-collected.|  \n|`type`|A [CorGCReferenceType](../../../../docs/framework/unmanaged-api/debugging/corgcreferencetype-enumeration.md) enumeration value that indicates where the root came from. For more information, see the Remarks section.|  \n|`extraData`|Additional data about the object to be garbage-collected. This information depends on the source of the object, as indicated by the `type` field. For more information, see the Remarks section.|  \n  \n## Remarks  \n The `type` field is a [CorGCReferenceType](../../../../docs/framework/unmanaged-api/debugging/corgcreferencetype-enumeration.md) enumeration value that indicates where the reference came from. A particular `COR_GC_REFERENCE` value can reflect any of the following kinds of managed objects:  \n  \n-   Objects from all managed stacks (`CorGCReferenceType.CorReferenceStack`). This includes live references in managed code, as well as objects created by the common language runtime.  \n  \n-   Objects from the handle table (`CorGCReferenceType.CorHandle*`). This includes strong references (`HNDTYPE_STRONG` and `HNDTYPE_REFCOUNT`) and static variables in a module.  \n  \n-   Objects from the finalizer queue (`CorGCReferenceType.CorReferenceFinalizer`). The finalizer queue roots objects until the finalizer has run.  \n  \n The `extraData` field contains extra data depending on the source (or type) of the reference. Possible values are:  \n  \n-   `DependentSource`. If the `type` is `CorGCREferenceType.CorHandleStrongDependent`, this field is the object that, if alive, roots the object to be garbage-collected at `COR_GC_REFERENCE.Location`.  \n  \n-   `RefCount`. If the `type` is `CorGCREferenceType.CorHandleStrongRefCount`, this field is the reference count of the handle.  \n  \n-   `Size`. If the `type` is `CorGCREferenceType.CorHandleStrongSizedByref`, this field is the last size of the object tree for which the garbage collector calculated the object roots. Note that this calculation is not necessarily up to date.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]  \n  \n## See also\n\n- [Debugging Structures](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)\n- [Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)\n","nodes":[{"pos":[4,384],"embed":true,"restype":"x-metadata","content":"title: \"COR_GC_REFERENCE Structure\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"COR_GC_REFERENCE\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"COR_GC_REFERENCE\"\nhelpviewer_keywords: \n  - \"COR_GC_REFERENCE structure [.NET Framework debugging]\"\nms.assetid: 162e8179-0cd4-4110-8f06-5f387698bd62\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"COR_GC_REFERENCE Structure","nodes":[{"pos":[0,26],"content":"COR_GC_REFERENCE Structure","nodes":[{"content":"COR_GC_REFERENCE Structure","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[391,417],"content":"COR_GC_REFERENCE Structure","linkify":"COR_GC_REFERENCE Structure","nodes":[{"content":"COR_GC_REFERENCE Structure","pos":[0,26]}]},{"content":"Contains information about an object that is to be garbage-collected.","pos":[418,487]},{"pos":[496,502],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[707,714],"content":"Members","linkify":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"content":"Member","pos":[721,727]},{"content":"Description","pos":[728,739]},{"content":"A pointer to the application domain to which the handle or object belongs.","pos":[788,862]},{"content":"Its value may be <ph id=\"ph1\">`null`</ph>.","pos":[863,887],"source":" Its value may be `null`."},{"content":"Either an ICorDebugValue or an ICorDebugReferenceValue interface that corresponds to the object to be garbage-collected.","pos":[903,1023]},{"content":"A <bpt id=\"p1\">[</bpt>CorGCReferenceType<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/corgcreferencetype-enumeration.md)</ept> enumeration value that indicates where the root came from.","pos":[1035,1202],"source":"A [CorGCReferenceType](../../../../docs/framework/unmanaged-api/debugging/corgcreferencetype-enumeration.md) enumeration value that indicates where the root came from."},{"content":"For more information, see the Remarks section.","pos":[1203,1249]},{"content":"Additional data about the object to be garbage-collected.","pos":[1266,1323]},{"content":"This information depends on the source of the object, as indicated by the <ph id=\"ph1\">`type`</ph> field.","pos":[1324,1411],"source":" This information depends on the source of the object, as indicated by the `type` field."},{"content":"For more information, see the Remarks section.","pos":[1412,1458]},{"pos":[1468,1475],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`type`</ph> field is a <bpt id=\"p1\">[</bpt>CorGCReferenceType<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/corgcreferencetype-enumeration.md)</ept> enumeration value that indicates where the reference came from.","pos":[1479,1671],"source":"The `type` field is a [CorGCReferenceType](../../../../docs/framework/unmanaged-api/debugging/corgcreferencetype-enumeration.md) enumeration value that indicates where the reference came from."},{"content":"A particular <ph id=\"ph1\">`COR_GC_REFERENCE`</ph> value can reflect any of the following kinds of managed objects:","pos":[1672,1768],"source":" A particular `COR_GC_REFERENCE` value can reflect any of the following kinds of managed objects:"},{"content":"Objects from all managed stacks (<ph id=\"ph1\">`CorGCReferenceType.CorReferenceStack`</ph>).","pos":[1778,1851],"source":"Objects from all managed stacks (`CorGCReferenceType.CorReferenceStack`)."},{"content":"This includes live references in managed code, as well as objects created by the common language runtime.","pos":[1852,1957]},{"content":"Objects from the handle table (<ph id=\"ph1\">`CorGCReferenceType.CorHandle*`</ph>).","pos":[1967,2031],"source":"Objects from the handle table (`CorGCReferenceType.CorHandle*`)."},{"content":"This includes strong references (<ph id=\"ph1\">`HNDTYPE_STRONG`</ph> and <ph id=\"ph2\">`HNDTYPE_REFCOUNT`</ph>) and static variables in a module.","pos":[2032,2139],"source":" This includes strong references (`HNDTYPE_STRONG` and `HNDTYPE_REFCOUNT`) and static variables in a module."},{"content":"Objects from the finalizer queue (<ph id=\"ph1\">`CorGCReferenceType.CorReferenceFinalizer`</ph>).","pos":[2149,2227],"source":"Objects from the finalizer queue (`CorGCReferenceType.CorReferenceFinalizer`)."},{"content":"The finalizer queue roots objects until the finalizer has run.","pos":[2228,2290]},{"content":"The <ph id=\"ph1\">`extraData`</ph> field contains extra data depending on the source (or type) of the reference.","pos":[2297,2390],"source":"The `extraData` field contains extra data depending on the source (or type) of the reference."},{"content":"Possible values are:","pos":[2391,2411]},{"content":"<ph id=\"ph1\">`DependentSource`</ph>.","pos":[2421,2439],"source":"`DependentSource`."},{"content":"If the <ph id=\"ph1\">`type`</ph> is <ph id=\"ph2\">`CorGCREferenceType.CorHandleStrongDependent`</ph>, this field is the object that, if alive, roots the object to be garbage-collected at <ph id=\"ph3\">`COR_GC_REFERENCE.Location`</ph>.","pos":[2440,2617],"source":" If the `type` is `CorGCREferenceType.CorHandleStrongDependent`, this field is the object that, if alive, roots the object to be garbage-collected at `COR_GC_REFERENCE.Location`."},{"content":"<ph id=\"ph1\">`RefCount`</ph>.","pos":[2627,2638],"source":"`RefCount`."},{"content":"If the <ph id=\"ph1\">`type`</ph> is <ph id=\"ph2\">`CorGCREferenceType.CorHandleStrongRefCount`</ph>, this field is the reference count of the handle.","pos":[2639,2750],"source":" If the `type` is `CorGCREferenceType.CorHandleStrongRefCount`, this field is the reference count of the handle."},{"content":"<ph id=\"ph1\">`Size`</ph>.","pos":[2760,2767],"source":"`Size`."},{"content":"If the <ph id=\"ph1\">`type`</ph> is <ph id=\"ph2\">`CorGCREferenceType.CorHandleStrongSizedByref`</ph>, this field is the last size of the object tree for which the garbage collector calculated the object roots.","pos":[2768,2940],"source":" If the `type` is `CorGCREferenceType.CorHandleStrongSizedByref`, this field is the last size of the object tree for which the garbage collector calculated the object roots."},{"content":"Note that this calculation is not necessarily up to date.","pos":[2941,2998]},{"pos":[3007,3019],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3023,3127],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3134,3170],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[3177,3202],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[3209,3317],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v45plus](../../../../includes/net-current-v45plus-md.md)]"},{"pos":[3326,3334],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3338,3436],"content":"<bpt id=\"p1\">[</bpt>Debugging Structures<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)</ept>","source":"[Debugging Structures](../../../../docs/framework/unmanaged-api/debugging/debugging-structures.md)"},{"pos":[3439,3511],"content":"<bpt id=\"p1\">[</bpt>Debugging<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/index.md)</ept>","source":"[Debugging](../../../../docs/framework/unmanaged-api/debugging/index.md)"}]}