{"content":"---\ntitle: \"Loading DataSet Schema Information from XML | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nms.assetid: 43dfb23b-5cef-46f2-8d87-78f0fba1eb8c\ncaps.latest.revision: 4\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# Loading DataSet Schema Information from XML\nThe schema of a <xref:System.Data.DataSet> (its tables, columns, relations, and constraints) can be defined programmatically, created by the **Fill** or **FillSchema** methods of a <xref:System.Data.Common.DataAdapter>, or loaded from an XML document. To load **DataSet** schema information from an XML document, you can use either the **ReadXmlSchema** or the **InferXmlSchema** method of the **DataSet**. **ReadXmlSchema** allows you to load or infer **DataSet** schema information from the document containing XML Schema definition language (XSD) schema, or an XML document with inline XML Schema. **InferXmlSchema** allows you to infer the schema from the XML document while ignoring certain XML namespaces that you specify.  \n  \n> [!NOTE]\n>  Table ordering in a **DataSet** might not be preserved when you use Web services or XML serialization to transfer a **DataSet** that was created in-memory by using XSD constructs (such as nested relations). Therefore, the recipient of the **DataSet** should not depend on table ordering in this case. However, table ordering is always preserved if the schema of the **DataSet** being transferred was read from XSD files, instead of being created in-memory.  \n  \n## ReadXmlSchema  \n To load the schema of a **DataSet** from an XML document without loading any data, you can use the **ReadXmlSchema** method of the **DataSet**. **ReadXmlSchema** creates **DataSet** schema defined using XML Schema definition language (XSD) schema.  \n  \n The **ReadXmlSchema** method takes a single argument of a file name, a stream, or an **XmlReader** containing the XML document to be loaded. The XML document can contain only schema, or can contain schema inline with XML elements containing data. For details about writing inline schema as XML Schema, see [Deriving DataSet Relational Structure from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md).  \n  \n If the XML document passed to **ReadXmlSchema** contains no inline schema information, **ReadXmlSchema** will infer the schema from the elements in the XML document. If the **DataSet** already contains a schema, the current schema will be extended by adding new tables if they do not already exist. New columns will not be added to added to existing tables. If a column being added already exists in the **DataSet** but has an incompatible type with the column found in the XML, an exception is thrown. For details about how **ReadXmlSchema** infers a schema from an XML document, see [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md).  \n  \n Although **ReadXmlSchema** loads or infers only the schema of a **DataSet**, the **ReadXml** method of the **DataSet** loads or infers both the schema and the data contained in the XML document. For more information, see [Loading a DataSet from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md).  \n  \n The following code examples show how to load a **DataSet** schema from an XML document or stream. The first example shows an XML Schema file name being passed to the **ReadXmlSchema** method. The second example shows a **System.IO.StreamReader**.  \n  \n```vb  \nDim dataSet As DataSet = New DataSet  \ndataSet.ReadXmlSchema(\"schema.xsd\")  \n```  \n  \n```csharp  \nDataSet dataSet = new DataSet();  \ndataSet.ReadXmlSchema(\"schema.xsd\");  \n```  \n  \n```vb  \nDim xmlStream As System.IO.StreamReader = New System.IO.StreamReader (\"schema.xsd\");  \nDim dataSet As DataSet = New DataSet  \ndataSet.ReadXmlSchema(xmlStream)  \nxmlStream.Close()  \n```  \n  \n```csharp  \nSystem.IO.StreamReader xmlStream = new System.IO.StreamReader(\"schema.xsd\");  \nDataSet dataSet = new DataSet();  \ndataSet.ReadXmlSchema(xmlStream);  \nxmlStream.Close();  \n```  \n  \n## InferXmlSchema  \n You can also instruct the **DataSet** to infer its schema from an XML document using the **InferXmlSchema** method of the **DataSet**. **InferXmlSchema** functions the same as do both **ReadXml** with an **XmlReadMode** of **InferSchema** (loads data as well as infers schema), and **ReadXmlSchema** if the document being read contains no inline schema. However, **InferXmlSchema** provides the additional capability of allowing you to specify particular XML namespaces to be ignored when the schema is inferred. **InferXmlSchema** takes two required arguments: the location of the XML document, specified by a file name, a stream, or an **XmlReader**; and a string array of XML namespaces to be ignored by the operation.  \n  \n For example, consider the following XML:  \n  \n```  \n<NewDataSet xmlns:od=\"urn:schemas-microsoft-com:officedata\">  \n<Categories>  \n  <CategoryID od:adotype=\"3\">1</CategoryID>   \n  <CategoryName od:maxLength=\"15\" od:adotype=\"130\">Beverages</CategoryName>   \n  <Description od:adotype=\"203\">Soft drinks and teas</Description>   \n</Categories>  \n<Products>  \n  <ProductID od:adotype=\"20\">1</ProductID>   \n  <ReorderLevel od:adotype=\"3\">10</ReorderLevel>   \n  <Discontinued od:adotype=\"11\">0</Discontinued>   \n</Products>  \n</NewDataSet>  \n```  \n  \n Because of the attributes specified for the elements in the preceding XML document, both the **ReadXmlSchema** method and the **ReadXml** method with an **XmlReadMode** of **InferSchema** would create tables for every element in the document: **Categories**, **CategoryID**, **CategoryName**, **Description**, **Products**, **ProductID**, **ReorderLevel**, and **Discontinued**. (For more information, see [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md).) However, a more appropriate structure would be to create only the **Categories** and **Products** tables, and then to create **CategoryID**, **CategoryName**, and **Description** columns in the **Categories** table, and **ProductID**, **ReorderLevel**, and **Discontinued** columns in the **Products** table. To ensure that the inferred schema ignores the attributes specified in the XML elements, use the **InferXmlSchema** method and specify the XML namespace for **officedata** to be ignored, as shown in the following example.  \n  \n```vb  \nDim dataSet As DataSet = New DataSet  \ndataSet.InferXmlSchema(\"input_od.xml\", New String() {\"urn:schemas-microsoft-com:officedata\"})  \n```  \n  \n```csharp  \nDataSet dataSet = new DataSet();  \ndataSet.InferXmlSchema(\"input_od.xml\", new string[] \"urn:schemas-microsoft-com:officedata\");  \n```  \n  \n## See Also  \n [Using XML in a DataSet](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)   \n [Deriving DataSet Relational Structure from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)   \n [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)   \n [Loading a DataSet from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md)   \n [DataSets, DataTables, and DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)   \n [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)","nodes":[{"pos":[12,72],"content":"Loading DataSet Schema Information from XML | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Loading DataSet Schema Information from XML | Microsoft Docs","pos":[0,60]}]},{"pos":[381,424],"content":"Loading DataSet Schema Information from XML","linkify":"Loading DataSet Schema Information from XML","nodes":[{"content":"Loading DataSet Schema Information from XML","pos":[0,43]}]},{"content":"The schema of a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> (its tables, columns, relations, and constraints) can be defined programmatically, created by the <bpt id=\"p1\">**</bpt>Fill<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>FillSchema<ept id=\"p2\">**</ept> methods of a <ph id=\"ph2\">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>, or loaded from an XML document.","pos":[425,676],"source":"The schema of a <xref:System.Data.DataSet> (its tables, columns, relations, and constraints) can be defined programmatically, created by the **Fill** or **FillSchema** methods of a <xref:System.Data.Common.DataAdapter>, or loaded from an XML document."},{"content":"To load <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> schema information from an XML document, you can use either the <bpt id=\"p2\">**</bpt>ReadXmlSchema<ept id=\"p2\">**</ept> or the <bpt id=\"p3\">**</bpt>InferXmlSchema<ept id=\"p3\">**</ept> method of the <bpt id=\"p4\">**</bpt>DataSet<ept id=\"p4\">**</ept>.","pos":[677,831],"source":" To load **DataSet** schema information from an XML document, you can use either the **ReadXmlSchema** or the **InferXmlSchema** method of the **DataSet**."},{"content":"<bpt id=\"p1\">**</bpt>ReadXmlSchema<ept id=\"p1\">**</ept> allows you to load or infer <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> schema information from the document containing XML Schema definition language (XSD) schema, or an XML document with inline XML Schema.","pos":[832,1025],"source":"**ReadXmlSchema** allows you to load or infer **DataSet** schema information from the document containing XML Schema definition language (XSD) schema, or an XML document with inline XML Schema."},{"content":"<bpt id=\"p1\">**</bpt>InferXmlSchema<ept id=\"p1\">**</ept> allows you to infer the schema from the XML document while ignoring certain XML namespaces that you specify.","pos":[1026,1153],"source":"**InferXmlSchema** allows you to infer the schema from the XML document while ignoring certain XML namespaces that you specify."},{"pos":[1161,1628],"content":"[!NOTE]\n Table ordering in a **DataSet** might not be preserved when you use Web services or XML serialization to transfer a **DataSet** that was created in-memory by using XSD constructs (such as nested relations). Therefore, the recipient of the **DataSet** should not depend on table ordering in this case. However, table ordering is always preserved if the schema of the **DataSet** being transferred was read from XSD files, instead of being created in-memory.","leadings":["","> "],"nodes":[{"content":" Table ordering in a **DataSet** might not be preserved when you use Web services or XML serialization to transfer a **DataSet** that was created in-memory by using XSD constructs (such as nested relations). Therefore, the recipient of the **DataSet** should not depend on table ordering in this case. However, table ordering is always preserved if the schema of the **DataSet** being transferred was read from XSD files, instead of being created in-memory.","pos":[8,465],"nodes":[{"content":"Table ordering in a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> might not be preserved when you use Web services or XML serialization to transfer a <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> that was created in-memory by using XSD constructs (such as nested relations).","pos":[1,207],"source":" Table ordering in a **DataSet** might not be preserved when you use Web services or XML serialization to transfer a **DataSet** that was created in-memory by using XSD constructs (such as nested relations)."},{"content":"Therefore, the recipient of the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> should not depend on table ordering in this case.","pos":[208,301],"source":" Therefore, the recipient of the **DataSet** should not depend on table ordering in this case."},{"content":"However, table ordering is always preserved if the schema of the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> being transferred was read from XSD files, instead of being created in-memory.","pos":[302,457],"source":" However, table ordering is always preserved if the schema of the **DataSet** being transferred was read from XSD files, instead of being created in-memory."}]}]},{"pos":[1637,1650],"content":"ReadXmlSchema","linkify":"ReadXmlSchema","nodes":[{"content":"ReadXmlSchema","pos":[0,13]}]},{"content":"To load the schema of a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> from an XML document without loading any data, you can use the <bpt id=\"p2\">**</bpt>ReadXmlSchema<ept id=\"p2\">**</ept> method of the <bpt id=\"p3\">**</bpt>DataSet<ept id=\"p3\">**</ept>.","pos":[1654,1797],"source":"To load the schema of a **DataSet** from an XML document without loading any data, you can use the **ReadXmlSchema** method of the **DataSet**."},{"content":"<bpt id=\"p1\">**</bpt>ReadXmlSchema<ept id=\"p1\">**</ept> creates <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept> schema defined using XML Schema definition language (XSD) schema.","pos":[1798,1901],"source":"**ReadXmlSchema** creates **DataSet** schema defined using XML Schema definition language (XSD) schema."},{"content":"The <bpt id=\"p1\">**</bpt>ReadXmlSchema<ept id=\"p1\">**</ept> method takes a single argument of a file name, a stream, or an <bpt id=\"p2\">**</bpt>XmlReader<ept id=\"p2\">**</ept> containing the XML document to be loaded.","pos":[1908,2048],"source":"The **ReadXmlSchema** method takes a single argument of a file name, a stream, or an **XmlReader** containing the XML document to be loaded."},{"content":"The XML document can contain only schema, or can contain schema inline with XML elements containing data.","pos":[2049,2154]},{"content":"For details about writing inline schema as XML Schema, see <bpt id=\"p1\">[</bpt>Deriving DataSet Relational Structure from XML Schema (XSD)<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)</ept>.","pos":[2155,2407],"source":" For details about writing inline schema as XML Schema, see [Deriving DataSet Relational Structure from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)."},{"content":"If the XML document passed to <bpt id=\"p1\">**</bpt>ReadXmlSchema<ept id=\"p1\">**</ept> contains no inline schema information, <bpt id=\"p2\">**</bpt>ReadXmlSchema<ept id=\"p2\">**</ept> will infer the schema from the elements in the XML document.","pos":[2414,2579],"source":"If the XML document passed to **ReadXmlSchema** contains no inline schema information, **ReadXmlSchema** will infer the schema from the elements in the XML document."},{"content":"If the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> already contains a schema, the current schema will be extended by adding new tables if they do not already exist.","pos":[2580,2712],"source":" If the **DataSet** already contains a schema, the current schema will be extended by adding new tables if they do not already exist."},{"content":"New columns will not be added to added to existing tables.","pos":[2713,2771]},{"content":"If a column being added already exists in the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> but has an incompatible type with the column found in the XML, an exception is thrown.","pos":[2772,2916],"source":" If a column being added already exists in the **DataSet** but has an incompatible type with the column found in the XML, an exception is thrown."},{"content":"For details about how <bpt id=\"p1\">**</bpt>ReadXmlSchema<ept id=\"p1\">**</ept> infers a schema from an XML document, see <bpt id=\"p2\">[</bpt>Inferring DataSet Relational Structure from XML<ept id=\"p2\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)</ept>.","pos":[2917,3170],"source":" For details about how **ReadXmlSchema** infers a schema from an XML document, see [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)."},{"content":"Although <bpt id=\"p1\">**</bpt>ReadXmlSchema<ept id=\"p1\">**</ept> loads or infers only the schema of a <bpt id=\"p2\">**</bpt>DataSet<ept id=\"p2\">**</ept>, the <bpt id=\"p3\">**</bpt>ReadXml<ept id=\"p3\">**</ept> method of the <bpt id=\"p4\">**</bpt>DataSet<ept id=\"p4\">**</ept> loads or infers both the schema and the data contained in the XML document.","pos":[3177,3371],"source":"Although **ReadXmlSchema** loads or infers only the schema of a **DataSet**, the **ReadXml** method of the **DataSet** loads or infers both the schema and the data contained in the XML document."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Loading a DataSet from XML<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md)</ept>.","pos":[3372,3527],"source":" For more information, see [Loading a DataSet from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md)."},{"content":"The following code examples show how to load a <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> schema from an XML document or stream.","pos":[3534,3631],"source":"The following code examples show how to load a **DataSet** schema from an XML document or stream."},{"content":"The first example shows an XML Schema file name being passed to the <bpt id=\"p1\">**</bpt>ReadXmlSchema<ept id=\"p1\">**</ept> method.","pos":[3632,3725],"source":" The first example shows an XML Schema file name being passed to the **ReadXmlSchema** method."},{"content":"The second example shows a <bpt id=\"p1\">**</bpt>System.IO.StreamReader<ept id=\"p1\">**</ept>.","pos":[3726,3780],"source":" The second example shows a **System.IO.StreamReader**."},{"pos":[4368,4382],"content":"InferXmlSchema","linkify":"InferXmlSchema","nodes":[{"content":"InferXmlSchema","pos":[0,14]}]},{"content":"You can also instruct the <bpt id=\"p1\">**</bpt>DataSet<ept id=\"p1\">**</ept> to infer its schema from an XML document using the <bpt id=\"p2\">**</bpt>InferXmlSchema<ept id=\"p2\">**</ept> method of the <bpt id=\"p3\">**</bpt>DataSet<ept id=\"p3\">**</ept>.","pos":[4386,4520],"source":"You can also instruct the **DataSet** to infer its schema from an XML document using the **InferXmlSchema** method of the **DataSet**."},{"content":"<bpt id=\"p1\">**</bpt>InferXmlSchema<ept id=\"p1\">**</ept> functions the same as do both <bpt id=\"p2\">**</bpt>ReadXml<ept id=\"p2\">**</ept> with an <bpt id=\"p3\">**</bpt>XmlReadMode<ept id=\"p3\">**</ept> of <bpt id=\"p4\">**</bpt>InferSchema<ept id=\"p4\">**</ept> (loads data as well as infers schema), and <bpt id=\"p5\">**</bpt>ReadXmlSchema<ept id=\"p5\">**</ept> if the document being read contains no inline schema.","pos":[4521,4739],"source":"**InferXmlSchema** functions the same as do both **ReadXml** with an **XmlReadMode** of **InferSchema** (loads data as well as infers schema), and **ReadXmlSchema** if the document being read contains no inline schema."},{"content":"However, <bpt id=\"p1\">**</bpt>InferXmlSchema<ept id=\"p1\">**</ept> provides the additional capability of allowing you to specify particular XML namespaces to be ignored when the schema is inferred.","pos":[4740,4898],"source":" However, **InferXmlSchema** provides the additional capability of allowing you to specify particular XML namespaces to be ignored when the schema is inferred."},{"content":"<bpt id=\"p1\">**</bpt>InferXmlSchema<ept id=\"p1\">**</ept> takes two required arguments: the location of the XML document, specified by a file name, a stream, or an <bpt id=\"p2\">**</bpt>XmlReader<ept id=\"p2\">**</ept>; and a string array of XML namespaces to be ignored by the operation.","pos":[4899,5107],"source":"**InferXmlSchema** takes two required arguments: the location of the XML document, specified by a file name, a stream, or an **XmlReader**; and a string array of XML namespaces to be ignored by the operation."},{"content":"For example, consider the following XML:","pos":[5114,5154]},{"content":"Because of the attributes specified for the elements in the preceding XML document, both the <bpt id=\"p1\">**</bpt>ReadXmlSchema<ept id=\"p1\">**</ept> method and the <bpt id=\"p2\">**</bpt>ReadXml<ept id=\"p2\">**</ept> method with an <bpt id=\"p3\">**</bpt>XmlReadMode<ept id=\"p3\">**</ept> of <bpt id=\"p4\">**</bpt>InferSchema<ept id=\"p4\">**</ept> would create tables for every element in the document: <bpt id=\"p5\">**</bpt>Categories<ept id=\"p5\">**</ept>, <bpt id=\"p6\">**</bpt>CategoryID<ept id=\"p6\">**</ept>, <bpt id=\"p7\">**</bpt>CategoryName<ept id=\"p7\">**</ept>, <bpt id=\"p8\">**</bpt>Description<ept id=\"p8\">**</ept>, <bpt id=\"p9\">**</bpt>Products<ept id=\"p9\">**</ept>, <bpt id=\"p10\">**</bpt>ProductID<ept id=\"p10\">**</ept>, <bpt id=\"p11\">**</bpt>ReorderLevel<ept id=\"p11\">**</ept>, and <bpt id=\"p12\">**</bpt>Discontinued<ept id=\"p12\">**</ept>.","pos":[5659,6037],"source":"Because of the attributes specified for the elements in the preceding XML document, both the **ReadXmlSchema** method and the **ReadXml** method with an **XmlReadMode** of **InferSchema** would create tables for every element in the document: **Categories**, **CategoryID**, **CategoryName**, **Description**, **Products**, **ProductID**, **ReorderLevel**, and **Discontinued**."},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>Inferring DataSet Relational Structure from XML<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)</ept>.) However, a more appropriate structure would be to create only the <bpt id=\"p2\">**</bpt>Categories<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>Products<ept id=\"p3\">**</ept> tables, and then to create <bpt id=\"p4\">**</bpt>CategoryID<ept id=\"p4\">**</ept>, <bpt id=\"p5\">**</bpt>CategoryName<ept id=\"p5\">**</ept>, and <bpt id=\"p6\">**</bpt>Description<ept id=\"p6\">**</ept> columns in the <bpt id=\"p7\">**</bpt>Categories<ept id=\"p7\">**</ept> table, and <bpt id=\"p8\">**</bpt>ProductID<ept id=\"p8\">**</ept>, <bpt id=\"p9\">**</bpt>ReorderLevel<ept id=\"p9\">**</ept>, and <bpt id=\"p10\">**</bpt>Discontinued<ept id=\"p10\">**</ept> columns in the <bpt id=\"p11\">**</bpt>Products<ept id=\"p11\">**</ept> table.","pos":[6038,6546],"source":" (For more information, see [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md).) However, a more appropriate structure would be to create only the **Categories** and **Products** tables, and then to create **CategoryID**, **CategoryName**, and **Description** columns in the **Categories** table, and **ProductID**, **ReorderLevel**, and **Discontinued** columns in the **Products** table."},{"content":"To ensure that the inferred schema ignores the attributes specified in the XML elements, use the <bpt id=\"p1\">**</bpt>InferXmlSchema<ept id=\"p1\">**</ept> method and specify the XML namespace for <bpt id=\"p2\">**</bpt>officedata<ept id=\"p2\">**</ept> to be ignored, as shown in the following example.","pos":[6547,6768],"source":" To ensure that the inferred schema ignores the attributes specified in the XML elements, use the **InferXmlSchema** method and specify the XML namespace for **officedata** to be ignored, as shown in the following example."},{"pos":[7080,7088],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Using XML in a DataSet<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md)</ept><ph id=\"ph1\"> </ph>","pos":[7092,7213],"source":"[Using XML in a DataSet](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/using-xml-in-a-dataset.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Deriving DataSet Relational Structure from XML Schema (XSD)<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md)</ept><ph id=\"ph1\"> </ph>","pos":[7216,7410],"source":" [Deriving DataSet Relational Structure from XML Schema (XSD)](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/deriving-dataset-relational-structure-from-xml-schema-xsd.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Inferring DataSet Relational Structure from XML<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md)</ept><ph id=\"ph1\"> </ph>","pos":[7413,7585],"source":" [Inferring DataSet Relational Structure from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/inferring-dataset-relational-structure-from-xml.md) "},{"content":"<bpt id=\"p1\"> [</bpt>Loading a DataSet from XML<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md)</ept><ph id=\"ph1\"> </ph>","pos":[7588,7718],"source":" [Loading a DataSet from XML](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/loading-a-dataset-from-xml.md) "},{"content":"<bpt id=\"p1\"> [</bpt>DataSets, DataTables, and DataViews<ept id=\"p1\">](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[7721,7839],"source":" [DataSets, DataTables, and DataViews](../../../../../docs/framework/data/adonet/dataset-datatable-dataview/index.md) "},{"content":"<bpt id=\"p1\"> [</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=217917)</ept>","pos":[7842,7946],"source":" [ADO.NET Managed Providers and DataSet Developer Center](http://go.microsoft.com/fwlink/?LinkId=217917)"}]}