<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37ca5a60ea2e5cc12718caf834762444bd985de2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\wpf-security-strategy-platform-security.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34068d5aa9fce38bc4a7239a8996f8fe67582cca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aef1e5300d57f471654d2bb0b70930a2c1454808</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WPF Security Strategy - Platform Security | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WPF Security Strategy - Platform Security</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>While              <ph id="ph1">[!INCLUDE[TLA#tla_wpf](../../../includes/tlasharptla-wpf-md.md)]</ph> provides a variety of security services, it also leverages the security features of the underlying platform, which includes the operating system, the              <ph id="ph2">[!INCLUDE[TLA2#tla_clr](../../../includes/tla2sharptla-clr-md.md)]</ph>, and              <ph id="ph3">[!INCLUDE[TLA2#tla_ie](../../../includes/tla2sharptla-ie-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>These layers combine to provide              <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> a strong, defense-in-depth security model that attempts to avoid any single point of failure, as shown in the following figure:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>WPF security illustration<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/wpf/media/windowplatformsecurity.PNG "</bpt>windowplatformsecurity<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The remainder of this topic discusses the features in each of these layers that pertain to              <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> specifically.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Operating System Security</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The minimum level of operating system that is required by                  <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> is                  <ph id="ph2">[!INCLUDE[TLA2#tla_winxpsp2](../../../includes/tla2sharptla-winxpsp2-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The core of                  <ph id="ph1">[!INCLUDE[TLA2#tla_winxpsp2](../../../includes/tla2sharptla-winxpsp2-md.md)]</ph> provides several security features that form the security foundation for all                  <ph id="ph2">[!INCLUDE[TLA2#tla_win](../../../includes/tla2sharptla-win-md.md)]</ph> applications, including those built with                  <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_longhorn](../../../includes/tlasharptla-longhorn-md.md)]</ph> incorporates the security features of                  <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> and extends them further.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This topic discusses the breadth of these security features that are important to                  <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph>, as well as how                  <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> integrates with them to provide further defense-in-depth.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Microsoft Windows XP Service Pack 2 (SP2)</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In addition to a general review and strengthening of                          <ph id="ph1">[!INCLUDE[TLA2#tla_win](../../../includes/tla2sharptla-win-md.md)]</ph>, there are three key features from                          <ph id="ph2">[!INCLUDE[TLA2#tla_winxpsp2](../../../includes/tla2sharptla-winxpsp2-md.md)]</ph> that we will discuss in this topic:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>/GS compilation</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_win_update](../../../includes/tlasharptla-win-update-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>/GS Compilation</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winxpsp2](../../../includes/tla2sharptla-winxpsp2-md.md)]</ph> provides protection by recompiling many core system libraries, including all of the                                  <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> dependencies such as the                                  <ph id="ph3">[!INCLUDE[TLA2#tla_clr](../../../includes/tla2sharptla-clr-md.md)]</ph>, to help mitigate buffer overruns.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This is achieved by using the /GS parameter with the C/C++ command-line compiler.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Although buffer overruns should be explicitly avoided, /GS compilation provides an example of a defense-in-depth against potential vulnerabilities that are inadvertently or maliciously created by them.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Historically, buffer overruns have been the cause of many high-impact security exploits.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A buffer overrun occurs when an attacker takes advantage of a code vulnerability that allows the injection of malicious code that writes past the boundaries of a buffer.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This then allows an attacker to hijack the process in which the code is executing by overwriting the return address of a function to cause the execution of the attacker's code.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The result is malicious code that executes arbitrary code with the same privileges as the hijacked process.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>At a high level, the /GS compiler flag protects against some potential buffer overruns by injecting a special security cookie to protect the return address of a function that has local string buffers.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>After a function returns, the security cookie is compared with its previous value.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the value has changed, a buffer overrun may have occurred and the process is stopped with an error condition.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Stopping the process prevents the execution of potentially malicious code.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See                                  <bpt id="p1">[</bpt>/GS (Buffer Security Check)<ept id="p1">](http://msdn.microsoft.com/library/8dbf701c.aspx)</ept> for more details.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> is compiled with the /GS flag to add yet another layer of defense to                                  <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Microsoft Windows Update Enhancements</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_win_update](../../../includes/tlasharptla-win-update-md.md)]</ph> was also improved in                                  <ph id="ph2">[!INCLUDE[TLA2#tla_winxpsp2](../../../includes/tla2sharptla-winxpsp2-md.md)]</ph> to simplify the process for downloading and installing updates.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>These changes significantly enhance security for                                  <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> customers by helping to ensure that their systems are up-to-date, particularly with respect to security updates.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Windows Vista</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> users on                          <ph id="ph2">[!INCLUDE[TLA#tla_longhorn](../../../includes/tlasharptla-longhorn-md.md)]</ph> will benefit from the operating system's additional security enhancements, including "Least-Privilege User Access", code integrity checks, and privilege isolation.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>User Account Control (UAC)</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Today,                                  <ph id="ph1">[!INCLUDE[TLA2#tla_win](../../../includes/tla2sharptla-win-md.md)]</ph> users tend to run with administrator privileges because many applications require them for either installation or execution, or both.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Being able to write default application settings to the Registry is one example.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Running with administrator privileges really means that applications execute from processes that are granted administrator privileges.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The security impact of this is that any malicious code that hijacks a process running with administrator privileges will automatically inherit those privileges, including access to critical system resources.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>One way to protect against this security threat is to run applications with the least amount of privileges that are required.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This is known as the principle of least privilege, and is a core feature of the                                  <ph id="ph1">[!INCLUDE[TLA#tla_longhorn](../../../includes/tlasharptla-longhorn-md.md)]</ph> operating system.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This feature is called User Account Control (UAC), and is used by                                  <ph id="ph1">[!INCLUDE[TLA#tla_longhorn](../../../includes/tlasharptla-longhorn-md.md)]</ph> UAC in two key ways:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To run most applications with UAC privileges by default, even if the user is an administrator; only applications that need administrator privileges will run with administrator privileges.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To run with administrative privileges, applications must be explicitly marked in either their application manifest or as an entry in security policy.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To provide compatibility solutions like virtualization.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, many applications try to write to restricted locations like C:\Program Files.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For applications executing under UAC, an alternative per-user location exists that does not require administrator privileges to write to.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For applications running under UAC, UAC virtualizes C:\Program Files so that applications who think they are writing to it are actually writing to the alternative, per-user location.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This kind of compatibility work enables the operating system to run many applications that couldn't previously run in UAC.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Code Integrity Checks</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_longhorn](../../../includes/tlasharptla-longhorn-md.md)]</ph> incorporates deeper code integrity checks to help prevent malicious code from being injected into system files or into the kernel at load/run time.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This goes beyond system file protection.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Limited Rights Process for Browser-Hosted Applications</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Browser-hosted                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> applications execute within the Internet zone sandbox.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> integration with                          <ph id="ph2">[!INCLUDE[TLA#tla_ie](../../../includes/tlasharptla-ie-md.md)]</ph> extends this protection with additional support.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Internet Explorer 6 Service Pack 2 and Internet Explorer 7 for XP</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> leverages operating system security by limiting process privileges for                                  <ph id="ph2">[!INCLUDE[TLA#tla_winfxwebapp#plural](../../../includes/tlasharptla-winfxwebappsharpplural-md.md)]</ph> for further protection.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Before a browser-hosted                                  <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> application is launched, the operating system creates a host process that removes unnecessary privileges from the process token.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Some examples of privileges that are removed include the ability to shut down the user's machine, load drivers, and read access to all files on the machine.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Internet Explorer 7 for Vista</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In                                  <ph id="ph1">[!INCLUDE[TLA#tla_ie7](../../../includes/tlasharptla-ie7-md.md)]</ph>,                                  <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> applications run in protected mode.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Specifically,                                  <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](../../../includes/tlasharptla-xbapsharpplural-md.md)]</ph> run with medium-level integrity.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Defense-In-Depth Layer</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Since                                  <ph id="ph1">[!INCLUDE[TLA#tla_winfxwebapp#plural](../../../includes/tlasharptla-winfxwebappsharpplural-md.md)]</ph> are generally sandboxed by the Internet zone permission set, removing these privileges does not harm                                  <ph id="ph2">[!INCLUDE[TLA#tla_winfxwebapp#plural](../../../includes/tlasharptla-winfxwebappsharpplural-md.md)]</ph> from a compatibility perspective.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Instead, an additional defense-in-depth layer is created; if a sandboxed application is able to exploit other layers and hijack the process, the process will still only have limited privileges.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See                                  <bpt id="p1">[</bpt>Using a Least-Privileged User Account<ept id="p1">](http://technet.microsoft.com/library/cc700846.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Common Language Runtime Security</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The                  <ph id="ph1">[!INCLUDE[TLA#tla_clr](../../../includes/tlasharptla-clr-md.md)]</ph> offers a number of key security benefits that include validation and verification,                  <ph id="ph2">[!INCLUDE[TLA#tla_cas](../../../includes/tlasharptla-cas-md.md)]</ph>, and the Security Critical Methodology.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Validation and Verification</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To provide assembly isolation and integrity, the                          <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../includes/tla2sharptla-clr-md.md)]</ph> uses a process of validation.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../includes/tla2sharptla-clr-md.md)]</ph> validation ensures that assemblies are isolated by validating their Portable Executable (PE) file format for addresses that point outside the assembly.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../includes/tla2sharptla-clr-md.md)]</ph> validation also validates the integrity of the metadata that is embedded within an assembly.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To ensure type safety, help prevent common security issues (e.g. buffer overruns), and enable sandboxing through sub-process isolation,                          <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../includes/tla2sharptla-clr-md.md)]</ph> security uses the concept of verification.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Managed applications are compiled into Microsoft Intermediate Language (MSIL).</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When methods in a managed application are executed, its MSIL is compiled into native code through Just-In-Time (JIT) compilation.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>JIT compilation includes a verification process that applies many safety and robustness rules that ensure code does not:</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Violate type contracts</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Introduce buffer overruns</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Wildly access memory.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Managed code that does not conform to verification rules is not allowed to execute, unless it is considered trusted code.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The advantage of verifiable code is a key reason why                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> builds on the                          <ph id="ph2">[!INCLUDE[TLA2#tla_winfx](../../../includes/tla2sharptla-winfx-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To the extent that verifiable code is used, the possibility of exploiting possible vulnerabilities is greatly lowered.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Code Access Security</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A client machine exposes a wide variety of resources that a managed application can have access to, including the file system, the Registry, printing services, the user interface, reflection, and environment variables.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Before a managed application can access any of the resources on a client machine, it must have                          <ph id="ph1">[!INCLUDE[TLA2#tla_winfx](../../../includes/tla2sharptla-winfx-md.md)]</ph><ph id="ph2">[!INCLUDE[TLA#tla_cas](../../../includes/tlasharptla-cas-md.md)]</ph> permission to do so.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A permission in                          <ph id="ph1">[!INCLUDE[TLA2#tla_cas](../../../includes/tla2sharptla-cas-md.md)]</ph> is a subclass of the                          <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>;                          <ph id="ph3">[!INCLUDE[TLA2#tla_cas](../../../includes/tla2sharptla-cas-md.md)]</ph> implements one subclass for each resource that managed applications can access.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The set of permissions that a managed application is granted by                          <ph id="ph1">[!INCLUDE[TLA2#tla_cas](../../../includes/tla2sharptla-cas-md.md)]</ph> when it starts executing is known as a permission set and is determined by evidence provided by the application.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> applications, the evidence that is provided is the location, or zone, from which the applications are launched.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_cas](../../../includes/tla2sharptla-cas-md.md)]</ph> identifies the following zones:</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>My Computer<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Applications launched from the client machine (Fully Trusted).</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Local Intranet<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Applications launched from the intranet.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>(Somewhat Trusted).</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Internet<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Applications launched from the Internet.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>(Least Trusted).</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Trusted Sites<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Applications identified by a user as being trusted.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>(Least Trusted).</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Untrusted Sites<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Applications identified by a user as being untrusted.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>(Untrusted).</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For each of these zones,                          <ph id="ph1">[!INCLUDE[TLA2#tla_cas](../../../includes/tla2sharptla-cas-md.md)]</ph> provides a predefined permission set that includes the permissions which matches the level of trust associated with each.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>These include:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FullTrust<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For applications launched from the                                  <bpt id="p1">**</bpt>My Computer<ept id="p1">**</ept> zone.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>All possible permissions are granted.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>LocalIntranet<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For applications launched from the                                  <bpt id="p1">**</bpt>Local Intranet<ept id="p1">**</ept> zone.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A subset of permissions are granted to provide moderate access to a client machine’s resources, including isolated storage, unrestricted UI access, unrestricted file dialogs, limited reflection, limited access to environment variables.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Permissions for critical resources like the Registry are not provided.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Internet<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For applications launched from the                                  <bpt id="p1">**</bpt>Internet<ept id="p1">**</ept> or                                  <bpt id="p2">**</bpt>Trusted Sites<ept id="p2">**</ept> zone.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A subset of permissions are granted to provided limited access to a client machine’s resources, including isolated storage, file open only, and limited UI.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Essentially, this permission sets isolates applications from the client machine.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Applications identified as being from the                          <bpt id="p1">**</bpt>Untrusted Sites<ept id="p1">**</ept> zone are granted no permissions by                          <ph id="ph1">[!INCLUDE[TLA2#tla_cas](../../../includes/tla2sharptla-cas-md.md)]</ph> at all.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Consequently, a predefined permission set does not exist for them.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The following figure illustrates the relationship between zones, permission sets, permissions, and resources.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>CAS permission sets<ept id="p1">]</ept><bpt id="p2">(../../../docs/framework/wpf/media/caspermissionsets.png "</bpt>CASPermissionSets<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The restrictions of the Internet zone security sandbox apply equally to any code that a                          <ph id="ph1">[!INCLUDE[TLA2#tla_winfxwebapp](../../../includes/tla2sharptla-winfxwebapp-md.md)]</ph> imports from a system library, including                          <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This ensures that every bit of the code is locked down, even                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Unfortunately, to be able to execute, a                          <ph id="ph1">[!INCLUDE[TLA2#tla_winfxwebapp](../../../includes/tla2sharptla-winfxwebapp-md.md)]</ph> needs to execute functionality that requires more permissions than those enabled by the Internet zone security sandbox.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Consider a                          <ph id="ph1">[!INCLUDE[TLA2#tla_winfxwebapp](../../../includes/tla2sharptla-winfxwebapp-md.md)]</ph> application that includes the following page:</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WPFPlatformSecuritySnippets#Permission<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_Wpf/WPFPlatformSecuritySnippets/CSharp/Page1.xaml.cs#permission)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WPFPlatformSecuritySnippets#Permission<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WPFPlatformSecuritySnippets/VisualBasic/Page1.xaml.vb#permission)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>To execute this                          <ph id="ph1">[!INCLUDE[TLA2#tla_winfxwebapp](../../../includes/tla2sharptla-winfxwebapp-md.md)]</ph>, the underlying                          <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> code must execute more functionality than is available to the calling                          <ph id="ph3">[!INCLUDE[TLA2#tla_winfxwebapp](../../../includes/tla2sharptla-winfxwebapp-md.md)]</ph>, including:</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Creating a window handle (hWnd) for rendering</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Dispatching messages</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Loading the Tahoma font</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>From a security point of view, allowing direct access to any of these operations from the sandboxed application would be catastrophic.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Fortunately,                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> caters to this situation by allowing these operations to execute with elevated privileges on behalf of the sandboxed application.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>While all                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> operations are checked against the limited Internet zone security permissions of the application domain of the                          <ph id="ph2">[!INCLUDE[TLA2#tla_winfxwebapp](../../../includes/tla2sharptla-winfxwebapp-md.md)]</ph>,                          <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> (as with other system libraries) is granted a permission set that includes all possible permissions</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This requires that                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> receives elevated privileges while preventing those privileges from being governed by the Internet zone permission set of the host application domain.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> does this by using the                          <bpt id="p1">**</bpt>Assert<ept id="p1">**</ept> method of a permission.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The following code shows how this happens.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>WPFPlatformSecuritySnippets#Permission<ept id="p2">](../../../samples/snippets/csharp/VS_Snippets_Wpf/WPFPlatformSecuritySnippets/CSharp/Page1.xaml.cs#permission)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>WPFPlatformSecuritySnippets#Permission<ept id="p4">](../../../samples/snippets/visualbasic/VS_Snippets_Wpf/WPFPlatformSecuritySnippets/VisualBasic/Page1.xaml.vb#permission)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The                          <bpt id="p1">**</bpt>Assert<ept id="p1">**</ept> essentially prevents the unlimited permissions required by                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> from being restricted by the Internet zone permissions of the                          <ph id="ph2">[!INCLUDE[TLA2#tla_winfxwebapp](../../../includes/tla2sharptla-winfxwebapp-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>From a platform perspective,                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> is responsible for using                          <bpt id="p1">**</bpt>Assert<ept id="p1">**</ept> correctly; an incorrect use of                          <bpt id="p2">**</bpt>Assert<ept id="p2">**</ept> could enable malicious code to elevate privileges.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Consequently, it is important then to only call                          <bpt id="p1">**</bpt>Assert<ept id="p1">**</ept> when needed, and to ensure that sandbox restrictions remain intact.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For example, sandboxed code is not allowed to open random files, but it is allowed to use fonts.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> enables sandboxed applications to use font functionality by calling                          <bpt id="p1">**</bpt>Assert<ept id="p1">**</ept>, and for                          <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> to read files known to contain those fonts on behalf of the sandboxed application.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>ClickOnce Deployment</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_clickonce](../../../includes/tlasharptla-clickonce-md.md)]</ph> is a comprehensive deployment technology that is included with                          <ph id="ph2">[!INCLUDE[TLA2#tla_winfx](../../../includes/tla2sharptla-winfx-md.md)]</ph>, and integrates with                          <ph id="ph3">[!INCLUDE[TLA#tla_visualstu](../../../includes/tlasharptla-visualstu-md.md)]</ph> (see                          <bpt id="p1">[</bpt>ClickOnce Deployment Overview<ept id="p1">](http://msdn.microsoft.com/library/142dbbz4.aspx)</ept> for detailed information).</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Standalone                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> applications can be deployed using                          <ph id="ph2">[!INCLUDE[TLA#tla_clickonce](../../../includes/tlasharptla-clickonce-md.md)]</ph>, while browser-hosted applications must be deployed with                          <ph id="ph3">[!INCLUDE[TLA2#tla_clickonce](../../../includes/tla2sharptla-clickonce-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Applications deployed using                          <ph id="ph1">[!INCLUDE[TLA2#tla_clickonce](../../../includes/tla2sharptla-clickonce-md.md)]</ph> are given an additional security layer over                          <ph id="ph2">[!INCLUDE[TLA#tla_cas](../../../includes/tlasharptla-cas-md.md)]</ph>; essentially,                          <ph id="ph3">[!INCLUDE[TLA#tla_clickonce](../../../includes/tlasharptla-clickonce-md.md)]</ph> deployed applications request the permissions that they need.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>They are granted only those permissions if they do not exceed the set of permissions for the zone from which the application is deployed.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>By reducing the set of permissions to only those that are needed, even if they are less than those provided by the launch zone's permission set, the number of resources that the application has access to is reduce to a bare minimum.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Consequently, if the application is hijacked, the potential for damage to the client machine is reduced.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Security-Critical Methodology</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> code that uses permissions to enable the Internet zone sandbox for                          <ph id="ph2">[!INCLUDE[TLA2#tla_winfxwebapp](../../../includes/tla2sharptla-winfxwebapp-md.md)]</ph> applications must be held to highest possible degree of security audit and control.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>To facilitate this requirement,                          <ph id="ph1">[!INCLUDE[TLA2#tla_winfx](../../../includes/tla2sharptla-winfx-md.md)]</ph> provides new support for managing code that elevates privilege.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Specifically, the                          <ph id="ph1">[!INCLUDE[TLA2#tla_clr](../../../includes/tla2sharptla-clr-md.md)]</ph> enables you to identify code that elevates privilege and mark it with the                          <ph id="ph2">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph>; any code not marked with                          <ph id="ph3">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph> becomes                          <bpt id="p1">*</bpt>transparent<ept id="p1">*</ept> using this methodology.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Conversely, managed code that is not marked with                          <ph id="ph1">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph> is prevented from elevating privilege.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The Security-Critical Methodology allows the organization of                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> code that elevates privilege into                          <bpt id="p1">*</bpt>security-critical kernel<ept id="p1">*</ept>, with the remainder being transparent.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Isolating the security-critical code enables the                          <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> engineering team focus an additional security analysis and source control on the security-critical kernel above and beyond standard security practices (see                          <bpt id="p1">[</bpt>WPF Security Strategy - Security Engineering<ept id="p1">](../../../docs/framework/wpf/wpf-security-strategy-security-engineering.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Note that                          <ph id="ph1">[!INCLUDE[TLA2#tla_winfx](../../../includes/tla2sharptla-winfx-md.md)]</ph> permits trusted code to extend the                          <ph id="ph2">[!INCLUDE[TLA2#tla_winfxwebapp](../../../includes/tla2sharptla-winfxwebapp-md.md)]</ph> Internet zone sandbox by allowing developers to write managed assemblies that are marked with                          <ph id="ph3">&lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;</ph> (APTCA) and deployed to the user's Global Assembly Cache (GAC).</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Marking an assembly with APTCA is a highly sensitive security operation as it allows any code to call that assembly, including malicious code from the Internet.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Extreme caution and best practices must be used when doing this and users must choose to trust that software in order for it to be installed.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Microsoft Internet Explorer Security</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Beyond reducing security issues and simplifying security configuration,                  <ph id="ph1">[!INCLUDE[TLA#tla_ie6sp2](../../../includes/tlasharptla-ie6sp2-md.md)]</ph> contains several features that security improvements that enhance security for users of                  <ph id="ph2">[!INCLUDE[TLA#tla_winfxwebapp#plural](../../../includes/tlasharptla-winfxwebappsharpplural-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The thrust of these features attempts to allow users greater control over their browsing experience.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Prior to                  <ph id="ph1">[!INCLUDE[TLA2#tla_ie6sp2](../../../includes/tla2sharptla-ie6sp2-md.md)]</ph>, users could be subject to any of the following:</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Random popup windows.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Confusing script redirection.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Numerous security dialogs on some Web sites.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>In some cases, untrustworthy Web sites would try to trick users by spoofing installation                  <ph id="ph1">[!INCLUDE[TLA#tla_ui](../../../includes/tlasharptla-ui-md.md)]</ph> or repeatedly showing a                  <ph id="ph2">[!INCLUDE[TLA#tla_actx](../../../includes/tlasharptla-actx-md.md)]</ph> installation dialog box, even though the user may have canceled it.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Using these techniques, it is possible that a significant number of users have been tricked into making poor decisions that resulted with the installation of spyware applications.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_ie6sp2](../../../includes/tla2sharptla-ie6sp2-md.md)]</ph> includes several features to mitigate these types of issues, which revolve around the concept of user initiation.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_ie6sp2](../../../includes/tla2sharptla-ie6sp2-md.md)]</ph> detects when a user has clicked on a link or page element prior to an action, which is known as                  <bpt id="p1">*</bpt>user initiation<ept id="p1">*</ept>, and treats it differently than when a similar action is instead triggered by the script on a page.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>As an example,                  <ph id="ph1">[!INCLUDE[TLA2#tla_ie6sp2](../../../includes/tla2sharptla-ie6sp2-md.md)]</ph> incorporates a                  <bpt id="p1">**</bpt>Pop-Up Blocker<ept id="p1">**</ept> that detects when a user clicks a button prior to the page creating a pop-up.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This enables                  <ph id="ph1">[!INCLUDE[TLA2#tla_ie6sp2](../../../includes/tla2sharptla-ie6sp2-md.md)]</ph> to allow most innocuous pop-ups while preventing pop-ups that users neither ask for nor want.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Blocked pop-ups are trapped under the new                  <bpt id="p1">**</bpt>Information Bar<ept id="p1">**</ept>, which allows the user to manually override the block and view the pop-up.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The same user-initiation logic is also applied to                  <bpt id="p1">**</bpt>Open<ept id="p1">**</ept><ph id="ph1">/                 </ph><bpt id="p2">**</bpt>Save<ept id="p2">**</ept> security prompts.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_actx](../../../includes/tla2sharptla-actx-md.md)]</ph> installation dialog boxes are always trapped under the Information Bar unless they represent an upgrade from a previously installed control.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>These measures combine to give users a safer, more controlled user experience since they are protected against sites which harass them to install either unwanted or malicious software.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>These features also protect customers who use                  <ph id="ph1">[!INCLUDE[TLA2#tla_ie6sp2](../../../includes/tla2sharptla-ie6sp2-md.md)]</ph> to browse to web sites that allow them to download and install                  <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>In particular, this is because                  <ph id="ph1">[!INCLUDE[TLA2#tla_ie6sp2](../../../includes/tla2sharptla-ie6sp2-md.md)]</ph> offers a better user experience that reduces the chance for users to install malicious or devious applications irrespective of what technology was used to build it, including                  <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> adds to these protections by using                  <ph id="ph2">[!INCLUDE[TLA#tla_clickonce](../../../includes/tlasharptla-clickonce-md.md)]</ph> to facilitate downloading of its applications over the Internet.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Since                  <ph id="ph1">[!INCLUDE[TLA#tla_winfxwebapp#plural](../../../includes/tlasharptla-winfxwebappsharpplural-md.md)]</ph> execute within an Internet zone security sandbox, they can be seamlessly launched.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>On the other hand, standalone                  <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](../../../includes/tla2sharptla-wpf-md.md)]</ph> applications require full trust to execute.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For these applications,                  <ph id="ph1">[!INCLUDE[TLA#tla_clickonce](../../../includes/tlasharptla-clickonce-md.md)]</ph> will display a security dialog box during the launch process to notify the use of the application's additional security requirements.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>However, this must be user-initiated, will also be governed by user initiated logic, and can be canceled.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_ie7](../../../includes/tla2sharptla-ie7-md.md)]</ph> incorporates and extends the security capabilities of                  <ph id="ph2">[!INCLUDE[TLA2#tla_ie6sp2](../../../includes/tla2sharptla-ie6sp2-md.md)]</ph> as part of an ongoing commitment to security.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Understanding Security in Microsoft Internet Explorer 6 in Windows XP SP2<ept id="p1">](http://www.microsoft.com/downloads/details.aspx?FamilyId=E550F940-37A0-4541-B5E2-704AB386C3ED&amp;displaylang=en)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Understanding and Working in Protected Mode Internet Explorer<ept id="p1">](http://msdn.microsoft.com/library/bb250462.aspx)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows XP Service Pack 3<ept id="p1">](http://www.microsoft.com/windows/products/windowsxp/sp3/default.mspx)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Vista Security Guide<ept id="p1">](http://www.microsoft.com/downloads/details.aspx?familyid=a3d1bbed-7f35-4e72-bfb5-b84a526c1565&amp;displaylang=en)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Code Access Security<ept id="p1">](../../../docs/framework/misc/code-access-security.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Security<ept id="p1">](../../../docs/framework/wpf/security-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Partial Trust Security<ept id="p1">](../../../docs/framework/wpf/wpf-partial-trust-security.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Security Strategy - Security Engineering<ept id="p1">](../../../docs/framework/wpf/wpf-security-strategy-security-engineering.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>