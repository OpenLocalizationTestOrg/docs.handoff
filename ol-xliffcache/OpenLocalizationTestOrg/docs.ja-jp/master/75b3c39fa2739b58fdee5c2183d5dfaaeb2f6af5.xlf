<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75b3c39fa2739b58fdee5c2183d5dfaaeb2f6af5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\migration-guide\mitigation-grid-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-hi-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e3d0e63d93ca25b2b056f3ecba9b6b72124218c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5151e5bf1f9bf5ba824ad4df73fbc97c7f86d37a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Mitigation: Grid Control&amp;#39;s Space Allocation to Star-columns | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Mitigation: Grid Control&amp;#39;s Space Allocation to Star-columns</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Starting with applications that the .NET Framework 4.7, WPF replaces the algorithm that the <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> control uses to allocate space to <ph id="ph2">\*</ph>-columns.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>What's changed</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The new algorithm fixes several bugs present in the old algorithm:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Total allocation to columns can exceed the Grid's width.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This can occur when allocating space to a column whose proportional share is less than its minimum size.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The algorithm allocates the minimum size, which decreases the space available to other columns.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If there are no <ph id="ph1">\*</ph>-columns left to allocate, the total allocation will be too large.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Total allocation can fall short of the Grid's width.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is the dual problem to #1, arising when allocating to a column whose proportional share is greater than its maximum size, with no <ph id="ph1">\*</ph>-columns left to take up the slack.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Two <ph id="ph1">\*</ph>-columns can receive allocations not proportional to their -weights.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is a milder version of #1/#2, arising when allocating to *-columns A, B, and C (in that order), where B's proportional share violates its min (or max) constraint.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As above, this changes the space available to column C, who gets less (or more) proportional allocation than A did,</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Columns with extremely large weights (&gt; 10^298) are all treated as if they had weight 10^298.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Proportional differences between them (and between columns with slightly smaller weights) are not honored.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Columns with infinite weights are not handled correctly.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>[Actually you can't set a weight to Infinity, but this is an artificial restriction.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The allocation code was trying to handle it, but doing a bad job.]</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Several minor problems while avoiding overflow, underflow, loss of precision and similar floating-point issues.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Adjustments for layout rounding are incorrect at sufficiently high DPI.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The new algorithm produces results that meet the following criteria:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The actual width assigned to a *-column is never less than its minimum width nor greater than its maximum width.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>B.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each -column that is not assigned its minimum or maximum width is assigned a width proportional to its -weight.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To be precise, if two columns are declared with width x and y respectively, and if neither column receives its minimum or maximum width, the actual widths v and w assigned to the columns are in the same proportion: v / w == x / y.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>C.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The total width allocated to "proportional" <ph id="ph1">\*</ph>-columns is equal to the space available after allocating to the constrained columns (fixed, auto, and <ph id="ph2">\*</ph>-columns that are allocated their min or max width).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This might be zero, for instance if the sum of the minimum widths exceeds the Grid's availbable width.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>D.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>All these statements are to be interpreted with respect to the "ideal" layout.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When layout rounding is in effect, the actual widths can differ from the ideal widths by as much as one pixel.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The old algorithm honored (A) but failed to honor the other criteria in the cases outlined above.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Everything said about columns and widths in this topic applies as well to rows and heights.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Impact</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The new algorithm changes the actual width assigned to <ph id="ph1">\*</ph>-columns in a number of cases:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When one or more <ph id="ph1">\*</ph>-columns also have a minimum or maximum width that overrides the proportional allocation for that column.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>(The minimum width can derive from an explicit <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> declaration, or from an implicit minimum obtained from the column's content.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The maximum width can only be defined explicitly, from a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph> declaration.)</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When one or more <ph id="ph1">\*</ph>-columns declare an extremely large <ph id="ph2">\*</ph>-weight, greater than 10^298.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">\*</ph>-weights are sufficiently different to encounter floating-point instability (overflow, underflow, loss of precision).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When layout rounding is enabled, and the effective display DPI is sufficiently high.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In the first two cases, the widths produced by the new algorithm can be significantly different from those produced by the old algorithm; in the last case, the difference will be at most one or two pixels.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Mitigation</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>By default, apps that target versions of the .NET Framework starting with the .NET Framework 4.7 will use the new algorithm, while apps that target the .NET Framework 4.6.2 or earlier versions will use the old algorithm.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To override the default, use the following configuration setting:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The value 'true' selects the old algorithm, and 'false' selects the new algorithm.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Retargeting Changes in the .NET Framework 4.7<ept id="p1">](../../../docs/framework/migration-guide/retargeting-changes-in-the-net-framework-4-7.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>