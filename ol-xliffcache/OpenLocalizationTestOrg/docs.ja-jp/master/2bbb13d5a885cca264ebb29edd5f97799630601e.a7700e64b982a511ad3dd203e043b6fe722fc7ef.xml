{"content":"---\ntitle: \"Al.exe (Assembly Linker) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"Al.exe\"\n  - \"Assembly Linker\"\n  - \"modules, Assembly Linker\"\n  - \"assembly manifest, Assembly Linker\"\nms.assetid: b5382965-0053-47cf-b92f-862860275a01\ncaps.latest.revision: 37\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Al.exe (Assembly Linker)\nThe Assembly Linker generates a file that has an assembly manifest from one or more files that are either modules or resource files. A module is an intermediate language (IL) file that does not have an assembly manifest.  \n  \n> [!NOTE]\n>  To avoid being subject to virtualization on a Windows Vista computer, your assembly must include a Win32 manifest that specifies the requested execution level. When you use al.exe directly from the command line, you can either embed the manifest in a Win32 resource file or use mt.exe to append the manifest at a later stage in the build process. Starting with [!INCLUDE[vs_orcas_long](../../../includes/vs-orcas-long-md.md)], both the C# and Visual Basic compilers automatically embed a Win32 manifest into the assembly. For more information, see [/win32manifest (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/win32manifest-compiler-option.md).  \n  \n This tool is automatically installed with Visual Studio. To run the tool, use the Developer Command Prompt (or the Visual Studio Command Prompt in Windows 7). For more information, see [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md).  \n  \n At the command prompt, type the following:  \n  \n## Syntax  \n  \n```  \nal sources options  \n```  \n  \n#### Parameters  \n You can specify one or more of the following `sources`.  \n  \n|Source|Description|  \n|------------|-----------------|  \n|`file`[,`target`]|Copies the contents of `file` (a module) to the file name specified by `target`. After copying, Al.exe compiles `target` into an assembly.|  \n|**/embed**[`resource`]`:``file`[,`name`[,`private`]]|Embeds the resource specified by `file` in the image that contains the assembly manifest; Al.exe copies the contents of `file` into the portable executable (PE) image.<br /><br /> The `name` parameter is an internal identifier for the resource. By default, resources are public in the assembly (visible to other assemblies). Specifying `private` makes the resource not visible to other assemblies.<br /><br /> If `file` is a .NET Framework resource file created, for example, by the [Resource File Generator (Resgen.exe)](../../../docs/framework/tools/resgen-exe-resource-file-generator.md) or in the development environment, it can be accessed with members in the <xref:System.Resources>. For more information, see <xref:System.Resources.ResourceManager>. For all other resources, use the `GetManifestResource`* methods in the <xref:System.Reflection.Assembly> to access the resource at run time.<br /><br /> If only resource files are passed to Al.exe, the output file is a satellite resource assembly.|  \n|**/link**[`resource`]:`file`[,`name`[,`target`[,`private`]]]|Links a resource file to an assembly. The resource specified by `file` becomes part of the assembly; the file is not copied. The `file` parameter can be in any file format. For example, you can specify a native DLL as the `file` parameter. This will make the native DLL part of the assembly so that it can be installed into the global assembly cache and accessed from managed code in the assembly. You can also do this by using the **/linkresource** compiler option. For more information, see [/linkresource (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/linkresource-compiler-option.md).<br /><br /> The`name` parameter is an internal identifier for the resource. The `target`parameter specifies a path and file name into which Al.exe copies the `file`*.* After copying, Al.exe compiles `target` into an assembly. By default, resources are public in the assembly (visible to other assemblies). Specifying `private` makes the resource not visible to other assemblies.<br /><br /> If `file` is a .NET Framework resource file created, for example, by the Resource File Generator (Resgen.exe) or in the development environment, it can be accessed with members in the <xref:System.Resources> namespace. For more information, see <xref:System.Resources.ResourceManager>. For all other resources, use the `GetManifestResource` * methods in the <xref:System.Reflection.Assembly> class to access the resource at run time.<br /><br /> If only resource files are passed to Al.exe, the output file is a satellite resource assembly.|  \n  \n You can specify the following `options`; you must specify **/out**.  \n  \n|Option|Description|  \n|------------|-----------------|  \n|**/algid**:`id`|Specifies an algorithm to hash all files in a multifile assembly except the file that contains the assembly manifest. The default algorithm is CALG_SHA1. See ALG_ID in the Platform SDK documentation for other algorithms. For the first release of the .NET Framework, only CALG_SHA1 and CALG_MD5 are valid.<br /><br /> The hash values are stored in the file table of the assembly manifest. At installation and load time, the assembly's files are checked against their hashes.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyAlgorithmIdAttribute>) in the source code for any module.|  \n|**/base**[`address`]:`addr`|Specifies the address at which a DLL will be loaded on the user's computer at run time. Applications load faster if you specify the base address of the DLLs, instead of letting the operating system relocate the DLLs in the process space.|  \n|**/bugreport**:`filename`|Creates a file (`filename`) that contains information for reporting bugs.|  \n|**/comp**[`any`]:`text`|Specifies a string for the Company field in the assembly. Place the string in double quotation marks (\" \") if `text` contains a space. This string is a custom attribute on the assembly and is available for viewing with reflection.<br /><br /> If you do not specify **/win32res**, `text` appears in File Explorer as the `Company` property for the file. If you specify **/win32res**, the company information in the specified resource file appears as the `Company` property in File Explorer.<br /><br /> If text is an empty string (\"\"), the Win32 `Company` resource appears as a single space.<br /><br /> If you specify **/win32res**, **/company** will not affect the Win32 resource information.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyCompanyAttribute>) in the source code for any MSIL module.|  \n|**/config**[`uration`]:`text`|Specifies a string for the Configuration field in the assembly. Place the string in double quotation marks (\" \") if `text` contains a space. This string is a custom attribute on the assembly and is available for viewing with reflection.<br /><br /> If text is an empty string, the Win32 Configuration resource appears as a single space.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyConfigurationAttribute>) in the source code for any MSIL module.|  \n|**/copy**[`right`]:`text`|Specifies a string for the Copyright field in the assembly. Place the string in double quotation marks (\" \") if `text` contains a space. This string is a custom attribute on the assembly and is available for viewing with reflection.<br /><br /> If you do not specify **/win32res**, **/copyright** appears in File Explorer as the Win32 Copyright resource.<br /><br /> If text is an empty string, the Win32 Copyright resource appears as a single space.<br /><br /> If you specify **/win32res**, **/copyright** will not affect the Win32 resource information.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyCopyrightAttribute>) in the source code for any MSIL module.|  \n|**/c**[**ulture**]:`text`|Specifies the culture string to associate with the assembly. Valid values for cultures are those defined by the Internet Requests for Comments (RFC) document 1766 titled \"Tags for the Identification of Languages.\"<br /><br /> Place the string in double quotation marks (\" \") if `text` contains a space. There is no default culture string. This string is available for viewing with reflection.<br /><br /> For information about valid `text` strings, see the <xref:System.Globalization.CultureInfo>.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyCultureAttribute>) in the source code for any MSIL module.|  \n|**/delay**[`sign`][`+&#124;-`]|Specifies whether the assembly will be fully or partially signed. Use **/delaysign-** if you want a fully signed assembly. Use **/delaysign+** if you only want to include the public key in the assembly.<br /><br /> When you request a fully signed assembly, Al.exe hashes the file that contains the manifest (assembly metadata) and signs that hash with the private key. The resulting digital signature is stored in the file that contains the manifest. When an assembly is delay signed, Al.exe does not compute and store the signature, but just reserves space in the file so the signature can be added later.<br /><br /> The default is **/delaysign-**.<br /><br /> The **/delaysign** option has no effect unless used with **/keyfile** or **/keyname**.<br /><br /> For example, using **/delaysign+** enables a tester to put the assembly in the global cache. After testing, you can fully sign the assembly by including the private key in the assembly.<br /><br /> Note: Before using the [Gacutil.exe (Global Assembly Cache Tool)](../../../docs/framework/tools/gacutil-exe-gac-tool.md) to put a delay-signed assembly into the global cache, use the [Sn.exe (Strong Name Tool)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) to register the assembly for verification skipping. For example, `Sn.exe –Vr delaySignedAssembly`. Use this only for development.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyDelaySignAttribute>) in the source code for any MSIL module.|  \n|**/descr**[**iption**]**:**`text`|Specifies a string for the <xref:System.Reflection.AssemblyDescriptionAttribute.Description%2A> field in the assembly. Place the string in double quotation marks (\" \") if `text` contains a space. This string is a custom attribute on the assembly and is available for viewing with reflection.<br /><br /> If you do not specify **/win32res**, **/description** appears in File Explorer as the Win32 **Comments** resource.<br /><br /> If text is an empty string, the Win32 **Comments** resource appears as a single space.<br /><br /> If you specify **/win32res**, **/description** will not affect the Win32 resource information.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyDescriptionAttribute.Description%2A>) in the source code for any MSIL module.|  \n|**/e[vidence]:** `file`|Embeds `file` in the assembly with the resource name of Security.Evidence.<br /><br /> You cannot use Security.Evidence for regular resources.|  \n|**/fileversion:** `version`|Specifies a string for the **File Version** field in the assembly. This string is a custom attribute on the assembly and is available for viewing with reflection.<br /><br /> If you do not specify **/win32res**, **/fileversion** will be used as the Win32 **File Version** resource. If you do not specify **/fileversion**, the Win32 **File Version** resource will be populated by the Win32 **Assembly Version** resource.<br /><br /> If **/win32res** is specified, **/fileversion** does not affect the Win32 resource.<br /><br /> You can also specify this option as a custom attribute (AssemblyFileVersionAttribute) in the source code for any MSIL module.|  \n|**/flags:** `flags`|Specifies a value for the `Flags` field in the assembly. Possible values for `flags`:<br /><br /> 0x0000<br /> The assembly is side-by-side compatible.<br /><br /> 0x0010<br /> The assembly cannot execute with other versions if they are executing in the same application domain.<br /><br /> 0x0020<br /> The assembly cannot execute with other versions if they are executing in the same process.<br /><br /> 0x0030<br /> The assembly cannot execute with other versions if they are executing on the same computer.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyFlagsAttribute>) in the source code for any MSIL module.|  \n|**/fullpaths**|Causes Al.exe to use the absolute path for any files that are reported in an error message.|  \n|**/help**|Displays command syntax and options for the tool.|  \n|**/keyf[ile]:** `filename`|Specifies a file (`filename`) that contains a key pair or just a public key to sign an assembly. The compiler inserts the public key in the assembly manifest and then signs the final assembly with the private key. See the [Strong Name Tool (Sn.exe)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) for information about generating key files and installing key pairs into key containers.<br /><br /> If you are using delayed signing, this file will usually have the public key but not the private key.<br /><br /> The public key (of the key pair) information appears in the .publickey field of the assembly.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyKeyFileAttribute>) in the source code for any MSIL module.<br /><br /> If both **/keyfile** and **/keyname** are specified (either by command-line option or by custom attribute) in the same compilation, Al.exe will first try the container specified with **/keyname**. If that succeeds, the assembly is signed with the information in the key container. If Al.exe does not find the key container, it will try the file specified with **/keyfile**. If that succeeds, the assembly is signed with the information in the key file and the key information will be installed in the key container (similar to the -i option in [Sn.exe](../../../docs/framework/tools/sn-exe-strong-name-tool.md)) so that on the next compilation, the **/keyname** option will be valid.|  \n|**/keyn[ame]:** `text`|Specifies a container that holds a key pair. This will sign the assembly (give it a strong name) by inserting a public key into the assembly manifest. Al.exe will then sign the final assembly with the private key.<br /><br /> Use Sn.exe to generate a key pair.<br /><br /> The key information appears in the .publickey field of the assembly.<br /><br /> Place `text` in double quotation marks (\" \") if there is an embedded space.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyKeyNameAttribute>) in the source code for any MSIL module.|  \n|**/main:** `method`|Specifies the fully qualified name (`class`.`method`) of the method to use as an entry point when converting a module to an executable file.|  \n|**/nologo**|Suppresses the banner, or logo, displayed at the command line when you invoke Al.exe.|  \n|**/out:** `filename`|Specifies the name of the file produced by Al.exe. This is a required option.|  \n|**/platform**:`text`|Limits which platform this code can run on; must be one of x86, Itanium, x64, anycpu (the default), or anycpu32bitpreferred.|  \n|**/prod[uct]:** `text`|Specifies a string for the **Product** field in the assembly. Place the string in double quotation marks (\" \") if `text` contains a space. This string is a custom attribute on the assembly and is available for viewing with reflection.<br /><br /> If you do not specify **/win32res**, **/product** appears in File Explorer as the Win32 **Product Name** resource.<br /><br /> If text is an empty string, the Win32 **Product Name** resource appears as a single space.<br /><br /> If you specify **/win32res**, **/product** will not affect the Win32 resource information.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyProductAttribute>) in the source code for any MSIL module.|  \n|**/productv[ersion]:** `text`|Specifies a string for the **Product Version** field in the assembly. Place the string in double quotation marks (\" \") if `text` contains a space. This string is a custom attribute on the assembly and is available for viewing with reflection.<br /><br /> If you do not specify **/win32res**, **/productversion** will be used as the Win32 **Product Version** resource. If you do not specify **/productversion**, the Win32 **Product Version** resource will be populated by the Win32 **File Version** resource.<br /><br /> If you specify **/win32res**, **/productversion** will not affect the Win32 resource information.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyInformationalVersionAttribute>) in the source code for any MSIL module.|  \n|**/t[arget]:lib[rary] &#124; exe &#124; win[exe]**|Specifies the file format of the output file: `lib`rary (code library), `exe` (console application), or `win`exe (Windows-based application). The default is lib[rary].|  \n|**/template:** `filename`|Specifies the assembly, `filename`, from which to inherit all assembly metadata, except the culture field.<br /><br /> An assembly that you create with **/template** will be a satellite assembly.|  \n|**/title:** `text`|Specifies a string for the **Title** field in the assembly. Place the string in double quotation marks (\" \") if `text` contains a space. This string is a custom attribute on the assembly and is available for viewing with reflection.<br /><br /> If you do not specify **/win32res**, **/title** appears in File Explorer as the Win32 **Description** resource, which is used by the shell as the friendly name of an application. It is also displayed on the **Open With** submenu of the shortcut menu for a file type for which there are multiple supporting applications.<br /><br /> If text is an empty string, the Win32 **Description** resource appears as a single space.<br /><br /> If you specify **/win32res**, **/title** will not affect the Win32 resource information.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyTitleAttribute>) in the source code for any MSIL module.|  \n|**/trade[mark]:** `text`|Specifies a string for the **Trademark** field in the assembly. Place the string in double quotation marks (\" \") if `text` contains a space. This string is a custom attribute on the assembly and is available for viewing with reflection.<br /><br /> If you do not specify **/win32res**, **/trademark** appears in File Explorer as the Win32 **Trademark** resource.<br /><br /> If text is an empty string, the Win32 **Trademark** resource appears as a single space.<br /><br /> If you specify **/win32res**, **/trademark** will not affect the Win32 resource information.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyTrademarkAttribute>) in the source code for any MSIL module.|  \n|**/v[ersion]:** `version`|Specifies version information for this assembly. The format of the version string is `major`.`minor`.`build`.`revision`. The default value is 0.<br /><br /> If you do specify **/version**, you must specify `major`. If you specify `major` and `minor`, you can specify an asterisk (\\*)for `build`. This causes `build` to be equal to the number of days since January 1, 2000, local time, and `revision` to be equal to the number of seconds since midnight of the current day, local time, divided by 2.<br /><br /> If you specify `major`, `minor`, and `build`, you can specify an asterisk for `revision`. This causes `revision` to be equal to the number of seconds since midnight of the current day, local time, divided by 2.<br /><br /> To summarize, the valid version strings are as follows:<br /><br /> X<br /><br /> X.X<br /><br /> X.X.\\*<br /><br /> X.X.X<br /><br /> X.X.X.\\*<br /><br /> X.X.X.X<br /><br /> where X is any unsigned short constant except 65535 (0-65534).<br /><br /> If you do not specify **/win32res**, **/version** will be used as the Win32 **Assembly Version** resource.<br /><br /> If you do not specify **/win32res**, **/productversion**, and **/fileversion**, **/version** will be used for the **Assembly Version**, File Version, and **Product Version** Win32 resources.<br /><br /> If you specify **/win32res**, **/version** will not affect the Win32 resource information.<br /><br /> You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyVersionAttribute>) in the source code for any MSIL module.|  \n|**/win32icon:** `filename`|Inserts an .ico file in the assembly. The .ico file gives the output file the desired appearance in File Explorer.|  \n|**/win32res:** `filename`|Inserts a Win32 resource (.res file) in the output file. A Win32 resource file can be created by using the Resource Compiler. The Resource Compiler is invoked when you compile a Visual C++ program; a .res file is created from the .rc file.|  \n|`@filename`|Specifies a response file that contains Al.exe commands.<br /><br /> Commands in the response file can appear one per line or on the same line, separated by one or more spaces.|  \n|**/?**|Displays command syntax and options for the tool.|  \n  \n## Remarks  \n All Visual Studio compilers produce assemblies. However, if you have one or more modules (metadata without a manifest), you can use Al.exe to create an assembly with the manifest in a separate file.  \n  \n To install assemblies in the cache, remove assemblies from the cache, or list the contents of the cache, use the [Global Assembly Cache Tool (Gacutil.exe)](../../../docs/framework/tools/gacutil-exe-gac-tool.md).  \n  \n## Errors and Warnings  \n The following table lists the errors generated by Al.exe.  \n  \n|Error|Description|  \n|-----------|-----------------|  \n|al1001|Internal compiler error<br /><br /> Try to determine whether Al.exe is failing because of its inability to parse unexpected syntax. Then, contact Microsoft Product Support Services.|  \n|al1002|Out of memory<br /><br /> Al.exe ran out of memory and stopped. Increase the amount of available memory.|  \n|al1003|Compiler option 'option' must be followed by an argument<br /><br /> Al.exe expected an argument to be passed to a command-line option. For example, if you specify **/algid:**, you must pass an algorithm identifier.|  \n|al1004|Unexpected common language runtime initialization error — 'reason'<br /><br /> Al.exe reported an error with the installation of Visual Studio or the common language runtime for the specified reason.|  \n|al1005|File 'file' too big to open<br /><br /> All files opened by Al.exe must be smaller than 4 gigabytes (GB).|  \n|al1006|Response file 'file' was already included<br /><br /> The same response file was specified (`@file`) more than once on the command line. The response file can only be included once.|  \n|al1007|Error opening response file 'file' — 'reason'<br /><br /> Al.exe cannot open the specified response file for the specified reason.|  \n|al1008|Missing file specification for 'option' command-line option<br /><br /> Al.exe expected a file to be passed to a command-line option. For example, if you specify the **/out** option, you must specify a file.|  \n|al1009|Can't open 'file' for writing<br /><br /> Al.exe was unable to write to a file, such as the output assembly file. The disk might be full, the file might be read-only, or you might not have permissions to the file.|  \n|al1010|Command-line syntax error: Missing ':text' for 'option' option<br /><br /> Al.exe expected an argument to be passed to a command-line option. For example, if you specify the **/title** option, you must pass a string.|  \n|al1011|File 'file' is an executable file and cannot be opened as a text file<br /><br /> A binary file was specified where a text file was expected. For example, this error occurs if a binary file is passed on the command line as a response file.|  \n|al1012|'value' is not a valid setting for option 'option'<br /><br /> An unexpected value was passed to a command-line option. For example, this error occurs if you specify an invalid value to the **/target** option.|  \n|al1013|Unrecognized command-line option: 'option'<br /><br /> An invalid command-line option was specified.|  \n|al1014|Unexpected initialization error — 'reason'<br /><br /> Al.exe detected a COM initialization failure. This might be caused by a lack of memory, but a more likely cause is the system DLL files. You should see a similar error if you run any Automation-aware or COM-aware program, such as Microsoft Visual Studio.<br /><br /> Reinstall the operating system.|  \n|al1015|Unable to find messages file 'alinkui.dll'<br /><br /> Al.exe requires Alinkui.dll. Make sure that this file is on your path. If necessary, copy it from the product CD.|  \n|al1016|No valid input files were specified<br /><br /> Al.exe requires one or more input files that do not have assembly information.|  \n|al1017|No target file name was specified<br /><br /> The required **/out** option specifying the target file name was missing.|  \n|al1018|Required file 'file' could not be loaded<br /><br /> Certain DLL files cannot be loaded. Reinstall Visual Studio or the [!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)].|  \n|al1019|Metadata failure while creating assembly — reason<br /><br /> Generation of the assembly was interrupted for the specified reason. For example, this error occurs if a file that you specify with the **/win32res** option is not found.|  \n|al1020|Ignoring included assembly 'file'<br /><br /> An input file that contained an assembly was specified. Al.exe input files cannot contain assemblies.|  \n|al1021|'setting' : overriding previous setting<br /><br /> A module had a value for a particular setting, possibly assigned through custom attributes, which was overridden with a value passed using an Al.exe command-line option.|  \n|al1022|Error reading embedded resource 'file' — reason<br /><br /> Al.exe cannot read the file passed to the **/embedresource** option for the specified reason.|  \n|al1023|Error embedding resource 'file' — reason<br /><br /> The operating system cannot embed the resource file in the assembly for the specified reason.|  \n|al1025|ComType record 'record' points to an invalid file record 'record'<br /><br /> Metadata in the input module is invalid. The tool that produced the module must be fixed.|  \n|al1026|The version specified 'version' is invalid<br /><br /> See information about the **/version** option for valid formats.|  \n|al1028|Key file 'file' is missing the private key needed for signing<br /><br /> A key file that contains only the public key was passed to the **/keyfile** option. Use the [Strong Name Tool (Sn.exe)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) to generate a file that has both a public and private key, as shown in the following command.<br /><br /> `sn -k keypair.snk.`|  \n|al1029|The key container name 'container' does not exist<br /><br /> The value passed to the **/keyname** option is not a valid container. Use the [Strong Name Tool (Sn.exe)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) to create a container.|  \n|al1030|The cryptographic service is not installed properly or does not have a suitable key provider<br /><br /> You might have to either reinstall the operating system or install some cryptographic utility that was that is used to create the key.|  \n|al1031|Error reading icon 'file' — reason<br /><br /> Al.exe cannot read the file that was passed to the **/win32icon** option for the specified reason|  \n|al1032|Error generating resources for 'file' — reason<br /><br /> Al.exe cannot create a file because of insufficient disk space or some other error. This error occurs when you specify the **/win32icon** option (which generates an .ico file) or do not specify the **/win32res** option (which generates a file that has resource information).<br /><br /> If you cannot resolve the file generation problem, use **/win32res**, which specifies a file that can contain version or bitmap (icon) information.|  \n|al1033|Assembly custom attribute 'attribute' was specified multiple times with different values<br /><br /> Different values were passed to two occurrences of the same custom attribute in source modules that are specified as input to Al.exe.|  \n|al1034|Assembly 'file' cannot be copied or renamed<br /><br /> While using the Al.exe syntax that enables you to both specify an input file and copy it, a name conflict arose that stopped the compiler. For example, this error occurs if you specify `input.dll,somename.dll /out:somename.dll`.|  \n|al1035|Libraries cannot have an entry point<br /><br /> You cannot specify both the **/target:lib** option (the default) and the **/main** option.|  \n|al1036|Entry point required for executable applications<br /><br /> When using the **/target:exe** or **/target:win** option, you must also specify the **/main** option.|  \n|al1037|Unable to find the entry point method 'main'<br /><br /> Al.exe cannot find a `Main` method at the location specified by the **/main** option.|  \n|al1039|Initialization of global assembly cache manager failed — reason<br /><br /> Reinstall Visual Studio or the [!INCLUDE[winsdkshort](../../../includes/winsdkshort-md.md)].|  \n|al1040|Failed to install assembly into cache — reason<br /><br /> Only signed assemblies can be installed into the cache. See [Global Assembly Cache](../../../docs/framework/app-domains/gac.md) for more information.|  \n|al1041|'method': cannot be the entry point because the signature or visibility is incorrect, or it is generic<br /><br /> A method was specified with the **/main** option, but that method is not static, does not return `int` or `void`, was generic, or has invalid arguments.|  \n|al1042|'exe': EXEs cannot be added modules<br /><br /> An .exe file that does not have an assembly was specified as an input file to Al.exe. Al.exe can only take .dll files without assemblies as input files.|  \n|al1043|Manifest file name 'name' cannot be the same as any modules<br /><br /> The name specified with the **/out** option cannot be the same as any one of the file names that are specified as input to Al.exe.|  \n|al1044|Error reading key file 'file' — reason<br /><br /> An error occurred while opening or reading from a file specified with **/keyfile** or the <xref:System.Reflection.AssemblyKeyFileAttribute>.|  \n|al1045|Filename 'file' is too long or invalid<br /><br /> A file name longer than 260 characters was passed to Al.exe. Choose a file name with fewer characters or a shorter path, or rename the file.|  \n|al1046|Resource identifier 'ID' has already been used in this assembly<br /><br /> Two resources, embedded or linked, have the same identifier or name (the second argument). Remove or rename one of the conflicting resources.|  \n|al1047|Error importing file 'file' — reason<br /><br /> A module file cannot be opened for the specified reason.|  \n|al1048|Error importing module 'module' of assembly 'assembly' — reason<br /><br /> An error occurred when opening a nonmanifest file of a multifile assembly. This error is not emitted directly by Al.exe, but can be passed programmatically to a process that uses Al.exe.|  \n|al1049|Cannot auto-generate build and revision version numbers for dates before January 1, 2000<br /><br /> The system clock on your computer is set to a date earlier than January 1, 2000.|  \n|al1050|The feature you are using 'old feature' is no longer supported; please use 'new feature' instead<br /><br /> A feature previously supported by Al.exe is now obsolete. Use the recommended feature instead.|  \n|al1051|Error emitting 'attribute' attribute —'reason'<br /><br /> An assembly custom attribute was not processed by Al.exe for the specified reason.|  \n|al1052|File 'filename' is not an assembly<br /><br /> The file specified with **/template** must contain assembly metadata. This error indicates that the file specified by **/template** did not contain an assembly.|  \n|al1053|The version 'version' specified for the 'option' is not in the normal 'major.minor.build.revision' format<br /><br /> Al.exe detected ill-formed version information specified with the **/fileversion** or **/productversion** options.|  \n|al1054|The version 'version' specified for the 'option' is not in the normal 'major.minor.build.revision' format<br /><br /> Al.exe detected ill-formed version information specified with the <xref:System.Resources.SatelliteContractVersionAttribute>.|  \n|al1055|Referenced assembly 'filename' does not have a strong name<br /><br /> This error is issued when you are building an assembly with a strong name and reference an assembly that does not have a strong name. To fix this, you must either regenerate your assembly with a strong name, or attach a strong name to the assembly by using sn.exe (see the documentation for [sn.exe](../../../docs/framework/tools/sn-exe-strong-name-tool.md)).<br /><br /> A common occurrence of this error is when you are using COM objects by way of wrapper assemblies, such as when you add a reference to a COM module to a C# project by way of the Visual Studio IDE. To avoid the error, you can specify the strong name key file for COM wrapper assemblies in the Project Property \"Wrapper Assembly Key File/Name\"<br /><br /> If you are creating the wrapper assembly through tlbimp, see the [tlbimp](../../../docs/framework/tools/tlbimp-exe-type-library-importer.md) documentation for information about how to assign a strong name to the wrapper assembly.<br /><br /> If an assembly has a strong name, it can be installed in the global assembly cache. Consequently, referenced assemblies would also go into the global assembly cache. Only assemblies with strong names can go into the global assembly cache.|  \n|al1056|Referenced assembly 'filename' is a localized satellite assembly<br /><br /> An assembly created by using the <xref:System.Reflection.AssemblyCultureAttribute> attribute was referenced in creating the current assembly. The <xref:System.Reflection.AssemblyCultureAttribute> attribute indicates the file is a localized satellite assembly and it is not appropriate to reference a satellite assembly. You should probably reference the main parent assembly instead.|  \n|al1057|Executables cannot be localized, Culture should always be empty<br /><br /> An assembly is being created by using **/target:exe** but **/culture** was specified. Assemblies in the .exe cannot have information in the Culture field.|  \n|al1058|'file' is an assembly and cannot be added as a module<br /><br /> In a C++ compilation, **/assemblymodule** (linker option) was passed a file that contained an assembly.|  \n|al1059|Unknown error (code)<br /><br /> Al.exe received an unknown error code (`code`).<br /><br /> Possible solutions include the following:<br /><br /> Reinstall Visual Studio.<br /><br /> Reinstall the [!INCLUDE[winsdkshort](../../../includes/winsdkshort-md.md)].<br /><br /> Check for missing files.<br /><br /> Check for adequate disk space.<br /><br /> Check for adequate memory.<br /><br /> Stop other processes that might be accessing the files.<br /><br /> Reboot your computer.|  \n|al1060|Cryptographic failure while creating hashes — reason<br /><br /> An error occurred while creating the file hashes for a multifile assembly.|  \n|al1061|Cannot set option 'option' because 'reason'<br /><br /> The value specified for this option is invalid for the specified reason.|  \n|al1062|Module 'module' was specified multiple times; it will only be included once<br /><br /> This warning is generated when the same source, input, or module file is specified multiple times on the command line. Make sure that you specify the file name only once.|  \n|al1063|Public type 'type' is defined in multiple locations in this assembly: 'file1' and 'file2'<br /><br /> The same type was found in more than one module in the assembly. Only one version of each type may be present in an assembly.|  \n|al1064|Cannot specify multiple /bugreport options.<br /><br /> Only one **/bugreport** option is allowed.|  \n|al1065|File name 'File Name' is too long or invalid<br /><br /> The specified file name is longer than the maximum allowed.|  \n|al1066|Character 'character' is not allowed on the command-line or in response files<br /><br /> An invalid character was found, either on the command line or in a file.|  \n|al1067|'filename' is a binary file instead of a text file<br /><br /> The file is in binary format instead of text.|  \n|al1068|Module 'ModuleName' is already defined in this assembly. Each linked resource and module must have a unique file name.<br /><br /> The module occurs more than once in this assembly.|  \n|al1069|Cannot create short file name 'filename' when a long file name with the same short file name already exists<br /><br /> The current file has a name that is the short version of a file name that already exists. For example, compiling LongFileName.cs and then recompiling with the name LongFi~1.cs will cause a compiler error similar to this. If the compiler output files that have long names were deleted, but the analogous linker files remained, this error might occur.|  \n|al1070|Agnostic assembly cannot have a processor specific module 'Module Name'<br /><br /> If you are building using **/platform:agnostic** (or you don’t specify **/platform**), an error will be generated if you try to add a module (using **/addmodule**) that is not agnostic. This is like trying to link an i386 obj file to an ia64 obj.<br /><br /> The main source of non-agnostic modules is C++. If you are using **/addmodule** with a C++ module, you may have to modify your build scripts to specify the appropriate **/platform** setting.|  \n|al1072|Assembly and module 'Module Name' cannot target different processors<br /><br /> You cannot link an assembly and a module that are targeted for different processors, because the result has to run on a single processor.|  \n|al1073|Referenced assembly 'assembly' targets a different processor<br /><br /> You cannot link assemblies that are targeted for different processors, because the result has to run on a single processor.|  \n|al1074|Module name 'Module Name' stored in 'File Name' must match its file name<br /><br /> This is required of the linker. To resolve this problem, make the two names match.|  \n|al1075|Delay signing was requested, but no key was given<br /><br /> When an assembly is delay signed, the compiler does not compute and store the signature, but reserves space in the file so the signature can be added later.<br /><br /> For example, using **/delaysign+** enables a tester to put the assembly in the global cache. After testing, you can fully sign the assembly by adding the private key to the assembly by using the Assembly Linker utility.|  \n|al1076|Type 'type' is forwarded to multiple assemblies: 'assembly' and 'assembly'.<br /><br /> A type can only be forwarded to one assembly.|  \n|al1077|Public type 'type' is defined in 'assembly' and forwarded to 'assembly'.<br /><br /> There is a duplicate public type in the assembly being generated. One is a valid type definition and the other is a type forwarder.|  \n  \n## Example  \n The following command creates an executable file `t2a.exe` with an assembly from the `t2.netmodule` module. The entry point is the `Main` method in `MyClass`.  \n  \n```  \nal t2.netmodule /target:exe /out:t2a.exe /main:MyClass.Main  \n```  \n  \n## See Also  \n [Tools](../../../docs/framework/tools/index.md)   \n [Sn.exe (Strong Name Tool)](../../../docs/framework/tools/sn-exe-strong-name-tool.md)   \n [Gacutil.exe (Global Assembly Cache Tool)](../../../docs/framework/tools/gacutil-exe-gac-tool.md)   \n [Programming with Assemblies](../../../docs/framework/app-domains/programming-with-assemblies.md)   \n [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md)","nodes":[{"pos":[4,533],"embed":true,"restype":"x-metadata","content":"title: \"Al.exe (Assembly Linker) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"Al.exe\"\n  - \"Assembly Linker\"\n  - \"modules, Assembly Linker\"\n  - \"assembly manifest, Assembly Linker\"\nms.assetid: b5382965-0053-47cf-b92f-862860275a01\ncaps.latest.revision: 37\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"Al.exe (Assembly Linker) | Microsoft Docs","nodes":[{"pos":[0,41],"content":"Al.exe (Assembly Linker) | Microsoft Docs","nodes":[{"content":"Al.exe (Assembly Linker) | Microsoft Docs","pos":[0,41]}]}],"path":["title"]}],"yml":true},{"pos":[540,564],"content":"Al.exe (Assembly Linker)","linkify":"Al.exe (Assembly Linker)","nodes":[{"content":"Al.exe (Assembly Linker)","pos":[0,24]}]},{"content":"The Assembly Linker generates a file that has an assembly manifest from one or more files that are either modules or resource files.","pos":[565,697]},{"content":"A module is an intermediate language (IL) file that does not have an assembly manifest.","pos":[698,785]},{"pos":[793,1475],"content":"[!NOTE]\n To avoid being subject to virtualization on a Windows Vista computer, your assembly must include a Win32 manifest that specifies the requested execution level. When you use al.exe directly from the command line, you can either embed the manifest in a Win32 resource file or use mt.exe to append the manifest at a later stage in the build process. Starting with [!INCLUDE[vs_orcas_long](../../../includes/vs-orcas-long-md.md)], both the C# and Visual Basic compilers automatically embed a Win32 manifest into the assembly. For more information, see [/win32manifest (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/win32manifest-compiler-option.md).","leadings":["","> "],"nodes":[{"content":"To avoid being subject to virtualization on a Windows Vista computer, your assembly must include a Win32 manifest that specifies the requested execution level. When you use al.exe directly from the command line, you can either embed the manifest in a Win32 resource file or use mt.exe to append the manifest at a later stage in the build process. Starting with [!INCLUDE[vs_orcas_long](../../../includes/vs-orcas-long-md.md)], both the C# and Visual Basic compilers automatically embed a Win32 manifest into the assembly. For more information, see [/win32manifest (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/win32manifest-compiler-option.md).","pos":[9,680],"nodes":[{"content":"To avoid being subject to virtualization on a Windows Vista computer, your assembly must include a Win32 manifest that specifies the requested execution level.","pos":[0,159]},{"content":"When you use al.exe directly from the command line, you can either embed the manifest in a Win32 resource file or use mt.exe to append the manifest at a later stage in the build process.","pos":[160,346]},{"content":"Starting with <ph id=\"ph1\">[!INCLUDE[vs_orcas_long](../../../includes/vs-orcas-long-md.md)]</ph>, both the C# and Visual Basic compilers automatically embed a Win32 manifest into the assembly.","pos":[347,521],"source":" Starting with [!INCLUDE[vs_orcas_long](../../../includes/vs-orcas-long-md.md)], both the C# and Visual Basic compilers automatically embed a Win32 manifest into the assembly."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>/win32manifest (C# Compiler Options)<ept id=\"p1\">](~/docs/csharp/language-reference/compiler-options/win32manifest-compiler-option.md)</ept>.","pos":[522,671],"source":" For more information, see [/win32manifest (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/win32manifest-compiler-option.md)."}]}]},{"content":"This tool is automatically installed with Visual Studio.","pos":[1482,1538]},{"content":"To run the tool, use the Developer Command Prompt (or the Visual Studio Command Prompt in Windows 7).","pos":[1539,1640]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Command Prompts<ept id=\"p1\">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>.","pos":[1641,1751],"source":" For more information, see [Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md)."},{"content":"At the command prompt, type the following:","pos":[1758,1800]},{"pos":[1809,1815],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1862,1872],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[1876,1931],"content":"You can specify one or more of the following <ph id=\"ph1\">`sources`</ph>.","source":"You can specify one or more of the following `sources`."},{"content":"Source","pos":[1938,1944]},{"content":"Description","pos":[1945,1956]},{"pos":[1996,2013],"content":"<ph id=\"ph1\">`file`</ph>[,<ph id=\"ph2\">`target`</ph>]","source":"`file`[,`target`]"},{"content":"Copies the contents of <ph id=\"ph1\">`file`</ph> (a module) to the file name specified by <ph id=\"ph2\">`target`</ph>.","pos":[2014,2094],"source":"Copies the contents of `file` (a module) to the file name specified by `target`."},{"content":"After copying, Al.exe compiles <ph id=\"ph1\">`target`</ph> into an assembly.","pos":[2095,2152],"source":" After copying, Al.exe compiles `target` into an assembly."},{"pos":[2157,2209],"content":"<bpt id=\"p1\">**</bpt>/embed<ept id=\"p1\">**</ept>[<ph id=\"ph1\">`resource`</ph>]<ph id=\"ph2\">`:``file`</ph>[,<ph id=\"ph3\">`name`</ph>[,<ph id=\"ph4\">`private`</ph>]]","source":"**/embed**[`resource`]`:``file`[,`name`[,`private`]]"},{"content":"Embeds the resource specified by <ph id=\"ph1\">`file`</ph> in the image that contains the assembly manifest; Al.exe copies the contents of <ph id=\"ph2\">`file`</ph> into the portable executable (PE) image.","pos":[2210,2377],"source":"Embeds the resource specified by `file` in the image that contains the assembly manifest; Al.exe copies the contents of `file` into the portable executable (PE) image."},{"content":"The <ph id=\"ph1\">`name`</ph> parameter is an internal identifier for the resource.","pos":[2390,2454],"source":"The `name` parameter is an internal identifier for the resource."},{"content":"By default, resources are public in the assembly (visible to other assemblies).","pos":[2455,2534]},{"content":"Specifying <ph id=\"ph1\">`private`</ph> makes the resource not visible to other assemblies.","pos":[2535,2607],"source":" Specifying `private` makes the resource not visible to other assemblies."},{"content":"If <ph id=\"ph1\">`file`</ph> is a .NET Framework resource file created, for example, by the <bpt id=\"p1\">[</bpt>Resource File Generator (Resgen.exe)<ept id=\"p1\">](../../../docs/framework/tools/resgen-exe-resource-file-generator.md)</ept> or in the development environment, it can be accessed with members in the <ph id=\"ph2\">&lt;xref:System.Resources&gt;</ph>.","pos":[2620,2899],"source":"If `file` is a .NET Framework resource file created, for example, by the [Resource File Generator (Resgen.exe)](../../../docs/framework/tools/resgen-exe-resource-file-generator.md) or in the development environment, it can be accessed with members in the <xref:System.Resources>."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Resources.ResourceManager&gt;</ph>.","pos":[2900,2966],"source":" For more information, see <xref:System.Resources.ResourceManager>."},{"content":"For all other resources, use the <ph id=\"ph1\">`GetManifestResource`</ph>* methods in the <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly&gt;</ph> to access the resource at run time.","pos":[2967,3107],"source":" For all other resources, use the `GetManifestResource`* methods in the <xref:System.Reflection.Assembly> to access the resource at run time."},{"content":"If only resource files are passed to Al.exe, the output file is a satellite resource assembly.","pos":[3120,3214]},{"pos":[3219,3279],"content":"<bpt id=\"p1\">**</bpt>/link<ept id=\"p1\">**</ept>[<ph id=\"ph1\">`resource`</ph>]:<ph id=\"ph2\">`file`</ph>[,<ph id=\"ph3\">`name`</ph>[,<ph id=\"ph4\">`target`</ph>[,<ph id=\"ph5\">`private`</ph>]]]","source":"**/link**[`resource`]:`file`[,`name`[,`target`[,`private`]]]"},{"content":"Links a resource file to an assembly.","pos":[3280,3317]},{"content":"The resource specified by <ph id=\"ph1\">`file`</ph> becomes part of the assembly; the file is not copied.","pos":[3318,3404],"source":" The resource specified by `file` becomes part of the assembly; the file is not copied."},{"content":"The <ph id=\"ph1\">`file`</ph> parameter can be in any file format.","pos":[3405,3452],"source":" The `file` parameter can be in any file format."},{"content":"For example, you can specify a native DLL as the <ph id=\"ph1\">`file`</ph> parameter.","pos":[3453,3519],"source":" For example, you can specify a native DLL as the `file` parameter."},{"content":"This will make the native DLL part of the assembly so that it can be installed into the global assembly cache and accessed from managed code in the assembly.","pos":[3520,3677]},{"content":"You can also do this by using the <bpt id=\"p1\">**</bpt>/linkresource<ept id=\"p1\">**</ept> compiler option.","pos":[3678,3746],"source":" You can also do this by using the **/linkresource** compiler option."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>/linkresource (C# Compiler Options)<ept id=\"p1\">](~/docs/csharp/language-reference/compiler-options/linkresource-compiler-option.md)</ept>.","pos":[3747,3894],"source":" For more information, see [/linkresource (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/linkresource-compiler-option.md)."},{"content":"The<ph id=\"ph1\">`name`</ph> parameter is an internal identifier for the resource.","pos":[3907,3970],"source":"The`name` parameter is an internal identifier for the resource."},{"content":"The <ph id=\"ph1\">`target`</ph>parameter specifies a path and file name into which Al.exe copies the <ph id=\"ph2\">`file`</ph><bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","pos":[3971,4062],"source":" The `target`parameter specifies a path and file name into which Al.exe copies the `file`*.*"},{"content":"After copying, Al.exe compiles <ph id=\"ph1\">`target`</ph> into an assembly.","pos":[4063,4120],"source":" After copying, Al.exe compiles `target` into an assembly."},{"content":"By default, resources are public in the assembly (visible to other assemblies).","pos":[4121,4200]},{"content":"Specifying <ph id=\"ph1\">`private`</ph> makes the resource not visible to other assemblies.","pos":[4201,4273],"source":" Specifying `private` makes the resource not visible to other assemblies."},{"content":"If <ph id=\"ph1\">`file`</ph> is a .NET Framework resource file created, for example, by the Resource File Generator (Resgen.exe) or in the development environment, it can be accessed with members in the <ph id=\"ph2\">&lt;xref:System.Resources&gt;</ph> namespace.","pos":[4286,4504],"source":"If `file` is a .NET Framework resource file created, for example, by the Resource File Generator (Resgen.exe) or in the development environment, it can be accessed with members in the <xref:System.Resources> namespace."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Resources.ResourceManager&gt;</ph>.","pos":[4505,4571],"source":" For more information, see <xref:System.Resources.ResourceManager>."},{"content":"For all other resources, use the <ph id=\"ph1\">`GetManifestResource`</ph> * methods in the <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly&gt;</ph> class to access the resource at run time.","pos":[4572,4719],"source":" For all other resources, use the `GetManifestResource` * methods in the <xref:System.Reflection.Assembly> class to access the resource at run time."},{"content":"If only resource files are passed to Al.exe, the output file is a satellite resource assembly.","pos":[4732,4826]},{"pos":[4834,4901],"content":"You can specify the following <ph id=\"ph1\">`options`</ph>; you must specify <bpt id=\"p1\">**</bpt>/out<ept id=\"p1\">**</ept>.","source":"You can specify the following `options`; you must specify **/out**."},{"content":"Option","pos":[4908,4914]},{"content":"Description","pos":[4915,4926]},{"pos":[4966,4981],"content":"<bpt id=\"p1\">**</bpt>/algid<ept id=\"p1\">**</ept>:<ph id=\"ph1\">`id`</ph>","source":"**/algid**:`id`"},{"content":"Specifies an algorithm to hash all files in a multifile assembly except the file that contains the assembly manifest.","pos":[4982,5099]},{"content":"The default algorithm is CALG_SHA1.","pos":[5100,5135]},{"content":"See ALG_ID in the Platform SDK documentation for other algorithms.","pos":[5136,5202]},{"content":"For the first release of the .NET Framework, only CALG_SHA1 and CALG_MD5 are valid.","pos":[5203,5286]},{"content":"The hash values are stored in the file table of the assembly manifest.","pos":[5299,5369]},{"content":"At installation and load time, the assembly's files are checked against their hashes.","pos":[5370,5455]},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyAlgorithmIdAttribute&gt;</ph>) in the source code for any module.","pos":[5468,5613],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyAlgorithmIdAttribute>) in the source code for any module."},{"pos":[5618,5645],"content":"<bpt id=\"p1\">**</bpt>/base<ept id=\"p1\">**</ept>[<ph id=\"ph1\">`address`</ph>]:<ph id=\"ph2\">`addr`</ph>","source":"**/base**[`address`]:`addr`"},{"content":"Specifies the address at which a DLL will be loaded on the user's computer at run time.","pos":[5646,5733]},{"content":"Applications load faster if you specify the base address of the DLLs, instead of letting the operating system relocate the DLLs in the process space.","pos":[5734,5883]},{"pos":[5888,5913],"content":"<bpt id=\"p1\">**</bpt>/bugreport<ept id=\"p1\">**</ept>:<ph id=\"ph1\">`filename`</ph>","source":"**/bugreport**:`filename`"},{"pos":[5914,5987],"content":"Creates a file (<ph id=\"ph1\">`filename`</ph>) that contains information for reporting bugs.","source":"Creates a file (`filename`) that contains information for reporting bugs."},{"pos":[5992,6015],"content":"<bpt id=\"p1\">**</bpt>/comp<ept id=\"p1\">**</ept>[<ph id=\"ph1\">`any`</ph>]:<ph id=\"ph2\">`text`</ph>","source":"**/comp**[`any`]:`text`"},{"content":"Specifies a string for the Company field in the assembly.","pos":[6016,6073]},{"content":"Place the string in double quotation marks (\" \") if <ph id=\"ph1\">`text`</ph> contains a space.","pos":[6074,6150],"source":" Place the string in double quotation marks (\" \") if `text` contains a space."},{"content":"This string is a custom attribute on the assembly and is available for viewing with reflection.","pos":[6151,6246]},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <ph id=\"ph1\">`text`</ph> appears in File Explorer as the <ph id=\"ph2\">`Company`</ph> property for the file.","pos":[6259,6367],"source":"If you do not specify **/win32res**, `text` appears in File Explorer as the `Company` property for the file."},{"content":"If you specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, the company information in the specified resource file appears as the <ph id=\"ph1\">`Company`</ph> property in File Explorer.","pos":[6368,6504],"source":" If you specify **/win32res**, the company information in the specified resource file appears as the `Company` property in File Explorer."},{"content":"If text is an empty string (\"\"), the Win32 <ph id=\"ph1\">`Company`</ph> resource appears as a single space.","pos":[6517,6605],"source":"If text is an empty string (\"\"), the Win32 `Company` resource appears as a single space."},{"content":"If you specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/company<ept id=\"p2\">**</ept> will not affect the Win32 resource information.","pos":[6618,6708],"source":"If you specify **/win32res**, **/company** will not affect the Win32 resource information."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyCompanyAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[6721,6867],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyCompanyAttribute>) in the source code for any MSIL module."},{"pos":[6872,6901],"content":"<bpt id=\"p1\">**</bpt>/config<ept id=\"p1\">**</ept>[<ph id=\"ph1\">`uration`</ph>]:<ph id=\"ph2\">`text`</ph>","source":"**/config**[`uration`]:`text`"},{"content":"Specifies a string for the Configuration field in the assembly.","pos":[6902,6965]},{"content":"Place the string in double quotation marks (\" \") if <ph id=\"ph1\">`text`</ph> contains a space.","pos":[6966,7042],"source":" Place the string in double quotation marks (\" \") if `text` contains a space."},{"content":"This string is a custom attribute on the assembly and is available for viewing with reflection.","pos":[7043,7138]},{"content":"If text is an empty string, the Win32 Configuration resource appears as a single space.","pos":[7151,7238]},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyConfigurationAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[7251,7403],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyConfigurationAttribute>) in the source code for any MSIL module."},{"pos":[7408,7433],"content":"<bpt id=\"p1\">**</bpt>/copy<ept id=\"p1\">**</ept>[<ph id=\"ph1\">`right`</ph>]:<ph id=\"ph2\">`text`</ph>","source":"**/copy**[`right`]:`text`"},{"content":"Specifies a string for the Copyright field in the assembly.","pos":[7434,7493]},{"content":"Place the string in double quotation marks (\" \") if <ph id=\"ph1\">`text`</ph> contains a space.","pos":[7494,7570],"source":" Place the string in double quotation marks (\" \") if `text` contains a space."},{"content":"This string is a custom attribute on the assembly and is available for viewing with reflection.","pos":[7571,7666]},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/copyright<ept id=\"p2\">**</ept> appears in File Explorer as the Win32 Copyright resource.","pos":[7679,7788],"source":"If you do not specify **/win32res**, **/copyright** appears in File Explorer as the Win32 Copyright resource."},{"content":"If text is an empty string, the Win32 Copyright resource appears as a single space.","pos":[7801,7884]},{"content":"If you specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/copyright<ept id=\"p2\">**</ept> will not affect the Win32 resource information.","pos":[7897,7989],"source":"If you specify **/win32res**, **/copyright** will not affect the Win32 resource information."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyCopyrightAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[8002,8150],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyCopyrightAttribute>) in the source code for any MSIL module."},{"pos":[8155,8180],"content":"<bpt id=\"p1\">**</bpt>/c<ept id=\"p1\">**</ept>[<bpt id=\"p2\">**</bpt>ulture<ept id=\"p2\">**</ept>]:<ph id=\"ph1\">`text`</ph>","source":"**/c**[**ulture**]:`text`"},{"content":"Specifies the culture string to associate with the assembly.","pos":[8181,8241]},{"content":"Valid values for cultures are those defined by the Internet Requests for Comments (RFC) document 1766 titled \"Tags for the Identification of Languages.\"","pos":[8242,8394]},{"content":"Place the string in double quotation marks (\" \") if <ph id=\"ph1\">`text`</ph> contains a space.","pos":[8407,8483],"source":"Place the string in double quotation marks (\" \") if `text` contains a space."},{"content":"There is no default culture string.","pos":[8484,8519]},{"content":"This string is available for viewing with reflection.","pos":[8520,8573]},{"content":"For information about valid <ph id=\"ph1\">`text`</ph> strings, see the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.","pos":[8586,8678],"source":"For information about valid `text` strings, see the <xref:System.Globalization.CultureInfo>."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyCultureAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[8691,8837],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyCultureAttribute>) in the source code for any MSIL module."},{"pos":[8842,8872],"content":"<bpt id=\"p1\">**</bpt>/delay<ept id=\"p1\">**</ept>[<ph id=\"ph1\">`sign`</ph>][<ph id=\"ph2\">`+&amp;#124;-`</ph>]","source":"**/delay**[`sign`][`+&#124;-`]"},{"content":"Specifies whether the assembly will be fully or partially signed.","pos":[8873,8938]},{"content":"Use <bpt id=\"p1\">**</bpt>/delaysign-<ept id=\"p1\">**</ept> if you want a fully signed assembly.","pos":[8939,8995],"source":" Use **/delaysign-** if you want a fully signed assembly."},{"content":"Use <bpt id=\"p1\">**</bpt>/delaysign+<ept id=\"p1\">**</ept> if you only want to include the public key in the assembly.","pos":[8996,9075],"source":" Use **/delaysign+** if you only want to include the public key in the assembly."},{"content":"When you request a fully signed assembly, Al.exe hashes the file that contains the manifest (assembly metadata) and signs that hash with the private key.","pos":[9088,9241]},{"content":"The resulting digital signature is stored in the file that contains the manifest.","pos":[9242,9323]},{"content":"When an assembly is delay signed, Al.exe does not compute and store the signature, but just reserves space in the file so the signature can be added later.","pos":[9324,9479]},{"content":"The default is <bpt id=\"p1\">**</bpt>/delaysign-<ept id=\"p1\">**</ept>.","pos":[9492,9523],"source":"The default is **/delaysign-**."},{"content":"The <bpt id=\"p1\">**</bpt>/delaysign<ept id=\"p1\">**</ept> option has no effect unless used with <bpt id=\"p2\">**</bpt>/keyfile<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>/keyname<ept id=\"p3\">**</ept>.","pos":[9536,9622],"source":"The **/delaysign** option has no effect unless used with **/keyfile** or **/keyname**."},{"content":"For example, using <bpt id=\"p1\">**</bpt>/delaysign+<ept id=\"p1\">**</ept> enables a tester to put the assembly in the global cache.","pos":[9635,9727],"source":"For example, using **/delaysign+** enables a tester to put the assembly in the global cache."},{"content":"After testing, you can fully sign the assembly by including the private key in the assembly.","pos":[9728,9820]},{"content":"Note: Before using the <bpt id=\"p1\">[</bpt>Gacutil.exe (Global Assembly Cache Tool)<ept id=\"p1\">](../../../docs/framework/tools/gacutil-exe-gac-tool.md)</ept> to put a delay-signed assembly into the global cache, use the <bpt id=\"p2\">[</bpt>Sn.exe (Strong Name Tool)<ept id=\"p2\">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept> to register the assembly for verification skipping.","pos":[9833,10153],"source":"Note: Before using the [Gacutil.exe (Global Assembly Cache Tool)](../../../docs/framework/tools/gacutil-exe-gac-tool.md) to put a delay-signed assembly into the global cache, use the [Sn.exe (Strong Name Tool)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) to register the assembly for verification skipping."},{"content":"For example, <ph id=\"ph1\">`Sn.exe –Vr delaySignedAssembly`</ph>.","pos":[10154,10200],"source":" For example, `Sn.exe –Vr delaySignedAssembly`."},{"content":"Use this only for development.","pos":[10201,10231]},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[10244,10392],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyDelaySignAttribute>) in the source code for any MSIL module."},{"pos":[10397,10430],"content":"<bpt id=\"p1\">**</bpt>/descr<ept id=\"p1\">**</ept>[<bpt id=\"p2\">**</bpt>iption<ept id=\"p2\">**</ept>]<bpt id=\"p3\">**</bpt>:<ept id=\"p3\">**</ept><ph id=\"ph1\">`text`</ph>","source":"**/descr**[**iption**]**:**`text`"},{"content":"Specifies a string for the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyDescriptionAttribute.Description%2A&gt;</ph> field in the assembly.","pos":[10431,10549],"source":"Specifies a string for the <xref:System.Reflection.AssemblyDescriptionAttribute.Description%2A> field in the assembly."},{"content":"Place the string in double quotation marks (\" \") if <ph id=\"ph1\">`text`</ph> contains a space.","pos":[10550,10626],"source":" Place the string in double quotation marks (\" \") if `text` contains a space."},{"content":"This string is a custom attribute on the assembly and is available for viewing with reflection.","pos":[10627,10722]},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/description<ept id=\"p2\">**</ept> appears in File Explorer as the Win32 <bpt id=\"p3\">**</bpt>Comments<ept id=\"p3\">**</ept> resource.","pos":[10735,10849],"source":"If you do not specify **/win32res**, **/description** appears in File Explorer as the Win32 **Comments** resource."},{"content":"If text is an empty string, the Win32 <bpt id=\"p1\">**</bpt>Comments<ept id=\"p1\">**</ept> resource appears as a single space.","pos":[10862,10948],"source":"If text is an empty string, the Win32 **Comments** resource appears as a single space."},{"content":"If you specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/description<ept id=\"p2\">**</ept> will not affect the Win32 resource information.","pos":[10961,11055],"source":"If you specify **/win32res**, **/description** will not affect the Win32 resource information."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyDescriptionAttribute.Description%2A&gt;</ph>) in the source code for any MSIL module.","pos":[11068,11233],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyDescriptionAttribute.Description%2A>) in the source code for any MSIL module."},{"pos":[11238,11261],"content":"<bpt id=\"p1\">**</bpt>/e[vidence]:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`file`</ph>","source":"**/e[vidence]:** `file`"},{"content":"Embeds <ph id=\"ph1\">`file`</ph> in the assembly with the resource name of Security.Evidence.","pos":[11262,11336],"source":"Embeds `file` in the assembly with the resource name of Security.Evidence."},{"content":"You cannot use Security.Evidence for regular resources.","pos":[11349,11404]},{"pos":[11409,11436],"content":"<bpt id=\"p1\">**</bpt>/fileversion:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`version`</ph>","source":"**/fileversion:** `version`"},{"content":"Specifies a string for the <bpt id=\"p1\">**</bpt>File Version<ept id=\"p1\">**</ept> field in the assembly.","pos":[11437,11503],"source":"Specifies a string for the **File Version** field in the assembly."},{"content":"This string is a custom attribute on the assembly and is available for viewing with reflection.","pos":[11504,11599]},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/fileversion<ept id=\"p2\">**</ept> will be used as the Win32 <bpt id=\"p3\">**</bpt>File Version<ept id=\"p3\">**</ept> resource.","pos":[11612,11718],"source":"If you do not specify **/win32res**, **/fileversion** will be used as the Win32 **File Version** resource."},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/fileversion<ept id=\"p1\">**</ept>, the Win32 <bpt id=\"p2\">**</bpt>File Version<ept id=\"p2\">**</ept> resource will be populated by the Win32 <bpt id=\"p3\">**</bpt>Assembly Version<ept id=\"p3\">**</ept> resource.","pos":[11719,11856],"source":" If you do not specify **/fileversion**, the Win32 **File Version** resource will be populated by the Win32 **Assembly Version** resource."},{"content":"If <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept> is specified, <bpt id=\"p2\">**</bpt>/fileversion<ept id=\"p2\">**</ept> does not affect the Win32 resource.","pos":[11869,11952],"source":"If **/win32res** is specified, **/fileversion** does not affect the Win32 resource."},{"content":"You can also specify this option as a custom attribute (AssemblyFileVersionAttribute) in the source code for any MSIL module.","pos":[11965,12090]},{"pos":[12095,12114],"content":"<bpt id=\"p1\">**</bpt>/flags:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`flags`</ph>","source":"**/flags:** `flags`"},{"content":"Specifies a value for the <ph id=\"ph1\">`Flags`</ph> field in the assembly.","pos":[12115,12171],"source":"Specifies a value for the `Flags` field in the assembly."},{"content":"Possible values for <ph id=\"ph1\">`flags`</ph>:","pos":[12172,12200],"source":" Possible values for `flags`:"},{"content":"0x0000","pos":[12213,12219]},{"content":"The assembly is side-by-side compatible.","pos":[12226,12266]},{"content":"0x0010","pos":[12279,12285]},{"content":"The assembly cannot execute with other versions if they are executing in the same application domain.","pos":[12292,12393]},{"content":"0x0020","pos":[12406,12412]},{"content":"The assembly cannot execute with other versions if they are executing in the same process.","pos":[12419,12509]},{"content":"0x0030","pos":[12522,12528]},{"content":"The assembly cannot execute with other versions if they are executing on the same computer.","pos":[12535,12626]},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[12639,12783],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyFlagsAttribute>) in the source code for any MSIL module."},{"pos":[12788,12802],"content":"<bpt id=\"p1\">**</bpt>/fullpaths<ept id=\"p1\">**</ept>","source":"**/fullpaths**"},{"content":"Causes Al.exe to use the absolute path for any files that are reported in an error message.","pos":[12803,12894]},{"pos":[12899,12908],"content":"<bpt id=\"p1\">**</bpt>/help<ept id=\"p1\">**</ept>","source":"**/help**"},{"content":"Displays command syntax and options for the tool.","pos":[12909,12958]},{"pos":[12963,12989],"content":"<bpt id=\"p1\">**</bpt>/keyf[ile]:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`filename`</ph>","source":"**/keyf[ile]:** `filename`"},{"content":"Specifies a file (<ph id=\"ph1\">`filename`</ph>) that contains a key pair or just a public key to sign an assembly.","pos":[12990,13086],"source":"Specifies a file (`filename`) that contains a key pair or just a public key to sign an assembly."},{"content":"The compiler inserts the public key in the assembly manifest and then signs the final assembly with the private key.","pos":[13087,13203]},{"content":"See the <bpt id=\"p1\">[</bpt>Strong Name Tool (Sn.exe)<ept id=\"p1\">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept> for information about generating key files and installing key pairs into key containers.","pos":[13204,13386],"source":" See the [Strong Name Tool (Sn.exe)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) for information about generating key files and installing key pairs into key containers."},{"content":"If you are using delayed signing, this file will usually have the public key but not the private key.","pos":[13399,13500]},{"content":"The public key (of the key pair) information appears in the .publickey field of the assembly.","pos":[13513,13606]},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[13619,13765],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyKeyFileAttribute>) in the source code for any MSIL module."},{"content":"If both <bpt id=\"p1\">**</bpt>/keyfile<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>/keyname<ept id=\"p2\">**</ept> are specified (either by command-line option or by custom attribute) in the same compilation, Al.exe will first try the container specified with <bpt id=\"p3\">**</bpt>/keyname<ept id=\"p3\">**</ept>.","pos":[13778,13974],"source":"If both **/keyfile** and **/keyname** are specified (either by command-line option or by custom attribute) in the same compilation, Al.exe will first try the container specified with **/keyname**."},{"content":"If that succeeds, the assembly is signed with the information in the key container.","pos":[13975,14058]},{"content":"If Al.exe does not find the key container, it will try the file specified with <bpt id=\"p1\">**</bpt>/keyfile<ept id=\"p1\">**</ept>.","pos":[14059,14151],"source":" If Al.exe does not find the key container, it will try the file specified with **/keyfile**."},{"content":"If that succeeds, the assembly is signed with the information in the key file and the key information will be installed in the key container (similar to the -i option in <bpt id=\"p1\">[</bpt>Sn.exe<ept id=\"p1\">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept>) so that on the next compilation, the <bpt id=\"p2\">**</bpt>/keyname<ept id=\"p2\">**</ept> option will be valid.","pos":[14152,14461],"source":" If that succeeds, the assembly is signed with the information in the key file and the key information will be installed in the key container (similar to the -i option in [Sn.exe](../../../docs/framework/tools/sn-exe-strong-name-tool.md)) so that on the next compilation, the **/keyname** option will be valid."},{"pos":[14466,14488],"content":"<bpt id=\"p1\">**</bpt>/keyn[ame]:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`text`</ph>","source":"**/keyn[ame]:** `text`"},{"content":"Specifies a container that holds a key pair.","pos":[14489,14533]},{"content":"This will sign the assembly (give it a strong name) by inserting a public key into the assembly manifest.","pos":[14534,14639]},{"content":"Al.exe will then sign the final assembly with the private key.","pos":[14640,14702]},{"content":"Use Sn.exe to generate a key pair.","pos":[14715,14749]},{"content":"The key information appears in the .publickey field of the assembly.","pos":[14762,14830]},{"content":"Place <ph id=\"ph1\">`text`</ph> in double quotation marks (\" \") if there is an embedded space.","pos":[14843,14918],"source":"Place `text` in double quotation marks (\" \") if there is an embedded space."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyKeyNameAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[14931,15077],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyKeyNameAttribute>) in the source code for any MSIL module."},{"pos":[15082,15101],"content":"<bpt id=\"p1\">**</bpt>/main:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`method`</ph>","source":"**/main:** `method`"},{"pos":[15102,15242],"content":"Specifies the fully qualified name (<ph id=\"ph1\">`class`</ph>.<ph id=\"ph2\">`method`</ph>) of the method to use as an entry point when converting a module to an executable file.","source":"Specifies the fully qualified name (`class`.`method`) of the method to use as an entry point when converting a module to an executable file."},{"pos":[15247,15258],"content":"<bpt id=\"p1\">**</bpt>/nologo<ept id=\"p1\">**</ept>","source":"**/nologo**"},{"content":"Suppresses the banner, or logo, displayed at the command line when you invoke Al.exe.","pos":[15259,15344]},{"pos":[15349,15369],"content":"<bpt id=\"p1\">**</bpt>/out:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`filename`</ph>","source":"**/out:** `filename`"},{"content":"Specifies the name of the file produced by Al.exe.","pos":[15370,15420]},{"content":"This is a required option.","pos":[15421,15447]},{"pos":[15452,15472],"content":"<bpt id=\"p1\">**</bpt>/platform<ept id=\"p1\">**</ept>:<ph id=\"ph1\">`text`</ph>","source":"**/platform**:`text`"},{"content":"Limits which platform this code can run on; must be one of x86, Itanium, x64, anycpu (the default), or anycpu32bitpreferred.","pos":[15473,15597]},{"pos":[15602,15624],"content":"<bpt id=\"p1\">**</bpt>/prod[uct]:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`text`</ph>","source":"**/prod[uct]:** `text`"},{"content":"Specifies a string for the <bpt id=\"p1\">**</bpt>Product<ept id=\"p1\">**</ept> field in the assembly.","pos":[15625,15686],"source":"Specifies a string for the **Product** field in the assembly."},{"content":"Place the string in double quotation marks (\" \") if <ph id=\"ph1\">`text`</ph> contains a space.","pos":[15687,15763],"source":" Place the string in double quotation marks (\" \") if `text` contains a space."},{"content":"This string is a custom attribute on the assembly and is available for viewing with reflection.","pos":[15764,15859]},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/product<ept id=\"p2\">**</ept> appears in File Explorer as the Win32 <bpt id=\"p3\">**</bpt>Product Name<ept id=\"p3\">**</ept> resource.","pos":[15872,15986],"source":"If you do not specify **/win32res**, **/product** appears in File Explorer as the Win32 **Product Name** resource."},{"content":"If text is an empty string, the Win32 <bpt id=\"p1\">**</bpt>Product Name<ept id=\"p1\">**</ept> resource appears as a single space.","pos":[15999,16089],"source":"If text is an empty string, the Win32 **Product Name** resource appears as a single space."},{"content":"If you specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/product<ept id=\"p2\">**</ept> will not affect the Win32 resource information.","pos":[16102,16192],"source":"If you specify **/win32res**, **/product** will not affect the Win32 resource information."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[16205,16351],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyProductAttribute>) in the source code for any MSIL module."},{"pos":[16356,16385],"content":"<bpt id=\"p1\">**</bpt>/productv[ersion]:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`text`</ph>","source":"**/productv[ersion]:** `text`"},{"content":"Specifies a string for the <bpt id=\"p1\">**</bpt>Product Version<ept id=\"p1\">**</ept> field in the assembly.","pos":[16386,16455],"source":"Specifies a string for the **Product Version** field in the assembly."},{"content":"Place the string in double quotation marks (\" \") if <ph id=\"ph1\">`text`</ph> contains a space.","pos":[16456,16532],"source":" Place the string in double quotation marks (\" \") if `text` contains a space."},{"content":"This string is a custom attribute on the assembly and is available for viewing with reflection.","pos":[16533,16628]},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/productversion<ept id=\"p2\">**</ept> will be used as the Win32 <bpt id=\"p3\">**</bpt>Product Version<ept id=\"p3\">**</ept> resource.","pos":[16641,16753],"source":"If you do not specify **/win32res**, **/productversion** will be used as the Win32 **Product Version** resource."},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/productversion<ept id=\"p1\">**</ept>, the Win32 <bpt id=\"p2\">**</bpt>Product Version<ept id=\"p2\">**</ept> resource will be populated by the Win32 <bpt id=\"p3\">**</bpt>File Version<ept id=\"p3\">**</ept> resource.","pos":[16754,16893],"source":" If you do not specify **/productversion**, the Win32 **Product Version** resource will be populated by the Win32 **File Version** resource."},{"content":"If you specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/productversion<ept id=\"p2\">**</ept> will not affect the Win32 resource information.","pos":[16906,17003],"source":"If you specify **/win32res**, **/productversion** will not affect the Win32 resource information."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyInformationalVersionAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[17016,17175],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyInformationalVersionAttribute>) in the source code for any MSIL module."},{"pos":[17180,17230],"content":"<bpt id=\"p1\">**</bpt>/t[arget]:lib[rary] &amp;#124; exe &amp;#124; win[exe]<ept id=\"p1\">**</ept>","source":"**/t[arget]:lib[rary] &#124; exe &#124; win[exe]**"},{"content":"Specifies the file format of the output file: <ph id=\"ph1\">`lib`</ph>rary (code library), <ph id=\"ph2\">`exe`</ph> (console application), or <ph id=\"ph3\">`win`</ph>exe (Windows-based application).","pos":[17231,17372],"source":"Specifies the file format of the output file: `lib`rary (code library), `exe` (console application), or `win`exe (Windows-based application)."},{"content":"The default is lib[rary].","pos":[17373,17398]},{"pos":[17403,17428],"content":"<bpt id=\"p1\">**</bpt>/template:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`filename`</ph>","source":"**/template:** `filename`"},{"content":"Specifies the assembly, <ph id=\"ph1\">`filename`</ph>, from which to inherit all assembly metadata, except the culture field.","pos":[17429,17535],"source":"Specifies the assembly, `filename`, from which to inherit all assembly metadata, except the culture field."},{"content":"An assembly that you create with <bpt id=\"p1\">**</bpt>/template<ept id=\"p1\">**</ept> will be a satellite assembly.","pos":[17548,17624],"source":"An assembly that you create with **/template** will be a satellite assembly."},{"pos":[17629,17647],"content":"<bpt id=\"p1\">**</bpt>/title:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`text`</ph>","source":"**/title:** `text`"},{"content":"Specifies a string for the <bpt id=\"p1\">**</bpt>Title<ept id=\"p1\">**</ept> field in the assembly.","pos":[17648,17707],"source":"Specifies a string for the **Title** field in the assembly."},{"content":"Place the string in double quotation marks (\" \") if <ph id=\"ph1\">`text`</ph> contains a space.","pos":[17708,17784],"source":" Place the string in double quotation marks (\" \") if `text` contains a space."},{"content":"This string is a custom attribute on the assembly and is available for viewing with reflection.","pos":[17785,17880]},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/title<ept id=\"p2\">**</ept> appears in File Explorer as the Win32 <bpt id=\"p3\">**</bpt>Description<ept id=\"p3\">**</ept> resource, which is used by the shell as the friendly name of an application.","pos":[17893,18071],"source":"If you do not specify **/win32res**, **/title** appears in File Explorer as the Win32 **Description** resource, which is used by the shell as the friendly name of an application."},{"content":"It is also displayed on the <bpt id=\"p1\">**</bpt>Open With<ept id=\"p1\">**</ept> submenu of the shortcut menu for a file type for which there are multiple supporting applications.","pos":[18072,18212],"source":" It is also displayed on the **Open With** submenu of the shortcut menu for a file type for which there are multiple supporting applications."},{"content":"If text is an empty string, the Win32 <bpt id=\"p1\">**</bpt>Description<ept id=\"p1\">**</ept> resource appears as a single space.","pos":[18225,18314],"source":"If text is an empty string, the Win32 **Description** resource appears as a single space."},{"content":"If you specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/title<ept id=\"p2\">**</ept> will not affect the Win32 resource information.","pos":[18327,18415],"source":"If you specify **/win32res**, **/title** will not affect the Win32 resource information."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyTitleAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[18428,18572],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyTitleAttribute>) in the source code for any MSIL module."},{"pos":[18577,18601],"content":"<bpt id=\"p1\">**</bpt>/trade[mark]:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`text`</ph>","source":"**/trade[mark]:** `text`"},{"content":"Specifies a string for the <bpt id=\"p1\">**</bpt>Trademark<ept id=\"p1\">**</ept> field in the assembly.","pos":[18602,18665],"source":"Specifies a string for the **Trademark** field in the assembly."},{"content":"Place the string in double quotation marks (\" \") if <ph id=\"ph1\">`text`</ph> contains a space.","pos":[18666,18742],"source":" Place the string in double quotation marks (\" \") if `text` contains a space."},{"content":"This string is a custom attribute on the assembly and is available for viewing with reflection.","pos":[18743,18838]},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/trademark<ept id=\"p2\">**</ept> appears in File Explorer as the Win32 <bpt id=\"p3\">**</bpt>Trademark<ept id=\"p3\">**</ept> resource.","pos":[18851,18964],"source":"If you do not specify **/win32res**, **/trademark** appears in File Explorer as the Win32 **Trademark** resource."},{"content":"If text is an empty string, the Win32 <bpt id=\"p1\">**</bpt>Trademark<ept id=\"p1\">**</ept> resource appears as a single space.","pos":[18977,19064],"source":"If text is an empty string, the Win32 **Trademark** resource appears as a single space."},{"content":"If you specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/trademark<ept id=\"p2\">**</ept> will not affect the Win32 resource information.","pos":[19077,19169],"source":"If you specify **/win32res**, **/trademark** will not affect the Win32 resource information."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyTrademarkAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[19182,19330],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyTrademarkAttribute>) in the source code for any MSIL module."},{"pos":[19335,19360],"content":"<bpt id=\"p1\">**</bpt>/v[ersion]:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`version`</ph>","source":"**/v[ersion]:** `version`"},{"content":"Specifies version information for this assembly.","pos":[19361,19409]},{"content":"The format of the version string is <ph id=\"ph1\">`major`</ph>.<ph id=\"ph2\">`minor`</ph>.<ph id=\"ph3\">`build`</ph>.<ph id=\"ph4\">`revision`</ph>. The default value is 0.","pos":[19410,19505],"source":" The format of the version string is `major`.`minor`.`build`.`revision`. The default value is 0."},{"content":"If you do specify <bpt id=\"p1\">**</bpt>/version<ept id=\"p1\">**</ept>, you must specify <ph id=\"ph1\">`major`</ph>.","pos":[19518,19575],"source":"If you do specify **/version**, you must specify `major`."},{"content":"If you specify <ph id=\"ph1\">`major`</ph> and <ph id=\"ph2\">`minor`</ph>, you can specify an asterisk (<ph id=\"ph3\">\\*</ph>)for <ph id=\"ph4\">`build`</ph>.","pos":[19576,19656],"source":" If you specify `major` and `minor`, you can specify an asterisk (\\*)for `build`."},{"content":"This causes <ph id=\"ph1\">`build`</ph> to be equal to the number of days since January 1, 2000, local time, and <ph id=\"ph2\">`revision`</ph> to be equal to the number of seconds since midnight of the current day, local time, divided by 2.","pos":[19657,19858],"source":" This causes `build` to be equal to the number of days since January 1, 2000, local time, and `revision` to be equal to the number of seconds since midnight of the current day, local time, divided by 2."},{"content":"If you specify <ph id=\"ph1\">`major`</ph>, <ph id=\"ph2\">`minor`</ph>, and <ph id=\"ph3\">`build`</ph>, you can specify an asterisk for <ph id=\"ph4\">`revision`</ph>.","pos":[19871,19960],"source":"If you specify `major`, `minor`, and `build`, you can specify an asterisk for `revision`."},{"content":"This causes <ph id=\"ph1\">`revision`</ph> to be equal to the number of seconds since midnight of the current day, local time, divided by 2.","pos":[19961,20081],"source":" This causes `revision` to be equal to the number of seconds since midnight of the current day, local time, divided by 2."},{"content":"To summarize, the valid version strings are as follows:","pos":[20094,20149]},{"content":"X","pos":[20162,20163]},{"content":"X.X","pos":[20176,20179]},{"content":"X.X.<ph id=\"ph1\">\\*</ph>","pos":[20192,20198],"source":"X.X.\\*"},{"content":"X.X.X","pos":[20211,20216]},{"content":"X.X.X.<ph id=\"ph1\">\\*</ph>","pos":[20229,20237],"source":"X.X.X.\\*"},{"content":"X.X.X.X","pos":[20250,20257]},{"content":"where X is any unsigned short constant except 65535 (0-65534).","pos":[20270,20332]},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/version<ept id=\"p2\">**</ept> will be used as the Win32 <bpt id=\"p3\">**</bpt>Assembly Version<ept id=\"p3\">**</ept> resource.","pos":[20345,20451],"source":"If you do not specify **/win32res**, **/version** will be used as the Win32 **Assembly Version** resource."},{"content":"If you do not specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/productversion<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>/fileversion<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>/version<ept id=\"p4\">**</ept> will be used for the <bpt id=\"p5\">**</bpt>Assembly Version<ept id=\"p5\">**</ept>, File Version, and <bpt id=\"p6\">**</bpt>Product Version<ept id=\"p6\">**</ept> Win32 resources.","pos":[20464,20654],"source":"If you do not specify **/win32res**, **/productversion**, and **/fileversion**, **/version** will be used for the **Assembly Version**, File Version, and **Product Version** Win32 resources."},{"content":"If you specify <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>/version<ept id=\"p2\">**</ept> will not affect the Win32 resource information.","pos":[20667,20757],"source":"If you specify **/win32res**, **/version** will not affect the Win32 resource information."},{"content":"You can also specify this option as a custom attribute (<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>) in the source code for any MSIL module.","pos":[20770,20916],"source":"You can also specify this option as a custom attribute (<xref:System.Reflection.AssemblyVersionAttribute>) in the source code for any MSIL module."},{"pos":[20921,20947],"content":"<bpt id=\"p1\">**</bpt>/win32icon:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`filename`</ph>","source":"**/win32icon:** `filename`"},{"content":"Inserts an .ico file in the assembly.","pos":[20948,20985]},{"content":"The .ico file gives the output file the desired appearance in File Explorer.","pos":[20986,21062]},{"pos":[21067,21092],"content":"<bpt id=\"p1\">**</bpt>/win32res:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`filename`</ph>","source":"**/win32res:** `filename`"},{"content":"Inserts a Win32 resource (.res file) in the output file.","pos":[21093,21149]},{"content":"A Win32 resource file can be created by using the Resource Compiler.","pos":[21150,21218]},{"content":"The Resource Compiler is invoked when you compile a Visual C++ program; a .res file is created from the .rc file.","pos":[21219,21332]},{"content":"Specifies a response file that contains Al.exe commands.","pos":[21349,21405]},{"content":"Commands in the response file can appear one per line or on the same line, separated by one or more spaces.","pos":[21418,21525]},{"pos":[21530,21536],"content":"<bpt id=\"p1\">**</bpt>/?<ept id=\"p1\">**</ept>","source":"**/?**"},{"content":"Displays command syntax and options for the tool.","pos":[21537,21586]},{"pos":[21596,21603],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"All Visual Studio compilers produce assemblies.","pos":[21607,21654]},{"content":"However, if you have one or more modules (metadata without a manifest), you can use Al.exe to create an assembly with the manifest in a separate file.","pos":[21655,21805]},{"pos":[21812,22023],"content":"To install assemblies in the cache, remove assemblies from the cache, or list the contents of the cache, use the <bpt id=\"p1\">[</bpt>Global Assembly Cache Tool (Gacutil.exe)<ept id=\"p1\">](../../../docs/framework/tools/gacutil-exe-gac-tool.md)</ept>.","source":"To install assemblies in the cache, remove assemblies from the cache, or list the contents of the cache, use the [Global Assembly Cache Tool (Gacutil.exe)](../../../docs/framework/tools/gacutil-exe-gac-tool.md)."},{"pos":[22032,22051],"content":"Errors and Warnings","linkify":"Errors and Warnings","nodes":[{"content":"Errors and Warnings","pos":[0,19]}]},{"content":"The following table lists the errors generated by Al.exe.","pos":[22055,22112]},{"content":"Error","pos":[22119,22124]},{"content":"Description","pos":[22125,22136]},{"content":"al1001","pos":[22175,22181]},{"content":"Internal compiler error","pos":[22182,22205]},{"content":"Try to determine whether Al.exe is failing because of its inability to parse unexpected syntax.","pos":[22218,22313]},{"content":"Then, contact Microsoft Product Support Services.","pos":[22314,22363]},{"content":"al1002","pos":[22368,22374]},{"content":"Out of memory","pos":[22375,22388]},{"content":"Al.exe ran out of memory and stopped.","pos":[22401,22438]},{"content":"Increase the amount of available memory.","pos":[22439,22479]},{"content":"al1003","pos":[22484,22490]},{"content":"Compiler option 'option' must be followed by an argument","pos":[22491,22547]},{"content":"Al.exe expected an argument to be passed to a command-line option.","pos":[22560,22626]},{"content":"For example, if you specify <bpt id=\"p1\">**</bpt>/algid:<ept id=\"p1\">**</ept>, you must pass an algorithm identifier.","pos":[22627,22706],"source":" For example, if you specify **/algid:**, you must pass an algorithm identifier."},{"content":"al1004","pos":[22711,22717]},{"content":"Unexpected common language runtime initialization error — 'reason'","pos":[22718,22784]},{"content":"Al.exe reported an error with the installation of Visual Studio or the common language runtime for the specified reason.","pos":[22797,22917]},{"content":"al1005","pos":[22922,22928]},{"content":"File 'file' too big to open","pos":[22929,22956]},{"content":"All files opened by Al.exe must be smaller than 4 gigabytes (GB).","pos":[22969,23034]},{"content":"al1006","pos":[23039,23045]},{"content":"Response file 'file' was already included","pos":[23046,23087]},{"content":"The same response file was specified (<ph id=\"ph1\">`@file`</ph>) more than once on the command line.","pos":[23100,23182],"source":"The same response file was specified (`@file`) more than once on the command line."},{"content":"The response file can only be included once.","pos":[23183,23227]},{"content":"al1007","pos":[23232,23238]},{"content":"Error opening response file 'file' — 'reason'","pos":[23239,23284]},{"content":"Al.exe cannot open the specified response file for the specified reason.","pos":[23297,23369]},{"content":"al1008","pos":[23374,23380]},{"content":"Missing file specification for 'option' command-line option","pos":[23381,23440]},{"content":"Al.exe expected a file to be passed to a command-line option.","pos":[23453,23514]},{"content":"For example, if you specify the <bpt id=\"p1\">**</bpt>/out<ept id=\"p1\">**</ept> option, you must specify a file.","pos":[23515,23588],"source":" For example, if you specify the **/out** option, you must specify a file."},{"content":"al1009","pos":[23593,23599]},{"content":"Can't open 'file' for writing","pos":[23600,23629]},{"content":"Al.exe was unable to write to a file, such as the output assembly file.","pos":[23642,23713]},{"content":"The disk might be full, the file might be read-only, or you might not have permissions to the file.","pos":[23714,23813]},{"content":"al1010","pos":[23818,23824]},{"content":"Command-line syntax error: Missing ':text' for 'option' option","pos":[23825,23887]},{"content":"Al.exe expected an argument to be passed to a command-line option.","pos":[23900,23966]},{"content":"For example, if you specify the <bpt id=\"p1\">**</bpt>/title<ept id=\"p1\">**</ept> option, you must pass a string.","pos":[23967,24041],"source":" For example, if you specify the **/title** option, you must pass a string."},{"content":"al1011","pos":[24046,24052]},{"content":"File 'file' is an executable file and cannot be opened as a text file","pos":[24053,24122]},{"content":"A binary file was specified where a text file was expected.","pos":[24135,24194]},{"content":"For example, this error occurs if a binary file is passed on the command line as a response file.","pos":[24195,24292]},{"content":"al1012","pos":[24297,24303]},{"content":"'value' is not a valid setting for option 'option'","pos":[24304,24354]},{"content":"An unexpected value was passed to a command-line option.","pos":[24367,24423]},{"content":"For example, this error occurs if you specify an invalid value to the <bpt id=\"p1\">**</bpt>/target<ept id=\"p1\">**</ept> option.","pos":[24424,24513],"source":" For example, this error occurs if you specify an invalid value to the **/target** option."},{"content":"al1013","pos":[24518,24524]},{"content":"Unrecognized command-line option: 'option'","pos":[24525,24567]},{"content":"An invalid command-line option was specified.","pos":[24580,24625]},{"content":"al1014","pos":[24630,24636]},{"content":"Unexpected initialization error — 'reason'","pos":[24637,24679]},{"content":"Al.exe detected a COM initialization failure.","pos":[24692,24737]},{"content":"This might be caused by a lack of memory, but a more likely cause is the system DLL files.","pos":[24738,24828]},{"content":"You should see a similar error if you run any Automation-aware or COM-aware program, such as Microsoft Visual Studio.","pos":[24829,24946]},{"content":"Reinstall the operating system.","pos":[24959,24990]},{"content":"al1015","pos":[24995,25001]},{"content":"Unable to find messages file 'alinkui.dll'","pos":[25002,25044]},{"content":"Al.exe requires Alinkui.dll.","pos":[25057,25085]},{"content":"Make sure that this file is on your path.","pos":[25086,25127]},{"content":"If necessary, copy it from the product CD.","pos":[25128,25170]},{"content":"al1016","pos":[25175,25181]},{"content":"No valid input files were specified","pos":[25182,25217]},{"content":"Al.exe requires one or more input files that do not have assembly information.","pos":[25230,25308]},{"content":"al1017","pos":[25313,25319]},{"content":"No target file name was specified","pos":[25320,25353]},{"content":"The required <bpt id=\"p1\">**</bpt>/out<ept id=\"p1\">**</ept> option specifying the target file name was missing.","pos":[25366,25439],"source":"The required **/out** option specifying the target file name was missing."},{"content":"al1018","pos":[25444,25450]},{"content":"Required file 'file' could not be loaded","pos":[25451,25491]},{"content":"Certain DLL files cannot be loaded.","pos":[25504,25539]},{"content":"Reinstall Visual Studio or the <ph id=\"ph1\">[!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)]</ph>.","pos":[25540,25630],"source":" Reinstall Visual Studio or the [!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)]."},{"content":"al1019","pos":[25635,25641]},{"content":"Metadata failure while creating assembly — reason","pos":[25642,25691]},{"content":"Generation of the assembly was interrupted for the specified reason.","pos":[25704,25772]},{"content":"For example, this error occurs if a file that you specify with the <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept> option is not found.","pos":[25773,25874],"source":" For example, this error occurs if a file that you specify with the **/win32res** option is not found."},{"content":"al1020","pos":[25879,25885]},{"content":"Ignoring included assembly 'file'","pos":[25886,25919]},{"content":"An input file that contained an assembly was specified.","pos":[25932,25987]},{"content":"Al.exe input files cannot contain assemblies.","pos":[25988,26033]},{"content":"al1021","pos":[26038,26044]},{"content":"'setting' : overriding previous setting","pos":[26045,26084]},{"content":"A module had a value for a particular setting, possibly assigned through custom attributes, which was overridden with a value passed using an Al.exe command-line option.","pos":[26097,26266]},{"content":"al1022","pos":[26271,26277]},{"content":"Error reading embedded resource 'file' — reason","pos":[26278,26325]},{"content":"Al.exe cannot read the file passed to the <bpt id=\"p1\">**</bpt>/embedresource<ept id=\"p1\">**</ept> option for the specified reason.","pos":[26338,26431],"source":"Al.exe cannot read the file passed to the **/embedresource** option for the specified reason."},{"content":"al1023","pos":[26436,26442]},{"content":"Error embedding resource 'file' — reason","pos":[26443,26483]},{"content":"The operating system cannot embed the resource file in the assembly for the specified reason.","pos":[26496,26589]},{"content":"al1025","pos":[26594,26600]},{"content":"ComType record 'record' points to an invalid file record 'record'","pos":[26601,26666]},{"content":"Metadata in the input module is invalid.","pos":[26679,26719]},{"content":"The tool that produced the module must be fixed.","pos":[26720,26768]},{"content":"al1026","pos":[26773,26779]},{"content":"The version specified 'version' is invalid","pos":[26780,26822]},{"content":"See information about the <bpt id=\"p1\">**</bpt>/version<ept id=\"p1\">**</ept> option for valid formats.","pos":[26835,26899],"source":"See information about the **/version** option for valid formats."},{"content":"al1028","pos":[26904,26910]},{"content":"Key file 'file' is missing the private key needed for signing","pos":[26911,26972]},{"content":"A key file that contains only the public key was passed to the <bpt id=\"p1\">**</bpt>/keyfile<ept id=\"p1\">**</ept> option.","pos":[26985,27068],"source":"A key file that contains only the public key was passed to the **/keyfile** option."},{"content":"Use the <bpt id=\"p1\">[</bpt>Strong Name Tool (Sn.exe)<ept id=\"p1\">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept> to generate a file that has both a public and private key, as shown in the following command.","pos":[27069,27256],"source":" Use the [Strong Name Tool (Sn.exe)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) to generate a file that has both a public and private key, as shown in the following command."},{"content":"al1029","pos":[27294,27300]},{"content":"The key container name 'container' does not exist","pos":[27301,27350]},{"content":"The value passed to the <bpt id=\"p1\">**</bpt>/keyname<ept id=\"p1\">**</ept> option is not a valid container.","pos":[27363,27432],"source":"The value passed to the **/keyname** option is not a valid container."},{"content":"Use the <bpt id=\"p1\">[</bpt>Strong Name Tool (Sn.exe)<ept id=\"p1\">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept> to create a container.","pos":[27433,27549],"source":" Use the [Strong Name Tool (Sn.exe)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) to create a container."},{"content":"al1030","pos":[27554,27560]},{"content":"The cryptographic service is not installed properly or does not have a suitable key provider","pos":[27561,27653]},{"content":"You might have to either reinstall the operating system or install some cryptographic utility that was that is used to create the key.","pos":[27666,27800]},{"content":"al1031","pos":[27805,27811]},{"content":"Error reading icon 'file' — reason","pos":[27812,27846]},{"content":"Al.exe cannot read the file that was passed to the <bpt id=\"p1\">**</bpt>/win32icon<ept id=\"p1\">**</ept> option for the specified reason","pos":[27859,27956],"source":"Al.exe cannot read the file that was passed to the **/win32icon** option for the specified reason"},{"content":"al1032","pos":[27961,27967]},{"content":"Error generating resources for 'file' — reason","pos":[27968,28014]},{"content":"Al.exe cannot create a file because of insufficient disk space or some other error.","pos":[28027,28110]},{"content":"This error occurs when you specify the <bpt id=\"p1\">**</bpt>/win32icon<ept id=\"p1\">**</ept> option (which generates an .ico file) or do not specify the <bpt id=\"p2\">**</bpt>/win32res<ept id=\"p2\">**</ept> option (which generates a file that has resource information).","pos":[28111,28301],"source":" This error occurs when you specify the **/win32icon** option (which generates an .ico file) or do not specify the **/win32res** option (which generates a file that has resource information)."},{"content":"If you cannot resolve the file generation problem, use <bpt id=\"p1\">**</bpt>/win32res<ept id=\"p1\">**</ept>, which specifies a file that can contain version or bitmap (icon) information.","pos":[28314,28461],"source":"If you cannot resolve the file generation problem, use **/win32res**, which specifies a file that can contain version or bitmap (icon) information."},{"content":"al1033","pos":[28466,28472]},{"content":"Assembly custom attribute 'attribute' was specified multiple times with different values","pos":[28473,28561]},{"content":"Different values were passed to two occurrences of the same custom attribute in source modules that are specified as input to Al.exe.","pos":[28574,28707]},{"content":"al1034","pos":[28712,28718]},{"content":"Assembly 'file' cannot be copied or renamed","pos":[28719,28762]},{"content":"While using the Al.exe syntax that enables you to both specify an input file and copy it, a name conflict arose that stopped the compiler.","pos":[28775,28913]},{"content":"For example, this error occurs if you specify <ph id=\"ph1\">`input.dll,somename.dll /out:somename.dll`</ph>.","pos":[28914,29003],"source":" For example, this error occurs if you specify `input.dll,somename.dll /out:somename.dll`."},{"content":"al1035","pos":[29008,29014]},{"content":"Libraries cannot have an entry point","pos":[29015,29051]},{"content":"You cannot specify both the <bpt id=\"p1\">**</bpt>/target:lib<ept id=\"p1\">**</ept> option (the default) and the <bpt id=\"p2\">**</bpt>/main<ept id=\"p2\">**</ept> option.","pos":[29064,29154],"source":"You cannot specify both the **/target:lib** option (the default) and the **/main** option."},{"content":"al1036","pos":[29159,29165]},{"content":"Entry point required for executable applications","pos":[29166,29214]},{"content":"When using the <bpt id=\"p1\">**</bpt>/target:exe<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>/target:win<ept id=\"p2\">**</ept> option, you must also specify the <bpt id=\"p3\">**</bpt>/main<ept id=\"p3\">**</ept> option.","pos":[29227,29328],"source":"When using the **/target:exe** or **/target:win** option, you must also specify the **/main** option."},{"content":"al1037","pos":[29333,29339]},{"content":"Unable to find the entry point method 'main'","pos":[29340,29384]},{"content":"Al.exe cannot find a <ph id=\"ph1\">`Main`</ph> method at the location specified by the <bpt id=\"p1\">**</bpt>/main<ept id=\"p1\">**</ept> option.","pos":[29397,29482],"source":"Al.exe cannot find a `Main` method at the location specified by the **/main** option."},{"content":"al1039","pos":[29487,29493]},{"content":"Initialization of global assembly cache manager failed — reason","pos":[29494,29557]},{"content":"Reinstall Visual Studio or the <ph id=\"ph1\">[!INCLUDE[winsdkshort](../../../includes/winsdkshort-md.md)]</ph>.","pos":[29570,29662],"source":"Reinstall Visual Studio or the [!INCLUDE[winsdkshort](../../../includes/winsdkshort-md.md)]."},{"content":"al1040","pos":[29667,29673]},{"content":"Failed to install assembly into cache — reason","pos":[29674,29720]},{"content":"Only signed assemblies can be installed into the cache.","pos":[29733,29788]},{"content":"See <bpt id=\"p1\">[</bpt>Global Assembly Cache<ept id=\"p1\">](../../../docs/framework/app-domains/gac.md)</ept> for more information.","pos":[29789,29882],"source":" See [Global Assembly Cache](../../../docs/framework/app-domains/gac.md) for more information."},{"content":"al1041","pos":[29887,29893]},{"content":"'method': cannot be the entry point because the signature or visibility is incorrect, or it is generic","pos":[29894,29996]},{"content":"A method was specified with the <bpt id=\"p1\">**</bpt>/main<ept id=\"p1\">**</ept> option, but that method is not static, does not return <ph id=\"ph1\">`int`</ph> or <ph id=\"ph2\">`void`</ph>, was generic, or has invalid arguments.","pos":[30009,30161],"source":"A method was specified with the **/main** option, but that method is not static, does not return `int` or `void`, was generic, or has invalid arguments."},{"content":"al1042","pos":[30166,30172]},{"content":"'exe': EXEs cannot be added modules","pos":[30173,30208]},{"content":"An .exe file that does not have an assembly was specified as an input file to Al.exe.","pos":[30221,30306]},{"content":"Al.exe can only take .dll files without assemblies as input files.","pos":[30307,30373]},{"content":"al1043","pos":[30378,30384]},{"content":"Manifest file name 'name' cannot be the same as any modules","pos":[30385,30444]},{"content":"The name specified with the <bpt id=\"p1\">**</bpt>/out<ept id=\"p1\">**</ept> option cannot be the same as any one of the file names that are specified as input to Al.exe.","pos":[30457,30587],"source":"The name specified with the **/out** option cannot be the same as any one of the file names that are specified as input to Al.exe."},{"content":"al1044","pos":[30592,30598]},{"content":"Error reading key file 'file' — reason","pos":[30599,30637]},{"content":"An error occurred while opening or reading from a file specified with <bpt id=\"p1\">**</bpt>/keyfile<ept id=\"p1\">**</ept> or the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;</ph>.","pos":[30650,30790],"source":"An error occurred while opening or reading from a file specified with **/keyfile** or the <xref:System.Reflection.AssemblyKeyFileAttribute>."},{"content":"al1045","pos":[30795,30801]},{"content":"Filename 'file' is too long or invalid","pos":[30802,30840]},{"content":"A file name longer than 260 characters was passed to Al.exe.","pos":[30853,30913]},{"content":"Choose a file name with fewer characters or a shorter path, or rename the file.","pos":[30914,30993]},{"content":"al1046","pos":[30998,31004]},{"content":"Resource identifier 'ID' has already been used in this assembly","pos":[31005,31068]},{"content":"Two resources, embedded or linked, have the same identifier or name (the second argument).","pos":[31081,31171]},{"content":"Remove or rename one of the conflicting resources.","pos":[31172,31222]},{"content":"al1047","pos":[31227,31233]},{"content":"Error importing file 'file' — reason","pos":[31234,31270]},{"content":"A module file cannot be opened for the specified reason.","pos":[31283,31339]},{"content":"al1048","pos":[31344,31350]},{"content":"Error importing module 'module' of assembly 'assembly' — reason","pos":[31351,31414]},{"content":"An error occurred when opening a nonmanifest file of a multifile assembly.","pos":[31427,31501]},{"content":"This error is not emitted directly by Al.exe, but can be passed programmatically to a process that uses Al.exe.","pos":[31502,31613]},{"content":"al1049","pos":[31618,31624]},{"content":"Cannot auto-generate build and revision version numbers for dates before January 1, 2000","pos":[31625,31713]},{"content":"The system clock on your computer is set to a date earlier than January 1, 2000.","pos":[31726,31806]},{"content":"al1050","pos":[31811,31817]},{"content":"The feature you are using 'old feature' is no longer supported; please use 'new feature' instead","pos":[31818,31914]},{"content":"A feature previously supported by Al.exe is now obsolete.","pos":[31927,31984]},{"content":"Use the recommended feature instead.","pos":[31985,32021]},{"content":"al1051","pos":[32026,32032]},{"content":"Error emitting 'attribute' attribute —'reason'","pos":[32033,32079]},{"content":"An assembly custom attribute was not processed by Al.exe for the specified reason.","pos":[32092,32174]},{"content":"al1052","pos":[32179,32185]},{"content":"File 'filename' is not an assembly","pos":[32186,32220]},{"content":"The file specified with <bpt id=\"p1\">**</bpt>/template<ept id=\"p1\">**</ept> must contain assembly metadata.","pos":[32233,32302],"source":"The file specified with **/template** must contain assembly metadata."},{"content":"This error indicates that the file specified by <bpt id=\"p1\">**</bpt>/template<ept id=\"p1\">**</ept> did not contain an assembly.","pos":[32303,32393],"source":" This error indicates that the file specified by **/template** did not contain an assembly."},{"content":"al1053","pos":[32398,32404]},{"content":"The version 'version' specified for the 'option' is not in the normal 'major.minor.build.revision' format","pos":[32405,32510]},{"content":"Al.exe detected ill-formed version information specified with the <bpt id=\"p1\">**</bpt>/fileversion<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>/productversion<ept id=\"p2\">**</ept> options.","pos":[32523,32637],"source":"Al.exe detected ill-formed version information specified with the **/fileversion** or **/productversion** options."},{"content":"al1054","pos":[32642,32648]},{"content":"The version 'version' specified for the 'option' is not in the normal 'major.minor.build.revision' format","pos":[32649,32754]},{"content":"Al.exe detected ill-formed version information specified with the <ph id=\"ph1\">&lt;xref:System.Resources.SatelliteContractVersionAttribute&gt;</ph>.","pos":[32767,32891],"source":"Al.exe detected ill-formed version information specified with the <xref:System.Resources.SatelliteContractVersionAttribute>."},{"content":"al1055","pos":[32896,32902]},{"content":"Referenced assembly 'filename' does not have a strong name","pos":[32903,32961]},{"content":"This error is issued when you are building an assembly with a strong name and reference an assembly that does not have a strong name.","pos":[32974,33107]},{"content":"To fix this, you must either regenerate your assembly with a strong name, or attach a strong name to the assembly by using sn.exe (see the documentation for <bpt id=\"p1\">[</bpt>sn.exe<ept id=\"p1\">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept>).","pos":[33108,33333],"source":" To fix this, you must either regenerate your assembly with a strong name, or attach a strong name to the assembly by using sn.exe (see the documentation for [sn.exe](../../../docs/framework/tools/sn-exe-strong-name-tool.md))."},{"content":"A common occurrence of this error is when you are using COM objects by way of wrapper assemblies, such as when you add a reference to a COM module to a C# project by way of the Visual Studio IDE.","pos":[33346,33541]},{"content":"To avoid the error, you can specify the strong name key file for COM wrapper assemblies in the Project Property \"Wrapper Assembly Key File/Name\"","pos":[33542,33686]},{"content":"If you are creating the wrapper assembly through tlbimp, see the <bpt id=\"p1\">[</bpt>tlbimp<ept id=\"p1\">](../../../docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> documentation for information about how to assign a strong name to the wrapper assembly.","pos":[33699,33928],"source":"If you are creating the wrapper assembly through tlbimp, see the [tlbimp](../../../docs/framework/tools/tlbimp-exe-type-library-importer.md) documentation for information about how to assign a strong name to the wrapper assembly."},{"content":"If an assembly has a strong name, it can be installed in the global assembly cache.","pos":[33941,34024]},{"content":"Consequently, referenced assemblies would also go into the global assembly cache.","pos":[34025,34106]},{"content":"Only assemblies with strong names can go into the global assembly cache.","pos":[34107,34179]},{"content":"al1056","pos":[34184,34190]},{"content":"Referenced assembly 'filename' is a localized satellite assembly","pos":[34191,34255]},{"content":"An assembly created by using the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyCultureAttribute&gt;</ph> attribute was referenced in creating the current assembly.","pos":[34268,34409],"source":"An assembly created by using the <xref:System.Reflection.AssemblyCultureAttribute> attribute was referenced in creating the current assembly."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyCultureAttribute&gt;</ph> attribute indicates the file is a localized satellite assembly and it is not appropriate to reference a satellite assembly.","pos":[34410,34587],"source":" The <xref:System.Reflection.AssemblyCultureAttribute> attribute indicates the file is a localized satellite assembly and it is not appropriate to reference a satellite assembly."},{"content":"You should probably reference the main parent assembly instead.","pos":[34588,34651]},{"content":"al1057","pos":[34656,34662]},{"content":"Executables cannot be localized, Culture should always be empty","pos":[34663,34726]},{"content":"An assembly is being created by using <bpt id=\"p1\">**</bpt>/target:exe<ept id=\"p1\">**</ept> but <bpt id=\"p2\">**</bpt>/culture<ept id=\"p2\">**</ept> was specified.","pos":[34739,34824],"source":"An assembly is being created by using **/target:exe** but **/culture** was specified."},{"content":"Assemblies in the .exe cannot have information in the Culture field.","pos":[34825,34893]},{"content":"al1058","pos":[34898,34904]},{"content":"'file' is an assembly and cannot be added as a module","pos":[34905,34958]},{"content":"In a C++ compilation, <bpt id=\"p1\">**</bpt>/assemblymodule<ept id=\"p1\">**</ept> (linker option) was passed a file that contained an assembly.","pos":[34971,35074],"source":"In a C++ compilation, **/assemblymodule** (linker option) was passed a file that contained an assembly."},{"content":"al1059","pos":[35079,35085]},{"content":"Unknown error (code)","pos":[35086,35106]},{"content":"Al.exe received an unknown error code (<ph id=\"ph1\">`code`</ph>).","pos":[35119,35166],"source":"Al.exe received an unknown error code (`code`)."},{"content":"Possible solutions include the following:","pos":[35179,35220]},{"content":"Reinstall Visual Studio.","pos":[35233,35257]},{"content":"Reinstall the <ph id=\"ph1\">[!INCLUDE[winsdkshort](../../../includes/winsdkshort-md.md)]</ph>.","pos":[35270,35345],"source":"Reinstall the [!INCLUDE[winsdkshort](../../../includes/winsdkshort-md.md)]."},{"content":"Check for missing files.","pos":[35358,35382]},{"content":"Check for adequate disk space.","pos":[35395,35425]},{"content":"Check for adequate memory.","pos":[35438,35464]},{"content":"Stop other processes that might be accessing the files.","pos":[35477,35532]},{"content":"Reboot your computer.","pos":[35545,35566]},{"content":"al1060","pos":[35571,35577]},{"content":"Cryptographic failure while creating hashes — reason","pos":[35578,35630]},{"content":"An error occurred while creating the file hashes for a multifile assembly.","pos":[35643,35717]},{"content":"al1061","pos":[35722,35728]},{"content":"Cannot set option 'option' because 'reason'","pos":[35729,35772]},{"content":"The value specified for this option is invalid for the specified reason.","pos":[35785,35857]},{"content":"al1062","pos":[35862,35868]},{"content":"Module 'module' was specified multiple times; it will only be included once","pos":[35869,35944]},{"content":"This warning is generated when the same source, input, or module file is specified multiple times on the command line.","pos":[35957,36075]},{"content":"Make sure that you specify the file name only once.","pos":[36076,36127]},{"content":"al1063","pos":[36132,36138]},{"content":"Public type 'type' is defined in multiple locations in this assembly: 'file1' and 'file2'","pos":[36139,36228]},{"content":"The same type was found in more than one module in the assembly.","pos":[36241,36305]},{"content":"Only one version of each type may be present in an assembly.","pos":[36306,36366]},{"content":"al1064","pos":[36371,36377]},{"content":"Cannot specify multiple /bugreport options.","pos":[36378,36421]},{"content":"Only one <bpt id=\"p1\">**</bpt>/bugreport<ept id=\"p1\">**</ept> option is allowed.","pos":[36434,36476],"source":"Only one **/bugreport** option is allowed."},{"content":"al1065","pos":[36481,36487]},{"content":"File name 'File Name' is too long or invalid","pos":[36488,36532]},{"content":"The specified file name is longer than the maximum allowed.","pos":[36545,36604]},{"content":"al1066","pos":[36609,36615]},{"content":"Character 'character' is not allowed on the command-line or in response files","pos":[36616,36693]},{"content":"An invalid character was found, either on the command line or in a file.","pos":[36706,36778]},{"content":"al1067","pos":[36783,36789]},{"content":"'filename' is a binary file instead of a text file","pos":[36790,36840]},{"content":"The file is in binary format instead of text.","pos":[36853,36898]},{"content":"al1068","pos":[36903,36909]},{"content":"Module 'ModuleName' is already defined in this assembly.","pos":[36910,36966]},{"content":"Each linked resource and module must have a unique file name.","pos":[36967,37028]},{"content":"The module occurs more than once in this assembly.","pos":[37041,37091]},{"content":"al1069","pos":[37096,37102]},{"content":"Cannot create short file name 'filename' when a long file name with the same short file name already exists","pos":[37103,37210]},{"content":"The current file has a name that is the short version of a file name that already exists.","pos":[37223,37312]},{"content":"For example, compiling LongFileName.cs and then recompiling with the name LongFi~1.cs will cause a compiler error similar to this.","pos":[37313,37443]},{"content":"If the compiler output files that have long names were deleted, but the analogous linker files remained, this error might occur.","pos":[37444,37572]},{"content":"al1070","pos":[37577,37583]},{"content":"Agnostic assembly cannot have a processor specific module 'Module Name'","pos":[37584,37655]},{"content":"If you are building using <bpt id=\"p1\">**</bpt>/platform:agnostic<ept id=\"p1\">**</ept> (or you don’t specify <bpt id=\"p2\">**</bpt>/platform<ept id=\"p2\">**</ept>), an error will be generated if you try to add a module (using <bpt id=\"p3\">**</bpt>/addmodule<ept id=\"p3\">**</ept>) that is not agnostic.","pos":[37668,37853],"source":"If you are building using **/platform:agnostic** (or you don’t specify **/platform**), an error will be generated if you try to add a module (using **/addmodule**) that is not agnostic."},{"content":"This is like trying to link an i386 obj file to an ia64 obj.","pos":[37854,37914]},{"content":"The main source of non-agnostic modules is C++.","pos":[37927,37974]},{"content":"If you are using <bpt id=\"p1\">**</bpt>/addmodule<ept id=\"p1\">**</ept> with a C++ module, you may have to modify your build scripts to specify the appropriate <bpt id=\"p2\">**</bpt>/platform<ept id=\"p2\">**</ept> setting.","pos":[37975,38117],"source":" If you are using **/addmodule** with a C++ module, you may have to modify your build scripts to specify the appropriate **/platform** setting."},{"content":"al1072","pos":[38122,38128]},{"content":"Assembly and module 'Module Name' cannot target different processors","pos":[38129,38197]},{"content":"You cannot link an assembly and a module that are targeted for different processors, because the result has to run on a single processor.","pos":[38210,38347]},{"content":"al1073","pos":[38352,38358]},{"content":"Referenced assembly 'assembly' targets a different processor","pos":[38359,38419]},{"content":"You cannot link assemblies that are targeted for different processors, because the result has to run on a single processor.","pos":[38432,38555]},{"content":"al1074","pos":[38560,38566]},{"content":"Module name 'Module Name' stored in 'File Name' must match its file name","pos":[38567,38639]},{"content":"This is required of the linker.","pos":[38652,38683]},{"content":"To resolve this problem, make the two names match.","pos":[38684,38734]},{"content":"al1075","pos":[38739,38745]},{"content":"Delay signing was requested, but no key was given","pos":[38746,38795]},{"content":"When an assembly is delay signed, the compiler does not compute and store the signature, but reserves space in the file so the signature can be added later.","pos":[38808,38964]},{"content":"For example, using <bpt id=\"p1\">**</bpt>/delaysign+<ept id=\"p1\">**</ept> enables a tester to put the assembly in the global cache.","pos":[38977,39069],"source":"For example, using **/delaysign+** enables a tester to put the assembly in the global cache."},{"content":"After testing, you can fully sign the assembly by adding the private key to the assembly by using the Assembly Linker utility.","pos":[39070,39196]},{"content":"al1076","pos":[39201,39207]},{"content":"Type 'type' is forwarded to multiple assemblies: 'assembly' and 'assembly'.","pos":[39208,39283]},{"content":"A type can only be forwarded to one assembly.","pos":[39296,39341]},{"content":"al1077","pos":[39346,39352]},{"content":"Public type 'type' is defined in 'assembly' and forwarded to 'assembly'.","pos":[39353,39425]},{"content":"There is a duplicate public type in the assembly being generated.","pos":[39438,39503]},{"content":"One is a valid type definition and the other is a type forwarder.","pos":[39504,39569]},{"pos":[39579,39586],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following command creates an executable file <ph id=\"ph1\">`t2a.exe`</ph> with an assembly from the <ph id=\"ph2\">`t2.netmodule`</ph> module.","pos":[39590,39697],"source":"The following command creates an executable file `t2a.exe` with an assembly from the `t2.netmodule` module."},{"content":"The entry point is the <ph id=\"ph1\">`Main`</ph> method in <ph id=\"ph2\">`MyClass`</ph>.","pos":[39698,39748],"source":" The entry point is the `Main` method in `MyClass`."},{"pos":[39834,39842],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Tools<ept id=\"p1\">](../../../docs/framework/tools/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[39846,39894],"source":"[Tools](../../../docs/framework/tools/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Sn.exe (Strong Name Tool)<ept id=\"p1\">](../../../docs/framework/tools/sn-exe-strong-name-tool.md)</ept><ph id=\"ph1\"> </ph>","pos":[39898,39984],"source":"[Sn.exe (Strong Name Tool)](../../../docs/framework/tools/sn-exe-strong-name-tool.md) "},{"content":"<bpt id=\"p1\">[</bpt>Gacutil.exe (Global Assembly Cache Tool)<ept id=\"p1\">](../../../docs/framework/tools/gacutil-exe-gac-tool.md)</ept><ph id=\"ph1\"> </ph>","pos":[39988,40086],"source":"[Gacutil.exe (Global Assembly Cache Tool)](../../../docs/framework/tools/gacutil-exe-gac-tool.md) "},{"content":"<bpt id=\"p1\">[</bpt>Programming with Assemblies<ept id=\"p1\">](../../../docs/framework/app-domains/programming-with-assemblies.md)</ept><ph id=\"ph1\"> </ph>","pos":[40090,40188],"source":"[Programming with Assemblies](../../../docs/framework/app-domains/programming-with-assemblies.md) "},{"content":"<bpt id=\"p1\">[</bpt>Command Prompts<ept id=\"p1\">](../../../docs/framework/tools/developer-command-prompt-for-vs.md)</ept>","pos":[40192,40275],"source":"[Command Prompts](../../../docs/framework/tools/developer-command-prompt-for-vs.md)"}]}