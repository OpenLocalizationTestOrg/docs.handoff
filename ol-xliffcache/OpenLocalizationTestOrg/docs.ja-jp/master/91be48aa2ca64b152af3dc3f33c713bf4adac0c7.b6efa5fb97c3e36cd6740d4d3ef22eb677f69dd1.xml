{"content":"---\ntitle: \"Pointer Conversions - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"pointers [C#], conversions\"\nms.assetid: f0e87502-477a-4ede-a31f-7a3e262e46fb\n---\n# Pointer Conversions (C# Programming Guide)\nThe following table shows the predefined implicit pointer conversions. Implicit conversions might occur in many situations, including method invoking and assignment statements.  \n  \n## Implicit pointer conversions  \n  \n|From|To|  \n|----------|--------|  \n|Any pointer type|void*|  \n|null|Any pointer type|  \n  \n Explicit pointer conversion is used to perform conversions, for which there is no implicit conversion, by using a cast expression. The following table shows these conversions.  \n  \n## Explicit pointer conversions  \n  \n|From|To|  \n|----------|--------|  \n|Any pointer type|Any other pointer type|  \n|sbyte, byte, short, ushort, int, uint, long, or ulong|Any pointer type|  \n|Any pointer type|sbyte, byte, short, ushort, int, uint, long, or ulong|  \n  \n## Example  \n In the following example, a pointer to `int` is converted to a pointer to `byte`. Notice that the pointer points to the lowest addressed byte of the variable. When you successively increment the result, up to the size of `int` (4 bytes), you can display the remaining bytes of the variable.  \n  \n [!code-csharp[csProgGuidePointers#3](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuidePointers/CS/Pointers2.cs#3)]  \n  \n [!code-csharp[csProgGuidePointers#4](~/samples/snippets/csharp/VS_Snippets_VBCSharp/csProgGuidePointers/CS/Pointers.cs#4)]  \n  \n## See also\n\n- [C# Programming Guide](../../../csharp/programming-guide/index.md)\n- [Pointer Expressions](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md)\n- [Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)\n- [Types](../../../csharp/language-reference/keywords/types.md)\n- [unsafe](../../../csharp/language-reference/keywords/unsafe.md)\n- [fixed Statement](../../../csharp/language-reference/keywords/fixed-statement.md)\n- [stackalloc](../../../csharp/language-reference/keywords/stackalloc.md)\n","nodes":[{"pos":[4,199],"embed":true,"restype":"x-metadata","content":"title: \"Pointer Conversions - C# Programming Guide\"\nms.custom: seodec18\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"pointers [C#], conversions\"\nms.assetid: f0e87502-477a-4ede-a31f-7a3e262e46fb","nodes":[{"content":"Pointer Conversions - C# Programming Guide","nodes":[{"pos":[0,42],"content":"Pointer Conversions - C# Programming Guide","nodes":[{"content":"Pointer Conversions - C# Programming Guide","pos":[0,42]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[206,248],"content":"Pointer Conversions (C# Programming Guide)","linkify":"Pointer Conversions (C# Programming Guide)","nodes":[{"content":"Pointer Conversions (C# Programming Guide)","pos":[0,42]}]},{"content":"The following table shows the predefined implicit pointer conversions.","pos":[249,319]},{"content":"Implicit conversions might occur in many situations, including method invoking and assignment statements.","pos":[320,425]},{"pos":[434,462],"content":"Implicit pointer conversions","linkify":"Implicit pointer conversions","nodes":[{"content":"Implicit pointer conversions","pos":[0,28]}]},{"content":"From","pos":[469,473]},{"content":"To","pos":[474,476]},{"content":"Any pointer type","pos":[505,521]},{"content":"void*","pos":[522,527]},{"content":"null","pos":[532,536]},{"content":"Any pointer type","pos":[537,553]},{"content":"Explicit pointer conversion is used to perform conversions, for which there is no implicit conversion, by using a cast expression.","pos":[561,691]},{"content":"The following table shows these conversions.","pos":[692,736]},{"pos":[745,773],"content":"Explicit pointer conversions","linkify":"Explicit pointer conversions","nodes":[{"content":"Explicit pointer conversions","pos":[0,28]}]},{"content":"From","pos":[780,784]},{"content":"To","pos":[785,787]},{"content":"Any pointer type","pos":[816,832]},{"content":"Any other pointer type","pos":[833,855]},{"content":"sbyte, byte, short, ushort, int, uint, long, or ulong","pos":[860,913]},{"content":"Any pointer type","pos":[914,930]},{"content":"Any pointer type","pos":[935,951]},{"content":"sbyte, byte, short, ushort, int, uint, long, or ulong","pos":[952,1005]},{"pos":[1015,1022],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In the following example, a pointer to <ph id=\"ph1\">`int`</ph> is converted to a pointer to <ph id=\"ph2\">`byte`</ph>.","pos":[1026,1107],"source":"In the following example, a pointer to `int` is converted to a pointer to `byte`."},{"content":"Notice that the pointer points to the lowest addressed byte of the variable.","pos":[1108,1184]},{"content":"When you successively increment the result, up to the size of <ph id=\"ph1\">`int`</ph> (4 bytes), you can display the remaining bytes of the variable.","pos":[1185,1316],"source":" When you successively increment the result, up to the size of `int` (4 bytes), you can display the remaining bytes of the variable."},{"pos":[1584,1592],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1596,1662],"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept>","source":"[C# Programming Guide](../../../csharp/programming-guide/index.md)"},{"pos":[1665,1765],"content":"<bpt id=\"p1\">[</bpt>Pointer Expressions<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md)</ept>","source":"[Pointer Expressions](../../../csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md)"},{"pos":[1768,1856],"content":"<bpt id=\"p1\">[</bpt>Pointer types<ept id=\"p1\">](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)</ept>","source":"[Pointer types](../../../csharp/programming-guide/unsafe-code-pointers/pointer-types.md)"},{"pos":[1859,1920],"content":"<bpt id=\"p1\">[</bpt>Types<ept id=\"p1\">](../../../csharp/language-reference/keywords/types.md)</ept>","source":"[Types](../../../csharp/language-reference/keywords/types.md)"},{"pos":[1923,1986],"content":"<bpt id=\"p1\">[</bpt>unsafe<ept id=\"p1\">](../../../csharp/language-reference/keywords/unsafe.md)</ept>","source":"[unsafe](../../../csharp/language-reference/keywords/unsafe.md)"},{"pos":[1989,2070],"content":"<bpt id=\"p1\">[</bpt>fixed Statement<ept id=\"p1\">](../../../csharp/language-reference/keywords/fixed-statement.md)</ept>","source":"[fixed Statement](../../../csharp/language-reference/keywords/fixed-statement.md)"},{"pos":[2073,2144],"content":"<bpt id=\"p1\">[</bpt>stackalloc<ept id=\"p1\">](../../../csharp/language-reference/keywords/stackalloc.md)</ept>","source":"[stackalloc](../../../csharp/language-reference/keywords/stackalloc.md)"}]}