{"content":"---\ntitle: \"Pens, Lines, and Rectangles in GDI+ | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"lines\"\n  - \"GDI+, lines\"\n  - \"drawing, rectangles\"\n  - \"rectangles\"\n  - \"drawing, lines\"\n  - \"GDI+, pens\"\n  - \"examples [Windows Forms], drawing lines and shapes\"\n  - \"examples [Windows Forms], pens\"\n  - \"GDI+, rectangles\"\n  - \"examples [Windows Forms], GDI+\"\n  - \"lines, dashed\"\nms.assetid: 30b25aae-e3eb-4479-bdb8-187cf651fc84\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# Pens, Lines, and Rectangles in GDI+\nTo draw lines with [!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)] you need to create a <xref:System.Drawing.Graphics> object and a <xref:System.Drawing.Pen> object. The <xref:System.Drawing.Graphics> object provides the methods that actually do the drawing, and the <xref:System.Drawing.Pen> object stores attributes, such as line color, width, and style.  \n  \n## Drawing a Line  \n To draw a line, call the <xref:System.Drawing.Graphics.DrawLine%2A> method of the <xref:System.Drawing.Graphics> object. The <xref:System.Drawing.Pen> object is passed as one of the arguments to the <xref:System.Drawing.Graphics.DrawLine%2A> method. The following example draws a line from the point (4, 2) to the point (12, 6):  \n  \n [!code-csharp[LinesCurvesAndShapes#41](../../../../samples/snippets/csharp/VS_Snippets_Winforms/LinesCurvesAndShapes/CS/Class1.cs#41)]\n [!code-vb[LinesCurvesAndShapes#41](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/LinesCurvesAndShapes/VB/Class1.vb#41)]  \n  \n <xref:System.Drawing.Graphics.DrawLine%2A> is an overloaded method of the <xref:System.Drawing.Graphics> class, so there are several ways you can supply it with arguments. For example, you can construct two <xref:System.Drawing.Point> objects and pass the <xref:System.Drawing.Point> objects as arguments to the <xref:System.Drawing.Graphics.DrawLine%2A> method:  \n  \n [!code-csharp[LinesCurvesAndShapes#42](../../../../samples/snippets/csharp/VS_Snippets_Winforms/LinesCurvesAndShapes/CS/Class1.cs#42)]\n [!code-vb[LinesCurvesAndShapes#42](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/LinesCurvesAndShapes/VB/Class1.vb#42)]  \n  \n## Constructing a Pen  \n You can specify certain attributes when you construct a <xref:System.Drawing.Pen> object. For example, one `Pen` constructor allows you to specify color and width. The following example draws a blue line of width 2 from (0, 0) to (60, 30):  \n  \n [!code-csharp[LinesCurvesAndShapes#43](../../../../samples/snippets/csharp/VS_Snippets_Winforms/LinesCurvesAndShapes/CS/Class1.cs#43)]\n [!code-vb[LinesCurvesAndShapes#43](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/LinesCurvesAndShapes/VB/Class1.vb#43)]  \n  \n## Dashed Lines and Line Caps  \n The <xref:System.Drawing.Pen> object also exposes properties, such as <xref:System.Drawing.Pen.DashStyle%2A>, that you can use to specify features of the line. The following example draws a dashed line from (100, 50) to (300, 80):  \n  \n [!code-csharp[LinesCurvesAndShapes#44](../../../../samples/snippets/csharp/VS_Snippets_Winforms/LinesCurvesAndShapes/CS/Class1.cs#44)]\n [!code-vb[LinesCurvesAndShapes#44](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/LinesCurvesAndShapes/VB/Class1.vb#44)]  \n  \n You can use the properties of the <xref:System.Drawing.Pen> object to set many more attributes of the line. The <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties specify the appearance of the ends of the line; the ends can be flat, square, rounded, triangular, or a custom shape. The <xref:System.Drawing.Pen.LineJoin%2A> property lets you specify whether connected lines are mitered (joined with sharp corners), beveled, rounded, or clipped. The following illustration shows lines with various cap and join styles.  \n  \n ![Lines](../../../../docs/framework/winforms/advanced/media/aboutgdip02-art04.gif \"Aboutgdip02_art04\")  \n  \n## Drawing a Rectangle  \n Drawing rectangles with [!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)] is similar to drawing lines. To draw a rectangle, you need a <xref:System.Drawing.Graphics> object and a <xref:System.Drawing.Pen> object. The <xref:System.Drawing.Graphics> object provides a <xref:System.Drawing.Graphics.DrawRectangle%2A> method, and the <xref:System.Drawing.Pen> object stores attributes, such as line width and color. The <xref:System.Drawing.Pen> object is passed as one of the arguments to the <xref:System.Drawing.Graphics.DrawRectangle%2A> method. The following example draws a rectangle with its upper-left corner at (100, 50), a width of 80, and a height of 40:  \n  \n [!code-csharp[LinesCurvesAndShapes#45](../../../../samples/snippets/csharp/VS_Snippets_Winforms/LinesCurvesAndShapes/CS/Class1.cs#45)]\n [!code-vb[LinesCurvesAndShapes#45](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/LinesCurvesAndShapes/VB/Class1.vb#45)]  \n  \n <xref:System.Drawing.Graphics.DrawRectangle%2A> is an overloaded method of the <xref:System.Drawing.Graphics> class, so there are several ways you can supply it with arguments. For example, you can construct a <xref:System.Drawing.Rectangle> object and pass the <xref:System.Drawing.Rectangle> object to the <xref:System.Drawing.Graphics.DrawRectangle%2A> method as an argument:  \n  \n [!code-csharp[LinesCurvesAndShapes#46](../../../../samples/snippets/csharp/VS_Snippets_Winforms/LinesCurvesAndShapes/CS/Class1.cs#46)]\n [!code-vb[LinesCurvesAndShapes#46](../../../../samples/snippets/visualbasic/VS_Snippets_Winforms/LinesCurvesAndShapes/VB/Class1.vb#46)]  \n  \n A <xref:System.Drawing.Rectangle> object has methods and properties for manipulating and gathering information about the rectangle. For example, the <xref:System.Drawing.Rectangle.Inflate%2A> and <xref:System.Drawing.Rectangle.Offset%2A> methods change the size and position of the rectangle. The <xref:System.Drawing.Rectangle.IntersectsWith%2A> method tells you whether the rectangle intersects another given rectangle, and the <xref:System.Drawing.Rectangle.Contains%2A> method tells you whether a given point is inside the rectangle.  \n  \n## See Also  \n <xref:System.Drawing.Graphics?displayProperty=fullName>   \n <xref:System.Drawing.Pen?displayProperty=fullName>   \n <xref:System.Drawing.Rectangle?displayProperty=fullName>   \n [How to: Create a Pen](../../../../docs/framework/winforms/advanced/how-to-create-a-pen.md)   \n [How to: Draw a Line on a Windows Form](../../../../docs/framework/winforms/advanced/how-to-draw-a-line-on-a-windows-form.md)   \n [How to: Draw an Outlined Shape](../../../../docs/framework/winforms/advanced/how-to-draw-an-outlined-shape.md)","nodes":[{"pos":[4,702],"embed":true,"restype":"x-metadata","content":"title: \"Pens, Lines, and Rectangles in GDI+ | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"lines\"\n  - \"GDI+, lines\"\n  - \"drawing, rectangles\"\n  - \"rectangles\"\n  - \"drawing, lines\"\n  - \"GDI+, pens\"\n  - \"examples [Windows Forms], drawing lines and shapes\"\n  - \"examples [Windows Forms], pens\"\n  - \"GDI+, rectangles\"\n  - \"examples [Windows Forms], GDI+\"\n  - \"lines, dashed\"\nms.assetid: 30b25aae-e3eb-4479-bdb8-187cf651fc84\ncaps.latest.revision: 14\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","nodes":[{"content":"Pens, Lines, and Rectangles in GDI+ | Microsoft Docs","nodes":[{"pos":[0,52],"content":"Pens, Lines, and Rectangles in GDI+ | Microsoft Docs","nodes":[{"content":"Pens, Lines, and Rectangles in GDI+ | Microsoft Docs","pos":[0,52]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[709,744],"content":"Pens, Lines, and Rectangles in GDI+","linkify":"Pens, Lines, and Rectangles in GDI+","nodes":[{"content":"Pens, Lines, and Rectangles in GDI+","pos":[0,35]}]},{"content":"To draw lines with <ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)]</ph> you need to create a <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics&gt;</ph> object and a <ph id=\"ph3\">&lt;xref:System.Drawing.Pen&gt;</ph> object.","pos":[745,930],"source":"To draw lines with [!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)] you need to create a <xref:System.Drawing.Graphics> object and a <xref:System.Drawing.Pen> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics&gt;</ph> object provides the methods that actually do the drawing, and the <ph id=\"ph2\">&lt;xref:System.Drawing.Pen&gt;</ph> object stores attributes, such as line color, width, and style.","pos":[931,1121],"source":" The <xref:System.Drawing.Graphics> object provides the methods that actually do the drawing, and the <xref:System.Drawing.Pen> object stores attributes, such as line color, width, and style."},{"pos":[1130,1144],"content":"Drawing a Line","linkify":"Drawing a Line","nodes":[{"content":"Drawing a Line","pos":[0,14]}]},{"content":"To draw a line, call the <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics&gt;</ph> object.","pos":[1148,1268],"source":"To draw a line, call the <xref:System.Drawing.Graphics.DrawLine%2A> method of the <xref:System.Drawing.Graphics> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Pen&gt;</ph> object is passed as one of the arguments to the <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph> method.","pos":[1269,1397],"source":" The <xref:System.Drawing.Pen> object is passed as one of the arguments to the <xref:System.Drawing.Graphics.DrawLine%2A> method."},{"content":"The following example draws a line from the point (4, 2) to the point (12, 6):","pos":[1398,1476]},{"content":"<ph id=\"ph1\">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph> is an overloaded method of the <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics&gt;</ph> class, so there are several ways you can supply it with arguments.","pos":[1761,1932],"source":"<xref:System.Drawing.Graphics.DrawLine%2A> is an overloaded method of the <xref:System.Drawing.Graphics> class, so there are several ways you can supply it with arguments."},{"content":"For example, you can construct two <ph id=\"ph1\">&lt;xref:System.Drawing.Point&gt;</ph> objects and pass the <ph id=\"ph2\">&lt;xref:System.Drawing.Point&gt;</ph> objects as arguments to the <ph id=\"ph3\">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph> method:","pos":[1933,2123],"source":" For example, you can construct two <xref:System.Drawing.Point> objects and pass the <xref:System.Drawing.Point> objects as arguments to the <xref:System.Drawing.Graphics.DrawLine%2A> method:"},{"pos":[2410,2428],"content":"Constructing a Pen","linkify":"Constructing a Pen","nodes":[{"content":"Constructing a Pen","pos":[0,18]}]},{"content":"You can specify certain attributes when you construct a <ph id=\"ph1\">&lt;xref:System.Drawing.Pen&gt;</ph> object.","pos":[2432,2521],"source":"You can specify certain attributes when you construct a <xref:System.Drawing.Pen> object."},{"content":"For example, one <ph id=\"ph1\">`Pen`</ph> constructor allows you to specify color and width.","pos":[2522,2595],"source":" For example, one `Pen` constructor allows you to specify color and width."},{"content":"The following example draws a blue line of width 2 from (0, 0) to (60, 30):","pos":[2596,2671]},{"pos":[2958,2984],"content":"Dashed Lines and Line Caps","linkify":"Dashed Lines and Line Caps","nodes":[{"content":"Dashed Lines and Line Caps","pos":[0,26]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Pen&gt;</ph> object also exposes properties, such as <ph id=\"ph2\">&lt;xref:System.Drawing.Pen.DashStyle%2A&gt;</ph>, that you can use to specify features of the line.","pos":[2988,3147],"source":"The <xref:System.Drawing.Pen> object also exposes properties, such as <xref:System.Drawing.Pen.DashStyle%2A>, that you can use to specify features of the line."},{"content":"The following example draws a dashed line from (100, 50) to (300, 80):","pos":[3148,3218]},{"content":"You can use the properties of the <ph id=\"ph1\">&lt;xref:System.Drawing.Pen&gt;</ph> object to set many more attributes of the line.","pos":[3503,3610],"source":"You can use the properties of the <xref:System.Drawing.Pen> object to set many more attributes of the line."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties specify the appearance of the ends of the line; the ends can be flat, square, rounded, triangular, or a custom shape.","pos":[3611,3821],"source":" The <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties specify the appearance of the ends of the line; the ends can be flat, square, rounded, triangular, or a custom shape."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> property lets you specify whether connected lines are mitered (joined with sharp corners), beveled, rounded, or clipped.","pos":[3822,3984],"source":" The <xref:System.Drawing.Pen.LineJoin%2A> property lets you specify whether connected lines are mitered (joined with sharp corners), beveled, rounded, or clipped."},{"content":"The following illustration shows lines with various cap and join styles.","pos":[3985,4057]},{"pos":[4064,4166],"content":"<bpt id=\"p1\">![</bpt>Lines<ept id=\"p1\">]</ept><bpt id=\"p2\">(../../../../docs/framework/winforms/advanced/media/aboutgdip02-art04.gif \"</bpt>Aboutgdip02_art04<ept id=\"p2\">\")</ept>","source":"![Lines](../../../../docs/framework/winforms/advanced/media/aboutgdip02-art04.gif \"Aboutgdip02_art04\")"},{"pos":[4175,4194],"content":"Drawing a Rectangle","linkify":"Drawing a Rectangle","nodes":[{"content":"Drawing a Rectangle","pos":[0,19]}]},{"content":"Drawing rectangles with <ph id=\"ph1\">[!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)]</ph> is similar to drawing lines.","pos":[4198,4318],"source":"Drawing rectangles with [!INCLUDE[ndptecgdiplus](../../../../includes/ndptecgdiplus-md.md)] is similar to drawing lines."},{"content":"To draw a rectangle, you need a <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics&gt;</ph> object and a <ph id=\"ph2\">&lt;xref:System.Drawing.Pen&gt;</ph> object.","pos":[4319,4428],"source":" To draw a rectangle, you need a <xref:System.Drawing.Graphics> object and a <xref:System.Drawing.Pen> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics&gt;</ph> object provides a <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> method, and the <ph id=\"ph3\">&lt;xref:System.Drawing.Pen&gt;</ph> object stores attributes, such as line width and color.","pos":[4429,4627],"source":" The <xref:System.Drawing.Graphics> object provides a <xref:System.Drawing.Graphics.DrawRectangle%2A> method, and the <xref:System.Drawing.Pen> object stores attributes, such as line width and color."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Pen&gt;</ph> object is passed as one of the arguments to the <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> method.","pos":[4628,4761],"source":" The <xref:System.Drawing.Pen> object is passed as one of the arguments to the <xref:System.Drawing.Graphics.DrawRectangle%2A> method."},{"content":"The following example draws a rectangle with its upper-left corner at (100, 50), a width of 80, and a height of 40:","pos":[4762,4877]},{"content":"<ph id=\"ph1\">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> is an overloaded method of the <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics&gt;</ph> class, so there are several ways you can supply it with arguments.","pos":[5162,5338],"source":"<xref:System.Drawing.Graphics.DrawRectangle%2A> is an overloaded method of the <xref:System.Drawing.Graphics> class, so there are several ways you can supply it with arguments."},{"content":"For example, you can construct a <ph id=\"ph1\">&lt;xref:System.Drawing.Rectangle&gt;</ph> object and pass the <ph id=\"ph2\">&lt;xref:System.Drawing.Rectangle&gt;</ph> object to the <ph id=\"ph3\">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> method as an argument:","pos":[5339,5540],"source":" For example, you can construct a <xref:System.Drawing.Rectangle> object and pass the <xref:System.Drawing.Rectangle> object to the <xref:System.Drawing.Graphics.DrawRectangle%2A> method as an argument:"},{"content":"A <ph id=\"ph1\">&lt;xref:System.Drawing.Rectangle&gt;</ph> object has methods and properties for manipulating and gathering information about the rectangle.","pos":[5825,5956],"source":"A <xref:System.Drawing.Rectangle> object has methods and properties for manipulating and gathering information about the rectangle."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Drawing.Rectangle.Inflate%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Drawing.Rectangle.Offset%2A&gt;</ph> methods change the size and position of the rectangle.","pos":[5957,6117],"source":" For example, the <xref:System.Drawing.Rectangle.Inflate%2A> and <xref:System.Drawing.Rectangle.Offset%2A> methods change the size and position of the rectangle."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A&gt;</ph> method tells you whether the rectangle intersects another given rectangle, and the <ph id=\"ph2\">&lt;xref:System.Drawing.Rectangle.Contains%2A&gt;</ph> method tells you whether a given point is inside the rectangle.","pos":[6118,6362],"source":" The <xref:System.Drawing.Rectangle.IntersectsWith%2A> method tells you whether the rectangle intersects another given rectangle, and the <xref:System.Drawing.Rectangle.Contains%2A> method tells you whether a given point is inside the rectangle."},{"pos":[6371,6379],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>How to: Create a Pen<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/how-to-create-a-pen.md)</ept><ph id=\"ph1\"> </ph>","pos":[6559,6651],"source":"[How to: Create a Pen](../../../../docs/framework/winforms/advanced/how-to-create-a-pen.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Draw a Line on a Windows Form<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/how-to-draw-a-line-on-a-windows-form.md)</ept><ph id=\"ph1\"> </ph>","pos":[6655,6781],"source":"[How to: Draw a Line on a Windows Form](../../../../docs/framework/winforms/advanced/how-to-draw-a-line-on-a-windows-form.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Draw an Outlined Shape<ept id=\"p1\">](../../../../docs/framework/winforms/advanced/how-to-draw-an-outlined-shape.md)</ept>","pos":[6785,6896],"source":"[How to: Draw an Outlined Shape](../../../../docs/framework/winforms/advanced/how-to-draw-an-outlined-shape.md)"}]}