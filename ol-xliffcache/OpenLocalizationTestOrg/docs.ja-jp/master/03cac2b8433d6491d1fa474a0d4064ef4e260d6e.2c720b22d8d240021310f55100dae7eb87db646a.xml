{"content":"---\ntitle: \"IHostMemoryManager::VirtualFree Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostMemoryManager.VirtualFree\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostMemoryManager::VirtualFree\"\nhelpviewer_keywords: \n  - \"IHostMemoryManager::VirtualFree method [.NET Framework hosting]\"\n  - \"VirtualFree method [.NET Framework hosting]\"\nms.assetid: 1a436e89-eb28-4d15-bcf1-a072f86dbd99\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# IHostMemoryManager::VirtualFree Method\nServes as a logical wrapper for the corresponding Win32 function. The Win32 implementation of `VirtualFree` releases, decommits, or releases and decommits a region of pages within the virtual address space of the calling process.  \n  \n## Syntax  \n  \n```  \nHRESULT VirtualFree (  \n    [in] LPVOID  lpAddress,  \n    [in] SIZE_T  dwSize,  \n    [in] DWORD   dwFreeType  \n);  \n```  \n  \n## Parameters  \n `lpAddress`  \n [in] A pointer to the base address of the virtual memory pages to be freed.  \n  \n `dwSize`  \n [in] The size, in bytes, of the region to be freed.  \n  \n `dwFreeType`  \n [in] The type of freeing operation.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`VirtualFree` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n|HOST_E_INVALIDOPERATION|An attempt was made to free memory that was not allocated through the host.|  \n  \n## Remarks  \n `VirtualFree` frees virtual memory pages associated with the `lpAddress` parameter through an earlier call to the [IHostMemoryManager::VirtualAlloc](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-virtualalloc-method.md) function. Attempts to free memory that was not allocated through the host should return HOST_E_INVALIDOPERATION.  \n  \n The semantics are identical to those of the Win32 implementation of `VirtualFree`. For more information, see the Windows Platform documentation.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See also\n\n- [IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)\n- [IHostMalloc Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmalloc-interface.md)\n","nodes":[{"pos":[4,484],"embed":true,"restype":"x-metadata","content":"title: \"IHostMemoryManager::VirtualFree Method\"\nms.date: \"03/30/2017\"\napi_name: \n  - \"IHostMemoryManager.VirtualFree\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostMemoryManager::VirtualFree\"\nhelpviewer_keywords: \n  - \"IHostMemoryManager::VirtualFree method [.NET Framework hosting]\"\n  - \"VirtualFree method [.NET Framework hosting]\"\nms.assetid: 1a436e89-eb28-4d15-bcf1-a072f86dbd99\ntopic_type: \n  - \"apiref\"\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"IHostMemoryManager::VirtualFree Method","nodes":[{"pos":[0,38],"content":"IHostMemoryManager::VirtualFree Method","nodes":[{"content":"IHostMemoryManager::VirtualFree Method","pos":[0,38]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[491,529],"content":"IHostMemoryManager::VirtualFree Method","linkify":"IHostMemoryManager::VirtualFree Method","nodes":[{"content":"IHostMemoryManager::VirtualFree Method","pos":[0,38]}]},{"content":"Serves as a logical wrapper for the corresponding Win32 function.","pos":[530,595]},{"content":"The Win32 implementation of <ph id=\"ph1\">`VirtualFree`</ph> releases, decommits, or releases and decommits a region of pages within the virtual address space of the calling process.","pos":[596,759],"source":" The Win32 implementation of `VirtualFree` releases, decommits, or releases and decommits a region of pages within the virtual address space of the calling process."},{"pos":[768,774],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[914,924],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer to the base address of the virtual memory pages to be freed.","pos":[943,1018]},{"content":"[in] The size, in bytes, of the region to be freed.","pos":[1037,1088]},{"content":"[in] The type of freeing operation.","pos":[1111,1146]},{"pos":[1155,1167],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1174,1181]},{"content":"Description","pos":[1182,1193]},{"content":"S_OK","pos":[1234,1238]},{"pos":[1239,1275],"content":"<ph id=\"ph1\">`VirtualFree`</ph> returned successfully.","source":"`VirtualFree` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1280,1302]},{"content":"The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1303,1467]},{"content":"HOST_E_TIMEOUT","pos":[1472,1486]},{"content":"The call timed out.","pos":[1487,1506]},{"content":"HOST_E_NOT_OWNER","pos":[1511,1527]},{"content":"The caller does not own the lock.","pos":[1528,1561]},{"content":"HOST_E_ABANDONED","pos":[1566,1582]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1583,1655]},{"content":"E_FAIL","pos":[1660,1666]},{"content":"An unknown catastrophic failure occurred.","pos":[1667,1708]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1709,1786]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[1787,1853]},{"content":"HOST_E_INVALIDOPERATION","pos":[1858,1881]},{"content":"An attempt was made to free memory that was not allocated through the host.","pos":[1882,1957]},{"pos":[1967,1974],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"<ph id=\"ph1\">`VirtualFree`</ph> frees virtual memory pages associated with the <ph id=\"ph2\">`lpAddress`</ph> parameter through an earlier call to the <bpt id=\"p1\">[</bpt>IHostMemoryManager::VirtualAlloc<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-virtualalloc-method.md)</ept> function.","pos":[1978,2228],"source":"`VirtualFree` frees virtual memory pages associated with the `lpAddress` parameter through an earlier call to the [IHostMemoryManager::VirtualAlloc](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-virtualalloc-method.md) function."},{"content":"Attempts to free memory that was not allocated through the host should return HOST_E_INVALIDOPERATION.","pos":[2229,2331]},{"content":"The semantics are identical to those of the Win32 implementation of <ph id=\"ph1\">`VirtualFree`</ph>.","pos":[2338,2420],"source":"The semantics are identical to those of the Win32 implementation of `VirtualFree`."},{"content":"For more information, see the Windows Platform documentation.","pos":[2421,2482]},{"pos":[2491,2503],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2507,2611],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2618,2639],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2646,2696],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2703,2811],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[2820,2828],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2832,2944],"content":"<bpt id=\"p1\">[</bpt>IHostMemoryManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)</ept>","source":"[IHostMemoryManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmemorymanager-interface.md)"},{"pos":[2947,3045],"content":"<bpt id=\"p1\">[</bpt>IHostMalloc Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostmalloc-interface.md)</ept>","source":"[IHostMalloc Interface](../../../../docs/framework/unmanaged-api/hosting/ihostmalloc-interface.md)"}]}