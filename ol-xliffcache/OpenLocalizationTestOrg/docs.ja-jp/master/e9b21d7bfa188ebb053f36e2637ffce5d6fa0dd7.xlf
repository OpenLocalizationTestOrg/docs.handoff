<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="walkthrough-performing-a-drag-and-drop-operation-in-windows-forms.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9b21d7bfa188ebb053f36e2637ffce5d6fa0dd7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\advanced\walkthrough-performing-a-drag-and-drop-operation-in-windows-forms.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fc673189fce6c0a15f741c3361902f3e16a0211</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4079deabce542642fafe21c6d206a9ebc778bab</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Walkthrough: Performing a Drag-and-Drop Operation in Windows Forms</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Performing a Drag-and-Drop Operation in Windows Forms</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To perform drag-and-drop operations within Windows-based applications you must handle a series of events, most notably the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>By working with the information available in the event arguments of these events, you can easily facilitate drag-and-drop operations.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Dragging Data</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>All drag-and-drop operations begin with dragging.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The functionality to enable data to be collected when dragging begins is implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event is used to start the drag operation because it is the most intuitive (most drag-and-drop actions begin with the mouse button being depressed).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, remember that any event could be used to initiate a drag-and-drop procedure.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Certain controls have custom drag-specific events.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> controls, for example, have an <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.ItemDrag&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To start a drag operation</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event for the control where the drag will begin, use the <ph id="ph2">`DoDragDrop`</ph> method to set the data to be dragged and the allowed effect dragging will have.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.Data%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.AllowedEffect%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following example shows how to initiate a drag operation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The control where the drag begins is a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, the data being dragged is the string representing the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, and the allowed effects are either copying or moving.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Any data can be used as a parameter in the <ph id="ph1">`DoDragDrop`</ph> method; in the example above, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> control was used (rather than hard-coding a value or retrieving data from a dataset) because the property was related to the location being dragged from (the <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> control).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Keep this in mind as you incorporate drag-and-drop operations into your Windows-based applications.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>While a drag operation is in effect, you can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event, which "asks permission" of the system to continue the drag operation.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When handling this method, it is also the appropriate point for you to call methods that will have an effect on the drag operation, such as expanding a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control when the cursor hovers over it.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Dropping Data</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Once you have begun dragging data from a location on a Windows Form or control, you will naturally want to drop it somewhere.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The cursor will change when it crosses an area of a form or control that is correctly configured for dropping data.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Any area within a Windows Form or control can be made to accept dropped data by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AllowDrop%2A&gt;</ph> property and handling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To perform a drop</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AllowDrop%2A&gt;</ph> property to true.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`DragEnter`</ph> event for the control where the drop will occur, ensure that the data being dragged is of an acceptable type (in this case, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The code then sets the effect that will happen when the drop occurs to a value in the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can define your own <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> by specifying your own object as the <ph id="ph2">&lt;xref:System.Object&gt;</ph> parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataObject.SetData%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Be sure, when doing this, that the object specified is serializable.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event for the control where the drop will occur, use the <ph id="ph2">&lt;xref:System.Windows.Forms.DataObject.GetData%2A&gt;</ph> method to retrieve the data being dragged.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.DataObject.Data%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the example below, a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control is the control being dragged to (where the drop will occur).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control equal to the data being dragged.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Additionally, you can work with the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.KeyState%2A&gt;</ph> property, so that, depending on keys depressed during the drag-and-drop operation, certain effects occur (for example, it is standard to copy the dragged data when the CTRL key is pressed).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Add Data to the Clipboard<ept id="p1">](how-to-add-data-to-the-clipboard.md)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Retrieve Data from the Clipboard<ept id="p1">](how-to-retrieve-data-from-the-clipboard.md)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Drag-and-Drop Operations and Clipboard Support<ept id="p1">](drag-and-drop-operations-and-clipboard-support.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>