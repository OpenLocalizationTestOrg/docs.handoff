{"content":"---\ntitle: \"&#39;&lt;derivedtypename&gt;&#39; cannot inherit from &lt;type&gt; &#39;&lt;constructedbasetypename&gt;&#39; because it expands the access of type &#39;&lt;internaltypename&gt;&#39; outside the assembly | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"BC30922\"\n  - \"vbc30922\"\nhelpviewer_keywords: \n  - \"BC30922\"\nms.assetid: 81909654-7e67-4b89-81a3-25ae57f678f7\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"\n---\n# &#39;&lt;derivedtypename&gt;&#39; cannot inherit from &lt;type&gt; &#39;&lt;constructedbasetypename&gt;&#39; because it expands the access of type &#39;&lt;internaltypename&gt;&#39; outside the assembly\nA derived class or interface attempts to expand the access level of a restricted type by using it as a type argument to a base class or interface.  \n  \n The following code can generate this error.  \n  \n```  \nPublic Class baseClass(Of t)  \nEnd Class  \nPublic Class derivedClass  \n    Inherits baseClass(Of restrictedStructure)  \nEnd Class  \nFriend Structure restrictedStructure  \n    Dim firstMember As Integer  \nEnd Structure  \n```  \n  \n Code outside the assembly is not allowed to access `restrictedStructure`. However, `derivedClass` can be accessed from any code that can reference it. Therefore, `derivedClass` cannot inherit `baseClass` if it uses `restrictedStructure` as a type argument, because that could expose `restrictedStructure` to code in any assembly.  \n  \n **Error ID:** BC30922  \n  \n## To correct this error  \n  \n-   Adjust the access levels of the classes or interfaces so the derived type does not expand the access level of the restricted type.  \n  \n     -or-  \n  \n-   If you cannot adjust the access levels, do not use the restricted type as a type argument when constructing the base class or interface.  \n  \n## See Also  \n [Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md)   \n [Inheritance Basics](../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)   \n [Access Levels in Visual Basic](../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)   \n [Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)   \n [Type List](../../visual-basic/language-reference/statements/type-list.md)","nodes":[{"pos":[4,741],"nodes":[{"content":"&#39;&lt;derivedtypename&gt;&#39; cannot inherit from &lt;type&gt; &#39;&lt;constructedbasetypename&gt;&#39; because it expands the access of type &#39;&lt;internaltypename&gt;&#39; outside the assembly | Microsoft Docs","nodes":[{"pos":[0,219],"content":"&#39;&lt;derivedtypename&gt;&#39; cannot inherit from &lt;type&gt; &#39;&lt;constructedbasetypename&gt;&#39; because it expands the access of type &#39;&lt;internaltypename&gt;&#39; outside the assembly | Microsoft Docs","nodes":[{"content":"&amp;#39;<ph id=\"ph1\">&amp;lt;</ph>derivedtypename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; cannot inherit from <ph id=\"ph3\">&amp;lt;</ph>type<ph id=\"ph4\">&amp;gt;</ph> &amp;#39;<ph id=\"ph5\">&amp;lt;</ph>constructedbasetypename<ph id=\"ph6\">&amp;gt;</ph>&amp;#39; because it expands the access of type &amp;#39;<ph id=\"ph7\">&amp;lt;</ph>internaltypename<ph id=\"ph8\">&amp;gt;</ph>&amp;#39; outside the assembly | Microsoft Docs","pos":[0,219],"source":"&#39;&lt;derivedtypename&gt;&#39; cannot inherit from &lt;type&gt; &#39;&lt;constructedbasetypename&gt;&#39; because it expands the access of type &#39;&lt;internaltypename&gt;&#39; outside the assembly | Microsoft Docs"}]}],"pos":[6,228],"yaml":true}],"content":"title: \"&#39;&lt;derivedtypename&gt;&#39; cannot inherit from &lt;type&gt; &#39;&lt;constructedbasetypename&gt;&#39; because it expands the access of type &#39;&lt;internaltypename&gt;&#39; outside the assembly | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"BC30922\"\n  - \"vbc30922\"\nhelpviewer_keywords: \n  - \"BC30922\"\nms.assetid: 81909654-7e67-4b89-81a3-25ae57f678f7\ncaps.latest.revision: 10\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"ru-ru\"\n  - \"zh-cn\"\n  - \"zh-tw\"\ntranslation.priority.mt: \n  - \"cs-cz\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"tr-tr\"","yamlblock":true},{"pos":[748,950],"content":"&#39;&lt;derivedtypename&gt;&#39; cannot inherit from &lt;type&gt; &#39;&lt;constructedbasetypename&gt;&#39; because it expands the access of type &#39;&lt;internaltypename&gt;&#39; outside the assembly","linkify":"&#39;&lt;derivedtypename&gt;&#39; cannot inherit from &lt;type&gt; &#39;&lt;constructedbasetypename&gt;&#39; because it expands the access of type &#39;&lt;internaltypename&gt;&#39; outside the assembly","nodes":[{"content":"&amp;#39;<ph id=\"ph1\">&amp;lt;</ph>derivedtypename<ph id=\"ph2\">&amp;gt;</ph>&amp;#39; cannot inherit from <ph id=\"ph3\">&amp;lt;</ph>type<ph id=\"ph4\">&amp;gt;</ph> &amp;#39;<ph id=\"ph5\">&amp;lt;</ph>constructedbasetypename<ph id=\"ph6\">&amp;gt;</ph>&amp;#39; because it expands the access of type &amp;#39;<ph id=\"ph7\">&amp;lt;</ph>internaltypename<ph id=\"ph8\">&amp;gt;</ph>&amp;#39; outside the assembly","pos":[0,202],"source":"&#39;&lt;derivedtypename&gt;&#39; cannot inherit from &lt;type&gt; &#39;&lt;constructedbasetypename&gt;&#39; because it expands the access of type &#39;&lt;internaltypename&gt;&#39; outside the assembly"}]},{"content":"A derived class or interface attempts to expand the access level of a restricted type by using it as a type argument to a base class or interface.","pos":[951,1097]},{"content":"The following code can generate this error.","pos":[1104,1147]},{"content":"Code outside the assembly is not allowed to access <ph id=\"ph1\">`restrictedStructure`</ph>.","pos":[1389,1462],"source":"Code outside the assembly is not allowed to access `restrictedStructure`."},{"content":"However, <ph id=\"ph1\">`derivedClass`</ph> can be accessed from any code that can reference it.","pos":[1463,1539],"source":" However, `derivedClass` can be accessed from any code that can reference it."},{"content":"Therefore, <ph id=\"ph1\">`derivedClass`</ph> cannot inherit <ph id=\"ph2\">`baseClass`</ph> if it uses <ph id=\"ph3\">`restrictedStructure`</ph> as a type argument, because that could expose <ph id=\"ph4\">`restrictedStructure`</ph> to code in any assembly.","pos":[1540,1718],"source":" Therefore, `derivedClass` cannot inherit `baseClass` if it uses `restrictedStructure` as a type argument, because that could expose `restrictedStructure` to code in any assembly."},{"pos":[1725,1746],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC30922","source":"**Error ID:** BC30922"},{"pos":[1755,1776],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"content":"Adjust the access levels of the classes or interfaces so the derived type does not expand the access level of the restricted type.","pos":[1786,1916]},{"content":"-or-","pos":[1927,1931]},{"content":"If you cannot adjust the access levels, do not use the restricted type as a type argument when constructing the base class or interface.","pos":[1941,2077]},{"pos":[2086,2094],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Inherits Statement<ept id=\"p1\">](../../visual-basic/language-reference/statements/inherits-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[2098,2191],"source":"[Inherits Statement](../../visual-basic/language-reference/statements/inherits-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Inheritance Basics<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept><ph id=\"ph1\"> </ph>","pos":[2195,2314],"source":"[Inheritance Basics](../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md) "},{"content":"<bpt id=\"p1\">[</bpt>Access Levels in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept><ph id=\"ph1\"> </ph>","pos":[2318,2441],"source":"[Access Levels in Visual Basic](../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md) "},{"content":"<bpt id=\"p1\">[</bpt>Generic Types in Visual Basic<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id=\"ph1\"> </ph>","pos":[2445,2561],"source":"[Generic Types in Visual Basic](../../visual-basic/programming-guide/language-features/data-types/generic-types.md) "},{"content":"<bpt id=\"p1\">[</bpt>Type List<ept id=\"p1\">](../../visual-basic/language-reference/statements/type-list.md)</ept>","pos":[2565,2639],"source":"[Type List](../../visual-basic/language-reference/statements/type-list.md)"}]}