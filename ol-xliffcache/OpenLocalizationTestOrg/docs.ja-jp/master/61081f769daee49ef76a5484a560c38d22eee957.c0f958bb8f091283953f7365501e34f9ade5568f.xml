{"content":"---\ntitle: \"ICorDebugProcess6::EnableVirtualModuleSplitting Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: e7733bd3-68da-47f9-82ef-477db5f2e32d\ncaps.latest.revision: 5\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugProcess6::EnableVirtualModuleSplitting Method\nEnables or disables virtual module splitting.  \n  \n## Syntax  \n  \n```  \n  \nHRESULT EnableVirtualModuleSplitting(  \n   BOOL enableSplitting  \n);  \n  \n```  \n  \n#### Parameters  \n `enableSplitting`  \n `true` to enable virtual module splitting; `false` to disable it.  \n  \n## Remarks  \n Virtual module splitting causes [ICorDebug](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md) to recognize modules that were merged together during the build process and present them as a group of separate modules rather than a single large module. Doing this changes the behavior of various [ICorDebug](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md) methods described below.  \n  \n> [!NOTE]\n>  This method is available with .NET Native only.  \n  \n This method can be called and the value of `enableSplitting` can be changed at any time. It does not cause any stateful functional changes in an [ICorDebug](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md) object, other than altering the behavior of the methods listed in the [Virtual module splitting and the unmanaged debugging APIs](#APIs) section at the time they are called. Using virtual modules does incur a performance penalty when calling those methods. In addition, significant in-memory caching of the virtualized metadata may be required to correctly implement the [IMetaDataImport](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md) APIs, and these caches may be retained even after virtual module splitting has been turned off.  \n  \n## Terminology  \n The following terms are used when describing virtual module splitting:  \n  \n container modules, or containers  \n The aggregate modules.  \n  \n sub-modules, or virtual modules  \n The modules found in a container.  \n  \n regular modules  \n Modules that were not merged at build time. They are neither container modules nor sub-modules.  \n  \n Both container modules and sub-modules are represented by ICorDebugModule interface objects. However, the behavior of the interface is slightly different in each case, as the \\<x-ref to section> section describes.  \n  \n## Modules and assemblies  \n Multi-module assemblies are not supported for assembly merging scenarios, so there is a one-to-one relationship between a module and an assembly. Each ICorDebugModule object, regardless of whether it represents a container module or a sub-module, has a corresponding ICorDebugAssembly object. The [ICorDebugModule::GetAssembly](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getassembly-method.md) method converts from the module to the assembly. To map in the other direction, the [ICorDebugAssembly::EnumerateModules](../../../../docs/framework/unmanaged-api/debugging/icordebugassembly-enumeratemodules-method.md) method enumerates only 1 module. Because assembly and module form a tightly coupled pair in this case, the terms assembly and module become largely interchangeable.  \n  \n## Behavioral differences  \n Container modules have the following behaviors and characteristics:  \n  \n-   Their metadata for all of the constituent sub-modules is merged together.  \n  \n-   Their type names may be mangled.  \n  \n-   The [ICorDebugModule::GetName](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getname-method.md) method returns the path to an on-disk module.  \n  \n-   The [ICorDebugModule::GetSize](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getsize-method.md) method returns the size of that image.  \n  \n-   The ICorDebugAssembly3.EnumerateContainedAssemblies method lists the sub-modules.  \n  \n-   The ICorDebugAssembly3.GetContainerAssembly method returns `S_FALSE`.  \n  \n Sub-modules have the following behaviors and characteristics:  \n  \n-   They have a reduced set of metadata that corresponds only to the original assembly that was merged.  \n  \n-   The metadata names are not mangled.  \n  \n-   Metadata tokens are unlikely to match the tokens in the original assembly before it was merged in the build process.  \n  \n-   The [ICorDebugModule::GetName](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getname-method.md) method returns the assembly name, not a file path.  \n  \n-   The [ICorDebugModule::GetSize](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getsize-method.md) method returns the original unmerged image size.  \n  \n-   The ICorDebugModule3.EnumerateContainedAssemblies method returns `S_FALSE`.  \n  \n-   The ICorDebugAssembly3.GetContainerAssembly method returns the containing module.  \n  \n## Interfaces retrieved from modules  \n A variety of interfaces can be created or retrieved from modules. Some of these include:  \n  \n-   An ICorDebugClass object, which is returned by the [ICorDebugModule::GetClassFromToken](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getclassfromtoken-method.md) method.  \n  \n-   An ICorDebugAssembly object, which is returned by the [ICorDebugModule::GetAssembly](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getassembly-method.md) method.  \n  \n These objects are always cached by [ICorDebug](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md), and they will have the same pointer identity regardless of whether they were created or queried from the container module or a sub-module. The sub-module provides a filtered view of these cached objects, not a separate cache with its own copies.  \n  \n<a name=\"APIs\"></a>   \n## Virtual module splitting and the unmanaged debugging APIs  \n The following table shows how virtual module splitting affects the behavior of other methods in the unmanaged debugging API.  \n  \n|Method|`enableSplitting` = `true`|`enableSplitting` = `false`|  \n|------------|---------------------------------|----------------------------------|  \n|[ICorDebugFunction::GetModule](../../../../docs/framework/unmanaged-api/debugging/icordebugfunction-getmodule-method.md)|Returns the sub-module this function was originally defined in|Returns the container module this function was merged into|  \n|[ICorDebugClass::GetModule](../../../../docs/framework/unmanaged-api/debugging/icordebugclass-getmodule-method.md)|Returns the sub-module this class was originally defined in.|Returns the container module this class was merged into.|  \n|ICorDebugModuleDebugEvent::GetModule|Returns the container module that was loaded. Sub-modules are not given load events regardless of this setting.|Returns the container module that was loaded.|  \n|[ICorDebugAppDomain::EnumerateAssemblies](../../../../docs/framework/unmanaged-api/debugging/icordebugappdomain-enumerateassemblies-method.md)|Returns a list of sub-assemblies and regular assemblies; no container assemblies are included. **Note:**  If any container assembly is missing symbols, none of its sub-assemblies will be enumerated. If any regular assembly is missing symbols, it may or may not be enumerated.|Returns a list of container assemblies and regular assemblies; no sub-assemblies are included. **Note:**  If any regular assembly is missing symbols, it may or may not be enumerated.|  \n|[ICorDebugCode::GetCode](../../../../docs/framework/unmanaged-api/debugging/icordebugcode-getcode-method.md) (when referring to IL code only)|Returns IL that would be valid in a pre-merge assembly image. Specifically, any inline metadata tokens will correctly be TypeRef or MemberRef tokens when the types being referred to are not defined in the virtual module containing the IL. These TypeRef or MemberRef tokens can be looked up in the [IMetaDataImport](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md) object for the corresponding virtual ICorDebugModule object.|Returns the IL in the post-merge assembly image.|  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]  \n  \n## See Also  \n [ICorDebugProcess6 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess6-interface.md)   \n [Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)","nodes":[{"pos":[4,403],"nodes":[{"content":"ICorDebugProcess6::EnableVirtualModuleSplitting Method | Microsoft Docs","nodes":[{"pos":[0,71],"content":"ICorDebugProcess6::EnableVirtualModuleSplitting Method | Microsoft Docs","nodes":[{"content":"ICorDebugProcess6::EnableVirtualModuleSplitting Method | Microsoft Docs","pos":[0,71]}]}],"pos":[6,80],"yaml":true}],"content":"title: \"ICorDebugProcess6::EnableVirtualModuleSplitting Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\ndev_langs: \n  - \"C++\"\nms.assetid: e7733bd3-68da-47f9-82ef-477db5f2e32d\ncaps.latest.revision: 5\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","yamlblock":true},{"pos":[410,464],"content":"ICorDebugProcess6::EnableVirtualModuleSplitting Method","linkify":"ICorDebugProcess6::EnableVirtualModuleSplitting Method","nodes":[{"content":"ICorDebugProcess6::EnableVirtualModuleSplitting Method","pos":[0,54]}]},{"content":"Enables or disables virtual module splitting.","pos":[465,510]},{"pos":[519,525],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[628,638],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"<ph id=\"ph1\">`true`</ph> to enable virtual module splitting; <ph id=\"ph2\">`false`</ph> to disable it.","pos":[663,728],"source":"`true` to enable virtual module splitting; `false` to disable it."},{"pos":[737,744],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Virtual module splitting causes <bpt id=\"p1\">[</bpt>ICorDebug<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)</ept> to recognize modules that were merged together during the build process and present them as a group of separate modules rather than a single large module.","pos":[748,1021],"source":"Virtual module splitting causes [ICorDebug](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md) to recognize modules that were merged together during the build process and present them as a group of separate modules rather than a single large module."},{"content":"Doing this changes the behavior of various <bpt id=\"p1\">[</bpt>ICorDebug<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)</ept> methods described below.","pos":[1022,1176],"source":" Doing this changes the behavior of various [ICorDebug](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md) methods described below."},{"pos":[1184,1242],"content":"[!NOTE]\n This method is available with .NET Native only.","leadings":["","> "],"nodes":[{"content":"This method is available with .NET Native only.","pos":[9,56]}]},{"content":"This method can be called and the value of <ph id=\"ph1\">`enableSplitting`</ph> can be changed at any time.","pos":[1249,1337],"source":"This method can be called and the value of `enableSplitting` can be changed at any time."},{"content":"It does not cause any stateful functional changes in an <bpt id=\"p1\">[</bpt>ICorDebug<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)</ept> object, other than altering the behavior of the methods listed in the <bpt id=\"p2\">[</bpt>Virtual module splitting and the unmanaged debugging APIs<ept id=\"p2\">](#APIs)</ept> section at the time they are called.","pos":[1338,1654],"source":" It does not cause any stateful functional changes in an [ICorDebug](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md) object, other than altering the behavior of the methods listed in the [Virtual module splitting and the unmanaged debugging APIs](#APIs) section at the time they are called."},{"content":"Using virtual modules does incur a performance penalty when calling those methods.","pos":[1655,1737]},{"content":"In addition, significant in-memory caching of the virtualized metadata may be required to correctly implement the <bpt id=\"p1\">[</bpt>IMetaDataImport<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)</ept> APIs, and these caches may be retained even after virtual module splitting has been turned off.","pos":[1738,2045],"source":" In addition, significant in-memory caching of the virtualized metadata may be required to correctly implement the [IMetaDataImport](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md) APIs, and these caches may be retained even after virtual module splitting has been turned off."},{"pos":[2054,2065],"content":"Terminology","linkify":"Terminology","nodes":[{"content":"Terminology","pos":[0,11]}]},{"content":"The following terms are used when describing virtual module splitting:","pos":[2069,2139]},{"content":"container modules, or containers","pos":[2146,2178]},{"content":"The aggregate modules.","pos":[2182,2204]},{"content":"sub-modules, or virtual modules","pos":[2211,2242]},{"content":"The modules found in a container.","pos":[2246,2279]},{"content":"regular modules","pos":[2286,2301]},{"content":"Modules that were not merged at build time.","pos":[2305,2348]},{"content":"They are neither container modules nor sub-modules.","pos":[2349,2400]},{"content":"Both container modules and sub-modules are represented by ICorDebugModule interface objects.","pos":[2407,2499]},{"content":"However, the behavior of the interface is slightly different in each case, as the <ph id=\"ph1\">\\&lt;</ph>x-ref to section&gt; section describes.","pos":[2500,2620],"source":" However, the behavior of the interface is slightly different in each case, as the \\<x-ref to section> section describes."},{"pos":[2629,2651],"content":"Modules and assemblies","linkify":"Modules and assemblies","nodes":[{"content":"Modules and assemblies","pos":[0,22]}]},{"content":"Multi-module assemblies are not supported for assembly merging scenarios, so there is a one-to-one relationship between a module and an assembly.","pos":[2655,2800]},{"content":"Each ICorDebugModule object, regardless of whether it represents a container module or a sub-module, has a corresponding ICorDebugAssembly object.","pos":[2801,2947]},{"content":"The <bpt id=\"p1\">[</bpt>ICorDebugModule::GetAssembly<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getassembly-method.md)</ept> method converts from the module to the assembly.","pos":[2948,3121],"source":" The [ICorDebugModule::GetAssembly](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getassembly-method.md) method converts from the module to the assembly."},{"content":"To map in the other direction, the <bpt id=\"p1\">[</bpt>ICorDebugAssembly::EnumerateModules<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugassembly-enumeratemodules-method.md)</ept> method enumerates only 1 module.","pos":[3122,3324],"source":" To map in the other direction, the [ICorDebugAssembly::EnumerateModules](../../../../docs/framework/unmanaged-api/debugging/icordebugassembly-enumeratemodules-method.md) method enumerates only 1 module."},{"content":"Because assembly and module form a tightly coupled pair in this case, the terms assembly and module become largely interchangeable.","pos":[3325,3456]},{"pos":[3465,3487],"content":"Behavioral differences","linkify":"Behavioral differences","nodes":[{"content":"Behavioral differences","pos":[0,22]}]},{"content":"Container modules have the following behaviors and characteristics:","pos":[3491,3558]},{"content":"Their metadata for all of the constituent sub-modules is merged together.","pos":[3568,3641]},{"content":"Their type names may be mangled.","pos":[3651,3683]},{"pos":[3693,3855],"content":"The <bpt id=\"p1\">[</bpt>ICorDebugModule::GetName<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getname-method.md)</ept> method returns the path to an on-disk module.","source":"The [ICorDebugModule::GetName](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getname-method.md) method returns the path to an on-disk module."},{"pos":[3865,4020],"content":"The <bpt id=\"p1\">[</bpt>ICorDebugModule::GetSize<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getsize-method.md)</ept> method returns the size of that image.","source":"The [ICorDebugModule::GetSize](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getsize-method.md) method returns the size of that image."},{"content":"The ICorDebugAssembly3.EnumerateContainedAssemblies method lists the sub-modules.","pos":[4030,4111]},{"pos":[4121,4190],"content":"The ICorDebugAssembly3.GetContainerAssembly method returns <ph id=\"ph1\">`S_FALSE`</ph>.","source":"The ICorDebugAssembly3.GetContainerAssembly method returns `S_FALSE`."},{"content":"Sub-modules have the following behaviors and characteristics:","pos":[4197,4258]},{"content":"They have a reduced set of metadata that corresponds only to the original assembly that was merged.","pos":[4268,4367]},{"content":"The metadata names are not mangled.","pos":[4377,4412]},{"content":"Metadata tokens are unlikely to match the tokens in the original assembly before it was merged in the build process.","pos":[4422,4538]},{"pos":[4548,4715],"content":"The <bpt id=\"p1\">[</bpt>ICorDebugModule::GetName<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getname-method.md)</ept> method returns the assembly name, not a file path.","source":"The [ICorDebugModule::GetName](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getname-method.md) method returns the assembly name, not a file path."},{"pos":[4725,4890],"content":"The <bpt id=\"p1\">[</bpt>ICorDebugModule::GetSize<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getsize-method.md)</ept> method returns the original unmerged image size.","source":"The [ICorDebugModule::GetSize](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getsize-method.md) method returns the original unmerged image size."},{"pos":[4900,4975],"content":"The ICorDebugModule3.EnumerateContainedAssemblies method returns <ph id=\"ph1\">`S_FALSE`</ph>.","source":"The ICorDebugModule3.EnumerateContainedAssemblies method returns `S_FALSE`."},{"content":"The ICorDebugAssembly3.GetContainerAssembly method returns the containing module.","pos":[4985,5066]},{"pos":[5075,5108],"content":"Interfaces retrieved from modules","linkify":"Interfaces retrieved from modules","nodes":[{"content":"Interfaces retrieved from modules","pos":[0,33]}]},{"content":"A variety of interfaces can be created or retrieved from modules.","pos":[5112,5177]},{"content":"Some of these include:","pos":[5178,5200]},{"pos":[5210,5401],"content":"An ICorDebugClass object, which is returned by the <bpt id=\"p1\">[</bpt>ICorDebugModule::GetClassFromToken<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getclassfromtoken-method.md)</ept> method.","source":"An ICorDebugClass object, which is returned by the [ICorDebugModule::GetClassFromToken](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getclassfromtoken-method.md) method."},{"pos":[5411,5593],"content":"An ICorDebugAssembly object, which is returned by the <bpt id=\"p1\">[</bpt>ICorDebugModule::GetAssembly<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getassembly-method.md)</ept> method.","source":"An ICorDebugAssembly object, which is returned by the [ICorDebugModule::GetAssembly](../../../../docs/framework/unmanaged-api/debugging/icordebugmodule-getassembly-method.md) method."},{"content":"These objects are always cached by <bpt id=\"p1\">[</bpt>ICorDebug<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md)</ept>, and they will have the same pointer identity regardless of whether they were created or queried from the container module or a sub-module.","pos":[5600,5861],"source":"These objects are always cached by [ICorDebug](../../../../docs/framework/unmanaged-api/debugging/icordebug-interface.md), and they will have the same pointer identity regardless of whether they were created or queried from the container module or a sub-module."},{"content":"The sub-module provides a filtered view of these cached objects, not a separate cache with its own copies.","pos":[5862,5968]},{"pos":[6000,6057],"content":"Virtual module splitting and the unmanaged debugging APIs","linkify":"Virtual module splitting and the unmanaged debugging APIs","nodes":[{"content":"Virtual module splitting and the unmanaged debugging APIs","pos":[0,57]}]},{"content":"The following table shows how virtual module splitting affects the behavior of other methods in the unmanaged debugging API.","pos":[6061,6185]},{"content":"Method","pos":[6192,6198]},{"pos":[6344,6464],"content":"<bpt id=\"p1\">[</bpt>ICorDebugFunction::GetModule<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugfunction-getmodule-method.md)</ept>","source":"[ICorDebugFunction::GetModule](../../../../docs/framework/unmanaged-api/debugging/icordebugfunction-getmodule-method.md)"},{"content":"Returns the sub-module this function was originally defined in","pos":[6465,6527]},{"content":"Returns the container module this function was merged into","pos":[6528,6586]},{"pos":[6591,6705],"content":"<bpt id=\"p1\">[</bpt>ICorDebugClass::GetModule<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugclass-getmodule-method.md)</ept>","source":"[ICorDebugClass::GetModule](../../../../docs/framework/unmanaged-api/debugging/icordebugclass-getmodule-method.md)"},{"content":"Returns the sub-module this class was originally defined in.","pos":[6706,6766]},{"content":"Returns the container module this class was merged into.","pos":[6767,6823]},{"content":"ICorDebugModuleDebugEvent::GetModule","pos":[6828,6864]},{"content":"Returns the container module that was loaded.","pos":[6865,6910]},{"content":"Sub-modules are not given load events regardless of this setting.","pos":[6911,6976]},{"content":"Returns the container module that was loaded.","pos":[6977,7022]},{"pos":[7027,7169],"content":"<bpt id=\"p1\">[</bpt>ICorDebugAppDomain::EnumerateAssemblies<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugappdomain-enumerateassemblies-method.md)</ept>","source":"[ICorDebugAppDomain::EnumerateAssemblies](../../../../docs/framework/unmanaged-api/debugging/icordebugappdomain-enumerateassemblies-method.md)"},{"content":"Returns a list of sub-assemblies and regular assemblies; no container assemblies are included.","pos":[7170,7264]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  If any container assembly is missing symbols, none of its sub-assemblies will be enumerated.","pos":[7265,7368],"source":"**Note:**  If any container assembly is missing symbols, none of its sub-assemblies will be enumerated."},{"content":"If any regular assembly is missing symbols, it may or may not be enumerated.","pos":[7369,7445]},{"content":"Returns a list of container assemblies and regular assemblies; no sub-assemblies are included.","pos":[7446,7540]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  If any regular assembly is missing symbols, it may or may not be enumerated.","pos":[7541,7628],"source":"**Note:**  If any regular assembly is missing symbols, it may or may not be enumerated."},{"pos":[7633,7774],"content":"<bpt id=\"p1\">[</bpt>ICorDebugCode::GetCode<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugcode-getcode-method.md)</ept> (when referring to IL code only)","source":"[ICorDebugCode::GetCode](../../../../docs/framework/unmanaged-api/debugging/icordebugcode-getcode-method.md) (when referring to IL code only)"},{"content":"Returns IL that would be valid in a pre-merge assembly image.","pos":[7775,7836]},{"content":"Specifically, any inline metadata tokens will correctly be TypeRef or MemberRef tokens when the types being referred to are not defined in the virtual module containing the IL.","pos":[7837,8013]},{"content":"These TypeRef or MemberRef tokens can be looked up in the <bpt id=\"p1\">[</bpt>IMetaDataImport<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md)</ept> object for the corresponding virtual ICorDebugModule object.","pos":[8014,8230],"source":" These TypeRef or MemberRef tokens can be looked up in the [IMetaDataImport](../../../../docs/framework/unmanaged-api/metadata/imetadataimport-interface.md) object for the corresponding virtual ICorDebugModule object."},{"content":"Returns the IL in the post-merge assembly image.","pos":[8231,8279]},{"pos":[8289,8301],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[8305,8409],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[8416,8452],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[8459,8484],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[8491,8587],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_46_native](../../../../includes/net-46-native-md.md)]"},{"pos":[8596,8604],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICorDebugProcess6 Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess6-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[8608,8721],"source":"[ICorDebugProcess6 Interface](../../../../docs/framework/unmanaged-api/debugging/icordebugprocess6-interface.md) "},{"content":"<bpt id=\"p1\">[</bpt>Debugging Interfaces<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)</ept>","pos":[8725,8823],"source":"[Debugging Interfaces](../../../../docs/framework/unmanaged-api/debugging/debugging-interfaces.md)"}]}