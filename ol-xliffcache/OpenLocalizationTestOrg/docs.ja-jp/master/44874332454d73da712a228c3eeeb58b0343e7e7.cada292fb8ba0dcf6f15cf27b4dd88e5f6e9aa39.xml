{"content":"---\ntitle: \"override (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"override\"\n  - \"override_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"override keyword [C#]\"\nms.assetid: dd1907a8-acf8-46d3-80b9-c2ca4febada8\ncaps.latest.revision: 26\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# override (C# Reference)\nThe `override` modifier is required to extend or modify the abstract or virtual implementation of an inherited method, property, indexer, or event.  \n  \n## Example  \n In this example, the `Square` class must provide an overridden implementation of `Area` because `Area` is inherited from the abstract `ShapesClass`:  \n  \n [!code-cs[csrefKeywordsModifiers#1](../../../csharp/language-reference/keywords/codesnippet/CSharp/override_1.cs)]  \n  \n An `override` method provides a new implementation of a member that is inherited from a base class. The method that is overridden by an `override` declaration is known as the overridden base method. The overridden base method must have the same signature as the `override` method. For information about inheritance, see [Inheritance](../../../csharp/programming-guide/classes-and-structs/inheritance.md).  \n  \n You cannot override a non-virtual or static method. The overridden base method must be `virtual`, `abstract`, or `override`.  \n  \n An `override` declaration cannot change the accessibility of the `virtual` method. Both the `override` method and the `virtual` method must have the same [access level modifier](../../../csharp/language-reference/keywords/access-modifiers.md).  \n  \n You cannot use the `new`, `static`, or `virtual` modifiers to modify an `override` method.  \n  \n An overriding property declaration must specify exactly the same access modifier, type, and name as the inherited property, and the overridden property must be `virtual`, `abstract`, or `override`.  \n  \n For more information about how to use the `override` keyword, see [Versioning with the Override and New Keywords](../../../csharp/programming-guide/classes-and-structs/versioning-with-the-override-and-new-keywords.md) and [Knowing when to use Override and New Keywords](../../../csharp/programming-guide/classes-and-structs/knowing-when-to-use-override-and-new-keywords.md).  \n  \n## Example  \n This example defines a base class named `Employee`, and a derived class named `SalesEmployee`. The `SalesEmployee` class includes an extra property, `salesbonus`, and overrides the method `CalculatePay` in order to take it into account.  \n  \n [!code-cs[csrefKeywordsModifiers#9](../../../csharp/language-reference/keywords/codesnippet/CSharp/override_2.cs)]  \n  \n## C# Language Specification  \n [!INCLUDE[CSharplangspec](../../../csharp/language-reference/keywords/includes/csharplangspec_md.md)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [Inheritance](../../../csharp/programming-guide/classes-and-structs/inheritance.md)   \n [C# Keywords](../../../csharp/language-reference/keywords/index.md)   \n [Modifiers](../../../csharp/language-reference/keywords/modifiers.md)   \n [abstract](../../../csharp/language-reference/keywords/abstract.md)   \n [virtual](../../../csharp/language-reference/keywords/virtual.md)   \n [new](../../../csharp/language-reference/keywords/new.md)   \n [Polymorphism](../../../csharp/programming-guide/classes-and-structs/polymorphism.md)","nodes":[{"pos":[4,576],"embed":true,"restype":"x-metadata","content":"title: \"override (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"override\"\n  - \"override_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"override keyword [C#]\"\nms.assetid: dd1907a8-acf8-46d3-80b9-c2ca4febada8\ncaps.latest.revision: 26\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"override (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,40],"content":"override (C# Reference) | Microsoft Docs","nodes":[{"content":"override (C# Reference) | Microsoft Docs","pos":[0,40]}]}],"path":["title"]}],"yml":true},{"pos":[583,606],"content":"override (C# Reference)","linkify":"override (C# Reference)","nodes":[{"content":"override (C# Reference)","pos":[0,23]}]},{"pos":[607,754],"content":"The <ph id=\"ph1\">`override`</ph> modifier is required to extend or modify the abstract or virtual implementation of an inherited method, property, indexer, or event.","source":"The `override` modifier is required to extend or modify the abstract or virtual implementation of an inherited method, property, indexer, or event."},{"pos":[763,770],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[774,922],"content":"In this example, the <ph id=\"ph1\">`Square`</ph> class must provide an overridden implementation of <ph id=\"ph2\">`Area`</ph> because <ph id=\"ph3\">`Area`</ph> is inherited from the abstract <ph id=\"ph4\">`ShapesClass`</ph>:","source":"In this example, the `Square` class must provide an overridden implementation of `Area` because `Area` is inherited from the abstract `ShapesClass`:"},{"content":"An <ph id=\"ph1\">`override`</ph> method provides a new implementation of a member that is inherited from a base class.","pos":[1050,1149],"source":"An `override` method provides a new implementation of a member that is inherited from a base class."},{"content":"The method that is overridden by an <ph id=\"ph1\">`override`</ph> declaration is known as the overridden base method.","pos":[1150,1248],"source":" The method that is overridden by an `override` declaration is known as the overridden base method."},{"content":"The overridden base method must have the same signature as the <ph id=\"ph1\">`override`</ph> method.","pos":[1249,1330],"source":" The overridden base method must have the same signature as the `override` method."},{"content":"For information about inheritance, see <bpt id=\"p1\">[</bpt>Inheritance<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/inheritance.md)</ept>.","pos":[1331,1454],"source":" For information about inheritance, see [Inheritance](../../../csharp/programming-guide/classes-and-structs/inheritance.md)."},{"content":"You cannot override a non-virtual or static method.","pos":[1461,1512]},{"content":"The overridden base method must be <ph id=\"ph1\">`virtual`</ph>, <ph id=\"ph2\">`abstract`</ph>, or <ph id=\"ph3\">`override`</ph>.","pos":[1513,1585],"source":" The overridden base method must be `virtual`, `abstract`, or `override`."},{"content":"An <ph id=\"ph1\">`override`</ph> declaration cannot change the accessibility of the <ph id=\"ph2\">`virtual`</ph> method.","pos":[1592,1674],"source":"An `override` declaration cannot change the accessibility of the `virtual` method."},{"content":"Both the <ph id=\"ph1\">`override`</ph> method and the <ph id=\"ph2\">`virtual`</ph> method must have the same <bpt id=\"p1\">[</bpt>access level modifier<ept id=\"p1\">](../../../csharp/language-reference/keywords/access-modifiers.md)</ept>.","pos":[1675,1835],"source":" Both the `override` method and the `virtual` method must have the same [access level modifier](../../../csharp/language-reference/keywords/access-modifiers.md)."},{"pos":[1842,1932],"content":"You cannot use the <ph id=\"ph1\">`new`</ph>, <ph id=\"ph2\">`static`</ph>, or <ph id=\"ph3\">`virtual`</ph> modifiers to modify an <ph id=\"ph4\">`override`</ph> method.","source":"You cannot use the `new`, `static`, or `virtual` modifiers to modify an `override` method."},{"pos":[1939,2136],"content":"An overriding property declaration must specify exactly the same access modifier, type, and name as the inherited property, and the overridden property must be <ph id=\"ph1\">`virtual`</ph>, <ph id=\"ph2\">`abstract`</ph>, or <ph id=\"ph3\">`override`</ph>.","source":"An overriding property declaration must specify exactly the same access modifier, type, and name as the inherited property, and the overridden property must be `virtual`, `abstract`, or `override`."},{"pos":[2143,2517],"content":"For more information about how to use the <ph id=\"ph1\">`override`</ph> keyword, see <bpt id=\"p1\">[</bpt>Versioning with the Override and New Keywords<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/versioning-with-the-override-and-new-keywords.md)</ept> and <bpt id=\"p2\">[</bpt>Knowing when to use Override and New Keywords<ept id=\"p2\">](../../../csharp/programming-guide/classes-and-structs/knowing-when-to-use-override-and-new-keywords.md)</ept>.","source":"For more information about how to use the `override` keyword, see [Versioning with the Override and New Keywords](../../../csharp/programming-guide/classes-and-structs/versioning-with-the-override-and-new-keywords.md) and [Knowing when to use Override and New Keywords](../../../csharp/programming-guide/classes-and-structs/knowing-when-to-use-override-and-new-keywords.md)."},{"pos":[2526,2533],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example defines a base class named <ph id=\"ph1\">`Employee`</ph>, and a derived class named <ph id=\"ph2\">`SalesEmployee`</ph>.","pos":[2537,2631],"source":"This example defines a base class named `Employee`, and a derived class named `SalesEmployee`."},{"content":"The <ph id=\"ph1\">`SalesEmployee`</ph> class includes an extra property, <ph id=\"ph2\">`salesbonus`</ph>, and overrides the method <ph id=\"ph3\">`CalculatePay`</ph> in order to take it into account.","pos":[2632,2773],"source":" The `SalesEmployee` class includes an extra property, `salesbonus`, and overrides the method `CalculatePay` in order to take it into account."},{"pos":[2903,2928],"content":"C# Language Specification","linkify":"C# Language Specification","nodes":[{"content":"C# Language Specification","pos":[0,25]}]},{"pos":[3042,3050],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3054,3114],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3118,3185],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Inheritance<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/inheritance.md)</ept><ph id=\"ph1\"> </ph>","pos":[3189,3273],"source":"[Inheritance](../../../csharp/programming-guide/classes-and-structs/inheritance.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Keywords<ept id=\"p1\">](../../../csharp/language-reference/keywords/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3277,3345],"source":"[C# Keywords](../../../csharp/language-reference/keywords/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Modifiers<ept id=\"p1\">](../../../csharp/language-reference/keywords/modifiers.md)</ept><ph id=\"ph1\"> </ph>","pos":[3349,3419],"source":"[Modifiers](../../../csharp/language-reference/keywords/modifiers.md) "},{"content":"<bpt id=\"p1\">[</bpt>abstract<ept id=\"p1\">](../../../csharp/language-reference/keywords/abstract.md)</ept><ph id=\"ph1\"> </ph>","pos":[3423,3491],"source":"[abstract](../../../csharp/language-reference/keywords/abstract.md) "},{"content":"<bpt id=\"p1\">[</bpt>virtual<ept id=\"p1\">](../../../csharp/language-reference/keywords/virtual.md)</ept><ph id=\"ph1\"> </ph>","pos":[3495,3561],"source":"[virtual](../../../csharp/language-reference/keywords/virtual.md) "},{"content":"<bpt id=\"p1\">[</bpt>new<ept id=\"p1\">](../../../csharp/language-reference/keywords/new.md)</ept><ph id=\"ph1\"> </ph>","pos":[3565,3623],"source":"[new](../../../csharp/language-reference/keywords/new.md) "},{"content":"<bpt id=\"p1\">[</bpt>Polymorphism<ept id=\"p1\">](../../../csharp/programming-guide/classes-and-structs/polymorphism.md)</ept>","pos":[3627,3712],"source":"[Polymorphism](../../../csharp/programming-guide/classes-and-structs/polymorphism.md)"}]}