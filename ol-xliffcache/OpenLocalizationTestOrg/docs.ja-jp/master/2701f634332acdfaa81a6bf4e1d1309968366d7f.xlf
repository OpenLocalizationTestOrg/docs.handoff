<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-write-event-information-to-a-text-file.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2701f634332acdfaa81a6bf4e1d1309968366d7f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\developing-apps\programming\log-info\how-to-write-event-information-to-a-text-file.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e79cc6a51e3bf2f3eeaa3697fd2f26eca248300</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ae41c18af5237f77d07688553a63cffb769b8c8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Write Event Information to a Text File (Visual Basic) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Write Event Information to a Text File (Visual Basic)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`My.Application.Log`</ph> and <ph id="ph2">`My.Log`</ph> objects to log information about events that occur in your application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <ph id="ph1">`My.Application.Log.WriteEntry`</ph> method to log tracing information to a log file.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To add and configure the file log listener</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Right-click app.config in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and choose <bpt id="p2">**</bpt>Open<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If there is no app.config file:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>Add New Item<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, choose <bpt id="p2">**</bpt>Application Configuration File<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Locate the <ph id="ph1">`&lt;listeners&gt;`</ph> section in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You will find the <ph id="ph1">\&lt;</ph>listeners&gt; section in the <ph id="ph2">\&lt;</ph>source&gt; section with the name attribute "DefaultSource", which is nested under the <ph id="ph3">\&lt;</ph>system.diagnostics&gt; section, which is nested under the top-level <ph id="ph4">\&lt;</ph>configuration&gt; section.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add this element to that <ph id="ph1">`&lt;listeners&gt;`</ph> section:</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Locate the <ph id="ph1">`&lt;sharedListeners&gt;`</ph> section in the <ph id="ph2">`&lt;system.diagnostics&gt;`</ph> section, nested under the top-level <ph id="ph3">`&lt;configuration&gt;`</ph> section.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Add this element to that <ph id="ph1">`&lt;sharedListeners&gt;`</ph> section:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Change the value of the <ph id="ph1">`customlocation`</ph> attribute to the log directory.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To set the value of a listener property, use an attribute that has the same name as the property, with all letters in the name lowercase.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`location`</ph> and <ph id="ph2">`customlocation`</ph> attributes set the values of the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> and <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To write event information to the file log</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`My.Application.Log.WriteEntry`</ph> or <ph id="ph2">`My.Application.Log.WriteException`</ph> method to write information to the file log.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Write Log Messages<ept id="p1">](../../../../visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept> and <bpt id="p2">[</bpt>How to: Log Exceptions<ept id="p2">](../../../../visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>After you configure the file log listener for an assembly, it receives all messages that <ph id="ph1">`My.Application.Log`</ph> writes from that assembly.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Working with Application Logs<ept id="p1">](../../../../visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Log Exceptions<ept id="p1">](../../../../visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>