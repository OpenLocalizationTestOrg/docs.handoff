{"content":"---\ntitle: \"System Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: b7c71b58-09e6-44ce-a3e5-a0fdb892fb86\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"\n---\n# System Functions\nThe .NET Framework Data Provider for SQL Server (SqlClient) provides the following system functions:  \n  \n|Function|Description|  \n|--------------|-----------------|  \n|`CHECKSUM (` `value`, [`value`, [`value`]]`)`|Returns the checksum value. `CHECKSUM` is intended for use in building hash indexes.<br /><br /> **Arguments**<br /><br /> `value`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `String`, `Binary`, or `Guid`. You can specify one, two or three values.<br /><br /> **Return Value**<br /><br /> The absolute value of the specified expression.<br /><br /> **Example**<br /><br /> `SqlServer.CHECKSUM(10,100,1000.0)`|  \n|`CURRENT_TIMESTAMP ()`|Produces the current date and time in SQL Server internal format for `DateTime` values with a precision of 7 in SQL Server 2008 and a precision of 3 in SQL Server 2005.<br /><br /> **Return Value**<br /><br /> The current system date and time as a `DateTime`.<br /><br /> **Example**<br /><br /> `SqlServer.CURRENT_TIMESTAMP()`|  \n|`CURRENT_ USER` `()`|Returns the name of the current user.<br /><br /> **Return Value**<br /><br /> An ASCII `String`.<br /><br /> **Example**<br /><br /> `SqlServer.CURRENT_USER()`|  \n|`DATALENGTH` `(` `expression` `)`|Returns the number of bytes used to represent any expression.<br /><br /> **Arguments**<br /><br /> `expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`.<br /><br /> **Return Value**<br /><br /> The size of properties as an `Int32`.<br /><br /> **Example**<br /><br /> `SELECT VALUE SqlServer.DATALENGTH(P.Name)FROM`<br /><br /> `AdventureWorksEntities.Product AS P`|  \n|`HOST_NAME()`|Returns the workstation name.<br /><br /> **Return Value**<br /><br /> A Unicode `String`.<br /><br /> **Example**<br /><br /> `SqlServer.HOST_NAME()`|  \n|`ISDATE(` `expression` `)`|Determines whether an input expression is a valid date.<br /><br /> **Arguments**<br /><br /> `expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`.<br /><br /> **Return Value**<br /><br /> An `Int32`. One (1) if the input expression is a valid date. Zero (0) otherwise.<br /><br /> **Example**<br /><br /> `SqlServer.ISDATE('1/1/2006')`|  \n|`ISNUMERIC(` `expression` `)`|Determines whether an expression is a valid numeric type.<br /><br /> **Arguments**<br /><br /> `expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`.<br /><br /> **Return Value**<br /><br /> An `Int32`. One (1) if the input expression is a valid date. Zero (0) otherwise.<br /><br /> **Example**<br /><br /> `SqlServer.ISNUMERIC('21')`|  \n|`NEWID()`|Creates a unique value of type Guid.<br /><br /> **Return Value**<br /><br /> A `Guid`.<br /><br /> **Example**<br /><br /> `SqlServer.NEWID()`|  \n|`USER_NAME(` `id` `)`|Returns a database user name from a specified identification number.<br /><br /> **Arguments**<br /><br /> `expression`: An `Int32` identification number associated with a database user.<br /><br /> **Return Value**<br /><br /> A Unicode `String`.<br /><br /> **Example**<br /><br /> `SqlServer.USER_NAME(0)`|  \n  \n For more information about the string functions that SqlClient supports, see the documentation for the SQL Server version that you specified in the SqlClient provider manifest:  \n  \n|SQL Server 2000|SQL Server 2005|SQL Server 2008|  \n|---------------------|---------------------|---------------------|  \n|[System Functions Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=115918)|[System Functions Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=115917)|[System Functions (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=115919)|  \n  \n## See Also  \n [Entity SQL Language](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md)   \n [SqlClient for Entity Framework Functions](../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)","nodes":[{"pos":[4,391],"nodes":[{"content":"System Functions | Microsoft Docs","nodes":[{"pos":[0,33],"content":"System Functions | Microsoft Docs","nodes":[{"content":"System Functions | Microsoft Docs","pos":[0,33]}]}],"pos":[6,42],"yaml":true}],"content":"title: \"System Functions | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-ado\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\nms.assetid: b7c71b58-09e6-44ce-a3e5-a0fdb892fb86\ncaps.latest.revision: 2\nauthor: \"JennieHubbard\"\nms.author: \"jhubbard\"\nmanager: \"jhubbard\"","yamlblock":true},{"pos":[398,414],"content":"System Functions","linkify":"System Functions","nodes":[{"content":"System Functions","pos":[0,16]}]},{"content":"The .NET Framework Data Provider for SQL Server (SqlClient) provides the following system functions:","pos":[415,515]},{"content":"Function","pos":[522,530]},{"content":"Description","pos":[531,542]},{"pos":[584,629],"content":"<ph id=\"ph1\">`CHECKSUM (`</ph> <ph id=\"ph2\">`value`</ph>, [<ph id=\"ph3\">`value`</ph>, [<ph id=\"ph4\">`value`</ph>]]<ph id=\"ph5\">`)`</ph>","source":"`CHECKSUM (` `value`, [`value`, [`value`]]`)`"},{"content":"Returns the checksum value.","pos":[630,657]},{"content":"<ph id=\"ph1\">`CHECKSUM`</ph> is intended for use in building hash indexes.","pos":[658,714],"source":"`CHECKSUM` is intended for use in building hash indexes."},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[727,740],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`value`</ph>: A <ph id=\"ph2\">`Boolean`</ph>, <ph id=\"ph3\">`Byte`</ph>, <ph id=\"ph4\">`Int16`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`Int64`</ph>, <ph id=\"ph7\">`Single`</ph>, <ph id=\"ph8\">`Decimal`</ph>, <ph id=\"ph9\">`Double`</ph>, <ph id=\"ph10\">`DateTime`</ph>, <ph id=\"ph11\">`String`</ph>, <ph id=\"ph12\">`Binary`</ph>, or <ph id=\"ph13\">`Guid`</ph>.","pos":[753,883],"source":"`value`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `String`, `Binary`, or `Guid`."},{"content":"You can specify one, two or three values.","pos":[884,925]},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[938,954],"source":"**Return Value**"},{"content":"The absolute value of the specified expression.","pos":[967,1014]},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[1027,1038],"source":"**Example**"},{"content":"Produces the current date and time in SQL Server internal format for <ph id=\"ph1\">`DateTime`</ph> values with a precision of 7 in SQL Server 2008 and a precision of 3 in SQL Server 2005.","pos":[1114,1282],"source":"Produces the current date and time in SQL Server internal format for `DateTime` values with a precision of 7 in SQL Server 2008 and a precision of 3 in SQL Server 2005."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1295,1311],"source":"**Return Value**"},{"content":"The current system date and time as a <ph id=\"ph1\">`DateTime`</ph>.","pos":[1324,1373],"source":"The current system date and time as a `DateTime`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[1386,1397],"source":"**Example**"},{"pos":[1446,1466],"content":"<ph id=\"ph1\">`CURRENT_ USER`</ph> <ph id=\"ph2\">`()`</ph>","source":"`CURRENT_ USER` `()`"},{"content":"Returns the name of the current user.","pos":[1467,1504]},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1517,1533],"source":"**Return Value**"},{"content":"An ASCII <ph id=\"ph1\">`String`</ph>.","pos":[1546,1564],"source":"An ASCII `String`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[1577,1588],"source":"**Example**"},{"pos":[1632,1665],"content":"<ph id=\"ph1\">`DATALENGTH`</ph> <ph id=\"ph2\">`(`</ph> <ph id=\"ph3\">`expression`</ph> <ph id=\"ph4\">`)`</ph>","source":"`DATALENGTH` `(` `expression` `)`"},{"content":"Returns the number of bytes used to represent any expression.","pos":[1666,1727]},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[1740,1753],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: A <ph id=\"ph2\">`Boolean`</ph>, <ph id=\"ph3\">`Byte`</ph>, <ph id=\"ph4\">`Int16`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`Int64`</ph>, <ph id=\"ph7\">`Single`</ph>, <ph id=\"ph8\">`Decimal`</ph>, <ph id=\"ph9\">`Double`</ph>, <ph id=\"ph10\">`DateTime`</ph>, <ph id=\"ph11\">`Time`</ph>, <ph id=\"ph12\">`DateTimeOffset`</ph>, <ph id=\"ph13\">`String`</ph>, <ph id=\"ph14\">`Binary`</ph>, or <ph id=\"ph15\">`Guid`</ph>.","pos":[1766,1927],"source":"`expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[1940,1956],"source":"**Return Value**"},{"content":"The size of properties as an <ph id=\"ph1\">`Int32`</ph>.","pos":[1969,2006],"source":"The size of properties as an `Int32`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[2019,2030],"source":"**Example**"},{"content":"Returns the workstation name.","pos":[2159,2188]},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[2201,2217],"source":"**Return Value**"},{"content":"A Unicode <ph id=\"ph1\">`String`</ph>.","pos":[2230,2249],"source":"A Unicode `String`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[2262,2273],"source":"**Example**"},{"pos":[2314,2340],"content":"<ph id=\"ph1\">`ISDATE(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`ISDATE(` `expression` `)`"},{"content":"Determines whether an input expression is a valid date.","pos":[2341,2396]},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[2409,2422],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: A <ph id=\"ph2\">`Boolean`</ph>, <ph id=\"ph3\">`Byte`</ph>, <ph id=\"ph4\">`Int16`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`Int64`</ph>, <ph id=\"ph7\">`Single`</ph>, <ph id=\"ph8\">`Decimal`</ph>, <ph id=\"ph9\">`Double`</ph>, <ph id=\"ph10\">`DateTime`</ph>, <ph id=\"ph11\">`Time`</ph>, <ph id=\"ph12\">`DateTimeOffset`</ph>, <ph id=\"ph13\">`String`</ph>, <ph id=\"ph14\">`Binary`</ph>, or <ph id=\"ph15\">`Guid`</ph>.","pos":[2435,2596],"source":"`expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[2609,2625],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[2638,2649],"source":"An `Int32`."},{"content":"One (1) if the input expression is a valid date.","pos":[2650,2698]},{"content":"Zero (0) otherwise.","pos":[2699,2718]},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[2731,2742],"source":"**Example**"},{"pos":[2790,2819],"content":"<ph id=\"ph1\">`ISNUMERIC(`</ph> <ph id=\"ph2\">`expression`</ph> <ph id=\"ph3\">`)`</ph>","source":"`ISNUMERIC(` `expression` `)`"},{"content":"Determines whether an expression is a valid numeric type.","pos":[2820,2877]},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[2890,2903],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: A <ph id=\"ph2\">`Boolean`</ph>, <ph id=\"ph3\">`Byte`</ph>, <ph id=\"ph4\">`Int16`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`Int64`</ph>, <ph id=\"ph7\">`Single`</ph>, <ph id=\"ph8\">`Decimal`</ph>, <ph id=\"ph9\">`Double`</ph>, <ph id=\"ph10\">`DateTime`</ph>, <ph id=\"ph11\">`Time`</ph>, <ph id=\"ph12\">`DateTimeOffset`</ph>, <ph id=\"ph13\">`String`</ph>, <ph id=\"ph14\">`Binary`</ph>, or <ph id=\"ph15\">`Guid`</ph>.","pos":[2916,3077],"source":"`expression`: A `Boolean`, `Byte`, `Int16`, `Int32`, `Int64`, `Single`, `Decimal`, `Double`, `DateTime`, `Time`, `DateTimeOffset`, `String`, `Binary`, or `Guid`."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[3090,3106],"source":"**Return Value**"},{"content":"An <ph id=\"ph1\">`Int32`</ph>.","pos":[3119,3130],"source":"An `Int32`."},{"content":"One (1) if the input expression is a valid date.","pos":[3131,3179]},{"content":"Zero (0) otherwise.","pos":[3180,3199]},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[3212,3223],"source":"**Example**"},{"content":"Creates a unique value of type Guid.","pos":[3278,3314]},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[3327,3343],"source":"**Return Value**"},{"content":"A <ph id=\"ph1\">`Guid`</ph>.","pos":[3356,3365],"source":"A `Guid`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[3378,3389],"source":"**Example**"},{"pos":[3426,3447],"content":"<ph id=\"ph1\">`USER_NAME(`</ph> <ph id=\"ph2\">`id`</ph> <ph id=\"ph3\">`)`</ph>","source":"`USER_NAME(` `id` `)`"},{"content":"Returns a database user name from a specified identification number.","pos":[3448,3516]},{"content":"<bpt id=\"p1\">**</bpt>Arguments<ept id=\"p1\">**</ept>","pos":[3529,3542],"source":"**Arguments**"},{"content":"<ph id=\"ph1\">`expression`</ph>: An <ph id=\"ph2\">`Int32`</ph> identification number associated with a database user.","pos":[3555,3634],"source":"`expression`: An `Int32` identification number associated with a database user."},{"content":"<bpt id=\"p1\">**</bpt>Return Value<ept id=\"p1\">**</ept>","pos":[3647,3663],"source":"**Return Value**"},{"content":"A Unicode <ph id=\"ph1\">`String`</ph>.","pos":[3676,3695],"source":"A Unicode `String`."},{"content":"<bpt id=\"p1\">**</bpt>Example<ept id=\"p1\">**</ept>","pos":[3708,3719],"source":"**Example**"},{"content":"For more information about the string functions that SqlClient supports, see the documentation for the SQL Server version that you specified in the SqlClient provider manifest:","pos":[3764,3940]},{"content":"SQL Server 2000","pos":[3947,3962]},{"content":"SQL Server 2005","pos":[3963,3978]},{"content":"SQL Server 2008","pos":[3979,3994]},{"pos":[4069,4148],"content":"<bpt id=\"p1\">[</bpt>System Functions Transact-SQL)<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=115918)</ept>","source":"[System Functions Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=115918)"},{"pos":[4149,4228],"content":"<bpt id=\"p1\">[</bpt>System Functions Transact-SQL)<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=115917)</ept>","source":"[System Functions Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=115917)"},{"pos":[4229,4309],"content":"<bpt id=\"p1\">[</bpt>System Functions (Transact-SQL)<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=115919)</ept>","source":"[System Functions (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=115919)"},{"pos":[4319,4327],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Entity SQL Language<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md)</ept><ph id=\"ph1\"> </ph>","pos":[4331,4441],"source":"[Entity SQL Language](../../../../../docs/framework/data/adonet/ef/language-reference/entity-sql-language.md) "},{"content":"<bpt id=\"p1\">[</bpt>SqlClient for Entity Framework Functions<ept id=\"p1\">](../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)</ept>","pos":[4445,4563],"source":"[SqlClient for Entity Framework Functions](../../../../../docs/framework/data/adonet/ef/sqlclient-for-ef-functions.md)"}]}