<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b0896517ad6b49987bfeb517519b6f5ddcce86d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\xaml-services\x-fieldmodifier-directive.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3a3a3fad3023b94b16d08740d18ae569d928344</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45a83a0064836c95e2b1f7f6c032bee1ca3e0a7c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>x:FieldModifier Directive | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>x:FieldModifier Directive</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Modifies XAML compilation behavior so that fields for named object references are defined with <ph id="ph1">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> access instead of the <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> default behavior.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XAML Attribute Usage</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>XAML Values</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Public<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The exact string you pass to specify <ph id="ph1">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> versus <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> varies, depending on the code-behind programming language that is used.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If a XAML production uses <ph id="ph1">`x:FieldModifier`</ph> anywhere, the root element of that XAML production must declare an <bpt id="p1">[</bpt>x:Class Directive<ept id="p1">](../../../docs/framework/xaml-services/x-class-directive.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`x:FieldModifier`</ph> is not relevant for declaring the general access level of a class or its members.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It is relevant only for XAML-processing behavior when a particular XAML object that is part of a XAML production is processed, and becomes an object that is potentially accessible in the object graph of an application.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, the field reference for such an object is kept private, which prevents control consumers from modifying the object graph directly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Instead, control consumers are expected to modify the object graph by using standard patterns that are enabled by programming models, such as by obtaining the layout root, the child element collections, the dedicated public properties, and so on.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The value for the <ph id="ph1">`x:FieldModifier`</ph> attribute varies by programming language, and its purpose can vary in specific frameworks.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The string to use depends on how each language implements its <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> and the type converters it returns to define the meanings for <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph>, and whether that language is case sensitive.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)]</ph>, the string to pass to designate <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is <ph id="ph3">`public`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_visualbnet](../../../includes/tla2sharptla-visualbnet-md.md)]</ph>, the string to pass to designate <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is <ph id="ph3">`Public`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_cppcli](../../../includes/tla2sharptla-cppcli-md.md)]</ph>, no targets for XAML currently exist; therefore, the string to pass is undefined.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also specify <ph id="ph1">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> (<ph id="ph2">`internal`</ph> in <ph id="ph3">[!INCLUDE[TLA2#tla_cshrp](../../../includes/tla2sharptla-cshrp-md.md)]</ph>, <ph id="ph4">`Friend`</ph> in <ph id="ph5">[!INCLUDE[TLA2#tla_visualb](../../../includes/tla2sharptla-visualb-md.md)]</ph>) but specifying <ph id="ph6">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is unusual because <ph id="ph7">`NotPublic`</ph> as the behavior is already the default.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Reflection.TypeAttributes?displayProperty=fullName&gt;</ph> is the default behavior because it is infrequent that code outside the assembly that compiled the XAML needs access to a XAML-created element.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>WPF security architecture together with XAML compilation behavior will not declare fields that store element instances as public, unless you specifically set the <ph id="ph1">`x:FieldModifier`</ph> to allow public access.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`x:FieldModifier`</ph> is only relevant for elements with an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](../../../docs/framework/xaml-services/x-name-directive.md)</ept> because that name is used to reference the field after it is public.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>By default, the partial class for the root element is public; however, you can make it nonpublic by using the <bpt id="p1">[</bpt>x:ClassModifier Directive<ept id="p1">](../../../docs/framework/xaml-services/x-classmodifier-directive.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>x:ClassModifier Directive<ept id="p1">](../../../docs/framework/xaml-services/x-classmodifier-directive.md)</ept> also affects the access level of the instance of the root element class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can put both <ph id="ph1">`x:Name`</ph> and <ph id="ph2">`x:FieldModifier`</ph> on the root element, but this only makes a public field copy of the root element, with the true root element class access level still controlled by <bpt id="p1">[</bpt>x:ClassModifier Directive<ept id="p1">](../../../docs/framework/xaml-services/x-classmodifier-directive.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XAML and Custom Classes for WPF<ept id="p1">](../../../docs/framework/wpf/advanced/xaml-and-custom-classes-for-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Code-Behind and XAML in WPF<ept id="p1">](../../../docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>x:Name Directive<ept id="p1">](../../../docs/framework/xaml-services/x-name-directive.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Building a WPF Application (WPF)<ept id="p1">](../../../docs/framework/wpf/app-development/building-a-wpf-application-wpf.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>x:ClassModifier Directive<ept id="p1">](../../../docs/framework/xaml-services/x-classmodifier-directive.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>