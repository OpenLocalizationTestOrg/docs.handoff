{"content":"---\ntitle: \"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 5792a0eb-94ee-440d-b601-58cca8c0ee0b\n---\n# How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)\nOne way to populate an XML tree is to use <xref:System.Xml.Linq.XContainer.CreateWriter%2A> to create an <xref:System.Xml.XmlWriter>, and then write to the <xref:System.Xml.XmlWriter>. The XML tree is populated with all nodes that are written to the <xref:System.Xml.XmlWriter>.  \n  \n You would typically use this method when you use [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] with another class that expects to write to an <xref:System.Xml.XmlWriter>, such as <xref:System.Xml.Xsl.XslCompiledTransform>.  \n  \n## Example  \n One possible use for <xref:System.Xml.Linq.XContainer.CreateWriter%2A> is when invoking an XSLT transformation. This example creates an XML tree, creates an <xref:System.Xml.XmlReader> from the XML tree, creates a new document, and then creates an <xref:System.Xml.XmlWriter> to write into the new document. It then invokes the XSLT transformation, passing in <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter>. After the transformation successfully completes, the new XML tree is populated with the results of the transformation.  \n  \n```vb  \nDim xslMarkup As XDocument = _  \n    <?xml version='1.0'?>   \n    <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  \n        <xsl:template match='/Parent'>  \n            <Root>  \n                <C1>  \n                    <xsl:value-of select='Child1'/>  \n                </C1>  \n                <C2>  \n                    <xsl:value-of select='Child2'/>  \n                </C2>  \n            </Root>  \n        </xsl:template>  \n    </xsl:stylesheet>  \n  \nDim xmlTree As XDocument = _  \n    <?xml version='1.0'?>  \n    <Parent>  \n        <Child1>Child1 data</Child1>  \n        <Child2>Child2 data</Child2>  \n    </Parent>  \n  \nDim newTree As XDocument = New XDocument()  \nUsing writer As XmlWriter = newTree.CreateWriter()  \n    ' Load the style sheet.  \n    Dim xslt As XslCompiledTransform = New XslCompiledTransform()  \n    xslt.Load(xslMarkup.CreateReader())  \n  \n    ' Execute the transformation and output the results to a writer.  \n    xslt.Transform(xmlTree.CreateReader(), writer)  \nEnd Using  \n  \nConsole.WriteLine(newTree)  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root>  \n  <C1>Child1 data</C1>  \n  <C2>Child2 data</C2>  \n</Root>  \n```  \n  \n## See also\n\n- <xref:System.Xml.Linq.XContainer.CreateWriter%2A>\n- <xref:System.Xml.XmlWriter>\n- <xref:System.Xml.Xsl.XslCompiledTransform>\n- [Creating XML Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)\n","nodes":[{"pos":[4,157],"embed":true,"restype":"x-metadata","content":"title: \"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: 5792a0eb-94ee-440d-b601-58cca8c0ee0b","nodes":[{"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)","nodes":[{"pos":[0,75],"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)","pos":[0,75]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[164,239],"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)","linkify":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Populate an XML Tree with an XmlWriter (LINQ to XML) (Visual Basic)","pos":[0,75]}]},{"content":"One way to populate an XML tree is to use <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.CreateWriter%2A&gt;</ph> to create an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, and then write to the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[240,424],"source":"One way to populate an XML tree is to use <xref:System.Xml.Linq.XContainer.CreateWriter%2A> to create an <xref:System.Xml.XmlWriter>, and then write to the <xref:System.Xml.XmlWriter>."},{"content":"The XML tree is populated with all nodes that are written to the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[425,518],"source":" The XML tree is populated with all nodes that are written to the <xref:System.Xml.XmlWriter>."},{"pos":[525,755],"content":"You would typically use this method when you use <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> with another class that expects to write to an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, such as <ph id=\"ph3\">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph>.","source":"You would typically use this method when you use [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] with another class that expects to write to an <xref:System.Xml.XmlWriter>, such as <xref:System.Xml.Xsl.XslCompiledTransform>."},{"pos":[764,771],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"One possible use for <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.CreateWriter%2A&gt;</ph> is when invoking an XSLT transformation.","pos":[775,886],"source":"One possible use for <xref:System.Xml.Linq.XContainer.CreateWriter%2A> is when invoking an XSLT transformation."},{"content":"This example creates an XML tree, creates an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> from the XML tree, creates a new document, and then creates an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> to write into the new document.","pos":[887,1082],"source":" This example creates an XML tree, creates an <xref:System.Xml.XmlReader> from the XML tree, creates a new document, and then creates an <xref:System.Xml.XmlWriter> to write into the new document."},{"content":"It then invokes the XSLT transformation, passing in <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[1083,1195],"source":" It then invokes the XSLT transformation, passing in <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter>."},{"content":"After the transformation successfully completes, the new XML tree is populated with the results of the transformation.","pos":[1196,1314]},{"content":"This example produces the following output:","pos":[2405,2448]},{"pos":[2544,2552],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2683,2798],"content":"<bpt id=\"p1\">[</bpt>Creating XML Trees (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)</ept>","source":"[Creating XML Trees (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)"}]}