{"content":"---\ntitle: \"Marshaling Data with COM Interop | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"COM interop, data marshaling\"\n  - \"marshaling data, COM interop\"\nms.assetid: 0bcdd7bf-5026-43eb-b08b-f03f90db9df9\ncaps.latest.revision: 12\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# Marshaling Data with COM Interop\nCOM interop provides support for both using COM objects from managed code and exposing managed objects to COM. Support for marshaling data to and from COM is extensive and almost always provides the correct marshaling behavior.  \n  \n The [!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)] includes the following COM interop tools:  \n  \n-   [Type Library Importer (Tlbimp.exe)](../../../docs/framework/tools/tlbimp-exe-type-library-importer.md), which converts a COM type library to an interop assembly. From this assembly, the interop marshaling service generates wrappers that perform data marshaling between managed and unmanaged memory.  \n  \n-   [Type Library Exporter (Tlbexp.exe)](../../../docs/framework/tools/tlbexp-exe-type-library-exporter.md), which produces a COM type library from an assembly and generates a wrapper that performs marshaling during method calls.  \n  \n This section describes the processes for customizing interop wrappers when you can (or must) supply the marshaler with additional type information.  \n  \n## In This Section  \n [COM Data Types](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061)  \n Provides corresponding managed and unmanaged data types.  \n  \n [Customizing COM Callable Wrappers](http://msdn.microsoft.com/en-us/825177d3-4b2c-4723-82be-ce6ca2c34ace)  \n Describes how to explicitly marshal data types using the **MarshalAsAttribute** attribute at design time.  \n  \n [Customizing Runtime Callable Wrappers](http://msdn.microsoft.com/en-us/4652beaf-77d0-4f37-9687-ca193288c0be)  \n Describes how to adjust the marshaling behavior of types in an interop assembly and how to define COM types manually.  \n  \n [How to: Migrate Managed-Code DCOM to WCF](../../../docs/framework/interop/how-to-migrate-managed-code-dcom-to-wcf.md)  \n Described how to migrate managed DCOM code to WCF for the most secure solution.  \n  \n## Related Sections  \n [Advanced COM Interoperability](http://msdn.microsoft.com/en-us/3ada36e5-2390-4d70-b490-6ad8de92f2fb)  \n Provides links to more information about incorporating COM components into your .NET Framework application.  \n  \n [Assembly to Type Library Conversion Summary](http://msdn.microsoft.com/en-us/3a37eefb-a76c-4000-9080-7dbbf66a4896)  \n Describes the assembly to type library export conversion process.  \n  \n [Type Library to Assembly Conversion Summary](http://msdn.microsoft.com/en-us/bf3f90c5-4770-4ab8-895c-3ba1055cc958)  \n Describes the type library to assembly import conversion process.  \n  \n [Interoperating Using Generic Types](http://msdn.microsoft.com/en-us/26b88e03-085b-4b53-94ba-a5a9c709ce58)  \n Describes which actions are supported when using generic types for COM interoperability.","nodes":[{"pos":[12,61],"content":"Marshaling Data with COM Interop | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Marshaling Data with COM Interop | Microsoft Docs","pos":[0,49]}]},{"pos":[514,546],"content":"Marshaling Data with COM Interop","linkify":"Marshaling Data with COM Interop","nodes":[{"content":"Marshaling Data with COM Interop","pos":[0,32]}]},{"content":"COM interop provides support for both using COM objects from managed code and exposing managed objects to COM.","pos":[547,657]},{"content":"Support for marshaling data to and from COM is extensive and almost always provides the correct marshaling behavior.","pos":[658,774]},{"pos":[781,885],"content":"The <ph id=\"ph1\">[!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)]</ph> includes the following COM interop tools:","source":"The [!INCLUDE[winsdklong](../../../includes/winsdklong-md.md)] includes the following COM interop tools:"},{"content":"<bpt id=\"p1\">[</bpt>Type Library Importer (Tlbimp.exe)<ept id=\"p1\">](../../../docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept>, which converts a COM type library to an interop assembly.","pos":[895,1057],"source":"[Type Library Importer (Tlbimp.exe)](../../../docs/framework/tools/tlbimp-exe-type-library-importer.md), which converts a COM type library to an interop assembly."},{"content":"From this assembly, the interop marshaling service generates wrappers that perform data marshaling between managed and unmanaged memory.","pos":[1058,1194]},{"pos":[1204,1429],"content":"<bpt id=\"p1\">[</bpt>Type Library Exporter (Tlbexp.exe)<ept id=\"p1\">](../../../docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept>, which produces a COM type library from an assembly and generates a wrapper that performs marshaling during method calls.","source":"[Type Library Exporter (Tlbexp.exe)](../../../docs/framework/tools/tlbexp-exe-type-library-exporter.md), which produces a COM type library from an assembly and generates a wrapper that performs marshaling during method calls."},{"content":"This section describes the processes for customizing interop wrappers when you can (or must) supply the marshaler with additional type information.","pos":[1436,1583]},{"pos":[1592,1607],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>COM Data Types<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061)</ept>","pos":[1611,1697],"source":"[COM Data Types](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061)"},{"content":"Provides corresponding managed and unmanaged data types.","pos":[1701,1757]},{"content":"<bpt id=\"p1\">[</bpt>Customizing COM Callable Wrappers<ept id=\"p1\">](http://msdn.microsoft.com/en-us/825177d3-4b2c-4723-82be-ce6ca2c34ace)</ept>","pos":[1764,1869],"source":"[Customizing COM Callable Wrappers](http://msdn.microsoft.com/en-us/825177d3-4b2c-4723-82be-ce6ca2c34ace)"},{"content":"Describes how to explicitly marshal data types using the <bpt id=\"p1\">**</bpt>MarshalAsAttribute<ept id=\"p1\">**</ept> attribute at design time.","pos":[1873,1978],"source":" Describes how to explicitly marshal data types using the **MarshalAsAttribute** attribute at design time."},{"content":"<bpt id=\"p1\">[</bpt>Customizing Runtime Callable Wrappers<ept id=\"p1\">](http://msdn.microsoft.com/en-us/4652beaf-77d0-4f37-9687-ca193288c0be)</ept>","pos":[1985,2094],"source":"[Customizing Runtime Callable Wrappers](http://msdn.microsoft.com/en-us/4652beaf-77d0-4f37-9687-ca193288c0be)"},{"content":"Describes how to adjust the marshaling behavior of types in an interop assembly and how to define COM types manually.","pos":[2098,2215]},{"content":"<bpt id=\"p1\">[</bpt>How to: Migrate Managed-Code DCOM to WCF<ept id=\"p1\">](../../../docs/framework/interop/how-to-migrate-managed-code-dcom-to-wcf.md)</ept>","pos":[2222,2340],"source":"[How to: Migrate Managed-Code DCOM to WCF](../../../docs/framework/interop/how-to-migrate-managed-code-dcom-to-wcf.md)"},{"content":"Described how to migrate managed DCOM code to WCF for the most secure solution.","pos":[2344,2423]},{"pos":[2432,2448],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Advanced COM Interoperability<ept id=\"p1\">](http://msdn.microsoft.com/en-us/3ada36e5-2390-4d70-b490-6ad8de92f2fb)</ept>","pos":[2452,2553],"source":"[Advanced COM Interoperability](http://msdn.microsoft.com/en-us/3ada36e5-2390-4d70-b490-6ad8de92f2fb)"},{"content":"Provides links to more information about incorporating COM components into your .NET Framework application.","pos":[2557,2664]},{"content":"<bpt id=\"p1\">[</bpt>Assembly to Type Library Conversion Summary<ept id=\"p1\">](http://msdn.microsoft.com/en-us/3a37eefb-a76c-4000-9080-7dbbf66a4896)</ept>","pos":[2671,2786],"source":"[Assembly to Type Library Conversion Summary](http://msdn.microsoft.com/en-us/3a37eefb-a76c-4000-9080-7dbbf66a4896)"},{"content":"Describes the assembly to type library export conversion process.","pos":[2790,2855]},{"content":"<bpt id=\"p1\">[</bpt>Type Library to Assembly Conversion Summary<ept id=\"p1\">](http://msdn.microsoft.com/en-us/bf3f90c5-4770-4ab8-895c-3ba1055cc958)</ept>","pos":[2862,2977],"source":"[Type Library to Assembly Conversion Summary](http://msdn.microsoft.com/en-us/bf3f90c5-4770-4ab8-895c-3ba1055cc958)"},{"content":"Describes the type library to assembly import conversion process.","pos":[2981,3046]},{"content":"<bpt id=\"p1\">[</bpt>Interoperating Using Generic Types<ept id=\"p1\">](http://msdn.microsoft.com/en-us/26b88e03-085b-4b53-94ba-a5a9c709ce58)</ept>","pos":[3053,3159],"source":"[Interoperating Using Generic Types](http://msdn.microsoft.com/en-us/26b88e03-085b-4b53-94ba-a5a9c709ce58)"},{"content":"Describes which actions are supported when using generic types for COM interoperability.","pos":[3163,3251]}]}