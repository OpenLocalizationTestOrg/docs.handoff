{"content":"---\ntitle: \"How to: Change the Namespace for an Entire XML Tree (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 1837324b-5cb5-4fa8-95b9-3071efa0f913\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\n---\n# How to: Change the Namespace for an Entire XML Tree (Visual Basic)\nYou sometimes have to programmatically change the namespace for an element or an attribute. LINQ to XML makes this easy. The <xref:System.Xml.Linq.XElement.Name%2A?displayProperty=fullName> property can be set. The <xref:System.Xml.Linq.XAttribute.Name%2A?displayProperty=fullName> property cannot be set, but you can easily copy the attributes into a <xref:System.Collections.Generic.List%601?displayProperty=fullName>, remove the existing attributes, and then add new attributes that are in the new desired namespace.  \n  \n For more information, see [Working with XML Namespaces (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md).  \n  \n## Example  \n The following code creates two XML trees in no namespace. It then changes the namespace of each of the trees, and combines them into a single tree.  \n  \n```vb  \nDim tree1 As XElement = _  \n    <Data>  \n        <Child MyAttr=\"content\">content</Child>  \n    </Data>  \nDim tree2 As XElement = _  \n    <Data>  \n        <Child MyAttr=\"content\">content</Child>  \n    </Data>  \nDim aw As XNamespace = \"http://www.adventure-works.com\"  \nDim ad As XNamespace = \"http://www.adatum.com\"  \n' change the namespace of every element and attribute in the first tree  \nFor Each el As XElement In tree1.DescendantsAndSelf  \n    el.Name = aw.GetName(el.Name.LocalName)  \n    Dim atList As List(Of XAttribute) = el.Attributes().ToList()  \n    el.Attributes().Remove()  \n    For Each at As XAttribute In atList  \n        el.Add(New XAttribute(aw.GetName(at.Name.LocalName), at.Value))  \n    Next  \nNext  \n' change the namespace of every element and attribute in the second tree  \nFor Each el As XElement In tree2.DescendantsAndSelf()  \n    el.Name = ad.GetName(el.Name.LocalName)  \n    Dim atList As List(Of XAttribute) = el.Attributes().ToList()  \n    el.Attributes().Remove()  \n    For Each at As XAttribute In atList  \n        el.Add(New XAttribute(ad.GetName(at.Name.LocalName), at.Value))  \n    Next  \nNext  \n' add attribute namespaces so that the tree will be serialized with  \n' the aw and ad namespace prefixes  \ntree1.Add( _  \n    New XAttribute(XNamespace.Xmlns + \"aw\", \"http://www.adventure-works.com\") _  \n)  \ntree2.Add( _  \n    New XAttribute(XNamespace.Xmlns + \"ad\", \"http://www.adatum.com\") _  \n)  \n' create a new composite tree  \nDim root As XElement = _  \n    <Root>  \n        <%= tree1 %>  \n        <%= tree2 %>  \n    </Root>  \nConsole.WriteLine(root)  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n<Root>  \n  <aw:Data xmlns:aw=\"http://www.adventure-works.com\">  \n    <aw:Child aw:MyAttr=\"content\">content</aw:Child>  \n  </aw:Data>  \n  <ad:Data xmlns:ad=\"http://www.adatum.com\">  \n    <ad:Child ad:MyAttr=\"content\">content</ad:Child>  \n  </ad:Data>  \n</Root>  \n```  \n  \n## See Also  \n [Modifying XML Trees (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)","nodes":[{"pos":[12,95],"content":"How to: Change the Namespace for an Entire XML Tree (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"How to: Change the Namespace for an Entire XML Tree (Visual Basic) | Microsoft Docs","pos":[0,83]}]},{"pos":[402,468],"content":"How to: Change the Namespace for an Entire XML Tree (Visual Basic)","linkify":"How to: Change the Namespace for an Entire XML Tree (Visual Basic)","nodes":[{"content":"How to: Change the Namespace for an Entire XML Tree (Visual Basic)","pos":[0,66]}]},{"content":"You sometimes have to programmatically change the namespace for an element or an attribute.","pos":[469,560]},{"content":"LINQ to XML makes this easy.","pos":[561,589]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Name%2A?displayProperty=fullName&gt;</ph> property can be set.","pos":[590,679],"source":" The <xref:System.Xml.Linq.XElement.Name%2A?displayProperty=fullName> property can be set."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute.Name%2A?displayProperty=fullName&gt;</ph> property cannot be set, but you can easily copy the attributes into a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.List%601?displayProperty=fullName&gt;</ph>, remove the existing attributes, and then add new attributes that are in the new desired namespace.","pos":[680,988],"source":" The <xref:System.Xml.Linq.XAttribute.Name%2A?displayProperty=fullName> property cannot be set, but you can easily copy the attributes into a <xref:System.Collections.Generic.List%601?displayProperty=fullName>, remove the existing attributes, and then add new attributes that are in the new desired namespace."},{"pos":[995,1155],"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with XML Namespaces (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.","source":"For more information, see [Working with XML Namespaces (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)."},{"pos":[1164,1171],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code creates two XML trees in no namespace.","pos":[1175,1232]},{"content":"It then changes the namespace of each of the trees, and combines them into a single tree.","pos":[1233,1322]},{"content":"This example produces the following output:","pos":[2936,2979]},{"pos":[3268,3276],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3280,3423],"content":"<bpt id=\"p1\">[</bpt>Modifying XML Trees (LINQ to XML) (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)</ept>","source":"[Modifying XML Trees (LINQ to XML) (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)"}]}