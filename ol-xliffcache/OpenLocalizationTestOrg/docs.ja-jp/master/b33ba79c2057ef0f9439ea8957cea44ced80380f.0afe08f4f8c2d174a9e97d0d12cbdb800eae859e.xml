{"content":"---\ntitle: \"Code Access Security Policy Compatibility and Migration | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\n  - \"CSharp\"\n  - \"C++\"\n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"policy migration, compatibility\"\n  - \"CLR poliicy migration\"\nms.assetid: 19cb4d39-e38a-4262-b507-458915303115\ncaps.latest.revision: 15\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Code Access Security Policy Compatibility and Migration\n[!INCLUDE[net_security_note](../../../includes/net-security-note-md.md)]  \n  \n The policy portion of code access security (CAS) has been made obsolete in the [!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]. As a result, you may encounter compilation warnings and runtime exceptions if you call the obsolete policy types and members [explicitly](#explicit_use) or [implicitly](#implicit_use) (through other types and members).  \n  \n You can avoid the warnings and errors by either:  \n  \n-   [Migrating](#migration) to the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] replacements for the obsolete calls.  \n  \n     \\- or -  \n  \n-   Using the [<NetFx40_LegacySecurityPolicy> configuration element](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) to opt into the legacy CAS policy behavior.  \n  \n This topic contains the following sections:  \n  \n-   [Explicit Use](#explicit_use)  \n  \n-   [Implicit Use](#implicit_use)  \n  \n-   [Errors and Warnings](#errors_and_warnings)  \n  \n-   [Migration: Replacement for Obsolete Calls](#migration)  \n  \n-   [Compatibility: Using the CAS Policy Legacy Option](#compatibility)  \n  \n<a name=\"explicit_use\"></a>   \n## Explicit Use  \n Members that directly manipulate security policy or require CAS policy to sandbox are obsolete and will produce errors by default.  \n  \n Examples of these are:  \n  \n-   <xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=fullName>  \n  \n-   <xref:System.Security.HostSecurityManager.DomainPolicy%2A?displayProperty=fullName>  \n  \n-   <xref:System.Security.Policy.PolicyLevel.CreateAppDomainLevel%2A?displayProperty=fullName>  \n  \n-   <xref:System.Security.SecurityManager.LoadPolicyLevelFromString%2A?displayProperty=fullName>  \n  \n-   <xref:System.Security.SecurityManager.LoadPolicyLevelFromFile%2A?displayProperty=fullName>  \n  \n-   <xref:System.Security.SecurityManager.ResolvePolicy%2A?displayProperty=fullName>  \n  \n-   <xref:System.Security.SecurityManager.ResolveSystemPolicy%2A?displayProperty=fullName>  \n  \n-   <xref:System.Security.SecurityManager.ResolvePolicyGroups%2A?displayProperty=fullName>  \n  \n-   <xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName>  \n  \n-   <xref:System.Security.SecurityManager.SavePolicy%2A?displayProperty=fullName>  \n  \n<a name=\"implicit_use\"></a>   \n## Implicit Use  \n Several assembly loading overloads produce errors because of their implicit use of CAS policy. These overloads take an <xref:System.Security.Policy.Evidence> parameter that is used to resolve CAS policy and provide a permission grant set for an assembly.  \n  \n Here are some examples. The obsolete overloads are those that take <xref:System.Security.Policy.Evidence> as a parameter:  \n  \n-   <xref:System.Activator.CreateInstanceFrom%2A?displayProperty=fullName>  \n  \n-   <xref:System.AppDomain.CreateInstanceFrom%2A?displayProperty=fullName>  \n  \n-   <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>  \n  \n-   <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName>  \n  \n-   <xref:System.AppDomain.ExecuteAssemblyByName%2A?displayProperty=fullName>  \n  \n-   <xref:System.AppDomain.Load%2A?displayProperty=fullName>  \n  \n-   <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName>  \n  \n-   <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName>  \n  \n-   <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName>  \n  \n<a name=\"errors_and_warnings\"></a>   \n## Errors and Warnings  \n The obsolete types and members produce the following error messages when they are used. Note that the <xref:System.Security.Policy.Evidence?displayProperty=fullName> type itself is not obsolete.  \n  \n Compile-time warning:  \n  \n `warning CS0618: '<API Name>' is obsolete: 'This method is obsolete and will be removed in a future release of the .NET Framework. Please use <suggested alternate API>. See <link> for more information.'`  \n  \n Run-time exception:  \n  \n <xref:System.NotSupportedException>: `This method uses CAS policy, which has been obsoleted by the .NET Framework. In order to enable CAS policy for compatibility reasons, please use the <NetFx40_LegacySecurityPolicy> configuration switch. Please see <link> for more information.`  \n  \n<a name=\"migration\"></a>   \n## Migration: Replacement for Obsolete Calls  \n  \n### Determining an Assembly’s Trust Level  \n CAS policy is often used to determine an assembly’s or application domain’s permission grant set or trust level. The [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] exposes the following useful properties that do not need to resolve security policy:  \n  \n-   <xref:System.Reflection.Assembly.PermissionSet%2A?displayProperty=fullName>  \n  \n-   <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=fullName>  \n  \n-   <xref:System.AppDomain.PermissionSet%2A?displayProperty=fullName>  \n  \n-   <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=fullName>  \n  \n### Application Domain Sandboxing  \n The <xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=fullName> method is typically used for sandboxing the assemblies in an application domain. The [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] exposes members that do not have to use <xref:System.Security.Policy.PolicyLevel> for this purpose. For more information, see [How to: Run Partially Trusted Code in a Sandbox](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  \n  \n### Determining a Safe or Reasonable Permission Set for Partially Trusted Code  \n Hosts often need to determine the permissions that are appropriate for sandboxing hosted code. Before the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)], CAS policy provided a way to do this with the <xref:System.Security.SecurityManager.ResolvePolicy%2A?displayProperty=fullName> method. As a replacement, [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] provides the <xref:System.Security.SecurityManager.GetStandardSandbox%2A?displayProperty=fullName> method, which returns a safe, standard permission set for the provided evidence.  \n  \n### Non-Sandboxing Scenarios: Overloads for Assembly Loads  \n The reason for using an assembly load overload might be to use parameters that are not otherwise available, instead of sandboxing the assembly. Starting with the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)], assembly load overloads that do not require a <xref:System.Security.Policy.Evidence?displayProperty=fullName> object as a parameter, for example, <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.String%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Configuration.Assemblies.AssemblyHashAlgorithm%29?displayProperty=fullName>, enable this scenario.  \n  \n If you want to sandbox an assembly, use the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=fullName> overload.  \n  \n<a name=\"compatibility\"></a>   \n## Compatibility: Using the CAS Policy Legacy Option  \n The [<NetFx40_LegacySecurityPolicy> configuration element](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) lets you specify that a process or library uses legacy CAS policy. When you enable this element, the policy and evidence overloads will work as they did in previous versions of the framework.  \n  \n> [!NOTE]\n>  CAS policy behavior is specified on a runtime version basis, so modifying CAS policy for one runtime version does not affect the CAS policy of another version.  \n  \n```  \n<configuration>  \n   <runtime>  \n      <NetFx40_LegacySecurityPolicy enabled=\"true\"/>  \n   </runtime>  \n</configuration>  \n```  \n  \n## See Also  \n [How to: Run Partially Trusted Code in a Sandbox](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)","nodes":[{"pos":[12,84],"content":"Code Access Security Policy Compatibility and Migration | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Code Access Security Policy Compatibility and Migration | Microsoft Docs","pos":[0,72]}]},{"pos":[530,585],"content":"Code Access Security Policy Compatibility and Migration","linkify":"Code Access Security Policy Compatibility and Migration","nodes":[{"content":"Code Access Security Policy Compatibility and Migration","pos":[0,55]}]},{"content":"The policy portion of code access security (CAS) has been made obsolete in the <ph id=\"ph1\">[!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]</ph>.","pos":[665,807],"source":"The policy portion of code access security (CAS) has been made obsolete in the [!INCLUDE[net_v40_long](../../../includes/net-v40-long-md.md)]."},{"content":"As a result, you may encounter compilation warnings and runtime exceptions if you call the obsolete policy types and members <bpt id=\"p1\">[</bpt>explicitly<ept id=\"p1\">](#explicit_use)</ept> or <bpt id=\"p2\">[</bpt>implicitly<ept id=\"p2\">](#implicit_use)</ept> (through other types and members).","pos":[808,1026],"source":" As a result, you may encounter compilation warnings and runtime exceptions if you call the obsolete policy types and members [explicitly](#explicit_use) or [implicitly](#implicit_use) (through other types and members)."},{"content":"You can avoid the warnings and errors by either:","pos":[1033,1081]},{"pos":[1091,1223],"content":"<bpt id=\"p1\">[</bpt>Migrating<ept id=\"p1\">](#migration)</ept> to the <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> replacements for the obsolete calls.","source":"[Migrating](#migration) to the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] replacements for the obsolete calls."},{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[1234,1241],"source":"\\- or -"},{"pos":[1251,1459],"content":"Using the <bpt id=\"p1\">[</bpt>&lt;NetFx40_LegacySecurityPolicy&gt; configuration element<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept> to opt into the legacy CAS policy behavior.","source":"Using the [<NetFx40_LegacySecurityPolicy> configuration element](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) to opt into the legacy CAS policy behavior."},{"content":"This topic contains the following sections:","pos":[1466,1509]},{"pos":[1519,1548],"content":"<bpt id=\"p1\">[</bpt>Explicit Use<ept id=\"p1\">](#explicit_use)</ept>","source":"[Explicit Use](#explicit_use)"},{"pos":[1558,1587],"content":"<bpt id=\"p1\">[</bpt>Implicit Use<ept id=\"p1\">](#implicit_use)</ept>","source":"[Implicit Use](#implicit_use)"},{"pos":[1597,1640],"content":"<bpt id=\"p1\">[</bpt>Errors and Warnings<ept id=\"p1\">](#errors_and_warnings)</ept>","source":"[Errors and Warnings](#errors_and_warnings)"},{"pos":[1650,1705],"content":"<bpt id=\"p1\">[</bpt>Migration: Replacement for Obsolete Calls<ept id=\"p1\">](#migration)</ept>","source":"[Migration: Replacement for Obsolete Calls](#migration)"},{"pos":[1715,1782],"content":"<bpt id=\"p1\">[</bpt>Compatibility: Using the CAS Policy Legacy Option<ept id=\"p1\">](#compatibility)</ept>","source":"[Compatibility: Using the CAS Policy Legacy Option](#compatibility)"},{"pos":[1822,1834],"content":"Explicit Use","linkify":"Explicit Use","nodes":[{"content":"Explicit Use","pos":[0,12]}]},{"content":"Members that directly manipulate security policy or require CAS policy to sandbox are obsolete and will produce errors by default.","pos":[1838,1968]},{"content":"Examples of these are:","pos":[1975,1997]},{"pos":[2973,2985],"content":"Implicit Use","linkify":"Implicit Use","nodes":[{"content":"Implicit Use","pos":[0,12]}]},{"content":"Several assembly loading overloads produce errors because of their implicit use of CAS policy.","pos":[2989,3083]},{"content":"These overloads take an <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence&gt;</ph> parameter that is used to resolve CAS policy and provide a permission grant set for an assembly.","pos":[3084,3243],"source":" These overloads take an <xref:System.Security.Policy.Evidence> parameter that is used to resolve CAS policy and provide a permission grant set for an assembly."},{"content":"Here are some examples.","pos":[3250,3273]},{"content":"The obsolete overloads are those that take <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence&gt;</ph> as a parameter:","pos":[3274,3371],"source":" The obsolete overloads are those that take <xref:System.Security.Policy.Evidence> as a parameter:"},{"pos":[4131,4150],"content":"Errors and Warnings","linkify":"Errors and Warnings","nodes":[{"content":"Errors and Warnings","pos":[0,19]}]},{"content":"The obsolete types and members produce the following error messages when they are used.","pos":[4154,4241]},{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence?displayProperty=fullName&gt;</ph> type itself is not obsolete.","pos":[4242,4348],"source":" Note that the <xref:System.Security.Policy.Evidence?displayProperty=fullName> type itself is not obsolete."},{"content":"Compile-time warning:","pos":[4355,4376]},{"content":"Run-time exception:","pos":[4593,4612]},{"pos":[4619,4899],"content":"<ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph>: <ph id=\"ph2\">`This method uses CAS policy, which has been obsoleted by the .NET Framework. In order to enable CAS policy for compatibility reasons, please use the &lt;NetFx40_LegacySecurityPolicy&gt; configuration switch. Please see &lt;link&gt; for more information.`</ph>","source":"<xref:System.NotSupportedException>: `This method uses CAS policy, which has been obsoleted by the .NET Framework. In order to enable CAS policy for compatibility reasons, please use the <NetFx40_LegacySecurityPolicy> configuration switch. Please see <link> for more information.`"},{"pos":[4936,4977],"content":"Migration: Replacement for Obsolete Calls","linkify":"Migration: Replacement for Obsolete Calls","nodes":[{"content":"Migration: Replacement for Obsolete Calls","pos":[0,41]}]},{"pos":[4987,5024],"content":"Determining an Assembly’s Trust Level","linkify":"Determining an Assembly’s Trust Level","nodes":[{"content":"Determining an Assembly’s Trust Level","pos":[0,37]}]},{"content":"CAS policy is often used to determine an assembly’s or application domain’s permission grant set or trust level.","pos":[5028,5140]},{"content":"The <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> exposes the following useful properties that do not need to resolve security policy:","pos":[5141,5294],"source":" The [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] exposes the following useful properties that do not need to resolve security policy:"},{"pos":[5626,5655],"content":"Application Domain Sandboxing","linkify":"Application Domain Sandboxing","nodes":[{"content":"Application Domain Sandboxing","pos":[0,29]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=fullName&gt;</ph> method is typically used for sandboxing the assemblies in an application domain.","pos":[5659,5814],"source":"The <xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=fullName> method is typically used for sandboxing the assemblies in an application domain."},{"content":"The <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> exposes members that do not have to use <ph id=\"ph2\">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> for this purpose.","pos":[5815,5983],"source":" The [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] exposes members that do not have to use <xref:System.Security.Policy.PolicyLevel> for this purpose."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Run Partially Trusted Code in a Sandbox<ept id=\"p1\">](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)</ept>.","pos":[5984,6140],"source":" For more information, see [How to: Run Partially Trusted Code in a Sandbox](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)."},{"pos":[6150,6224],"content":"Determining a Safe or Reasonable Permission Set for Partially Trusted Code","linkify":"Determining a Safe or Reasonable Permission Set for Partially Trusted Code","nodes":[{"content":"Determining a Safe or Reasonable Permission Set for Partially Trusted Code","pos":[0,74]}]},{"content":"Hosts often need to determine the permissions that are appropriate for sandboxing hosted code.","pos":[6228,6322]},{"content":"Before the <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, CAS policy provided a way to do this with the <ph id=\"ph2\">&lt;xref:System.Security.SecurityManager.ResolvePolicy%2A?displayProperty=fullName&gt;</ph> method.","pos":[6323,6534],"source":" Before the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)], CAS policy provided a way to do this with the <xref:System.Security.SecurityManager.ResolvePolicy%2A?displayProperty=fullName> method."},{"content":"As a replacement, <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph> provides the <ph id=\"ph2\">&lt;xref:System.Security.SecurityManager.GetStandardSandbox%2A?displayProperty=fullName&gt;</ph> method, which returns a safe, standard permission set for the provided evidence.","pos":[6535,6797],"source":" As a replacement, [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)] provides the <xref:System.Security.SecurityManager.GetStandardSandbox%2A?displayProperty=fullName> method, which returns a safe, standard permission set for the provided evidence."},{"pos":[6807,6861],"content":"Non-Sandboxing Scenarios: Overloads for Assembly Loads","linkify":"Non-Sandboxing Scenarios: Overloads for Assembly Loads","nodes":[{"content":"Non-Sandboxing Scenarios: Overloads for Assembly Loads","pos":[0,54]}]},{"content":"The reason for using an assembly load overload might be to use parameters that are not otherwise available, instead of sandboxing the assembly.","pos":[6865,7008]},{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)]</ph>, assembly load overloads that do not require a <ph id=\"ph2\">&lt;xref:System.Security.Policy.Evidence?displayProperty=fullName&gt;</ph> object as a parameter, for example, <ph id=\"ph3\">&lt;xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.String%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Configuration.Assemblies.AssemblyHashAlgorithm%29?displayProperty=fullName&gt;</ph>, enable this scenario.","pos":[7009,7443],"source":" Starting with the [!INCLUDE[net_v40_short](../../../includes/net-v40-short-md.md)], assembly load overloads that do not require a <xref:System.Security.Policy.Evidence?displayProperty=fullName> object as a parameter, for example, <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.String%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Configuration.Assemblies.AssemblyHashAlgorithm%29?displayProperty=fullName>, enable this scenario."},{"content":"If you want to sandbox an assembly, use the <ph id=\"ph1\">&lt;xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=fullName&gt;</ph> overload.","pos":[7450,7716],"source":"If you want to sandbox an assembly, use the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=fullName> overload."},{"pos":[7757,7806],"content":"Compatibility: Using the CAS Policy Legacy Option","linkify":"Compatibility: Using the CAS Policy Legacy Option","nodes":[{"content":"Compatibility: Using the CAS Policy Legacy Option","pos":[0,49]}]},{"content":"The <bpt id=\"p1\">[</bpt>&lt;NetFx40_LegacySecurityPolicy&gt; configuration element<ept id=\"p1\">](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept> lets you specify that a process or library uses legacy CAS policy.","pos":[7810,8035],"source":"The [<NetFx40_LegacySecurityPolicy> configuration element](../../../docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) lets you specify that a process or library uses legacy CAS policy."},{"content":"When you enable this element, the policy and evidence overloads will work as they did in previous versions of the framework.","pos":[8036,8160]},{"pos":[8168,8338],"content":"[!NOTE]\n CAS policy behavior is specified on a runtime version basis, so modifying CAS policy for one runtime version does not affect the CAS policy of another version.","leadings":["","> "],"nodes":[{"content":"CAS policy behavior is specified on a runtime version basis, so modifying CAS policy for one runtime version does not affect the CAS policy of another version.","pos":[9,168]}]},{"pos":[8485,8493],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[8497,8626],"content":"<bpt id=\"p1\">[</bpt>How to: Run Partially Trusted Code in a Sandbox<ept id=\"p1\">](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)</ept>","source":"[How to: Run Partially Trusted Code in a Sandbox](../../../docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)"}]}