{"content":"---\ntitle: \"Deferred Execution Example (Visual Basic) | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"VB\"\nms.assetid: 9a22bea1-c755-4aac-800a-fcd9e5107ace\ncaps.latest.revision: 3\nauthor: dotnet-bot\nms.author: dotnetcontent\n\n---\n# Deferred Execution Example (Visual Basic)\nThis topic shows how deferred execution and lazy evaluation affect the execution of your LINQ to XML queries.  \n  \n## Example  \n The following example shows the order of execution when using an extension method that uses deferred execution. The example declares an array of three strings. It then iterates through the collection returned by `ConvertCollectionToUpperCase`.  \n  \n```vb  \nImports System.Runtime.CompilerServices  \n  \nModule Module1  \n  \n    <Extension()>  \n    Private Iterator Function ConvertCollectionToUpperCase(  \n    ByVal source As IEnumerable(Of String)) _  \n    As IEnumerable(Of String)   \n        For Each str As String In source  \n            Console.WriteLine(\"ToUpper: source {0}\", str)   \n            Yield str.ToUpper()  \n        Next  \n    End Function  \n  \n    Sub Main()  \n        Dim stringArray = New String() {\"abc\", \"def\", \"ghi\"}  \n  \n        Dim q = From str In stringArray.ConvertCollectionToUpperCase()  \n                Select str  \n  \n        For Each Str As String In q  \n            Console.WriteLine(\"Main: str {0}\", Str)   \n        Next  \n    End Sub  \n  \nEnd Module  \n```  \n  \n This example produces the following output:  \n  \n```  \nToUpper: source abc  \nMain: str ABC  \nToUpper: source def  \nMain: str DEF  \nToUpper: source ghi  \nMain: str GHI  \n```  \n  \n Notice that when iterating through the collection returned by `ConvertCollectionToUpperCase`, each item is retrieved from the source string array and converted to uppercase before the next item is retrieved from the source string array.  \n  \n You can see that the entire array of strings is not converted to uppercase before each item in the returned collection is processed in the `foreach` loop in `Main`.  \n  \n## See Also  \n [Tutorial: Deferred Execution (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/tutorial-deferred-execution.md)","nodes":[{"pos":[12,70],"content":"Deferred Execution Example (Visual Basic) | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Deferred Execution Example (Visual Basic) | Microsoft Docs","pos":[0,58]}]},{"pos":[377,418],"content":"Deferred Execution Example (Visual Basic)","linkify":"Deferred Execution Example (Visual Basic)","nodes":[{"content":"Deferred Execution Example (Visual Basic)","pos":[0,41]}]},{"content":"This topic shows how deferred execution and lazy evaluation affect the execution of your LINQ to XML queries.","pos":[419,528]},{"pos":[537,544],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the order of execution when using an extension method that uses deferred execution.","pos":[548,659]},{"content":"The example declares an array of three strings.","pos":[660,707]},{"content":"It then iterates through the collection returned by <ph id=\"ph1\">`ConvertCollectionToUpperCase`</ph>.","pos":[708,791],"source":" It then iterates through the collection returned by `ConvertCollectionToUpperCase`."},{"content":"This example produces the following output:","pos":[1544,1587]},{"pos":[1723,1959],"content":"Notice that when iterating through the collection returned by <ph id=\"ph1\">`ConvertCollectionToUpperCase`</ph>, each item is retrieved from the source string array and converted to uppercase before the next item is retrieved from the source string array.","source":"Notice that when iterating through the collection returned by `ConvertCollectionToUpperCase`, each item is retrieved from the source string array and converted to uppercase before the next item is retrieved from the source string array."},{"pos":[1966,2130],"content":"You can see that the entire array of strings is not converted to uppercase before each item in the returned collection is processed in the <ph id=\"ph1\">`foreach`</ph> loop in <ph id=\"ph2\">`Main`</ph>.","source":"You can see that the entire array of strings is not converted to uppercase before each item in the returned collection is processed in the `foreach` loop in `Main`."},{"pos":[2139,2147],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[2151,2285],"content":"<bpt id=\"p1\">[</bpt>Tutorial: Deferred Execution (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-deferred-execution.md)</ept>","source":"[Tutorial: Deferred Execution (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/tutorial-deferred-execution.md)"}]}