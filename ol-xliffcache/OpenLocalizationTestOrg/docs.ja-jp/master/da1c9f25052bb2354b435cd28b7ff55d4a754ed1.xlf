<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="unordered-node-retrieval-by-name-or-index.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da1c9f25052bb2354b435cd28b7ff55d4a754ed1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\unordered-node-retrieval-by-name-or-index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">904ccad79036c7fb0004e66fc9a75584d2106653</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a11c87af234e60e5b1c710c9fb0394a208b0b9b4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Unordered Node Retrieval by Name or Index</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Unordered Node Retrieval by Name or Index</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XmlNamedNodeMap<ept id="p1">**</ept> is described in the World Wide Web Consortium (W3C) specification as the NamedNodeMap and is required to handle an unordered set of nodes with the ability to reference nodes by their name or index.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The only way you have access to an <bpt id="p1">**</bpt>XmlNamedNodeMap<ept id="p1">**</ept> is when an <bpt id="p2">**</bpt>XmlNamedNodeMap<ept id="p2">**</ept> is returned through a method or property.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are three methods or properties that return an <bpt id="p1">**</bpt>XmlNamedNodeMap<ept id="p1">**</ept>:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XmlElement.Attributes</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>XmlDocumentType.Entities</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>XmlDocumentType.Notations</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">**</bpt>XmlDocumentType.Entities<ept id="p1">**</ept> property gets the collection of <bpt id="p2">**</bpt>XmlEntity<ept id="p2">**</ept> nodes declared in the document type declaration.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This collection is returned as an <bpt id="p1">**</bpt>XmlNamedNodeMap<ept id="p1">**</ept>, and you can iterate through the collection with the use of the <bpt id="p2">**</bpt>Count<ept id="p2">**</ept> property and display entity information.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For an example of iterating through an <bpt id="p1">**</bpt>XmlNamedNodeMap<ept id="p1">**</ept>, see <ph id="ph1">&lt;xref:System.Xml.XmlDocumentType.Entities%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XmlAttributeCollection<ept id="p1">**</ept> is derived from <bpt id="p2">**</bpt>XmlNamedNodeMap<ept id="p2">**</ept> and only attributes are modifiable, while notations and entities are read-only.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">**</bpt>XmlNamedNodeMap<ept id="p1">**</ept> for the attributes, you can get nodes for those attributes based on their XML names.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This provides an easy method for manipulating the collection of attributes on an element node.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This can be contrasted directly with <bpt id="p1">**</bpt>XmlNodeList<ept id="p1">**</ept>, which also implements the <bpt id="p2">**</bpt>IEnumerable<ept id="p2">**</ept> interface, but with an index accessor rather than a string.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>RemoveNamedItem<ept id="p1">**</ept> and <bpt id="p2">**</bpt>SetNamedItem<ept id="p2">**</ept> methods are only used against an <bpt id="p3">**</bpt>XmlAttributeCollection<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adding or removing from an attribute collection, whether using the <bpt id="p1">**</bpt>AttributeCollection<ept id="p1">**</ept> or the <bpt id="p2">**</bpt>XmlNamedNodeMap<ept id="p2">**</ept> implementation, modifies the attribute collection on the element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following code example shows how to move an attribute and create a new attribute.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To see an additional code example which shows an attribute being removed from an <bpt id="p1">**</bpt>AttributeCollection<ept id="p1">**</ept>, see <bpt id="p2">[</bpt>XmlNamedNodeMap.RemoveNamedItem Method<ept id="p2">](Overload:System.Xml.XmlNamedNodeMap.RemoveNamedItem)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information on the methods and properties, see <bpt id="p1">[</bpt>XmlNamedNodeMap Members<ept id="p1">](AllMembers.T:System.Xml.XmlNamedNodeMap)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Document Object Model (DOM)<ept id="p1">](../../../../docs/standard/data/xml/xml-document-object-model-dom.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>