{"content":"---\ntitle: \"IHostCrst::SetSpinCount Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"IHostCrst.SetSpinCount\"\napi_location: \n  - \"mscoree.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"IHostCrst::SetSpinCount\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"IHostCrst::SetSpinCount method [.NET Framework hosting]\"\n  - \"SetSpinCount method [.NET Framework hosting]\"\nms.assetid: 863fc8ce-9b8a-477e-8dd8-75c8544bb43a\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# IHostCrst::SetSpinCount Method\nSets the spin count for the current [IHostCrst](../../../../docs/framework/unmanaged-api/hosting/ihostcrst-interface.md) instance.  \n  \n## Syntax  \n  \n```  \nHRESULT SetSpinCount (  \n    [in] DWORD dwSpinCount  \n);  \n```  \n  \n#### Parameters  \n `dwSpinCount`  \n [in] The new spin count for the current `IHostCrst` instance.  \n  \n## Return Value  \n  \n|HRESULT|Description|  \n|-------------|-----------------|  \n|S_OK|`SetSpinCount` returned successfully.|  \n|HOST_E_CLRNOTAVAILABLE|The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.|  \n|HOST_E_TIMEOUT|The call timed out.|  \n|HOST_E_NOT_OWNER|The caller does not own the lock.|  \n|HOST_E_ABANDONED|An event was canceled while a blocked thread or fiber was waiting on it.|  \n|E_FAIL|An unknown catastrophic failure occurred. When a method returns E_FAIL, the CLR is no longer usable within the process. Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.|  \n  \n## Remarks  \n On multi-processor systems, if the critical section represented by the current `IHostCrst` instance is unavailable, a calling thread spins `dwSpinCount` times before calling [IHostSemaphore::Wait](../../../../docs/framework/unmanaged-api/hosting/ihostsemaphore-wait-method.md) on a semaphore associated with the critical section. If the critical section becomes free during the spin operation, the calling thread avoids the wait operation.  \n  \n The usage of `dwSpinCount` is identical to the usage of the parameter of the same name in the Win32 `InitializeCriticalSectionAndSpinCount` function.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** MSCorEE.h  \n  \n **Library:** Included as a resource in MSCorEE.dll  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [ICLRSyncManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-interface.md)   \n [IHostCrst Interface](../../../../docs/framework/unmanaged-api/hosting/ihostcrst-interface.md)   \n [IHostSyncManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostsyncmanager-interface.md)","nodes":[{"pos":[12,59],"content":"IHostCrst::SetSpinCount Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"IHostCrst::SetSpinCount Method | Microsoft Docs","pos":[0,47]}]},{"pos":[686,716],"content":"IHostCrst::SetSpinCount Method","linkify":"IHostCrst::SetSpinCount Method","nodes":[{"content":"IHostCrst::SetSpinCount Method","pos":[0,30]}]},{"pos":[717,847],"content":"Sets the spin count for the current <bpt id=\"p1\">[</bpt>IHostCrst<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostcrst-interface.md)</ept> instance.","source":"Sets the spin count for the current [IHostCrst](../../../../docs/framework/unmanaged-api/hosting/ihostcrst-interface.md) instance."},{"pos":[856,862],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[947,957],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The new spin count for the current <ph id=\"ph1\">`IHostCrst`</ph> instance.","pos":[978,1039],"source":" [in] The new spin count for the current `IHostCrst` instance."},{"pos":[1048,1060],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"HRESULT","pos":[1067,1074]},{"content":"Description","pos":[1075,1086]},{"content":"S_OK","pos":[1127,1131]},{"pos":[1132,1169],"content":"<ph id=\"ph1\">`SetSpinCount`</ph> returned successfully.","source":"`SetSpinCount` returned successfully."},{"content":"HOST_E_CLRNOTAVAILABLE","pos":[1174,1196]},{"content":"The common language runtime (CLR) has not been loaded into a process, or the CLR is in a state in which it cannot run managed code or process the call successfully.","pos":[1197,1361]},{"content":"HOST_E_TIMEOUT","pos":[1366,1380]},{"content":"The call timed out.","pos":[1381,1400]},{"content":"HOST_E_NOT_OWNER","pos":[1405,1421]},{"content":"The caller does not own the lock.","pos":[1422,1455]},{"content":"HOST_E_ABANDONED","pos":[1460,1476]},{"content":"An event was canceled while a blocked thread or fiber was waiting on it.","pos":[1477,1549]},{"content":"E_FAIL","pos":[1554,1560]},{"content":"An unknown catastrophic failure occurred.","pos":[1561,1602]},{"content":"When a method returns E_FAIL, the CLR is no longer usable within the process.","pos":[1603,1680]},{"content":"Subsequent calls to hosting methods return HOST_E_CLRNOTAVAILABLE.","pos":[1681,1747]},{"pos":[1757,1764],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"On multi-processor systems, if the critical section represented by the current <ph id=\"ph1\">`IHostCrst`</ph> instance is unavailable, a calling thread spins <ph id=\"ph2\">`dwSpinCount`</ph> times before calling <bpt id=\"p1\">[</bpt>IHostSemaphore::Wait<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostsemaphore-wait-method.md)</ept> on a semaphore associated with the critical section.","pos":[1768,2097],"source":"On multi-processor systems, if the critical section represented by the current `IHostCrst` instance is unavailable, a calling thread spins `dwSpinCount` times before calling [IHostSemaphore::Wait](../../../../docs/framework/unmanaged-api/hosting/ihostsemaphore-wait-method.md) on a semaphore associated with the critical section."},{"content":"If the critical section becomes free during the spin operation, the calling thread avoids the wait operation.","pos":[2098,2207]},{"pos":[2214,2363],"content":"The usage of <ph id=\"ph1\">`dwSpinCount`</ph> is identical to the usage of the parameter of the same name in the Win32 <ph id=\"ph2\">`InitializeCriticalSectionAndSpinCount`</ph> function.","source":"The usage of `dwSpinCount` is identical to the usage of the parameter of the same name in the Win32 `InitializeCriticalSectionAndSpinCount` function."},{"pos":[2372,2384],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2388,2492],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2499,2520],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> MSCorEE.h","source":"**Header:** MSCorEE.h"},{"pos":[2527,2577],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> Included as a resource in MSCorEE.dll","source":"**Library:** Included as a resource in MSCorEE.dll"},{"pos":[2584,2692],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"},{"pos":[2701,2709],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>ICLRSyncManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2713,2820],"source":"[ICLRSyncManager Interface](../../../../docs/framework/unmanaged-api/hosting/iclrsyncmanager-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IHostCrst Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostcrst-interface.md)</ept><ph id=\"ph1\"> </ph>","pos":[2823,2919],"source":" [IHostCrst Interface](../../../../docs/framework/unmanaged-api/hosting/ihostcrst-interface.md) "},{"content":"<bpt id=\"p1\"> [</bpt>IHostSyncManager Interface<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/hosting/ihostsyncmanager-interface.md)</ept>","pos":[2922,3031],"source":" [IHostSyncManager Interface](../../../../docs/framework/unmanaged-api/hosting/ihostsyncmanager-interface.md)"}]}