{"content":"---\ntitle: \"How to: Filter on Element Names (LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: b1437b4a-48aa-4546-834a-d6d3ab015fe1\n---\n# How to: Filter on Element Names (LINQ to XML) (Visual Basic)\nWhen you call one of the methods that return <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Xml.Linq.XElement>, you can filter on the element name.  \n  \n## Example  \n This example retrieves a collection of descendants that is filtered to contain only descendants with the specified name.  \n  \n This example uses the following XML document: [Sample XML File: Typical Purchase Order (LINQ to XML)](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml.md).  \n  \n```vb  \nDim po As XElement = XElement.Load(\"PurchaseOrder.xml\")  \nDim items As IEnumerable(Of XElement) = _  \n    From el In po...<ProductName> _  \n    Select el  \nFor Each prdName As XElement In items  \n    Console.WriteLine(prdName.Name.ToString & \":\" & prdName.Value)  \nNext  \n```  \n  \n This code produces the following output:  \n  \n```  \nProductName:Lawnmower  \nProductName:Baby Monitor  \n```  \n  \n The other methods that return <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Xml.Linq.XElement> collections follow the same pattern. Their signatures are similar to <xref:System.Xml.Linq.XContainer.Elements%2A> and <xref:System.Xml.Linq.XContainer.Descendants%2A>. The following is the complete list of methods that have similar method signatures:  \n  \n-   <xref:System.Xml.Linq.XNode.Ancestors%2A>  \n  \n-   <xref:System.Xml.Linq.XContainer.Descendants%2A>  \n  \n-   <xref:System.Xml.Linq.XContainer.Elements%2A>  \n  \n-   <xref:System.Xml.Linq.XNode.ElementsAfterSelf%2A>  \n  \n-   <xref:System.Xml.Linq.XNode.ElementsBeforeSelf%2A>  \n  \n-   <xref:System.Xml.Linq.XElement.AncestorsAndSelf%2A>  \n  \n-   <xref:System.Xml.Linq.XElement.DescendantsAndSelf%2A>  \n  \n## Example  \n The following example shows the same query for XML that is in a namespace. For more information, see [Working with XML Namespaces (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md).  \n  \n This example uses the following XML document: [Sample XML File: Typical Purchase Order in a Namespace](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-in-a-namespace.md).  \n  \n```vb  \nImports <xmlns:aw=\"http://www.adventure-works.com\">  \n  \nModule Module1  \n    Sub Main()  \n        Dim po As XElement = XElement.Load(\"PurchaseOrderInNamespace.xml\")  \n        Dim items As IEnumerable(Of XElement) = _  \n            From el In po...<aw:ProductName> _  \n            Select el  \n        For Each prdName As XElement In items  \n            Console.WriteLine(prdName.Name.ToString & \":\" & prdName.Value)  \n        Next  \n    End Sub  \nEnd Module  \n```  \n  \n This code produces the following output:  \n  \n```  \n{http://www.adventure-works.com}ProductName:Lawnmower  \n{http://www.adventure-works.com}ProductName:Baby Monitor  \n```  \n  \n## See also\n\n- [LINQ to XML Axes (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)\n","nodes":[{"pos":[4,142],"embed":true,"restype":"x-metadata","content":"title: \"How to: Filter on Element Names (LINQ to XML) (Visual Basic)\"\nms.date: 07/20/2015\nms.assetid: b1437b4a-48aa-4546-834a-d6d3ab015fe1","nodes":[{"content":"How to: Filter on Element Names (LINQ to XML) (Visual Basic)","nodes":[{"pos":[0,60],"content":"How to: Filter on Element Names (LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Filter on Element Names (LINQ to XML) (Visual Basic)","pos":[0,60]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[149,209],"content":"How to: Filter on Element Names (LINQ to XML) (Visual Basic)","linkify":"How to: Filter on Element Names (LINQ to XML) (Visual Basic)","nodes":[{"content":"How to: Filter on Element Names (LINQ to XML) (Visual Basic)","pos":[0,60]}]},{"pos":[210,376],"content":"When you call one of the methods that return <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, you can filter on the element name.","source":"When you call one of the methods that return <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Xml.Linq.XElement>, you can filter on the element name."},{"pos":[385,392],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example retrieves a collection of descendants that is filtered to contain only descendants with the specified name.","pos":[396,516]},{"pos":[523,737],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Typical Purchase Order (LINQ to XML)](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml.md)."},{"content":"This code produces the following output:","pos":[1033,1073]},{"content":"The other methods that return <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> collections follow the same pattern.","pos":[1146,1297],"source":"The other methods that return <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Xml.Linq.XElement> collections follow the same pattern."},{"content":"Their signatures are similar to <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt;</ph>.","pos":[1298,1429],"source":" Their signatures are similar to <xref:System.Xml.Linq.XContainer.Elements%2A> and <xref:System.Xml.Linq.XContainer.Descendants%2A>."},{"content":"The following is the complete list of methods that have similar method signatures:","pos":[1430,1512]},{"pos":[1928,1935],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the same query for XML that is in a namespace.","pos":[1939,2013]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with XML Namespaces (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.","pos":[2014,2174],"source":" For more information, see [Working with XML Namespaces (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)."},{"pos":[2181,2399],"content":"This example uses the following XML document: <bpt id=\"p1\">[</bpt>Sample XML File: Typical Purchase Order in a Namespace<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-in-a-namespace.md)</ept>.","source":"This example uses the following XML document: [Sample XML File: Typical Purchase Order in a Namespace](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-in-a-namespace.md)."},{"content":"This code produces the following output:","pos":[2883,2923]},{"pos":[3062,3070],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3074,3185],"content":"<bpt id=\"p1\">[</bpt>LINQ to XML Axes (Visual Basic)<ept id=\"p1\">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)</ept>","source":"[LINQ to XML Axes (Visual Basic)](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)"}]}