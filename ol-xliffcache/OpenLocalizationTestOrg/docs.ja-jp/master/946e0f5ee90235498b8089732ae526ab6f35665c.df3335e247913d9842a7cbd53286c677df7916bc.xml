{"content":"---\ntitle: \"Panels Overview\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"Panel control [WPF], about Panel control\"\n  - \"controls [WPF], Panel\"\nms.assetid: f73644af-9941-4611-8754-6d4cef03fc44\n---\n# Panels Overview\n<xref:System.Windows.Controls.Panel> elements are components that control the rendering of elementsâ€”their size and dimensions, their position, and the arrangement of their child content. The [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] provides a number of predefined <xref:System.Windows.Controls.Panel> elements as well as the ability to construct custom <xref:System.Windows.Controls.Panel> elements.  \n  \n This topic contains the following sections.  \n  \n-   [The Panel Class](#Panels_view_from_10000_feet)  \n  \n-   [Panel Element Common Members](#Panels_declared_members)  \n  \n-   [Derived Panel Elements](#Panels_derived_elements)  \n  \n-   [User Interface Panels](#Panels_main_UI_elements)  \n  \n-   [Nested Panel Elements](#Panels_nested_panel_elements)  \n  \n-   [Custom Panel Elements](#Panels_custom_panel_elements)  \n  \n-   [Localization/Globalization Support](#Panels_global_localization)  \n  \n<a name=\"Panels_view_from_10000_feet\"></a>   \n## The Panel Class  \n <xref:System.Windows.Controls.Panel> is the base class for all elements that provide layout support in [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]. Derived <xref:System.Windows.Controls.Panel> elements are used to position and arrange elements in [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] and code.  \n  \n The [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] includes a comprehensive suite of derived panel implementations that enable many complex layouts. These derived classes expose properties and methods that enable most standard [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)] scenarios. Developers who are unable to find a child arrangement behavior that meets their needs can create new layouts by overriding the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> and <xref:System.Windows.FrameworkElement.MeasureOverride%2A> methods. For more information on custom layout behaviors, see [Custom Panel Elements](#Panels_custom_panel_elements).  \n  \n<a name=\"Panels_declared_members\"></a>   \n## Panel Common Members  \n All <xref:System.Windows.Controls.Panel> elements support the base sizing and positioning properties defined by <xref:System.Windows.FrameworkElement>, including <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>, <xref:System.Windows.FrameworkElement.VerticalAlignment%2A>, <xref:System.Windows.FrameworkElement.Margin%2A>, and <xref:System.Windows.FrameworkElement.LayoutTransform%2A>. For additional information on positioning properties defined by <xref:System.Windows.FrameworkElement>, see [Alignment, Margins, and Padding Overview](../advanced/alignment-margins-and-padding-overview.md).  \n  \n <xref:System.Windows.Controls.Panel> exposes additional properties that are of critical importance in understanding and using layout. The <xref:System.Windows.Controls.Panel.Background%2A> property is used to fill the area between the boundaries of a derived panel element with a <xref:System.Windows.Media.Brush>. <xref:System.Windows.Controls.Panel.Children%2A> represents the child collection of elements that the <xref:System.Windows.Controls.Panel> is comprised of. <xref:System.Windows.Controls.Panel.InternalChildren%2A> represents the content of the <xref:System.Windows.Controls.Panel.Children%2A> collection plus those members generated by data binding. Both consist of a <xref:System.Windows.Controls.UIElementCollection> of child elements hosted within the parent <xref:System.Windows.Controls.Panel>.  \n  \n Panel also exposes a <xref:System.Windows.Controls.Panel.ZIndex%2A?displayProperty=nameWithType> attached property that can be used to achieve layered order in a derived <xref:System.Windows.Controls.Panel>. Members of a panel's <xref:System.Windows.Controls.Panel.Children%2A> collection with a higher <xref:System.Windows.Controls.Panel.ZIndex%2A?displayProperty=nameWithType> value appear in front of those with a lower <xref:System.Windows.Controls.Panel.ZIndex%2A?displayProperty=nameWithType> value. This is particularly useful for panels such as <xref:System.Windows.Controls.Canvas> and <xref:System.Windows.Controls.Grid> which allow children to share the same coordinate space.  \n  \n <xref:System.Windows.Controls.Panel> also defines the <xref:System.Windows.Controls.Panel.OnRender%2A> method, which can be used to override the default presentation behavior of a <xref:System.Windows.Controls.Panel>.  \n  \n#### Attached Properties  \n Derived panel elements make extensive use of attached properties. An attached property is a specialized form of dependency property that does not have the conventional [!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)] property \"wrapper\". Attached properties have a specialized syntax in [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)], which can be seen in several of the examples that follow.  \n  \n One purpose of an attached property is to allow child elements to store unique values of a property that is actually defined by a parent element. An application of this functionality is having child elements inform the parent how they wish to be presented in the [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)], which is extremely useful for application layout. For more information, see [Attached Properties Overview](../advanced/attached-properties-overview.md).  \n  \n<a name=\"Panels_derived_elements\"></a>   \n## Derived Panel Elements  \n Many objects derive from <xref:System.Windows.Controls.Panel>, but not all of them are intended for use as root layout providers. There are six defined panel classes (<xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Controls.DockPanel>, <xref:System.Windows.Controls.Grid>, <xref:System.Windows.Controls.StackPanel>, <xref:System.Windows.Controls.VirtualizingStackPanel>, and <xref:System.Windows.Controls.WrapPanel>) that are designed specifically for creating application [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)].  \n  \n Each panel element encapsulates its own special functionality, as seen in the following table.  \n  \n|Element Name|UI Panel?|Description|  \n|------------------|---------------|-----------------|  \n|<xref:System.Windows.Controls.Canvas>|Yes|Defines an area within which you can explicitly position child elements by coordinates relative to the <xref:System.Windows.Controls.Canvas> area.|  \n|<xref:System.Windows.Controls.DockPanel>|Yes|Defines an area within which you can arrange child elements either horizontally or vertically, relative to each other.|  \n|<xref:System.Windows.Controls.Grid>|Yes|Defines a flexible grid area consisting of columns and rows. Child elements of a <xref:System.Windows.Controls.Grid> can be positioned precisely using the <xref:System.Windows.FrameworkElement.Margin%2A> property.|  \n|<xref:System.Windows.Controls.StackPanel>|Yes|Arranges child elements into a single line that can be oriented horizontally or vertically.|  \n|<xref:System.Windows.Controls.Primitives.TabPanel>|No|Handles the layout of tab buttons in a <xref:System.Windows.Controls.TabControl>.|  \n|<xref:System.Windows.Controls.Primitives.ToolBarOverflowPanel>|No|Arranges content within a <xref:System.Windows.Controls.ToolBar> control.|  \n|<xref:System.Windows.Controls.Primitives.UniformGrid>|No|<xref:System.Windows.Controls.Primitives.UniformGrid> is used to arrange children in a grid with all equal cell sizes.|  \n|<xref:System.Windows.Controls.VirtualizingPanel>|No|Provides a base class for panels that can \"virtualize\" their children collection.|  \n|<xref:System.Windows.Controls.VirtualizingStackPanel>|Yes|Arranges and virtualizes content on a single line oriented horizontally or vertically.|  \n|<xref:System.Windows.Controls.WrapPanel>|Yes|<xref:System.Windows.Controls.WrapPanel> positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box. Subsequent ordering happens sequentially from top to bottom or right to left, depending on the value of the <xref:System.Windows.Controls.WrapPanel.Orientation%2A> property.|  \n  \n<a name=\"Panels_main_UI_elements\"></a>   \n## User Interface Panels  \n There are six panel classes available in [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] that are optimized to support [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] scenarios: <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Controls.DockPanel>, <xref:System.Windows.Controls.Grid>, <xref:System.Windows.Controls.StackPanel>, <xref:System.Windows.Controls.VirtualizingStackPanel>, and <xref:System.Windows.Controls.WrapPanel>. These panel elements are easy to use, versatile, and extensible enough for most applications.  \n  \n Each derived <xref:System.Windows.Controls.Panel> element treats sizing constraints differently. Understanding how a <xref:System.Windows.Controls.Panel> handles constraints in either the horizontal or vertical direction can make layout more predictable.  \n  \n|**Panel Name**|**x-Dimension**|**y-Dimension**|  \n|--------------------|----------------------|----------------------|  \n|<xref:System.Windows.Controls.Canvas>|Constrained to content|Constrained to content|  \n|<xref:System.Windows.Controls.DockPanel>|Constrained|Constrained|  \n|<xref:System.Windows.Controls.StackPanel> (Vertical Orientation)|Constrained|Constrained to content|  \n|<xref:System.Windows.Controls.StackPanel> (Horizontal Orientation)|Constrained to content|Constrained|  \n|<xref:System.Windows.Controls.Grid>|Constrained|Constrained, except in cases where <xref:System.Windows.GridUnitType.Auto> apply to rows and columns|  \n|<xref:System.Windows.Controls.WrapPanel>|Constrained to content|Constrained to content|  \n  \n More detailed descriptions and usage examples of each of these elements can be found below.  \n  \n<a name=\"Panels_overview_Canvas_subsection\"></a>   \n### Canvas  \n The <xref:System.Windows.Controls.Canvas> element enables positioning of content according to absolute *x-* and *y-*coordinates. Elements can be drawn in a unique location; or, if elements occupy the same coordinates, the order in which they appear in markup determines the order in which the elements are drawn.  \n  \n <xref:System.Windows.Controls.Canvas> provides the most flexible layout support of any <xref:System.Windows.Controls.Panel>. Height and Width properties are used to define the area of the canvas, and elements inside are assigned absolute coordinates relative to the area of the parent <xref:System.Windows.Controls.Canvas>. Four attached properties, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.Canvas.Top%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.Canvas.Right%2A?displayProperty=nameWithType> and <xref:System.Windows.Controls.Canvas.Bottom%2A?displayProperty=nameWithType>, allow fine control of object placement within a <xref:System.Windows.Controls.Canvas>, allowing the developer to position and arrange elements precisely on the screen.  \n  \n#### ClipToBounds Within a Canvas  \n <xref:System.Windows.Controls.Canvas> can position child elements at any position on the screen, even at coordinates that are outside of its own defined <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.Width%2A>. Furthermore, <xref:System.Windows.Controls.Canvas> is not affected by the size of its children. As a result, it is possible for a child element to overdraw other elements outside the bounding rectangle of the parent <xref:System.Windows.Controls.Canvas>. The default behavior of a <xref:System.Windows.Controls.Canvas> is to allow children to be drawn outside the bounds of the parent <xref:System.Windows.Controls.Canvas>. If this behavior is undesirable, the <xref:System.Windows.UIElement.ClipToBounds%2A> property can be set to `true`. This causes <xref:System.Windows.Controls.Canvas> to clip to its own size. <xref:System.Windows.Controls.Canvas> is the only layout element that allows children to be drawn outside its bounds.  \n  \n This behavior is graphically illustrated in the [Width Properties Comparison Sample](https://go.microsoft.com/fwlink/?LinkID=160050).  \n  \n#### Defining and Using a Canvas  \n A <xref:System.Windows.Controls.Canvas> can be instantiated simply by using [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] or code. The following example demonstrates how to use <xref:System.Windows.Controls.Canvas> to absolutely position content. This code produces three 100-pixel squares. The first square is red, and its top-left (*x, y*) position is specified as (0, 0). The second square is green, and its top-left position is (100, 100), just below and to the right of the first square. The third square is blue, and its top-left position is (50, 50), thus encompassing the lower-right quadrant of the first square and the upper-left quadrant of the second. Because the third square is laid out last, it appears to be on top of the other two squaresâ€”that is, the overlapping portions assume the color of the third box.  \n  \n [!code-csharp[CanvasOvwSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CanvasOvwSample/CSharp/Canvas_Ovw_Sample.cs#1)]\n [!code-vb[CanvasOvwSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CanvasOvwSample/VisualBasic/canvas_vb.vb#1)]\n [!code-xaml[CanvasOvwSample#1](~/samples/snippets/xaml/VS_Snippets_Wpf/CanvasOvwSample/XAML/default.xaml#1)]  \n  \n The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this.  \n  \n ![A typical Canvas Element.](./media/panel-intro-canvas.PNG \"panel_intro_canvas\")  \n  \n<a name=\"Panels_overview_DockPanel_subsection\"></a>   \n### DockPanel  \n The <xref:System.Windows.Controls.DockPanel> element uses the <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType> attached property as set in child content elements to position content along the edges of a container. When <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Controls.Dock.Top> or <xref:System.Windows.Controls.Dock.Bottom>, it positions child elements above or below each other. When <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Controls.Dock.Left> or <xref:System.Windows.Controls.Dock.Right>, it positions child elements to the left or right of each other. The <xref:System.Windows.Controls.DockPanel.LastChildFill%2A> property determines the position of the final element added as a child of a <xref:System.Windows.Controls.DockPanel>.  \n  \n You can use <xref:System.Windows.Controls.DockPanel> to position a group of related controls, such as a set of buttons. Alternately, you can use it to create a \"paned\" [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)], similar to that found in [!INCLUDE[TLA#tla_outlook](../../../../includes/tlasharptla-outlook-md.md)].  \n  \n#### Sizing to Content  \n If its <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.Width%2A> properties are not specified, <xref:System.Windows.Controls.DockPanel> sizes to its content. The size can increase or decrease to accommodate the size of its child elements. However, when these properties are specified and there is no longer room for the next specified child element, <xref:System.Windows.Controls.DockPanel> does not display that child element or subsequent child elements and does not measure subsequent child elements.  \n  \n#### LastChildFill  \n By default, the last child of a <xref:System.Windows.Controls.DockPanel> element will \"fill\" the remaining, unallocated space. If this behavior is not desired, set the <xref:System.Windows.Controls.DockPanel.LastChildFill%2A> property to `false`.  \n  \n#### Defining and Using a DockPanel  \n The following example demonstrates how to partition space using a <xref:System.Windows.Controls.DockPanel>. Five <xref:System.Windows.Controls.Border> elements are added as children of a parent <xref:System.Windows.Controls.DockPanel>. Each uses a different positioning property of a <xref:System.Windows.Controls.DockPanel> to partition space. The final element \"fills\" the remaining, unallocated space.  \n  \n [!code-cpp[DockPanelOvwSample#1](~/samples/snippets/cpp/VS_Snippets_Wpf/DockPanelOvwSample/CPP/DockPanel_Ovw_Sample.cpp#1)]\n [!code-csharp[DockPanelOvwSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DockPanelOvwSample/CSharp/DockPanel_Ovw_Sample.cs#1)]\n [!code-vb[DockPanelOvwSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DockPanelOvwSample/VisualBasic/dockpanel_vb.vb#1)]\n [!code-xaml[DockPanelOvwSample#1](~/samples/snippets/xaml/VS_Snippets_Wpf/DockPanelOvwSample/XAML/default.xaml#1)]  \n  \n The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this.  \n  \n ![A typical DockPanel scenario.](./media/panel-intro-dockpanel.PNG \"panel_intro_dockpanel\")  \n  \n<a name=\"Panels_overview_Grid_subsection\"></a>   \n### Grid  \n The <xref:System.Windows.Controls.Grid> element merges the functionality of an absolute positioning and tabular data control. A <xref:System.Windows.Controls.Grid> enables you to easily position and style elements. <xref:System.Windows.Controls.Grid> allows you to define flexible row and column groupings, and even provides a mechanism to share sizing information between multiple <xref:System.Windows.Controls.Grid> elements.  \n  \n#### How is Grid Different from Table?  \n <xref:System.Windows.Documents.Table> and <xref:System.Windows.Controls.Grid> share some common functionality, but each is best suited for different scenarios. A <xref:System.Windows.Documents.Table> is designed for use within flow content (see [Flow Document Overview](../advanced/flow-document-overview.md) for more information on flow content). Grids are best used inside of forms (basically anywhere outside of flow content). Within a <xref:System.Windows.Documents.FlowDocument>, <xref:System.Windows.Documents.Table> supports flow content behaviors like pagination, column reflow, and content selection while a <xref:System.Windows.Controls.Grid> does not. A <xref:System.Windows.Controls.Grid> on the other hand is best used outside of a <xref:System.Windows.Documents.FlowDocument> for many reasons including <xref:System.Windows.Controls.Grid> adds elements based on a row and column index, <xref:System.Windows.Documents.Table> does not. The <xref:System.Windows.Controls.Grid> element allows layering of child content, allowing more than one element to exist within a single \"cell.\" <xref:System.Windows.Documents.Table> does not support layering. Child elements of a <xref:System.Windows.Controls.Grid> can be absolutely positioned relative to the area of their \"cell\" boundaries. <xref:System.Windows.Documents.Table> does not support this feature. Finally, a <xref:System.Windows.Controls.Grid> is lighter weight than a <xref:System.Windows.Documents.Table>.  \n  \n#### Sizing Behavior of Columns and Rows  \n Columns and rows defined within a <xref:System.Windows.Controls.Grid> can take advantage of <xref:System.Windows.GridUnitType.Star> sizing in order to distribute remaining space proportionally. When <xref:System.Windows.GridUnitType.Star> is selected as the Height or Width of a row or column, that column or row receives a weighted proportion of remaining available space. This is in contrast to <xref:System.Windows.GridUnitType.Auto>, which will distribute space evenly based on the size of the content within a column or row. This value is expressed as `*` or `2*` when using [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]. In the first case, the row or column would receive one times the available space, in the second case, two times, and so on. By combining this technique to proportionally distribute space with a <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> value of `Stretch` it is possible to partition layout space by percentage of screen space. <xref:System.Windows.Controls.Grid> is the only layout panel that can distribute space in this manner.  \n  \n#### Defining and Using a Grid  \n The following example demonstrates how to build a [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] similar to that found on the Run dialog available on the [!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)] Start menu.  \n  \n [!code-csharp[GridRunDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GridRunDialog/CSharp/window1.xaml.cs#1)]\n [!code-vb[GridRunDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GridRunDialog/VisualBasic/grid_vb.vb#1)]  \n  \n The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this.  \n  \n ![A typical Grid Element.](./media/avalon-run-dialog.PNG \"avalon_run_dialog\")  \n  \n<a name=\"Panels_overview_StackPanel_subsection\"></a>   \n### StackPanel  \n A <xref:System.Windows.Controls.StackPanel> enables you to \"stack\" elements in an assigned direction. The default stack direction is vertical. The <xref:System.Windows.Controls.StackPanel.Orientation%2A> property can be used to control content flow.  \n  \n#### StackPanel vs. DockPanel  \n Although <xref:System.Windows.Controls.DockPanel> can also \"stack\" child elements, <xref:System.Windows.Controls.DockPanel> and <xref:System.Windows.Controls.StackPanel> do not produce analogous results in some usage scenarios. For example, the order of child elements can affect their size in a <xref:System.Windows.Controls.DockPanel> but not in a <xref:System.Windows.Controls.StackPanel>. This is because <xref:System.Windows.Controls.StackPanel> measures in the direction of stacking at <xref:System.Double.PositiveInfinity>, whereas <xref:System.Windows.Controls.DockPanel> measures only the available size.  \n  \n The following example demonstrates this key difference.  \n  \n [!code-cpp[StackPanelOvw4#1](~/samples/snippets/cpp/VS_Snippets_Wpf/StackPanelOvw4/CPP/StackPanel_Ovw_Sample4.cpp#1)]\n [!code-csharp[StackPanelOvw4#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StackPanelOvw4/CSharp/StackPanel_Ovw_Sample4.cs#1)]\n [!code-vb[StackPanelOvw4#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StackPanelOvw4/VisualBasic/StackPanelSamp.vb#1)]\n [!code-xaml[StackPanelOvw4#1](~/samples/snippets/xaml/VS_Snippets_Wpf/StackPanelOvw4/XAML/default.xaml#1)]  \n  \n The difference in rendering behavior can be seen in this image.  \n  \n ![Screenshot: StackPanel vs. DockPanel screenshot](./media/layout-smiley-stackpanel.PNG \"layout_smiley_stackpanel\")  \n  \n#### Defining and Using a StackPanel  \n The following example demonstrates how to use a <xref:System.Windows.Controls.StackPanel> to create a set of vertically-positioned buttons. For horizontal positioning, set the <xref:System.Windows.Controls.StackPanel.Orientation%2A> property to <xref:System.Windows.Controls.Orientation.Horizontal>.  \n  \n [!code-csharp[StackPanel_ovw2#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StackPanel_ovw2/CSharp/StackPanel_Ovw_Sample2.cs#1)]\n [!code-vb[StackPanel_ovw2#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StackPanel_ovw2/VisualBasic/StackPanelOvw.vb#1)]  \n  \n The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this.  \n  \n ![A typical StackPanel element.](./media/panel-intro-stackpanel.PNG \"panel_intro_stackpanel\")  \n  \n<a name=\"Panels_overview_VirtualizingStackPanel_subsection\"></a>   \n#### VirtualizingStackPanel  \n [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] also provides a variation of the <xref:System.Windows.Controls.StackPanel> element that automatically \"virtualizes\" data-bound child content. In this context, the word virtualize refers to a technique by which a subset of elements are generated from a larger number of data items based upon which items are visible on-screen. It is intensive, both in terms of memory and processor, to generate a large number of UI elements when only a few may be on the screen at a given time. <xref:System.Windows.Controls.VirtualizingStackPanel> (through functionality provided by <xref:System.Windows.Controls.VirtualizingPanel>) calculates visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to only create elements for visible items.  \n  \n The <xref:System.Windows.Controls.VirtualizingStackPanel> element is automatically set as the items host for controls such as the <xref:System.Windows.Controls.ListBox>. When hosting a data bound collection, content is automatically virtualized, as long as the content is within the bounds of a <xref:System.Windows.Controls.ScrollViewer>. This greatly improves performance when hosting many child items.  \n  \n The following markup demonstrates how to use a <xref:System.Windows.Controls.VirtualizingStackPanel> as an items host. The <xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty?displayProperty=nameWithType> attached property must be set to `true` (default) for virtualization to occur.  \n  \n [!code-xaml[VirtualizingStackPanel_Intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/VirtualizingStackPanel_Intro/CS/default.xaml#1)]  \n  \n<a name=\"Panels_overview_WrapPanel\"></a>   \n### WrapPanel  \n <xref:System.Windows.Controls.WrapPanel> is used to position child elements in sequential position from left to right, breaking content to the next line when it reaches the edge of its parent container. Content can be oriented horizontally or vertically. <xref:System.Windows.Controls.WrapPanel> is useful for simple flowing [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)] scenarios. It can also be used to apply uniform sizing to all of its child elements.  \n  \n The following example demonstrates how to create a <xref:System.Windows.Controls.WrapPanel> to display <xref:System.Windows.Controls.Button> controls that wrap when they reach the edge of their container.  \n  \n [!code-cpp[WrapPanel_Intro#1](~/samples/snippets/cpp/VS_Snippets_Wpf/WrapPanel_Intro/CPP/WrapPanel_Code.cpp#1)]\n [!code-csharp[WrapPanel_Intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro/CSharp/WrapPanel_Code.cs#1)]\n [!code-vb[WrapPanel_Intro#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WrapPanel_Intro/VisualBasic/WrapPanel_vb.vb#1)]\n [!code-xaml[WrapPanel_Intro#1](~/samples/snippets/xaml/VS_Snippets_Wpf/WrapPanel_Intro/XAML/default.xaml#1)]  \n  \n The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this.  \n  \n ![A typical WrapPanel Element.](./media/wrappanel-element.PNG \"WrapPanel_Element\")  \n  \n<a name=\"Panels_nested_panel_elements\"></a>   \n## Nested Panel Elements  \n <xref:System.Windows.Controls.Panel> elements can be nested within each other in order to produce complex layouts. This can prove very useful in situations where one <xref:System.Windows.Controls.Panel> is ideal for a portion of a [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)], but may not meet the needs of a different portion of the [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)].  \n  \n There is no practical limit to the amount of nesting that your application can support, however, it is generally best to limit your application to only use those panels that are actually necessary for your desired layout. In many cases, a <xref:System.Windows.Controls.Grid> element can be used instead of nested panels due to its flexibility as a layout container. This can increase performance in your application by keeping unnecessary elements out of the tree.  \n  \n The following example demonstrates how to create a [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that takes advantage of nested <xref:System.Windows.Controls.Panel> elements in order to achieve a specific layout. In this particular case, a <xref:System.Windows.Controls.DockPanel> element is used to provide [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] structure, and nested <xref:System.Windows.Controls.StackPanel> elements, a <xref:System.Windows.Controls.Grid>, and a <xref:System.Windows.Controls.Canvas> are used to position child elements precisely within the parent <xref:System.Windows.Controls.DockPanel>.  \n  \n [!code-csharp[Nested_Panels#1](~/samples/snippets/csharp/VS_Snippets_Wpf/Nested_Panels/CSharp/nestedpanels.cs#1)]\n [!code-vb[Nested_Panels#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Nested_Panels/VisualBasic/nestedpanels.vb#1)]  \n  \n The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this.  \n  \n ![A UI that takes advantage of nested panels.](./media/nested-panels.PNG \"nested_panels\")  \n  \n<a name=\"Panels_custom_panel_elements\"></a>   \n## Custom Panel Elements  \n While [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] provides an array of flexible layout controls, custom layout behaviors can also be achieved by overriding the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> and <xref:System.Windows.FrameworkElement.MeasureOverride%2A> methods. Custom sizing and positioning can be accomplished by defining new positioning behaviors within these override methods.  \n  \n Similarly, custom layout behaviors based on derived classes (such as <xref:System.Windows.Controls.Canvas> or <xref:System.Windows.Controls.Grid>) can be defined by overriding their <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> and <xref:System.Windows.FrameworkElement.MeasureOverride%2A> methods.  \n  \n The following markup demonstrates how to create a custom <xref:System.Windows.Controls.Panel> element. This new <xref:System.Windows.Controls.Panel>, defined as `PlotPanel`, supports the positioning of child elements through the use of hard-coded *x-* and *y-*coordinates. In this example, a <xref:System.Windows.Shapes.Rectangle> element (not shown) is positioned at plot point 50 (*x*), and 50 (*y*).  \n  \n [!code-cpp[PlotPanel#1](~/samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#1)]\n [!code-csharp[PlotPanel#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#1)]\n [!code-vb[PlotPanel#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#1)]  \n  \n To view a more complex custom panel implementation, see [Create a Custom Content-Wrapping Panel Sample](https://go.microsoft.com/fwlink/?LinkID=159979).  \n  \n<a name=\"Panels_global_localization\"></a>   \n## Localization/Globalization Support  \n [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] supports a number of features that assist in the creation of localizable [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)].  \n  \n All panel elements natively support the <xref:System.Windows.FrameworkElement.FlowDirection%2A> property, which can be used to dynamically re-flow content based on a user's locale or language settings. For more information, see <xref:System.Windows.FrameworkElement.FlowDirection%2A>.  \n  \n The <xref:System.Windows.Window.SizeToContent%2A> property provides a mechanism that enables application developers to anticipate the needs of localized [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]. Using the <xref:System.Windows.SizeToContent.WidthAndHeight> value of this property, a parent <xref:System.Windows.Window> always sizes dynamically to fit content and is not constrained by artificial height or width restrictions.  \n  \n <xref:System.Windows.Controls.DockPanel>, <xref:System.Windows.Controls.Grid>, and <xref:System.Windows.Controls.StackPanel> are all good choices for localizable [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]. <xref:System.Windows.Controls.Canvas> is not a good choice, however, because it positions content absolutely, making it difficult to localize.  \n  \n For additional information on creating [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] applications with localizable [!INCLUDE[TLA#tla_ui#plural](../../../../includes/tlasharptla-uisharpplural-md.md)]s, see the [Use Automatic Layout Overview](../advanced/use-automatic-layout-overview.md).  \n  \n## See also\n\n- [Walkthrough: My first WPF desktop application](../getting-started/walkthrough-my-first-wpf-desktop-application.md)\n- [WPF Layout Gallery Sample](https://go.microsoft.com/fwlink/?LinkID=160054)\n- [Layout](../advanced/layout.md)\n- [WPF Controls Gallery Sample](https://go.microsoft.com/fwlink/?LinkID=160053)\n- [Alignment, Margins, and Padding Overview](../advanced/alignment-margins-and-padding-overview.md)\n- [Create a Custom Content-Wrapping Panel Sample](https://go.microsoft.com/fwlink/?LinkID=159979)\n- [Attached Properties Overview](../advanced/attached-properties-overview.md)\n- [Use Automatic Layout Overview](../advanced/use-automatic-layout-overview.md)\n- [Layout and Design](../advanced/optimizing-performance-layout-and-design.md)\n","nodes":[{"pos":[4,240],"embed":true,"restype":"x-metadata","content":"title: \"Panels Overview\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\n  - \"cpp\"\nhelpviewer_keywords: \n  - \"Panel control [WPF], about Panel control\"\n  - \"controls [WPF], Panel\"\nms.assetid: f73644af-9941-4611-8754-6d4cef03fc44","nodes":[{"content":"Panels Overview","nodes":[{"pos":[0,15],"content":"Panels Overview","nodes":[{"content":"Panels Overview","pos":[0,15]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[247,262],"content":"Panels Overview","linkify":"Panels Overview","nodes":[{"content":"Panels Overview","pos":[0,15]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements are components that control the rendering of elementsâ€”their size and dimensions, their position, and the arrangement of their child content.","pos":[263,449],"source":"<xref:System.Windows.Controls.Panel> elements are components that control the rendering of elementsâ€”their size and dimensions, their position, and the arrangement of their child content."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph> provides a number of predefined <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements as well as the ability to construct custom <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements.","pos":[450,701],"source":" The [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)] provides a number of predefined <xref:System.Windows.Controls.Panel> elements as well as the ability to construct custom <xref:System.Windows.Controls.Panel> elements."},{"content":"This topic contains the following sections.","pos":[708,751]},{"pos":[761,808],"content":"<bpt id=\"p1\">[</bpt>The Panel Class<ept id=\"p1\">](#Panels_view_from_10000_feet)</ept>","source":"[The Panel Class](#Panels_view_from_10000_feet)"},{"pos":[818,874],"content":"<bpt id=\"p1\">[</bpt>Panel Element Common Members<ept id=\"p1\">](#Panels_declared_members)</ept>","source":"[Panel Element Common Members](#Panels_declared_members)"},{"pos":[884,934],"content":"<bpt id=\"p1\">[</bpt>Derived Panel Elements<ept id=\"p1\">](#Panels_derived_elements)</ept>","source":"[Derived Panel Elements](#Panels_derived_elements)"},{"pos":[944,993],"content":"<bpt id=\"p1\">[</bpt>User Interface Panels<ept id=\"p1\">](#Panels_main_UI_elements)</ept>","source":"[User Interface Panels](#Panels_main_UI_elements)"},{"pos":[1003,1057],"content":"<bpt id=\"p1\">[</bpt>Nested Panel Elements<ept id=\"p1\">](#Panels_nested_panel_elements)</ept>","source":"[Nested Panel Elements](#Panels_nested_panel_elements)"},{"pos":[1067,1121],"content":"<bpt id=\"p1\">[</bpt>Custom Panel Elements<ept id=\"p1\">](#Panels_custom_panel_elements)</ept>","source":"[Custom Panel Elements](#Panels_custom_panel_elements)"},{"pos":[1131,1196],"content":"<bpt id=\"p1\">[</bpt>Localization/Globalization Support<ept id=\"p1\">](#Panels_global_localization)</ept>","source":"[Localization/Globalization Support](#Panels_global_localization)"},{"pos":[1251,1266],"content":"The Panel Class","linkify":"The Panel Class","nodes":[{"content":"The Panel Class","pos":[0,15]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> is the base class for all elements that provide layout support in <ph id=\"ph2\">[!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]</ph>.","pos":[1270,1453],"source":"<xref:System.Windows.Controls.Panel> is the base class for all elements that provide layout support in [!INCLUDE[TLA#tla_winclient](../../../../includes/tlasharptla-winclient-md.md)]."},{"content":"Derived <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements are used to position and arrange elements in <ph id=\"ph2\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> and code.","pos":[1454,1632],"source":" Derived <xref:System.Windows.Controls.Panel> elements are used to position and arrange elements in [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] and code."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> includes a comprehensive suite of derived panel implementations that enable many complex layouts.","pos":[1639,1822],"source":"The [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] includes a comprehensive suite of derived panel implementations that enable many complex layouts."},{"content":"These derived classes expose properties and methods that enable most standard <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph> scenarios.","pos":[1823,1977],"source":" These derived classes expose properties and methods that enable most standard [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)] scenarios."},{"content":"Developers who are unable to find a child arrangement behavior that meets their needs can create new layouts by overriding the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> methods.","pos":[1978,2233],"source":" Developers who are unable to find a child arrangement behavior that meets their needs can create new layouts by overriding the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> and <xref:System.Windows.FrameworkElement.MeasureOverride%2A> methods."},{"content":"For more information on custom layout behaviors, see <bpt id=\"p1\">[</bpt>Custom Panel Elements<ept id=\"p1\">](#Panels_custom_panel_elements)</ept>.","pos":[2234,2342],"source":" For more information on custom layout behaviors, see [Custom Panel Elements](#Panels_custom_panel_elements)."},{"pos":[2393,2413],"content":"Panel Common Members","linkify":"Panel Common Members","nodes":[{"content":"Panel Common Members","pos":[0,20]}]},{"content":"All <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements support the base sizing and positioning properties defined by <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, including <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph>.","pos":[2417,2914],"source":"All <xref:System.Windows.Controls.Panel> elements support the base sizing and positioning properties defined by <xref:System.Windows.FrameworkElement>, including <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>, <xref:System.Windows.FrameworkElement.VerticalAlignment%2A>, <xref:System.Windows.FrameworkElement.Margin%2A>, and <xref:System.Windows.FrameworkElement.LayoutTransform%2A>."},{"content":"For additional information on positioning properties defined by <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, see <bpt id=\"p1\">[</bpt>Alignment, Margins, and Padding Overview<ept id=\"p1\">](../advanced/alignment-margins-and-padding-overview.md)</ept>.","pos":[2915,3121],"source":" For additional information on positioning properties defined by <xref:System.Windows.FrameworkElement>, see [Alignment, Margins, and Padding Overview](../advanced/alignment-margins-and-padding-overview.md)."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> exposes additional properties that are of critical importance in understanding and using layout.","pos":[3128,3261],"source":"<xref:System.Windows.Controls.Panel> exposes additional properties that are of critical importance in understanding and using layout."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel.Background%2A&gt;</ph> property is used to fill the area between the boundaries of a derived panel element with a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Brush&gt;</ph>.","pos":[3262,3442],"source":" The <xref:System.Windows.Controls.Panel.Background%2A> property is used to fill the area between the boundaries of a derived panel element with a <xref:System.Windows.Media.Brush>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph> represents the child collection of elements that the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> is comprised of.","pos":[3443,3598],"source":"<xref:System.Windows.Controls.Panel.Children%2A> represents the child collection of elements that the <xref:System.Windows.Controls.Panel> is comprised of."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel.InternalChildren%2A&gt;</ph> represents the content of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph> collection plus those members generated by data binding.","pos":[3599,3791],"source":"<xref:System.Windows.Controls.Panel.InternalChildren%2A> represents the content of the <xref:System.Windows.Controls.Panel.Children%2A> collection plus those members generated by data binding."},{"content":"Both consist of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.UIElementCollection&gt;</ph> of child elements hosted within the parent <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel&gt;</ph>.","pos":[3792,3941],"source":" Both consist of a <xref:System.Windows.Controls.UIElementCollection> of child elements hosted within the parent <xref:System.Windows.Controls.Panel>."},{"content":"Panel also exposes a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel.ZIndex%2A?displayProperty=nameWithType&gt;</ph> attached property that can be used to achieve layered order in a derived <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel&gt;</ph>.","pos":[3948,4155],"source":"Panel also exposes a <xref:System.Windows.Controls.Panel.ZIndex%2A?displayProperty=nameWithType> attached property that can be used to achieve layered order in a derived <xref:System.Windows.Controls.Panel>."},{"content":"Members of a panel's <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph> collection with a higher <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel.ZIndex%2A?displayProperty=nameWithType&gt;</ph> value appear in front of those with a lower <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Panel.ZIndex%2A?displayProperty=nameWithType&gt;</ph> value.","pos":[4156,4453],"source":" Members of a panel's <xref:System.Windows.Controls.Panel.Children%2A> collection with a higher <xref:System.Windows.Controls.Panel.ZIndex%2A?displayProperty=nameWithType> value appear in front of those with a lower <xref:System.Windows.Controls.Panel.ZIndex%2A?displayProperty=nameWithType> value."},{"content":"This is particularly useful for panels such as <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> which allow children to share the same coordinate space.","pos":[4454,4635],"source":" This is particularly useful for panels such as <xref:System.Windows.Controls.Canvas> and <xref:System.Windows.Controls.Grid> which allow children to share the same coordinate space."},{"pos":[4642,4859],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> also defines the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel.OnRender%2A&gt;</ph> method, which can be used to override the default presentation behavior of a <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Panel&gt;</ph>.","source":"<xref:System.Windows.Controls.Panel> also defines the <xref:System.Windows.Controls.Panel.OnRender%2A> method, which can be used to override the default presentation behavior of a <xref:System.Windows.Controls.Panel>."},{"pos":[4870,4889],"content":"Attached Properties","linkify":"Attached Properties","nodes":[{"content":"Attached Properties","pos":[0,19]}]},{"content":"Derived panel elements make extensive use of attached properties.","pos":[4893,4958]},{"content":"An attached property is a specialized form of dependency property that does not have the conventional <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)]</ph> property \"wrapper\".","pos":[4959,5148],"source":" An attached property is a specialized form of dependency property that does not have the conventional [!INCLUDE[TLA#tla_clr](../../../../includes/tlasharptla-clr-md.md)] property \"wrapper\"."},{"content":"Attached properties have a specialized syntax in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph>, which can be seen in several of the examples that follow.","pos":[5149,5326],"source":" Attached properties have a specialized syntax in [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)], which can be seen in several of the examples that follow."},{"content":"One purpose of an attached property is to allow child elements to store unique values of a property that is actually defined by a parent element.","pos":[5333,5478]},{"content":"An application of this functionality is having child elements inform the parent how they wish to be presented in the <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph>, which is extremely useful for application layout.","pos":[5479,5712],"source":" An application of this functionality is having child elements inform the parent how they wish to be presented in the [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)], which is extremely useful for application layout."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Attached Properties Overview<ept id=\"p1\">](../advanced/attached-properties-overview.md)</ept>.","pos":[5713,5815],"source":" For more information, see [Attached Properties Overview](../advanced/attached-properties-overview.md)."},{"pos":[5866,5888],"content":"Derived Panel Elements","linkify":"Derived Panel Elements","nodes":[{"content":"Derived Panel Elements","pos":[0,22]}]},{"content":"Many objects derive from <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph>, but not all of them are intended for use as root layout providers.","pos":[5892,6021],"source":"Many objects derive from <xref:System.Windows.Controls.Panel>, but not all of them are intended for use as root layout providers."},{"content":"There are six defined panel classes (<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph>, and <ph id=\"ph6\">&lt;xref:System.Windows.Controls.WrapPanel&gt;</ph>) that are designed specifically for creating application <ph id=\"ph7\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.","pos":[6022,6445],"source":" There are six defined panel classes (<xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Controls.DockPanel>, <xref:System.Windows.Controls.Grid>, <xref:System.Windows.Controls.StackPanel>, <xref:System.Windows.Controls.VirtualizingStackPanel>, and <xref:System.Windows.Controls.WrapPanel>) that are designed specifically for creating application [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]."},{"content":"Each panel element encapsulates its own special functionality, as seen in the following table.","pos":[6452,6546]},{"content":"Element Name","pos":[6553,6565]},{"content":"UI Panel?","pos":[6566,6575]},{"content":"Description","pos":[6576,6587]},{"content":"Yes","pos":[6687,6690]},{"pos":[6691,6837],"content":"Defines an area within which you can explicitly position child elements by coordinates relative to the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> area.","source":"Defines an area within which you can explicitly position child elements by coordinates relative to the <xref:System.Windows.Controls.Canvas> area."},{"content":"Yes","pos":[6883,6886]},{"content":"Defines an area within which you can arrange child elements either horizontally or vertically, relative to each other.","pos":[6887,7005]},{"content":"Yes","pos":[7046,7049]},{"content":"Defines a flexible grid area consisting of columns and rows.","pos":[7050,7110]},{"content":"Child elements of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> can be positioned precisely using the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> property.","pos":[7111,7263],"source":" Child elements of a <xref:System.Windows.Controls.Grid> can be positioned precisely using the <xref:System.Windows.FrameworkElement.Margin%2A> property."},{"content":"Yes","pos":[7310,7313]},{"content":"Arranges child elements into a single line that can be oriented horizontally or vertically.","pos":[7314,7405]},{"content":"No","pos":[7461,7463]},{"pos":[7464,7545],"content":"Handles the layout of tab buttons in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TabControl&gt;</ph>.","source":"Handles the layout of tab buttons in a <xref:System.Windows.Controls.TabControl>."},{"content":"No","pos":[7613,7615]},{"pos":[7616,7689],"content":"Arranges content within a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ToolBar&gt;</ph> control.","source":"Arranges content within a <xref:System.Windows.Controls.ToolBar> control."},{"content":"No","pos":[7748,7750]},{"pos":[7751,7869],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.UniformGrid&gt;</ph> is used to arrange children in a grid with all equal cell sizes.","source":"<xref:System.Windows.Controls.Primitives.UniformGrid> is used to arrange children in a grid with all equal cell sizes."},{"content":"No","pos":[7923,7925]},{"content":"Provides a base class for panels that can \"virtualize\" their children collection.","pos":[7926,8007]},{"content":"Yes","pos":[8066,8069]},{"content":"Arranges and virtualizes content on a single line oriented horizontally or vertically.","pos":[8070,8156]},{"content":"Yes","pos":[8202,8205]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.WrapPanel&gt;</ph> positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box.","pos":[8206,8383],"source":"<xref:System.Windows.Controls.WrapPanel> positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box."},{"content":"Subsequent ordering happens sequentially from top to bottom or right to left, depending on the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.WrapPanel.Orientation%2A&gt;</ph> property.","pos":[8384,8557],"source":" Subsequent ordering happens sequentially from top to bottom or right to left, depending on the value of the <xref:System.Windows.Controls.WrapPanel.Orientation%2A> property."},{"pos":[8609,8630],"content":"User Interface Panels","linkify":"User Interface Panels","nodes":[{"content":"User Interface Panels","pos":[0,21]}]},{"content":"There are six panel classes available in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> that are optimized to support <ph id=\"ph2\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> scenarios: <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.Windows.Controls.WrapPanel&gt;</ph>.","pos":[8634,9127],"source":"There are six panel classes available in [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] that are optimized to support [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] scenarios: <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Controls.DockPanel>, <xref:System.Windows.Controls.Grid>, <xref:System.Windows.Controls.StackPanel>, <xref:System.Windows.Controls.VirtualizingStackPanel>, and <xref:System.Windows.Controls.WrapPanel>."},{"content":"These panel elements are easy to use, versatile, and extensible enough for most applications.","pos":[9128,9221]},{"content":"Each derived <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element treats sizing constraints differently.","pos":[9228,9324],"source":"Each derived <xref:System.Windows.Controls.Panel> element treats sizing constraints differently."},{"content":"Understanding how a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> handles constraints in either the horizontal or vertical direction can make layout more predictable.","pos":[9325,9482],"source":" Understanding how a <xref:System.Windows.Controls.Panel> handles constraints in either the horizontal or vertical direction can make layout more predictable."},{"pos":[9489,9503],"content":"<bpt id=\"p1\">**</bpt>Panel Name<ept id=\"p1\">**</ept>","source":"**Panel Name**"},{"pos":[9504,9519],"content":"<bpt id=\"p1\">**</bpt>x-Dimension<ept id=\"p1\">**</ept>","source":"**x-Dimension**"},{"pos":[9520,9535],"content":"<bpt id=\"p1\">**</bpt>y-Dimension<ept id=\"p1\">**</ept>","source":"**y-Dimension**"},{"content":"Constrained to content","pos":[9649,9671]},{"content":"Constrained to content","pos":[9672,9694]},{"content":"Constrained","pos":[9740,9751]},{"content":"Constrained","pos":[9752,9763]},{"pos":[9768,9832],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> (Vertical Orientation)","source":"<xref:System.Windows.Controls.StackPanel> (Vertical Orientation)"},{"content":"Constrained","pos":[9833,9844]},{"content":"Constrained to content","pos":[9845,9867]},{"pos":[9872,9938],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> (Horizontal Orientation)","source":"<xref:System.Windows.Controls.StackPanel> (Horizontal Orientation)"},{"content":"Constrained to content","pos":[9939,9961]},{"content":"Constrained","pos":[9962,9973]},{"content":"Constrained","pos":[10014,10025]},{"pos":[10026,10126],"content":"Constrained, except in cases where <ph id=\"ph1\">&lt;xref:System.Windows.GridUnitType.Auto&gt;</ph> apply to rows and columns","source":"Constrained, except in cases where <xref:System.Windows.GridUnitType.Auto> apply to rows and columns"},{"content":"Constrained to content","pos":[10172,10194]},{"content":"Constrained to content","pos":[10195,10217]},{"content":"More detailed descriptions and usage examples of each of these elements can be found below.","pos":[10225,10316]},{"pos":[10378,10384],"content":"Canvas","linkify":"Canvas","nodes":[{"content":"Canvas","pos":[0,6]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> element enables positioning of content according to absolute <bpt id=\"p1\">*</bpt>x-<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>y-<ept id=\"p2\">*</ept>coordinates.","pos":[10388,10516],"source":"The <xref:System.Windows.Controls.Canvas> element enables positioning of content according to absolute *x-* and *y-*coordinates."},{"content":"Elements can be drawn in a unique location; or, if elements occupy the same coordinates, the order in which they appear in markup determines the order in which the elements are drawn.","pos":[10517,10700]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> provides the most flexible layout support of any <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel&gt;</ph>.","pos":[10707,10831],"source":"<xref:System.Windows.Controls.Canvas> provides the most flexible layout support of any <xref:System.Windows.Controls.Panel>."},{"content":"Height and Width properties are used to define the area of the canvas, and elements inside are assigned absolute coordinates relative to the area of the parent <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.","pos":[10832,11030],"source":" Height and Width properties are used to define the area of the canvas, and elements inside are assigned absolute coordinates relative to the area of the parent <xref:System.Windows.Controls.Canvas>."},{"content":"Four attached properties, <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Canvas.Top%2A?displayProperty=nameWithType&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Canvas.Right%2A?displayProperty=nameWithType&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Canvas.Bottom%2A?displayProperty=nameWithType&gt;</ph>, allow fine control of object placement within a <ph id=\"ph5\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, allowing the developer to position and arrange elements precisely on the screen.","pos":[11031,11533],"source":" Four attached properties, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.Canvas.Top%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.Canvas.Right%2A?displayProperty=nameWithType> and <xref:System.Windows.Controls.Canvas.Bottom%2A?displayProperty=nameWithType>, allow fine control of object placement within a <xref:System.Windows.Controls.Canvas>, allowing the developer to position and arrange elements precisely on the screen."},{"pos":[11544,11572],"content":"ClipToBounds Within a Canvas","linkify":"ClipToBounds Within a Canvas","nodes":[{"content":"ClipToBounds Within a Canvas","pos":[0,28]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> can position child elements at any position on the screen, even at coordinates that are outside of its own defined <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>.","pos":[11576,11830],"source":"<xref:System.Windows.Controls.Canvas> can position child elements at any position on the screen, even at coordinates that are outside of its own defined <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.Width%2A>."},{"content":"Furthermore, <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> is not affected by the size of its children.","pos":[11831,11926],"source":" Furthermore, <xref:System.Windows.Controls.Canvas> is not affected by the size of its children."},{"content":"As a result, it is possible for a child element to overdraw other elements outside the bounding rectangle of the parent <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.","pos":[11927,12085],"source":" As a result, it is possible for a child element to overdraw other elements outside the bounding rectangle of the parent <xref:System.Windows.Controls.Canvas>."},{"content":"The default behavior of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> is to allow children to be drawn outside the bounds of the parent <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.","pos":[12086,12254],"source":" The default behavior of a <xref:System.Windows.Controls.Canvas> is to allow children to be drawn outside the bounds of the parent <xref:System.Windows.Controls.Canvas>."},{"content":"If this behavior is undesirable, the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph> property can be set to <ph id=\"ph2\">`true`</ph>.","pos":[12255,12370],"source":" If this behavior is undesirable, the <xref:System.Windows.UIElement.ClipToBounds%2A> property can be set to `true`."},{"content":"This causes <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> to clip to its own size.","pos":[12371,12445],"source":" This causes <xref:System.Windows.Controls.Canvas> to clip to its own size."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> is the only layout element that allows children to be drawn outside its bounds.","pos":[12446,12563],"source":"<xref:System.Windows.Controls.Canvas> is the only layout element that allows children to be drawn outside its bounds."},{"pos":[12570,12703],"content":"This behavior is graphically illustrated in the <bpt id=\"p1\">[</bpt>Width Properties Comparison Sample<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=160050)</ept>.","source":"This behavior is graphically illustrated in the [Width Properties Comparison Sample](https://go.microsoft.com/fwlink/?LinkID=160050)."},{"pos":[12714,12741],"content":"Defining and Using a Canvas","linkify":"Defining and Using a Canvas","nodes":[{"content":"Defining and Using a Canvas","pos":[0,27]}]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> can be instantiated simply by using <ph id=\"ph2\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph> or code.","pos":[12745,12899],"source":"A <xref:System.Windows.Controls.Canvas> can be instantiated simply by using [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)] or code."},{"content":"The following example demonstrates how to use <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> to absolutely position content.","pos":[12900,13015],"source":" The following example demonstrates how to use <xref:System.Windows.Controls.Canvas> to absolutely position content."},{"content":"This code produces three 100-pixel squares.","pos":[13016,13059]},{"content":"The first square is red, and its top-left (<bpt id=\"p1\">*</bpt>x, y<ept id=\"p1\">*</ept>) position is specified as (0, 0).","pos":[13060,13143],"source":" The first square is red, and its top-left (*x, y*) position is specified as (0, 0)."},{"content":"The second square is green, and its top-left position is (100, 100), just below and to the right of the first square.","pos":[13144,13261]},{"content":"The third square is blue, and its top-left position is (50, 50), thus encompassing the lower-right quadrant of the first square and the upper-left quadrant of the second.","pos":[13262,13432]},{"content":"Because the third square is laid out last, it appears to be on top of the other two squaresâ€”that is, the overlapping portions assume the color of the third box.","pos":[13433,13593]},{"pos":[13961,14088],"content":"The compiled application yields a new <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that looks like this.","source":"The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this."},{"pos":[14095,14176],"content":"<bpt id=\"p1\">![</bpt>A typical Canvas Element.<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/panel-intro-canvas.PNG \"</bpt>panel_intro_canvas<ept id=\"p2\">\")</ept>","source":"![A typical Canvas Element.](./media/panel-intro-canvas.PNG \"panel_intro_canvas\")"},{"pos":[14241,14250],"content":"DockPanel","linkify":"DockPanel","nodes":[{"content":"DockPanel","pos":[0,9]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> element uses the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType&gt;</ph> attached property as set in child content elements to position content along the edges of a container.","pos":[14254,14496],"source":"The <xref:System.Windows.Controls.DockPanel> element uses the <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType> attached property as set in child content elements to position content along the edges of a container."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Dock.Top&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Dock.Bottom&gt;</ph>, it positions child elements above or below each other.","pos":[14497,14731],"source":" When <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Controls.Dock.Top> or <xref:System.Windows.Controls.Dock.Bottom>, it positions child elements above or below each other."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Dock.Left&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Dock.Right&gt;</ph>, it positions child elements to the left or right of each other.","pos":[14732,14975],"source":" When <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Controls.Dock.Left> or <xref:System.Windows.Controls.Dock.Right>, it positions child elements to the left or right of each other."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel.LastChildFill%2A&gt;</ph> property determines the position of the final element added as a child of a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph>.","pos":[14976,15155],"source":" The <xref:System.Windows.Controls.DockPanel.LastChildFill%2A> property determines the position of the final element added as a child of a <xref:System.Windows.Controls.DockPanel>."},{"content":"You can use <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> to position a group of related controls, such as a set of buttons.","pos":[15162,15281],"source":"You can use <xref:System.Windows.Controls.DockPanel> to position a group of related controls, such as a set of buttons."},{"content":"Alternately, you can use it to create a \"paned\" <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>, similar to that found in <ph id=\"ph2\">[!INCLUDE[TLA#tla_outlook](../../../../includes/tlasharptla-outlook-md.md)]</ph>.","pos":[15282,15500],"source":" Alternately, you can use it to create a \"paned\" [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)], similar to that found in [!INCLUDE[TLA#tla_outlook](../../../../includes/tlasharptla-outlook-md.md)]."},{"pos":[15511,15528],"content":"Sizing to Content","linkify":"Sizing to Content","nodes":[{"content":"Sizing to Content","pos":[0,17]}]},{"content":"If its <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> properties are not specified, <ph id=\"ph3\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> sizes to its content.","pos":[15532,15732],"source":"If its <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.Width%2A> properties are not specified, <xref:System.Windows.Controls.DockPanel> sizes to its content."},{"content":"The size can increase or decrease to accommodate the size of its child elements.","pos":[15733,15813]},{"content":"However, when these properties are specified and there is no longer room for the next specified child element, <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> does not display that child element or subsequent child elements and does not measure subsequent child elements.","pos":[15814,16078],"source":" However, when these properties are specified and there is no longer room for the next specified child element, <xref:System.Windows.Controls.DockPanel> does not display that child element or subsequent child elements and does not measure subsequent child elements."},{"pos":[16089,16102],"content":"LastChildFill","linkify":"LastChildFill","nodes":[{"content":"LastChildFill","pos":[0,13]}]},{"content":"By default, the last child of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> element will \"fill\" the remaining, unallocated space.","pos":[16106,16232],"source":"By default, the last child of a <xref:System.Windows.Controls.DockPanel> element will \"fill\" the remaining, unallocated space."},{"content":"If this behavior is not desired, set the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel.LastChildFill%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph>.","pos":[16233,16352],"source":" If this behavior is not desired, set the <xref:System.Windows.Controls.DockPanel.LastChildFill%2A> property to `false`."},{"pos":[16363,16393],"content":"Defining and Using a DockPanel","linkify":"Defining and Using a DockPanel","nodes":[{"content":"Defining and Using a DockPanel","pos":[0,30]}]},{"content":"The following example demonstrates how to partition space using a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph>.","pos":[16397,16504],"source":"The following example demonstrates how to partition space using a <xref:System.Windows.Controls.DockPanel>."},{"content":"Five <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Border&gt;</ph> elements are added as children of a parent <ph id=\"ph2\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph>.","pos":[16505,16632],"source":" Five <xref:System.Windows.Controls.Border> elements are added as children of a parent <xref:System.Windows.Controls.DockPanel>."},{"content":"Each uses a different positioning property of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> to partition space.","pos":[16633,16741],"source":" Each uses a different positioning property of a <xref:System.Windows.Controls.DockPanel> to partition space."},{"content":"The final element \"fills\" the remaining, unallocated space.","pos":[16742,16801]},{"pos":[17318,17445],"content":"The compiled application yields a new <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that looks like this.","source":"The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this."},{"pos":[17452,17543],"content":"<bpt id=\"p1\">![</bpt>A typical DockPanel scenario.<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/panel-intro-dockpanel.PNG \"</bpt>panel_intro_dockpanel<ept id=\"p2\">\")</ept>","source":"![A typical DockPanel scenario.](./media/panel-intro-dockpanel.PNG \"panel_intro_dockpanel\")"},{"pos":[17603,17607],"content":"Grid","linkify":"Grid","nodes":[{"content":"Grid","pos":[0,4]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element merges the functionality of an absolute positioning and tabular data control.","pos":[17611,17736],"source":"The <xref:System.Windows.Controls.Grid> element merges the functionality of an absolute positioning and tabular data control."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> enables you to easily position and style elements.","pos":[17737,17825],"source":" A <xref:System.Windows.Controls.Grid> enables you to easily position and style elements."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> allows you to define flexible row and column groupings, and even provides a mechanism to share sizing information between multiple <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> elements.","pos":[17826,18038],"source":"<xref:System.Windows.Controls.Grid> allows you to define flexible row and column groupings, and even provides a mechanism to share sizing information between multiple <xref:System.Windows.Controls.Grid> elements."},{"pos":[18049,18082],"content":"How is Grid Different from Table?","linkify":"How is Grid Different from Table?","nodes":[{"content":"How is Grid Different from Table?","pos":[0,33]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Documents.Table&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> share some common functionality, but each is best suited for different scenarios.","pos":[18086,18245],"source":"<xref:System.Windows.Documents.Table> and <xref:System.Windows.Controls.Grid> share some common functionality, but each is best suited for different scenarios."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Documents.Table&gt;</ph> is designed for use within flow content (see <bpt id=\"p1\">[</bpt>Flow Document Overview<ept id=\"p1\">](../advanced/flow-document-overview.md)</ept> for more information on flow content).","pos":[18246,18433],"source":" A <xref:System.Windows.Documents.Table> is designed for use within flow content (see [Flow Document Overview](../advanced/flow-document-overview.md) for more information on flow content)."},{"content":"Grids are best used inside of forms (basically anywhere outside of flow content).","pos":[18434,18515]},{"content":"Within a <ph id=\"ph1\">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Documents.Table&gt;</ph> supports flow content behaviors like pagination, column reflow, and content selection while a <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> does not.","pos":[18516,18748],"source":" Within a <xref:System.Windows.Documents.FlowDocument>, <xref:System.Windows.Documents.Table> supports flow content behaviors like pagination, column reflow, and content selection while a <xref:System.Windows.Controls.Grid> does not."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> on the other hand is best used outside of a <ph id=\"ph2\">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> for many reasons including <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> adds elements based on a row and column index, <ph id=\"ph4\">&lt;xref:System.Windows.Documents.Table&gt;</ph> does not.","pos":[18749,19033],"source":" A <xref:System.Windows.Controls.Grid> on the other hand is best used outside of a <xref:System.Windows.Documents.FlowDocument> for many reasons including <xref:System.Windows.Controls.Grid> adds elements based on a row and column index, <xref:System.Windows.Documents.Table> does not."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element allows layering of child content, allowing more than one element to exist within a single \"cell.\"","pos":[19034,19179],"source":" The <xref:System.Windows.Controls.Grid> element allows layering of child content, allowing more than one element to exist within a single \"cell.\""},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Documents.Table&gt;</ph> does not support layering.","pos":[19180,19244],"source":"<xref:System.Windows.Documents.Table> does not support layering."},{"content":"Child elements of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> can be absolutely positioned relative to the area of their \"cell\" boundaries.","pos":[19245,19378],"source":" Child elements of a <xref:System.Windows.Controls.Grid> can be absolutely positioned relative to the area of their \"cell\" boundaries."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Documents.Table&gt;</ph> does not support this feature.","pos":[19379,19447],"source":"<xref:System.Windows.Documents.Table> does not support this feature."},{"content":"Finally, a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> is lighter weight than a <ph id=\"ph2\">&lt;xref:System.Windows.Documents.Table&gt;</ph>.","pos":[19448,19558],"source":" Finally, a <xref:System.Windows.Controls.Grid> is lighter weight than a <xref:System.Windows.Documents.Table>."},{"pos":[19569,19604],"content":"Sizing Behavior of Columns and Rows","linkify":"Sizing Behavior of Columns and Rows","nodes":[{"content":"Sizing Behavior of Columns and Rows","pos":[0,35]}]},{"content":"Columns and rows defined within a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> can take advantage of <ph id=\"ph2\">&lt;xref:System.Windows.GridUnitType.Star&gt;</ph> sizing in order to distribute remaining space proportionally.","pos":[19608,19801],"source":"Columns and rows defined within a <xref:System.Windows.Controls.Grid> can take advantage of <xref:System.Windows.GridUnitType.Star> sizing in order to distribute remaining space proportionally."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.GridUnitType.Star&gt;</ph> is selected as the Height or Width of a row or column, that column or row receives a weighted proportion of remaining available space.","pos":[19802,19981],"source":" When <xref:System.Windows.GridUnitType.Star> is selected as the Height or Width of a row or column, that column or row receives a weighted proportion of remaining available space."},{"content":"This is in contrast to <ph id=\"ph1\">&lt;xref:System.Windows.GridUnitType.Auto&gt;</ph>, which will distribute space evenly based on the size of the content within a column or row.","pos":[19982,20137],"source":" This is in contrast to <xref:System.Windows.GridUnitType.Auto>, which will distribute space evenly based on the size of the content within a column or row."},{"content":"This value is expressed as <ph id=\"ph1\">`*`</ph> or <ph id=\"ph2\">`2*`</ph> when using <ph id=\"ph3\">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph>.","pos":[20138,20258],"source":" This value is expressed as `*` or `2*` when using [!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]."},{"content":"In the first case, the row or column would receive one times the available space, in the second case, two times, and so on.","pos":[20259,20382]},{"content":"By combining this technique to proportionally distribute space with a <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> value of <ph id=\"ph3\">`Stretch`</ph> it is possible to partition layout space by percentage of screen space.","pos":[20383,20669],"source":" By combining this technique to proportionally distribute space with a <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> value of `Stretch` it is possible to partition layout space by percentage of screen space."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> is the only layout panel that can distribute space in this manner.","pos":[20670,20772],"source":"<xref:System.Windows.Controls.Grid> is the only layout panel that can distribute space in this manner."},{"pos":[20783,20808],"content":"Defining and Using a Grid","linkify":"Defining and Using a Grid","nodes":[{"content":"Defining and Using a Grid","pos":[0,25]}]},{"pos":[20812,21070],"content":"The following example demonstrates how to build a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> similar to that found on the Run dialog available on the <ph id=\"ph2\">[!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)]</ph> Start menu.","source":"The following example demonstrates how to build a [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] similar to that found on the Run dialog available on the [!INCLUDE[TLA#tla_mswin](../../../../includes/tlasharptla-mswin-md.md)] Start menu."},{"pos":[21313,21440],"content":"The compiled application yields a new <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that looks like this.","source":"The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this."},{"pos":[21447,21524],"content":"<bpt id=\"p1\">![</bpt>A typical Grid Element.<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/avalon-run-dialog.PNG \"</bpt>avalon_run_dialog<ept id=\"p2\">\")</ept>","source":"![A typical Grid Element.](./media/avalon-run-dialog.PNG \"avalon_run_dialog\")"},{"pos":[21590,21600],"content":"StackPanel","linkify":"StackPanel","nodes":[{"content":"StackPanel","pos":[0,10]}]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> enables you to \"stack\" elements in an assigned direction.","pos":[21604,21705],"source":"A <xref:System.Windows.Controls.StackPanel> enables you to \"stack\" elements in an assigned direction."},{"content":"The default stack direction is vertical.","pos":[21706,21746]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.StackPanel.Orientation%2A&gt;</ph> property can be used to control content flow.","pos":[21747,21853],"source":" The <xref:System.Windows.Controls.StackPanel.Orientation%2A> property can be used to control content flow."},{"pos":[21864,21888],"content":"StackPanel vs. DockPanel","linkify":"StackPanel vs. DockPanel","nodes":[{"content":"StackPanel vs. DockPanel","pos":[0,24]}]},{"content":"Although <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> can also \"stack\" child elements, <ph id=\"ph2\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> do not produce analogous results in some usage scenarios.","pos":[21892,22119],"source":"Although <xref:System.Windows.Controls.DockPanel> can also \"stack\" child elements, <xref:System.Windows.Controls.DockPanel> and <xref:System.Windows.Controls.StackPanel> do not produce analogous results in some usage scenarios."},{"content":"For example, the order of child elements can affect their size in a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> but not in a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>.","pos":[22120,22284],"source":" For example, the order of child elements can affect their size in a <xref:System.Windows.Controls.DockPanel> but not in a <xref:System.Windows.Controls.StackPanel>."},{"content":"This is because <ph id=\"ph1\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> measures in the direction of stacking at <ph id=\"ph2\">&lt;xref:System.Double.PositiveInfinity&gt;</ph>, whereas <ph id=\"ph3\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> measures only the available size.","pos":[22285,22505],"source":" This is because <xref:System.Windows.Controls.StackPanel> measures in the direction of stacking at <xref:System.Double.PositiveInfinity>, whereas <xref:System.Windows.Controls.DockPanel> measures only the available size."},{"content":"The following example demonstrates this key difference.","pos":[22512,22567]},{"content":"The difference in rendering behavior can be seen in this image.","pos":[23058,23121]},{"pos":[23128,23243],"content":"<bpt id=\"p1\">![</bpt>Screenshot: StackPanel vs. DockPanel screenshot<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/layout-smiley-stackpanel.PNG \"</bpt>layout_smiley_stackpanel<ept id=\"p2\">\")</ept>","source":"![Screenshot: StackPanel vs. DockPanel screenshot](./media/layout-smiley-stackpanel.PNG \"layout_smiley_stackpanel\")"},{"pos":[23254,23285],"content":"Defining and Using a StackPanel","linkify":"Defining and Using a StackPanel","nodes":[{"content":"Defining and Using a StackPanel","pos":[0,31]}]},{"content":"The following example demonstrates how to use a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> to create a set of vertically-positioned buttons.","pos":[23289,23428],"source":"The following example demonstrates how to use a <xref:System.Windows.Controls.StackPanel> to create a set of vertically-positioned buttons."},{"content":"For horizontal positioning, set the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.StackPanel.Orientation%2A&gt;</ph> property to <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Orientation.Horizontal&gt;</ph>.","pos":[23429,23588],"source":" For horizontal positioning, set the <xref:System.Windows.Controls.StackPanel.Orientation%2A> property to <xref:System.Windows.Controls.Orientation.Horizontal>."},{"pos":[23855,23982],"content":"The compiled application yields a new <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that looks like this.","source":"The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this."},{"pos":[23989,24082],"content":"<bpt id=\"p1\">![</bpt>A typical StackPanel element.<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/panel-intro-stackpanel.PNG \"</bpt>panel_intro_stackpanel<ept id=\"p2\">\")</ept>","source":"![A typical StackPanel element.](./media/panel-intro-stackpanel.PNG \"panel_intro_stackpanel\")"},{"pos":[24161,24183],"content":"VirtualizingStackPanel","linkify":"VirtualizingStackPanel","nodes":[{"content":"VirtualizingStackPanel","pos":[0,22]}]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> also provides a variation of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> element that automatically \"virtualizes\" data-bound child content.","pos":[24187,24410],"source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] also provides a variation of the <xref:System.Windows.Controls.StackPanel> element that automatically \"virtualizes\" data-bound child content."},{"content":"In this context, the word virtualize refers to a technique by which a subset of elements are generated from a larger number of data items based upon which items are visible on-screen.","pos":[24411,24594]},{"content":"It is intensive, both in terms of memory and processor, to generate a large number of UI elements when only a few may be on the screen at a given time.","pos":[24595,24746]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> (through functionality provided by <ph id=\"ph2\">&lt;xref:System.Windows.Controls.VirtualizingPanel&gt;</ph>) calculates visible items and works with the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ItemContainerGenerator&gt;</ph> from an <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> (such as <ph id=\"ph5\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> or <ph id=\"ph6\">&lt;xref:System.Windows.Controls.ListView&gt;</ph>) to only create elements for visible items.","pos":[24747,25170],"source":"<xref:System.Windows.Controls.VirtualizingStackPanel> (through functionality provided by <xref:System.Windows.Controls.VirtualizingPanel>) calculates visible items and works with the <xref:System.Windows.Controls.ItemContainerGenerator> from an <xref:System.Windows.Controls.ItemsControl> (such as <xref:System.Windows.Controls.ListBox> or <xref:System.Windows.Controls.ListView>) to only create elements for visible items."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> element is automatically set as the items host for controls such as the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.","pos":[25177,25346],"source":"The <xref:System.Windows.Controls.VirtualizingStackPanel> element is automatically set as the items host for controls such as the <xref:System.Windows.Controls.ListBox>."},{"content":"When hosting a data bound collection, content is automatically virtualized, as long as the content is within the bounds of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>.","pos":[25347,25516],"source":" When hosting a data bound collection, content is automatically virtualized, as long as the content is within the bounds of a <xref:System.Windows.Controls.ScrollViewer>."},{"content":"This greatly improves performance when hosting many child items.","pos":[25517,25581]},{"content":"The following markup demonstrates how to use a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> as an items host.","pos":[25588,25706],"source":"The following markup demonstrates how to use a <xref:System.Windows.Controls.VirtualizingStackPanel> as an items host."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty?displayProperty=nameWithType&gt;</ph> attached property must be set to <ph id=\"ph2\">`true`</ph> (default) for virtualization to occur.","pos":[25707,25895],"source":" The <xref:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty?displayProperty=nameWithType> attached property must be set to `true` (default) for virtualization to occur."},{"pos":[26090,26099],"content":"WrapPanel","linkify":"WrapPanel","nodes":[{"content":"WrapPanel","pos":[0,9]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.WrapPanel&gt;</ph> is used to position child elements in sequential position from left to right, breaking content to the next line when it reaches the edge of its parent container.","pos":[26103,26305],"source":"<xref:System.Windows.Controls.WrapPanel> is used to position child elements in sequential position from left to right, breaking content to the next line when it reaches the edge of its parent container."},{"content":"Content can be oriented horizontally or vertically.","pos":[26306,26357]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.WrapPanel&gt;</ph> is useful for simple flowing <ph id=\"ph2\">[!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)]</ph> scenarios.","pos":[26358,26504],"source":"<xref:System.Windows.Controls.WrapPanel> is useful for simple flowing [!INCLUDE[TLA#tla_ui](../../../../includes/tlasharptla-ui-md.md)] scenarios."},{"content":"It can also be used to apply uniform sizing to all of its child elements.","pos":[26505,26578]},{"pos":[26585,26789],"content":"The following example demonstrates how to create a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.WrapPanel&gt;</ph> to display <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph> controls that wrap when they reach the edge of their container.","source":"The following example demonstrates how to create a <xref:System.Windows.Controls.WrapPanel> to display <xref:System.Windows.Controls.Button> controls that wrap when they reach the edge of their container."},{"pos":[27270,27397],"content":"The compiled application yields a new <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that looks like this.","source":"The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this."},{"pos":[27404,27486],"content":"<bpt id=\"p1\">![</bpt>A typical WrapPanel Element.<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/wrappanel-element.PNG \"</bpt>WrapPanel_Element<ept id=\"p2\">\")</ept>","source":"![A typical WrapPanel Element.](./media/wrappanel-element.PNG \"WrapPanel_Element\")"},{"pos":[27542,27563],"content":"Nested Panel Elements","linkify":"Nested Panel Elements","nodes":[{"content":"Nested Panel Elements","pos":[0,21]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements can be nested within each other in order to produce complex layouts.","pos":[27567,27681],"source":"<xref:System.Windows.Controls.Panel> elements can be nested within each other in order to produce complex layouts."},{"content":"This can prove very useful in situations where one <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> is ideal for a portion of a <ph id=\"ph2\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>, but may not meet the needs of a different portion of the <ph id=\"ph3\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.","pos":[27682,27992],"source":" This can prove very useful in situations where one <xref:System.Windows.Controls.Panel> is ideal for a portion of a [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)], but may not meet the needs of a different portion of the [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]."},{"content":"There is no practical limit to the amount of nesting that your application can support, however, it is generally best to limit your application to only use those panels that are actually necessary for your desired layout.","pos":[27999,28220]},{"content":"In many cases, a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Grid&gt;</ph> element can be used instead of nested panels due to its flexibility as a layout container.","pos":[28221,28364],"source":" In many cases, a <xref:System.Windows.Controls.Grid> element can be used instead of nested panels due to its flexibility as a layout container."},{"content":"This can increase performance in your application by keeping unnecessary elements out of the tree.","pos":[28365,28463]},{"content":"The following example demonstrates how to create a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that takes advantage of nested <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements in order to achieve a specific layout.","pos":[28470,28704],"source":"The following example demonstrates how to create a [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that takes advantage of nested <xref:System.Windows.Controls.Panel> elements in order to achieve a specific layout."},{"content":"In this particular case, a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> element is used to provide <ph id=\"ph2\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> structure, and nested <ph id=\"ph3\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> elements, a <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>, and a <ph id=\"ph5\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> are used to position child elements precisely within the parent <ph id=\"ph6\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph>.","pos":[28705,29130],"source":" In this particular case, a <xref:System.Windows.Controls.DockPanel> element is used to provide [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] structure, and nested <xref:System.Windows.Controls.StackPanel> elements, a <xref:System.Windows.Controls.Grid>, and a <xref:System.Windows.Controls.Canvas> are used to position child elements precisely within the parent <xref:System.Windows.Controls.DockPanel>."},{"pos":[29378,29505],"content":"The compiled application yields a new <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph> that looks like this.","source":"The compiled application yields a new [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)] that looks like this."},{"pos":[29512,29601],"content":"<bpt id=\"p1\">![</bpt>A UI that takes advantage of nested panels.<ept id=\"p1\">]</ept><bpt id=\"p2\">(./media/nested-panels.PNG \"</bpt>nested_panels<ept id=\"p2\">\")</ept>","source":"![A UI that takes advantage of nested panels.](./media/nested-panels.PNG \"nested_panels\")"},{"pos":[29657,29678],"content":"Custom Panel Elements","linkify":"Custom Panel Elements","nodes":[{"content":"Custom Panel Elements","pos":[0,21]}]},{"content":"While <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> provides an array of flexible layout controls, custom layout behaviors can also be achieved by overriding the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> methods.","pos":[29682,30008],"source":"While [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] provides an array of flexible layout controls, custom layout behaviors can also be achieved by overriding the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> and <xref:System.Windows.FrameworkElement.MeasureOverride%2A> methods."},{"content":"Custom sizing and positioning can be accomplished by defining new positioning behaviors within these override methods.","pos":[30009,30127]},{"pos":[30134,30444],"content":"Similarly, custom layout behaviors based on derived classes (such as <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>) can be defined by overriding their <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> methods.","source":"Similarly, custom layout behaviors based on derived classes (such as <xref:System.Windows.Controls.Canvas> or <xref:System.Windows.Controls.Grid>) can be defined by overriding their <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> and <xref:System.Windows.FrameworkElement.MeasureOverride%2A> methods."},{"content":"The following markup demonstrates how to create a custom <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element.","pos":[30451,30553],"source":"The following markup demonstrates how to create a custom <xref:System.Windows.Controls.Panel> element."},{"content":"This new <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Panel&gt;</ph>, defined as <ph id=\"ph2\">`PlotPanel`</ph>, supports the positioning of child elements through the use of hard-coded <bpt id=\"p1\">*</bpt>x-<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>y-<ept id=\"p2\">*</ept>coordinates.","pos":[30554,30723],"source":" This new <xref:System.Windows.Controls.Panel>, defined as `PlotPanel`, supports the positioning of child elements through the use of hard-coded *x-* and *y-*coordinates."},{"content":"In this example, a <ph id=\"ph1\">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> element (not shown) is positioned at plot point 50 (<bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept>), and 50 (<bpt id=\"p2\">*</bpt>y<ept id=\"p2\">*</ept>).","pos":[30724,30853],"source":" In this example, a <xref:System.Windows.Shapes.Rectangle> element (not shown) is positioned at plot point 50 (*x*), and 50 (*y*)."},{"pos":[31175,31327],"content":"To view a more complex custom panel implementation, see <bpt id=\"p1\">[</bpt>Create a Custom Content-Wrapping Panel Sample<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=159979)</ept>.","source":"To view a more complex custom panel implementation, see [Create a Custom Content-Wrapping Panel Sample](https://go.microsoft.com/fwlink/?LinkID=159979)."},{"pos":[31381,31415],"content":"Localization/Globalization Support","linkify":"Localization/Globalization Support","nodes":[{"content":"Localization/Globalization Support","pos":[0,34]}]},{"pos":[31419,31642],"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> supports a number of features that assist in the creation of localizable <ph id=\"ph2\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.","source":"[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] supports a number of features that assist in the creation of localizable [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]."},{"content":"All panel elements natively support the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> property, which can be used to dynamically re-flow content based on a user's locale or language settings.","pos":[31649,31850],"source":"All panel elements natively support the <xref:System.Windows.FrameworkElement.FlowDirection%2A> property, which can be used to dynamically re-flow content based on a user's locale or language settings."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph>.","pos":[31851,31933],"source":" For more information, see <xref:System.Windows.FrameworkElement.FlowDirection%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> property provides a mechanism that enables application developers to anticipate the needs of localized <ph id=\"ph2\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.","pos":[31940,32161],"source":"The <xref:System.Windows.Window.SizeToContent%2A> property provides a mechanism that enables application developers to anticipate the needs of localized [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]."},{"content":"Using the <ph id=\"ph1\">&lt;xref:System.Windows.SizeToContent.WidthAndHeight&gt;</ph> value of this property, a parent <ph id=\"ph2\">&lt;xref:System.Windows.Window&gt;</ph> always sizes dynamically to fit content and is not constrained by artificial height or width restrictions.","pos":[32162,32391],"source":" Using the <xref:System.Windows.SizeToContent.WidthAndHeight> value of this property, a parent <xref:System.Windows.Window> always sizes dynamically to fit content and is not constrained by artificial height or width restrictions."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Grid&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> are all good choices for localizable <ph id=\"ph4\">[!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]</ph>.","pos":[32398,32628],"source":"<xref:System.Windows.Controls.DockPanel>, <xref:System.Windows.Controls.Grid>, and <xref:System.Windows.Controls.StackPanel> are all good choices for localizable [!INCLUDE[TLA2#tla_ui](../../../../includes/tla2sharptla-ui-md.md)]."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> is not a good choice, however, because it positions content absolutely, making it difficult to localize.","pos":[32629,32771],"source":"<xref:System.Windows.Controls.Canvas> is not a good choice, however, because it positions content absolutely, making it difficult to localize."},{"pos":[32778,33101],"content":"For additional information on creating <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)]</ph> applications with localizable <ph id=\"ph2\">[!INCLUDE[TLA#tla_ui#plural](../../../../includes/tlasharptla-uisharpplural-md.md)]</ph>s, see the <bpt id=\"p1\">[</bpt>Use Automatic Layout Overview<ept id=\"p1\">](../advanced/use-automatic-layout-overview.md)</ept>.","source":"For additional information on creating [!INCLUDE[TLA2#tla_winclient](../../../../includes/tla2sharptla-winclient-md.md)] applications with localizable [!INCLUDE[TLA#tla_ui#plural](../../../../includes/tlasharptla-uisharpplural-md.md)]s, see the [Use Automatic Layout Overview](../advanced/use-automatic-layout-overview.md)."},{"pos":[33110,33118],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[33122,33237],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: My first WPF desktop application<ept id=\"p1\">](../getting-started/walkthrough-my-first-wpf-desktop-application.md)</ept>","source":"[Walkthrough: My first WPF desktop application](../getting-started/walkthrough-my-first-wpf-desktop-application.md)"},{"pos":[33240,33315],"content":"<bpt id=\"p1\">[</bpt>WPF Layout Gallery Sample<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=160054)</ept>","source":"[WPF Layout Gallery Sample](https://go.microsoft.com/fwlink/?LinkID=160054)"},{"pos":[33318,33349],"content":"<bpt id=\"p1\">[</bpt>Layout<ept id=\"p1\">](../advanced/layout.md)</ept>","source":"[Layout](../advanced/layout.md)"},{"pos":[33352,33429],"content":"<bpt id=\"p1\">[</bpt>WPF Controls Gallery Sample<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=160053)</ept>","source":"[WPF Controls Gallery Sample](https://go.microsoft.com/fwlink/?LinkID=160053)"},{"pos":[33432,33529],"content":"<bpt id=\"p1\">[</bpt>Alignment, Margins, and Padding Overview<ept id=\"p1\">](../advanced/alignment-margins-and-padding-overview.md)</ept>","source":"[Alignment, Margins, and Padding Overview](../advanced/alignment-margins-and-padding-overview.md)"},{"pos":[33532,33627],"content":"<bpt id=\"p1\">[</bpt>Create a Custom Content-Wrapping Panel Sample<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkID=159979)</ept>","source":"[Create a Custom Content-Wrapping Panel Sample](https://go.microsoft.com/fwlink/?LinkID=159979)"},{"pos":[33630,33705],"content":"<bpt id=\"p1\">[</bpt>Attached Properties Overview<ept id=\"p1\">](../advanced/attached-properties-overview.md)</ept>","source":"[Attached Properties Overview](../advanced/attached-properties-overview.md)"},{"pos":[33708,33785],"content":"<bpt id=\"p1\">[</bpt>Use Automatic Layout Overview<ept id=\"p1\">](../advanced/use-automatic-layout-overview.md)</ept>","source":"[Use Automatic Layout Overview](../advanced/use-automatic-layout-overview.md)"},{"pos":[33788,33864],"content":"<bpt id=\"p1\">[</bpt>Layout and Design<ept id=\"p1\">](../advanced/optimizing-performance-layout-and-design.md)</ept>","source":"[Layout and Design](../advanced/optimizing-performance-layout-and-design.md)"}]}