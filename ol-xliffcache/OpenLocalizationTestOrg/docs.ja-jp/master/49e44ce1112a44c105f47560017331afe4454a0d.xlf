<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="transaction-fundamentals.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49e44ce1112a44c105f47560017331afe4454a0d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\data\transactions\transaction-fundamentals.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">63f274cf5ef54edfbc7f8930df58ed4e66965286</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb8764cbcf1907e98e7d757e09bdf7424d7f8e9b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Transaction Fundamentals</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Transaction Fundamentals</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Transactions bind multiple tasks together.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, imagine that an application performs two tasks.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>First, it creates a new table in a database.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Next, it calls a specialized object to collect, format, and insert data into the new table.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These two tasks are related and even interdependent, such that you want to avoid creating a new table unless you can fill it with data.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Executing both tasks within the scope of a single transaction enforces the connection between them.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the second task fails, the first task is rolled back to a point before the new table was created.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To ensure predictable behavior, all transactions must possess the basic ACID properties (atomic, consistent, isolated, and durable).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These properties reinforce the role of mission-critical transactions as all-or-none propositions.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information on ACID, please see <bpt id="p1">[</bpt>ACID Properties<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=98791)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In summary, ACID guarantees that a set of related tasks either succeed or fail as a unit.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In transaction processing terminology, the transaction either commits or aborts.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For a transaction to commit, all participants must guarantee that any change to data will be permanent.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Changes must persist despite system crashes or other unforeseen events.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If even a single participant fails to make this guarantee, the entire transaction fails.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>All changes to data within the scope of the transaction are rolled back to a specific set point.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A transaction can be confined to a single data resource, such as a database or message queue.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this scenario, the local transaction is managed by the Transaction Manager provided by <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> , which generates performance gain.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Controlled by the data resource, these transactions are efficient and easy to manage.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Transactions can also span multiple data resources.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Distributed transactions give you the ability to incorporate several distinct operations occurring on different systems into a single pass or fail action.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this scenario, the transactions are coordinated by the Microsoft Distributed Transaction Coordinator (MSDTC) that resides in each system.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When you develop a transactional application using the classes provided by <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>, you do not need to worry about what kind of transactions you need, or the transaction manager involved.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure automatically manages these for you.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When you create a transaction, you can specify the isolation level that applies to the transaction.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The isolation level, defined by the <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel&gt;</ph> enum, determines what level of access other transactions will have to the data affected by your transaction.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can create transactions using ADO.NET, <ph id="ph1">&lt;xref:System.EnterpriseServices&gt;</ph>, or the transactional programming model provided by the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Features Provided by System.Transactions<ept id="p1">](../../../../docs/framework/data/transactions/features-provided-by-system-transactions.md)</ept> topic discusses the features that you can use to write a transactional application using the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Features Provided by System.Transactions<ept id="p1">](../../../../docs/framework/data/transactions/features-provided-by-system-transactions.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>