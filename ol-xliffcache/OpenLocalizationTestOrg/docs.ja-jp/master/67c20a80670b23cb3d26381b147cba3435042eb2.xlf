<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="drawing-objects-overview.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b2a8af3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67c20a80670b23cb3d26381b147cba3435042eb2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\graphics-multimedia\drawing-objects-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a0af666a48796f4243349141b3eab3420d49a2f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df409f7d7c7d90261f6f2f6d3cbf93a985f5ba97</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Drawing Objects Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Drawing Objects Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic introduces <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> objects and describes how to use them to efficiently draw shapes, bitmaps, text, and media.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> objects when you create clip art, paint with a <ph id="ph2">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph>, or use <ph id="ph3">&lt;xref:System.Windows.Media.Visual&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>What Is a Drawing Object?</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> object describes visible content, such as a shape, bitmap, video, or a line of text.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Different types of drawings describe different types of content.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following is a list of the different types of drawing objects.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.GeometryDrawing&gt;</ph> – Draws a shape.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.ImageDrawing&gt;</ph> – Draws an image.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.GlyphRunDrawing&gt;</ph> – Draws text.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph> – Plays an audio or video file.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> – Draws other drawings.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use a drawing group to combine other drawings into a single composite drawing.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> objects are versatile; there are many ways you can use a <ph id="ph2">&lt;xref:System.Windows.Media.Drawing&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can display it as an image by using a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingImage&gt;</ph> and an <ph id="ph2">&lt;xref:System.Windows.Controls.Image&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can use it with a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph> to paint an object, such as the <ph id="ph2">&lt;xref:System.Windows.Controls.Page.Background%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Controls.Page&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can use it to describe the appearance of a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use it to enumerate the contents of a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>WPF provides other types of objects that are capable of drawing shapes, bitmaps, text, and media.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, you can also use <ph id="ph1">&lt;xref:System.Windows.Shapes.Shape&gt;</ph> objects to draw shapes, and the <ph id="ph2">&lt;xref:System.Windows.Controls.MediaElement&gt;</ph> control provides another way to add video to your application.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>So when should you use <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> objects?</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When you can sacrifice framework level features to gain performance benefits or when you need <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> features.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> objects lack support for <bpt id="p1">[</bpt>Layout<ept id="p1">](../../../../docs/framework/wpf/advanced/layout.md)</ept>, input, and focus, they provide performance benefits that make them ideal for describing backgrounds, clip art, and for low-level drawing with <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because they are a type <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> object, <ph id="ph2">&lt;xref:System.Windows.Media.Drawing&gt;</ph> objects gain several special features, which include the following: they can be declared as <bpt id="p1">[</bpt>resources<ept id="p1">](../../../../docs/framework/wpf/advanced/xaml-resources.md)</ept>, shared among multiple objects, made read-only to improve performance, cloned, and made thread-safe.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information about the different features provided by <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects, see the <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Draw a Shape</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To draw a shape, you use a <ph id="ph1">&lt;xref:System.Windows.Media.GeometryDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A geometry drawing's <ph id="ph1">&lt;xref:System.Windows.Media.GeometryDrawing.Geometry%2A&gt;</ph> property describes the shape to draw, its <ph id="ph2">&lt;xref:System.Windows.Media.GeometryDrawing.Brush%2A&gt;</ph> property describes how the interior of the shape should be painted, and its <ph id="ph3">&lt;xref:System.Windows.Media.GeometryDrawing.Pen%2A&gt;</ph> property describes how its outline should be drawn.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Windows.Media.GeometryDrawing&gt;</ph> to draw a shape.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The shape is described by a <ph id="ph1">&lt;xref:System.Windows.Media.GeometryGroup&gt;</ph> and two <ph id="ph2">&lt;xref:System.Windows.Media.EllipseGeometry&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The shape's interior is painted with a <ph id="ph1">&lt;xref:System.Windows.Media.LinearGradientBrush&gt;</ph> and its outline is drawn with a <ph id="ph2">&lt;xref:System.Windows.Media.Brushes.Black%2A&gt;</ph> <ph id="ph3">&lt;xref:System.Windows.Media.Pen&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This example creates the following <ph id="ph1">&lt;xref:System.Windows.Media.GeometryDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A GeometryDrawing of two ellipses<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-geodraw.jpg "</bpt>graphicsmm_geodraw<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A GeometryDrawing</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#GeometryDrawingExampleInline<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/GeometryDrawingExample.cs#geometrydrawingexampleinline)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#GeometryDrawingExampleInline<ept id="p2">](../../../../samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/GeometryDrawingExample.xaml#geometrydrawingexampleinline)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For the complete example, see <bpt id="p1">[</bpt>Create a GeometryDrawing<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/how-to-create-a-geometrydrawing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Other <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> classes, such as <ph id="ph2">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> enable you to create more complex shapes by creating curves and arcs.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> objects, see the <bpt id="p1">[</bpt>Geometry Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information about other ways to draw shapes that don't use <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> objects, see <bpt id="p1">[</bpt>Shapes and Basic Drawing in WPF Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/shapes-and-basic-drawing-in-wpf-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Draw an Image</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To draw an image, you use an <ph id="ph1">&lt;xref:System.Windows.Media.ImageDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Media.ImageDrawing&gt;</ph> object's  <ph id="ph2">&lt;xref:System.Windows.Media.ImageDrawing.ImageSource%2A&gt;</ph> property describes the image to draw, and its <ph id="ph3">&lt;xref:System.Windows.Media.ImageDrawing.Rect%2A&gt;</ph> property defines the region where the image is drawn.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example draws an image into a rectangle located at (75,75) that is 100 by 100 pixel.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following illustration shows the <ph id="ph1">&lt;xref:System.Windows.Media.ImageDrawing&gt;</ph> created by the example.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A gray border was added to show the bounds of the <ph id="ph1">&lt;xref:System.Windows.Media.ImageDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A 100 by 100 ImageDrawing drawn at &amp;#40;75,75&amp;#41;<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-simple-imagedrawing-offset.png "</bpt>graphicsmm_simple_imagedrawing_offset<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A 100 by 100 ImageDrawing</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#ImageDrawing100by100Inline<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/ImageDrawingExample.cs#imagedrawing100by100inline)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#ImageDrawing100by100Inline<ept id="p2">](../../../../samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/ImageDrawingExample.xaml#imagedrawing100by100inline)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information about images, see the <bpt id="p1">[</bpt>Imaging Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/imaging-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Play Media (Code Only)</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Although you can declare a <ph id="ph1">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph>, you can only load and play its media using code.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To play video in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](../../../../includes/tlasharptla-xaml-md.md)]</ph>, use a <ph id="ph2">&lt;xref:System.Windows.Controls.MediaElement&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To play an audio or video file, you use a <ph id="ph1">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There are two ways to load and play media.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The first is to use a <ph id="ph1">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph> by themselves, and the second way is to create your own <ph id="ph3">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> to use with the <ph id="ph4">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When distributing media with your application, you cannot use a media file as a project resource, like you would an image.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In your project file, you must instead set the media type to <ph id="ph1">`Content`</ph> and set <ph id="ph2">`CopyToOutputDirectory`</ph> to <ph id="ph3">`PreserveNewest`</ph> or <ph id="ph4">`Always`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To play media without creating your own <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph>, you perform the following steps.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#VideoDrawingExampleInline1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#videodrawingexampleinline1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.MediaPlayer.Open%2A&gt;</ph> method to load the media file.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#VideoDrawingExampleInline2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#videodrawingexampleinline2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#VideoDrawingExampleInline3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#videodrawingexampleinline3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specify the size and location to draw the media by setting the <ph id="ph1">&lt;xref:System.Windows.Media.VideoDrawing.Rect%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#VideoDrawingExampleInline4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#videodrawingexampleinline4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.VideoDrawing.Player%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph> with the <ph id="ph3">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> you created.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#VideoDrawingExampleInline5<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#videodrawingexampleinline5)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.MediaPlayer.Play%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> to start playing the media.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#VideoDrawingExampleInline6<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#videodrawingexampleinline6)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> to play a video file once.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#VideoDrawingExampleInline<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#videodrawingexampleinline)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To gain additional timing control over the media, use a <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> enables you to specify whether the video should repeat.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To use a <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph>, you perform the following steps:</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Declare the <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> and set its timing behaviors.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#RepeatingVideoDrawingExampleInline1<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#repeatingvideodrawingexampleinline1)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Media.MediaClock&gt;</ph> from the <ph id="ph2">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#RepeatingVideoDrawingExampleInline2<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#repeatingvideodrawingexampleinline2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Windows.Media.MediaClock&gt;</ph> to set its <ph id="ph3">&lt;xref:System.Windows.Media.MediaPlayer.Clock%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#RepeatingVideoDrawingExampleInline3<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#repeatingvideodrawingexampleinline3)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph> and assign the <ph id="ph2">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.Media.VideoDrawing.Player%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#RepeatingVideoDrawingExampleInline4<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#repeatingvideodrawingexampleinline4)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Media.VideoDrawing&gt;</ph> to play a video repeatedly.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#RepeatingVideoDrawingExampleInline<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/VideoDrawingExample.cs#repeatingvideodrawingexampleinline)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Note that, when you use a <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph>, you use the interactive <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph> returned from the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Media.MediaClock&gt;</ph> to control media playback instead of the interactive methods of <ph id="ph5">&lt;xref:System.Windows.Media.MediaPlayer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Draw Text</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To draw text, you use a <ph id="ph1">&lt;xref:System.Windows.Media.GlyphRunDrawing&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Media.GlyphRun&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Windows.Media.GlyphRunDrawing&gt;</ph> to draw the text "Hello World".</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#GlyphRunDrawingExampleInline<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/GlyphRunDrawingExample.cs#glyphrundrawingexampleinline)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#GlyphRunDrawingExampleInline<ept id="p2">](../../../../samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/GlyphRunExample.xaml#glyphrundrawingexampleinline)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.GlyphRun&gt;</ph> is a low-level object intended for use with fixed-format document presentation and print scenarios.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A simpler way to draw text to the screen is to use a <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">&lt;xref:System.Windows.Media.GlyphRun&gt;</ph>, see the <bpt id="p1">[</bpt>Introduction to the GlyphRun Object and Glyphs Element<ept id="p1">](../../../../docs/framework/wpf/advanced/introduction-to-the-glyphrun-object-and-glyphs-element.md)</ept> overview.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Composite Drawings</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> enables you to combine multiple drawings into a single composite drawing.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>By using a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph>, you can combine shapes, images, and text into a single <ph id="ph2">&lt;xref:System.Windows.Media.Drawing&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> to combine two <ph id="ph2">&lt;xref:System.Windows.Media.GeometryDrawing&gt;</ph> objects and an <ph id="ph3">&lt;xref:System.Windows.Media.ImageDrawing&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This example produces the following output.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A DrawingGroup with multiple drawings<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-simple.jpg "</bpt>graphicsmm_simple<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A composite drawing</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#GraphicsMMSimpleDrawingGroupExample<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/DrawingGroupExample.cs#graphicsmmsimpledrawinggroupexample)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#GraphicsMMSimpleDrawingGroupExample<ept id="p2">](../../../../samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DrawingGroupExample.xaml#graphicsmmsimpledrawinggroupexample)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> also enables you to apply opacity masks, transforms, bitmap effects, and other operations to its contents.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> operations are applied in the following order: <ph id="ph2">&lt;xref:System.Windows.Media.DrawingGroup.OpacityMask%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.DrawingGroup.Opacity%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.DrawingGroup.BitmapEffect%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Media.DrawingGroup.ClipGeometry%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Media.DrawingGroup.GuidelineSet%2A&gt;</ph>, and then <ph id="ph7">&lt;xref:System.Windows.Media.DrawingGroup.Transform%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The following illustration shows the order in which <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> operations are applied.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>DrawingGroup order of operations<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphcismm-drawinggroup-order.png "</bpt>graphcismm_drawinggroup_order<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Order of DrawingGroup operations</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The following table describes the properties you can use to manipulate a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> object's contents.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Illustration</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Alters the opacity of selected portions of the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> contents.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Control the Opacity of a Drawing<ept id="p1">](http://msdn.microsoft.com/en-us/68580652-7d32-4d27-93cc-a5148cf4d5ee)</ept>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A DrawingGroup with an opacity mask<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-opmask.png "</bpt>graphicsmm_opmask<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Uniformly changes the opacity of the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> contents.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Use this property to make a <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> transparent or partially transparent.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Apply an Opacity Mask to a Drawing<ept id="p1">](http://msdn.microsoft.com/en-us/d77b420b-9be2-479c-a45e-82f4da30eb9f)</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>DrawingGroups with different opacity settings<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-opacity.png "</bpt>graphicsmm_opacity<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Applies a <ph id="ph1">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> contents.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Apply a BitmapEffect to a Drawing<ept id="p1">](http://msdn.microsoft.com/en-us/c5b1de83-8d09-47fb-96db-5f174471f4b5)</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>DrawingGroup with a BlurBitmapEffect<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-bitmap.png "</bpt>graphicsmm_bitmap<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Clips the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> contents to a region you describe using a <ph id="ph2">&lt;xref:System.Windows.Media.Geometry&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Clip a Drawing<ept id="p1">](http://msdn.microsoft.com/en-us/1f7d8a2c-c3c2-42cb-a542-e6796f9fb058)</ept> .</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>DrawingGroup with a defined clip region<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-clipgeom.png "</bpt>graphicsmm_clipgeom<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Snaps device independent pixels to device pixels along the specified guidelines.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This property is useful for ensuring that finely detailed graphics render sharply on low-DPI displays.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>Apply a GuidelineSet to a Drawing<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/how-to-apply-a-guidelineset-to-a-drawing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A DrawingGroup with and without a GuidelineSet<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-drawinggroup-guidelineset.png "</bpt>graphicsmm_drawinggroup_guidelineset<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Transforms the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> contents.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Apply a Transform to a Drawing<ept id="p1">](http://msdn.microsoft.com/en-us/0d525f2b-682d-4d67-9660-cf46929fbabd)</ept>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A rotated DrawingGroup<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-rotate.png "</bpt>graphicsmm_rotate<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Display a Drawing as an Image</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To display a <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> with an <ph id="ph2">&lt;xref:System.Windows.Controls.Image&gt;</ph> control, use a <ph id="ph3">&lt;xref:System.Windows.Media.DrawingImage&gt;</ph> as the <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> control's <ph id="ph5">&lt;xref:System.Windows.Controls.Image.Source%2A&gt;</ph> and set the <ph id="ph6">&lt;xref:System.Windows.Media.DrawingImage&gt;</ph> object's <ph id="ph7">&lt;xref:System.Windows.Media.DrawingImage.Drawing%2A?displayProperty=fullName&gt;</ph> property to the drawing you want to display.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingImage&gt;</ph> and an <ph id="ph2">&lt;xref:System.Windows.Controls.Image&gt;</ph> control to display a <ph id="ph3">&lt;xref:System.Windows.Media.GeometryDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This example produces the following output.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A GeometryDrawing of two ellipses<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-geodraw.jpg "</bpt>graphicsmm_geodraw<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A DrawingImage</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#DrawingImageExampleWholePage<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/DrawingImageExample.cs#drawingimageexamplewholepage)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#DrawingImageExampleWholePage<ept id="p2">](../../../../samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DrawingImageExample.xaml#drawingimageexamplewholepage)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Paint an Object with a Drawing</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph> is a type of brush that paints an area with a drawing object.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>You can use it to paint just about any graphical object with a drawing.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph> describes its <ph id="ph3">&lt;xref:System.Windows.Media.DrawingBrush.Drawing%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To render a <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph>, add it to the brush using the brush's <ph id="ph3">&lt;xref:System.Windows.Media.Drawing&gt;</ph> property and use the brush to paint a graphical object, such as a control or panel.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The following examples uses a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph> to paint the <ph id="ph2">&lt;xref:System.Windows.Shapes.Shape.Fill%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> with a pattern created from a <ph id="ph4">&lt;xref:System.Windows.Media.GeometryDrawing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This example produces the following output.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>A tiled DrawingBrush<ept id="p1">]</ept><bpt id="p2">(../../../../docs/framework/wpf/graphics-multimedia/media/graphicsmm-drawingbrush-geometrydrawing.png "</bpt>graphicsmm_drawingbrush_geometrydrawing<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A GeometryDrawing used with a DrawingBrush</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#DrawingBrushExampleWholePage<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/DrawingBrushExample.cs#drawingbrushexamplewholepage)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#DrawingBrushExampleWholePage<ept id="p2">](../../../../samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DrawingBrushExample.xaml#drawingbrushexamplewholepage)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph> class provides a variety of options for stretching and tiling its content.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">&lt;xref:System.Windows.Media.DrawingBrush&gt;</ph>, see the <bpt id="p1">[</bpt>Painting with Images, Drawings, and Visuals<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-images-drawings-and-visuals.md)</ept> overview.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Render a Drawing with a Visual</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> is a type of visual object designed to render a drawing.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Working directly at the visual layer is an option for developers who want to build a highly customized graphical environment, and is not described in this overview.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Using DrawingVisual Objects<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/using-drawingvisual-objects.md)</ept> overview.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>DrawingContext Objects</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> class enables you to populate a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> or a <ph id="ph3">&lt;xref:System.Windows.Media.Drawing&gt;</ph> with visual content.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Many such lower-level graphics objects use a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> because it describes graphical content very efficiently.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Although the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> draw methods appear similar to the draw methods of the <ph id="ph2">&lt;xref:System.Drawing.Graphics?displayProperty=fullName&gt;</ph> type, they are actually very different.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> is used with a retained mode graphics system, while the <ph id="ph2">&lt;xref:System.Drawing.Graphics?displayProperty=fullName&gt;</ph> type is used with an immediate mode graphics system.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>When you use a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> object's draw commands, you are actually storing a set of rendering instructions (although the exact storage mechanism depends on the type of object that supplies the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>) that will later be used by the graphics system; you are not drawing to the screen in real-time.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For more information about how the <ph id="ph1">[!INCLUDE[TLA#tla_wpf](../../../../includes/tlasharptla-wpf-md.md)]</ph> graphics system works, see the <bpt id="p1">[</bpt>WPF Graphics Rendering Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>You never directly instantiate a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>; you can, however, acquire a drawing context from certain methods, such as <ph id="ph2">&lt;xref:System.Windows.Media.DrawingGroup.Open%2A?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Media.DrawingVisual.RenderOpen%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Enumerate the Contents of a Visual</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>In addition to their other uses, <ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph> objects also provide an object model for enumerating the contents of a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDrawing%2A&gt;</ph> method to retrieve the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> value of a <ph id="ph3">&lt;xref:System.Windows.Media.Visual&gt;</ph> and enumerate it.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>DrawingMiscSnippets_snip#GraphicsMMRetrieveDrawings<ept id="p2">](../../../../samples/snippets/csharp/VS_Snippets_Wpf/DrawingMiscSnippets_snip/CSharp/EnumerateDrawingsExample.xaml.cs#graphicsmmretrievedrawings)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Drawing&gt;</ph></source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>2D Graphics and Imaging<ept id="p1">](../../../../docs/framework/wpf/advanced/optimizing-performance-2d-graphics-and-imaging.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Painting with Images, Drawings, and Visuals<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/painting-with-images-drawings-and-visuals.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Geometry Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shapes and Basic Drawing in WPF Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/shapes-and-basic-drawing-in-wpf-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WPF Graphics Rendering Overview<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](../../../../docs/framework/wpf/advanced/freezable-objects-overview.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/graphics-multimedia/drawings-how-to-topics.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>