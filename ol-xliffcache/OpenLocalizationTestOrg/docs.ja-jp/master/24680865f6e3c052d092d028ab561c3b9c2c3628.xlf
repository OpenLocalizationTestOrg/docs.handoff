<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="popup-overview.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-92d81eb" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24680865f6e3c052d092d028ab561c3b9c2c3628</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wpf\controls\popup-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6bf8d195b9027827d9a8e9e25a71faaa86848af</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">caa174baba3da8bbdbb5214ee99ee7c148879a50</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Popup Overview | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Popup Overview</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control provides a way to display content in a separate window that floats over the current application window relative to a designated element or screen coordinate.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic introduces the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control and provides information about its use.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>What Is a Popup?</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control displays content in a separate window relative to an element or point on the screen.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is visible, the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> does not automatically open when the mouse pointer moves over its parent object.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you want a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> to automatically open, use the <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Controls.ToolTipService&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ToolTip Overview<ept id="p1">](../../../../docs/framework/wpf/controls/tooltip-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating a Popup</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example shows how to define a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control that is the child element of a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Because a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> can have only one child element, this example places the text for the <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> controls in a <ph id="ph4">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The content of the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> appears in a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> control, which displays its text in a separate window that floats over the application window near the related <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Controls That Implement a Popup</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can build <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> controls into other controls.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following controls implement the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control for specific uses:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you want to create a tooltip for an element, use the <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTipService&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ToolTip Overview<ept id="p1">](../../../../docs/framework/wpf/controls/tooltip-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you want to create a context menu for an element, use the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ContextMenu Overview<ept id="p1">](../../../../docs/framework/wpf/controls/contextmenu-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you want to create a selection control that has a drop-down list box that can be shown or hidden, use the <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Expander&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you want to create a control that displays a header with a collapsible area that displays content, use the <ph id="ph1">&lt;xref:System.Windows.Controls.Expander&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Expander Overview<ept id="p1">](../../../../docs/framework/wpf/controls/expander-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Popup Behavior and Appearance</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control provides functionality that enables you to customize its behavior and appearance.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, you can set open and close behavior, animation, opacity and bitmap effects, and <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> size and position.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Open and Close Behavior</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control displays its content when the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> stays open until the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>However, you can change the default behavior by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you set this property to <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content window has mouse capture.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> loses mouse capture and the window closes when a mouse event occurs outside the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> window.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Opened&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.Closed&gt;</ph> events are raised when the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content window is open or closed.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Animation</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control has built-in support for the animations that are typically associated with behaviors like fade-in and slide-in.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can turn on these animations by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A&gt;</ph> property to a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PopupAnimation&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> animations to work correctly, you must set the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also apply animations like <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Opacity and Bitmap Effects</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.UIElement.Opacity%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control has no effect on its content.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content window is opaque.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To create a transparent <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The content of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> does not inherit bitmap effects, such as <ph id="ph2">&lt;xref:System.Windows.Media.Effects.DropShadowBitmapEffect&gt;</ph>, that you directly set on the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control or on any other element in the parent window.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For bitmap effects to appear on the content of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>, you must set the bitmap effect directly on its content.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, if the child of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>, set the bitmap effect on the <ph id="ph3">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Popup Size</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>By default, a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is automatically sized to its content.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When auto-sizing occurs, some bitmap effects may be hidden because the default size of the screen area that is defined for the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content does not provide enough space for the bitmap effects to display.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content can also be obscured when you set a <ph id="ph2">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> on the content.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In this scenario, some content might be hidden if the content of the transformed <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> extends beyond the area of the original <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If a bitmap effect or transform requires more space, you can define a margin around the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content in order to provide more area for the control.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Defining the Popup Position</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](../../../../docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is displayed on the screen, it does not reposition itself if its parent is repositioned.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Customizing Popup Placement</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can customize the placement of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control by specifying a set of coordinates that are relative to the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> where you want the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> to appear.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To customize placement, set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Then define a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback&gt;</ph> delegate that returns a set of possible placement points and primary axes (in order of preference) for the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The point that shows the largest part of the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is automatically selected.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>Specify a Custom Popup Position<ept id="p1">](../../../../docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Popup and the Visual Tree</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control does not have its own visual tree; it instead returns a size of 0 (zero) when the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.MeasureOverride%2A&gt;</ph> method for <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>However, when you set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> to <ph id="ph3">`true`</ph>, a new window with its own visual tree is created.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The new window contains the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph> content of <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The width and height of the new window cannot be larger than 75 percent of the width or height of the screen.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control maintains a reference to its <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph> content as a logical child.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When the new window is created, the content of <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> becomes a visual child of the window and remains the logical child of <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Conversely, <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> remains the logical parent of its <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph> content.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/controls/popup-how-to-topics.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How-to Topics<ept id="p1">](../../../../docs/framework/wpf/controls/tooltip-how-to-topics.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>