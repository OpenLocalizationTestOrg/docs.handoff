<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22eb9baf6c10a04d931a56e27de061740638abe9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\compiler-messages\cs1705.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae020ae5feb6199d66505620bec8c4f9ffab34d3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">493c883c4917aeb637d7854b555c376aafa9f16f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compiler Error CS1705 | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compiler Error CS1705</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Assembly 'AssemblyName1' uses 'TypeName' which has a higher version than referenced assembly 'AssemblyName2'</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You are accessing a type that has a higher version number than the version number in a referenced assembly.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Typically, this error is caused by the accidental use of two versions of the same assembly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, suppose that you have two assemblies, Asmb1 and Asmb2.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Assembly Asmb1 references version 1.0 of assembly Asmb2.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Assembly Asmb1 also uses a class <ph id="ph1">`MyClass`</ph> that was added to assembly Asmb2 in version 2.0.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The compiler has unification rules for binding references, and a reference to <ph id="ph1">`MyClass`</ph> in version 2.0 cannot be satisfied by version 1.0.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following more detailed example consists of four code modules:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Two DLLs that are identical except for a version attribute.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A third DLL that references the first two.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A client that references only version 1.0 of the identical DLLs, but accesses a class from version 2.0.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following code creates the first of the identical DLLs.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For information about how to generate a key file, see <bpt id="p1">[</bpt>/keyfile (C# Compiler Options)<ept id="p1">](../../../csharp/language-reference/compiler-options/keyfile-compiler-option.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following code defines version 2.0 of the assembly, as specified by the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following code references the two DLL versions that are defined in the preceding code.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AssemblyA`</ph> refers to the DLL created by CS1705a.cs (version 1.0).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AssemblyB`</ph> refers to the DLL created by CS1705b.cs (version 2.0).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`ClassC`</ph>, two methods are defined.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first, <ph id="ph1">`Return1A`</ph>, returns an object of type <ph id="ph2">`Class1A`</ph>, which is an alias for <ph id="ph3">`Class1`</ph> from version 1.0 of the DLL.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second, <ph id="ph1">`Return1B`</ph>, returns an object of type <ph id="ph2">`Class1B`</ph>, which is an alias for <ph id="ph3">`Class1`</ph> from version 2.0 of the DLL.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The definition of <ph id="ph1">`Return1A`</ph> creates a dependency on version 1.0; the definition of <ph id="ph2">`Return1B`</ph> creates a dependency on version 2.0.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following code generates compiler error CS1705.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It references the DLL created by CS1705a.cs (version 1.0).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>However, in the <ph id="ph1">`Main`</ph> method, the code accesses <ph id="ph2">`ClassC`</ph> from CS1705c.cs.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ClassC`</ph> uses a type that is defined in CS1705b.cs (version 2.0).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This causes compiler error CS1705 because the type has a version number for CS1705.dll that is higher than the referenced version of CS1705.dll.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can resolve the error in one of the following ways:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Update the code so that all files use the same version of the DLL.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Add a reference to version 2.0 of the DLL to CS1705d.cs by using the following command to compile:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Although the program compiles when you use this command, it still does not run.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To enable the program to run, you can provide an application configuration file that includes a <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>dependentAssembly&gt; element<ept id="p1">](../../../framework/configure-apps/file-schema/runtime/dependentassembly-element.md)</ept> that uses <bpt id="p2">[</bpt><ph id="ph2">\&lt;</ph>assemblyIdentity&gt;<ept id="p2">](../../../framework/configure-apps/file-schema/runtime/assemblyidentity-element-for-runtime.md)</ept> and <bpt id="p3">[</bpt><ph id="ph3">\&lt;</ph>codeBase&gt;<ept id="p3">](../../../framework/configure-apps/file-schema/runtime/codebase-element.md)</ept> child elements to specify the location of version 1.0 of the DLL.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about configuration files, see <bpt id="p1">[</bpt>Configuring Apps<ept id="p1">](../../../framework/configure-apps/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>extern alias<ept id="p1">](../../../csharp/language-reference/keywords/extern-alias.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>:: Operator<ept id="p1">](../../../csharp/language-reference/operators/namespace-alias-qualifer.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Command-line Building With csc.exe<ept id="p1">](../../../csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>