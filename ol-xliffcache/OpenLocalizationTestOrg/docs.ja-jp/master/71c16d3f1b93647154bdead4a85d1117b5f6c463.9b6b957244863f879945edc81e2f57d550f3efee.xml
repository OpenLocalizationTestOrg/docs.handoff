{"content":"---\ntitle: \"Extension Indexer Property (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.XmlPropertyExtensionIndexer\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Visual Basic code, accessing XML\"\n  - \"XML extension indexer [Visual Basic]\"\n  - \"extension indexer [Visual Basic]\"\n  - \"XML [Visual Basic], accessing\"\nms.assetid: a16a4b13-54be-432c-82b3-a87091464ada\ncaps.latest.revision: 22\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Extension Indexer Property (Visual Basic)\nProvides access to individual elements in a collection.  \n  \n## Syntax  \n  \n```  \n  \nobject(index)  \n```  \n  \n## Parts  \n  \n|Term|Definition|  \n|---|---|  \n|`object`|Required. A queryable collection. That is, a collection that implements <xref:System.Collections.Generic.IEnumerable%601> or <xref:System.Linq.IQueryable%601>.|  \n|(|Required. Denotes the start of the indexer property.|  \n|`index`|Required. An integer expression that specifies the zero-based position of an element of the collection.|  \n|)|Required. Denotes the end of the indexer property.|  \n  \n## Return Value  \n The object from the specified location in the collection, or `Nothing` if the index is out of range.  \n  \n## Remarks  \n You can use the extension indexer property to access individual elements in a collection. This indexer property is typically used on the output of XML axis properties. The XML child and XML descendent axis properties return collections of <xref:System.Xml.Linq.XElement> objects or an attribute value.  \n  \n The [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] compiler converts extension indexer properties to calls to the`ElementAtOrDefault` method. Unlike an array indexer, the`ElementAtOrDefault` method returns `Nothing` if the index is out of range. This behavior is useful when you cannot easily determine the number of elements in a collection.  \n  \n This indexer property is like an extension property for collections that implement <xref:System.Collections.Generic.IEnumerable%601> or <xref:System.Linq.IQueryable%601>: it is used only if the collection does not have an indexer or a default property.  \n  \n To access the value of the first element in a collection of <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute> objects, you can use the XML `Value` property. For more information, see [XML Value Property](../../../visual-basic/language-reference/xml-axis/xml-value-property.md).  \n  \n## Example  \n The following example shows how to use the extension indexer to access the second child node in a collection of <xref:System.Xml.Linq.XElement> objects. The collection is accessed by using the child axis property, which gets all child elements named `phone` in the `contact` object.  \n  \n [!code-vb[VbXMLSamples#24](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/extension-indexer-property_1.vb)]  \n  \n This code displays the following text:  \n  \n `Second phone number: 425-555-0145`  \n  \n## See Also  \n <xref:System.Xml.Linq.XElement>   \n [XML Axis Properties](../../../visual-basic/language-reference/xml-axis/xml-axis-properties.md)   \n [XML Literals](../../../visual-basic/language-reference/xml-literals/index.md)   \n [Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)   \n [XML Value Property](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)","nodes":[{"pos":[4,753],"embed":true,"restype":"x-metadata","content":"title: \"Extension Indexer Property (Visual Basic) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.XmlPropertyExtensionIndexer\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Visual Basic code, accessing XML\"\n  - \"XML extension indexer [Visual Basic]\"\n  - \"extension indexer [Visual Basic]\"\n  - \"XML [Visual Basic], accessing\"\nms.assetid: a16a4b13-54be-432c-82b3-a87091464ada\ncaps.latest.revision: 22\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"Extension Indexer Property (Visual Basic) | Microsoft Docs","nodes":[{"pos":[0,58],"content":"Extension Indexer Property (Visual Basic) | Microsoft Docs","nodes":[{"content":"Extension Indexer Property (Visual Basic) | Microsoft Docs","pos":[0,58]}]}],"path":["title"]}],"yml":true},{"pos":[760,801],"content":"Extension Indexer Property (Visual Basic)","linkify":"Extension Indexer Property (Visual Basic)","nodes":[{"content":"Extension Indexer Property (Visual Basic)","pos":[0,41]}]},{"content":"Provides access to individual elements in a collection.","pos":[802,857]},{"pos":[866,872],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[915,920],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Term","pos":[927,931]},{"content":"Definition","pos":[932,942]},{"content":"Required.","pos":[968,977]},{"content":"A queryable collection.","pos":[978,1001]},{"content":"That is, a collection that implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Linq.IQueryable%601&gt;</ph>.","pos":[1002,1127],"source":" That is, a collection that implements <xref:System.Collections.Generic.IEnumerable%601> or <xref:System.Linq.IQueryable%601>."},{"content":"(","pos":[1132,1133]},{"content":"Required.","pos":[1134,1143]},{"content":"Denotes the start of the indexer property.","pos":[1144,1186]},{"content":"Required.","pos":[1199,1208]},{"content":"An integer expression that specifies the zero-based position of an element of the collection.","pos":[1209,1302]},{"content":")","pos":[1307,1308]},{"content":"Required.","pos":[1309,1318]},{"content":"Denotes the end of the indexer property.","pos":[1319,1359]},{"pos":[1369,1381],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1385,1485],"content":"The object from the specified location in the collection, or <ph id=\"ph1\">`Nothing`</ph> if the index is out of range.","source":"The object from the specified location in the collection, or `Nothing` if the index is out of range."},{"pos":[1494,1501],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"You can use the extension indexer property to access individual elements in a collection.","pos":[1505,1594]},{"content":"This indexer property is typically used on the output of XML axis properties.","pos":[1595,1672]},{"content":"The XML child and XML descendent axis properties return collections of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects or an attribute value.","pos":[1673,1806],"source":" The XML child and XML descendent axis properties return collections of <xref:System.Xml.Linq.XElement> objects or an attribute value."},{"content":"The <ph id=\"ph1\">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compiler converts extension indexer properties to calls to the<ph id=\"ph2\">`ElementAtOrDefault`</ph> method.","pos":[1813,1997],"source":"The [!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)] compiler converts extension indexer properties to calls to the`ElementAtOrDefault` method."},{"content":"Unlike an array indexer, the<ph id=\"ph1\">`ElementAtOrDefault`</ph> method returns <ph id=\"ph2\">`Nothing`</ph> if the index is out of range.","pos":[1998,2101],"source":" Unlike an array indexer, the`ElementAtOrDefault` method returns `Nothing` if the index is out of range."},{"content":"This behavior is useful when you cannot easily determine the number of elements in a collection.","pos":[2102,2198]},{"content":"This indexer property is like an extension property for collections that implement <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Linq.IQueryable%601&gt;</ph>: it is used only if the collection does not have an indexer or a default property.","pos":[2205,2457],"source":"This indexer property is like an extension property for collections that implement <xref:System.Collections.Generic.IEnumerable%601> or <xref:System.Linq.IQueryable%601>: it is used only if the collection does not have an indexer or a default property."},{"content":"To access the value of the first element in a collection of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects, you can use the XML <ph id=\"ph3\">`Value`</ph> property.","pos":[2464,2639],"source":"To access the value of the first element in a collection of <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute> objects, you can use the XML `Value` property."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML Value Property<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept>.","pos":[2640,2760],"source":" For more information, see [XML Value Property](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)."},{"pos":[2769,2776],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to use the extension indexer to access the second child node in a collection of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.","pos":[2780,2932],"source":"The following example shows how to use the extension indexer to access the second child node in a collection of <xref:System.Xml.Linq.XElement> objects."},{"content":"The collection is accessed by using the child axis property, which gets all child elements named <ph id=\"ph1\">`phone`</ph> in the <ph id=\"ph2\">`contact`</ph> object.","pos":[2933,3062],"source":" The collection is accessed by using the child axis property, which gets all child elements named `phone` in the `contact` object."},{"content":"This code displays the following text:","pos":[3211,3249]},{"pos":[3300,3308],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph>","pos":[3312,3343],"source":"<xref:System.Xml.Linq.XElement> "},{"content":"<bpt id=\"p1\">[</bpt>XML Axis Properties<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/xml-axis-properties.md)</ept><ph id=\"ph1\"> </ph>","pos":[3348,3444],"source":"[XML Axis Properties](../../../visual-basic/language-reference/xml-axis/xml-axis-properties.md) "},{"content":"<bpt id=\"p1\">[</bpt>XML Literals<ept id=\"p1\">](../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[3448,3527],"source":"[XML Literals](../../../visual-basic/language-reference/xml-literals/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Creating XML in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept><ph id=\"ph1\"> </ph>","pos":[3531,3641],"source":"[Creating XML in Visual Basic](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md) "},{"content":"<bpt id=\"p1\">[</bpt>XML Value Property<ept id=\"p1\">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept>","pos":[3645,3738],"source":"[XML Value Property](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)"}]}