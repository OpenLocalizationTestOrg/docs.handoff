{"content":"---\ntitle: \"_EFN_StackTrace Function | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"_EFN_StackTrace\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"_EFN_StackTrace\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"_EFN_StackTrace function [.NET Framework debugging]\"\nms.assetid: caea7754-867c-4360-a65c-5ced4408fd9d\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 10\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# _EFN_StackTrace Function\nProvides a text representation of a managed stack trace and an array of `CONTEXT` records, one for each transition between unmanaged and managed code.  \n  \n## Syntax  \n  \n```  \nHRESULT CALLBACK _EFN_StackTrace(  \n    [in]  PDEBUG_CLIENT  Client,  \n    [out] WCHAR          wszTextOut[],  \n    [out] size_t         *puiTextLength,  \n    [out] LPVOID         pTransitionContexts,  \n    [out] size_t         *puiTransitionContextCount,  \n    [in]  size_t         uiSizeOfContext,  \n    [in]  DWORD          Flags  \n);  \n```  \n  \n#### Parameters  \n `Client`  \n [in] The client being debugged.  \n  \n `wszTextOut`  \n [out] The text representation of the stack trace.  \n  \n `puiTextLength`  \n [out] A pointer to the number of characters in `wszTextOut`.  \n  \n `pTransitionContexts`  \n [out] The array of transition contexts.  \n  \n `puiTransitionContextCount`  \n [out] A pointer to the number of transition contexts in the array.  \n  \n `uiSizeOfContext`  \n [in] The size of the context structure.  \n  \n `Flags`  \n [in] Set to either 0 or SOS_STACKTRACE_SHOWADDRESSES (0x01) to show the EBP register and the enter stack pointer (ESP) in front of each `module!functionname` line.  \n  \n## Remarks  \n The `_EFN_StackTrace` structure can be called from a WinDbg programmatic interface. Parameters are used as follows:  \n  \n-   If `wszTextOut` is null and `puiTextLength` is not null, the function returns the string length in `puiTextLength`.  \n  \n-   If `wszTextOut` is not null, the function stores text in `wszTextOut` up to the location indicated by `puiTextLength`. It returns successfully if there was enough room in the buffer, or returns E_OUTOFMEMORY if the buffer was not long enough.  \n  \n-   The transition portion of the function is ignored if `pTransitionContexts` and `puiTransitionContextCount` are both null. In this case, the function provides callers with text output of only the function names.  \n  \n-   If `pTransitionContexts` is null and `puiTransitionContextCount` is not null, the function returns the necessary number of context entries in `puiTransitionContextCount`.  \n  \n-   If `pTransitionContexts` is not null, the function treats it as an array of structures of length `puiTransitionContextCount`. The structure size is given by `uiSizeOfContext`, and must be the size of [SimpleContext](../../../../docs/framework/unmanaged-api/debugging/stacktrace-simplecontext-structure.md) or `CONTEXT` for the architecture.  \n  \n-   `wszTextOut` is written in the following format:  \n  \n    ```  \n    \"<ModuleName>!<Function Name>[+<offset in hex>]  \n    ...  \n    (TRANSITION)  \n    ...\"  \n    ```  \n  \n-   If the offset in hex is 0x0, no offset is written.  \n  \n-   If there is no managed code on the thread currently in context, the function returns SOS_E_NOMANAGEDCODE.  \n  \n-   The `Flags` parameter is either 0 or SOS_STACKTRACE_SHOWADDRESSES to see EBP and ESP in front of each `module!functionname` line. By default, it is 0.  \n  \n    ```  \n    #define SOS_STACKTRACE_SHOWADDRESSES   0x00000001  \n    ```  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** SOS_Stacktrace.h  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]  \n  \n## See Also  \n [Debugging Global Static Functions](../../../../docs/framework/unmanaged-api/debugging/debugging-global-static-functions.md)","nodes":[{"pos":[4,604],"embed":true,"restype":"x-metadata","content":"title: \"_EFN_StackTrace Function | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"_EFN_StackTrace\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"_EFN_StackTrace\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"_EFN_StackTrace function [.NET Framework debugging]\"\nms.assetid: caea7754-867c-4360-a65c-5ced4408fd9d\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 10\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"","nodes":[{"content":"_EFN_StackTrace Function | Microsoft Docs","nodes":[{"pos":[0,41],"content":"_EFN_StackTrace Function | Microsoft Docs","nodes":[{"content":"_EFN_StackTrace Function | Microsoft Docs","pos":[0,41]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[611,635],"content":"_EFN_StackTrace Function","linkify":"_EFN_StackTrace Function","nodes":[{"content":"_EFN_StackTrace Function","pos":[0,24]}]},{"pos":[636,786],"content":"Provides a text representation of a managed stack trace and an array of <ph id=\"ph1\">`CONTEXT`</ph> records, one for each transition between unmanaged and managed code.","source":"Provides a text representation of a managed stack trace and an array of `CONTEXT` records, one for each transition between unmanaged and managed code."},{"pos":[795,801],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1167,1177],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] The client being debugged.","pos":[1193,1224]},{"content":"[out] The text representation of the stack trace.","pos":[1247,1296]},{"content":"[out] A pointer to the number of characters in <ph id=\"ph1\">`wszTextOut`</ph>.","pos":[1322,1382],"source":"[out] A pointer to the number of characters in `wszTextOut`."},{"content":"[out] The array of transition contexts.","pos":[1414,1453]},{"content":"[out] A pointer to the number of transition contexts in the array.","pos":[1491,1557]},{"content":"[in] The size of the context structure.","pos":[1585,1624]},{"content":"[in] Set to either 0 or SOS_STACKTRACE_SHOWADDRESSES (0x01) to show the EBP register and the enter stack pointer (ESP) in front of each <ph id=\"ph1\">`module!functionname`</ph> line.","pos":[1642,1805],"source":"[in] Set to either 0 or SOS_STACKTRACE_SHOWADDRESSES (0x01) to show the EBP register and the enter stack pointer (ESP) in front of each `module!functionname` line."},{"pos":[1814,1821],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`_EFN_StackTrace`</ph> structure can be called from a WinDbg programmatic interface.","pos":[1825,1908],"source":"The `_EFN_StackTrace` structure can be called from a WinDbg programmatic interface."},{"content":"Parameters are used as follows:","pos":[1909,1940]},{"pos":[1950,2065],"content":"If <ph id=\"ph1\">`wszTextOut`</ph> is null and <ph id=\"ph2\">`puiTextLength`</ph> is not null, the function returns the string length in <ph id=\"ph3\">`puiTextLength`</ph>.","source":"If `wszTextOut` is null and `puiTextLength` is not null, the function returns the string length in `puiTextLength`."},{"content":"If <ph id=\"ph1\">`wszTextOut`</ph> is not null, the function stores text in <ph id=\"ph2\">`wszTextOut`</ph> up to the location indicated by <ph id=\"ph3\">`puiTextLength`</ph>.","pos":[2075,2193],"source":"If `wszTextOut` is not null, the function stores text in `wszTextOut` up to the location indicated by `puiTextLength`."},{"content":"It returns successfully if there was enough room in the buffer, or returns E_OUTOFMEMORY if the buffer was not long enough.","pos":[2194,2317]},{"content":"The transition portion of the function is ignored if <ph id=\"ph1\">`pTransitionContexts`</ph> and <ph id=\"ph2\">`puiTransitionContextCount`</ph> are both null.","pos":[2327,2448],"source":"The transition portion of the function is ignored if `pTransitionContexts` and `puiTransitionContextCount` are both null."},{"content":"In this case, the function provides callers with text output of only the function names.","pos":[2449,2537]},{"pos":[2547,2717],"content":"If <ph id=\"ph1\">`pTransitionContexts`</ph> is null and <ph id=\"ph2\">`puiTransitionContextCount`</ph> is not null, the function returns the necessary number of context entries in <ph id=\"ph3\">`puiTransitionContextCount`</ph>.","source":"If `pTransitionContexts` is null and `puiTransitionContextCount` is not null, the function returns the necessary number of context entries in `puiTransitionContextCount`."},{"content":"If <ph id=\"ph1\">`pTransitionContexts`</ph> is not null, the function treats it as an array of structures of length <ph id=\"ph2\">`puiTransitionContextCount`</ph>.","pos":[2727,2852],"source":"If `pTransitionContexts` is not null, the function treats it as an array of structures of length `puiTransitionContextCount`."},{"content":"The structure size is given by <ph id=\"ph1\">`uiSizeOfContext`</ph>, and must be the size of <bpt id=\"p1\">[</bpt>SimpleContext<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/stacktrace-simplecontext-structure.md)</ept> or <ph id=\"ph2\">`CONTEXT`</ph> for the architecture.","pos":[2853,3067],"source":" The structure size is given by `uiSizeOfContext`, and must be the size of [SimpleContext](../../../../docs/framework/unmanaged-api/debugging/stacktrace-simplecontext-structure.md) or `CONTEXT` for the architecture."},{"pos":[3077,3125],"content":"<ph id=\"ph1\">`wszTextOut`</ph> is written in the following format:","source":"`wszTextOut` is written in the following format:"},{"content":"If the offset in hex is 0x0, no offset is written.","pos":[3252,3302]},{"content":"If there is no managed code on the thread currently in context, the function returns SOS_E_NOMANAGEDCODE.","pos":[3312,3417]},{"content":"The <ph id=\"ph1\">`Flags`</ph> parameter is either 0 or SOS_STACKTRACE_SHOWADDRESSES to see EBP and ESP in front of each <ph id=\"ph2\">`module!functionname`</ph> line.","pos":[3427,3556],"source":"The `Flags` parameter is either 0 or SOS_STACKTRACE_SHOWADDRESSES to see EBP and ESP in front of each `module!functionname` line."},{"content":"By default, it is 0.","pos":[3557,3577]},{"pos":[3665,3677],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[3681,3785],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[3792,3820],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> SOS_Stacktrace.h","source":"**Header:** SOS_Stacktrace.h"},{"pos":[3827,3855],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept>","source":"**.NET Framework Versions:**"},{"pos":[3944,3952],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[3956,4080],"content":"<bpt id=\"p1\">[</bpt>Debugging Global Static Functions<ept id=\"p1\">](../../../../docs/framework/unmanaged-api/debugging/debugging-global-static-functions.md)</ept>","source":"[Debugging Global Static Functions](../../../../docs/framework/unmanaged-api/debugging/debugging-global-static-functions.md)"}]}