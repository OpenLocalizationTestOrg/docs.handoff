{"content":"---\ntitle: \"How to: Author Composite Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"UserControl class, creating composite controls\"\n  - \"user controls [Windows Forms], creating\"\n  - \"user controls [Windows Forms], inheriting from\"\n  - \"composite controls, creating\"\nms.assetid: 79c9cf05-5ab6-4a18-886d-88a64748b098\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"\n---\n# How to: Author Composite Controls\nComposite controls can be employed in many ways. You can author them as part of a Windows desktop application project, and use them only on forms in the project. Or you can author them in a Windows Control Library project, compile the project into an assembly, and use the controls in other projects. You can even inherit from them, and use visual inheritance to customize them quickly for special purposes.  \n  \n> [!NOTE]\n>  If you want to author a composite control to use on Web Forms, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  \n>   \n>  The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3).  \n  \n### To author a composite control  \n  \n1.  Open a new **Windows Application** project called `DemoControlHost`.  \n  \n2.  On the **Project**menu, click **Add User Control**.  \n  \n3.  In the **Add New Item** dialog box, give the class file (.vb or .cs file) the name you want the composite control to have.  \n  \n4.  Click the **Add** button to create the class file for the composite control.  \n  \n5.  Add controls from the **Toolbox** to the composite control surface.  \n  \n6.  Place code in event procedures, to handle events raised by the composite control or by its constituent controls.  \n  \n7.  Close the designer for the composite control, and save the file when you are prompted.  \n  \n8.  On the **Build** menu, click **Build Solution**.  \n  \n     The project must be built in order for custom controls to appear in the **Toolbox**.  \n  \n9. Use the **DemoControlHost** tab of the **Toolbox** to add instances of your control to `Form1`.  \n  \n### To author a control class library  \n  \n1.  Open a new **Windows Control Library** project.  \n  \n     By default, the project contains a composite control.  \n  \n2.  Add controls and code as described in the procedure above.  \n  \n3.  Choose a control you do not want inheriting classes to change, and set the **Modifiers** property of this control to **Private**.  \n  \n4.  Build the DLL.  \n  \n### To inherit from a composite control in a control class library  \n  \n1.  On the **File** menu, point to **Add** and select **New Project** to add a new **Windows Application** project to the solution.  \n  \n2.  In **Solution Explorer**, right-click the **References** folder for the new project and choose **Add Reference** to open the **Add Reference** dialog box.  \n  \n3.  Select the **Projects** tab and double-click your control library project.  \n  \n4.  On the **Build** menu, click **Build Solution**.  \n  \n5.  In **Solution Explorer**, right-click your control library project and select **Add New Item** from the shortcut menu.  \n  \n6.  Select the **Inherited User Control** template from the **Add New Item** dialog box.  \n  \n7.  In the **Inheritance Picker** dialog box, double-click the control you want to inherit from.  \n  \n     A new control is added to your project.  \n  \n8.  Open the visual designer for the new control and add additional constituent controls.  \n  \n     You can see the constituent controls that were inherited from the composite control in your DLL, and you can alter the properties of controls whose **Modifiers** property is **Public**. You cannot change the properties of the control whose **Modifiers** property is **Private**.  \n  \n## See Also  \n [Walkthrough: Authoring a Composite Control with Visual Basic](../../../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-basic.md)   \n [Walkthrough: Authoring a Composite Control with Visual C#](../../../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-csharp.md)   \n [Walkthrough: Inheriting from a Windows Forms Control with Visual Basic](../../../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-basic.md)   \n [Walkthrough: Inheriting from a Windows Forms Control with Visual C#](../../../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-csharp.md)   \n [Control Type Recommendations](../../../../docs/framework/winforms/controls/control-type-recommendations.md)   \n [How to: Author Controls for Windows Forms](../../../../docs/framework/winforms/controls/how-to-author-controls-for-windows-forms.md)   \n [Varieties of Custom Controls](../../../../docs/framework/winforms/controls/varieties-of-custom-controls.md)","nodes":[{"pos":[4,602],"nodes":[{"content":"How to: Author Composite Controls | Microsoft Docs","nodes":[{"pos":[0,50],"content":"How to: Author Composite Controls | Microsoft Docs","nodes":[{"content":"How to: Author Composite Controls | Microsoft Docs","pos":[0,50]}]}],"pos":[6,59],"yaml":true}],"content":"title: \"How to: Author Composite Controls | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-winforms\"\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\ndev_langs: \n  - \"jsharp\"\nhelpviewer_keywords: \n  - \"UserControl class, creating composite controls\"\n  - \"user controls [Windows Forms], creating\"\n  - \"user controls [Windows Forms], inheriting from\"\n  - \"composite controls, creating\"\nms.assetid: 79c9cf05-5ab6-4a18-886d-88a64748b098\ncaps.latest.revision: 11\nauthor: dotnet-bot\nms.author: dotnetcontent\nmanager: \"wpickett\"","yamlblock":true},{"pos":[609,642],"content":"How to: Author Composite Controls","linkify":"How to: Author Composite Controls","nodes":[{"content":"How to: Author Composite Controls","pos":[0,33]}]},{"content":"Composite controls can be employed in many ways.","pos":[643,691]},{"content":"You can author them as part of a Windows desktop application project, and use them only on forms in the project.","pos":[692,804]},{"content":"Or you can author them in a Windows Control Library project, compile the project into an assembly, and use the controls in other projects.","pos":[805,943]},{"content":"You can even inherit from them, and use visual inheritance to customize them quickly for special purposes.","pos":[944,1050]},{"pos":[1058,1252],"content":"[!NOTE]\n If you want to author a composite control to use on Web Forms, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).","leadings":["","> "],"nodes":[{"content":"If you want to author a composite control to use on Web Forms, see <bpt id=\"p1\">[</bpt>Developing Custom ASP.NET Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>.","pos":[9,192],"source":"If you want to author a composite control to use on Web Forms, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)."}]},{"content":"The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition.","pos":[1263,1393]},{"content":"To change your settings, choose <bpt id=\"p1\">**</bpt>Import and Export Settings<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> menu.","pos":[1394,1479],"source":" To change your settings, choose **Import and Export Settings** on the **Tools** menu."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Customizing Development Settings in Visual Studio<ept id=\"p1\">](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)</ept>.","pos":[1480,1628],"source":" For more information, see [Customizing Development Settings in Visual Studio](http://msdn.microsoft.com/en-us/22c4debb-4e31-47a8-8f19-16f328d7dcd3)."},{"pos":[1638,1667],"content":"To author a composite control","linkify":"To author a composite control","nodes":[{"content":"To author a composite control","pos":[0,29]}]},{"pos":[1677,1745],"content":"Open a new <bpt id=\"p1\">**</bpt>Windows Application<ept id=\"p1\">**</ept> project called <ph id=\"ph1\">`DemoControlHost`</ph>.","source":"Open a new **Windows Application** project called `DemoControlHost`."},{"pos":[1755,1806],"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept>menu, click <bpt id=\"p2\">**</bpt>Add User Control<ept id=\"p2\">**</ept>.","source":"On the **Project**menu, click **Add User Control**."},{"pos":[1816,1938],"content":"In the <bpt id=\"p1\">**</bpt>Add New Item<ept id=\"p1\">**</ept> dialog box, give the class file (.vb or .cs file) the name you want the composite control to have.","source":"In the **Add New Item** dialog box, give the class file (.vb or .cs file) the name you want the composite control to have."},{"pos":[1948,2024],"content":"Click the <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept> button to create the class file for the composite control.","source":"Click the **Add** button to create the class file for the composite control."},{"pos":[2034,2101],"content":"Add controls from the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept> to the composite control surface.","source":"Add controls from the **Toolbox** to the composite control surface."},{"content":"Place code in event procedures, to handle events raised by the composite control or by its constituent controls.","pos":[2111,2223]},{"content":"Close the designer for the composite control, and save the file when you are prompted.","pos":[2233,2319]},{"pos":[2329,2377],"content":"On the <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Build Solution<ept id=\"p2\">**</ept>.","source":"On the **Build** menu, click **Build Solution**."},{"pos":[2388,2472],"content":"The project must be built in order for custom controls to appear in the <bpt id=\"p1\">**</bpt>Toolbox<ept id=\"p1\">**</ept>.","source":"The project must be built in order for custom controls to appear in the **Toolbox**."},{"pos":[2481,2576],"content":"Use the <bpt id=\"p1\">**</bpt>DemoControlHost<ept id=\"p1\">**</ept> tab of the <bpt id=\"p2\">**</bpt>Toolbox<ept id=\"p2\">**</ept> to add instances of your control to <ph id=\"ph1\">`Form1`</ph>.","source":"Use the **DemoControlHost** tab of the **Toolbox** to add instances of your control to `Form1`."},{"pos":[2586,2619],"content":"To author a control class library","linkify":"To author a control class library","nodes":[{"content":"To author a control class library","pos":[0,33]}]},{"pos":[2629,2676],"content":"Open a new <bpt id=\"p1\">**</bpt>Windows Control Library<ept id=\"p1\">**</ept> project.","source":"Open a new **Windows Control Library** project."},{"content":"By default, the project contains a composite control.","pos":[2687,2740]},{"content":"Add controls and code as described in the procedure above.","pos":[2750,2808]},{"pos":[2818,2947],"content":"Choose a control you do not want inheriting classes to change, and set the <bpt id=\"p1\">**</bpt>Modifiers<ept id=\"p1\">**</ept> property of this control to <bpt id=\"p2\">**</bpt>Private<ept id=\"p2\">**</ept>.","source":"Choose a control you do not want inheriting classes to change, and set the **Modifiers** property of this control to **Private**."},{"content":"Build the DLL.","pos":[2957,2971]},{"pos":[2981,3043],"content":"To inherit from a composite control in a control class library","linkify":"To inherit from a composite control in a control class library","nodes":[{"content":"To inherit from a composite control in a control class library","pos":[0,62]}]},{"pos":[3053,3180],"content":"On the <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> menu, point to <bpt id=\"p2\">**</bpt>Add<ept id=\"p2\">**</ept> and select <bpt id=\"p3\">**</bpt>New Project<ept id=\"p3\">**</ept> to add a new <bpt id=\"p4\">**</bpt>Windows Application<ept id=\"p4\">**</ept> project to the solution.","source":"On the **File** menu, point to **Add** and select **New Project** to add a new **Windows Application** project to the solution."},{"pos":[3190,3344],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click the <bpt id=\"p2\">**</bpt>References<ept id=\"p2\">**</ept> folder for the new project and choose <bpt id=\"p3\">**</bpt>Add Reference<ept id=\"p3\">**</ept> to open the <bpt id=\"p4\">**</bpt>Add Reference<ept id=\"p4\">**</ept> dialog box.","source":"In **Solution Explorer**, right-click the **References** folder for the new project and choose **Add Reference** to open the **Add Reference** dialog box."},{"pos":[3354,3428],"content":"Select the <bpt id=\"p1\">**</bpt>Projects<ept id=\"p1\">**</ept> tab and double-click your control library project.","source":"Select the **Projects** tab and double-click your control library project."},{"pos":[3438,3486],"content":"On the <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept> menu, click <bpt id=\"p2\">**</bpt>Build Solution<ept id=\"p2\">**</ept>.","source":"On the **Build** menu, click **Build Solution**."},{"pos":[3496,3614],"content":"In <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, right-click your control library project and select <bpt id=\"p2\">**</bpt>Add New Item<ept id=\"p2\">**</ept> from the shortcut menu.","source":"In **Solution Explorer**, right-click your control library project and select **Add New Item** from the shortcut menu."},{"pos":[3624,3708],"content":"Select the <bpt id=\"p1\">**</bpt>Inherited User Control<ept id=\"p1\">**</ept> template from the <bpt id=\"p2\">**</bpt>Add New Item<ept id=\"p2\">**</ept> dialog box.","source":"Select the **Inherited User Control** template from the **Add New Item** dialog box."},{"pos":[3718,3810],"content":"In the <bpt id=\"p1\">**</bpt>Inheritance Picker<ept id=\"p1\">**</ept> dialog box, double-click the control you want to inherit from.","source":"In the **Inheritance Picker** dialog box, double-click the control you want to inherit from."},{"content":"A new control is added to your project.","pos":[3821,3860]},{"content":"Open the visual designer for the new control and add additional constituent controls.","pos":[3870,3955]},{"content":"You can see the constituent controls that were inherited from the composite control in your DLL, and you can alter the properties of controls whose <bpt id=\"p1\">**</bpt>Modifiers<ept id=\"p1\">**</ept> property is <bpt id=\"p2\">**</bpt>Public<ept id=\"p2\">**</ept>.","pos":[3966,4151],"source":"You can see the constituent controls that were inherited from the composite control in your DLL, and you can alter the properties of controls whose **Modifiers** property is **Public**."},{"content":"You cannot change the properties of the control whose <bpt id=\"p1\">**</bpt>Modifiers<ept id=\"p1\">**</ept> property is <bpt id=\"p2\">**</bpt>Private<ept id=\"p2\">**</ept>.","pos":[4152,4244],"source":" You cannot change the properties of the control whose **Modifiers** property is **Private**."},{"pos":[4253,4261],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Authoring a Composite Control with Visual Basic<ept id=\"p1\">](../../../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-basic.md)</ept><ph id=\"ph1\"> </ph>","pos":[4265,4437],"source":"[Walkthrough: Authoring a Composite Control with Visual Basic](../../../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-basic.md) "},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Authoring a Composite Control with Visual C#<ept id=\"p1\">](../../../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-csharp.md)</ept><ph id=\"ph1\"> </ph>","pos":[4441,4611],"source":"[Walkthrough: Authoring a Composite Control with Visual C#](../../../../docs/framework/winforms/controls/walkthrough-authoring-a-composite-control-with-visual-csharp.md) "},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Inheriting from a Windows Forms Control with Visual Basic<ept id=\"p1\">](../../../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-basic.md)</ept><ph id=\"ph1\"> </ph>","pos":[4615,4807],"source":"[Walkthrough: Inheriting from a Windows Forms Control with Visual Basic](../../../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-basic.md) "},{"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Inheriting from a Windows Forms Control with Visual C#<ept id=\"p1\">](../../../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-csharp.md)</ept><ph id=\"ph1\"> </ph>","pos":[4811,5001],"source":"[Walkthrough: Inheriting from a Windows Forms Control with Visual C#](../../../../docs/framework/winforms/controls/walkthrough-inheriting-from-a-windows-forms-control-with-visual-csharp.md) "},{"content":"<bpt id=\"p1\">[</bpt>Control Type Recommendations<ept id=\"p1\">](../../../../docs/framework/winforms/controls/control-type-recommendations.md)</ept><ph id=\"ph1\"> </ph>","pos":[5005,5114],"source":"[Control Type Recommendations](../../../../docs/framework/winforms/controls/control-type-recommendations.md) "},{"content":"<bpt id=\"p1\">[</bpt>How to: Author Controls for Windows Forms<ept id=\"p1\">](../../../../docs/framework/winforms/controls/how-to-author-controls-for-windows-forms.md)</ept><ph id=\"ph1\"> </ph>","pos":[5118,5252],"source":"[How to: Author Controls for Windows Forms](../../../../docs/framework/winforms/controls/how-to-author-controls-for-windows-forms.md) "},{"content":"<bpt id=\"p1\">[</bpt>Varieties of Custom Controls<ept id=\"p1\">](../../../../docs/framework/winforms/controls/varieties-of-custom-controls.md)</ept>","pos":[5256,5364],"source":"[Varieties of Custom Controls](../../../../docs/framework/winforms/controls/varieties-of-custom-controls.md)"}]}