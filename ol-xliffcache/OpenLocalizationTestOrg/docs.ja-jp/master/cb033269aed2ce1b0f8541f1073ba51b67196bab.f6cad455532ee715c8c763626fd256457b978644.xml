{"content":"---\ntitle: \"Type or 'With' expected\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc30988\"\n  - \"bc30988\"\nhelpviewer_keywords: \n  - \"BC30988\"\nms.assetid: ab9c0cee-9fe4-4764-a3c2-aec16e709d4c\n---\n# Type or 'With' expected\nWhen you declare an instance of a class, the `New` keyword must be followed by a type name or by `With`. For example, the following statements each declare `client` to be an instance of the `Customer` class. The type name `Customer` follows `New`.  \n  \n```  \n' Dim client As New Customer()  \n' The next declaration uses an object initializer.  \nDim client As New Customer() With {.Name = \"Litware, Inc.\"}  \n```  \n  \n Beginning with [!INCLUDE[vb_orcas_long](~/includes/vb-orcas-long-md.md)], you can declare an object to be an instance of an anonymous type, in which case you do not specify a data type. In anonymous type declarations, the keyword `With` follows `New`.  \n  \n```  \nDim person = New With {.Name =\"Mike Nash\", .Age = 27}  \n```  \n  \n **Error ID:** BC30988  \n  \n## To correct this error  \n  \n-   Change the declaration so that `With` or a type name follows `New`.  \n  \n## See also\n\n- [Anonymous Types](../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)\n- [Object Initializers: Named and Anonymous Types](../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)\n- [New Operator](../../visual-basic/language-reference/operators/new-operator.md)\n- [Declaration Statements](~/docs/visual-basic/programming-guide/language-features/statements.md#declaration-statements)\n","nodes":[{"pos":[4,184],"embed":true,"restype":"x-metadata","content":"title: \"Type or 'With' expected\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vbc30988\"\n  - \"bc30988\"\nhelpviewer_keywords: \n  - \"BC30988\"\nms.assetid: ab9c0cee-9fe4-4764-a3c2-aec16e709d4c","nodes":[{"content":"Type or 'With' expected","nodes":[{"pos":[0,23],"content":"Type or 'With' expected","nodes":[{"content":"Type or 'With' expected","pos":[0,23]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[191,214],"content":"Type or 'With' expected","linkify":"Type or 'With' expected","nodes":[{"content":"Type or 'With' expected","pos":[0,23]}]},{"content":"When you declare an instance of a class, the <ph id=\"ph1\">`New`</ph> keyword must be followed by a type name or by <ph id=\"ph2\">`With`</ph>.","pos":[215,319],"source":"When you declare an instance of a class, the `New` keyword must be followed by a type name or by `With`."},{"content":"For example, the following statements each declare <ph id=\"ph1\">`client`</ph> to be an instance of the <ph id=\"ph2\">`Customer`</ph> class.","pos":[320,422],"source":" For example, the following statements each declare `client` to be an instance of the `Customer` class."},{"content":"The type name <ph id=\"ph1\">`Customer`</ph> follows <ph id=\"ph2\">`New`</ph>.","pos":[423,462],"source":" The type name `Customer` follows `New`."},{"content":"Beginning with <ph id=\"ph1\">[!INCLUDE[vb_orcas_long](~/includes/vb-orcas-long-md.md)]</ph>, you can declare an object to be an instance of an anonymous type, in which case you do not specify a data type.","pos":[632,817],"source":"Beginning with [!INCLUDE[vb_orcas_long](~/includes/vb-orcas-long-md.md)], you can declare an object to be an instance of an anonymous type, in which case you do not specify a data type."},{"content":"In anonymous type declarations, the keyword <ph id=\"ph1\">`With`</ph> follows <ph id=\"ph2\">`New`</ph>.","pos":[818,883],"source":" In anonymous type declarations, the keyword `With` follows `New`."},{"pos":[961,982],"content":"<bpt id=\"p1\">**</bpt>Error ID:<ept id=\"p1\">**</ept> BC30988","source":"**Error ID:** BC30988"},{"pos":[991,1012],"content":"To correct this error","linkify":"To correct this error","nodes":[{"content":"To correct this error","pos":[0,21]}]},{"pos":[1022,1089],"content":"Change the declaration so that <ph id=\"ph1\">`With`</ph> or a type name follows <ph id=\"ph2\">`New`</ph>.","source":"Change the declaration so that `With` or a type name follows `New`."},{"pos":[1098,1106],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1110,1222],"content":"<bpt id=\"p1\">[</bpt>Anonymous Types<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept>","source":"[Anonymous Types](../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)"},{"pos":[1225,1398],"content":"<bpt id=\"p1\">[</bpt>Object Initializers: Named and Anonymous Types<ept id=\"p1\">](../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept>","source":"[Object Initializers: Named and Anonymous Types](../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)"},{"pos":[1401,1480],"content":"<bpt id=\"p1\">[</bpt>New Operator<ept id=\"p1\">](../../visual-basic/language-reference/operators/new-operator.md)</ept>","source":"[New Operator](../../visual-basic/language-reference/operators/new-operator.md)"},{"pos":[1483,1601],"content":"<bpt id=\"p1\">[</bpt>Declaration Statements<ept id=\"p1\">](~/docs/visual-basic/programming-guide/language-features/statements.md#declaration-statements)</ept>","source":"[Declaration Statements](~/docs/visual-basic/programming-guide/language-features/statements.md#declaration-statements)"}]}