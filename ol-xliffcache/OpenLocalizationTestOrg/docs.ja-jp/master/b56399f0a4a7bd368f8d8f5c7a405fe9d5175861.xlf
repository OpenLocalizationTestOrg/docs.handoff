<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b81d562" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b56399f0a4a7bd368f8d8f5c7a405fe9d5175861</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\diff-in-queue-in-vista-server-2003-windows-xp.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dec2ea3451ba2c73c7aa19c78d45b61bd31aeb2f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ab5ce796a93c7dabfe484f984fc98ab2a00a230</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Differences in Queuing Features in Windows Vista, Windows Server 2003, and Windows XP | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Differences in Queuing Features in Windows Vista, Windows Server 2003, and Windows XP</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic summarizes the differences in the <ph id="ph1">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> queues feature between <ph id="ph2">[!INCLUDE[wv](../../../../includes/wv-md.md)]</ph>, <ph id="ph3">[!INCLUDE[ws2003](../../../../includes/ws2003-md.md)]</ph>, and <ph id="ph4">[!INCLUDE[wxp](../../../../includes/wxp-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Application-Specific Dead-Letter Queue</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Queued messages can remain in the queue indefinitely if the receiving application does not read them in a timely fashion.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This behavior is not advisable if the messages are time-sensitive.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Time-sensitive messages have a <ph id="ph1">`TimeToLive`</ph> property set in the queued binding.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This property indicates how long the messages can be in the queue before they expire.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Expired messages are sent to a special queue called the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A message can also end up in a dead-letter queue for other reasons, such as exceeding a queue quota or experiencing an authentication failure.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Typically, a single system-wide dead-letter queue exists for all queued applications that share a queue manager.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A dead-letter queue for each application enables better isolation between queued applications that share a queue manager by allowing these applications to specify their own application-specific dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An application that shares a dead-letter queue with other applications has to browse the queue to find messages that are applicable to it.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>With an application-specific dead-letter queue, the application can be assured that all messages in its dead-letter queue are applicable to it.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[wv](../../../../includes/wv-md.md)]</ph> provides for application-specific dead-letter queues.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Application-specific dead-letter queues are not available in <ph id="ph1">[!INCLUDE[ws2003](../../../../includes/ws2003-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wxp](../../../../includes/wxp-md.md)]</ph>, and applications must use the system-wide dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Poison-Message Handling</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A poison message is a message that has exceeded the maximum number of delivery attempts to the receiving application.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This situation can arise when an application that reads a message from a transactional queue cannot process the message immediately because of errors.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the application aborts the transaction in which the queued message was received, it returns the message to the queue.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The application then tries to retrieve the message again in a new transaction.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the problem that causes the error is not corrected, the receiving application can get stuck in a loop receiving and aborting the same message until it exceeds the maximum number of delivery attempts, and a poison message results.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The key differences between Message Queuing (MSMQ) on <ph id="ph1">[!INCLUDE[wv](../../../../includes/wv-md.md)]</ph>, <ph id="ph2">[!INCLUDE[ws2003](../../../../includes/ws2003-md.md)]</ph>, and <ph id="ph3">[!INCLUDE[wxp](../../../../includes/wxp-md.md)]</ph> that are relevant to poison handling include the following:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>MSMQ in <ph id="ph1">[!INCLUDE[wv](../../../../includes/wv-md.md)]</ph> supports subqueues, while <ph id="ph2">[!INCLUDE[ws2003](../../../../includes/ws2003-md.md)]</ph> and <ph id="ph3">[!INCLUDE[wxp](../../../../includes/wxp-md.md)]</ph> do not support subqueues.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Subqueues are used in poison-message handling.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The retry queues and the poison queue are subqueues to the application queue that is created based on the poison-message handling settings.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MaxRetryCycles`</ph> dictates how many retry subqueues to create.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Therefore, when running on <ph id="ph1">[!INCLUDE[ws2003](../../../../includes/ws2003-md.md)]</ph> or <ph id="ph2">[!INCLUDE[wxp](../../../../includes/wxp-md.md)]</ph>, <ph id="ph3">`MaxRetryCycles`</ph> are ignored and <ph id="ph4">`ReceiveErrorHandling.Move`</ph> is not allowed.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>MSMQ in <ph id="ph1">[!INCLUDE[wv](../../../../includes/wv-md.md)]</ph> supports negative acknowledgment, while <ph id="ph2">[!INCLUDE[ws2003](../../../../includes/ws2003-md.md)]</ph> and <ph id="ph3">[!INCLUDE[wxp](../../../../includes/wxp-md.md)]</ph> do not.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A negative acknowledgment from the receiving queue manager causes the sending queue manager to place the rejected message in the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>As such, <ph id="ph1">`ReceiveErrorHandling.Reject`</ph> is not allowed with <ph id="ph2">[!INCLUDE[ws2003](../../../../includes/ws2003-md.md)]</ph> and <ph id="ph3">[!INCLUDE[wxp](../../../../includes/wxp-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>MSMQ in <ph id="ph1">[!INCLUDE[wv](../../../../includes/wv-md.md)]</ph> supports a message property that keeps count of the number of times message delivery is attempted.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This abort count property is not available on <ph id="ph1">[!INCLUDE[ws2003](../../../../includes/ws2003-md.md)]</ph> and <ph id="ph2">[!INCLUDE[wxp](../../../../includes/wxp-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> maintains the abort count in memory, so it is possible that this property may not contain an accurate value when the same message is read by more than one <ph id="ph2">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> service in a Web farm.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remote Transactional Read</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>MSMQ on <ph id="ph1">[!INCLUDE[wv](../../../../includes/wv-md.md)]</ph> supports remote transactional reads.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This allows an application that is reading from a queue to be hosted on a computer that is different from the computer on which the queue is hosted.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This ensures the ability to have a farm of services reading from a central queue, which increases the overall throughput of the system.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It also ensures that if a failure occurs when reading and processing the message, the transaction rolls back and the message remains in the queue for later processing.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Using Dead-Letter Queues to Handle Message Transfer Failures<ept id="p1">](../../../../docs/framework/wcf/feature-details/using-dead-letter-queues-to-handle-message-transfer-failures.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Poison Message Handling<ept id="p1">](../../../../docs/framework/wcf/feature-details/poison-message-handling.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>