{"content":"---\ntitle: \"Creating Custom Log Listeners (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"custom log listeners\"\n  - \"My.Application.Log object, custom log listeners\"\nms.assetid: 0e019115-4b25-4820-afb1-af8c6e391698\n---\n# Walkthrough: Creating Custom Log Listeners (Visual Basic)\nThis walkthrough demonstrates how to create a custom log listener and configure it to listen to the output of the `My.Application.Log` object.  \n  \n## Getting Started  \n Log listeners must inherit from the <xref:System.Diagnostics.TraceListener> class.  \n  \n#### To create the listener  \n  \n-   In your application, create a class named `SimpleListener` that inherits from <xref:System.Diagnostics.TraceListener>.  \n  \n     [!code-vb[VbVbalrMyApplicationLog#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#16)]  \n  \n     The <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods, required by the base class, call `MsgBox` to display their input.  \n  \n     The <xref:System.Security.Permissions.HostProtectionAttribute> attribute is applied to the <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods so that their attributes match the base class methods. The <xref:System.Security.Permissions.HostProtectionAttribute> attribute allows the host that runs the code to determine that the code exposes host-protection synchronization.  \n  \n    > [!NOTE]\n    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute is effective only on unmanaged applications that host the common language runtime and that implement host protection, such as SQL Server.  \n  \n To ensure that `My.Application.Log` uses your log listener, you should strongly name the assembly that contains your log listener.  \n  \n The next procedure provides some simple steps for creating a strongly named log-listener assembly. For more information, see [Creating and Using Strong-Named Assemblies](../../../../framework/app-domains/create-and-use-strong-named-assemblies.md).  \n  \n#### To strongly name the log-listener assembly  \n  \n1.  Have a project selected in **Solution Explorer**. On the **Project** menu, choose **Properties**.   \n  \n2.  Click the **Signing** tab.  \n  \n3.  Select the **Sign the assembly** box.  \n  \n4.  Select **\\<New>** from the **Choose a strong name key file** drop-down list.  \n  \n     The **Create Strong Name Key** dialog box opens.  \n  \n5.  Provide a name for the key file in the **Key file name** box.  \n  \n6.  Enter a password in the **Enter password** and **Confirm password** boxes.  \n  \n7.  Click **OK**.  \n  \n8.  Rebuild the application.  \n  \n## Adding the Listener  \n Now that the assembly has a strong name, you need to determine the strong name of the listener so that `My.Application.Log` uses your log listener.  \n  \n The format of a strongly named type is as follows.  \n  \n \\<type name>, \\<assembly name>, \\<version number>, \\<culture>, \\<strong name>  \n  \n#### To determine the strong name of the listener  \n  \n-   The following code shows how to determine the strongly named type name for `SimpleListener`.  \n  \n     [!code-vb[VbVbalrMyApplicationLog#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#17)]  \n  \n     The strong name of the type depends on your project.  \n  \n With the strong name, you can add the listener to the `My.Application.Log` log-listener collection.  \n  \n#### To add the listener to My.Application.Log  \n  \n1.  Right-click on app.config in the **Solution Explorer** and choose **Open**.  \n  \n     -or-  \n  \n     If there is an app.config file:  \n  \n    1.  On the **Project** menu, choose **Add New Item**.  \n  \n    2.  From the **Add New Item** dialog box, choose **Application Configuration File**.  \n  \n    3.  Click **Add**.  \n  \n2.  Locate the `<listeners>` section, in the `<source>` section with the `name` attribute \"DefaultSource\", located in the `<sources>` section. The `<sources>` section is located in the `<system.diagnostics>` section, in the top-level `<configuration>` section.  \n  \n3.  Add this element to the `<listeners>` section:  \n  \n    ```xml  \n    <add name=\"SimpleLog\" />  \n    ```  \n  \n4.  Locate the `<sharedListeners>` section, in the `<system.diagnostics>` section, in the top-level `<configuration>` section.  \n  \n5.  Add this element to that `<sharedListeners>` section:  \n  \n    ```xml  \n    <add name=\"SimpleLog\" type=\"SimpleLogStrongName\" />  \n    ```  \n  \n     Change the value of `SimpleLogStrongName` to be the strong name of the listener.  \n  \n## See also\n\n- <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=nameWithType>\n- [Working with Application Logs](../../../../visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)\n- [How to: Log Exceptions](../../../../visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)\n- [How to: Write Log Messages](../../../../visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)\n- [Walkthrough: Changing Where My.Application.Log Writes Information](../../../../visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)\n","nodes":[{"pos":[4,229],"embed":true,"restype":"x-metadata","content":"title: \"Creating Custom Log Listeners (Visual Basic)\"\nms.date: 07/20/2015\nhelpviewer_keywords: \n  - \"custom log listeners\"\n  - \"My.Application.Log object, custom log listeners\"\nms.assetid: 0e019115-4b25-4820-afb1-af8c6e391698","nodes":[{"content":"Creating Custom Log Listeners (Visual Basic)","nodes":[{"pos":[0,44],"content":"Creating Custom Log Listeners (Visual Basic)","nodes":[{"content":"Creating Custom Log Listeners (Visual Basic)","pos":[0,44]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[236,293],"content":"Walkthrough: Creating Custom Log Listeners (Visual Basic)","linkify":"Walkthrough: Creating Custom Log Listeners (Visual Basic)","nodes":[{"content":"Walkthrough: Creating Custom Log Listeners (Visual Basic)","pos":[0,57]}]},{"pos":[294,436],"content":"This walkthrough demonstrates how to create a custom log listener and configure it to listen to the output of the <ph id=\"ph1\">`My.Application.Log`</ph> object.","source":"This walkthrough demonstrates how to create a custom log listener and configure it to listen to the output of the `My.Application.Log` object."},{"pos":[445,460],"content":"Getting Started","linkify":"Getting Started","nodes":[{"content":"Getting Started","pos":[0,15]}]},{"pos":[464,546],"content":"Log listeners must inherit from the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> class.","source":"Log listeners must inherit from the <xref:System.Diagnostics.TraceListener> class."},{"pos":[557,579],"content":"To create the listener","linkify":"To create the listener","nodes":[{"content":"To create the listener","pos":[0,22]}]},{"pos":[589,707],"content":"In your application, create a class named <ph id=\"ph1\">`SimpleListener`</ph> that inherits from <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.","source":"In your application, create a class named `SimpleListener` that inherits from <xref:System.Diagnostics.TraceListener>."},{"pos":[859,1043],"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> methods, required by the base class, call <ph id=\"ph3\">`MsgBox`</ph> to display their input.","source":"The <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods, required by the base class, call `MsgBox` to display their input."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> attribute is applied to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> methods so that their attributes match the base class methods.","pos":[1054,1313],"source":"The <xref:System.Security.Permissions.HostProtectionAttribute> attribute is applied to the <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods so that their attributes match the base class methods."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> attribute allows the host that runs the code to determine that the code exposes host-protection synchronization.","pos":[1314,1489],"source":" The <xref:System.Security.Permissions.HostProtectionAttribute> attribute allows the host that runs the code to determine that the code exposes host-protection synchronization."},{"pos":[1501,1726],"content":"[!NOTE]\nThe <xref:System.Security.Permissions.HostProtectionAttribute> attribute is effective only on unmanaged applications that host the common language runtime and that implement host protection, such as SQL Server.","leadings":["","    >  "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> attribute is effective only on unmanaged applications that host the common language runtime and that implement host protection, such as SQL Server.","pos":[8,218],"source":"The <xref:System.Security.Permissions.HostProtectionAttribute> attribute is effective only on unmanaged applications that host the common language runtime and that implement host protection, such as SQL Server."}]},{"pos":[1733,1863],"content":"To ensure that <ph id=\"ph1\">`My.Application.Log`</ph> uses your log listener, you should strongly name the assembly that contains your log listener.","source":"To ensure that `My.Application.Log` uses your log listener, you should strongly name the assembly that contains your log listener."},{"content":"The next procedure provides some simple steps for creating a strongly named log-listener assembly.","pos":[1870,1968]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Creating and Using Strong-Named Assemblies<ept id=\"p1\">](../../../../framework/app-domains/create-and-use-strong-named-assemblies.md)</ept>.","pos":[1969,2117],"source":" For more information, see [Creating and Using Strong-Named Assemblies](../../../../framework/app-domains/create-and-use-strong-named-assemblies.md)."},{"pos":[2128,2170],"content":"To strongly name the log-listener assembly","linkify":"To strongly name the log-listener assembly","nodes":[{"content":"To strongly name the log-listener assembly","pos":[0,42]}]},{"content":"Have a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>.","pos":[2180,2229],"source":"Have a project selected in **Solution Explorer**."},{"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept>.","pos":[2230,2277],"source":" On the **Project** menu, choose **Properties**."},{"pos":[2288,2314],"content":"Click the <bpt id=\"p1\">**</bpt>Signing<ept id=\"p1\">**</ept> tab.","source":"Click the **Signing** tab."},{"pos":[2324,2361],"content":"Select the <bpt id=\"p1\">**</bpt>Sign the assembly<ept id=\"p1\">**</ept> box.","source":"Select the **Sign the assembly** box."},{"pos":[2371,2447],"content":"Select <bpt id=\"p1\">**</bpt><ph id=\"ph1\">\\&lt;</ph>New&gt;<ept id=\"p1\">**</ept> from the <bpt id=\"p2\">**</bpt>Choose a strong name key file<ept id=\"p2\">**</ept> drop-down list.","source":"Select **\\<New>** from the **Choose a strong name key file** drop-down list."},{"pos":[2458,2506],"content":"The <bpt id=\"p1\">**</bpt>Create Strong Name Key<ept id=\"p1\">**</ept> dialog box opens.","source":"The **Create Strong Name Key** dialog box opens."},{"pos":[2516,2577],"content":"Provide a name for the key file in the <bpt id=\"p1\">**</bpt>Key file name<ept id=\"p1\">**</ept> box.","source":"Provide a name for the key file in the **Key file name** box."},{"pos":[2587,2661],"content":"Enter a password in the <bpt id=\"p1\">**</bpt>Enter password<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Confirm password<ept id=\"p2\">**</ept> boxes.","source":"Enter a password in the **Enter password** and **Confirm password** boxes."},{"pos":[2671,2684],"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","source":"Click **OK**."},{"content":"Rebuild the application.","pos":[2694,2718]},{"pos":[2727,2746],"content":"Adding the Listener","linkify":"Adding the Listener","nodes":[{"content":"Adding the Listener","pos":[0,19]}]},{"pos":[2750,2897],"content":"Now that the assembly has a strong name, you need to determine the strong name of the listener so that <ph id=\"ph1\">`My.Application.Log`</ph> uses your log listener.","source":"Now that the assembly has a strong name, you need to determine the strong name of the listener so that `My.Application.Log` uses your log listener."},{"content":"The format of a strongly named type is as follows.","pos":[2904,2954]},{"content":"<ph id=\"ph1\">\\&lt;</ph>type name&gt;, <ph id=\"ph2\">\\&lt;</ph>assembly name&gt;, <ph id=\"ph3\">\\&lt;</ph>version number&gt;, <ph id=\"ph4\">\\&lt;</ph>culture&gt;, <ph id=\"ph5\">\\&lt;</ph>strong name&gt;","pos":[2961,3038],"source":"\\<type name>, \\<assembly name>, \\<version number>, \\<culture>, \\<strong name>"},{"pos":[3049,3093],"content":"To determine the strong name of the listener","linkify":"To determine the strong name of the listener","nodes":[{"content":"To determine the strong name of the listener","pos":[0,44]}]},{"pos":[3103,3195],"content":"The following code shows how to determine the strongly named type name for <ph id=\"ph1\">`SimpleListener`</ph>.","source":"The following code shows how to determine the strongly named type name for `SimpleListener`."},{"content":"The strong name of the type depends on your project.","pos":[3347,3399]},{"pos":[3406,3505],"content":"With the strong name, you can add the listener to the <ph id=\"ph1\">`My.Application.Log`</ph> log-listener collection.","source":"With the strong name, you can add the listener to the `My.Application.Log` log-listener collection."},{"pos":[3516,3557],"content":"To add the listener to My.Application.Log","linkify":"To add the listener to My.Application.Log","nodes":[{"content":"To add the listener to My.Application.Log","pos":[0,41]}]},{"pos":[3567,3642],"content":"Right-click on app.config in the <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept> and choose <bpt id=\"p2\">**</bpt>Open<ept id=\"p2\">**</ept>.","source":"Right-click on app.config in the **Solution Explorer** and choose **Open**."},{"content":"-or-","pos":[3653,3657]},{"content":"If there is an app.config file:","pos":[3668,3699]},{"pos":[3713,3762],"content":"On the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Add New Item<ept id=\"p2\">**</ept>.","source":"On the **Project** menu, choose **Add New Item**."},{"pos":[3776,3856],"content":"From the <bpt id=\"p1\">**</bpt>Add New Item<ept id=\"p1\">**</ept> dialog box, choose <bpt id=\"p2\">**</bpt>Application Configuration File<ept id=\"p2\">**</ept>.","source":"From the **Add New Item** dialog box, choose **Application Configuration File**."},{"pos":[3870,3884],"content":"Click <bpt id=\"p1\">**</bpt>Add<ept id=\"p1\">**</ept>.","source":"Click **Add**."},{"content":"Locate the <ph id=\"ph1\">`&lt;listeners&gt;`</ph> section, in the <ph id=\"ph2\">`&lt;source&gt;`</ph> section with the <ph id=\"ph3\">`name`</ph> attribute \"DefaultSource\", located in the <ph id=\"ph4\">`&lt;sources&gt;`</ph> section.","pos":[3894,4032],"source":"Locate the `<listeners>` section, in the `<source>` section with the `name` attribute \"DefaultSource\", located in the `<sources>` section."},{"content":"The <ph id=\"ph1\">`&lt;sources&gt;`</ph> section is located in the <ph id=\"ph2\">`&lt;system.diagnostics&gt;`</ph> section, in the top-level <ph id=\"ph3\">`&lt;configuration&gt;`</ph> section.","pos":[4033,4150],"source":" The `<sources>` section is located in the `<system.diagnostics>` section, in the top-level `<configuration>` section."},{"pos":[4160,4206],"content":"Add this element to the <ph id=\"ph1\">`&lt;listeners&gt;`</ph> section:","source":"Add this element to the `<listeners>` section:"},{"pos":[4273,4395],"content":"Locate the <ph id=\"ph1\">`&lt;sharedListeners&gt;`</ph> section, in the <ph id=\"ph2\">`&lt;system.diagnostics&gt;`</ph> section, in the top-level <ph id=\"ph3\">`&lt;configuration&gt;`</ph> section.","source":"Locate the `<sharedListeners>` section, in the `<system.diagnostics>` section, in the top-level `<configuration>` section."},{"pos":[4405,4458],"content":"Add this element to that <ph id=\"ph1\">`&lt;sharedListeners&gt;`</ph> section:","source":"Add this element to that `<sharedListeners>` section:"},{"pos":[4553,4633],"content":"Change the value of <ph id=\"ph1\">`SimpleLogStrongName`</ph> to be the strong name of the listener.","source":"Change the value of `SimpleLogStrongName` to be the strong name of the listener."},{"pos":[4642,4650],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[4726,4853],"content":"<bpt id=\"p1\">[</bpt>Working with Application Logs<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>","source":"[Working with Application Logs](../../../../visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)"},{"pos":[4856,4968],"content":"<bpt id=\"p1\">[</bpt>How to: Log Exceptions<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept>","source":"[How to: Log Exceptions](../../../../visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)"},{"pos":[4971,5091],"content":"<bpt id=\"p1\">[</bpt>How to: Write Log Messages<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>","source":"[How to: Write Log Messages](../../../../visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)"},{"pos":[5094,5292],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id=\"p1\">](../../../../visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept>","source":"[Walkthrough: Changing Where My.Application.Log Writes Information](../../../../visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)"}]}