{"content":"---\ntitle: \"How to: Identify a Nullable Type (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"nullable types [C#], identifying\"\nms.assetid: d4b67ee2-66e8-40c1-ae9d-545d32c71387\ncaps.latest.revision: 7\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# How to: Identify a Nullable Type (C# Programming Guide)\nYou can use the C# [typeof](../../../csharp/language-reference/keywords/typeof.md) operator to create a <xref:System.Type> object that represents a Nullable type:  \n  \n```  \nSystem.Type type = typeof(int?);  \n```  \n  \n You can also use the classes and methods of the <xref:System.Reflection> namespace to generate <xref:System.Type> objects that represent Nullable types. However, if you try to obtain type information from Nullable variables at runtime by using the <xref:System.Object.GetType%2A> method or the `is` operator, the result is a <xref:System.Type> object that represents the underlying type, not the Nullable type itself.  \n  \n Calling `GetType` on a Nullable type causes a boxing operation to be performed when the type is implicitly converted to <xref:System.Object>. Therefore <xref:System.Object.GetType%2A> always returns a <xref:System.Type> object that represents the underlying type, not the Nullable type.  \n  \n```  \nint? i = 5;  \nType t = i.GetType();  \nConsole.WriteLine(t.FullName); //\"System.Int32\"  \n```  \n  \n The C# [is](../../../csharp/language-reference/keywords/is.md) operator also operates on a Nullable's underlying type. Therefore you cannot use `is` to determine whether a variable is a Nullable type. The following example shows that the `is` operator treats a Nullable\\<int> variable as an int.  \n  \n```  \nstatic void Main(string[] args)  \n{  \n  int? i = 5;  \n  if (i is int) // true  \n    //…  \n}  \n```  \n  \n## Example  \n Use the following code to determine whether a <xref:System.Type> object represents a Nullable type. Remember that this code always returns false if the `Type` object was returned from a call to <xref:System.Object.GetType%2A>, as explained earlier in this topic.  \n  \n```  \nif (type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>)) {…}  \n```  \n  \n## See Also  \n [Nullable Types](../../../csharp/programming-guide/nullable-types/index.md)   \n [Boxing Nullable Types](../../../csharp/programming-guide/nullable-types/boxing-nullable-types.md)","nodes":[{"pos":[4,565],"nodes":[{"content":"How to: Identify a Nullable Type (C# Programming Guide) | Microsoft Docs","nodes":[{"pos":[0,72],"content":"How to: Identify a Nullable Type (C# Programming Guide) | Microsoft Docs","nodes":[{"content":"How to: Identify a Nullable Type (C# Programming Guide) | Microsoft Docs","pos":[0,72]}]}],"pos":[6,81],"yaml":true}],"content":"title: \"How to: Identify a Nullable Type (C# Programming Guide) | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\n\n\nms.technology: \n  - \"devlang-csharp\"\n\nms.topic: \"article\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"nullable types [C#], identifying\"\nms.assetid: d4b67ee2-66e8-40c1-ae9d-545d32c71387\ncaps.latest.revision: 7\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[572,627],"content":"How to: Identify a Nullable Type (C# Programming Guide)","linkify":"How to: Identify a Nullable Type (C# Programming Guide)","nodes":[{"content":"How to: Identify a Nullable Type (C# Programming Guide)","pos":[0,55]}]},{"pos":[628,790],"content":"You can use the C# <bpt id=\"p1\">[</bpt>typeof<ept id=\"p1\">](../../../csharp/language-reference/keywords/typeof.md)</ept> operator to create a <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents a Nullable type:","source":"You can use the C# [typeof](../../../csharp/language-reference/keywords/typeof.md) operator to create a <xref:System.Type> object that represents a Nullable type:"},{"content":"You can also use the classes and methods of the <ph id=\"ph1\">&lt;xref:System.Reflection&gt;</ph> namespace to generate <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> objects that represent Nullable types.","pos":[847,999],"source":"You can also use the classes and methods of the <xref:System.Reflection> namespace to generate <xref:System.Type> objects that represent Nullable types."},{"content":"However, if you try to obtain type information from Nullable variables at runtime by using the <ph id=\"ph1\">&lt;xref:System.Object.GetType%2A&gt;</ph> method or the <ph id=\"ph2\">`is`</ph> operator, the result is a <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph> object that represents the underlying type, not the Nullable type itself.","pos":[1000,1264],"source":" However, if you try to obtain type information from Nullable variables at runtime by using the <xref:System.Object.GetType%2A> method or the `is` operator, the result is a <xref:System.Type> object that represents the underlying type, not the Nullable type itself."},{"content":"Calling <ph id=\"ph1\">`GetType`</ph> on a Nullable type causes a boxing operation to be performed when the type is implicitly converted to <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","pos":[1271,1412],"source":"Calling `GetType` on a Nullable type causes a boxing operation to be performed when the type is implicitly converted to <xref:System.Object>."},{"content":"Therefore <ph id=\"ph1\">&lt;xref:System.Object.GetType%2A&gt;</ph> always returns a <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> object that represents the underlying type, not the Nullable type.","pos":[1413,1557],"source":" Therefore <xref:System.Object.GetType%2A> always returns a <xref:System.Type> object that represents the underlying type, not the Nullable type."},{"content":"The C# <bpt id=\"p1\">[</bpt>is<ept id=\"p1\">](../../../csharp/language-reference/keywords/is.md)</ept> operator also operates on a Nullable's underlying type.","pos":[1667,1785],"source":"The C# [is](../../../csharp/language-reference/keywords/is.md) operator also operates on a Nullable's underlying type."},{"content":"Therefore you cannot use <ph id=\"ph1\">`is`</ph> to determine whether a variable is a Nullable type.","pos":[1786,1867],"source":" Therefore you cannot use `is` to determine whether a variable is a Nullable type."},{"content":"The following example shows that the <ph id=\"ph1\">`is`</ph> operator treats a Nullable<ph id=\"ph2\">\\&lt;</ph>int&gt; variable as an int.","pos":[1868,1962],"source":" The following example shows that the `is` operator treats a Nullable\\<int> variable as an int."},{"pos":[2080,2087],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"Use the following code to determine whether a <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object represents a Nullable type.","pos":[2091,2190],"source":"Use the following code to determine whether a <xref:System.Type> object represents a Nullable type."},{"content":"Remember that this code always returns false if the <ph id=\"ph1\">`Type`</ph> object was returned from a call to <ph id=\"ph2\">&lt;xref:System.Object.GetType%2A&gt;</ph>, as explained earlier in this topic.","pos":[2191,2353],"source":" Remember that this code always returns false if the `Type` object was returned from a call to <xref:System.Object.GetType%2A>, as explained earlier in this topic."},{"pos":[2464,2472],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Nullable Types<ept id=\"p1\">](../../../csharp/programming-guide/nullable-types/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[2476,2552],"source":"[Nullable Types](../../../csharp/programming-guide/nullable-types/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Boxing Nullable Types<ept id=\"p1\">](../../../csharp/programming-guide/nullable-types/boxing-nullable-types.md)</ept>","pos":[2556,2654],"source":"[Boxing Nullable Types](../../../csharp/programming-guide/nullable-types/boxing-nullable-types.md)"}]}