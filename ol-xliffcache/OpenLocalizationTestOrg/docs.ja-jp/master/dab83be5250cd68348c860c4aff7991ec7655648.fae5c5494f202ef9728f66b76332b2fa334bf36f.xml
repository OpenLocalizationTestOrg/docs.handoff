{"content":"---\ntitle: \"How to: Add References to Type Libraries\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"importing type library\"\n  - \"interop assemblies, generating\"\n  - \"type libraries\"\n  - \"COM interop, importing type library\"\nms.assetid: f5cfa6ba-cc25-4017-82cd-ba7391859113\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\n---\n# How to: Add References to Type Libraries\nVisual Studio generates an interop assembly containing metadata when you add a reference to a type library. If a primary interop assembly is available, Visual Studio uses the existing assembly before generating a new interop assembly.  \n  \n### To add a reference to a type library in Visual Studio  \n  \n1.  Install the COM DLL or EXE file on your computer, unless a Windows Setup.exe file performs the installation for you.  \n  \n2.  Choose **Project**, **Add Reference**.  \n  \n3.  In the Reference Manager, choose **COM**.  \n  \n4.  Select the type library from the list, or browse for the .tlb file.  \n  \n5.  Choose **OK**.  \n  \n6.  In Solution Explorer, open the shortcut menu for the reference you just added, and then choose **Properties**.  \n  \n7.  In the **Properties** window, make sure that the **Embed Interop Types** property is set to **True**. This causes Visual Studio to embed type information for COM types in your executables, eliminating the need to deploy primary interop assemblies with your app.  \n  \n> [!NOTE]\n>  The menu and dialog box options may vary depending on the version of Visual Studio you're using.  \n  \n### To add a reference to a type library for command-line compilation  \n  \n1.  Generate an interop assembly as described in [How to: Generate Interop Assemblies from Type Libraries](how-to-generate-interop-assemblies-from-type-libraries.md).  \n  \n2.  Use the [/link (C# Compiler Options)](../../csharp/language-reference/compiler-options/link-compiler-option.md) or [/link (Visual Basic)](../../visual-basic/reference/command-line-compiler/link.md) compiler option with the interop assembly name to embed type information for COM types in your executables.  \n  \n## See also\n\n- [Importing a Type Library as an Assembly](importing-a-type-library-as-an-assembly.md)\n- [Exposing COM Components to the .NET Framework](exposing-com-components.md)\n- [Walkthrough: Embedding Types from Managed Assemblies in Visual Studio (C#)](/docs/csharp/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-visual-studio.md) \n- [Walkthrough: Embedding Types from Managed Assemblies in Visual Studio (Visual Basic)](/docs/visual-basic/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-vs.md)\n- [/link (C# Compiler Options)](../../csharp/language-reference/compiler-options/link-compiler-option.md)\n- [/link (Visual Basic)](../../visual-basic/reference/command-line-compiler/link.md)\n","nodes":[{"pos":[4,315],"embed":true,"restype":"x-metadata","content":"title: \"How to: Add References to Type Libraries\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"importing type library\"\n  - \"interop assemblies, generating\"\n  - \"type libraries\"\n  - \"COM interop, importing type library\"\nms.assetid: f5cfa6ba-cc25-4017-82cd-ba7391859113\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"","nodes":[{"content":"How to: Add References to Type Libraries","nodes":[{"pos":[0,40],"content":"How to: Add References to Type Libraries","nodes":[{"content":"How to: Add References to Type Libraries","pos":[0,40]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[322,362],"content":"How to: Add References to Type Libraries","linkify":"How to: Add References to Type Libraries","nodes":[{"content":"How to: Add References to Type Libraries","pos":[0,40]}]},{"content":"Visual Studio generates an interop assembly containing metadata when you add a reference to a type library.","pos":[363,470]},{"content":"If a primary interop assembly is available, Visual Studio uses the existing assembly before generating a new interop assembly.","pos":[471,597]},{"pos":[607,660],"content":"To add a reference to a type library in Visual Studio","linkify":"To add a reference to a type library in Visual Studio","nodes":[{"content":"To add a reference to a type library in Visual Studio","pos":[0,53]}]},{"content":"Install the COM DLL or EXE file on your computer, unless a Windows Setup.exe file performs the installation for you.","pos":[670,786]},{"pos":[796,834],"content":"Choose <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Add Reference<ept id=\"p2\">**</ept>.","source":"Choose **Project**, **Add Reference**."},{"pos":[844,885],"content":"In the Reference Manager, choose <bpt id=\"p1\">**</bpt>COM<ept id=\"p1\">**</ept>.","source":"In the Reference Manager, choose **COM**."},{"content":"Select the type library from the list, or browse for the .tlb file.","pos":[895,962]},{"pos":[972,986],"content":"Choose <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","source":"Choose **OK**."},{"pos":[996,1106],"content":"In Solution Explorer, open the shortcut menu for the reference you just added, and then choose <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept>.","source":"In Solution Explorer, open the shortcut menu for the reference you just added, and then choose **Properties**."},{"content":"In the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window, make sure that the <bpt id=\"p2\">**</bpt>Embed Interop Types<ept id=\"p2\">**</ept> property is set to <bpt id=\"p3\">**</bpt>True<ept id=\"p3\">**</ept>.","pos":[1116,1217],"source":"In the **Properties** window, make sure that the **Embed Interop Types** property is set to **True**."},{"content":"This causes Visual Studio to embed type information for COM types in your executables, eliminating the need to deploy primary interop assemblies with your app.","pos":[1218,1377]},{"pos":[1385,1492],"content":"[!NOTE]\n The menu and dialog box options may vary depending on the version of Visual Studio you're using.","leadings":["","> "],"nodes":[{"content":"The menu and dialog box options may vary depending on the version of Visual Studio you're using.","pos":[9,105]}]},{"pos":[1502,1567],"content":"To add a reference to a type library for command-line compilation","linkify":"To add a reference to a type library for command-line compilation","nodes":[{"content":"To add a reference to a type library for command-line compilation","pos":[0,65]}]},{"pos":[1577,1739],"content":"Generate an interop assembly as described in <bpt id=\"p1\">[</bpt>How to: Generate Interop Assemblies from Type Libraries<ept id=\"p1\">](how-to-generate-interop-assemblies-from-type-libraries.md)</ept>.","source":"Generate an interop assembly as described in [How to: Generate Interop Assemblies from Type Libraries](how-to-generate-interop-assemblies-from-type-libraries.md)."},{"pos":[1749,2054],"content":"Use the <bpt id=\"p1\">[</bpt>/link (C# Compiler Options)<ept id=\"p1\">](../../csharp/language-reference/compiler-options/link-compiler-option.md)</ept> or <bpt id=\"p2\">[</bpt>/link (Visual Basic)<ept id=\"p2\">](../../visual-basic/reference/command-line-compiler/link.md)</ept> compiler option with the interop assembly name to embed type information for COM types in your executables.","source":"Use the [/link (C# Compiler Options)](../../csharp/language-reference/compiler-options/link-compiler-option.md) or [/link (Visual Basic)](../../visual-basic/reference/command-line-compiler/link.md) compiler option with the interop assembly name to embed type information for COM types in your executables."},{"pos":[2063,2071],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2075,2160],"content":"<bpt id=\"p1\">[</bpt>Importing a Type Library as an Assembly<ept id=\"p1\">](importing-a-type-library-as-an-assembly.md)</ept>","source":"[Importing a Type Library as an Assembly](importing-a-type-library-as-an-assembly.md)"},{"pos":[2163,2238],"content":"<bpt id=\"p1\">[</bpt>Exposing COM Components to the .NET Framework<ept id=\"p1\">](exposing-com-components.md)</ept>","source":"[Exposing COM Components to the .NET Framework](exposing-com-components.md)"},{"pos":[2241,2445],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Embedding Types from Managed Assemblies in Visual Studio (C#)<ept id=\"p1\">](/docs/csharp/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-visual-studio.md)</ept>","source":"[Walkthrough: Embedding Types from Managed Assemblies in Visual Studio (C#)](/docs/csharp/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-visual-studio.md)"},{"pos":[2449,2658],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Embedding Types from Managed Assemblies in Visual Studio (Visual Basic)<ept id=\"p1\">](/docs/visual-basic/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-vs.md)</ept>","source":"[Walkthrough: Embedding Types from Managed Assemblies in Visual Studio (Visual Basic)](/docs/visual-basic/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-vs.md)"},{"pos":[2661,2764],"content":"<bpt id=\"p1\">[</bpt>/link (C# Compiler Options)<ept id=\"p1\">](../../csharp/language-reference/compiler-options/link-compiler-option.md)</ept>","source":"[/link (C# Compiler Options)](../../csharp/language-reference/compiler-options/link-compiler-option.md)"},{"pos":[2767,2849],"content":"<bpt id=\"p1\">[</bpt>/link (Visual Basic)<ept id=\"p1\">](../../visual-basic/reference/command-line-compiler/link.md)</ept>","source":"[/link (Visual Basic)](../../visual-basic/reference/command-line-compiler/link.md)"}]}