{"content":"---\ntitle: \"%= Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"%=_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"modulus assignment operator (=%) [C#]\"\n  - \"%= assignment operator (modulus assignment) [C#]\"\nms.assetid: 47e5f068-1d97-4010-bd3b-e21b5d3a77f5\ncaps.latest.revision: 20\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# %= Operator (C# Reference)\nThe remainder assignment operator.  \n  \n## Remarks  \n An expression using the `%=` assignment operator, such as  \n  \n```  \nx %= y  \n```  \n  \n is equivalent to  \n  \n```  \nx = x % y  \n```  \n  \n except that `x` is only evaluated once. The [% operator](../../../csharp/language-reference/operators/modulus-operator.md) is predefined for numeric types to compute the remainder after division.  \n  \n The `%=` operator cannot be overloaded directly, but user-defined types can overload the [% operator](../../../csharp/language-reference/operators/modulus-operator.md) (see [operator (C# Reference)](../../../csharp/language-reference/keywords/operator.md)).  \n  \n## Example  \n [!code-cs[csRefOperators#4](../../../csharp/language-reference/operators/codesnippet/CSharp/modulus-assignment-operator_1.cs)]  \n  \n## See Also  \n [C# Reference](../../../csharp/language-reference/index.md)   \n [C# Programming Guide](../../../csharp/programming-guide/index.md)   \n [C# Operators](../../../csharp/language-reference/operators/index.md)","nodes":[{"pos":[4,629],"embed":true,"restype":"x-metadata","content":"title: \"%= Operator (C# Reference) | Microsoft Docs\"\nms.date: \"2015-07-20\"\nms.prod: .net\nms.technology: \n  - \"devlang-csharp\"\nms.topic: \"article\"\nf1_keywords: \n  - \"%=_CSharpKeyword\"\ndev_langs: \n  - \"CSharp\"\nhelpviewer_keywords: \n  - \"modulus assignment operator (=%) [C#]\"\n  - \"%= assignment operator (modulus assignment) [C#]\"\nms.assetid: 47e5f068-1d97-4010-bd3b-e21b5d3a77f5\ncaps.latest.revision: 20\nauthor: \"BillWagner\"\nms.author: \"wiwagn\"\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","nodes":[{"content":"%= Operator (C# Reference) | Microsoft Docs","nodes":[{"pos":[0,43],"content":"%= Operator (C# Reference) | Microsoft Docs","nodes":[{"content":"%= Operator (C# Reference) | Microsoft Docs","pos":[0,43]}]}],"path":["title"]}],"yml":true},{"pos":[636,662],"content":"%= Operator (C# Reference)","linkify":"%= Operator (C# Reference)","nodes":[{"content":"%= Operator (C# Reference)","pos":[0,26]}]},{"content":"The remainder assignment operator.","pos":[663,697]},{"pos":[706,713],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[717,774],"content":"An expression using the <ph id=\"ph1\">`%=`</ph> assignment operator, such as","source":"An expression using the `%=` assignment operator, such as"},{"content":"is equivalent to","pos":[805,821]},{"content":"except that <ph id=\"ph1\">`x`</ph> is only evaluated once.","pos":[855,894],"source":"except that `x` is only evaluated once."},{"content":"The <bpt id=\"p1\">[</bpt>% operator<ept id=\"p1\">](../../../csharp/language-reference/operators/modulus-operator.md)</ept> is predefined for numeric types to compute the remainder after division.","pos":[895,1050],"source":" The [% operator](../../../csharp/language-reference/operators/modulus-operator.md) is predefined for numeric types to compute the remainder after division."},{"pos":[1057,1314],"content":"The <ph id=\"ph1\">`%=`</ph> operator cannot be overloaded directly, but user-defined types can overload the <bpt id=\"p1\">[</bpt>% operator<ept id=\"p1\">](../../../csharp/language-reference/operators/modulus-operator.md)</ept> (see <bpt id=\"p2\">[</bpt>operator (C# Reference)<ept id=\"p2\">](../../../csharp/language-reference/keywords/operator.md)</ept>).","source":"The `%=` operator cannot be overloaded directly, but user-defined types can overload the [% operator](../../../csharp/language-reference/operators/modulus-operator.md) (see [operator (C# Reference)](../../../csharp/language-reference/keywords/operator.md))."},{"pos":[1323,1330],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1469,1477],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>C# Reference<ept id=\"p1\">](../../../csharp/language-reference/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1481,1541],"source":"[C# Reference](../../../csharp/language-reference/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Programming Guide<ept id=\"p1\">](../../../csharp/programming-guide/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[1545,1612],"source":"[C# Programming Guide](../../../csharp/programming-guide/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](../../../csharp/language-reference/operators/index.md)</ept>","pos":[1616,1685],"source":"[C# Operators](../../../csharp/language-reference/operators/index.md)"}]}