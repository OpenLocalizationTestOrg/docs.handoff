{"content":"---\ntitle: \"How to: Improve Rendering Performance by Caching an Element\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"rendering performance [WPF], caching an element\"\n  - \"BitmapCache [WPF], improving rendering performance\"\n  - \"CacheMode [WPF], improving rendering performance\"\n  - \"performance [WPF], caching an element\"\n  - \"UIElement [WPF], caching\"\nms.assetid: 4739c1fc-60ba-4c46-aba6-f6c1a2688f19\n---\n# How to: Improve Rendering Performance by Caching an Element\nUse the <xref:System.Windows.Media.BitmapCache> class to improve rendering performance of a complex <xref:System.Windows.UIElement>. To cache an element, create a new instance of the <xref:System.Windows.Media.BitmapCache> class and assign it to the element's <xref:System.Windows.UIElement.CacheMode%2A> property. You can reuse a <xref:System.Windows.Media.BitmapCache> efficiently in a <xref:System.Windows.Media.BitmapCacheBrush>.  \n  \n## Example  \n The following code example shows how to create a complex element and cache it as a bitmap, which improves performance when the element is animated. The element is a canvas that holds shape geometries with many vertices. A <xref:System.Windows.Media.BitmapCache> with default values is assigned to the <xref:System.Windows.UIElement.CacheMode%2A> of the canvas, and an animation shows the smooth scaling of the cached bitmap.  \n  \n [!code-xaml[System.Windows.Media.BitmapCache#_BitmapCacheXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/system.windows.media.bitmapcache/cs/window1.xaml#_bitmapcachexaml)]  \n  \n## See also\n\n- <xref:System.Windows.Media.BitmapCache>\n- <xref:System.Windows.Media.BitmapCacheBrush>\n- <xref:System.Windows.UIElement.CacheMode%2A>\n- [How to: Use a Cached Element as a Brush](how-to-use-a-cached-element-as-a-brush.md)\n","nodes":[{"pos":[4,406],"embed":true,"restype":"x-metadata","content":"title: \"How to: Improve Rendering Performance by Caching an Element\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"rendering performance [WPF], caching an element\"\n  - \"BitmapCache [WPF], improving rendering performance\"\n  - \"CacheMode [WPF], improving rendering performance\"\n  - \"performance [WPF], caching an element\"\n  - \"UIElement [WPF], caching\"\nms.assetid: 4739c1fc-60ba-4c46-aba6-f6c1a2688f19","nodes":[{"content":"How to: Improve Rendering Performance by Caching an Element","nodes":[{"pos":[0,59],"content":"How to: Improve Rendering Performance by Caching an Element","nodes":[{"content":"How to: Improve Rendering Performance by Caching an Element","pos":[0,59]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[413,472],"content":"How to: Improve Rendering Performance by Caching an Element","linkify":"How to: Improve Rendering Performance by Caching an Element","nodes":[{"content":"How to: Improve Rendering Performance by Caching an Element","pos":[0,59]}]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> class to improve rendering performance of a complex <ph id=\"ph2\">&lt;xref:System.Windows.UIElement&gt;</ph>.","pos":[473,605],"source":"Use the <xref:System.Windows.Media.BitmapCache> class to improve rendering performance of a complex <xref:System.Windows.UIElement>."},{"content":"To cache an element, create a new instance of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> class and assign it to the element's <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.CacheMode%2A&gt;</ph> property.","pos":[606,787],"source":" To cache an element, create a new instance of the <xref:System.Windows.Media.BitmapCache> class and assign it to the element's <xref:System.Windows.UIElement.CacheMode%2A> property."},{"content":"You can reuse a <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> efficiently in a <ph id=\"ph2\">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph>.","pos":[788,906],"source":" You can reuse a <xref:System.Windows.Media.BitmapCache> efficiently in a <xref:System.Windows.Media.BitmapCacheBrush>."},{"pos":[915,922],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example shows how to create a complex element and cache it as a bitmap, which improves performance when the element is animated.","pos":[926,1073]},{"content":"The element is a canvas that holds shape geometries with many vertices.","pos":[1074,1145]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> with default values is assigned to the <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.CacheMode%2A&gt;</ph> of the canvas, and an animation shows the smooth scaling of the cached bitmap.","pos":[1146,1350],"source":" A <xref:System.Windows.Media.BitmapCache> with default values is assigned to the <xref:System.Windows.UIElement.CacheMode%2A> of the canvas, and an animation shows the smooth scaling of the cached bitmap."},{"pos":[1538,1546],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[1686,1770],"content":"<bpt id=\"p1\">[</bpt>How to: Use a Cached Element as a Brush<ept id=\"p1\">](how-to-use-a-cached-element-as-a-brush.md)</ept>","source":"[How to: Use a Cached Element as a Brush](how-to-use-a-cached-element-as-a-brush.md)"}]}