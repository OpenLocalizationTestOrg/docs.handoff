{"content":"---\ntitle: The .NET Compiler Platform SDK (Roslyn APIs)\ndescription: Learn to use the .NET Compiler Platform SDK (also called the Roslyn APIs) to understand .NET code, spot errors, and fix those errors.\nms.date: 10/10/2017\nms.custom: mvc\n---\n\n# The .NET Compiler Platform SDK\n\nCompilers build a detailed model of application code as they validate the\nsyntax and semantics of that code. They use this model to build the\nexecutable output from the source code. The .NET Compiler Platform SDK provides\naccess to this model. Increasingly, we rely on integrated\ndevelopment environment (IDE) features such as IntelliSense, refactoring,\nintelligent rename, \"Find all references,\" and \"Go to definition\" to\nincrease our productivity. We rely on code analysis tools to improve our\ncode quality, and code generators to aid in application construction. As\nthese tools get smarter, they need access to more and more of the model\nthat only compilers create as they process application code. This is the core mission of\nthe Roslyn APIs: opening up the black boxes and allowing tools and end\nusers to share in the wealth of information compilers have about our code.\nInstead of being opaque source-code-in and object-code-out translators,\nthrough Roslyn, compilers become platforms: APIs that you can use for\ncode-related tasks in your tools and applications.\n\n## .NET Compiler Platform SDK concepts\n\nThe .NET Compiler Platform SDK dramatically lowers the barrier\nto entry for creating code focused tools and applications. It creates many\nopportunities for innovation in areas such as meta-programming, code\ngeneration and transformation, interactive use of the C# and VB languages,\nand embedding of C# and VB in domain specific languages.\n\nThe .NET Compiler Platform SDK enables you to build ***analyzers*** and\n***code fixes*** that find and correct coding mistakes. ***Analyzers***\nunderstand the syntax and structure of code and detect practices that\nshould be corrected. ***Code fixes*** provide one or more suggested fixes\nfor addressing coding mistakes found by analyzers. Typically, an analyzer\nand the associated code fixes are packaged together in a single project.\n\nAnalyzers and code fixes use static analysis to understand code. They\ndo not run the code or provide other testing benefits. They can, however,\npoint out practices that often lead to bugs, unmaintainable code, or\nstandard guideline validation.\n\nThe .NET Compiler Platform SDK provides a single set of APIs that enable\nyou to examine and understand a C# or Visual Basic codebase. Because you\ncan use this single codebase, you can write analyzers and code fixes more\neasily by leveraging the syntactic and semantic analysis APIs provided by\nthe .NET Compiler Platform SDK. Freed from the large task of replicating\nthe analysis done by the compiler, you can concentrate on the more focused\ntask of finding and fixing common coding errors for your project or library.\n\nA smaller benefit is that your analyzers and code fixes are smaller and\nuse much less memory when loaded in Visual Studio than they would\nif you wrote your own codebase to understand the code in a project. By\nleveraging the same classes used by the compiler and Visual Studio, you\ncan create your own static analysis tools. This means your team\ncan use analyzers and code fixes without a noticeable impact on the IDE's\nperformance.\n\nThere are three main scenarios for writing analyzers and code fixes:\n\n1. [*Enforce team coding standards*](#enforce-team-coding-standards)\n1. [*Provide guidance with library packages*](#provide-guidance-with-library-packages)\n1. [*Provide general guidance*](#provide-general-guidance)\n\n## Enforce team coding standards\n\nMany teams have coding standards that are enforced through code reviews\nwith other team members. Analyzers and code fixes can make this process\nmuch more efficient. Code reviews happen when a developer shares their work\nwith others on the team. The developer will have invested all the time needed to\ncomplete a new feature before getting any comments. Weeks may go by\nwhile the developer reinforces habits that don't match the team's practices.\n\nAnalyzers run as a developer writes code. The developer gets immediate feedback that\nencourages following the guidance immediately. The developer builds habits to write\ncompliant code as soon as they begin prototyping. When the feature is\nready for humans to review, all the standard guidance has been enforced.\n\nTeams can build analyzers and code fixes that look for the most common\npractices that violate team coding practices. These can be installed on\neach developer's machine to enforce the standards.\n\n## Provide guidance with library packages\n\nThere are a wealth of libraries available for .NET developers on NuGet.\nSome of these come from Microsoft, some from third-party companies, and\nothers from community members and volunteers. These libraries get more\nadoption and higher reviews when developers can succeed with those\nlibraries.\n\nIn addition to providing documentation, you can provide analyzers and\ncode fixes that find and correct common mis-uses of your library. These\nimmediate corrections will help developers succeed more quickly.\n\nYou can package analyzers and code fixes with your library on NuGet. In that\nscenario, every developer who installs your NuGet package will also install\nthe analyzer package. All developers using your library will immediately\nget guidance from your team in the form of immediate feedback on mistakes\nand suggested corrections.\n\n## Provide general guidance\n\nThe .NET developer community has discovered through experience patterns that\nwork well and patterns that are best avoided. Several community members\nhave created analyzers that enforce those recommended patterns. As we learn\nmore, there is always room for new ideas.\n\nThese analyzers can be uploaded to the\n[Visual Studio Marketplace](https://marketplace.visualstudio.com/vs) and downloaded\nby developers using Visual Studio. Newcomers to the language and the platform\nlearn accepted practices quickly and become productive earlier in their .NET\njourney. As these become more widely used, the community adopts these\npractices.\n\n## Next steps\n\nThe .NET Compiler Platform SDK includes the latest language object models\nfor code generation, analysis, and refactoring. This section provides a\nconceptual overview of the .NET Compiler Platform SDK. Further details can be\nfound in the quickstarts, samples and tutorials sections.\n\nYou can learn more about the concepts in the .NET Compiler Platform SDK in these five topics:\n\n- [Explore code with the syntax visualizer](syntax-visualizer.md)\n- [Understand the compiler API model](compiler-api-model.md)\n- [Work with syntax](work-with-syntax.md)\n- [Work with semantics](work-with-semantics.md)\n- [Work with a workspace](work-with-workspace.md)\n\nTo get started, you'll need to install the **.NET Compiler Platform SDK**:\n\n[!INCLUDE[interactive-note](~/includes/roslyn-installation.md)]\n\n<!--\n\nTurn this on as more of the conceptual content is in place:\n- Try the [Quickstarts](quickstart/index.md) to create your first tutorial.\n- Experiment with one of the [Tutorials](tutorials/index.md).\n- Explore the [Samples](samples/index.md) to see some simple analyzers.\n- Read the [Concepts](concepts/index.md) to understand the ideas behind analyzers and code fixes.\n\n-->\n","nodes":[{"pos":[4,237],"embed":true,"restype":"x-metadata","content":"title: The .NET Compiler Platform SDK (Roslyn APIs)\ndescription: Learn to use the .NET Compiler Platform SDK (also called the Roslyn APIs) to understand .NET code, spot errors, and fix those errors.\nms.date: 10/10/2017\nms.custom: mvc","nodes":[{"content":"The .NET Compiler Platform SDK (Roslyn APIs)","nodes":[{"pos":[0,44],"content":"The .NET Compiler Platform SDK (Roslyn APIs)","nodes":[{"content":"The .NET Compiler Platform SDK (Roslyn APIs)","pos":[0,44]}]}],"path":["title"],"nosxs":false},{"content":"Learn to use the .NET Compiler Platform SDK (also called the Roslyn APIs) to understand .NET code, spot errors, and fix those errors.","nodes":[{"pos":[0,133],"content":"Learn to use the .NET Compiler Platform SDK (also called the Roslyn APIs) to understand .NET code, spot errors, and fix those errors.","nodes":[{"content":"Learn to use the .NET Compiler Platform SDK (also called the Roslyn APIs) to understand .NET code, spot errors, and fix those errors.","pos":[0,133]}]}],"path":["description"],"nosxs":false}],"yml":true},{"pos":[245,275],"content":"The .NET Compiler Platform SDK","linkify":"The .NET Compiler Platform SDK","nodes":[{"content":"The .NET Compiler Platform SDK","pos":[0,30]}]},{"content":"Compilers build a detailed model of application code as they validate the syntax and semantics of that code.","pos":[277,385],"source":"Compilers build a detailed model of application code as they validate the\nsyntax and semantics of that code."},{"content":"They use this model to build the executable output from the source code.","pos":[386,458],"source":" They use this model to build the\nexecutable output from the source code."},{"content":"The .NET Compiler Platform SDK provides access to this model.","pos":[459,520],"source":" The .NET Compiler Platform SDK provides\naccess to this model."},{"content":"Increasingly, we rely on integrated development environment (IDE) features such as IntelliSense, refactoring, intelligent rename, \"Find all references,\" and \"Go to definition\" to increase our productivity.","pos":[521,726],"source":" Increasingly, we rely on integrated\ndevelopment environment (IDE) features such as IntelliSense, refactoring,\nintelligent rename, \"Find all references,\" and \"Go to definition\" to\nincrease our productivity."},{"content":"We rely on code analysis tools to improve our code quality, and code generators to aid in application construction.","pos":[727,842],"source":" We rely on code analysis tools to improve our\ncode quality, and code generators to aid in application construction."},{"content":"As these tools get smarter, they need access to more and more of the model that only compilers create as they process application code.","pos":[843,978],"source":" As\nthese tools get smarter, they need access to more and more of the model\nthat only compilers create as they process application code."},{"content":"This is the core mission of the Roslyn APIs: opening up the black boxes and allowing tools and end users to share in the wealth of information compilers have about our code.","pos":[979,1152],"source":" This is the core mission of\nthe Roslyn APIs: opening up the black boxes and allowing tools and end\nusers to share in the wealth of information compilers have about our code."},{"content":"Instead of being opaque source-code-in and object-code-out translators, through Roslyn, compilers become platforms: APIs that you can use for code-related tasks in your tools and applications.","pos":[1153,1345],"source":"\nInstead of being opaque source-code-in and object-code-out translators,\nthrough Roslyn, compilers become platforms: APIs that you can use for\ncode-related tasks in your tools and applications."},{"pos":[1350,1385],"content":".NET Compiler Platform SDK concepts","linkify":".NET Compiler Platform SDK concepts","nodes":[{"content":".NET Compiler Platform SDK concepts","pos":[0,35]}]},{"content":"The .NET Compiler Platform SDK dramatically lowers the barrier to entry for creating code focused tools and applications.","pos":[1387,1508],"source":"The .NET Compiler Platform SDK dramatically lowers the barrier\nto entry for creating code focused tools and applications."},{"content":"It creates many opportunities for innovation in areas such as meta-programming, code generation and transformation, interactive use of the C# and VB languages, and embedding of C# and VB in domain specific languages.","pos":[1509,1725],"source":" It creates many\nopportunities for innovation in areas such as meta-programming, code\ngeneration and transformation, interactive use of the C# and VB languages,\nand embedding of C# and VB in domain specific languages."},{"content":"The .NET Compiler Platform SDK enables you to build <bpt id=\"p1\">***</bpt>analyzers<ept id=\"p1\">***</ept> and <bpt id=\"p2\">***</bpt>code fixes<ept id=\"p2\">***</ept> that find and correct coding mistakes.","pos":[1727,1854],"source":"The .NET Compiler Platform SDK enables you to build ***analyzers*** and\n***code fixes*** that find and correct coding mistakes."},{"content":"<bpt id=\"p1\">***</bpt>Analyzers<ept id=\"p1\">***</ept> understand the syntax and structure of code and detect practices that should be corrected.","pos":[1855,1961],"source":"***Analyzers***\nunderstand the syntax and structure of code and detect practices that\nshould be corrected."},{"content":"<bpt id=\"p1\">***</bpt>Code fixes<ept id=\"p1\">***</ept> provide one or more suggested fixes for addressing coding mistakes found by analyzers.","pos":[1962,2065],"source":"***Code fixes*** provide one or more suggested fixes\nfor addressing coding mistakes found by analyzers."},{"content":"Typically, an analyzer and the associated code fixes are packaged together in a single project.","pos":[2066,2161],"source":" Typically, an analyzer\nand the associated code fixes are packaged together in a single project."},{"content":"Analyzers and code fixes use static analysis to understand code.","pos":[2163,2227]},{"content":"They do not run the code or provide other testing benefits.","pos":[2228,2287],"source":" They\ndo not run the code or provide other testing benefits."},{"content":"They can, however, point out practices that often lead to bugs, unmaintainable code, or standard guideline validation.","pos":[2288,2406],"source":" They can, however,\npoint out practices that often lead to bugs, unmaintainable code, or\nstandard guideline validation."},{"content":"The .NET Compiler Platform SDK provides a single set of APIs that enable you to examine and understand a C# or Visual Basic codebase.","pos":[2408,2541],"source":"The .NET Compiler Platform SDK provides a single set of APIs that enable\nyou to examine and understand a C# or Visual Basic codebase."},{"content":"Because you can use this single codebase, you can write analyzers and code fixes more easily by leveraging the syntactic and semantic analysis APIs provided by the .NET Compiler Platform SDK.","pos":[2542,2733],"source":" Because you\ncan use this single codebase, you can write analyzers and code fixes more\neasily by leveraging the syntactic and semantic analysis APIs provided by\nthe .NET Compiler Platform SDK."},{"content":"Freed from the large task of replicating the analysis done by the compiler, you can concentrate on the more focused task of finding and fixing common coding errors for your project or library.","pos":[2734,2926],"source":" Freed from the large task of replicating\nthe analysis done by the compiler, you can concentrate on the more focused\ntask of finding and fixing common coding errors for your project or library."},{"content":"A smaller benefit is that your analyzers and code fixes are smaller and use much less memory when loaded in Visual Studio than they would if you wrote your own codebase to understand the code in a project.","pos":[2928,3133],"source":"A smaller benefit is that your analyzers and code fixes are smaller and\nuse much less memory when loaded in Visual Studio than they would\nif you wrote your own codebase to understand the code in a project."},{"content":"By leveraging the same classes used by the compiler and Visual Studio, you can create your own static analysis tools.","pos":[3134,3251],"source":" By\nleveraging the same classes used by the compiler and Visual Studio, you\ncan create your own static analysis tools."},{"content":"This means your team can use analyzers and code fixes without a noticeable impact on the IDE's performance.","pos":[3252,3359],"source":" This means your team\ncan use analyzers and code fixes without a noticeable impact on the IDE's\nperformance."},{"content":"There are three main scenarios for writing analyzers and code fixes:","pos":[3361,3429]},{"pos":[3434,3499],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">*</bpt>Enforce team coding standards<ept id=\"p2\">*</ept><ept id=\"p1\">](#enforce-team-coding-standards)</ept>","source":"[*Enforce team coding standards*](#enforce-team-coding-standards)"},{"pos":[3503,3586],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">*</bpt>Provide guidance with library packages<ept id=\"p2\">*</ept><ept id=\"p1\">](#provide-guidance-with-library-packages)</ept>","source":"[*Provide guidance with library packages*](#provide-guidance-with-library-packages)"},{"pos":[3590,3645],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">*</bpt>Provide general guidance<ept id=\"p2\">*</ept><ept id=\"p1\">](#provide-general-guidance)</ept>","source":"[*Provide general guidance*](#provide-general-guidance)"},{"pos":[3650,3679],"content":"Enforce team coding standards","linkify":"Enforce team coding standards","nodes":[{"content":"Enforce team coding standards","pos":[0,29]}]},{"content":"Many teams have coding standards that are enforced through code reviews with other team members.","pos":[3681,3777],"source":"Many teams have coding standards that are enforced through code reviews\nwith other team members."},{"content":"Analyzers and code fixes can make this process much more efficient.","pos":[3778,3845],"source":" Analyzers and code fixes can make this process\nmuch more efficient."},{"content":"Code reviews happen when a developer shares their work with others on the team.","pos":[3846,3925],"source":" Code reviews happen when a developer shares their work\nwith others on the team."},{"content":"The developer will have invested all the time needed to complete a new feature before getting any comments.","pos":[3926,4033],"source":" The developer will have invested all the time needed to\ncomplete a new feature before getting any comments."},{"content":"Weeks may go by while the developer reinforces habits that don't match the team's practices.","pos":[4034,4126],"source":" Weeks may go by\nwhile the developer reinforces habits that don't match the team's practices."},{"content":"Analyzers run as a developer writes code.","pos":[4128,4169]},{"content":"The developer gets immediate feedback that encourages following the guidance immediately.","pos":[4170,4259],"source":" The developer gets immediate feedback that\nencourages following the guidance immediately."},{"content":"The developer builds habits to write compliant code as soon as they begin prototyping.","pos":[4260,4346],"source":" The developer builds habits to write\ncompliant code as soon as they begin prototyping."},{"content":"When the feature is ready for humans to review, all the standard guidance has been enforced.","pos":[4347,4439],"source":" When the feature is\nready for humans to review, all the standard guidance has been enforced."},{"content":"Teams can build analyzers and code fixes that look for the most common practices that violate team coding practices.","pos":[4441,4557],"source":"Teams can build analyzers and code fixes that look for the most common\npractices that violate team coding practices."},{"content":"These can be installed on each developer's machine to enforce the standards.","pos":[4558,4634],"source":" These can be installed on\neach developer's machine to enforce the standards."},{"pos":[4639,4677],"content":"Provide guidance with library packages","linkify":"Provide guidance with library packages","nodes":[{"content":"Provide guidance with library packages","pos":[0,38]}]},{"content":"There are a wealth of libraries available for .NET developers on NuGet.","pos":[4679,4750]},{"content":"Some of these come from Microsoft, some from third-party companies, and others from community members and volunteers.","pos":[4751,4868],"source":"\nSome of these come from Microsoft, some from third-party companies, and\nothers from community members and volunteers."},{"content":"These libraries get more adoption and higher reviews when developers can succeed with those libraries.","pos":[4869,4971],"source":" These libraries get more\nadoption and higher reviews when developers can succeed with those\nlibraries."},{"content":"In addition to providing documentation, you can provide analyzers and code fixes that find and correct common mis-uses of your library.","pos":[4973,5108],"source":"In addition to providing documentation, you can provide analyzers and\ncode fixes that find and correct common mis-uses of your library."},{"content":"These immediate corrections will help developers succeed more quickly.","pos":[5109,5179],"source":" These\nimmediate corrections will help developers succeed more quickly."},{"content":"You can package analyzers and code fixes with your library on NuGet.","pos":[5181,5249]},{"content":"In that scenario, every developer who installs your NuGet package will also install the analyzer package.","pos":[5250,5355],"source":" In that\nscenario, every developer who installs your NuGet package will also install\nthe analyzer package."},{"content":"All developers using your library will immediately get guidance from your team in the form of immediate feedback on mistakes and suggested corrections.","pos":[5356,5507],"source":" All developers using your library will immediately\nget guidance from your team in the form of immediate feedback on mistakes\nand suggested corrections."},{"pos":[5512,5536],"content":"Provide general guidance","linkify":"Provide general guidance","nodes":[{"content":"Provide general guidance","pos":[0,24]}]},{"content":"The .NET developer community has discovered through experience patterns that work well and patterns that are best avoided.","pos":[5538,5660],"source":"The .NET developer community has discovered through experience patterns that\nwork well and patterns that are best avoided."},{"content":"Several community members have created analyzers that enforce those recommended patterns.","pos":[5661,5750],"source":" Several community members\nhave created analyzers that enforce those recommended patterns."},{"content":"As we learn more, there is always room for new ideas.","pos":[5751,5804],"source":" As we learn\nmore, there is always room for new ideas."},{"content":"These analyzers can be uploaded to the <bpt id=\"p1\">[</bpt>Visual Studio Marketplace<ept id=\"p1\">](https://marketplace.visualstudio.com/vs)</ept> and downloaded by developers using Visual Studio.","pos":[5806,5963],"source":"These analyzers can be uploaded to the\n[Visual Studio Marketplace](https://marketplace.visualstudio.com/vs) and downloaded\nby developers using Visual Studio."},{"content":"Newcomers to the language and the platform learn accepted practices quickly and become productive earlier in their .NET journey.","pos":[5964,6092],"source":" Newcomers to the language and the platform\nlearn accepted practices quickly and become productive earlier in their .NET\njourney."},{"content":"As these become more widely used, the community adopts these practices.","pos":[6093,6164],"source":" As these become more widely used, the community adopts these\npractices."},{"pos":[6169,6179],"content":"Next steps","linkify":"Next steps","nodes":[{"content":"Next steps","pos":[0,10]}]},{"content":"The .NET Compiler Platform SDK includes the latest language object models for code generation, analysis, and refactoring.","pos":[6181,6302],"source":"The .NET Compiler Platform SDK includes the latest language object models\nfor code generation, analysis, and refactoring."},{"content":"This section provides a conceptual overview of the .NET Compiler Platform SDK.","pos":[6303,6381],"source":" This section provides a\nconceptual overview of the .NET Compiler Platform SDK."},{"content":"Further details can be found in the quickstarts, samples and tutorials sections.","pos":[6382,6462],"source":" Further details can be\nfound in the quickstarts, samples and tutorials sections."},{"content":"You can learn more about the concepts in the .NET Compiler Platform SDK in these five topics:","pos":[6464,6557]},{"pos":[6561,6624],"content":"<bpt id=\"p1\">[</bpt>Explore code with the syntax visualizer<ept id=\"p1\">](syntax-visualizer.md)</ept>","source":"[Explore code with the syntax visualizer](syntax-visualizer.md)"},{"pos":[6627,6685],"content":"<bpt id=\"p1\">[</bpt>Understand the compiler API model<ept id=\"p1\">](compiler-api-model.md)</ept>","source":"[Understand the compiler API model](compiler-api-model.md)"},{"pos":[6688,6727],"content":"<bpt id=\"p1\">[</bpt>Work with syntax<ept id=\"p1\">](work-with-syntax.md)</ept>","source":"[Work with syntax](work-with-syntax.md)"},{"pos":[6730,6775],"content":"<bpt id=\"p1\">[</bpt>Work with semantics<ept id=\"p1\">](work-with-semantics.md)</ept>","source":"[Work with semantics](work-with-semantics.md)"},{"pos":[6778,6825],"content":"<bpt id=\"p1\">[</bpt>Work with a workspace<ept id=\"p1\">](work-with-workspace.md)</ept>","source":"[Work with a workspace](work-with-workspace.md)"},{"pos":[6827,6901],"content":"To get started, you'll need to install the <bpt id=\"p1\">**</bpt>.NET Compiler Platform SDK<ept id=\"p1\">**</ept>:","source":"To get started, you'll need to install the **.NET Compiler Platform SDK**:"}]}