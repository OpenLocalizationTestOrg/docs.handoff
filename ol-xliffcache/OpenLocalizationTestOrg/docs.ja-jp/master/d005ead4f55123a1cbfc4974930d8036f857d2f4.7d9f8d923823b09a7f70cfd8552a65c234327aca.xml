{"content":"---\ntitle: \"Implements Statement | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.Implements\"\n  - \"Implements\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Implements statement, syntax\"\n  - \"Implements statement\"\n  - \"interface implementation, Implements statement\"\nms.assetid: 1fafb83f-f55a-4215-8ea9-681e8622613d\ncaps.latest.revision: 17\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"\n---\n# Implements Statement\nSpecifies one or more interfaces, or interface members, that must be implemented in the class or structure definition in which it appears.  \n  \n## Syntax  \n  \n```  \nImplements interfacename [, ...]  \n-or-  \nImplements interfacename.interfacemember [, ...]  \n```  \n  \n## Parts  \n `interfacename`  \n Required. An interface whose properties, procedures, and events are to be implemented by corresponding members in the class or structure.  \n  \n `interfacemember`  \n Required. The member of an interface that is being implemented.  \n  \n## Remarks  \n An interface is a collection of prototypes representing the members (properties, procedures, and events) the interface encapsulates. Interfaces contain only the declarations for members; classes and structures implement these members. For more information, see [Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md).  \n  \n The `Implements` statement must immediately follow the `Class` or `Structure` statement.  \n  \n When you implement an interface, you must implement all the members declared in the interface. Omitting any member is considered to be a syntax error. To implement an individual member, you specify the [Implements](../../../visual-basic/language-reference/statements/implements-clause.md) keyword (which is separate from the `Implements` statement) when you declare the member in the class or structure. For more information, see [Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md).  \n  \n Classes can use [Private](../../../visual-basic/language-reference/modifiers/private.md) implementations of properties and procedures, but these members are accessible only by casting an instance of the implementing class into a variable declared to be of the type of the interface.  \n  \n## Example  \n The following example shows how to use the `Implements` statement to implement members of an interface. It defines an interface named `ICustomerInfo` with an event, a property, and a procedure. The class `customerInfo` implements all the members defined in the interface.  \n  \n [!code-vb[VbVbalrStatements#33](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/implements-statement_1.vb)]  \n  \n Note that the class `customerInfo` uses the `Implements` statement on a separate source code line to indicate that the class implements all the members of the `ICustomerInfo` interface. Then each member in the class uses the `Implements` keyword as part of its member declaration to indicate that it implements that interface member.  \n  \n## Example  \n The following two procedures show how you could use the interface implemented in the preceding example. To test the implementation, add these procedures to your project and call the `testImplements` procedure.  \n  \n [!code-vb[VbVbalrStatements#34](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/implements-statement_2.vb)]  \n  \n## See Also  \n [Implements](../../../visual-basic/language-reference/statements/implements-clause.md)   \n [Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md)   \n [Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md)","nodes":[{"pos":[4,690],"nodes":[{"content":"Implements Statement | Microsoft Docs","nodes":[{"pos":[0,37],"content":"Implements Statement | Microsoft Docs","nodes":[{"content":"Implements Statement | Microsoft Docs","pos":[0,37]}]}],"pos":[6,46],"yaml":true}],"content":"title: \"Implements Statement | Microsoft Docs\"\n\nms.date: \"2015-07-20\"\nms.prod: .net\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"devlang-visual-basic\"\n\nms.topic: \"article\"\nf1_keywords: \n  - \"vb.Implements\"\n  - \"Implements\"\ndev_langs: \n  - \"VB\"\nhelpviewer_keywords: \n  - \"Implements statement, syntax\"\n  - \"Implements statement\"\n  - \"interface implementation, Implements statement\"\nms.assetid: 1fafb83f-f55a-4215-8ea9-681e8622613d\ncaps.latest.revision: 17\nauthor: dotnet-bot\nms.author: dotnetcontent\n\ntranslation.priority.ht: \n  - \"cs-cz\"\n  - \"de-de\"\n  - \"es-es\"\n  - \"fr-fr\"\n  - \"it-it\"\n  - \"ja-jp\"\n  - \"ko-kr\"\n  - \"pl-pl\"\n  - \"pt-br\"\n  - \"ru-ru\"\n  - \"tr-tr\"\n  - \"zh-cn\"\n  - \"zh-tw\"","yamlblock":true},{"pos":[697,717],"content":"Implements Statement","linkify":"Implements Statement","nodes":[{"content":"Implements Statement","pos":[0,20]}]},{"content":"Specifies one or more interfaces, or interface members, that must be implemented in the class or structure definition in which it appears.","pos":[718,856]},{"pos":[865,871],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[988,993],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Required.","pos":[1016,1025]},{"content":"An interface whose properties, procedures, and events are to be implemented by corresponding members in the class or structure.","pos":[1026,1153]},{"content":"Required.","pos":[1181,1190]},{"content":"The member of an interface that is being implemented.","pos":[1191,1244]},{"pos":[1253,1260],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"An interface is a collection of prototypes representing the members (properties, procedures, and events) the interface encapsulates.","pos":[1264,1396]},{"content":"Interfaces contain only the declarations for members; classes and structures implement these members.","pos":[1397,1498]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Interfaces<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept>.","pos":[1499,1617],"source":" For more information, see [Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md)."},{"pos":[1624,1712],"content":"The <ph id=\"ph1\">`Implements`</ph> statement must immediately follow the <ph id=\"ph2\">`Class`</ph> or <ph id=\"ph3\">`Structure`</ph> statement.","source":"The `Implements` statement must immediately follow the `Class` or `Structure` statement."},{"content":"When you implement an interface, you must implement all the members declared in the interface.","pos":[1719,1813]},{"content":"Omitting any member is considered to be a syntax error.","pos":[1814,1869]},{"content":"To implement an individual member, you specify the <bpt id=\"p1\">[</bpt>Implements<ept id=\"p1\">](../../../visual-basic/language-reference/statements/implements-clause.md)</ept> keyword (which is separate from the <ph id=\"ph1\">`Implements`</ph> statement) when you declare the member in the class or structure.","pos":[1870,2122],"source":" To implement an individual member, you specify the [Implements](../../../visual-basic/language-reference/statements/implements-clause.md) keyword (which is separate from the `Implements` statement) when you declare the member in the class or structure."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Interfaces<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept>.","pos":[2123,2241],"source":" For more information, see [Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md)."},{"pos":[2248,2530],"content":"Classes can use <bpt id=\"p1\">[</bpt>Private<ept id=\"p1\">](../../../visual-basic/language-reference/modifiers/private.md)</ept> implementations of properties and procedures, but these members are accessible only by casting an instance of the implementing class into a variable declared to be of the type of the interface.","source":"Classes can use [Private](../../../visual-basic/language-reference/modifiers/private.md) implementations of properties and procedures, but these members are accessible only by casting an instance of the implementing class into a variable declared to be of the type of the interface."},{"pos":[2539,2546],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows how to use the <ph id=\"ph1\">`Implements`</ph> statement to implement members of an interface.","pos":[2550,2653],"source":"The following example shows how to use the `Implements` statement to implement members of an interface."},{"content":"It defines an interface named <ph id=\"ph1\">`ICustomerInfo`</ph> with an event, a property, and a procedure.","pos":[2654,2743],"source":" It defines an interface named `ICustomerInfo` with an event, a property, and a procedure."},{"content":"The class <ph id=\"ph1\">`customerInfo`</ph> implements all the members defined in the interface.","pos":[2744,2821],"source":" The class `customerInfo` implements all the members defined in the interface."},{"pos":[2828,2967],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrStatements#33<ept id=\"p2\">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/implements-statement_1.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrStatements#33](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/implements-statement_1.vb)]"},{"content":"Note that the class <ph id=\"ph1\">`customerInfo`</ph> uses the <ph id=\"ph2\">`Implements`</ph> statement on a separate source code line to indicate that the class implements all the members of the <ph id=\"ph3\">`ICustomerInfo`</ph> interface.","pos":[2974,3159],"source":"Note that the class `customerInfo` uses the `Implements` statement on a separate source code line to indicate that the class implements all the members of the `ICustomerInfo` interface."},{"content":"Then each member in the class uses the <ph id=\"ph1\">`Implements`</ph> keyword as part of its member declaration to indicate that it implements that interface member.","pos":[3160,3307],"source":" Then each member in the class uses the `Implements` keyword as part of its member declaration to indicate that it implements that interface member."},{"pos":[3316,3323],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following two procedures show how you could use the interface implemented in the preceding example.","pos":[3327,3430]},{"content":"To test the implementation, add these procedures to your project and call the <ph id=\"ph1\">`testImplements`</ph> procedure.","pos":[3431,3536],"source":" To test the implementation, add these procedures to your project and call the `testImplements` procedure."},{"pos":[3543,3682],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrStatements#34<ept id=\"p2\">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/implements-statement_2.vb)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrStatements#34](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/implements-statement_2.vb)]"},{"pos":[3691,3699],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Implements<ept id=\"p1\">](../../../visual-basic/language-reference/statements/implements-clause.md)</ept><ph id=\"ph1\"> </ph>","pos":[3703,3790],"source":"[Implements](../../../visual-basic/language-reference/statements/implements-clause.md) "},{"content":"<bpt id=\"p1\">[</bpt>Interface Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/interface-statement.md)</ept><ph id=\"ph1\"> </ph>","pos":[3794,3892],"source":"[Interface Statement](../../../visual-basic/language-reference/statements/interface-statement.md) "},{"content":"<bpt id=\"p1\">[</bpt>Interfaces<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept>","pos":[3896,3987],"source":"[Interfaces](../../../visual-basic/programming-guide/language-features/interfaces/index.md)"}]}