{"content":"---\ntitle: \"Flowchart Activities in WF\"\nms.date: \"03/30/2017\"\nms.assetid: e80d9734-b43a-4d21-a250-74400330a4c0\n---\n# Flowchart Activities in WF\n[!INCLUDE[netfx_current_long](../../../includes/netfx-current-long-md.md)] provides several system-provided activities for controlling execution and branching within a Flowchart.  \n  \n|||  \n|-|-|  \n|<xref:System.Activities.Statements.Flowchart>|Executes contained activities using the familiar Flowchart paradigm.|  \n|<xref:System.Activities.Statements.FlowDecision>|A specialized <xref:System.Activities.Statements.FlowNode> that provides the ability to model a conditional node with two outcomes.|  \n|<xref:System.Activities.Statements.FlowSwitch%601>|A specialized <xref:System.Activities.Statements.FlowNode> that allows modeling a switch construct, with one expression of a type defined in the activity’s type specifier and a single outcome for each match.|  \n  \n## See also\n\n- [Getting Started Tutorial](getting-started-tutorial.md)\n","nodes":[{"pos":[4,110],"embed":true,"restype":"x-metadata","content":"title: \"Flowchart Activities in WF\"\nms.date: \"03/30/2017\"\nms.assetid: e80d9734-b43a-4d21-a250-74400330a4c0","nodes":[{"content":"Flowchart Activities in WF","nodes":[{"pos":[0,26],"content":"Flowchart Activities in WF","nodes":[{"content":"Flowchart Activities in WF","pos":[0,26]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[117,143],"content":"Flowchart Activities in WF","linkify":"Flowchart Activities in WF","nodes":[{"content":"Flowchart Activities in WF","pos":[0,26]}]},{"pos":[144,322],"content":"<ph id=\"ph1\">[!INCLUDE[netfx_current_long](../../../includes/netfx-current-long-md.md)]</ph> provides several system-provided activities for controlling execution and branching within a Flowchart.","source":"[!INCLUDE[netfx_current_long](../../../includes/netfx-current-long-md.md)] provides several system-provided activities for controlling execution and branching within a Flowchart."},{"content":"Executes contained activities using the familiar Flowchart paradigm.","pos":[389,457]},{"pos":[511,642],"content":"A specialized <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> that provides the ability to model a conditional node with two outcomes.","source":"A specialized <xref:System.Activities.Statements.FlowNode> that provides the ability to model a conditional node with two outcomes."},{"pos":[698,905],"content":"A specialized <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> that allows modeling a switch construct, with one expression of a type defined in the activity’s type specifier and a single outcome for each match.","source":"A specialized <xref:System.Activities.Statements.FlowNode> that allows modeling a switch construct, with one expression of a type defined in the activity’s type specifier and a single outcome for each match."},{"pos":[915,923],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[927,982],"content":"<bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](getting-started-tutorial.md)</ept>","source":"[Getting Started Tutorial](getting-started-tutorial.md)"}]}