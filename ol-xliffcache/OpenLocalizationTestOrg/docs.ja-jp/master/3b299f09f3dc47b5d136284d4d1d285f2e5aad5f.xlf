<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="outputs-from-an-xsltransform.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b299f09f3dc47b5d136284d4d1d285f2e5aad5f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\data\xml\outputs-from-an-xsltransform.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">961cd2986a8cbdf5ee576deebf7ece8b8b9de4f7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1126b2fe5f0d547fd43d1189e42b3c9e3a47c688</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Outputs from an XslTransform</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Outputs from an XslTransform</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Since style sheets can determine the output format using an <ph id="ph1">`&lt;xsl:output&gt;`</ph> statement with the <ph id="ph2">`method`</ph> attribute, the following table describes what the output format is when the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method is used to write the output, and the output format is declared as a <ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph> or <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class is obsolete in the <ph id="ph2">[!INCLUDE[dnprdnext](../../../../includes/dnprdnext-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can perform Extensible Stylesheet Language for Transformations (XSLT) transformations using the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](../../../../docs/standard/data/xml/using-the-xslcompiledtransform-class.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](../../../../docs/standard/data/xml/migrating-from-the-xsltransform-class.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Since style sheets can determine the output format using an <ph id="ph1">`&lt;xsl:output&gt;`</ph> statement with the <ph id="ph2">`method`</ph> attribute, the following table describes what the output format is when the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method is used to write the output, and the output format is declared as a <ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph> or <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following table describes what happens when an output type is declared by the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method in conjunction with the use of an <ph id="ph2">`&lt;xsl:output&gt;`</ph> statement:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\&lt;</ph>xsl:output method = &gt; attribute</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Result format</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>method="xml"</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>method="html"</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>HTML</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>method="text"</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Note: The <ph id="ph1">`&lt;xsl:output&gt;`</ph> statement is ignored when the output of the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method is an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following attributes are supported when the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method output is a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>encoding*</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>omit-xml-declaration</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>standalone</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>doctype-public</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>doctype-system</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>cdata-section-elements</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>indent</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>*the encoding attribute is ignored when the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method is sending its output to a <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The encoding property on the <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> is used instead.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following attribute is ignored when the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method output is a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>version: the version is always 1.0</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>media-type: the media-type</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Escaping Special Characters</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;xsl:text disable-output-escaping&gt;`</ph> tag is used to indicate whether or not special characters need to be escaped into an XML form (for example, using <ph id="ph2">`&lt;&amp;lt&gt;`</ph> in place of the <ph id="ph3">`"&lt;"`</ph> symbol) or left in the present condition.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`disable-output-escaping`</ph> attribute is ignored when transforming to an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> object and has no effect on special characters.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XslTransform Class Implements the XSLT Processor<ept id="p1">](../../../../docs/standard/data/xml/xsltransform-class-implements-the-xslt-processor.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>