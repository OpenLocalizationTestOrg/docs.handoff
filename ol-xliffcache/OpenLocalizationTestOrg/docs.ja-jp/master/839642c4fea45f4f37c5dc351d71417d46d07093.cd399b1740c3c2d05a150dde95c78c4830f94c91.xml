{"content":"---\ntitle: \"Detecting Changes with SqlDependency\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nms.assetid: e6a58316-f005-4477-92e1-45cc2eb8c5b4\n---\n\n# Detecting Changes with SqlDependency\n\nA <xref:System.Data.SqlClient.SqlDependency> object can be associated with a <xref:System.Data.SqlClient.SqlCommand> in order to detect when query results differ from those originally retrieved. You can also assign a delegate to the `OnChange` event, which will fire when the results change for an associated command. You must associate the <xref:System.Data.SqlClient.SqlDependency> with the command before you execute the command. The `HasChanges` property of the <xref:System.Data.SqlClient.SqlDependency> can also be used to determine if the query results have changed since the data was first retrieved.\n\n## Security Considerations\n\nThe dependency infrastructure relies on a <xref:System.Data.SqlClient.SqlConnection> that is opened when <xref:System.Data.SqlClient.SqlDependency.Start%2A> is called in order to receive notifications that the underlying data has changed for a given command. The ability for a client to initiate the call to `SqlDependency.Start` is controlled through the use of <xref:System.Data.SqlClient.SqlClientPermission> and code access security attributes. For more information, see [Enabling Query Notifications](../../../../../docs/framework/data/adonet/sql/enabling-query-notifications.md) and [Code Access Security and ADO.NET](../../../../../docs/framework/data/adonet/code-access-security.md).\n\n### Example\n\nThe following steps illustrate how to declare a dependency, execute a command, and receive a notification when the result set changes:\n\n1. Initiate a `SqlDependency` connection to the server.\n\n2. Create <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> objects to connect to the server and define a Transact-SQL statement.\n\n3. Create a new `SqlDependency` object, or use an existing one, and bind it to the `SqlCommand` object. Internally, this creates a <xref:System.Data.Sql.SqlNotificationRequest> object and binds it to the command object as needed. This notification request contains an internal identifier that uniquely identifies this `SqlDependency` object. It also starts the client listener if it is not already active.\n\n4. Subscribe an event handler to the `OnChange` event of the `SqlDependency` object.\n\n5. Execute the command using any of the `Execute` methods of the `SqlCommand` object. Because the command is bound to the notification object, the server recognizes that it must generate a notification, and the queue information will point to the dependencies queue.\n\n6. Stop the `SqlDependency` connection to the server.\n\nIf any user subsequently changes the underlying data, Microsoft SQL Server detects that there is a notification pending for such a change, and posts a notification that is processed and forwarded to the client through the underlying `SqlConnection` that was created by calling `SqlDependency.Start`. The client listener receives the invalidation message. The client listener then locates the associated `SqlDependency` object and fires the `OnChange` event.\n\nThe following code fragment shows the design pattern you would use to create a sample application.\n\n```vb\nSub Initialization()\n    ' Create a dependency connection.\n    SqlDependency.Start(connectionString, queueName)\nEnd Sub\n\nSub SomeMethod()\n    ' Assume connection is an open SqlConnection.\n    ' Create a new SqlCommand object.\n    Using command As New SqlCommand( _\n      \"SELECT ShipperID, CompanyName, Phone FROM dbo.Shippers\", _\n      connection)\n\n        ' Create a dependency and associate it with the SqlCommand.\n        Dim dependency As New SqlDependency(command)\n        ' Maintain the refernce in a class member.\n        ' Subscribe to the SqlDependency event.\n        AddHandler dependency.OnChange, AddressOf OnDependencyChange\n\n        ' Execute the command.\n        Using reader = command.ExecuteReader()\n            ' Process the DataReader.\n        End Using\n    End Using\nEnd Sub\n\n' Handler method\nSub OnDependencyChange(ByVal sender As Object, _\n    ByVal e As SqlNotificationEventArgs)\n    ' Handle the event (for example, invalidate this cache entry).\nEnd Sub\n\nSub Termination()\n    ' Release the dependency\n    SqlDependency.Stop(connectionString, queueName)\nEnd Sub\n```\n\n```csharp\nvoid Initialization()\n{\n    // Create a dependency connection.\n    SqlDependency.Start(connectionString, queueName);\n}\n\nvoid SomeMethod()\n{\n    // Assume connection is an open SqlConnection.\n\n    // Create a new SqlCommand object.\n    using (SqlCommand command=new SqlCommand(\n        \"SELECT ShipperID, CompanyName, Phone FROM dbo.Shippers\",\n        connection))\n    {\n\n        // Create a dependency and associate it with the SqlCommand.\n        SqlDependency dependency=new SqlDependency(command);\n        // Maintain the reference in a class member.\n\n        // Subscribe to the SqlDependency event.\n        dependency.OnChange+=new\n           OnChangeEventHandler(OnDependencyChange);\n\n        // Execute the command.\n        using (SqlDataReader reader = command.ExecuteReader())\n        {\n            // Process the DataReader.\n        }\n    }\n}\n\n// Handler method\nvoid OnDependencyChange(object sender,\n   SqlNotificationEventArgs e )\n{\n  // Handle the event (for example, invalidate this cache entry).\n}\n\nvoid Termination()\n{\n    // Release the dependency.\n    SqlDependency.Stop(connectionString, queueName);\n}\n```\n\n## See also\n\n- [Query Notifications in SQL Server](../../../../../docs/framework/data/adonet/sql/query-notifications-in-sql-server.md)\n- [ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)\n","nodes":[{"pos":[4,153],"embed":true,"restype":"x-metadata","content":"title: \"Detecting Changes with SqlDependency\"\nms.date: \"03/30/2017\"\ndev_langs:\n  - \"csharp\"\n  - \"vb\"\nms.assetid: e6a58316-f005-4477-92e1-45cc2eb8c5b4","nodes":[{"content":"Detecting Changes with SqlDependency","nodes":[{"pos":[0,36],"content":"Detecting Changes with SqlDependency","nodes":[{"content":"Detecting Changes with SqlDependency","pos":[0,36]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[161,197],"content":"Detecting Changes with SqlDependency","linkify":"Detecting Changes with SqlDependency","nodes":[{"content":"Detecting Changes with SqlDependency","pos":[0,36]}]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> object can be associated with a <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> in order to detect when query results differ from those originally retrieved.","pos":[199,393],"source":"A <xref:System.Data.SqlClient.SqlDependency> object can be associated with a <xref:System.Data.SqlClient.SqlCommand> in order to detect when query results differ from those originally retrieved."},{"content":"You can also assign a delegate to the <ph id=\"ph1\">`OnChange`</ph> event, which will fire when the results change for an associated command.","pos":[394,516],"source":" You can also assign a delegate to the `OnChange` event, which will fire when the results change for an associated command."},{"content":"You must associate the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> with the command before you execute the command.","pos":[517,631],"source":" You must associate the <xref:System.Data.SqlClient.SqlDependency> with the command before you execute the command."},{"content":"The <ph id=\"ph1\">`HasChanges`</ph> property of the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> can also be used to determine if the query results have changed since the data was first retrieved.","pos":[632,807],"source":" The `HasChanges` property of the <xref:System.Data.SqlClient.SqlDependency> can also be used to determine if the query results have changed since the data was first retrieved."},{"pos":[812,835],"content":"Security Considerations","linkify":"Security Considerations","nodes":[{"content":"Security Considerations","pos":[0,23]}]},{"content":"The dependency infrastructure relies on a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is opened when <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDependency.Start%2A&gt;</ph> is called in order to receive notifications that the underlying data has changed for a given command.","pos":[837,1095],"source":"The dependency infrastructure relies on a <xref:System.Data.SqlClient.SqlConnection> that is opened when <xref:System.Data.SqlClient.SqlDependency.Start%2A> is called in order to receive notifications that the underlying data has changed for a given command."},{"content":"The ability for a client to initiate the call to <ph id=\"ph1\">`SqlDependency.Start`</ph> is controlled through the use of <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlClientPermission&gt;</ph> and code access security attributes.","pos":[1096,1285],"source":" The ability for a client to initiate the call to `SqlDependency.Start` is controlled through the use of <xref:System.Data.SqlClient.SqlClientPermission> and code access security attributes."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Enabling Query Notifications<ept id=\"p1\">](../../../../../docs/framework/data/adonet/sql/enabling-query-notifications.md)</ept> and <bpt id=\"p2\">[</bpt>Code Access Security and ADO.NET<ept id=\"p2\">](../../../../../docs/framework/data/adonet/code-access-security.md)</ept>.","pos":[1286,1528],"source":" For more information, see [Enabling Query Notifications](../../../../../docs/framework/data/adonet/sql/enabling-query-notifications.md) and [Code Access Security and ADO.NET](../../../../../docs/framework/data/adonet/code-access-security.md)."},{"pos":[1534,1541],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following steps illustrate how to declare a dependency, execute a command, and receive a notification when the result set changes:","pos":[1543,1677]},{"pos":[1682,1734],"content":"Initiate a <ph id=\"ph1\">`SqlDependency`</ph> connection to the server.","source":"Initiate a `SqlDependency` connection to the server."},{"pos":[1739,1902],"content":"Create <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> objects to connect to the server and define a Transact-SQL statement.","source":"Create <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> objects to connect to the server and define a Transact-SQL statement."},{"content":"Create a new <ph id=\"ph1\">`SqlDependency`</ph> object, or use an existing one, and bind it to the <ph id=\"ph2\">`SqlCommand`</ph> object.","pos":[1907,2007],"source":"Create a new `SqlDependency` object, or use an existing one, and bind it to the `SqlCommand` object."},{"content":"Internally, this creates a <ph id=\"ph1\">&lt;xref:System.Data.Sql.SqlNotificationRequest&gt;</ph> object and binds it to the command object as needed.","pos":[2008,2133],"source":" Internally, this creates a <xref:System.Data.Sql.SqlNotificationRequest> object and binds it to the command object as needed."},{"content":"This notification request contains an internal identifier that uniquely identifies this <ph id=\"ph1\">`SqlDependency`</ph> object.","pos":[2134,2245],"source":" This notification request contains an internal identifier that uniquely identifies this `SqlDependency` object."},{"content":"It also starts the client listener if it is not already active.","pos":[2246,2309]},{"pos":[2314,2395],"content":"Subscribe an event handler to the <ph id=\"ph1\">`OnChange`</ph> event of the <ph id=\"ph2\">`SqlDependency`</ph> object.","source":"Subscribe an event handler to the `OnChange` event of the `SqlDependency` object."},{"content":"Execute the command using any of the <ph id=\"ph1\">`Execute`</ph> methods of the <ph id=\"ph2\">`SqlCommand`</ph> object.","pos":[2400,2482],"source":"Execute the command using any of the `Execute` methods of the `SqlCommand` object."},{"content":"Because the command is bound to the notification object, the server recognizes that it must generate a notification, and the queue information will point to the dependencies queue.","pos":[2483,2663]},{"pos":[2668,2718],"content":"Stop the <ph id=\"ph1\">`SqlDependency`</ph> connection to the server.","source":"Stop the `SqlDependency` connection to the server."},{"content":"If any user subsequently changes the underlying data, Microsoft SQL Server detects that there is a notification pending for such a change, and posts a notification that is processed and forwarded to the client through the underlying <ph id=\"ph1\">`SqlConnection`</ph> that was created by calling <ph id=\"ph2\">`SqlDependency.Start`</ph>.","pos":[2720,3019],"source":"If any user subsequently changes the underlying data, Microsoft SQL Server detects that there is a notification pending for such a change, and posts a notification that is processed and forwarded to the client through the underlying `SqlConnection` that was created by calling `SqlDependency.Start`."},{"content":"The client listener receives the invalidation message.","pos":[3020,3074]},{"content":"The client listener then locates the associated <ph id=\"ph1\">`SqlDependency`</ph> object and fires the <ph id=\"ph2\">`OnChange`</ph> event.","pos":[3075,3177],"source":" The client listener then locates the associated `SqlDependency` object and fires the `OnChange` event."},{"content":"The following code fragment shows the design pattern you would use to create a sample application.","pos":[3179,3277]},{"pos":[5516,5524],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[5528,5647],"content":"<bpt id=\"p1\">[</bpt>Query Notifications in SQL Server<ept id=\"p1\">](../../../../../docs/framework/data/adonet/sql/query-notifications-in-sql-server.md)</ept>","source":"[Query Notifications in SQL Server](../../../../../docs/framework/data/adonet/sql/query-notifications-in-sql-server.md)"},{"pos":[5650,5754],"content":"<bpt id=\"p1\">[</bpt>ADO.NET Managed Providers and DataSet Developer Center<ept id=\"p1\">](https://go.microsoft.com/fwlink/?LinkId=217917)</ept>","source":"[ADO.NET Managed Providers and DataSet Developer Center](https://go.microsoft.com/fwlink/?LinkId=217917)"}]}