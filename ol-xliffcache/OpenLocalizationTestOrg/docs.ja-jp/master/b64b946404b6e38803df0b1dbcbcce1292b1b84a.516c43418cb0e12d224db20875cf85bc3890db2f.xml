{"content":"---\ntitle: \"Generic Collections in the .NET Framework | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"generics [.NET Framework], collections\"\n  - \"generic collections [.NET Framework]\"\nms.assetid: 5b646751-6ab7-465c-916c-b1a76aefa9f5\ncaps.latest.revision: 8\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"\n---\n# Generic Collections in the .NET Framework\nThis topic provides an overview of the generic collection classes and other generic types in the .NET Framework.  \n  \n## Generic Collections in the .NET Framework  \n The .NET Framework class library provides a number of generic collection classes in the <xref:System.Collections.Generic> and <xref:System.Collections.ObjectModel> namespaces. For more information about these classes, see [Commonly Used Collection Types](../../../docs/standard/collections/commonly-used-collection-types.md).  \n  \n### System.Collections.Generic  \n Many of the generic collection types are direct analogs of nongeneric types. <xref:System.Collections.Generic.Dictionary%602> is a generic version of <xref:System.Collections.Hashtable>; it uses the generic structure <xref:System.Collections.Generic.KeyValuePair%602> for enumeration instead of <xref:System.Collections.DictionaryEntry>.  \n  \n <xref:System.Collections.Generic.List%601> is a generic version of <xref:System.Collections.ArrayList>. There are generic <xref:System.Collections.Generic.Queue%601> and <xref:System.Collections.Generic.Stack%601> classes that correspond to the nongeneric versions.  \n  \n There are generic and nongeneric versions of <xref:System.Collections.Generic.SortedList%602>. Both versions are hybrids of a dictionary and a list. The <xref:System.Collections.Generic.SortedDictionary%602> generic class is a pure dictionary and has no nongeneric counterpart.  \n  \n The <xref:System.Collections.Generic.LinkedList%601> generic class is a true linked list. It has no nongeneric counterpart.  \n  \n### System.Collections.ObjectModel  \n The <xref:System.Collections.ObjectModel.Collection%601> generic class provides a base class for deriving your own generic collection types. The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class provides an easy way to produce a read-only collection from any type that implements the <xref:System.Collections.Generic.IList%601> generic interface. The <xref:System.Collections.ObjectModel.KeyedCollection%602> generic class provides a way to store objects that contain their own keys.  \n  \n## Other Generic Types  \n The <xref:System.Nullable%601>generic structure allows you to use value types as if they could be assigned `null`. This can be useful when working with database queries, where fields that contain value types can be missing. The generic type parameter can be any value type.  \n  \n> [!NOTE]\n>  In C# it is not necessary to use <xref:System.Nullable%601> explicitly because the language has syntax for nullable types.  \n  \n The <xref:System.ArraySegment%601> generic structure provides a way to delimit a range of elements within a one-dimensional, zero-based array of any type. The generic type parameter is the type of the array's elements.  \n  \n The <xref:System.EventHandler%601> generic delegate eliminates the need to declare a delegate type to handle events, if your event follows the event-handling pattern used by the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]. For example, suppose you have created a `MyEventArgs` class, derived from <xref:System.EventArgs>, to hold the data for your event. You can then declare the event as follows:  \n  \n [!code-cpp[Conceptual.Generics.Overview#7](../../../samples/snippets/cpp/VS_Snippets_CLR/conceptual.generics.overview/cpp/source2.cpp#7)]\n [!code-csharp[Conceptual.Generics.Overview#7](../../../samples/snippets/csharp/VS_Snippets_CLR/conceptual.generics.overview/cs/source2.cs#7)]\n [!code-vb[Conceptual.Generics.Overview#7](../../../samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.generics.overview/vb/source2.vb#7)]  \n  \n## See Also  \n <xref:System.Collections.Generic?displayProperty=fullName>   \n <xref:System.Collections.ObjectModel?displayProperty=fullName>   \n [Generics](../../../docs/standard/generics/index.md)   \n [Generic Delegates for Manipulating Arrays and Lists](../../../docs/standard/generics/delegates-for-manipulating-arrays-and-lists.md)   \n [Generic Interfaces](../../../docs/standard/generics/interfaces.md)","nodes":[{"pos":[4,461],"embed":true,"restype":"x-metadata","content":"title: \"Generic Collections in the .NET Framework | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"generics [.NET Framework], collections\"\n  - \"generic collections [.NET Framework]\"\nms.assetid: 5b646751-6ab7-465c-916c-b1a76aefa9f5\ncaps.latest.revision: 8\nauthor: \"mairaw\"\nms.author: \"mairaw\"\nmanager: \"wpickett\"","nodes":[{"content":"Generic Collections in the .NET Framework | Microsoft Docs","nodes":[{"pos":[0,58],"content":"Generic Collections in the .NET Framework | Microsoft Docs","nodes":[{"content":"Generic Collections in the .NET Framework | Microsoft Docs","pos":[0,58]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[468,509],"content":"Generic Collections in the .NET Framework","linkify":"Generic Collections in the .NET Framework","nodes":[{"content":"Generic Collections in the .NET Framework","pos":[0,41]}]},{"content":"This topic provides an overview of the generic collection classes and other generic types in the .NET Framework.","pos":[510,622]},{"pos":[631,672],"content":"Generic Collections in the .NET Framework","linkify":"Generic Collections in the .NET Framework","nodes":[{"content":"Generic Collections in the .NET Framework","pos":[0,41]}]},{"content":"The .NET Framework class library provides a number of generic collection classes in the <ph id=\"ph1\">&lt;xref:System.Collections.Generic&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.ObjectModel&gt;</ph> namespaces.","pos":[676,851],"source":"The .NET Framework class library provides a number of generic collection classes in the <xref:System.Collections.Generic> and <xref:System.Collections.ObjectModel> namespaces."},{"content":"For more information about these classes, see <bpt id=\"p1\">[</bpt>Commonly Used Collection Types<ept id=\"p1\">](../../../docs/standard/collections/commonly-used-collection-types.md)</ept>.","pos":[852,1001],"source":" For more information about these classes, see [Commonly Used Collection Types](../../../docs/standard/collections/commonly-used-collection-types.md)."},{"pos":[1011,1037],"content":"System.Collections.Generic","linkify":"System.Collections.Generic","nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"content":"Many of the generic collection types are direct analogs of nongeneric types.","pos":[1041,1117]},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is a generic version of <ph id=\"ph2\">&lt;xref:System.Collections.Hashtable&gt;</ph>; it uses the generic structure <ph id=\"ph3\">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> for enumeration instead of <ph id=\"ph4\">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.","pos":[1118,1378],"source":"<xref:System.Collections.Generic.Dictionary%602> is a generic version of <xref:System.Collections.Hashtable>; it uses the generic structure <xref:System.Collections.Generic.KeyValuePair%602> for enumeration instead of <xref:System.Collections.DictionaryEntry>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Generic.List%601&gt;</ph> is a generic version of <ph id=\"ph2\">&lt;xref:System.Collections.ArrayList&gt;</ph>.","pos":[1385,1488],"source":"<xref:System.Collections.Generic.List%601> is a generic version of <xref:System.Collections.ArrayList>."},{"content":"There are generic <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph> classes that correspond to the nongeneric versions.","pos":[1489,1650],"source":" There are generic <xref:System.Collections.Generic.Queue%601> and <xref:System.Collections.Generic.Stack%601> classes that correspond to the nongeneric versions."},{"content":"There are generic and nongeneric versions of <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.","pos":[1657,1751],"source":"There are generic and nongeneric versions of <xref:System.Collections.Generic.SortedList%602>."},{"content":"Both versions are hybrids of a dictionary and a list.","pos":[1752,1805]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic class is a pure dictionary and has no nongeneric counterpart.","pos":[1806,1934],"source":" The <xref:System.Collections.Generic.SortedDictionary%602> generic class is a pure dictionary and has no nongeneric counterpart."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> generic class is a true linked list.","pos":[1941,2030],"source":"The <xref:System.Collections.Generic.LinkedList%601> generic class is a true linked list."},{"content":"It has no nongeneric counterpart.","pos":[2031,2064]},{"pos":[2074,2104],"content":"System.Collections.ObjectModel","linkify":"System.Collections.ObjectModel","nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class provides a base class for deriving your own generic collection types.","pos":[2108,2248],"source":"The <xref:System.Collections.ObjectModel.Collection%601> generic class provides a base class for deriving your own generic collection types."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> class provides an easy way to produce a read-only collection from any type that implements the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface.","pos":[2249,2471],"source":" The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class provides an easy way to produce a read-only collection from any type that implements the <xref:System.Collections.Generic.IList%601> generic interface."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> generic class provides a way to store objects that contain their own keys.","pos":[2472,2608],"source":" The <xref:System.Collections.ObjectModel.KeyedCollection%602> generic class provides a way to store objects that contain their own keys."},{"pos":[2617,2636],"content":"Other Generic Types","linkify":"Other Generic Types","nodes":[{"content":"Other Generic Types","pos":[0,19]}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Nullable%601&gt;</ph>generic structure allows you to use value types as if they could be assigned <ph id=\"ph2\">`null`</ph>.","pos":[2640,2754],"source":"The <xref:System.Nullable%601>generic structure allows you to use value types as if they could be assigned `null`."},{"content":"This can be useful when working with database queries, where fields that contain value types can be missing.","pos":[2755,2863]},{"content":"The generic type parameter can be any value type.","pos":[2864,2913]},{"pos":[2921,3054],"content":"[!NOTE]\n In C# it is not necessary to use <xref:System.Nullable%601> explicitly because the language has syntax for nullable types.","leadings":["","> "],"nodes":[{"content":"In C# it is not necessary to use <ph id=\"ph1\">&lt;xref:System.Nullable%601&gt;</ph> explicitly because the language has syntax for nullable types.","pos":[9,131],"source":"In C# it is not necessary to use <xref:System.Nullable%601> explicitly because the language has syntax for nullable types."}]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ArraySegment%601&gt;</ph> generic structure provides a way to delimit a range of elements within a one-dimensional, zero-based array of any type.","pos":[3061,3215],"source":"The <xref:System.ArraySegment%601> generic structure provides a way to delimit a range of elements within a one-dimensional, zero-based array of any type."},{"content":"The generic type parameter is the type of the array's elements.","pos":[3216,3279]},{"content":"The <ph id=\"ph1\">&lt;xref:System.EventHandler%601&gt;</ph> generic delegate eliminates the need to declare a delegate type to handle events, if your event follows the event-handling pattern used by the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]</ph>.","pos":[3286,3525],"source":"The <xref:System.EventHandler%601> generic delegate eliminates the need to declare a delegate type to handle events, if your event follows the event-handling pattern used by the [!INCLUDE[dnprdnshort](../../../includes/dnprdnshort-md.md)]."},{"content":"For example, suppose you have created a <ph id=\"ph1\">`MyEventArgs`</ph> class, derived from <ph id=\"ph2\">&lt;xref:System.EventArgs&gt;</ph>, to hold the data for your event.","pos":[3526,3657],"source":" For example, suppose you have created a `MyEventArgs` class, derived from <xref:System.EventArgs>, to hold the data for your event."},{"content":"You can then declare the event as follows:","pos":[3658,3700]},{"pos":[4140,4148],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"content":"<bpt id=\"p1\">[</bpt>Generics<ept id=\"p1\">](../../../docs/standard/generics/index.md)</ept><ph id=\"ph1\"> </ph>","pos":[4282,4335],"source":"[Generics](../../../docs/standard/generics/index.md) "},{"content":"<bpt id=\"p1\">[</bpt>Generic Delegates for Manipulating Arrays and Lists<ept id=\"p1\">](../../../docs/standard/generics/delegates-for-manipulating-arrays-and-lists.md)</ept><ph id=\"ph1\"> </ph>","pos":[4339,4473],"source":"[Generic Delegates for Manipulating Arrays and Lists](../../../docs/standard/generics/delegates-for-manipulating-arrays-and-lists.md) "},{"content":"<bpt id=\"p1\">[</bpt>Generic Interfaces<ept id=\"p1\">](../../../docs/standard/generics/interfaces.md)</ept>","pos":[4477,4544],"source":"[Generic Interfaces](../../../docs/standard/generics/interfaces.md)"}]}