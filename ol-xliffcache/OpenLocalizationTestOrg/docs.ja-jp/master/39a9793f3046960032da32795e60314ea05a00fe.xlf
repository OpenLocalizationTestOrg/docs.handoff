<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="how-to-support-com-interop-by-displaying-each-windows-form-on-its-own-thread.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39a9793f3046960032da32795e60314ea05a00fe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\winforms\advanced\how-to-support-com-interop-by-displaying-each-windows-form-on-its-own-thread.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fb16b5caab27055620b9bf62d8e1cbca2972715</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c989dc00102edb8aa62e1ca2a28b0fb4d0cd04a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>How to: Support COM Interop by Displaying Each Windows Form on Its Own Thread</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Support COM Interop by Displaying Each Windows Form on Its Own Thread</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can resolve COM interoperability problems by displaying your form on a <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> message loop, which you can create by using the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To make a Windows Form work correctly from a COM client application, you must run the form on a Windows Forms message loop.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To do this, use one of the following approaches:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A?displayProperty=nameWithType&gt;</ph> method to display the Windows Form.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Support COM Interop by Displaying a Windows Form with the ShowDialog Method<ept id="p1">](com-interop-by-displaying-a-windows-form-shadow.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Display each Windows Form on a separate thread.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>There is extensive support for this feature in Visual Studio.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>Walkthrough: Supporting COM Interop by Displaying Each Windows Form on Its Own Thread<ept id="p1">](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/ms233639(v=vs.100))</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to display the form on a separate thread and call the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> method to start a Windows Forms message pump on that thread.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To use this approach, you must marshal any calls to the form from the unmanaged application by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This approach requires that each instance of a form runs on its own thread by using its own message loop.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You cannot have more than one message loop running per thread.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Therefore, you cannot change the client application's message loop.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, you can modify the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../includes/dnprdnshort-md.md)]</ph> component to start a new thread that uses its own message loop.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Compile the <ph id="ph1">`COMForm`</ph>, <ph id="ph2">`Form1`</ph>, and <ph id="ph3">`FormManager`</ph> types into an assembly called <ph id="ph4">`COMWinform.dll`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Register the assembly for COM interop by using one of the methods described in <bpt id="p1">[</bpt>Packaging an Assembly for COM<ept id="p1">](../../interop/packaging-an-assembly-for-com.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can now use the assembly and its corresponding type library (.tlb) file in unmanaged applications.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, you can use the type library as a reference in a Visual Basic 6.0 executable project.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Exposing .NET Framework Components to COM<ept id="p1">](../../interop/exposing-dotnet-components-to-com.md)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Packaging an Assembly for COM<ept id="p1">](../../interop/packaging-an-assembly-for-com.md)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Registering Assemblies with COM<ept id="p1">](../../interop/registering-assemblies-with-com.md)</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Support COM Interop by Displaying a Windows Form with the ShowDialog Method<ept id="p1">](com-interop-by-displaying-a-windows-form-shadow.md)</ept></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows Forms and Unmanaged Applications Overview<ept id="p1">](windows-forms-and-unmanaged-applications-overview.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>