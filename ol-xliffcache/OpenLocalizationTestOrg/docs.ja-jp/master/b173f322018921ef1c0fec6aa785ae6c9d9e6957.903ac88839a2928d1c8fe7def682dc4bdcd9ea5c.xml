{"content":"---\ntitle: \"How to: Inherit from the Control Class\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"inheritance [Windows Forms], Windows Forms custom controls\"\n  - \"Control class [Windows Forms], inheriting from\"\n  - \"custom controls [Windows Forms], inheritance\"\n  - \"OnPaint method [Windows Forms]\"\n  - \"custom controls [Windows Forms], creating\"\nms.assetid: 46ba0df3-5cf7-443c-a3b4-a72660172476\n---\n# How to: Inherit from the Control Class\nIf you want to create a completely custom control to use on a Windows Form, you should inherit from the <xref:System.Windows.Forms.Control> class. While inheriting from the <xref:System.Windows.Forms.Control> class requires that you perform more planning and implementation, it also provides you with the largest range of options. When inheriting from <xref:System.Windows.Forms.Control>, you inherit the very basic functionality that makes controls work. The functionality inherent in the <xref:System.Windows.Forms.Control> class handles user input through the keyboard and mouse, defines the bounds and size of the control, provides a windows handle, and provides message handling and security. It does not incorporate any painting, which in this case is the actual rendering of the graphical interface of the control, nor does it incorporate any specific user interaction functionality. You must provide all of these aspects through custom code.  \n  \n> [!NOTE]\n>  The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Personalize the Visual Studio IDE](/visualstudio/ide/personalizing-the-visual-studio-ide).  \n  \n### To create a custom control  \n  \n1.  Create a new **Windows Application** or **Windows Control Library** project.  \n  \n2.  From the **Project** menu, choose **Add Class**.  \n  \n3.  In the **Add New Item** dialog box, click **Custom Control**.  \n  \n     A new custom control is added to your project.  \n  \n4.  Press F7 to open the **Code Editor** for your custom control.  \n  \n5.  Locate the <xref:System.Windows.Forms.Control.OnPaint%2A> method, which will be empty except for a call to the <xref:System.Windows.Forms.Control.OnPaint%2A> method of the base class.  \n  \n6.  Modify the code to incorporate any custom painting you want for your control.  \n  \n     For information about writing code to render graphics for controls, see [Custom Control Painting and Rendering](custom-control-painting-and-rendering.md).  \n  \n7.  Implement any custom methods, properties, or events that your control will incorporate.  \n  \n8.  Save and test your control.  \n  \n## See also\n\n- [Varieties of Custom Controls](varieties-of-custom-controls.md)\n- [How to: Inherit from the UserControl Class](how-to-inherit-from-the-usercontrol-class.md)\n- [How to: Inherit from Existing Windows Forms Controls](how-to-inherit-from-existing-windows-forms-controls.md)\n- [How to: Author Controls for Windows Forms](how-to-author-controls-for-windows-forms.md)\n- [Troubleshooting Inherited Event Handlers in Visual Basic](~/docs/visual-basic/programming-guide/language-features/events/troubleshooting-inherited-event-handlers.md)\n- [Developing Windows Forms Controls at Design Time](developing-windows-forms-controls-at-design-time.md)\n","nodes":[{"pos":[4,398],"embed":true,"restype":"x-metadata","content":"title: \"How to: Inherit from the Control Class\"\nms.date: \"03/30/2017\"\nhelpviewer_keywords: \n  - \"inheritance [Windows Forms], Windows Forms custom controls\"\n  - \"Control class [Windows Forms], inheriting from\"\n  - \"custom controls [Windows Forms], inheritance\"\n  - \"OnPaint method [Windows Forms]\"\n  - \"custom controls [Windows Forms], creating\"\nms.assetid: 46ba0df3-5cf7-443c-a3b4-a72660172476","nodes":[{"content":"How to: Inherit from the Control Class","nodes":[{"pos":[0,38],"content":"How to: Inherit from the Control Class","nodes":[{"content":"How to: Inherit from the Control Class","pos":[0,38]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[405,443],"content":"How to: Inherit from the Control Class","linkify":"How to: Inherit from the Control Class","nodes":[{"content":"How to: Inherit from the Control Class","pos":[0,38]}]},{"content":"If you want to create a completely custom control to use on a Windows Form, you should inherit from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.","pos":[444,590],"source":"If you want to create a completely custom control to use on a Windows Form, you should inherit from the <xref:System.Windows.Forms.Control> class."},{"content":"While inheriting from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class requires that you perform more planning and implementation, it also provides you with the largest range of options.","pos":[591,774],"source":" While inheriting from the <xref:System.Windows.Forms.Control> class requires that you perform more planning and implementation, it also provides you with the largest range of options."},{"content":"When inheriting from <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph>, you inherit the very basic functionality that makes controls work.","pos":[775,899],"source":" When inheriting from <xref:System.Windows.Forms.Control>, you inherit the very basic functionality that makes controls work."},{"content":"The functionality inherent in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class handles user input through the keyboard and mouse, defines the bounds and size of the control, provides a windows handle, and provides message handling and security.","pos":[900,1141],"source":" The functionality inherent in the <xref:System.Windows.Forms.Control> class handles user input through the keyboard and mouse, defines the bounds and size of the control, provides a windows handle, and provides message handling and security."},{"content":"It does not incorporate any painting, which in this case is the actual rendering of the graphical interface of the control, nor does it incorporate any specific user interaction functionality.","pos":[1142,1334]},{"content":"You must provide all of these aspects through custom code.","pos":[1335,1393]},{"pos":[1401,1746],"content":"[!NOTE]\n The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Personalize the Visual Studio IDE](/visualstudio/ide/personalizing-the-visual-studio-ide).","leadings":["","> "],"nodes":[{"content":"The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition. To change your settings, choose **Import and Export Settings** on the **Tools** menu. For more information, see [Personalize the Visual Studio IDE](/visualstudio/ide/personalizing-the-visual-studio-ide).","pos":[9,343],"nodes":[{"content":"The dialog boxes and menu commands you see might differ from those described in Help depending on your active settings or edition.","pos":[0,130]},{"content":"To change your settings, choose <bpt id=\"p1\">**</bpt>Import and Export Settings<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> menu.","pos":[131,216],"source":" To change your settings, choose **Import and Export Settings** on the **Tools** menu."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Personalize the Visual Studio IDE<ept id=\"p1\">](/visualstudio/ide/personalizing-the-visual-studio-ide)</ept>.","pos":[217,334],"source":" For more information, see [Personalize the Visual Studio IDE](/visualstudio/ide/personalizing-the-visual-studio-ide)."}]}]},{"pos":[1756,1782],"content":"To create a custom control","linkify":"To create a custom control","nodes":[{"content":"To create a custom control","pos":[0,26]}]},{"pos":[1792,1868],"content":"Create a new <bpt id=\"p1\">**</bpt>Windows Application<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Windows Control Library<ept id=\"p2\">**</ept> project.","source":"Create a new **Windows Application** or **Windows Control Library** project."},{"pos":[1878,1926],"content":"From the <bpt id=\"p1\">**</bpt>Project<ept id=\"p1\">**</ept> menu, choose <bpt id=\"p2\">**</bpt>Add Class<ept id=\"p2\">**</ept>.","source":"From the **Project** menu, choose **Add Class**."},{"pos":[1936,1997],"content":"In the <bpt id=\"p1\">**</bpt>Add New Item<ept id=\"p1\">**</ept> dialog box, click <bpt id=\"p2\">**</bpt>Custom Control<ept id=\"p2\">**</ept>.","source":"In the **Add New Item** dialog box, click **Custom Control**."},{"content":"A new custom control is added to your project.","pos":[2008,2054]},{"pos":[2064,2125],"content":"Press F7 to open the <bpt id=\"p1\">**</bpt>Code Editor<ept id=\"p1\">**</ept> for your custom control.","source":"Press F7 to open the **Code Editor** for your custom control."},{"pos":[2135,2318],"content":"Locate the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method, which will be empty except for a call to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method of the base class.","source":"Locate the <xref:System.Windows.Forms.Control.OnPaint%2A> method, which will be empty except for a call to the <xref:System.Windows.Forms.Control.OnPaint%2A> method of the base class."},{"content":"Modify the code to incorporate any custom painting you want for your control.","pos":[2328,2405]},{"pos":[2416,2570],"content":"For information about writing code to render graphics for controls, see <bpt id=\"p1\">[</bpt>Custom Control Painting and Rendering<ept id=\"p1\">](custom-control-painting-and-rendering.md)</ept>.","source":"For information about writing code to render graphics for controls, see [Custom Control Painting and Rendering](custom-control-painting-and-rendering.md)."},{"content":"Implement any custom methods, properties, or events that your control will incorporate.","pos":[2580,2667]},{"content":"Save and test your control.","pos":[2677,2704]},{"pos":[2713,2721],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2725,2788],"content":"<bpt id=\"p1\">[</bpt>Varieties of Custom Controls<ept id=\"p1\">](varieties-of-custom-controls.md)</ept>","source":"[Varieties of Custom Controls](varieties-of-custom-controls.md)"},{"pos":[2791,2881],"content":"<bpt id=\"p1\">[</bpt>How to: Inherit from the UserControl Class<ept id=\"p1\">](how-to-inherit-from-the-usercontrol-class.md)</ept>","source":"[How to: Inherit from the UserControl Class](how-to-inherit-from-the-usercontrol-class.md)"},{"pos":[2884,2994],"content":"<bpt id=\"p1\">[</bpt>How to: Inherit from Existing Windows Forms Controls<ept id=\"p1\">](how-to-inherit-from-existing-windows-forms-controls.md)</ept>","source":"[How to: Inherit from Existing Windows Forms Controls](how-to-inherit-from-existing-windows-forms-controls.md)"},{"pos":[2997,3085],"content":"<bpt id=\"p1\">[</bpt>How to: Author Controls for Windows Forms<ept id=\"p1\">](how-to-author-controls-for-windows-forms.md)</ept>","source":"[How to: Author Controls for Windows Forms](how-to-author-controls-for-windows-forms.md)"},{"pos":[3088,3254],"content":"<bpt id=\"p1\">[</bpt>Troubleshooting Inherited Event Handlers in Visual Basic<ept id=\"p1\">](~/docs/visual-basic/programming-guide/language-features/events/troubleshooting-inherited-event-handlers.md)</ept>","source":"[Troubleshooting Inherited Event Handlers in Visual Basic](~/docs/visual-basic/programming-guide/language-features/events/troubleshooting-inherited-event-handlers.md)"},{"pos":[3257,3360],"content":"<bpt id=\"p1\">[</bpt>Developing Windows Forms Controls at Design Time<ept id=\"p1\">](developing-windows-forms-controls-at-design-time.md)</ept>","source":"[Developing Windows Forms Controls at Design Time](developing-windows-forms-controls-at-design-time.md)"}]}