{"content":"---\ntitle: \"Where Clause (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.QueryWhere\"\nhelpviewer_keywords: \n  - \"Where statement [Visual Basic]\"\n  - \"queries [Visual Basic], Where\"\n  - \"Where clause [Visual Basic]\"\nms.assetid: 48b5c2c5-3181-429c-8545-894296798c89\n---\n# Where Clause (Visual Basic)\nSpecifies the filtering condition for a query.  \n  \n## Syntax  \n  \n```  \nWhere condition  \n```  \n  \n## Parts  \n `condition`  \n Required. An expression that determines whether the values for the current item in the collection are included in the output collection. The expression must evaluate to a `Boolean` value or the equivalent of a `Boolean` value. If the condition evaluates to `True`, the element is included in the query result; otherwise, the element is excluded from the query result.  \n  \n## Remarks  \n The `Where` clause enables you to filter query data by selecting only elements that meet certain criteria. Elements whose values cause the `Where` clause to evaluate to `True` are included in the query result; other elements are excluded. The expression that is used in a `Where` clause must evaluate to a `Boolean` or the equivalent of a `Boolean`, such as an Integer that evaluates to `False` when its value is zero. You can combine multiple expressions in a `Where` clause by using logical operators such as `And`, `Or`, `AndAlso`, `OrElse`, `Is`, and `IsNot`.  \n  \n By default, query expressions are not evaluated until they are accessed—for example, when they are data-bound or iterated through in a `For` loop. As a result, the `Where` clause is not evaluated until the query is accessed. If you have values external to the query that are used in the `Where` clause, ensure that the appropriate value is used in the `Where` clause at the time the query is executed. For more information about query execution, see [Writing Your First LINQ Query](../../../visual-basic/programming-guide/concepts/linq/writing-your-first-linq-query.md).  \n  \n You can call functions within a `Where` clause to perform a calculation or operation on a value from the current element in the collection. Calling a function in a `Where` clause can cause the query to be executed immediately when it is defined instead of when it is accessed. For more information about query execution, see [Writing Your First LINQ Query](../../../visual-basic/programming-guide/concepts/linq/writing-your-first-linq-query.md).  \n  \n## Example  \n The following query expression uses a `From` clause to declare a range variable `cust` for each `Customer` object in the `customers` collection. The `Where` clause uses the range variable to restrict the output to customers from the specified region. The `For Each` loop displays the company name for each customer in the query result.  \n  \n [!code-vb[VbSimpleQuerySamples#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbSimpleQuerySamples/VB/QuerySamples1.vb#23)]  \n  \n## Example  \n The following example uses `And` and `Or` logical operators in the `Where` clause.  \n  \n [!code-vb[VbSimpleQuerySamples#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbSimpleQuerySamples/VB/QuerySamples1.vb#31)]  \n  \n## See also\n\n- [Introduction to LINQ in Visual Basic](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)\n- [Queries](../../../visual-basic/language-reference/queries/index.md)\n- [From Clause](../../../visual-basic/language-reference/queries/from-clause.md)\n- [Select Clause](../../../visual-basic/language-reference/queries/select-clause.md)\n- [For Each...Next Statement](../../../visual-basic/language-reference/statements/for-each-next-statement.md)\n","nodes":[{"pos":[4,272],"embed":true,"restype":"x-metadata","content":"title: \"Where Clause (Visual Basic)\"\nms.date: 07/20/2015\nf1_keywords: \n  - \"vb.QueryWhere\"\nhelpviewer_keywords: \n  - \"Where statement [Visual Basic]\"\n  - \"queries [Visual Basic], Where\"\n  - \"Where clause [Visual Basic]\"\nms.assetid: 48b5c2c5-3181-429c-8545-894296798c89","nodes":[{"content":"Where Clause (Visual Basic)","nodes":[{"pos":[0,27],"content":"Where Clause (Visual Basic)","nodes":[{"content":"Where Clause (Visual Basic)","pos":[0,27]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[279,306],"content":"Where Clause (Visual Basic)","linkify":"Where Clause (Visual Basic)","nodes":[{"content":"Where Clause (Visual Basic)","pos":[0,27]}]},{"content":"Specifies the filtering condition for a query.","pos":[307,353]},{"pos":[362,368],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[410,415],"content":"Parts","linkify":"Parts","nodes":[{"content":"Parts","pos":[0,5]}]},{"content":"Required.","pos":[434,443]},{"content":"An expression that determines whether the values for the current item in the collection are included in the output collection.","pos":[444,570]},{"content":"The expression must evaluate to a <ph id=\"ph1\">`Boolean`</ph> value or the equivalent of a <ph id=\"ph2\">`Boolean`</ph> value.","pos":[571,660],"source":" The expression must evaluate to a `Boolean` value or the equivalent of a `Boolean` value."},{"content":"If the condition evaluates to <ph id=\"ph1\">`True`</ph>, the element is included in the query result; otherwise, the element is excluded from the query result.","pos":[661,801],"source":" If the condition evaluates to `True`, the element is included in the query result; otherwise, the element is excluded from the query result."},{"pos":[810,817],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <ph id=\"ph1\">`Where`</ph> clause enables you to filter query data by selecting only elements that meet certain criteria.","pos":[821,927],"source":"The `Where` clause enables you to filter query data by selecting only elements that meet certain criteria."},{"content":"Elements whose values cause the <ph id=\"ph1\">`Where`</ph> clause to evaluate to <ph id=\"ph2\">`True`</ph> are included in the query result; other elements are excluded.","pos":[928,1059],"source":" Elements whose values cause the `Where` clause to evaluate to `True` are included in the query result; other elements are excluded."},{"content":"The expression that is used in a <ph id=\"ph1\">`Where`</ph> clause must evaluate to a <ph id=\"ph2\">`Boolean`</ph> or the equivalent of a <ph id=\"ph3\">`Boolean`</ph>, such as an Integer that evaluates to <ph id=\"ph4\">`False`</ph> when its value is zero.","pos":[1060,1239],"source":" The expression that is used in a `Where` clause must evaluate to a `Boolean` or the equivalent of a `Boolean`, such as an Integer that evaluates to `False` when its value is zero."},{"content":"You can combine multiple expressions in a <ph id=\"ph1\">`Where`</ph> clause by using logical operators such as <ph id=\"ph2\">`And`</ph>, <ph id=\"ph3\">`Or`</ph>, <ph id=\"ph4\">`AndAlso`</ph>, <ph id=\"ph5\">`OrElse`</ph>, <ph id=\"ph6\">`Is`</ph>, and <ph id=\"ph7\">`IsNot`</ph>.","pos":[1240,1384],"source":" You can combine multiple expressions in a `Where` clause by using logical operators such as `And`, `Or`, `AndAlso`, `OrElse`, `Is`, and `IsNot`."},{"content":"By default, query expressions are not evaluated until they are accessed—for example, when they are data-bound or iterated through in a <ph id=\"ph1\">`For`</ph> loop.","pos":[1391,1537],"source":"By default, query expressions are not evaluated until they are accessed—for example, when they are data-bound or iterated through in a `For` loop."},{"content":"As a result, the <ph id=\"ph1\">`Where`</ph> clause is not evaluated until the query is accessed.","pos":[1538,1615],"source":" As a result, the `Where` clause is not evaluated until the query is accessed."},{"content":"If you have values external to the query that are used in the <ph id=\"ph1\">`Where`</ph> clause, ensure that the appropriate value is used in the <ph id=\"ph2\">`Where`</ph> clause at the time the query is executed.","pos":[1616,1792],"source":" If you have values external to the query that are used in the `Where` clause, ensure that the appropriate value is used in the `Where` clause at the time the query is executed."},{"content":"For more information about query execution, see <bpt id=\"p1\">[</bpt>Writing Your First LINQ Query<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/linq/writing-your-first-linq-query.md)</ept>.","pos":[1793,1961],"source":" For more information about query execution, see [Writing Your First LINQ Query](../../../visual-basic/programming-guide/concepts/linq/writing-your-first-linq-query.md)."},{"content":"You can call functions within a <ph id=\"ph1\">`Where`</ph> clause to perform a calculation or operation on a value from the current element in the collection.","pos":[1968,2107],"source":"You can call functions within a `Where` clause to perform a calculation or operation on a value from the current element in the collection."},{"content":"Calling a function in a <ph id=\"ph1\">`Where`</ph> clause can cause the query to be executed immediately when it is defined instead of when it is accessed.","pos":[2108,2244],"source":" Calling a function in a `Where` clause can cause the query to be executed immediately when it is defined instead of when it is accessed."},{"content":"For more information about query execution, see <bpt id=\"p1\">[</bpt>Writing Your First LINQ Query<ept id=\"p1\">](../../../visual-basic/programming-guide/concepts/linq/writing-your-first-linq-query.md)</ept>.","pos":[2245,2413],"source":" For more information about query execution, see [Writing Your First LINQ Query](../../../visual-basic/programming-guide/concepts/linq/writing-your-first-linq-query.md)."},{"pos":[2422,2429],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following query expression uses a <ph id=\"ph1\">`From`</ph> clause to declare a range variable <ph id=\"ph2\">`cust`</ph> for each <ph id=\"ph3\">`Customer`</ph> object in the <ph id=\"ph4\">`customers`</ph> collection.","pos":[2433,2577],"source":"The following query expression uses a `From` clause to declare a range variable `cust` for each `Customer` object in the `customers` collection."},{"content":"The <ph id=\"ph1\">`Where`</ph> clause uses the range variable to restrict the output to customers from the specified region.","pos":[2578,2683],"source":" The `Where` clause uses the range variable to restrict the output to customers from the specified region."},{"content":"The <ph id=\"ph1\">`For Each`</ph> loop displays the company name for each customer in the query result.","pos":[2684,2768],"source":" The `For Each` loop displays the company name for each customer in the query result."},{"pos":[2916,2923],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2927,3009],"content":"The following example uses <ph id=\"ph1\">`And`</ph> and <ph id=\"ph2\">`Or`</ph> logical operators in the <ph id=\"ph3\">`Where`</ph> clause.","source":"The following example uses `And` and `Or` logical operators in the `Where` clause."},{"pos":[3157,3165],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[3169,3295],"content":"<bpt id=\"p1\">[</bpt>Introduction to LINQ in Visual Basic<ept id=\"p1\">](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept>","source":"[Introduction to LINQ in Visual Basic](../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)"},{"pos":[3298,3366],"content":"<bpt id=\"p1\">[</bpt>Queries<ept id=\"p1\">](../../../visual-basic/language-reference/queries/index.md)</ept>","source":"[Queries](../../../visual-basic/language-reference/queries/index.md)"},{"pos":[3369,3447],"content":"<bpt id=\"p1\">[</bpt>From Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/from-clause.md)</ept>","source":"[From Clause](../../../visual-basic/language-reference/queries/from-clause.md)"},{"pos":[3450,3532],"content":"<bpt id=\"p1\">[</bpt>Select Clause<ept id=\"p1\">](../../../visual-basic/language-reference/queries/select-clause.md)</ept>","source":"[Select Clause](../../../visual-basic/language-reference/queries/select-clause.md)"},{"pos":[3535,3642],"content":"<bpt id=\"p1\">[</bpt>For Each...Next Statement<ept id=\"p1\">](../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept>","source":"[For Each...Next Statement](../../../visual-basic/language-reference/statements/for-each-next-statement.md)"}]}