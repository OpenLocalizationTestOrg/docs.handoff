{"content":"---\ntitle: \"Parsing Strings in .NET | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: dotnet-standard\nms.tgt_pltfrm: \"\"\nms.topic: \"article\"\nhelpviewer_keywords: \n  - \"parsing strings, about parsing strings\"\n  - \"IFormatProvider interface, parsing strings\"\n  - \"base types, parsing strings\"\n  - \"Parse method\"\n  - \"parsing strings\"\nms.assetid: 5e758b41-db93-456b-8999-99b7304b090d\ncaps.latest.revision: 10\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# Parsing Strings in .NET\nA parsing operation converts a string that represents a .NET base type into that base type. For example, a parsing operation is used to convert a string to a floating-point number or to a date and time value. The method most commonly used to perform a parsing operation is the `Parse` method. Because parsing is the reverse operation of formatting (which involves converting a base type into its string representation), many of the same rules and conventions apply. Just as formatting uses an object that implements the <xref:System.IFormatProvider> interface to provide culture-sensitive formatting information, parsing also uses an object that implements the <xref:System.IFormatProvider> interface to determine how to interpret a string representation. For more information, see [Formatting Types](../../../docs/standard/base-types/formatting-types.md).  \n  \n## In This Section  \n [Parsing Numeric Strings](../../../docs/standard/base-types/parsing-numeric.md)  \n Describes how to convert strings into .NET numeric types.  \n  \n [Parsing Date and Time Strings](../../../docs/standard/base-types/parsing-datetime.md)  \n Describes how to convert strings into .NET **DateTime** types.  \n  \n [Parsing Other Strings](../../../docs/standard/base-types/parsing-other.md)  \n Describes how to convert strings into **Char**, **Boolean**, and **Enum** types.  \n  \n## Related Sections  \n [Formatting Types](../../../docs/standard/base-types/formatting-types.md)  \n Describes basic formatting concepts like format specifiers and format providers.  \n  \n [Type Conversion in .NET](../../../docs/standard/base-types/type-conversion.md)  \n Describes how to convert types.  \n  \n [Base Types](../../../docs/standard/base-types/index.md)  \n Describes common operations that you can perform on .NET base types.","nodes":[{"pos":[12,52],"content":"Parsing Strings in .NET | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"Parsing Strings in .NET | Microsoft Docs","pos":[0,40]}]},{"pos":[535,558],"content":"Parsing Strings in .NET","linkify":"Parsing Strings in .NET","nodes":[{"content":"Parsing Strings in .NET","pos":[0,23]}]},{"content":"A parsing operation converts a string that represents a .NET base type into that base type.","pos":[559,650]},{"content":"For example, a parsing operation is used to convert a string to a floating-point number or to a date and time value.","pos":[651,767]},{"content":"The method most commonly used to perform a parsing operation is the <ph id=\"ph1\">`Parse`</ph> method.","pos":[768,851],"source":" The method most commonly used to perform a parsing operation is the `Parse` method."},{"content":"Because parsing is the reverse operation of formatting (which involves converting a base type into its string representation), many of the same rules and conventions apply.","pos":[852,1024]},{"content":"Just as formatting uses an object that implements the <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> interface to provide culture-sensitive formatting information, parsing also uses an object that implements the <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> interface to determine how to interpret a string representation.","pos":[1025,1314],"source":" Just as formatting uses an object that implements the <xref:System.IFormatProvider> interface to provide culture-sensitive formatting information, parsing also uses an object that implements the <xref:System.IFormatProvider> interface to determine how to interpret a string representation."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](../../../docs/standard/base-types/formatting-types.md)</ept>.","pos":[1315,1415],"source":" For more information, see [Formatting Types](../../../docs/standard/base-types/formatting-types.md)."},{"pos":[1424,1439],"content":"In This Section","linkify":"In This Section","nodes":[{"content":"In This Section","pos":[0,15]}]},{"content":"<bpt id=\"p1\">[</bpt>Parsing Numeric Strings<ept id=\"p1\">](../../../docs/standard/base-types/parsing-numeric.md)</ept>","pos":[1443,1522],"source":"[Parsing Numeric Strings](../../../docs/standard/base-types/parsing-numeric.md)"},{"content":"Describes how to convert strings into .NET numeric types.","pos":[1526,1583]},{"content":"<bpt id=\"p1\">[</bpt>Parsing Date and Time Strings<ept id=\"p1\">](../../../docs/standard/base-types/parsing-datetime.md)</ept>","pos":[1590,1676],"source":"[Parsing Date and Time Strings](../../../docs/standard/base-types/parsing-datetime.md)"},{"content":"Describes how to convert strings into .NET <bpt id=\"p1\">**</bpt>DateTime<ept id=\"p1\">**</ept> types.","pos":[1680,1742],"source":" Describes how to convert strings into .NET **DateTime** types."},{"content":"<bpt id=\"p1\">[</bpt>Parsing Other Strings<ept id=\"p1\">](../../../docs/standard/base-types/parsing-other.md)</ept>","pos":[1749,1824],"source":"[Parsing Other Strings](../../../docs/standard/base-types/parsing-other.md)"},{"content":"Describes how to convert strings into <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Boolean<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>Enum<ept id=\"p3\">**</ept> types.","pos":[1828,1908],"source":" Describes how to convert strings into **Char**, **Boolean**, and **Enum** types."},{"pos":[1917,1933],"content":"Related Sections","linkify":"Related Sections","nodes":[{"content":"Related Sections","pos":[0,16]}]},{"content":"<bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](../../../docs/standard/base-types/formatting-types.md)</ept>","pos":[1937,2010],"source":"[Formatting Types](../../../docs/standard/base-types/formatting-types.md)"},{"content":"Describes basic formatting concepts like format specifiers and format providers.","pos":[2014,2094]},{"content":"<bpt id=\"p1\">[</bpt>Type Conversion in .NET<ept id=\"p1\">](../../../docs/standard/base-types/type-conversion.md)</ept>","pos":[2101,2180],"source":"[Type Conversion in .NET](../../../docs/standard/base-types/type-conversion.md)"},{"content":"Describes how to convert types.","pos":[2184,2215]},{"content":"<bpt id=\"p1\">[</bpt>Base Types<ept id=\"p1\">](../../../docs/standard/base-types/index.md)</ept>","pos":[2222,2278],"source":"[Base Types](../../../docs/standard/base-types/index.md)"},{"content":"Describes common operations that you can perform on .NET base types.","pos":[2282,2350]}]}