{"content":"---\ntitle: \"How to: Debug Empty Query Results Sets (C#)\"\nms.date: 07/20/2015\nms.assetid: b569f0dc-425e-45a6-acbf-770fb761c981\n---\n# How to: Debug Empty Query Results Sets (C#)\nOne of the most common problems when querying XML trees is that if the XML tree has a default namespace, the developer sometimes writes the query as though the XML were not in a namespace.  \n  \n The first set of examples in this topic shows a typical way that XML in a default namespace is loaded, and is queried improperly.  \n  \n The second set of examples show the necessary corrections so that you can query XML in a namespace.  \n  \n For more information, see [Working with XML Namespaces (C#)](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md).  \n  \n## Example  \n This example shows creation of XML in a namespace, and a query that returns an empty result set.  \n  \n```csharp  \nXElement root = XElement.Parse(  \n@\"<Root xmlns='http://www.adventure-works.com'>  \n    <Child>1</Child>  \n    <Child>2</Child>  \n    <Child>3</Child>  \n    <AnotherChild>4</AnotherChild>  \n    <AnotherChild>5</AnotherChild>  \n    <AnotherChild>6</AnotherChild>  \n</Root>\");  \nIEnumerable<XElement> c1 =  \n    from el in root.Elements(\"Child\")  \n    select el;  \nConsole.WriteLine(\"Result set follows:\");  \nforeach (XElement el in c1)  \n    Console.WriteLine((int)el);  \nConsole.WriteLine(\"End of result set\");  \n```  \n  \n This example produces the following result:  \n  \n```  \nResult set follows:  \nEnd of result set  \n```  \n  \n## Example  \n This example shows creation of XML in a namespace, and a query that is coded properly.  \n  \n The solution is to declare and initialize an <xref:System.Xml.Linq.XNamespace> object, and to use it when specifying <xref:System.Xml.Linq.XName> objects. In this case, the argument to the <xref:System.Xml.Linq.XContainer.Elements%2A> method is an <xref:System.Xml.Linq.XName> object.  \n  \n```csharp  \nXElement root = XElement.Parse(  \n@\"<Root xmlns='http://www.adventure-works.com'>  \n    <Child>1</Child>  \n    <Child>2</Child>  \n    <Child>3</Child>  \n    <AnotherChild>4</AnotherChild>  \n    <AnotherChild>5</AnotherChild>  \n    <AnotherChild>6</AnotherChild>  \n</Root>\");  \nXNamespace aw = \"http://www.adventure-works.com\";  \nIEnumerable<XElement> c1 =  \n    from el in root.Elements(aw + \"Child\")  \n    select el;  \nConsole.WriteLine(\"Result set follows:\");  \nforeach (XElement el in c1)  \n    Console.WriteLine((int)el);  \nConsole.WriteLine(\"End of result set\");  \n```  \n  \n This example produces the following result:  \n  \n```  \nResult set follows:  \n1  \n2  \n3  \nEnd of result set  \n```  \n  \n## See also\n\n- [Basic Queries (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)\n","nodes":[{"pos":[4,125],"embed":true,"restype":"x-metadata","content":"title: \"How to: Debug Empty Query Results Sets (C#)\"\nms.date: 07/20/2015\nms.assetid: b569f0dc-425e-45a6-acbf-770fb761c981","nodes":[{"content":"How to: Debug Empty Query Results Sets (C#)","nodes":[{"pos":[0,43],"content":"How to: Debug Empty Query Results Sets (C#)","nodes":[{"content":"How to: Debug Empty Query Results Sets (C#)","pos":[0,43]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[132,175],"content":"How to: Debug Empty Query Results Sets (C#)","linkify":"How to: Debug Empty Query Results Sets (C#)","nodes":[{"content":"How to: Debug Empty Query Results Sets (C#)","pos":[0,43]}]},{"content":"One of the most common problems when querying XML trees is that if the XML tree has a default namespace, the developer sometimes writes the query as though the XML were not in a namespace.","pos":[176,364]},{"content":"The first set of examples in this topic shows a typical way that XML in a default namespace is loaded, and is queried improperly.","pos":[371,500]},{"content":"The second set of examples show the necessary corrections so that you can query XML in a namespace.","pos":[507,606]},{"pos":[613,757],"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with XML Namespaces (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.","source":"For more information, see [Working with XML Namespaces (C#)](../../../../csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md)."},{"pos":[766,773],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example shows creation of XML in a namespace, and a query that returns an empty result set.","pos":[777,873]},{"content":"This example produces the following result:","pos":[1414,1457]},{"pos":[1523,1530],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"This example shows creation of XML in a namespace, and a query that is coded properly.","pos":[1534,1620]},{"content":"The solution is to declare and initialize an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object, and to use it when specifying <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XName&gt;</ph> objects.","pos":[1627,1781],"source":"The solution is to declare and initialize an <xref:System.Xml.Linq.XNamespace> object, and to use it when specifying <xref:System.Xml.Linq.XName> objects."},{"content":"In this case, the argument to the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph> method is an <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XName&gt;</ph> object.","pos":[1782,1911],"source":" In this case, the argument to the <xref:System.Xml.Linq.XContainer.Elements%2A> method is an <xref:System.Xml.Linq.XName> object."},{"content":"This example produces the following result:","pos":[2509,2552]},{"pos":[2630,2638],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2642,2757],"content":"<bpt id=\"p1\">[</bpt>Basic Queries (LINQ to XML) (C#)<ept id=\"p1\">](../../../../csharp/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept>","source":"[Basic Queries (LINQ to XML) (C#)](../../../../csharp/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)"}]}