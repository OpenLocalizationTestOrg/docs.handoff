<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23e1a205555f82887e0a594bac86e49a4d727bca</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\feature-details\routing-service.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93dc660f678a96eca18857fe3e812b43d4b73bfc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a20bc7196376240a1597b19e660051250b267c87</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Routing Service | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Routing Service</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The Routing Service is a generic SOAP intermediary that acts as a message router.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The core functionality of the Routing Service is the ability to route messages based on message content, which allows a message to be forwarded to a client endpoint based on a value within the message itself, in either the header or the message body.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Routing.RoutingService&gt;</ph> is implemented as a <ph id="ph2">[!INCLUDE[indigo1](../../../../includes/indigo1-md.md)]</ph> service in the <ph id="ph3">&lt;xref:System.ServiceModel.Routing&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Routing Service exposes one or more service endpoints that receive messages and then routes each message to one or more client endpoints based on the message content.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The service provides the following features:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Content-based routing</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Service aggregation</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Service versioning</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Priority routing</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Dynamic configuration</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Protocol bridging</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>SOAP processing</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Advanced error handling</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Backup endpoints</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>While it is possible to create an intermediary service that accomplishes one or more of these goals, often such an implementation is tied to a specific scenario or solution and cannot be readily applied to new applications.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Routing Service provides a generic, dynamically configurable, pluggable SOAP intermediary that is compatible with the <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> Service and Channel models and allows you to perform content-based routing of SOAP-based messages.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Routing Service does not currently support routing of <ph id="ph1">[!INCLUDE[indigo2](../../../../includes/indigo2-md.md)]</ph> REST services.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To route REST calls, consider using <ph id="ph1">&lt;xref:System.Web.Routing&gt;</ph> or <bpt id="p1">[</bpt>Application Request Routing<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=164589)</ept> (http://go.microsoft.com/fwlink/?LinkId=164589).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Content-Based Routing</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Content-based routing is the ability to route a message based on one or more values contained within the message.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The Routing Service inspects each message and routes it to the destination endpoint based on the message contents and the routing logic you create.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Content-based routing provides the basis for service aggregation, service versioning, and priority routing.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To implement content-based routing, the Routing Service relies on <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> implementations that are used to match specific values within the messages to be routed.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If a <bpt id="p1">**</bpt>MessageFilter<ept id="p1">**</ept> matches a message, the message is routed to the destination endpoint associated with the <bpt id="p2">**</bpt>MessageFilter<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Message filters are grouped together into filter tables (<ph id="ph1">&lt;xref:System.ServiceModel.Routing.Configuration.FilterTableCollection&gt;</ph>) to construct complex routing logic.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, a filter table might contain five mutually exclusive message filters that cause messages to be routed to only one of the five destination endpoints.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The Routing Service allows you to configure the logic that is used to perform content-based routing, as well as dynamically update the routing logic at run time.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Through the grouping of message filters into filter tables, routing logic can be constructed that allows you to handle multiple routing scenarios such as:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Service aggregation</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Service versioning</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Priority routing</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Dynamic configuration</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information about message filters and filter tables, see <bpt id="p1">[</bpt>Routing Introduction<ept id="p1">](../../../../docs/framework/wcf/feature-details/routing-introduction.md)</ept> and <bpt id="p2">[</bpt>Message Filters<ept id="p2">](../../../../docs/framework/wcf/feature-details/message-filters.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Service Aggregation</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>By using content-based routing, you can expose one endpoint that receives messages from external client applications and then routes each message to the appropriate internal endpoint based on a value within the message.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This is useful to offer one specific endpoint for a variety of back-end applications, and also to present one application endpoint to customers while factoring your application into a variety of services.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Service Versioning</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When migrating to a new version of your solution, you may have to maintain the old version in parallel to serve existing customers.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Often this requires that clients connecting to the newer version must use a different address when communicating with the solution.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The Routing Service allows you to expose one service endpoint that serves both versions of your solution by routing messages to the appropriate solution based on version-specific information contained in the message.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For an example of such an implementation see <bpt id="p1">[</bpt>How To: Service Versioning<ept id="p1">](../../../../docs/framework/wcf/feature-details/how-to-service-versioning.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Priority Routing</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When providing a service for multiple clients, you may have a service level agreement (SLA) with some partners that requires all data from these partners to be processed separately from that of other clients.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>By using a filter that looks for customer-specific information contained in the message, you can easily route messages from specific partners to an endpoint that has been created to meet their SLA requirements.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Dynamic Configuration</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To support mission-critical systems, where messages must be processed without any service interruptions, it is vital that you be able to modify the configuration of components within the system at run time.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To support this need, the Routing Service provides an <ph id="ph1">&lt;xref:System.ServiceModel.IExtension%601&gt;</ph> implementation, the <ph id="ph2">&lt;xref:System.ServiceModel.Routing.RoutingExtension&gt;</ph>, which allows dynamic updating of the Routing Service configuration at run time.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information about dynamic configuration of the Routing Service, see <bpt id="p1">[</bpt>Routing Introduction<ept id="p1">](../../../../docs/framework/wcf/feature-details/routing-introduction.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Protocol Bridging</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>One of the challenges in intermediary scenarios is that the internal endpoints may have different transport or SOAP version requirements than the endpoint that messages are received on.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To support this scenario, the Routing Service can bridge protocols, including processing the SOAP message to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph> required by the destination endpoint(s).</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In this way, one protocol can be used for internal communication, while another can be used for external communication.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To support the routing of messages between endpoints with different transports, the Routing Service uses system-provided bindings that enable the service to bridge dissimilar protocols.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This occurs automatically when the service endpoint exposed by the Routing Service uses a different protocol than the client endpoints that messages are routed to.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>SOAP Processing</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A common routing requirement is the ability to route messages between endpoints with differing SOAP requirements.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To support this requirement, the Routing Service provides a <ph id="ph1">&lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;</ph> that automatically creates a new <bpt id="p1">**</bpt>MessageVersion<ept id="p1">**</ept> that meets the requirements of the destination endpoint before the message is routed to it.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This behavior also creates a new <bpt id="p1">**</bpt>MessageVersion<ept id="p1">**</ept> for any response message before returning it to the requesting client application, to ensure that the <bpt id="p2">**</bpt>MessageVersion<ept id="p2">**</ept> of the response matches that of the original request.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information about SOAP processing, see <bpt id="p1">[</bpt>Routing Introduction<ept id="p1">](../../../../docs/framework/wcf/feature-details/routing-introduction.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In a system composed of distributed services that rely on network communications, it is important to ensure that communications within your system are resistant to transient network failures.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The Routing Service implements error handling that allows you to handle many communication failure scenarios that might otherwise result in a service outage.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the Routing Service encounters a <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> while attempting to send a message, error handling will take place.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>These exceptions typically indicate that a problem was encountered while attempting to communicate with the defined client endpoint, such as an <ph id="ph1">&lt;xref:System.ServiceModel.EndpointNotFoundException&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.ServerTooBusyException&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationObjectFaultedException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The error-handling code will also catch and attempt to retry sending when a <bpt id="p1">**</bpt>TimeoutException<ept id="p1">**</ept> occurs, which is another common exception that is not derived from <bpt id="p2">**</bpt>CommunicationException<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> error handling, see <bpt id="p1">[</bpt>Routing Introduction<ept id="p1">](../../../../docs/framework/wcf/feature-details/routing-introduction.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Backup Endpoints</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In addition to the destination client endpoints associated with each filter definition in the filter table, you can also create a list of backup endpoints that the message will be routed to in the event of a transmission failure.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If an error occurs and a backup list is defined for the filter entry, the Routing Service will attempt to send the message to the first endpoint defined in the list.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If this transmission attempt fails, the service will try the next endpoint, and continue this process until the transmission attempt succeeds, returns a non-transmission related error, or all endpoints in the backup list have returned a transmission error.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crabout](../../../../includes/crabout-md.md)]</ph> backup endpoints, see <bpt id="p1">[</bpt>Routing Introduction<ept id="p1">](../../../../docs/framework/wcf/feature-details/routing-introduction.md)</ept> and <bpt id="p2">[</bpt>Message Filters<ept id="p2">](../../../../docs/framework/wcf/feature-details/message-filters.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Streaming</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The routing service can successfully stream messages if you set the binding to support streaming.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>However, there are some conditions under which messages may need to buffered:</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Multicast (buffer to create additional message copies)</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Failover (buffer in case the message needs to be sent to a backup)</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly is false (buffer to present the MessageFilterTable with a MessageBuffer so that filters can inspect the body)</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Dynamic configuration</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Routing Introduction<ept id="p1">](../../../../docs/framework/wcf/feature-details/routing-introduction.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Routing Contracts<ept id="p1">](../../../../docs/framework/wcf/feature-details/routing-contracts.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Message Filters<ept id="p1">](../../../../docs/framework/wcf/feature-details/message-filters.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>