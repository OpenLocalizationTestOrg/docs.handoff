{"content":"---\ntitle: \"How to: Set Tab Stops in Drawn Text\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"text [Windows Forms], drawing with tab stops\"\n  - \"tabs [Windows Forms], drawn text\"\nms.assetid: 64878f98-39ba-4303-b63f-0859ab682eeb\n---\n# How to: Set Tab Stops in Drawn Text\nYou can set tab stops for text by calling the <xref:System.Drawing.StringFormat.SetTabStops%2A> method of a <xref:System.Drawing.StringFormat> object and then passing that <xref:System.Drawing.StringFormat> object to the <xref:System.Drawing.Graphics.DrawString%2A> method of the <xref:System.Drawing.Graphics> class.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.TextRenderer?displayProperty=nameWithType> does not support adding tab stops to drawn text, although you can expand existing tab stops using the <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs?displayProperty=nameWithType> flag.  \n  \n## Example  \n The following example sets tab stops at 150, 250, and 350. Then, the code displays a tabbed list of names and test scores.  \n  \n The following illustration shows the tabbed text:  \n  \n ![Screenshot that shows a tabbed list of names and scores.](./media/how-to-set-tab-stops-in-drawn-text/tab-list-names-test-scores.png)  \n  \n The following code passes two arguments to the <xref:System.Drawing.StringFormat.SetTabStops%2A> method. The second argument is an array that contains tab offsets. The first argument passed to <xref:System.Drawing.StringFormat.SetTabStops%2A> is 0, which indicates that the first offset in the array is measured from position 0, the left edge of the bounding rectangle.  \n  \n [!code-csharp[System.Drawing.FontsAndText#41](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsAndText/CS/Class1.cs#41)]\n [!code-vb[System.Drawing.FontsAndText#41](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsAndText/VB/Class1.vb#41)]  \n  \n## Compiling the Code  \n  \n-   The preceding example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> `e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.  \n  \n## See also\n\n- [Using Fonts and Text](using-fonts-and-text.md)\n- [How to: Draw Text with GDI](how-to-draw-text-with-gdi.md)\n","nodes":[{"pos":[4,265],"embed":true,"restype":"x-metadata","content":"title: \"How to: Set Tab Stops in Drawn Text\"\nms.date: \"03/30/2017\"\ndev_langs: \n  - \"csharp\"\n  - \"vb\"\nhelpviewer_keywords: \n  - \"text [Windows Forms], drawing with tab stops\"\n  - \"tabs [Windows Forms], drawn text\"\nms.assetid: 64878f98-39ba-4303-b63f-0859ab682eeb","nodes":[{"content":"How to: Set Tab Stops in Drawn Text","nodes":[{"pos":[0,35],"content":"How to: Set Tab Stops in Drawn Text","nodes":[{"content":"How to: Set Tab Stops in Drawn Text","pos":[0,35]}]}],"path":["title"],"nosxs":false}],"yml":true},{"pos":[272,307],"content":"How to: Set Tab Stops in Drawn Text","linkify":"How to: Set Tab Stops in Drawn Text","nodes":[{"content":"How to: Set Tab Stops in Drawn Text","pos":[0,35]}]},{"pos":[308,625],"content":"You can set tab stops for text by calling the <ph id=\"ph1\">&lt;xref:System.Drawing.StringFormat.SetTabStops%2A&gt;</ph> method of a <ph id=\"ph2\">&lt;xref:System.Drawing.StringFormat&gt;</ph> object and then passing that <ph id=\"ph3\">&lt;xref:System.Drawing.StringFormat&gt;</ph> object to the <ph id=\"ph4\">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> method of the <ph id=\"ph5\">&lt;xref:System.Drawing.Graphics&gt;</ph> class.","source":"You can set tab stops for text by calling the <xref:System.Drawing.StringFormat.SetTabStops%2A> method of a <xref:System.Drawing.StringFormat> object and then passing that <xref:System.Drawing.StringFormat> object to the <xref:System.Drawing.Graphics.DrawString%2A> method of the <xref:System.Drawing.Graphics> class."},{"pos":[633,909],"content":"[!NOTE]\n The <xref:System.Windows.Forms.TextRenderer?displayProperty=nameWithType> does not support adding tab stops to drawn text, although you can expand existing tab stops using the <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs?displayProperty=nameWithType> flag.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextRenderer?displayProperty=nameWithType&gt;</ph> does not support adding tab stops to drawn text, although you can expand existing tab stops using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextFormatFlags.ExpandTabs?displayProperty=nameWithType&gt;</ph> flag.","pos":[9,274],"source":"The <xref:System.Windows.Forms.TextRenderer?displayProperty=nameWithType> does not support adding tab stops to drawn text, although you can expand existing tab stops using the <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs?displayProperty=nameWithType> flag."}]},{"pos":[918,925],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example sets tab stops at 150, 250, and 350.","pos":[929,987]},{"content":"Then, the code displays a tabbed list of names and test scores.","pos":[988,1051]},{"content":"The following illustration shows the tabbed text:","pos":[1058,1107]},{"content":"Screenshot that shows a tabbed list of names and scores.","pos":[1116,1172]},{"content":"The following code passes two arguments to the <ph id=\"ph1\">&lt;xref:System.Drawing.StringFormat.SetTabStops%2A&gt;</ph> method.","pos":[1255,1359],"source":"The following code passes two arguments to the <xref:System.Drawing.StringFormat.SetTabStops%2A> method."},{"content":"The second argument is an array that contains tab offsets.","pos":[1360,1418]},{"content":"The first argument passed to <ph id=\"ph1\">&lt;xref:System.Drawing.StringFormat.SetTabStops%2A&gt;</ph> is 0, which indicates that the first offset in the array is measured from position 0, the left edge of the bounding rectangle.","pos":[1419,1624],"source":" The first argument passed to <xref:System.Drawing.StringFormat.SetTabStops%2A> is 0, which indicates that the first offset in the array is measured from position 0, the left edge of the bounding rectangle."},{"pos":[1919,1937],"content":"Compiling the Code","linkify":"Compiling the Code","nodes":[{"content":"Compiling the Code","pos":[0,18]}]},{"pos":[1947,2143],"content":"The preceding example is designed for use with Windows Forms, and it requires <ph id=\"ph1\">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id=\"ph2\">`e`</ph>, which is a parameter of <ph id=\"ph3\">&lt;xref:System.Windows.Forms.PaintEventHandler&gt;</ph>.","source":"The preceding example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> `e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>."},{"pos":[2152,2160],"content":"See also","linkify":"See also","nodes":[{"content":"See also","pos":[0,8]}]},{"pos":[2164,2211],"content":"<bpt id=\"p1\">[</bpt>Using Fonts and Text<ept id=\"p1\">](using-fonts-and-text.md)</ept>","source":"[Using Fonts and Text](using-fonts-and-text.md)"},{"pos":[2214,2272],"content":"<bpt id=\"p1\">[</bpt>How to: Draw Text with GDI<ept id=\"p1\">](how-to-draw-text-with-gdi.md)</ept>","source":"[How to: Draw Text with GDI](how-to-draw-text-with-gdi.md)"}]}