<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-868c4f2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21abcf70cce2d6c9052629ce60d08e9ec6ac16e7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\programming-guide\inside-a-program\hello-world-your-first-program.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_med-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61f83786d493aa809945cb213ea3cd1aa120ef88</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fba4d1453f6aa8f00b2913e1fc82f1175a0b6b6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Hello World -- Your First Program (C# Programming Guide) | Microsoft Docs</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Hello World -- Your First Program (C# Programming Guide)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following procedure creates a C# version of the traditional "Hello World!"</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>program.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The program displays the string <ph id="ph1">`Hello World!`</ph></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more examples of introductory concepts, see <bpt id="p1">[</bpt>Getting Started with Visual C# and Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To create and run a console application</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Start Visual Studio.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>On the menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box opens.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Installed<ept id="p1">**</ept>, expand <bpt id="p2">**</bpt>Templates<ept id="p2">**</ept>, expand <bpt id="p3">**</bpt>Visual C#<ept id="p3">**</ept>, and then choose <bpt id="p4">**</bpt>Console Application<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, specify a name for your project, and then choose the <bpt id="p2">**</bpt>OK<ept id="p2">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The new project appears in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If Program.cs isn't open in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>, open the shortcut menu for <bpt id="p2">**</bpt>Program.cs<ept id="p2">**</ept> in <bpt id="p3">**</bpt>Solution Explorer<ept id="p3">**</ept>, and then choose <bpt id="p4">**</bpt>View Code<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Replace the contents of Program.cs with the following code.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuide#21<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/hello-world-your-first-program_1.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Choose the F5 key to run the project.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A Command Prompt window appears that contains the line <ph id="ph1">`Hello World!`</ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Next, the important parts of this program are examined.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Comments</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first line contains a comment.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The characters <ph id="ph1">`//`</ph> convert the rest of the line to a comment.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuide#32<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/hello-world-your-first-program_2.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can also comment out a block of text by enclosing it between the <ph id="ph1">`/*`</ph> and <ph id="ph2">`*/`</ph> characters.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This is shown in the following example.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuide#33<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/hello-world-your-first-program_3.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Main Method</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A C# console application must contain a <ph id="ph1">`Main`</ph> method, in which control starts and ends.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Main`</ph> method is where you create objects and execute other methods.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Main`</ph> method is a <bpt id="p1">[</bpt>static<ept id="p1">](../../../csharp/language-reference/keywords/static.md)</ept> method that resides inside a class or a struct.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the previous "Hello World!"</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>example, it resides in a class named <ph id="ph1">`Hello`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can declare the <ph id="ph1">`Main`</ph> method in one of the following ways:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It can return <ph id="ph1">`void`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuideMain#12<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/hello-world-your-first-program_4.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It can also return an integer.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuideMain#13<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/hello-world-your-first-program_5.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>With either of the return types, it can take arguments.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuideMain#19<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/hello-world-your-first-program_6.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuideMain#18<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/hello-world-your-first-program_7.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The parameter of the <ph id="ph1">`Main`</ph> method, <ph id="ph2">`args`</ph>, is a <ph id="ph3">`string`</ph> array that contains the command-line arguments used to invoke the program.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Unlike in C++, the array does not include the name of the executable (exe) file.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information about how to use command-line arguments, see the examples in <bpt id="p1">[</bpt>Main() and Command-Line Arguments<ept id="p1">](../../../csharp/programming-guide/main-and-command-args/index.md)</ept> and <bpt id="p2">[</bpt>How to: Create and Use Assemblies Using the Command Line<ept id="p2">](http://msdn.microsoft.com/library/70f65026-3687-4e9c-ab79-c18b97dd8be4)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The call to <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> at the end of the <ph id="ph2">`Main`</ph> method prevents the console window from closing before you have a chance to read the output when you run your program in debug mode, by pressing F5.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Input and Output</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>C# programs generally use the input/output services provided by the run-time library of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The statement <ph id="ph1">`System.Console.WriteLine("Hello World!");`</ph> uses the <ph id="ph2">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This is one of the output methods of the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class in the run-time library.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It displays its string parameter on the standard output stream followed by a new line.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Other <ph id="ph1">&lt;xref:System.Console&gt;</ph> methods are available for different input and output operations.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you include the <ph id="ph1">`using System;`</ph> directive at the beginning of the program, you can directly use the <ph id="ph2">&lt;xref:System&gt;</ph> classes and methods without fully qualifying them.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, you can call <ph id="ph1">`Console.WriteLine`</ph> instead of <ph id="ph2">`System.Console.WriteLine`</ph>:</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuide#1<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/hello-world-your-first-program_8.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>csProgGuide#23<ept id="p2">](../../../csharp/programming-guide/inside-a-program/codesnippet/CSharp/hello-world-your-first-program_9.cs)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information about input/output methods, see <ph id="ph1">&lt;xref:System.IO&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Command-Line Compilation and Execution</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can compile the "Hello World!"</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>program by using the command line instead of the Visual Studio Integrated Development Environment (IDE).</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To compile and run from a command prompt</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Paste the code from the preceding procedure into any text editor, and then save the file as a text file.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Name the file <ph id="ph1">`Hello.cs`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>C# source code files use the extension <ph id="ph1">`.cs`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Perform one of the following steps to open a command-prompt window:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In Windows 8, on the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> screen, search for <ph id="ph1">`Developer Command Prompt`</ph>, and then tap or choose <bpt id="p2">**</bpt>Developer Command Prompt for VS2012<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A Developer Command Prompt window appears.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In Windows 7, open the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, expand the folder for the current version of Visual Studio, open the shortcut menu for <bpt id="p2">**</bpt>Visual Studio Tools<ept id="p2">**</ept>, and then choose <bpt id="p3">**</bpt>Developer Command Prompt for VS2012<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A Developer Command Prompt window appears.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Enable command-line builds from a standard Command Prompt window.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>How to: Set Environment Variables for the Visual Studio Command Line<ept id="p1">](../../../csharp/language-reference/compiler-options/how-to-set-environment-variables-for-the-visual-studio-command-line.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In the command-prompt window, navigate to the folder that contains your <ph id="ph1">`Hello.cs`</ph> file.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Enter the following command to compile <ph id="ph1">`Hello.cs`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If your program has no compilation errors, an executable file that is named <ph id="ph1">`Hello.exe`</ph> is created.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In the command-prompt window, enter the following command to run the program:</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information about the C# compiler and its options, see <bpt id="p1">[</bpt>C# Compiler Options<ept id="p1">](../../../csharp/language-reference/compiler-options/index.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>See Also</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Programming Guide<ept id="p1">](../../../csharp/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Inside a C# Program<ept id="p1">](../../../csharp/programming-guide/inside-a-program/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Strings<ept id="p1">](../../../csharp/programming-guide/strings/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>paveover&gt;C# Sample Applications<ept id="p1">](http://msdn.microsoft.com/en-us/9a9d7aaa-51d3-4224-b564-95409b0f3e15)</ept><ph id="ph2"> </ph></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Reference<ept id="p1">](../../../csharp/language-reference/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Main() and Command-Line Arguments<ept id="p1">](../../../csharp/programming-guide/main-and-command-args/index.md)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting Started with Visual C# and Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/getting-started-with-visual-csharp-and-visual-basic)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>