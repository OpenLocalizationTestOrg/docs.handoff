<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="basic-sample.md" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0a91294" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22d5428da57b2fc8f9b97d4553b86ac2a918f0e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\wcf\samples\basic-sample.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net-med-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">MT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d4cf842e3d2d2843519232552b19d02be8be437</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc0eee73e85d58157ffe4b80be71dbdf78d7fe27</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Basic Sample</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Basic Sample</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This sample shows how to make a service discoverable and how to search for and call a discoverable service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This sample is composed of two projects: service and client.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This sample implements discovery in code.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For a sample that implements discovery in configuration, see <bpt id="p1">[</bpt>Configuration<ept id="p1">](../../../../docs/framework/wcf/samples/configuration-sample.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Service</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This is a simple calculator service implementation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The discovery related code can be found in <ph id="ph1">`Main`</ph> where a <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.ServiceDiscoveryBehavior&gt;</ph> is added to the service host and a <ph id="ph3">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph> is added as shown in the following code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Client</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The client uses a <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> to locate the service.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph>, a standard endpoint, resolves the endpoint of the service when the client is opened.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this case, the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> looks for the service based on the service contract.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> conducts the search over a <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.UdpDiscoveryEndpoint&gt;</ph> by default.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Once it locates a service endpoint, the client connects to that service over the specified binding.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The client defines a method called <ph id="ph1">`InvokeCalculatorService`</ph> that uses the <ph id="ph2">&lt;xref:System.ServiceModel.Discovery.DiscoveryClient&gt;</ph> class to search for services.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> inherits from <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>, so it can be passed to the <ph id="ph3">`InvokeCalculatorService`</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The example then uses the <ph id="ph1">&lt;xref:System.ServiceModel.Discovery.DynamicEndpoint&gt;</ph> to create an instance of <ph id="ph2">`CalculatorServiceClient`</ph> and calls the various operations of the calculator service.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To use this sample</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This sample uses HTTP endpoints and to run this sample, proper URL ACLs must be added.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring HTTP and HTTPS<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=70353)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Executing the following command at an elevated privilege should add the appropriate ACLs.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You may want to substitute your Domain and Username for the following arguments if the command does not work as is.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Using Visual Studio 2012, open the Basic.sln and build the sample.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Run the service.exe application.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>After the service has started, run the client.exe.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Observe that the client was able to find the service without knowing its address.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The samples may already be installed on your machine.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Check for the following (default) directory before continuing.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If this directory does not exist, go to <bpt id="p1">[</bpt>Windows Communication Foundation (WCF) and Windows Workflow Foundation (WF) Samples for .NET Framework 4<ept id="p1">](https://go.microsoft.com/fwlink/?LinkId=150780)</ept> to download all Windows Communication Foundation (WCF) and <ph id="ph1">[!INCLUDE[wf1](../../../../includes/wf1-md.md)]</ph> samples.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This sample is located in the following directory.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>