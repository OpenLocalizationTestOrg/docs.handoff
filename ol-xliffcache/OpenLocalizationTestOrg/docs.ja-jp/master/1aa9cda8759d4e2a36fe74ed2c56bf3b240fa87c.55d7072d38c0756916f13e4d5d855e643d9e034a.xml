{"content":"---\ntitle: \"ICorDebugProcess2::GetReferenceValueFromGCHandle Method | Microsoft Docs\"\nms.custom: \"\"\nms.date: \"03/30/2017\"\nms.prod: \".net-framework\"\nms.reviewer: \"\"\nms.suite: \"\"\nms.technology: \n  - \"dotnet-clr\"\nms.tgt_pltfrm: \"\"\nms.topic: \"reference\"\napi_name: \n  - \"ICorDebugProcess2.GetReferenceValueFromGCHandle\"\napi_location: \n  - \"mscordbi.dll\"\napi_type: \n  - \"COM\"\nf1_keywords: \n  - \"ICorDebugProcess2::GetReferenceValueFromGCHandle\"\ndev_langs: \n  - \"C++\"\nhelpviewer_keywords: \n  - \"GetReferenceValueFromGCHandle method [.NET Framework debugging]\"\n  - \"ICorDebugProcess2::GetReferenceValueFromGCHandle method [.NET Framework debugging]\"\nms.assetid: 8bdd7f4c-19f2-4ede-875e-603773e8c128\ntopic_type: \n  - \"apiref\"\ncaps.latest.revision: 11\nauthor: \"rpetrusha\"\nms.author: \"ronpet\"\nmanager: \"wpickett\"\n---\n# ICorDebugProcess2::GetReferenceValueFromGCHandle Method\nGets a reference pointer to the specified managed object that has a garbage collection handle.  \n  \n## Syntax  \n  \n```  \nHRESULT GetReferenceValueFromGCHandle (  \n    [in]  UINT_PTR                 handle,  \n    [out] ICorDebugReferenceValue  **pOutValue  \n);  \n```  \n  \n#### Parameters  \n `handle`  \n [in] A pointer to a managed object that has a garbage collection handle. This value is a <xref:System.IntPtr> object and can be retrieved from the <xref:System.Runtime.InteropServices.GCHandle> for the managed object.  \n  \n `pOutValue`  \n [out] A pointer to the address of an ICorDebugReferenceValue object that represents a reference to the specified managed object.  \n  \n## Remarks  \n Do not confuse the returned reference value with a garbage collection reference value.  \n  \n The returned reference behaves like a normal reference. It is disabled when code execution continues after a breakpoint. The lifetime of the target object is not affected by the lifetime of the reference value.  \n  \n> [!NOTE]\n>  The `GetReferenceValueFromGCHandle` method does not validate the handle. Therefore, the `GetReferenceValueFromGCHandle` method can potentially corrupt both the debugger and the code being debugged if an invalid handle is passed.  \n  \n## Requirements  \n **Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md).  \n  \n **Header:** CorDebug.idl, CorDebug.h  \n  \n **Library:** CorGuids.lib  \n  \n **.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]","nodes":[{"pos":[12,84],"content":"ICorDebugProcess2::GetReferenceValueFromGCHandle Method | Microsoft Docs","needQuote":false,"needEscape":true,"nodes":[{"content":"ICorDebugProcess2::GetReferenceValueFromGCHandle Method | Microsoft Docs","pos":[0,72]}]},{"pos":[808,863],"content":"ICorDebugProcess2::GetReferenceValueFromGCHandle Method","linkify":"ICorDebugProcess2::GetReferenceValueFromGCHandle Method","nodes":[{"content":"ICorDebugProcess2::GetReferenceValueFromGCHandle Method","pos":[0,55]}]},{"content":"Gets a reference pointer to the specified managed object that has a garbage collection handle.","pos":[864,958]},{"pos":[967,973],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1140,1150],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"[in] A pointer to a managed object that has a garbage collection handle.","pos":[1166,1238]},{"content":"This value is a <ph id=\"ph1\">&lt;xref:System.IntPtr&gt;</ph> object and can be retrieved from the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> for the managed object.","pos":[1239,1383],"source":" This value is a <xref:System.IntPtr> object and can be retrieved from the <xref:System.Runtime.InteropServices.GCHandle> for the managed object."},{"content":"[out] A pointer to the address of an ICorDebugReferenceValue object that represents a reference to the specified managed object.","pos":[1405,1533]},{"pos":[1542,1549],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Do not confuse the returned reference value with a garbage collection reference value.","pos":[1553,1639]},{"content":"The returned reference behaves like a normal reference.","pos":[1646,1701]},{"content":"It is disabled when code execution continues after a breakpoint.","pos":[1702,1766]},{"content":"The lifetime of the target object is not affected by the lifetime of the reference value.","pos":[1767,1856]},{"pos":[1864,2103],"content":"[!NOTE]\n The `GetReferenceValueFromGCHandle` method does not validate the handle. Therefore, the `GetReferenceValueFromGCHandle` method can potentially corrupt both the debugger and the code being debugged if an invalid handle is passed.","leadings":["","> "],"nodes":[{"content":" The `GetReferenceValueFromGCHandle` method does not validate the handle. Therefore, the `GetReferenceValueFromGCHandle` method can potentially corrupt both the debugger and the code being debugged if an invalid handle is passed.","pos":[8,237],"nodes":[{"content":"The <ph id=\"ph1\">`GetReferenceValueFromGCHandle`</ph> method does not validate the handle.","pos":[1,73],"source":" The `GetReferenceValueFromGCHandle` method does not validate the handle."},{"content":"Therefore, the <ph id=\"ph1\">`GetReferenceValueFromGCHandle`</ph> method can potentially corrupt both the debugger and the code being debugged if an invalid handle is passed.","pos":[74,229],"source":" Therefore, the `GetReferenceValueFromGCHandle` method can potentially corrupt both the debugger and the code being debugged if an invalid handle is passed."}]}]},{"pos":[2112,2124],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"pos":[2128,2232],"content":"<bpt id=\"p1\">**</bpt>Platforms:<ept id=\"p1\">**</ept> See <bpt id=\"p2\">[</bpt>System Requirements<ept id=\"p2\">](../../../../docs/framework/get-started/system-requirements.md)</ept>.","source":"**Platforms:** See [System Requirements](../../../../docs/framework/get-started/system-requirements.md)."},{"pos":[2239,2275],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> CorDebug.idl, CorDebug.h","source":"**Header:** CorDebug.idl, CorDebug.h"},{"pos":[2282,2307],"content":"<bpt id=\"p1\">**</bpt>Library:<ept id=\"p1\">**</ept> CorGuids.lib","source":"**Library:** CorGuids.lib"},{"pos":[2314,2422],"content":"<bpt id=\"p1\">**</bpt>.NET Framework Versions:<ept id=\"p1\">**</ept> <ph id=\"ph1\">[!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]</ph>","source":"**.NET Framework Versions:** [!INCLUDE[net_current_v20plus](../../../../includes/net-current-v20plus-md.md)]"}]}